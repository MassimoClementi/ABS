

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Mar 29 15:54:26 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataBANK0
    45  002A7E                     __pidataBANK0:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _delay_quartz_frequency_value
    49  002A7E  14                 	db	20
    50                           
    51                           ;initializer for _remote_frame_array
    52  002A7F  01                 	db	1
    53  002A80  00                 	db	0
    54  002A81  00                 	db	0
    55  002A82  00                 	db	0
    56  002A83  00                 	db	0
    57  002A84  00                 	db	0
    58  002A85  00                 	db	0
    59  002A86  00                 	db	0
    60  0000                     _RXB1CON	set	3920
    61  0000                     _RXB1CONbits	set	3920
    62  0000                     _RXB1D0	set	3926
    63  0000                     _RXB1D1	set	3927
    64  0000                     _RXB1D2	set	3928
    65  0000                     _RXB1D3	set	3929
    66  0000                     _RXB1D4	set	3930
    67  0000                     _RXB1D5	set	3931
    68  0000                     _RXB1D6	set	3932
    69  0000                     _RXB1D7	set	3933
    70  0000                     _RXB1DLC	set	3925
    71  0000                     _RXB1DLCbits	set	3925
    72  0000                     _RXB1EIDH	set	3923
    73  0000                     _RXB1EIDL	set	3924
    74  0000                     _RXB1SIDH	set	3921
    75  0000                     _RXB1SIDL	set	3922
    76  0000                     _RXB1SIDLbits	set	3922
    77  0000                     _RXF0EIDH	set	3842
    78  0000                     _RXF0EIDL	set	3843
    79  0000                     _RXF0SIDH	set	3840
    80  0000                     _RXF0SIDL	set	3841
    81  0000                     _RXF0SIDLbits	set	3841
    82  0000                     _RXF1EIDH	set	3846
    83  0000                     _RXF1EIDL	set	3847
    84  0000                     _RXF1SIDH	set	3844
    85  0000                     _RXF1SIDL	set	3845
    86  0000                     _RXF1SIDLbits	set	3845
    87  0000                     _RXF2EIDH	set	3850
    88  0000                     _RXF2EIDL	set	3851
    89  0000                     _RXF2SIDH	set	3848
    90  0000                     _RXF2SIDL	set	3849
    91  0000                     _RXF2SIDLbits	set	3849
    92  0000                     _RXF3EIDH	set	3854
    93  0000                     _RXF3EIDL	set	3855
    94  0000                     _RXF3SIDH	set	3852
    95  0000                     _RXF3SIDL	set	3853
    96  0000                     _RXF3SIDLbits	set	3853
    97  0000                     _RXF4EIDH	set	3858
    98  0000                     _RXF4EIDL	set	3859
    99  0000                     _RXF4SIDH	set	3856
   100  0000                     _RXF4SIDL	set	3857
   101  0000                     _RXF4SIDLbits	set	3857
   102  0000                     _RXF5EIDH	set	3862
   103  0000                     _RXF5EIDL	set	3863
   104  0000                     _RXF5SIDH	set	3860
   105  0000                     _RXF5SIDL	set	3861
   106  0000                     _RXF5SIDLbits	set	3861
   107  0000                     _RXM0EIDH	set	3866
   108  0000                     _RXM0EIDL	set	3867
   109  0000                     _RXM0SIDH	set	3864
   110  0000                     _RXM0SIDL	set	3865
   111  0000                     _RXM0SIDLbits	set	3865
   112  0000                     _RXM1EIDH	set	3870
   113  0000                     _RXM1EIDL	set	3871
   114  0000                     _RXM1SIDH	set	3868
   115  0000                     _RXM1SIDL	set	3869
   116  0000                     _RXM1SIDLbits	set	3869
   117  0000                     _TXB0CONbits	set	3904
   118  0000                     _TXB0D0	set	3910
   119  0000                     _TXB0D1	set	3911
   120  0000                     _TXB0D2	set	3912
   121  0000                     _TXB0D3	set	3913
   122  0000                     _TXB0D4	set	3914
   123  0000                     _TXB0D5	set	3915
   124  0000                     _TXB0D6	set	3916
   125  0000                     _TXB0D7	set	3917
   126  0000                     _TXB0DLC	set	3909
   127  0000                     _TXB0DLCbits	set	3909
   128  0000                     _TXB0EIDH	set	3907
   129  0000                     _TXB0EIDL	set	3908
   130  0000                     _TXB0SIDH	set	3905
   131  0000                     _TXB0SIDL	set	3906
   132  0000                     _TXB0SIDLbits	set	3906
   133  0000                     _TXB1CONbits	set	3888
   134  0000                     _TXB1D0	set	3894
   135  0000                     _TXB1D1	set	3895
   136  0000                     _TXB1D2	set	3896
   137  0000                     _TXB1D3	set	3897
   138  0000                     _TXB1D4	set	3898
   139  0000                     _TXB1D5	set	3899
   140  0000                     _TXB1D6	set	3900
   141  0000                     _TXB1D7	set	3901
   142  0000                     _TXB1DLC	set	3893
   143  0000                     _TXB1DLCbits	set	3893
   144  0000                     _TXB1EIDH	set	3891
   145  0000                     _TXB1EIDL	set	3892
   146  0000                     _TXB1SIDH	set	3889
   147  0000                     _TXB1SIDL	set	3890
   148  0000                     _TXB1SIDLbits	set	3890
   149  0000                     _TXB2CONbits	set	3872
   150  0000                     _TXB2D0	set	3878
   151  0000                     _TXB2D1	set	3879
   152  0000                     _TXB2D2	set	3880
   153  0000                     _TXB2D3	set	3881
   154  0000                     _TXB2D4	set	3882
   155  0000                     _TXB2D5	set	3883
   156  0000                     _TXB2D6	set	3884
   157  0000                     _TXB2D7	set	3885
   158  0000                     _TXB2DLC	set	3877
   159  0000                     _TXB2DLCbits	set	3877
   160  0000                     _TXB2EIDH	set	3875
   161  0000                     _TXB2EIDL	set	3876
   162  0000                     _TXB2SIDH	set	3873
   163  0000                     _TXB2SIDL	set	3874
   164  0000                     _TXB2SIDLbits	set	3874
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADCON1	set	4033
   167  0000                     _ADCON2bits	set	4032
   168  0000                     _ADRESH	set	4036
   169  0000                     _BRGCON1	set	3952
   170  0000                     _BRGCON2	set	3953
   171  0000                     _BRGCON2bits	set	3953
   172  0000                     _BRGCON3	set	3954
   173  0000                     _BRGCON3bits	set	3954
   174  0000                     _CANCON	set	3951
   175  0000                     _CANCONbits	set	3951
   176  0000                     _CANSTAT	set	3950
   177  0000                     _COMSTATbits	set	3956
   178  0000                     _INTCON2bits	set	4081
   179  0000                     _INTCON3bits	set	4080
   180  0000                     _INTCONbits	set	4082
   181  0000                     _IPR1bits	set	3999
   182  0000                     _IPR2bits	set	4002
   183  0000                     _IPR3bits	set	4005
   184  0000                     _LATA	set	3977
   185  0000                     _LATB	set	3978
   186  0000                     _LATC	set	3979
   187  0000                     _LATD	set	3980
   188  0000                     _LATE	set	3981
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIE2bits	set	4000
   191  0000                     _PIE3bits	set	4003
   192  0000                     _PIR1bits	set	3998
   193  0000                     _PIR2bits	set	4001
   194  0000                     _PIR3bits	set	4004
   195  0000                     _PORTAbits	set	3968
   196  0000                     _PORTCbits	set	3970
   197  0000                     _RCONbits	set	4048
   198  0000                     _RXB0CON	set	3936
   199  0000                     _RXB0CONbits	set	3936
   200  0000                     _RXB0D0	set	3942
   201  0000                     _RXB0D1	set	3943
   202  0000                     _RXB0D2	set	3944
   203  0000                     _RXB0D3	set	3945
   204  0000                     _RXB0D4	set	3946
   205  0000                     _RXB0D5	set	3947
   206  0000                     _RXB0D6	set	3948
   207  0000                     _RXB0D7	set	3949
   208  0000                     _RXB0DLC	set	3941
   209  0000                     _RXB0DLCbits	set	3941
   210  0000                     _RXB0EIDH	set	3939
   211  0000                     _RXB0EIDL	set	3940
   212  0000                     _RXB0SIDH	set	3937
   213  0000                     _RXB0SIDL	set	3938
   214  0000                     _RXB0SIDLbits	set	3938
   215  0000                     _RXERRCNT	set	3957
   216  0000                     _T0CON	set	4053
   217  0000                     _T0CONbits	set	4053
   218  0000                     _T1CON	set	4045
   219  0000                     _T1CONbits	set	4045
   220  0000                     _T3CON	set	4017
   221  0000                     _T3CONbits	set	4017
   222  0000                     _TMR0H	set	4055
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR1H	set	4047
   225  0000                     _TMR1L	set	4046
   226  0000                     _TMR3H	set	4019
   227  0000                     _TMR3L	set	4018
   228  0000                     _TRISA	set	3986
   229  0000                     _TRISB	set	3987
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISD	set	3989
   232  0000                     _TRISE	set	3990
   233  0000                     _TXERRCNT	set	3958
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  0028E6                     __pcinit:
   239                           	opt stack 0
   240  0028E6                     start_initialization:
   241                           	opt stack 0
   242  0028E6                     __initialization:
   243                           	opt stack 0
   244                           
   245                           ; Clear objects allocated to BANK0 (82 bytes)
   246  0028E6  EE00  F060         	lfsr	0,__pbssBANK0
   247  0028EA  0E52               	movlw	82
   248  0028EC                     clear_0:
   249  0028EC  6AEE               	clrf	postinc0,c
   250  0028EE  06E8               	decf	wreg,f,c
   251  0028F0  E1FD               	bnz	clear_0
   252                           
   253                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   254  0028F2  6A3E               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   255  0028F4  6A3D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   256                           
   257                           ; Clear objects allocated to COMRAM (21 bytes)
   258  0028F6  EE00  F028         	lfsr	0,__pbssCOMRAM
   259  0028FA  0E15               	movlw	21
   260  0028FC                     clear_1:
   261  0028FC  6AEE               	clrf	postinc0,c
   262  0028FE  06E8               	decf	wreg,f,c
   263  002900  E1FD               	bnz	clear_1
   264                           
   265                           ; Initialize objects allocated to BANK0 (9 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  002902  0E7E               	movlw	low __pidataBANK0
   268  002904  6EF6               	movwf	tblptrl,c
   269  002906  0E2A               	movlw	high __pidataBANK0
   270  002908  6EF7               	movwf	tblptrh,c
   271  00290A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  00290C  6EF8               	movwf	tblptru,c
   273  00290E  EE00  F0DD         	lfsr	0,__pdataBANK0
   274  002912  EE10 F009          	lfsr	1,9
   275  002916                     copy_data0:
   276  002916  0009               	tblrd		*+
   277  002918  CFF5 FFEE          	movff	tablat,postinc0
   278  00291C  50E5               	movf	postdec1,w,c
   279  00291E  50E1               	movf	fsr1l,w,c
   280  002920  E1FA               	bnz	copy_data0
   281  002922                     end_of_initialization:
   282                           	opt stack 0
   283  002922                     __end_of__initialization:
   284                           	opt stack 0
   285  002922  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   286  002924  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   287  002926  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  002928  6EF8               	movwf	tblptru,c
   289  00292A  0100               	movlb	0
   290  00292C  EF8A  F00F         	goto	_main	;jump to C main() function
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bitbssCOMRAM
   301  0001E8                     __pbitbssCOMRAM:
   302                           	opt stack 0
   303  0001E8                     _ENC1_measure:
   304                           	opt stack 0
   305  0001E8                     	ds	1
   306  0001E9                     _ENC2_measure:
   307                           	opt stack 0
   308  0001E9                     	ds	1
   309  0001EA                     _TMR1_overflow:
   310                           	opt stack 0
   311  0001EA                     	ds	1
   312  0001EB                     _TMR3_overflow:
   313                           	opt stack 0
   314  0001EB                     	ds	1
   315  0001EC                     _Tx_retry:
   316                           	opt stack 0
   317  0001EC                     	ds	1
   318  0001ED                     _count_flag:
   319                           	opt stack 0
   320  0001ED                     	ds	1
   321  0001EE                     _distance_reached_flag:
   322                           	opt stack 0
   323  0001EE                     	ds	1
   324  0001EF                     _distance_set_flag:
   325                           	opt stack 0
   326  0001EF                     	ds	1
   327  0001F0                     _remote_frame:
   328                           	opt stack 0
   329  0001F0                     	ds	1
   330  0001F1                     _x:
   331                           	opt stack 0
   332  0001F1                     	ds	1
   333  0001F2                     _y:
   334                           	opt stack 0
   335  0001F2                     	ds	1
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	bssCOMRAM
   346  000028                     __pbssCOMRAM:
   347                           	opt stack 0
   348  000028                     _data_debug1:
   349                           	opt stack 0
   350  000028                     	ds	8
   351  000030                     _timer_off:
   352                           	opt stack 0
   353  000030                     	ds	4
   354  000034                     _timer_on:
   355                           	opt stack 0
   356  000034                     	ds	4
   357  000038                     _gap_time_1:
   358                           	opt stack 0
   359  000038                     	ds	2
   360  00003A                     _gap_time_2:
   361                           	opt stack 0
   362  00003A                     	ds	2
   363  00003C                     _brake_value_degree:
   364                           	opt stack 0
   365  00003C                     	ds	1
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	bssBANK0
   376  000060                     __pbssBANK0:
   377                           	opt stack 0
   378  000060                     _int_counter_1:
   379                           	opt stack 0
   380  000060                     	ds	4
   381  000064                     _int_counter_2:
   382                           	opt stack 0
   383  000064                     	ds	4
   384  000068                     _remote_frame_id:
   385                           	opt stack 0
   386  000068                     	ds	4
   387  00006C                     _wheel_speed_1:
   388                           	opt stack 0
   389  00006C                     	ds	4
   390  000070                     _wheel_speed_2:
   391                           	opt stack 0
   392  000070                     	ds	4
   393  000074                     _clock_counter_reference:
   394                           	opt stack 0
   395  000074                     	ds	2
   396  000076                     _correction_factor:
   397                           	opt stack 0
   398  000076                     	ds	2
   399  000078                     _distance_1:
   400                           	opt stack 0
   401  000078                     	ds	2
   402  00007A                     _distance_2:
   403                           	opt stack 0
   404  00007A                     	ds	2
   405  00007C                     _distance_actual_value:
   406                           	opt stack 0
   407  00007C                     	ds	2
   408  00007E                     _distance_set_counter_1:
   409                           	opt stack 0
   410  00007E                     	ds	2
   411  000080                     _distance_set_counter_2:
   412                           	opt stack 0
   413  000080                     	ds	2
   414  000082                     _distance_set_value:
   415                           	opt stack 0
   416  000082                     	ds	2
   417  000084                     _Analogic_Mode:
   418                           	opt stack 0
   419  000084                     	ds	1
   420  000085                     _brake_signal_CAN:
   421                           	opt stack 0
   422  000085                     	ds	1
   423  000086                     _brake_value_inc:
   424                           	opt stack 0
   425  000086                     	ds	1
   426  000087                     _home_position:
   427                           	opt stack 0
   428  000087                     	ds	1
   429  000088                     _read:
   430                           	opt stack 0
   431  000088                     	ds	1
   432  000089                     _step:
   433                           	opt stack 0
   434  000089                     	ds	1
   435  00008A                     _msg:
   436                           	opt stack 0
   437  00008A                     	ds	15
   438  000099                     _distance_array:
   439                           	opt stack 0
   440  000099                     	ds	8
   441  0000A1                     _speed_array:
   442                           	opt stack 0
   443  0000A1                     	ds	8
   444  0000A9                     _status_array:
   445                           	opt stack 0
   446  0000A9                     	ds	8
   447  0000B1                     _brake_value:
   448                           	opt stack 0
   449  0000B1                     	ds	1
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           
   459                           	psect	dataBANK0
   460  0000DD                     __pdataBANK0:
   461                           	opt stack 0
   462  0000DD                     _delay_quartz_frequency_value:
   463                           	opt stack 0
   464  0000DD                     	ds	1
   465  0000DE                     _remote_frame_array:
   466                           	opt stack 0
   467  0000DE                     	ds	8
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	cstackBANK1
   478  000100                     __pcstackBANK1:
   479                           	opt stack 0
   480  000100                     ?___aldiv:
   481                           	opt stack 0
   482  000100                     CANInitialize@phaseSeg1:
   483                           	opt stack 0
   484  000100                     ___aldiv@dividend:
   485                           	opt stack 0
   486                           
   487                           ; 4 bytes @ 0x0
   488  000100                     	ds	1
   489  000101                     CANInitialize@phaseSeg2:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x1
   493  000101                     	ds	1
   494  000102                     CANInitialize@SJW:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x2
   498  000102                     	ds	1
   499  000103                     CANInitialize@BRP:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x3
   503  000103                     	ds	1
   504  000104                     CANInitialize@flags:
   505                           	opt stack 0
   506  000104                     ___aldiv@divisor:
   507                           	opt stack 0
   508                           
   509                           ; 4 bytes @ 0x4
   510  000104                     	ds	1
   511  000105                     ??_CANInitialize:
   512                           
   513                           ; 0 bytes @ 0x5
   514  000105                     	ds	3
   515  000108                     ___aldiv@counter:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x8
   519  000108                     	ds	1
   520  000109                     ___aldiv@sign:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x9
   524  000109                     	ds	1
   525  00010A                     ___aldiv@quotient:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0xA
   529  00010A                     	ds	4
   530  00010E                     ??_main:
   531                           
   532                           ; 0 bytes @ 0xE
   533  00010E                     	ds	2
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543                           	psect	cstackBANK0
   544  0000B2                     __pcstackBANK0:
   545                           	opt stack 0
   546  0000B2                     i2___awdiv@counter:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x0
   550  0000B2                     	ds	1
   551  0000B3                     i2___awdiv@sign:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x1
   555  0000B3                     	ds	1
   556  0000B4                     i2___awdiv@quotient:
   557                           	opt stack 0
   558                           
   559                           ; 2 bytes @ 0x2
   560  0000B4                     	ds	2
   561  0000B6                     ??_ISR_Alta:
   562                           
   563                           ; 0 bytes @ 0x4
   564  0000B6                     	ds	22
   565  0000CC                     ?___wmul:
   566                           	opt stack 0
   567  0000CC                     ?___awdiv:
   568                           	opt stack 0
   569  0000CC                     ?___lmul:
   570                           	opt stack 0
   571  0000CC                     CANOperationMode@mode:
   572                           	opt stack 0
   573  0000CC                     _CANisTxReady$3282:
   574                           	opt stack 0
   575  0000CC                     ___wmul@multiplier:
   576                           	opt stack 0
   577  0000CC                     ___awdiv@dividend:
   578                           	opt stack 0
   579  0000CC                     CANsendMessage@identifier:
   580                           	opt stack 0
   581  0000CC                     CANSetMask@mask:
   582                           	opt stack 0
   583  0000CC                     CANSetFilter@filter:
   584                           	opt stack 0
   585  0000CC                     ___lmul@multiplier:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x1A
   589  0000CC                     	ds	2
   590  0000CE                     ___wmul@multiplicand:
   591                           	opt stack 0
   592  0000CE                     ___awdiv@divisor:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x1C
   596  0000CE                     	ds	2
   597  0000D0                     CANSetMask@type:
   598                           	opt stack 0
   599  0000D0                     CANSetFilter@type:
   600                           	opt stack 0
   601  0000D0                     ___awdiv@counter:
   602                           	opt stack 0
   603  0000D0                     CANsendMessage@data:
   604                           	opt stack 0
   605  0000D0                     ___wmul@product:
   606                           	opt stack 0
   607  0000D0                     ___lmul@multiplicand:
   608                           	opt stack 0
   609                           
   610                           ; 4 bytes @ 0x1E
   611  0000D0                     	ds	1
   612  0000D1                     ??_CANSetMask:
   613  0000D1                     ??_CANSetFilter:
   614  0000D1                     ___awdiv@sign:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x1F
   618  0000D1                     	ds	1
   619  0000D2                     CANsendMessage@dataLength:
   620                           	opt stack 0
   621  0000D2                     delay_ms@value_ms:
   622                           	opt stack 0
   623  0000D2                     ___awdiv@quotient:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x20
   627  0000D2                     	ds	1
   628  0000D3                     CANsendMessage@flags:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x21
   632  0000D3                     	ds	1
   633  0000D4                     ??_CANsendMessage:
   634  0000D4                     ___lmul@product:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0x22
   638  0000D4                     	ds	1
   639  0000D5                     CANSetMask@numBuffer:
   640                           	opt stack 0
   641  0000D5                     CANSetFilter@numBuffer:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x23
   645  0000D5                     	ds	1
   646  0000D6                     CANSetMask@tamp:
   647                           	opt stack 0
   648  0000D6                     CANSetFilter@tamp:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x24
   652  0000D6                     	ds	2
   653  0000D8                     CANsendMessage@tamp:
   654                           	opt stack 0
   655                           
   656                           ; 4 bytes @ 0x26
   657  0000D8                     	ds	2
   658  0000DA                     CANInitialize@propSeg:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x28
   662  0000DA                     	ds	1
   663  0000DB                     CANInitialize@FilterConfig1:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x29
   667  0000DB                     	ds	1
   668  0000DC                     ??_remote_frame_handler:
   669  0000DC                     CANInitialize@FilterConfig2:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x2A
   673  0000DC                     	ds	1
   674  0000DD                     tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           postinc0	equ	0xFEE
   679                           wreg	equ	0xFE8
   680                           postdec1	equ	0xFE5
   681                           fsr1l	equ	0xFE1
   682                           
   683                           ; 0 bytes @ 0x2B
   684                           
   685                           	psect	cstackCOMRAM
   686  000001                     __pcstackCOMRAM:
   687                           	opt stack 0
   688  000001                     _CANisRxReady$3284:
   689                           	opt stack 0
   690  000001                     CANreceiveMessage@msg:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x0
   694  000001                     	ds	2
   695  000003                     ??_CANreceiveMessage:
   696                           
   697                           ; 0 bytes @ 0x2
   698  000003                     	ds	8
   699  00000B                     CANreceiveMessage@error:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0xA
   703  00000B                     	ds	1
   704  00000C                     CANreceiveMessage@tamp:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0xB
   708  00000C                     	ds	1
   709  00000D                     ??_ISR_Bassa:
   710                           
   711                           ; 0 bytes @ 0xC
   712  00000D                     	ds	17
   713  00001E                     ?___lwdiv:
   714                           	opt stack 0
   715  00001E                     ?i2___wmul:
   716                           	opt stack 0
   717  00001E                     WriteTimer0@timer0:
   718                           	opt stack 0
   719  00001E                     ___lwdiv@dividend:
   720                           	opt stack 0
   721  00001E                     i2___wmul@multiplier:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x1D
   725  00001E                     	ds	2
   726  000020                     WriteTimer0@timer:
   727                           	opt stack 0
   728  000020                     ___lwdiv@divisor:
   729                           	opt stack 0
   730  000020                     i2___wmul@multiplicand:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x1F
   734  000020                     	ds	2
   735  000022                     ___lwdiv@quotient:
   736                           	opt stack 0
   737  000022                     i2___wmul@product:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x21
   741  000022                     	ds	2
   742  000024                     ?i2___awdiv:
   743                           	opt stack 0
   744  000024                     ___lwdiv@counter:
   745                           	opt stack 0
   746  000024                     i2___awdiv@dividend:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x23
   750  000024                     	ds	2
   751  000026                     i2___awdiv@divisor:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x25
   755  000026                     	ds	2
   756  000028                     tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           fsr1l	equ	0xFE1
   764                           
   765                           ; 0 bytes @ 0x27
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 255 in file "ABS_Code.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  2  713[None  ] int 
   778 ;; Registers used:
   779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   785 ;;      Params:         0       0       0       0
   786 ;;      Locals:         0       0       0       0
   787 ;;      Temps:          0       0       2       0
   788 ;;      Totals:         0       0       2       0
   789 ;;Total ram usage:        2 bytes
   790 ;; Hardware stack levels required when called:    7
   791 ;; This function calls:
   792 ;;		_ADC_Read
   793 ;;		_CANisRXwarningON
   794 ;;		_CANisTXwarningON
   795 ;;		___aldiv
   796 ;;		___awdiv
   797 ;;		___lmul
   798 ;;		___wmul
   799 ;;		_board_initialization
   800 ;;		_delay_ms
   801 ;;		_remote_frame_handler
   802 ;; This function is called by:
   803 ;;		Startup code after reset
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text0
   808  001F14                     __ptext0:
   809                           	opt stack 0
   810  001F14                     _main:
   811                           	opt stack 24
   812                           
   813                           ;ABS_Code.c: 256: board_initialization();
   814                           
   815                           ;incstack = 0
   816  001F14  EC65  F013         	call	_board_initialization	;wreg free
   817                           
   818                           ;ABS_Code.c: 257: step = (11 * (3.1415)) / 16;
   819  001F18  0E02               	movlw	2
   820  001F1A  0100               	movlb	0	; () banked
   821  001F1C  6F89               	movwf	_step& (0+255),b
   822                           
   823                           ; BSR set to: 0
   824                           ;ABS_Code.c: 260: PORTAbits.RA1 = 1;
   825  001F1E  8280               	bsf	3968,1,c	;volatile
   826                           
   827                           ; BSR set to: 0
   828                           ;ABS_Code.c: 261: PORTCbits.RC1 = 1;
   829  001F20  8282               	bsf	3970,1,c	;volatile
   830                           
   831                           ; BSR set to: 0
   832                           ;ABS_Code.c: 262: delay_ms(500);
   833  001F22  0E01               	movlw	1
   834  001F24  0100               	movlb	0	; () banked
   835  001F26  6FD3               	movwf	(delay_ms@value_ms+1)& (0+255),b
   836  001F28  0EF4               	movlw	244
   837  001F2A  6FD2               	movwf	delay_ms@value_ms& (0+255),b
   838  001F2C  ECB7  F014         	call	_delay_ms	;wreg free
   839                           
   840                           ;ABS_Code.c: 263: PORTAbits.RA1 = 0;
   841  001F30  9280               	bcf	3968,1,c	;volatile
   842                           
   843                           ;ABS_Code.c: 264: PORTCbits.RC1 = 0;
   844  001F32  9282               	bcf	3970,1,c	;volatile
   845                           
   846                           ;ABS_Code.c: 265: delay_ms(100);
   847  001F34  0E00               	movlw	0
   848  001F36  0100               	movlb	0	; () banked
   849  001F38  6FD3               	movwf	(delay_ms@value_ms+1)& (0+255),b
   850  001F3A  0E64               	movlw	100
   851  001F3C  6FD2               	movwf	delay_ms@value_ms& (0+255),b
   852  001F3E  ECB7  F014         	call	_delay_ms	;wreg free
   853  001F42                     l4586:
   854                           
   855                           ;ABS_Code.c: 268: ADC_Read();
   856  001F42  EC98  F014         	call	_ADC_Read	;wreg free
   857                           
   858                           ;ABS_Code.c: 269: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   859  001F46  EC33  F015         	call	_CANisTXwarningON	;wreg free
   860  001F4A  06E8               	decf	wreg,f,c
   861  001F4C  B4D8               	btfsc	status,2,c
   862  001F4E  D005               	goto	l717
   863  001F50  EC39  F015         	call	_CANisRXwarningON	;wreg free
   864  001F54  06E8               	decf	wreg,f,c
   865  001F56  A4D8               	btfss	status,2,c
   866  001F58  D004               	goto	l715
   867  001F5A                     l717:
   868                           
   869                           ;ABS_Code.c: 270: PORTAbits.RA1 = 1;
   870  001F5A  8280               	bsf	3968,1,c	;volatile
   871                           
   872                           ;ABS_Code.c: 271: COMSTATbits.TXWARN = 0;
   873  001F5C  9474               	bcf	3956,2,c	;volatile
   874                           
   875                           ;ABS_Code.c: 272: COMSTATbits.RXWARN = 0;
   876  001F5E  9274               	bcf	3956,1,c	;volatile
   877                           
   878                           ;ABS_Code.c: 273: } else {
   879  001F60  D001               	goto	l718
   880  001F62                     l715:
   881                           
   882                           ;ABS_Code.c: 274: PORTAbits.RA1 = 0;
   883  001F62  9280               	bcf	3968,1,c	;volatile
   884  001F64                     l718:
   885                           
   886                           ;ABS_Code.c: 275: }
   887                           ;ABS_Code.c: 277: if (distance_set_flag == 1) {
   888  001F64  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   889  001F66  D02A               	goto	l719
   890                           
   891                           ;ABS_Code.c: 278: distance_actual_value = (step * (distance_set_counter_1 + distance_set
      +                          _counter_2)) / 2;
   892  001F68  0100               	movlb	0	; () banked
   893  001F6A  5180               	movf	_distance_set_counter_2& (0+255),w,b	;volatile
   894  001F6C  0100               	movlb	0	; () banked
   895  001F6E  257E               	addwf	_distance_set_counter_1& (0+255),w,b	;volatile
   896  001F70  0100               	movlb	0	; () banked
   897  001F72  6FCC               	movwf	___wmul@multiplier& (0+255),b
   898  001F74  0100               	movlb	0	; () banked
   899  001F76  5181               	movf	(_distance_set_counter_2+1)& (0+255),w,b	;volatile
   900  001F78  0100               	movlb	0	; () banked
   901  001F7A  217F               	addwfc	(_distance_set_counter_1+1)& (0+255),w,b	;volatile
   902  001F7C  0100               	movlb	0	; () banked
   903  001F7E  6FCD               	movwf	(___wmul@multiplier+1)& (0+255),b
   904  001F80  C089  F0CE         	movff	_step,___wmul@multiplicand
   905  001F84  0100               	movlb	0	; () banked
   906  001F86  6BCF               	clrf	(___wmul@multiplicand+1)& (0+255),b
   907  001F88  ECD4  F014         	call	___wmul	;wreg free
   908  001F8C  90D8               	bcf	status,0,c
   909  001F8E  0100               	movlb	0	; () banked
   910  001F90  31CD               	rrcf	(?___wmul+1)& (0+255),w,b
   911  001F92  0101               	movlb	1	; () banked
   912  001F94  6F0E               	movwf	??_main& (0+255),b
   913  001F96  0100               	movlb	0	; () banked
   914  001F98  31CC               	rrcf	?___wmul& (0+255),w,b
   915  001F9A  0100               	movlb	0	; () banked
   916  001F9C  6F7C               	movwf	_distance_actual_value& (0+255),b	;volatile
   917  001F9E  C10E  F07D         	movff	??_main,_distance_actual_value+1	;volatile
   918                           
   919                           ; BSR set to: 0
   920                           ;ABS_Code.c: 279: if (distance_actual_value > distance_set_value) {
   921  001FA2  0100               	movlb	0	; () banked
   922  001FA4  517C               	movf	_distance_actual_value& (0+255),w,b	;volatile
   923  001FA6  0100               	movlb	0	; () banked
   924  001FA8  5D82               	subwf	_distance_set_value& (0+255),w,b	;volatile
   925  001FAA  0100               	movlb	0	; () banked
   926  001FAC  517D               	movf	(_distance_actual_value+1)& (0+255),w,b	;volatile
   927  001FAE  0100               	movlb	0	; () banked
   928  001FB0  5983               	subwfb	(_distance_set_value+1)& (0+255),w,b	;volatile
   929  001FB2  B0D8               	btfsc	status,0,c
   930  001FB4  D003               	goto	l719
   931                           
   932                           ; BSR set to: 0
   933                           ;ABS_Code.c: 280: distance_set_flag = 0;
   934  001FB6  9E3D               	bcf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   935                           
   936                           ;ABS_Code.c: 281: distance_reached_flag = 1;
   937  001FB8  8C3D               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
   938                           
   939                           ;ABS_Code.c: 282: Tx_retry = 1;
   940  001FBA  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   941  001FBC                     l719:
   942                           
   943                           ;ABS_Code.c: 283: }
   944                           ;ABS_Code.c: 284: }
   945                           ;ABS_Code.c: 286: if ((remote_frame == 1) || (Tx_retry == 1)) {
   946  001FBC  B03E               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   947  001FBE  D002               	goto	l723
   948  001FC0  A83D               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   949  001FC2  D003               	goto	l4602
   950  001FC4                     l723:
   951                           
   952                           ;ABS_Code.c: 287: remote_frame = 0;
   953  001FC4  903E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   954                           
   955                           ;ABS_Code.c: 288: remote_frame_handler();
   956  001FC6  ECAD  F010         	call	_remote_frame_handler	;wreg free
   957  001FCA                     l4602:
   958                           
   959                           ;ABS_Code.c: 289: }
   960                           ;ABS_Code.c: 291: if (Analogic_Mode == 0b00000000) {
   961  001FCA  0100               	movlb	0	; () banked
   962  001FCC  5184               	movf	_Analogic_Mode& (0+255),w,b	;volatile
   963  001FCE  A4D8               	btfss	status,2,c
   964  001FD0  D01E               	goto	l724
   965                           
   966                           ; BSR set to: 0
   967                           ;ABS_Code.c: 292: if (brake_signal_CAN == 0b00000000) {
   968  001FD2  0100               	movlb	0	; () banked
   969  001FD4  5185               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
   970  001FD6  A4D8               	btfss	status,2,c
   971  001FD8  D003               	goto	l4608
   972                           
   973                           ; BSR set to: 0
   974                           ;ABS_Code.c: 293: brake_value_inc = 0;
   975  001FDA  0E00               	movlw	0
   976  001FDC  0100               	movlb	0	; () banked
   977  001FDE  6F86               	movwf	_brake_value_inc& (0+255),b
   978  001FE0                     l4608:
   979                           
   980                           ; BSR set to: 0
   981                           ;ABS_Code.c: 294: }
   982                           ;ABS_Code.c: 295: if (brake_signal_CAN == 0b00000001) {
   983  001FE0  0100               	movlb	0	; () banked
   984  001FE2  0585               	decf	_brake_signal_CAN& (0+255),w,b	;volatile
   985  001FE4  A4D8               	btfss	status,2,c
   986  001FE6  D003               	goto	l4612
   987                           
   988                           ; BSR set to: 0
   989                           ;ABS_Code.c: 296: brake_value_inc = 150;
   990  001FE8  0E96               	movlw	150
   991  001FEA  0100               	movlb	0	; () banked
   992  001FEC  6F86               	movwf	_brake_value_inc& (0+255),b
   993  001FEE                     l4612:
   994                           
   995                           ; BSR set to: 0
   996                           ;ABS_Code.c: 297: }
   997                           ;ABS_Code.c: 298: if (brake_signal_CAN == 0b00000010) {
   998  001FEE  0E02               	movlw	2
   999  001FF0  0100               	movlb	0	; () banked
  1000  001FF2  1985               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1001  001FF4  A4D8               	btfss	status,2,c
  1002  001FF6  D003               	goto	l4616
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;ABS_Code.c: 299: brake_value_inc = 200;
  1006  001FF8  0EC8               	movlw	200
  1007  001FFA  0100               	movlb	0	; () banked
  1008  001FFC  6F86               	movwf	_brake_value_inc& (0+255),b
  1009  001FFE                     l4616:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;ABS_Code.c: 300: }
  1013                           ;ABS_Code.c: 301: if (brake_signal_CAN == 0b00000011) {
  1014  001FFE  0E03               	movlw	3
  1015  002000  0100               	movlb	0	; () banked
  1016  002002  1985               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1017  002004  A4D8               	btfss	status,2,c
  1018  002006  D005               	goto	l4620
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;ABS_Code.c: 302: brake_value_inc = 255;
  1022  002008  0100               	movlb	0	; () banked
  1023  00200A  6986               	setf	_brake_value_inc& (0+255),b
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;ABS_Code.c: 303: }
  1027                           ;ABS_Code.c: 304: } else {
  1028  00200C  D002               	goto	l4620
  1029  00200E                     l724:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;ABS_Code.c: 305: brake_value_inc = brake_signal_CAN;
  1033  00200E  C085  F086         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
  1034  002012                     l4620:
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;ABS_Code.c: 306: }
  1038                           ;ABS_Code.c: 308: brake_value = (brake_value_inc / 17) + home_position;
  1039  002012  C086  F0CC         	movff	_brake_value_inc,___awdiv@dividend
  1040  002016  0100               	movlb	0	; () banked
  1041  002018  6BCD               	clrf	(___awdiv@dividend+1)& (0+255),b
  1042  00201A  0E00               	movlw	0
  1043  00201C  0100               	movlb	0	; () banked
  1044  00201E  6FCF               	movwf	(___awdiv@divisor+1)& (0+255),b
  1045  002020  0E11               	movlw	17
  1046  002022  6FCE               	movwf	___awdiv@divisor& (0+255),b
  1047  002024  EC06  F013         	call	___awdiv	;wreg free
  1048  002028  0100               	movlb	0	; () banked
  1049  00202A  51CC               	movf	?___awdiv& (0+255),w,b
  1050  00202C  0100               	movlb	0	; () banked
  1051  00202E  2587               	addwf	_home_position& (0+255),w,b
  1052  002030  0100               	movlb	0	; () banked
  1053  002032  6FB1               	movwf	_brake_value& (0+255),b
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;ABS_Code.c: 309: brake_value_degree = (180 * brake_value) / 255;
  1057  002034  0100               	movlb	0	; () banked
  1058  002036  51B1               	movf	_brake_value& (0+255),w,b
  1059  002038  0DB4               	mullw	180
  1060  00203A  CFF3 F0CC          	movff	prodl,___awdiv@dividend
  1061  00203E  CFF4 F0CD          	movff	prodh,___awdiv@dividend+1
  1062  002042  0E00               	movlw	0
  1063  002044  0100               	movlb	0	; () banked
  1064  002046  6FCF               	movwf	(___awdiv@divisor+1)& (0+255),b
  1065  002048  69CE               	setf	___awdiv@divisor& (0+255),b
  1066  00204A  EC06  F013         	call	___awdiv	;wreg free
  1067  00204E  0100               	movlb	0	; () banked
  1068  002050  51CC               	movf	?___awdiv& (0+255),w,b
  1069  002052  6E3C               	movwf	_brake_value_degree,c
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;ABS_Code.c: 311: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1073  002054  B03D               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1074  002056  D002               	goto	l732
  1075                           
  1076                           ; BSR set to: 0
  1077  002058  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1078  00205A  D03D               	goto	l4640
  1079  00205C                     l732:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;ABS_Code.c: 312: if (TMR1_overflow == 1) {
  1083  00205C  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1084  00205E  D00B               	goto	l4632
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;ABS_Code.c: 313: wheel_speed_1 = 0;
  1088  002060  0E00               	movlw	0
  1089  002062  0100               	movlb	0	; () banked
  1090  002064  6F6C               	movwf	_wheel_speed_1& (0+255),b	;volatile
  1091  002066  0E00               	movlw	0
  1092  002068  6F6D               	movwf	(_wheel_speed_1+1)& (0+255),b	;volatile
  1093  00206A  0E00               	movlw	0
  1094  00206C  6F6E               	movwf	(_wheel_speed_1+2)& (0+255),b	;volatile
  1095  00206E  0E00               	movlw	0
  1096  002070  6F6F               	movwf	(_wheel_speed_1+3)& (0+255),b	;volatile
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;ABS_Code.c: 314: TMR1_overflow = 0;
  1100  002072  943D               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1101                           
  1102                           ;ABS_Code.c: 315: } else {
  1103  002074  D02B               	goto	l4634
  1104  002076                     l4632:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;ABS_Code.c: 316: wheel_speed_1 = (step * 100000) / gap_time_1;
  1108  002076  0100               	movlb	0	; () banked
  1109  002078  5189               	movf	_step& (0+255),w,b
  1110  00207A  0100               	movlb	0	; () banked
  1111  00207C  6FCC               	movwf	___lmul@multiplier& (0+255),b
  1112  00207E  6BCD               	clrf	(___lmul@multiplier+1)& (0+255),b
  1113  002080  6BCE               	clrf	(___lmul@multiplier+2)& (0+255),b
  1114  002082  6BCF               	clrf	(___lmul@multiplier+3)& (0+255),b
  1115  002084  0EA0               	movlw	160
  1116  002086  0100               	movlb	0	; () banked
  1117  002088  6FD0               	movwf	___lmul@multiplicand& (0+255),b
  1118  00208A  0E86               	movlw	134
  1119  00208C  6FD1               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1120  00208E  0E01               	movlw	1
  1121  002090  6FD2               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1122  002092  0E00               	movlw	0
  1123  002094  6FD3               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1124  002096  EC0F  F014         	call	___lmul	;wreg free
  1125  00209A  C0CC  F100         	movff	?___lmul,___aldiv@dividend
  1126  00209E  C0CD  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1127  0020A2  C0CE  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1128  0020A6  C0CF  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1129  0020AA  C038  F104         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1130  0020AE  C039  F105         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1131  0020B2  0101               	movlb	1	; () banked
  1132  0020B4  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1133  0020B6  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1134  0020B8  EC79  F012         	call	___aldiv	;wreg free
  1135  0020BC  C100  F06C         	movff	?___aldiv,_wheel_speed_1	;volatile
  1136  0020C0  C101  F06D         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1137  0020C4  C102  F06E         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1138  0020C8  C103  F06F         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1139  0020CC                     l4634:
  1140                           
  1141                           ;ABS_Code.c: 317: }
  1142                           ;ABS_Code.c: 318: speed_array[3] = wheel_speed_1 >> 8;
  1143  0020CC  C06D  F0A4         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1144                           
  1145                           ;ABS_Code.c: 319: speed_array[2] = wheel_speed_1;
  1146  0020D0  C06C  F0A3         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1147                           
  1148                           ;ABS_Code.c: 320: ENC1_measure = 0;
  1149  0020D4  903D               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1150  0020D6                     l4640:
  1151                           
  1152                           ;ABS_Code.c: 321: }
  1153                           ;ABS_Code.c: 323: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1154  0020D6  B23D               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1155  0020D8  D002               	goto	l737
  1156  0020DA  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1157  0020DC  D732               	goto	l4586
  1158  0020DE                     l737:
  1159                           
  1160                           ;ABS_Code.c: 324: if (TMR3_overflow == 1) {
  1161  0020DE  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1162  0020E0  D00B               	goto	l4648
  1163                           
  1164                           ;ABS_Code.c: 325: wheel_speed_2 = 0;
  1165  0020E2  0E00               	movlw	0
  1166  0020E4  0100               	movlb	0	; () banked
  1167  0020E6  6F70               	movwf	_wheel_speed_2& (0+255),b	;volatile
  1168  0020E8  0E00               	movlw	0
  1169  0020EA  6F71               	movwf	(_wheel_speed_2+1)& (0+255),b	;volatile
  1170  0020EC  0E00               	movlw	0
  1171  0020EE  6F72               	movwf	(_wheel_speed_2+2)& (0+255),b	;volatile
  1172  0020F0  0E00               	movlw	0
  1173  0020F2  6F73               	movwf	(_wheel_speed_2+3)& (0+255),b	;volatile
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;ABS_Code.c: 326: TMR3_overflow = 0;
  1177  0020F4  963D               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1178                           
  1179                           ;ABS_Code.c: 327: } else {
  1180  0020F6  D02B               	goto	l4650
  1181  0020F8                     l4648:
  1182                           
  1183                           ;ABS_Code.c: 328: wheel_speed_2 = (step * 100000) / gap_time_2;
  1184  0020F8  0100               	movlb	0	; () banked
  1185  0020FA  5189               	movf	_step& (0+255),w,b
  1186  0020FC  0100               	movlb	0	; () banked
  1187  0020FE  6FCC               	movwf	___lmul@multiplier& (0+255),b
  1188  002100  6BCD               	clrf	(___lmul@multiplier+1)& (0+255),b
  1189  002102  6BCE               	clrf	(___lmul@multiplier+2)& (0+255),b
  1190  002104  6BCF               	clrf	(___lmul@multiplier+3)& (0+255),b
  1191  002106  0EA0               	movlw	160
  1192  002108  0100               	movlb	0	; () banked
  1193  00210A  6FD0               	movwf	___lmul@multiplicand& (0+255),b
  1194  00210C  0E86               	movlw	134
  1195  00210E  6FD1               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1196  002110  0E01               	movlw	1
  1197  002112  6FD2               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1198  002114  0E00               	movlw	0
  1199  002116  6FD3               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1200  002118  EC0F  F014         	call	___lmul	;wreg free
  1201  00211C  C0CC  F100         	movff	?___lmul,___aldiv@dividend
  1202  002120  C0CD  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1203  002124  C0CE  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1204  002128  C0CF  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1205  00212C  C03A  F104         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1206  002130  C03B  F105         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1207  002134  0101               	movlb	1	; () banked
  1208  002136  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1209  002138  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1210  00213A  EC79  F012         	call	___aldiv	;wreg free
  1211  00213E  C100  F070         	movff	?___aldiv,_wheel_speed_2	;volatile
  1212  002142  C101  F071         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1213  002146  C102  F072         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1214  00214A  C103  F073         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1215  00214E                     l4650:
  1216                           
  1217                           ;ABS_Code.c: 329: }
  1218                           ;ABS_Code.c: 330: speed_array[1] = wheel_speed_2 >> 8;
  1219  00214E  C071  F0A2         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1220                           
  1221                           ;ABS_Code.c: 331: speed_array[0] = wheel_speed_2;
  1222  002152  C070  F0A1         	movff	_wheel_speed_2,_speed_array	;volatile
  1223                           
  1224                           ;ABS_Code.c: 332: ENC2_measure = 0;
  1225  002156  923D               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1226  002158  D6F4               	goto	l4586
  1227  00215A                     __end_of_main:
  1228                           	opt stack 0
  1229                           tblptru	equ	0xFF8
  1230                           tblptrh	equ	0xFF7
  1231                           tblptrl	equ	0xFF6
  1232                           tablat	equ	0xFF5
  1233                           prodh	equ	0xFF4
  1234                           prodl	equ	0xFF3
  1235                           postinc0	equ	0xFEE
  1236                           wreg	equ	0xFE8
  1237                           postdec1	equ	0xFE5
  1238                           fsr1l	equ	0xFE1
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function _remote_frame_handler *****************
  1242 ;; Defined at:
  1243 ;;		line 342 in file "ABS_Code.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;		None               void
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1257 ;;      Params:         0       0       0       0
  1258 ;;      Locals:         0       0       0       0
  1259 ;;      Temps:          0       1       0       0
  1260 ;;      Totals:         0       1       0       0
  1261 ;;Total ram usage:        1 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    5
  1264 ;; This function calls:
  1265 ;;		_CANisTxReady
  1266 ;;		_CANsendMessage
  1267 ;;		___wmul
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text1
  1274  00215A                     __ptext1:
  1275                           	opt stack 0
  1276  00215A                     _remote_frame_handler:
  1277                           	opt stack 25
  1278                           
  1279                           ;ABS_Code.c: 343: if (CANisTxReady()) {
  1280                           
  1281                           ;incstack = 0
  1282  00215A  EC02  F015         	call	_CANisTxReady	;wreg free
  1283  00215E  0900               	iorlw	0
  1284  002160  B4D8               	btfsc	status,2,c
  1285  002162  D0E2               	goto	l745
  1286                           
  1287                           ;ABS_Code.c: 344: if (remote_frame_id == 0b00000000000000000000000000010) {
  1288  002164  0E02               	movlw	2
  1289  002166  0100               	movlb	0	; () banked
  1290  002168  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1291  00216A  0100               	movlb	0	; () banked
  1292  00216C  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1293  00216E  0100               	movlb	0	; () banked
  1294  002170  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1295  002172  0100               	movlb	0	; () banked
  1296  002174  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1297  002176  A4D8               	btfss	status,2,c
  1298  002178  D02A               	goto	l3870
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;ABS_Code.c: 345: status_array[0] = 0x01;
  1302  00217A  0E01               	movlw	1
  1303  00217C  0100               	movlb	0	; () banked
  1304  00217E  6FA9               	movwf	_status_array& (0+255),b
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;ABS_Code.c: 346: CANsendMessage(0b00000000000000000000000000010, status_array, 8, CAN_C
      +                          ONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1308  002180  0E02               	movlw	2
  1309  002182  0100               	movlb	0	; () banked
  1310  002184  6FCC               	movwf	CANsendMessage@identifier& (0+255),b
  1311  002186  0E00               	movlw	0
  1312  002188  6FCD               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1313  00218A  0E00               	movlw	0
  1314  00218C  6FCE               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1315  00218E  0E00               	movlw	0
  1316  002190  6FCF               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1317  002192  0EA9               	movlw	low _status_array
  1318  002194  0100               	movlb	0	; () banked
  1319  002196  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1320  002198  0E00               	movlw	high _status_array
  1321  00219A  0100               	movlb	0	; () banked
  1322  00219C  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1323  00219E  0E08               	movlw	8
  1324  0021A0  0100               	movlb	0	; () banked
  1325  0021A2  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1326  0021A4  0EBC               	movlw	188
  1327  0021A6  0100               	movlb	0	; () banked
  1328  0021A8  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1329  0021AA  EC27  F006         	call	_CANsendMessage	;wreg free
  1330                           
  1331                           ;ABS_Code.c: 347: PORTCbits.RC1 = ~PORTCbits.RC1;
  1332  0021AE  A282               	btfss	3970,1,c	;volatile
  1333  0021B0  D002               	goto	u4230
  1334  0021B2  0E01               	movlw	1
  1335  0021B4  D001               	goto	u4236
  1336  0021B6                     u4230:
  1337  0021B6  0E00               	movlw	0
  1338  0021B8                     u4236:
  1339  0021B8  0AFF               	xorlw	255
  1340  0021BA  0100               	movlb	0	; () banked
  1341  0021BC  6FDC               	movwf	??_remote_frame_handler& (0+255),b
  1342  0021BE  0100               	movlb	0	; () banked
  1343  0021C0  47DC               	rlncf	??_remote_frame_handler& (0+255),f,b
  1344  0021C2  5082               	movf	3970,w,c	;volatile
  1345  0021C4  0100               	movlb	0	; () banked
  1346  0021C6  19DC               	xorwf	??_remote_frame_handler& (0+255),w,b
  1347  0021C8  0BFD               	andlw	-3
  1348  0021CA  19DC               	xorwf	??_remote_frame_handler& (0+255),w,b
  1349  0021CC  6E82               	movwf	3970,c	;volatile
  1350  0021CE                     l3870:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;ABS_Code.c: 348: }
  1354                           ;ABS_Code.c: 349: if (remote_frame_id == 0b00000000000000000000000000110) {
  1355  0021CE  0E06               	movlw	6
  1356  0021D0  0100               	movlb	0	; () banked
  1357  0021D2  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1358  0021D4  0100               	movlb	0	; () banked
  1359  0021D6  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1360  0021D8  0100               	movlb	0	; () banked
  1361  0021DA  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1362  0021DC  0100               	movlb	0	; () banked
  1363  0021DE  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1364  0021E0  A4D8               	btfss	status,2,c
  1365  0021E2  D016               	goto	l3874
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;ABS_Code.c: 350: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1369  0021E4  C068  F0CC         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1370  0021E8  C069  F0CD         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1371  0021EC  C06A  F0CE         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1372  0021F0  C06B  F0CF         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1373  0021F4  0EA1               	movlw	low _speed_array
  1374  0021F6  0100               	movlb	0	; () banked
  1375  0021F8  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1376  0021FA  0E00               	movlw	high _speed_array
  1377  0021FC  0100               	movlb	0	; () banked
  1378  0021FE  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1379  002200  0E08               	movlw	8
  1380  002202  0100               	movlb	0	; () banked
  1381  002204  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1382  002206  0EBC               	movlw	188
  1383  002208  0100               	movlb	0	; () banked
  1384  00220A  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1385  00220C  EC27  F006         	call	_CANsendMessage	;wreg free
  1386  002210                     l3874:
  1387                           
  1388                           ;ABS_Code.c: 351: }
  1389                           ;ABS_Code.c: 352: if (remote_frame_id == 0b00000000000000000000000001000) {
  1390  002210  0E08               	movlw	8
  1391  002212  0100               	movlb	0	; () banked
  1392  002214  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1393  002216  0100               	movlb	0	; () banked
  1394  002218  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1395  00221A  0100               	movlb	0	; () banked
  1396  00221C  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1397  00221E  0100               	movlb	0	; () banked
  1398  002220  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1399  002222  A4D8               	btfss	status,2,c
  1400  002224  D013               	goto	l3880
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;ABS_Code.c: 353: int_counter_1 = 0;
  1404  002226  0E00               	movlw	0
  1405  002228  0100               	movlb	0	; () banked
  1406  00222A  6F60               	movwf	_int_counter_1& (0+255),b	;volatile
  1407  00222C  0E00               	movlw	0
  1408  00222E  6F61               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1409  002230  0E00               	movlw	0
  1410  002232  6F62               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1411  002234  0E00               	movlw	0
  1412  002236  6F63               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1413                           
  1414                           ;ABS_Code.c: 354: int_counter_2 = 0;
  1415  002238  0E00               	movlw	0
  1416  00223A  0100               	movlb	0	; () banked
  1417  00223C  6F64               	movwf	_int_counter_2& (0+255),b	;volatile
  1418  00223E  0E00               	movlw	0
  1419  002240  6F65               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1420  002242  0E00               	movlw	0
  1421  002244  6F66               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1422  002246  0E00               	movlw	0
  1423  002248  6F67               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;ABS_Code.c: 355: count_flag = 1;
  1427  00224A  8A3D               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1428  00224C                     l3880:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;ABS_Code.c: 356: }
  1432                           ;ABS_Code.c: 357: if (remote_frame_id == 0b00000000000000000000000000111) {
  1433  00224C  0E07               	movlw	7
  1434  00224E  0100               	movlb	0	; () banked
  1435  002250  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1436  002252  0100               	movlb	0	; () banked
  1437  002254  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1438  002256  0100               	movlb	0	; () banked
  1439  002258  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1440  00225A  0100               	movlb	0	; () banked
  1441  00225C  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1442  00225E  A4D8               	btfss	status,2,c
  1443  002260  D03F               	goto	l3896
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;ABS_Code.c: 358: distance_1 = step * (int_counter_1);
  1447  002262  C089  F0CC         	movff	_step,___wmul@multiplier
  1448  002266  0100               	movlb	0	; () banked
  1449  002268  6BCD               	clrf	(___wmul@multiplier+1)& (0+255),b
  1450  00226A  C060  F0CE         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1451  00226E  C061  F0CF         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1452  002272  ECD4  F014         	call	___wmul	;wreg free
  1453  002276  C0CC  F078         	movff	?___wmul,_distance_1	;volatile
  1454  00227A  C0CD  F079         	movff	?___wmul+1,_distance_1+1	;volatile
  1455                           
  1456                           ;ABS_Code.c: 359: distance_2 = step * (int_counter_2);
  1457  00227E  C089  F0CC         	movff	_step,___wmul@multiplier
  1458  002282  0100               	movlb	0	; () banked
  1459  002284  6BCD               	clrf	(___wmul@multiplier+1)& (0+255),b
  1460  002286  C064  F0CE         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1461  00228A  C065  F0CF         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1462  00228E  ECD4  F014         	call	___wmul	;wreg free
  1463  002292  C0CC  F07A         	movff	?___wmul,_distance_2	;volatile
  1464  002296  C0CD  F07B         	movff	?___wmul+1,_distance_2+1	;volatile
  1465                           
  1466                           ;ABS_Code.c: 360: count_flag = 0;
  1467  00229A  9A3D               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1468                           
  1469                           ;ABS_Code.c: 361: distance_array[0] = distance_1;
  1470  00229C  C078  F099         	movff	_distance_1,_distance_array	;volatile
  1471                           
  1472                           ;ABS_Code.c: 362: distance_array[1] = distance_1 >> 8;
  1473  0022A0  0100               	movlb	0	; () banked
  1474  0022A2  5179               	movf	(_distance_1+1)& (0+255),w,b	;volatile
  1475  0022A4  0100               	movlb	0	; () banked
  1476  0022A6  6F9A               	movwf	(_distance_array+1)& (0+255),b
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;ABS_Code.c: 363: distance_array[2] = distance_2;
  1480  0022A8  C07A  F09B         	movff	_distance_2,_distance_array+2	;volatile
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;ABS_Code.c: 364: distance_array[3] = distance_2 >> 8;
  1484  0022AC  0100               	movlb	0	; () banked
  1485  0022AE  517B               	movf	(_distance_2+1)& (0+255),w,b	;volatile
  1486  0022B0  0100               	movlb	0	; () banked
  1487  0022B2  6F9C               	movwf	(_distance_array+3)& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;ABS_Code.c: 365: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1491  0022B4  C068  F0CC         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1492  0022B8  C069  F0CD         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1493  0022BC  C06A  F0CE         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1494  0022C0  C06B  F0CF         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1495  0022C4  0E99               	movlw	low _distance_array
  1496  0022C6  0100               	movlb	0	; () banked
  1497  0022C8  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1498  0022CA  0E00               	movlw	high _distance_array
  1499  0022CC  0100               	movlb	0	; () banked
  1500  0022CE  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1501  0022D0  0E08               	movlw	8
  1502  0022D2  0100               	movlb	0	; () banked
  1503  0022D4  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1504  0022D6  0EBC               	movlw	188
  1505  0022D8  0100               	movlb	0	; () banked
  1506  0022DA  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1507  0022DC  EC27  F006         	call	_CANsendMessage	;wreg free
  1508  0022E0                     l3896:
  1509                           
  1510                           ;ABS_Code.c: 366: }
  1511                           ;ABS_Code.c: 367: if (distance_reached_flag == 1) {
  1512  0022E0  AC3D               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1513  0022E2  D017               	goto	l3900
  1514                           
  1515                           ;ABS_Code.c: 368: CANsendMessage(0b00000000000000000000000001010, remote_frame_array, 8,
      +                           CAN_CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1516  0022E4  0E0A               	movlw	10
  1517  0022E6  0100               	movlb	0	; () banked
  1518  0022E8  6FCC               	movwf	CANsendMessage@identifier& (0+255),b
  1519  0022EA  0E00               	movlw	0
  1520  0022EC  6FCD               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1521  0022EE  0E00               	movlw	0
  1522  0022F0  6FCE               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1523  0022F2  0E00               	movlw	0
  1524  0022F4  6FCF               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1525  0022F6  0EDE               	movlw	low _remote_frame_array
  1526  0022F8  0100               	movlb	0	; () banked
  1527  0022FA  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1528  0022FC  0E00               	movlw	high _remote_frame_array
  1529  0022FE  0100               	movlb	0	; () banked
  1530  002300  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1531  002302  0E08               	movlw	8
  1532  002304  0100               	movlb	0	; () banked
  1533  002306  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1534  002308  0EFC               	movlw	252
  1535  00230A  0100               	movlb	0	; () banked
  1536  00230C  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1537  00230E  EC27  F006         	call	_CANsendMessage	;wreg free
  1538  002312                     l3900:
  1539                           
  1540                           ;ABS_Code.c: 369: }
  1541                           ;ABS_Code.c: 370: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1542  002312  010F               	movlb	15	; () banked
  1543  002314  BD40               	btfsc	64,6,b	;volatile
  1544  002316  D003               	goto	l753
  1545                           
  1546                           ; BSR set to: 15
  1547  002318  010F               	movlb	15	; () banked
  1548  00231A  AD30               	btfss	48,6,b	;volatile
  1549  00231C  D002               	goto	l751
  1550  00231E                     l753:
  1551                           
  1552                           ; BSR set to: 15
  1553                           ;ABS_Code.c: 371: Tx_retry = 1;
  1554  00231E  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1555                           
  1556                           ;ABS_Code.c: 372: } else {
  1557  002320  0012               	return	
  1558  002322                     l751:
  1559                           
  1560                           ; BSR set to: 15
  1561                           ;ABS_Code.c: 373: Tx_retry = 0;
  1562  002322  983D               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1563                           
  1564                           ;ABS_Code.c: 374: distance_reached_flag = 0;
  1565  002324  9C3D               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1566                           
  1567                           ; BSR set to: 15
  1568                           ;ABS_Code.c: 375: }
  1569                           ;ABS_Code.c: 376: } else {
  1570  002326  0012               	return	
  1571  002328                     l745:
  1572                           
  1573                           ;ABS_Code.c: 377: Tx_retry = 1;
  1574  002328  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1575  00232A  0012               	return	
  1576  00232C                     __end_of_remote_frame_handler:
  1577                           	opt stack 0
  1578                           tblptru	equ	0xFF8
  1579                           tblptrh	equ	0xFF7
  1580                           tblptrl	equ	0xFF6
  1581                           tablat	equ	0xFF5
  1582                           prodh	equ	0xFF4
  1583                           prodl	equ	0xFF3
  1584                           postinc0	equ	0xFEE
  1585                           wreg	equ	0xFE8
  1586                           postdec1	equ	0xFE5
  1587                           fsr1l	equ	0xFE1
  1588                           status	equ	0xFD8
  1589                           
  1590 ;; *************** function _CANsendMessage *****************
  1591 ;; Defined at:
  1592 ;;		line 294 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  identifier      4   26[BANK0 ] unsigned long 
  1595 ;;  data            2   30[BANK0 ] PTR unsigned char 
  1596 ;;		 -> remote_frame_array(8), distance_array(8), status_array(8), speed_array(8), 
  1597 ;;  dataLength      1   32[BANK0 ] unsigned char 
  1598 ;;  flags           1   33[BANK0 ] enum E16866
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  tamp            4   38[BANK0 ] unsigned long 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;		None               void
  1603 ;; Registers used:
  1604 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1610 ;;      Params:         0       8       0       0
  1611 ;;      Locals:         0       4       0       0
  1612 ;;      Temps:          0       4       0       0
  1613 ;;      Totals:         0      16       0       0
  1614 ;;Total ram usage:       16 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    4
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_remote_frame_handler
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text2
  1625  000C4E                     __ptext2:
  1626                           	opt stack 0
  1627  000C4E                     _CANsendMessage:
  1628                           	opt stack 25
  1629                           
  1630                           ;inc\CANlib.h: 296: unsigned long tamp;
  1631                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1632                           
  1633                           ;incstack = 0
  1634  000C4E  010F               	movlb	15	; () banked
  1635  000C50  B740               	btfsc	64,3,b	;volatile
  1636  000C52  D13F               	goto	l383
  1637                           
  1638                           ; BSR set to: 15
  1639                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1640  000C54  C0D2  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1641                           
  1642                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1643  000C58  0100               	movlb	0	; () banked
  1644  000C5A  ADD3               	btfss	CANsendMessage@flags& (0+255),6,b
  1645  000C5C  D003               	goto	l384
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1649  000C5E  010F               	movlb	15	; () banked
  1650  000C60  8D45               	bsf	69,6,b	;volatile
  1651  000C62  D002               	goto	l385
  1652  000C64                     l384:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;inc\CANlib.h: 302: else
  1656                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1657  000C64  010F               	movlb	15	; () banked
  1658  000C66  9D45               	bcf	69,6,b	;volatile
  1659  000C68                     l385:
  1660                           
  1661                           ; BSR set to: 15
  1662                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1663  000C68  0100               	movlb	0	; () banked
  1664  000C6A  A7D3               	btfss	CANsendMessage@flags& (0+255),3,b
  1665  000C6C  D079               	goto	l386
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;inc\CANlib.h: 306: {
  1669                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1670  000C6E  0100               	movlb	0	; () banked
  1671  000C70  51CC               	movf	CANsendMessage@identifier& (0+255),w,b
  1672  000C72  0100               	movlb	0	; () banked
  1673  000C74  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  1674  000C76  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1675  000C78  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1676  000C7A  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1680  000C7C  C0D8  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1684  000C80  0E00               	movlw	0
  1685  000C82  0100               	movlb	0	; () banked
  1686  000C84  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  1687  000C86  0100               	movlb	0	; () banked
  1688  000C88  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  1689  000C8A  0EFF               	movlw	255
  1690  000C8C  0100               	movlb	0	; () banked
  1691  000C8E  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1692  000C90  0100               	movlb	0	; () banked
  1693  000C92  6FD9               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1694  000C94  0E00               	movlw	0
  1695  000C96  0100               	movlb	0	; () banked
  1696  000C98  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1697  000C9A  0100               	movlb	0	; () banked
  1698  000C9C  6FDA               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1699  000C9E  0E00               	movlw	0
  1700  000CA0  0100               	movlb	0	; () banked
  1701  000CA2  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1702  000CA4  0100               	movlb	0	; () banked
  1703  000CA6  6FDB               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1707  000CA8  C0D8  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  1708  000CAC  C0D9  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1709  000CB0  C0DA  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1710  000CB4  C0DB  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1711  000CB8  C0D5  F0D4         	movff	??_CANsendMessage+1,??_CANsendMessage
  1712  000CBC  C0D6  F0D5         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1713  000CC0  C0D7  F0D6         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1714  000CC4  0100               	movlb	0	; () banked
  1715  000CC6  6BD7               	clrf	(??_CANsendMessage+3)& (0+255),b
  1716  000CC8  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  1717  000CCC  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1718  000CD0  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1719  000CD4  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1723  000CD8  C0D8  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1727  000CDC  0E00               	movlw	0
  1728  000CDE  010F               	movlb	15	; () banked
  1729  000CE0  6F42               	movwf	66,b	;volatile
  1730                           
  1731                           ; BSR set to: 15
  1732                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1733  000CE2  010F               	movlb	15	; () banked
  1734  000CE4  8742               	bsf	66,3,b	;volatile
  1735                           
  1736                           ; BSR set to: 15
  1737                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1738  000CE6  0100               	movlb	0	; () banked
  1739  000CE8  A1CE               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1740  000CEA  D002               	goto	l387
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1744  000CEC  010F               	movlb	15	; () banked
  1745  000CEE  8142               	bsf	66,0,b	;volatile
  1746  000CF0                     l387:
  1747                           
  1748                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1749  000CF0  0100               	movlb	0	; () banked
  1750  000CF2  A3CE               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1751  000CF4  D002               	goto	l388
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1755  000CF6  010F               	movlb	15	; () banked
  1756  000CF8  8342               	bsf	66,1,b	;volatile
  1757  000CFA                     l388:
  1758                           
  1759                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1760  000CFA  0100               	movlb	0	; () banked
  1761  000CFC  A5CE               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1762  000CFE  D002               	goto	l389
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1766  000D00  010F               	movlb	15	; () banked
  1767  000D02  8B42               	bsf	66,5,b	;volatile
  1768  000D04                     l389:
  1769                           
  1770                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1771  000D04  0100               	movlb	0	; () banked
  1772  000D06  A7CE               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1773  000D08  D002               	goto	l390
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1777  000D0A  010F               	movlb	15	; () banked
  1778  000D0C  8D42               	bsf	66,6,b	;volatile
  1779  000D0E                     l390:
  1780                           
  1781                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1782  000D0E  0100               	movlb	0	; () banked
  1783  000D10  A9CE               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1784  000D12  D002               	goto	l3326
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1788  000D14  010F               	movlb	15	; () banked
  1789  000D16  8F42               	bsf	66,7,b	;volatile
  1790  000D18                     l3326:
  1791                           
  1792                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1793  000D18  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  1794  000D1C  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1795  000D20  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1796  000D24  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1797  000D28  0E16               	movlw	22
  1798  000D2A  D006               	goto	u3510
  1799  000D2C                     u3515:
  1800  000D2C  0100               	movlb	0	; () banked
  1801  000D2E  90D8               	bcf	status,0,c
  1802  000D30  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1803  000D32  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1804  000D34  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1805  000D36  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  1806  000D38                     u3510:
  1807  000D38  2EE8               	decfsz	wreg,f,c
  1808  000D3A  D7F8               	goto	u3515
  1809  000D3C  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  1810  000D40  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1811  000D44  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1812  000D48  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1816  000D4C  0100               	movlb	0	; () banked
  1817  000D4E  51D8               	movf	CANsendMessage@tamp& (0+255),w,b
  1818  000D50  0100               	movlb	0	; () banked
  1819  000D52  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  1820  000D54  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1821  000D56  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1822  000D58  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1826  000D5A  C0D8  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1827                           
  1828                           ;inc\CANlib.h: 332: }
  1829  000D5E  D059               	goto	l3346
  1830  000D60                     l386:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;inc\CANlib.h: 334: else
  1834                           ;inc\CANlib.h: 336: {
  1835                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1836  000D60  010F               	movlb	15	; () banked
  1837  000D62  9742               	bcf	66,3,b	;volatile
  1838                           
  1839                           ; BSR set to: 15
  1840                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1841  000D64  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  1842  000D68  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1843  000D6C  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1844  000D70  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1845  000D74  0E04               	movlw	4
  1846  000D76  D006               	goto	u3520
  1847  000D78                     u3525:
  1848  000D78  0100               	movlb	0	; () banked
  1849  000D7A  90D8               	bcf	status,0,c
  1850  000D7C  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1851  000D7E  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1852  000D80  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1853  000D82  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  1854  000D84                     u3520:
  1855  000D84  2EE8               	decfsz	wreg,f,c
  1856  000D86  D7F8               	goto	u3525
  1857  000D88  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  1858  000D8C  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1859  000D90  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1860  000D94  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1864  000D98  0100               	movlb	0	; () banked
  1865  000D9A  51D8               	movf	CANsendMessage@tamp& (0+255),w,b
  1866  000D9C  0100               	movlb	0	; () banked
  1867  000D9E  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  1868  000DA0  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1869  000DA2  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1870  000DA4  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1874  000DA6  C0D8  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1878  000DAA  0E07               	movlw	7
  1879  000DAC  0100               	movlb	0	; () banked
  1880  000DAE  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  1881  000DB0  0100               	movlb	0	; () banked
  1882  000DB2  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  1883  000DB4  0E00               	movlw	0
  1884  000DB6  0100               	movlb	0	; () banked
  1885  000DB8  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1886  000DBA  0100               	movlb	0	; () banked
  1887  000DBC  6FD9               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1888  000DBE  0E00               	movlw	0
  1889  000DC0  0100               	movlb	0	; () banked
  1890  000DC2  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1891  000DC4  0100               	movlb	0	; () banked
  1892  000DC6  6FDA               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1893  000DC8  0E00               	movlw	0
  1894  000DCA  0100               	movlb	0	; () banked
  1895  000DCC  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1896  000DCE  0100               	movlb	0	; () banked
  1897  000DD0  6FDB               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1901  000DD2  C0D8  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  1902  000DD6  C0D9  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1903  000DDA  C0DA  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1904  000DDE  C0DB  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1905  000DE2  0E05               	movlw	5
  1906  000DE4                     u3535:
  1907  000DE4  90D8               	bcf	status,0,c
  1908  000DE6  0100               	movlb	0	; () banked
  1909  000DE8  37D4               	rlcf	??_CANsendMessage& (0+255),f,b
  1910  000DEA  37D5               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1911  000DEC  37D6               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1912  000DEE  37D7               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1913  000DF0  2EE8               	decfsz	wreg,f,c
  1914  000DF2  D7F8               	goto	u3535
  1915  000DF4  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  1916  000DF8  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1917  000DFC  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1918  000E00  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1922  000E04  010F               	movlb	15	; () banked
  1923  000E06  5142               	movf	66,w,b	;volatile
  1924  000E08  0B1F               	andlw	31
  1925  000E0A  010F               	movlb	15	; () banked
  1926  000E0C  6F42               	movwf	66,b	;volatile
  1927                           
  1928                           ; BSR set to: 15
  1929                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1930  000E0E  C0D8  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1931  000E12                     l3346:
  1932                           
  1933                           ;inc\CANlib.h: 347: }
  1934                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1935  000E12  0100               	movlb	0	; () banked
  1936  000E14  A1D3               	btfss	CANsendMessage@flags& (0+255),0,b
  1937  000E16  D003               	goto	l393
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1941  000E18  010F               	movlb	15	; () banked
  1942  000E1A  8140               	bsf	64,0,b	;volatile
  1943  000E1C  D002               	goto	l394
  1944  000E1E                     l393:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;inc\CANlib.h: 351: else
  1948                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1949  000E1E  010F               	movlb	15	; () banked
  1950  000E20  9140               	bcf	64,0,b	;volatile
  1951  000E22                     l394:
  1952                           
  1953                           ; BSR set to: 15
  1954                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1955  000E22  0100               	movlb	0	; () banked
  1956  000E24  A3D3               	btfss	CANsendMessage@flags& (0+255),1,b
  1957  000E26  D003               	goto	l395
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1961  000E28  010F               	movlb	15	; () banked
  1962  000E2A  8340               	bsf	64,1,b	;volatile
  1963  000E2C  D002               	goto	l3352
  1964  000E2E                     l395:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;inc\CANlib.h: 355: else
  1968                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1969  000E2E  010F               	movlb	15	; () banked
  1970  000E30  9340               	bcf	64,1,b	;volatile
  1971  000E32                     l3352:
  1972                           
  1973                           ; BSR set to: 15
  1974                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1975  000E32  C0D0  FFD9         	movff	CANsendMessage@data,fsr2l
  1976  000E36  C0D1  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1977  000E3A  50DF               	movf	indf2,w,c
  1978  000E3C  010F               	movlb	15	; () banked
  1979  000E3E  6F46               	movwf	70,b	;volatile
  1980                           
  1981                           ; BSR set to: 15
  1982                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1983  000E40  0100               	movlb	0	; () banked
  1984  000E42  EE20 F001          	lfsr	2,1
  1985  000E46  51D0               	movf	CANsendMessage@data& (0+255),w,b
  1986  000E48  26D9               	addwf	fsr2l,f,c
  1987  000E4A  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1988  000E4C  22DA               	addwfc	fsr2h,f,c
  1989  000E4E  50DF               	movf	indf2,w,c
  1990  000E50  010F               	movlb	15	; () banked
  1991  000E52  6F47               	movwf	71,b	;volatile
  1992                           
  1993                           ; BSR set to: 15
  1994                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1995  000E54  0100               	movlb	0	; () banked
  1996  000E56  EE20 F002          	lfsr	2,2
  1997  000E5A  51D0               	movf	CANsendMessage@data& (0+255),w,b
  1998  000E5C  26D9               	addwf	fsr2l,f,c
  1999  000E5E  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2000  000E60  22DA               	addwfc	fsr2h,f,c
  2001  000E62  50DF               	movf	indf2,w,c
  2002  000E64  010F               	movlb	15	; () banked
  2003  000E66  6F48               	movwf	72,b	;volatile
  2004                           
  2005                           ; BSR set to: 15
  2006                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2007  000E68  0100               	movlb	0	; () banked
  2008  000E6A  EE20 F003          	lfsr	2,3
  2009  000E6E  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2010  000E70  26D9               	addwf	fsr2l,f,c
  2011  000E72  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2012  000E74  22DA               	addwfc	fsr2h,f,c
  2013  000E76  50DF               	movf	indf2,w,c
  2014  000E78  010F               	movlb	15	; () banked
  2015  000E7A  6F49               	movwf	73,b	;volatile
  2016                           
  2017                           ; BSR set to: 15
  2018                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2019  000E7C  0100               	movlb	0	; () banked
  2020  000E7E  EE20 F004          	lfsr	2,4
  2021  000E82  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2022  000E84  26D9               	addwf	fsr2l,f,c
  2023  000E86  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2024  000E88  22DA               	addwfc	fsr2h,f,c
  2025  000E8A  50DF               	movf	indf2,w,c
  2026  000E8C  010F               	movlb	15	; () banked
  2027  000E8E  6F4A               	movwf	74,b	;volatile
  2028                           
  2029                           ; BSR set to: 15
  2030                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2031  000E90  0100               	movlb	0	; () banked
  2032  000E92  EE20 F005          	lfsr	2,5
  2033  000E96  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2034  000E98  26D9               	addwf	fsr2l,f,c
  2035  000E9A  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2036  000E9C  22DA               	addwfc	fsr2h,f,c
  2037  000E9E  50DF               	movf	indf2,w,c
  2038  000EA0  010F               	movlb	15	; () banked
  2039  000EA2  6F4B               	movwf	75,b	;volatile
  2040                           
  2041                           ; BSR set to: 15
  2042                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2043  000EA4  0100               	movlb	0	; () banked
  2044  000EA6  EE20 F006          	lfsr	2,6
  2045  000EAA  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2046  000EAC  26D9               	addwf	fsr2l,f,c
  2047  000EAE  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2048  000EB0  22DA               	addwfc	fsr2h,f,c
  2049  000EB2  50DF               	movf	indf2,w,c
  2050  000EB4  010F               	movlb	15	; () banked
  2051  000EB6  6F4C               	movwf	76,b	;volatile
  2052                           
  2053                           ; BSR set to: 15
  2054                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2055  000EB8  0100               	movlb	0	; () banked
  2056  000EBA  EE20 F007          	lfsr	2,7
  2057  000EBE  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2058  000EC0  26D9               	addwf	fsr2l,f,c
  2059  000EC2  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2060  000EC4  22DA               	addwfc	fsr2h,f,c
  2061  000EC6  50DF               	movf	indf2,w,c
  2062  000EC8  010F               	movlb	15	; () banked
  2063  000ECA  6F4D               	movwf	77,b	;volatile
  2064                           
  2065                           ; BSR set to: 15
  2066                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2067  000ECC  010F               	movlb	15	; () banked
  2068  000ECE  8740               	bsf	64,3,b	;volatile
  2069                           
  2070                           ; BSR set to: 15
  2071                           ;inc\CANlib.h: 368: return;
  2072  000ED0  0012               	return	
  2073  000ED2                     l383:
  2074                           
  2075                           ; BSR set to: 15
  2076                           ;inc\CANlib.h: 369: }
  2077                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2078  000ED2  010F               	movlb	15	; () banked
  2079  000ED4  B730               	btfsc	48,3,b	;volatile
  2080  000ED6  D13F               	goto	l398
  2081                           
  2082                           ; BSR set to: 15
  2083                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2084  000ED8  C0D2  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2085                           
  2086                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2087  000EDC  0100               	movlb	0	; () banked
  2088  000EDE  ADD3               	btfss	CANsendMessage@flags& (0+255),6,b
  2089  000EE0  D003               	goto	l399
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2093  000EE2  010F               	movlb	15	; () banked
  2094  000EE4  8D35               	bsf	53,6,b	;volatile
  2095  000EE6  D002               	goto	l400
  2096  000EE8                     l399:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;inc\CANlib.h: 378: else
  2100                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2101  000EE8  010F               	movlb	15	; () banked
  2102  000EEA  9D35               	bcf	53,6,b	;volatile
  2103  000EEC                     l400:
  2104                           
  2105                           ; BSR set to: 15
  2106                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2107  000EEC  0100               	movlb	0	; () banked
  2108  000EEE  A7D3               	btfss	CANsendMessage@flags& (0+255),3,b
  2109  000EF0  D079               	goto	l401
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;inc\CANlib.h: 382: {
  2113                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2114  000EF2  0100               	movlb	0	; () banked
  2115  000EF4  51CC               	movf	CANsendMessage@identifier& (0+255),w,b
  2116  000EF6  0100               	movlb	0	; () banked
  2117  000EF8  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2118  000EFA  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2119  000EFC  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2120  000EFE  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2124  000F00  C0D8  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2128  000F04  0E00               	movlw	0
  2129  000F06  0100               	movlb	0	; () banked
  2130  000F08  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2131  000F0A  0100               	movlb	0	; () banked
  2132  000F0C  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2133  000F0E  0EFF               	movlw	255
  2134  000F10  0100               	movlb	0	; () banked
  2135  000F12  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2136  000F14  0100               	movlb	0	; () banked
  2137  000F16  6FD9               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2138  000F18  0E00               	movlw	0
  2139  000F1A  0100               	movlb	0	; () banked
  2140  000F1C  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2141  000F1E  0100               	movlb	0	; () banked
  2142  000F20  6FDA               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2143  000F22  0E00               	movlw	0
  2144  000F24  0100               	movlb	0	; () banked
  2145  000F26  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2146  000F28  0100               	movlb	0	; () banked
  2147  000F2A  6FDB               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2151  000F2C  C0D8  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2152  000F30  C0D9  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2153  000F34  C0DA  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2154  000F38  C0DB  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2155  000F3C  C0D5  F0D4         	movff	??_CANsendMessage+1,??_CANsendMessage
  2156  000F40  C0D6  F0D5         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2157  000F44  C0D7  F0D6         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2158  000F48  0100               	movlb	0	; () banked
  2159  000F4A  6BD7               	clrf	(??_CANsendMessage+3)& (0+255),b
  2160  000F4C  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2161  000F50  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2162  000F54  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2163  000F58  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2167  000F5C  C0D8  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2171  000F60  0E00               	movlw	0
  2172  000F62  010F               	movlb	15	; () banked
  2173  000F64  6F32               	movwf	50,b	;volatile
  2174                           
  2175                           ; BSR set to: 15
  2176                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2177  000F66  010F               	movlb	15	; () banked
  2178  000F68  8732               	bsf	50,3,b	;volatile
  2179                           
  2180                           ; BSR set to: 15
  2181                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2182  000F6A  0100               	movlb	0	; () banked
  2183  000F6C  A1CE               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2184  000F6E  D002               	goto	l402
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2188  000F70  010F               	movlb	15	; () banked
  2189  000F72  8132               	bsf	50,0,b	;volatile
  2190  000F74                     l402:
  2191                           
  2192                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2193  000F74  0100               	movlb	0	; () banked
  2194  000F76  A3CE               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2195  000F78  D002               	goto	l403
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2199  000F7A  010F               	movlb	15	; () banked
  2200  000F7C  8332               	bsf	50,1,b	;volatile
  2201  000F7E                     l403:
  2202                           
  2203                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2204  000F7E  0100               	movlb	0	; () banked
  2205  000F80  A5CE               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2206  000F82  D002               	goto	l404
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2210  000F84  010F               	movlb	15	; () banked
  2211  000F86  8B32               	bsf	50,5,b	;volatile
  2212  000F88                     l404:
  2213                           
  2214                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2215  000F88  0100               	movlb	0	; () banked
  2216  000F8A  A7CE               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2217  000F8C  D002               	goto	l405
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2221  000F8E  010F               	movlb	15	; () banked
  2222  000F90  8D32               	bsf	50,6,b	;volatile
  2223  000F92                     l405:
  2224                           
  2225                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2226  000F92  0100               	movlb	0	; () banked
  2227  000F94  A9CE               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2228  000F96  D002               	goto	l3402
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2232  000F98  010F               	movlb	15	; () banked
  2233  000F9A  8F32               	bsf	50,7,b	;volatile
  2234  000F9C                     l3402:
  2235                           
  2236                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2237  000F9C  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2238  000FA0  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2239  000FA4  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2240  000FA8  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2241  000FAC  0E16               	movlw	22
  2242  000FAE  D006               	goto	u3640
  2243  000FB0                     u3645:
  2244  000FB0  0100               	movlb	0	; () banked
  2245  000FB2  90D8               	bcf	status,0,c
  2246  000FB4  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2247  000FB6  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2248  000FB8  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2249  000FBA  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2250  000FBC                     u3640:
  2251  000FBC  2EE8               	decfsz	wreg,f,c
  2252  000FBE  D7F8               	goto	u3645
  2253  000FC0  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2254  000FC4  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2255  000FC8  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2256  000FCC  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2260  000FD0  0100               	movlb	0	; () banked
  2261  000FD2  51D8               	movf	CANsendMessage@tamp& (0+255),w,b
  2262  000FD4  0100               	movlb	0	; () banked
  2263  000FD6  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2264  000FD8  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2265  000FDA  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2266  000FDC  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2270  000FDE  C0D8  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2271                           
  2272                           ;inc\CANlib.h: 407: }
  2273  000FE2  D059               	goto	l3422
  2274  000FE4                     l401:
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;inc\CANlib.h: 409: else
  2278                           ;inc\CANlib.h: 411: {
  2279                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2280  000FE4  010F               	movlb	15	; () banked
  2281  000FE6  9732               	bcf	50,3,b	;volatile
  2282                           
  2283                           ; BSR set to: 15
  2284                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2285  000FE8  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2286  000FEC  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2287  000FF0  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2288  000FF4  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2289  000FF8  0E04               	movlw	4
  2290  000FFA  D006               	goto	u3650
  2291  000FFC                     u3655:
  2292  000FFC  0100               	movlb	0	; () banked
  2293  000FFE  90D8               	bcf	status,0,c
  2294  001000  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2295  001002  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2296  001004  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2297  001006  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2298  001008                     u3650:
  2299  001008  2EE8               	decfsz	wreg,f,c
  2300  00100A  D7F8               	goto	u3655
  2301  00100C  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2302  001010  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2303  001014  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2304  001018  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2308  00101C  0100               	movlb	0	; () banked
  2309  00101E  51D8               	movf	CANsendMessage@tamp& (0+255),w,b
  2310  001020  0100               	movlb	0	; () banked
  2311  001022  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2312  001024  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2313  001026  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2314  001028  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2318  00102A  C0D8  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2322  00102E  0E07               	movlw	7
  2323  001030  0100               	movlb	0	; () banked
  2324  001032  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2325  001034  0100               	movlb	0	; () banked
  2326  001036  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2327  001038  0E00               	movlw	0
  2328  00103A  0100               	movlb	0	; () banked
  2329  00103C  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2330  00103E  0100               	movlb	0	; () banked
  2331  001040  6FD9               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2332  001042  0E00               	movlw	0
  2333  001044  0100               	movlb	0	; () banked
  2334  001046  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2335  001048  0100               	movlb	0	; () banked
  2336  00104A  6FDA               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2337  00104C  0E00               	movlw	0
  2338  00104E  0100               	movlb	0	; () banked
  2339  001050  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2340  001052  0100               	movlb	0	; () banked
  2341  001054  6FDB               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2345  001056  C0D8  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2346  00105A  C0D9  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2347  00105E  C0DA  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2348  001062  C0DB  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2349  001066  0E05               	movlw	5
  2350  001068                     u3665:
  2351  001068  90D8               	bcf	status,0,c
  2352  00106A  0100               	movlb	0	; () banked
  2353  00106C  37D4               	rlcf	??_CANsendMessage& (0+255),f,b
  2354  00106E  37D5               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2355  001070  37D6               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2356  001072  37D7               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2357  001074  2EE8               	decfsz	wreg,f,c
  2358  001076  D7F8               	goto	u3665
  2359  001078  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2360  00107C  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2361  001080  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2362  001084  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2366  001088  010F               	movlb	15	; () banked
  2367  00108A  5132               	movf	50,w,b	;volatile
  2368  00108C  0B1F               	andlw	31
  2369  00108E  010F               	movlb	15	; () banked
  2370  001090  6F32               	movwf	50,b	;volatile
  2371                           
  2372                           ; BSR set to: 15
  2373                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2374  001092  C0D8  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2375  001096                     l3422:
  2376                           
  2377                           ;inc\CANlib.h: 422: }
  2378                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2379  001096  0100               	movlb	0	; () banked
  2380  001098  A1D3               	btfss	CANsendMessage@flags& (0+255),0,b
  2381  00109A  D003               	goto	l408
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2385  00109C  010F               	movlb	15	; () banked
  2386  00109E  8130               	bsf	48,0,b	;volatile
  2387  0010A0  D002               	goto	l409
  2388  0010A2                     l408:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;inc\CANlib.h: 426: else
  2392                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2393  0010A2  010F               	movlb	15	; () banked
  2394  0010A4  9130               	bcf	48,0,b	;volatile
  2395  0010A6                     l409:
  2396                           
  2397                           ; BSR set to: 15
  2398                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2399  0010A6  0100               	movlb	0	; () banked
  2400  0010A8  A3D3               	btfss	CANsendMessage@flags& (0+255),1,b
  2401  0010AA  D003               	goto	l410
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2405  0010AC  010F               	movlb	15	; () banked
  2406  0010AE  8330               	bsf	48,1,b	;volatile
  2407  0010B0  D002               	goto	l3428
  2408  0010B2                     l410:
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;inc\CANlib.h: 430: else
  2412                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2413  0010B2  010F               	movlb	15	; () banked
  2414  0010B4  9330               	bcf	48,1,b	;volatile
  2415  0010B6                     l3428:
  2416                           
  2417                           ; BSR set to: 15
  2418                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2419  0010B6  C0D0  FFD9         	movff	CANsendMessage@data,fsr2l
  2420  0010BA  C0D1  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2421  0010BE  50DF               	movf	indf2,w,c
  2422  0010C0  010F               	movlb	15	; () banked
  2423  0010C2  6F36               	movwf	54,b	;volatile
  2424                           
  2425                           ; BSR set to: 15
  2426                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2427  0010C4  0100               	movlb	0	; () banked
  2428  0010C6  EE20 F001          	lfsr	2,1
  2429  0010CA  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2430  0010CC  26D9               	addwf	fsr2l,f,c
  2431  0010CE  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2432  0010D0  22DA               	addwfc	fsr2h,f,c
  2433  0010D2  50DF               	movf	indf2,w,c
  2434  0010D4  010F               	movlb	15	; () banked
  2435  0010D6  6F37               	movwf	55,b	;volatile
  2436                           
  2437                           ; BSR set to: 15
  2438                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2439  0010D8  0100               	movlb	0	; () banked
  2440  0010DA  EE20 F002          	lfsr	2,2
  2441  0010DE  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2442  0010E0  26D9               	addwf	fsr2l,f,c
  2443  0010E2  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2444  0010E4  22DA               	addwfc	fsr2h,f,c
  2445  0010E6  50DF               	movf	indf2,w,c
  2446  0010E8  010F               	movlb	15	; () banked
  2447  0010EA  6F38               	movwf	56,b	;volatile
  2448                           
  2449                           ; BSR set to: 15
  2450                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2451  0010EC  0100               	movlb	0	; () banked
  2452  0010EE  EE20 F003          	lfsr	2,3
  2453  0010F2  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2454  0010F4  26D9               	addwf	fsr2l,f,c
  2455  0010F6  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2456  0010F8  22DA               	addwfc	fsr2h,f,c
  2457  0010FA  50DF               	movf	indf2,w,c
  2458  0010FC  010F               	movlb	15	; () banked
  2459  0010FE  6F39               	movwf	57,b	;volatile
  2460                           
  2461                           ; BSR set to: 15
  2462                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2463  001100  0100               	movlb	0	; () banked
  2464  001102  EE20 F004          	lfsr	2,4
  2465  001106  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2466  001108  26D9               	addwf	fsr2l,f,c
  2467  00110A  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2468  00110C  22DA               	addwfc	fsr2h,f,c
  2469  00110E  50DF               	movf	indf2,w,c
  2470  001110  010F               	movlb	15	; () banked
  2471  001112  6F3A               	movwf	58,b	;volatile
  2472                           
  2473                           ; BSR set to: 15
  2474                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2475  001114  0100               	movlb	0	; () banked
  2476  001116  EE20 F005          	lfsr	2,5
  2477  00111A  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2478  00111C  26D9               	addwf	fsr2l,f,c
  2479  00111E  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2480  001120  22DA               	addwfc	fsr2h,f,c
  2481  001122  50DF               	movf	indf2,w,c
  2482  001124  010F               	movlb	15	; () banked
  2483  001126  6F3B               	movwf	59,b	;volatile
  2484                           
  2485                           ; BSR set to: 15
  2486                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2487  001128  0100               	movlb	0	; () banked
  2488  00112A  EE20 F006          	lfsr	2,6
  2489  00112E  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2490  001130  26D9               	addwf	fsr2l,f,c
  2491  001132  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2492  001134  22DA               	addwfc	fsr2h,f,c
  2493  001136  50DF               	movf	indf2,w,c
  2494  001138  010F               	movlb	15	; () banked
  2495  00113A  6F3C               	movwf	60,b	;volatile
  2496                           
  2497                           ; BSR set to: 15
  2498                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2499  00113C  0100               	movlb	0	; () banked
  2500  00113E  EE20 F007          	lfsr	2,7
  2501  001142  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2502  001144  26D9               	addwf	fsr2l,f,c
  2503  001146  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2504  001148  22DA               	addwfc	fsr2h,f,c
  2505  00114A  50DF               	movf	indf2,w,c
  2506  00114C  010F               	movlb	15	; () banked
  2507  00114E  6F3D               	movwf	61,b	;volatile
  2508                           
  2509                           ; BSR set to: 15
  2510                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2511  001150  010F               	movlb	15	; () banked
  2512  001152  8730               	bsf	48,3,b	;volatile
  2513                           
  2514                           ; BSR set to: 15
  2515                           ;inc\CANlib.h: 444: return;
  2516  001154  0012               	return	
  2517  001156                     l398:
  2518                           
  2519                           ; BSR set to: 15
  2520                           ;inc\CANlib.h: 445: }
  2521                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2522  001156  010F               	movlb	15	; () banked
  2523  001158  B720               	btfsc	32,3,b	;volatile
  2524  00115A  0012               	return	
  2525                           
  2526                           ; BSR set to: 15
  2527                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2528  00115C  C0D2  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2529                           
  2530                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2531  001160  0100               	movlb	0	; () banked
  2532  001162  ADD3               	btfss	CANsendMessage@flags& (0+255),6,b
  2533  001164  D003               	goto	l413
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2537  001166  010F               	movlb	15	; () banked
  2538  001168  8D25               	bsf	37,6,b	;volatile
  2539  00116A  D002               	goto	l414
  2540  00116C                     l413:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;inc\CANlib.h: 454: else
  2544                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2545  00116C  010F               	movlb	15	; () banked
  2546  00116E  9D25               	bcf	37,6,b	;volatile
  2547  001170                     l414:
  2548                           
  2549                           ; BSR set to: 15
  2550                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2551  001170  0100               	movlb	0	; () banked
  2552  001172  A7D3               	btfss	CANsendMessage@flags& (0+255),3,b
  2553  001174  D079               	goto	l415
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;inc\CANlib.h: 458: {
  2557                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2558  001176  0100               	movlb	0	; () banked
  2559  001178  51CC               	movf	CANsendMessage@identifier& (0+255),w,b
  2560  00117A  0100               	movlb	0	; () banked
  2561  00117C  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2562  00117E  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2563  001180  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2564  001182  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2568  001184  C0D8  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2572  001188  0E00               	movlw	0
  2573  00118A  0100               	movlb	0	; () banked
  2574  00118C  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2575  00118E  0100               	movlb	0	; () banked
  2576  001190  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2577  001192  0EFF               	movlw	255
  2578  001194  0100               	movlb	0	; () banked
  2579  001196  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2580  001198  0100               	movlb	0	; () banked
  2581  00119A  6FD9               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2582  00119C  0E00               	movlw	0
  2583  00119E  0100               	movlb	0	; () banked
  2584  0011A0  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2585  0011A2  0100               	movlb	0	; () banked
  2586  0011A4  6FDA               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2587  0011A6  0E00               	movlw	0
  2588  0011A8  0100               	movlb	0	; () banked
  2589  0011AA  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2590  0011AC  0100               	movlb	0	; () banked
  2591  0011AE  6FDB               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2595  0011B0  C0D8  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2596  0011B4  C0D9  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2597  0011B8  C0DA  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2598  0011BC  C0DB  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2599  0011C0  C0D5  F0D4         	movff	??_CANsendMessage+1,??_CANsendMessage
  2600  0011C4  C0D6  F0D5         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2601  0011C8  C0D7  F0D6         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2602  0011CC  0100               	movlb	0	; () banked
  2603  0011CE  6BD7               	clrf	(??_CANsendMessage+3)& (0+255),b
  2604  0011D0  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2605  0011D4  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2606  0011D8  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2607  0011DC  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2611  0011E0  C0D8  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2615  0011E4  0E00               	movlw	0
  2616  0011E6  010F               	movlb	15	; () banked
  2617  0011E8  6F22               	movwf	34,b	;volatile
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2621  0011EA  010F               	movlb	15	; () banked
  2622  0011EC  8722               	bsf	34,3,b	;volatile
  2623                           
  2624                           ; BSR set to: 15
  2625                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2626  0011EE  0100               	movlb	0	; () banked
  2627  0011F0  A1CE               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2628  0011F2  D002               	goto	l416
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2632  0011F4  010F               	movlb	15	; () banked
  2633  0011F6  8122               	bsf	34,0,b	;volatile
  2634  0011F8                     l416:
  2635                           
  2636                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2637  0011F8  0100               	movlb	0	; () banked
  2638  0011FA  A3CE               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2639  0011FC  D002               	goto	l417
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2643  0011FE  010F               	movlb	15	; () banked
  2644  001200  8322               	bsf	34,1,b	;volatile
  2645  001202                     l417:
  2646                           
  2647                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2648  001202  0100               	movlb	0	; () banked
  2649  001204  A5CE               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2650  001206  D002               	goto	l418
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2654  001208  010F               	movlb	15	; () banked
  2655  00120A  8B22               	bsf	34,5,b	;volatile
  2656  00120C                     l418:
  2657                           
  2658                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2659  00120C  0100               	movlb	0	; () banked
  2660  00120E  A7CE               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2661  001210  D002               	goto	l419
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2665  001212  010F               	movlb	15	; () banked
  2666  001214  8D22               	bsf	34,6,b	;volatile
  2667  001216                     l419:
  2668                           
  2669                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2670  001216  0100               	movlb	0	; () banked
  2671  001218  A9CE               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2672  00121A  D002               	goto	l3478
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2676  00121C  010F               	movlb	15	; () banked
  2677  00121E  8F22               	bsf	34,7,b	;volatile
  2678  001220                     l3478:
  2679                           
  2680                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2681  001220  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2682  001224  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2683  001228  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2684  00122C  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2685  001230  0E16               	movlw	22
  2686  001232  D006               	goto	u3770
  2687  001234                     u3775:
  2688  001234  0100               	movlb	0	; () banked
  2689  001236  90D8               	bcf	status,0,c
  2690  001238  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2691  00123A  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2692  00123C  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2693  00123E  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2694  001240                     u3770:
  2695  001240  2EE8               	decfsz	wreg,f,c
  2696  001242  D7F8               	goto	u3775
  2697  001244  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2698  001248  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2699  00124C  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2700  001250  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2704  001254  0100               	movlb	0	; () banked
  2705  001256  51D8               	movf	CANsendMessage@tamp& (0+255),w,b
  2706  001258  0100               	movlb	0	; () banked
  2707  00125A  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2708  00125C  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2709  00125E  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2710  001260  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2714  001262  C0D8  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2715                           
  2716                           ;inc\CANlib.h: 483: }
  2717  001266  D059               	goto	l3498
  2718  001268                     l415:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;inc\CANlib.h: 485: else
  2722                           ;inc\CANlib.h: 487: {
  2723                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2724  001268  010F               	movlb	15	; () banked
  2725  00126A  9722               	bcf	34,3,b	;volatile
  2726                           
  2727                           ; BSR set to: 15
  2728                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2729  00126C  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2730  001270  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2731  001274  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2732  001278  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2733  00127C  0E04               	movlw	4
  2734  00127E  D006               	goto	u3780
  2735  001280                     u3785:
  2736  001280  0100               	movlb	0	; () banked
  2737  001282  90D8               	bcf	status,0,c
  2738  001284  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2739  001286  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2740  001288  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2741  00128A  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2742  00128C                     u3780:
  2743  00128C  2EE8               	decfsz	wreg,f,c
  2744  00128E  D7F8               	goto	u3785
  2745  001290  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2746  001294  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2747  001298  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2748  00129C  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2752  0012A0  0100               	movlb	0	; () banked
  2753  0012A2  51D8               	movf	CANsendMessage@tamp& (0+255),w,b
  2754  0012A4  0100               	movlb	0	; () banked
  2755  0012A6  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2756  0012A8  6BD9               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2757  0012AA  6BDA               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2758  0012AC  6BDB               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2762  0012AE  C0D8  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2766  0012B2  0E07               	movlw	7
  2767  0012B4  0100               	movlb	0	; () banked
  2768  0012B6  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2769  0012B8  0100               	movlb	0	; () banked
  2770  0012BA  6FD8               	movwf	CANsendMessage@tamp& (0+255),b
  2771  0012BC  0E00               	movlw	0
  2772  0012BE  0100               	movlb	0	; () banked
  2773  0012C0  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2774  0012C2  0100               	movlb	0	; () banked
  2775  0012C4  6FD9               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2776  0012C6  0E00               	movlw	0
  2777  0012C8  0100               	movlb	0	; () banked
  2778  0012CA  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2779  0012CC  0100               	movlb	0	; () banked
  2780  0012CE  6FDA               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2781  0012D0  0E00               	movlw	0
  2782  0012D2  0100               	movlb	0	; () banked
  2783  0012D4  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2784  0012D6  0100               	movlb	0	; () banked
  2785  0012D8  6FDB               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2789  0012DA  C0D8  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2790  0012DE  C0D9  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2791  0012E2  C0DA  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2792  0012E6  C0DB  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2793  0012EA  0E05               	movlw	5
  2794  0012EC                     u3795:
  2795  0012EC  90D8               	bcf	status,0,c
  2796  0012EE  0100               	movlb	0	; () banked
  2797  0012F0  37D4               	rlcf	??_CANsendMessage& (0+255),f,b
  2798  0012F2  37D5               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2799  0012F4  37D6               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2800  0012F6  37D7               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2801  0012F8  2EE8               	decfsz	wreg,f,c
  2802  0012FA  D7F8               	goto	u3795
  2803  0012FC  C0D4  F0D8         	movff	??_CANsendMessage,CANsendMessage@tamp
  2804  001300  C0D5  F0D9         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2805  001304  C0D6  F0DA         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2806  001308  C0D7  F0DB         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2810  00130C  010F               	movlb	15	; () banked
  2811  00130E  5122               	movf	34,w,b	;volatile
  2812  001310  0B1F               	andlw	31
  2813  001312  010F               	movlb	15	; () banked
  2814  001314  6F22               	movwf	34,b	;volatile
  2815                           
  2816                           ; BSR set to: 15
  2817                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2818  001316  C0D8  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2819  00131A                     l3498:
  2820                           
  2821                           ;inc\CANlib.h: 498: }
  2822                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2823  00131A  0100               	movlb	0	; () banked
  2824  00131C  A1D3               	btfss	CANsendMessage@flags& (0+255),0,b
  2825  00131E  D003               	goto	l422
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2829  001320  010F               	movlb	15	; () banked
  2830  001322  8120               	bsf	32,0,b	;volatile
  2831  001324  D002               	goto	l423
  2832  001326                     l422:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;inc\CANlib.h: 502: else
  2836                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2837  001326  010F               	movlb	15	; () banked
  2838  001328  9120               	bcf	32,0,b	;volatile
  2839  00132A                     l423:
  2840                           
  2841                           ; BSR set to: 15
  2842                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2843  00132A  0100               	movlb	0	; () banked
  2844  00132C  A3D3               	btfss	CANsendMessage@flags& (0+255),1,b
  2845  00132E  D003               	goto	l424
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2849  001330  010F               	movlb	15	; () banked
  2850  001332  8320               	bsf	32,1,b	;volatile
  2851  001334  D002               	goto	l3504
  2852  001336                     l424:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;inc\CANlib.h: 506: else
  2856                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2857  001336  010F               	movlb	15	; () banked
  2858  001338  9320               	bcf	32,1,b	;volatile
  2859  00133A                     l3504:
  2860                           
  2861                           ; BSR set to: 15
  2862                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2863  00133A  C0D0  FFD9         	movff	CANsendMessage@data,fsr2l
  2864  00133E  C0D1  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2865  001342  50DF               	movf	indf2,w,c
  2866  001344  010F               	movlb	15	; () banked
  2867  001346  6F26               	movwf	38,b	;volatile
  2868                           
  2869                           ; BSR set to: 15
  2870                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2871  001348  0100               	movlb	0	; () banked
  2872  00134A  EE20 F001          	lfsr	2,1
  2873  00134E  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2874  001350  26D9               	addwf	fsr2l,f,c
  2875  001352  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2876  001354  22DA               	addwfc	fsr2h,f,c
  2877  001356  50DF               	movf	indf2,w,c
  2878  001358  010F               	movlb	15	; () banked
  2879  00135A  6F27               	movwf	39,b	;volatile
  2880                           
  2881                           ; BSR set to: 15
  2882                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2883  00135C  0100               	movlb	0	; () banked
  2884  00135E  EE20 F002          	lfsr	2,2
  2885  001362  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2886  001364  26D9               	addwf	fsr2l,f,c
  2887  001366  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2888  001368  22DA               	addwfc	fsr2h,f,c
  2889  00136A  50DF               	movf	indf2,w,c
  2890  00136C  010F               	movlb	15	; () banked
  2891  00136E  6F28               	movwf	40,b	;volatile
  2892                           
  2893                           ; BSR set to: 15
  2894                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2895  001370  0100               	movlb	0	; () banked
  2896  001372  EE20 F003          	lfsr	2,3
  2897  001376  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2898  001378  26D9               	addwf	fsr2l,f,c
  2899  00137A  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2900  00137C  22DA               	addwfc	fsr2h,f,c
  2901  00137E  50DF               	movf	indf2,w,c
  2902  001380  010F               	movlb	15	; () banked
  2903  001382  6F29               	movwf	41,b	;volatile
  2904                           
  2905                           ; BSR set to: 15
  2906                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2907  001384  0100               	movlb	0	; () banked
  2908  001386  EE20 F004          	lfsr	2,4
  2909  00138A  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2910  00138C  26D9               	addwf	fsr2l,f,c
  2911  00138E  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2912  001390  22DA               	addwfc	fsr2h,f,c
  2913  001392  50DF               	movf	indf2,w,c
  2914  001394  010F               	movlb	15	; () banked
  2915  001396  6F2A               	movwf	42,b	;volatile
  2916                           
  2917                           ; BSR set to: 15
  2918                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2919  001398  0100               	movlb	0	; () banked
  2920  00139A  EE20 F005          	lfsr	2,5
  2921  00139E  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2922  0013A0  26D9               	addwf	fsr2l,f,c
  2923  0013A2  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2924  0013A4  22DA               	addwfc	fsr2h,f,c
  2925  0013A6  50DF               	movf	indf2,w,c
  2926  0013A8  010F               	movlb	15	; () banked
  2927  0013AA  6F2B               	movwf	43,b	;volatile
  2928                           
  2929                           ; BSR set to: 15
  2930                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2931  0013AC  0100               	movlb	0	; () banked
  2932  0013AE  EE20 F006          	lfsr	2,6
  2933  0013B2  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2934  0013B4  26D9               	addwf	fsr2l,f,c
  2935  0013B6  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2936  0013B8  22DA               	addwfc	fsr2h,f,c
  2937  0013BA  50DF               	movf	indf2,w,c
  2938  0013BC  010F               	movlb	15	; () banked
  2939  0013BE  6F2C               	movwf	44,b	;volatile
  2940                           
  2941                           ; BSR set to: 15
  2942                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2943  0013C0  0100               	movlb	0	; () banked
  2944  0013C2  EE20 F007          	lfsr	2,7
  2945  0013C6  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2946  0013C8  26D9               	addwf	fsr2l,f,c
  2947  0013CA  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2948  0013CC  22DA               	addwfc	fsr2h,f,c
  2949  0013CE  50DF               	movf	indf2,w,c
  2950  0013D0  010F               	movlb	15	; () banked
  2951  0013D2  6F2D               	movwf	45,b	;volatile
  2952                           
  2953                           ; BSR set to: 15
  2954                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2955  0013D4  010F               	movlb	15	; () banked
  2956  0013D6  8720               	bsf	32,3,b	;volatile
  2957                           
  2958                           ; BSR set to: 15
  2959                           ;inc\CANlib.h: 520: return;
  2960  0013D8  0012               	return	
  2961  0013DA                     __end_of_CANsendMessage:
  2962                           	opt stack 0
  2963                           tblptru	equ	0xFF8
  2964                           tblptrh	equ	0xFF7
  2965                           tblptrl	equ	0xFF6
  2966                           tablat	equ	0xFF5
  2967                           prodh	equ	0xFF4
  2968                           prodl	equ	0xFF3
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           postdec1	equ	0xFE5
  2972                           fsr1l	equ	0xFE1
  2973                           indf2	equ	0xFDF
  2974                           fsr2h	equ	0xFDA
  2975                           fsr2l	equ	0xFD9
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function _CANisTxReady *****************
  2979 ;; Defined at:
  2980 ;;		line 1154 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      unsigned char 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2994 ;;      Params:         0       0       0       0
  2995 ;;      Locals:         0       1       0       0
  2996 ;;      Temps:          0       0       0       0
  2997 ;;      Totals:         0       1       0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    4
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_remote_frame_handler
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text3
  3009  002A04                     __ptext3:
  3010                           	opt stack 0
  3011  002A04                     _CANisTxReady:
  3012                           	opt stack 25
  3013                           
  3014                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3015                           
  3016                           ; BSR set to: 15
  3017                           ;incstack = 0
  3018  002A04  0E01               	movlw	1
  3019  002A06  0100               	movlb	0	; () banked
  3020  002A08  6FCC               	movwf	_CANisTxReady$3282& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023  002A0A  010F               	movlb	15	; () banked
  3024  002A0C  A740               	btfss	64,3,b	;volatile
  3025  002A0E  D009               	goto	l576
  3026                           
  3027                           ; BSR set to: 15
  3028  002A10  010F               	movlb	15	; () banked
  3029  002A12  A730               	btfss	48,3,b	;volatile
  3030  002A14  D006               	goto	l576
  3031                           
  3032                           ; BSR set to: 15
  3033  002A16  010F               	movlb	15	; () banked
  3034  002A18  A720               	btfss	32,3,b	;volatile
  3035  002A1A  D003               	goto	l576
  3036                           
  3037                           ; BSR set to: 15
  3038  002A1C  0E00               	movlw	0
  3039  002A1E  0100               	movlb	0	; () banked
  3040  002A20  6FCC               	movwf	_CANisTxReady$3282& (0+255),b
  3041  002A22                     l576:
  3042  002A22  0100               	movlb	0	; () banked
  3043  002A24  51CC               	movf	_CANisTxReady$3282& (0+255),w,b
  3044  002A26  0012               	return	
  3045  002A28                     __end_of_CANisTxReady:
  3046                           	opt stack 0
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           prodh	equ	0xFF4
  3052                           prodl	equ	0xFF3
  3053                           postinc0	equ	0xFEE
  3054                           wreg	equ	0xFE8
  3055                           postdec1	equ	0xFE5
  3056                           fsr1l	equ	0xFE1
  3057                           indf2	equ	0xFDF
  3058                           fsr2h	equ	0xFDA
  3059                           fsr2l	equ	0xFD9
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function _delay_ms *****************
  3063 ;; Defined at:
  3064 ;;		line 61 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  value_ms        2   32[BANK0 ] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;		None               void
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3078 ;;      Params:         0       2       0       0
  3079 ;;      Locals:         0       0       0       0
  3080 ;;      Temps:          0       0       0       0
  3081 ;;      Totals:         0       2       0       0
  3082 ;;Total ram usage:        2 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    5
  3085 ;; This function calls:
  3086 ;;		___wmul
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;;		_delay_s
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text4
  3094  00296E                     __ptext4:
  3095                           	opt stack 0
  3096  00296E                     _delay_ms:
  3097                           	opt stack 25
  3098                           
  3099                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;incstack = 0
  3103  00296E  C0DD  F0CC         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3104  002972  0100               	movlb	0	; () banked
  3105  002974  6BCD               	clrf	(___wmul@multiplier+1)& (0+255),b
  3106  002976  C0D2  F0CE         	movff	delay_ms@value_ms,___wmul@multiplicand
  3107  00297A  C0D3  F0CF         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3108  00297E  ECD4  F014         	call	___wmul	;wreg free
  3109  002982  C0CC  F074         	movff	?___wmul,_clock_counter_reference	;volatile
  3110  002986  C0CD  F075         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3111                           
  3112                           ;src\delay.c: 75: while (clock_counter_reference) {
  3113  00298A  D007               	goto	l589
  3114  00298C                     l3742:
  3115                           
  3116                           ;src\delay.c: 85: _delay(240);
  3117  00298C  0E50               	movlw	80
  3118  00298E                     u5267:
  3119  00298E  2EE8               	decfsz	wreg,f,c
  3120  002990  D7FE               	goto	u5267
  3121                           
  3122                           ;src\delay.c: 88: clock_counter_reference--;
  3123  002992  0100               	movlb	0	; () banked
  3124  002994  0774               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3125  002996  A0D8               	btfss	status,0,c
  3126  002998  0775               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3127  00299A                     l589:
  3128  00299A  0100               	movlb	0	; () banked
  3129  00299C  5174               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3130  00299E  0100               	movlb	0	; () banked
  3131  0029A0  1175               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3132  0029A2  B4D8               	btfsc	status,2,c
  3133  0029A4  0012               	return	
  3134  0029A6  D7F2               	goto	l3742
  3135  0029A8                     __end_of_delay_ms:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           prodh	equ	0xFF4
  3142                           prodl	equ	0xFF3
  3143                           postinc0	equ	0xFEE
  3144                           wreg	equ	0xFE8
  3145                           postdec1	equ	0xFE5
  3146                           fsr1l	equ	0xFE1
  3147                           indf2	equ	0xFDF
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function ___wmul *****************
  3153 ;; Defined at:
  3154 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  multiplier      2   26[BANK0 ] unsigned int 
  3157 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  product         2   30[BANK0 ] unsigned int 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2   26[BANK0 ] unsigned int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, prodl, prodh
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3169 ;;      Params:         0       4       0       0
  3170 ;;      Locals:         0       2       0       0
  3171 ;;      Temps:          0       0       0       0
  3172 ;;      Totals:         0       6       0       0
  3173 ;;Total ram usage:        6 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    4
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_delay_ms
  3180 ;;		_main
  3181 ;;		_remote_frame_handler
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text5
  3186  0029A8                     __ptext5:
  3187                           	opt stack 0
  3188  0029A8                     ___wmul:
  3189                           	opt stack 25
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;incstack = 0
  3193  0029A8  0100               	movlb	0	; () banked
  3194  0029AA  51CC               	movf	___wmul@multiplier& (0+255),w,b
  3195  0029AC  0100               	movlb	0	; () banked
  3196  0029AE  03CE               	mulwf	___wmul@multiplicand& (0+255),b
  3197  0029B0  CFF3 F0D0          	movff	prodl,___wmul@product
  3198  0029B4  CFF4 F0D1          	movff	prodh,___wmul@product+1
  3199  0029B8  0100               	movlb	0	; () banked
  3200  0029BA  51CC               	movf	___wmul@multiplier& (0+255),w,b
  3201  0029BC  0100               	movlb	0	; () banked
  3202  0029BE  03CF               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3203  0029C0  50F3               	movf	prodl,w,c
  3204  0029C2  0100               	movlb	0	; () banked
  3205  0029C4  27D1               	addwf	(___wmul@product+1)& (0+255),f,b
  3206  0029C6  0100               	movlb	0	; () banked
  3207  0029C8  51CD               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3208  0029CA  0100               	movlb	0	; () banked
  3209  0029CC  03CE               	mulwf	___wmul@multiplicand& (0+255),b
  3210  0029CE  50F3               	movf	prodl,w,c
  3211  0029D0  0100               	movlb	0	; () banked
  3212  0029D2  27D1               	addwf	(___wmul@product+1)& (0+255),f,b
  3213                           
  3214                           ; BSR set to: 0
  3215  0029D4  C0D0  F0CC         	movff	___wmul@product,?___wmul
  3216  0029D8  C0D1  F0CD         	movff	___wmul@product+1,?___wmul+1
  3217  0029DC  0012               	return	
  3218  0029DE                     __end_of___wmul:
  3219                           	opt stack 0
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           prodh	equ	0xFF4
  3225                           prodl	equ	0xFF3
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           postdec1	equ	0xFE5
  3229                           fsr1l	equ	0xFE1
  3230                           indf2	equ	0xFDF
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _board_initialization *****************
  3236 ;; Defined at:
  3237 ;;		line 389 in file "ABS_Code.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;		None               void
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3251 ;;      Params:         0       0       0       0
  3252 ;;      Locals:         0       0       0       0
  3253 ;;      Temps:          0       0       0       0
  3254 ;;      Totals:         0       0       0       0
  3255 ;;Total ram usage:        0 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    6
  3258 ;; This function calls:
  3259 ;;		_CANInitialize
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text6
  3266  0026CA                     __ptext6:
  3267                           	opt stack 0
  3268  0026CA                     _board_initialization:
  3269                           	opt stack 24
  3270                           
  3271                           ;ABS_Code.c: 391: LATA = 0x00;
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;incstack = 0
  3275  0026CA  0E00               	movlw	0
  3276  0026CC  6E89               	movwf	3977,c	;volatile
  3277                           
  3278                           ;ABS_Code.c: 392: TRISA = 0b11111101;
  3279  0026CE  0EFD               	movlw	253
  3280  0026D0  6E92               	movwf	3986,c	;volatile
  3281                           
  3282                           ;ABS_Code.c: 393: LATB = 0x00;
  3283  0026D2  0E00               	movlw	0
  3284  0026D4  6E8A               	movwf	3978,c	;volatile
  3285                           
  3286                           ;ABS_Code.c: 394: TRISB = 0b11111111;
  3287  0026D6  6893               	setf	3987,c	;volatile
  3288                           
  3289                           ;ABS_Code.c: 395: LATC = 0x00;
  3290  0026D8  0E00               	movlw	0
  3291  0026DA  6E8B               	movwf	3979,c	;volatile
  3292                           
  3293                           ;ABS_Code.c: 396: TRISC = 0b11111100;
  3294  0026DC  0EFC               	movlw	252
  3295  0026DE  6E94               	movwf	3988,c	;volatile
  3296                           
  3297                           ;ABS_Code.c: 397: LATD = 0x00;
  3298  0026E0  0E00               	movlw	0
  3299  0026E2  6E8C               	movwf	3980,c	;volatile
  3300                           
  3301                           ;ABS_Code.c: 398: TRISD = 0xFF;
  3302  0026E4  6895               	setf	3989,c	;volatile
  3303                           
  3304                           ;ABS_Code.c: 399: LATE = 0x00;
  3305  0026E6  0E00               	movlw	0
  3306  0026E8  6E8D               	movwf	3981,c	;volatile
  3307                           
  3308                           ;ABS_Code.c: 400: TRISE = 0xFF;
  3309  0026EA  6896               	setf	3990,c	;volatile
  3310                           
  3311                           ;ABS_Code.c: 402: ADCON1 = 0b11111110;
  3312  0026EC  0EFE               	movlw	254
  3313  0026EE  6EC1               	movwf	4033,c	;volatile
  3314                           
  3315                           ;ABS_Code.c: 405: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3316  0026F0  0E06               	movlw	6
  3317  0026F2  0101               	movlb	1	; () banked
  3318  0026F4  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3319  0026F6  0E05               	movlw	5
  3320  0026F8  0101               	movlb	1	; () banked
  3321  0026FA  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3322  0026FC  0E01               	movlw	1
  3323  0026FE  0101               	movlb	1	; () banked
  3324  002700  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3325  002702  0E03               	movlw	3
  3326  002704  0101               	movlb	1	; () banked
  3327  002706  6F03               	movwf	CANInitialize@BRP& (0+255),b
  3328  002708  0E9D               	movlw	157
  3329  00270A  0101               	movlb	1	; () banked
  3330  00270C  6F04               	movwf	CANInitialize@flags& (0+255),b
  3331  00270E  0E04               	movlw	4
  3332  002710  EC96  F011         	call	_CANInitialize
  3333                           
  3334                           ;ABS_Code.c: 408: PIR3bits.RXB1IF = 0;
  3335  002714  92A4               	bcf	4004,1,c	;volatile
  3336                           
  3337                           ;ABS_Code.c: 409: PIR3bits.RXB0IF = 0;
  3338  002716  90A4               	bcf	4004,0,c	;volatile
  3339                           
  3340                           ;ABS_Code.c: 410: INTCONbits.TMR0IF = 0;
  3341  002718  94F2               	bcf	intcon,2,c	;volatile
  3342                           
  3343                           ;ABS_Code.c: 411: PIR1bits.TMR1IF = 0;
  3344  00271A  909E               	bcf	3998,0,c	;volatile
  3345                           
  3346                           ;ABS_Code.c: 412: PIR2bits.TMR3IF = 0;
  3347  00271C  92A1               	bcf	4001,1,c	;volatile
  3348                           
  3349                           ;ABS_Code.c: 413: INTCONbits.INT0IF = 0;
  3350  00271E  92F2               	bcf	intcon,1,c	;volatile
  3351                           
  3352                           ;ABS_Code.c: 414: INTCON3bits.INT1IF = 0;
  3353  002720  90F0               	bcf	intcon3,0,c	;volatile
  3354                           
  3355                           ;ABS_Code.c: 418: RCONbits.IPEN = 1;
  3356  002722  8ED0               	bsf	4048,7,c	;volatile
  3357                           
  3358                           ;ABS_Code.c: 419: IPR3bits.RXB1IP = 0;
  3359  002724  92A5               	bcf	4005,1,c	;volatile
  3360                           
  3361                           ;ABS_Code.c: 420: IPR3bits.RXB0IP = 0;
  3362  002726  90A5               	bcf	4005,0,c	;volatile
  3363                           
  3364                           ;ABS_Code.c: 421: INTCON2bits.TMR0IP = 1;
  3365  002728  84F1               	bsf	intcon2,2,c	;volatile
  3366                           
  3367                           ;ABS_Code.c: 422: INTCON3bits.INT1IP = 1;
  3368  00272A  8CF0               	bsf	intcon3,6,c	;volatile
  3369                           
  3370                           ;ABS_Code.c: 423: IPR1bits.TMR1IP = 0;
  3371  00272C  909F               	bcf	3999,0,c	;volatile
  3372                           
  3373                           ;ABS_Code.c: 424: IPR2bits.TMR3IP = 0;
  3374  00272E  92A2               	bcf	4002,1,c	;volatile
  3375                           
  3376                           ;ABS_Code.c: 427: T0CON = 0x80;
  3377  002730  0E80               	movlw	128
  3378  002732  6ED5               	movwf	4053,c	;volatile
  3379                           
  3380                           ;ABS_Code.c: 434: TMR0H = 0xFF;
  3381  002734  68D7               	setf	4055,c	;volatile
  3382                           
  3383                           ;ABS_Code.c: 435: TMR0L = 0xFE;
  3384  002736  0EFE               	movlw	254
  3385  002738  6ED6               	movwf	4054,c	;volatile
  3386                           
  3387                           ;ABS_Code.c: 436: PORTCbits.RC0 = 0;
  3388  00273A  9082               	bcf	3970,0,c	;volatile
  3389                           
  3390                           ;ABS_Code.c: 437: brake_value_degree = 90;
  3391  00273C  0E5A               	movlw	90
  3392  00273E  6E3C               	movwf	_brake_value_degree,c
  3393                           
  3394                           ;ABS_Code.c: 438: T1CON = 00110000;
  3395  002740  0E00               	movlw	0
  3396  002742  6ECD               	movwf	4045,c	;volatile
  3397                           
  3398                           ;ABS_Code.c: 439: T3CON = 01110000;
  3399  002744  0E00               	movlw	0
  3400  002746  6EB1               	movwf	4017,c	;volatile
  3401                           
  3402                           ;ABS_Code.c: 440: INTCON2bits.INTEDG0 = 1;
  3403  002748  8CF1               	bsf	intcon2,6,c	;volatile
  3404                           
  3405                           ;ABS_Code.c: 441: INTCON2bits.INTEDG1 = 1;
  3406  00274A  8AF1               	bsf	intcon2,5,c	;volatile
  3407                           
  3408                           ;ABS_Code.c: 444: ADCON1 = 0b00001110;
  3409  00274C  0E0E               	movlw	14
  3410  00274E  6EC1               	movwf	4033,c	;volatile
  3411                           
  3412                           ;ABS_Code.c: 445: ADCON0bits.CHS3 = 0;
  3413  002750  9AC2               	bcf	4034,5,c	;volatile
  3414                           
  3415                           ;ABS_Code.c: 446: ADCON0bits.CHS2 = 0;
  3416  002752  98C2               	bcf	4034,4,c	;volatile
  3417                           
  3418                           ;ABS_Code.c: 447: ADCON0bits.CHS1 = 0;
  3419  002754  96C2               	bcf	4034,3,c	;volatile
  3420                           
  3421                           ;ABS_Code.c: 448: ADCON0bits.CHS0 = 0;
  3422  002756  94C2               	bcf	4034,2,c	;volatile
  3423                           
  3424                           ;ABS_Code.c: 449: ADCON2bits.ACQT2 = 1;
  3425  002758  8AC0               	bsf	4032,5,c	;volatile
  3426                           
  3427                           ;ABS_Code.c: 450: ADCON2bits.ACQT1 = 1;
  3428  00275A  88C0               	bsf	4032,4,c	;volatile
  3429                           
  3430                           ;ABS_Code.c: 451: ADCON2bits.ACQT0 = 0;
  3431  00275C  96C0               	bcf	4032,3,c	;volatile
  3432                           
  3433                           ;ABS_Code.c: 452: ADCON2bits.ADCS2 = 1;
  3434  00275E  84C0               	bsf	4032,2,c	;volatile
  3435                           
  3436                           ;ABS_Code.c: 453: ADCON2bits.ADCS1 = 0;
  3437  002760  92C0               	bcf	4032,1,c	;volatile
  3438                           
  3439                           ;ABS_Code.c: 454: ADCON2bits.ADCS0 = 1;
  3440  002762  80C0               	bsf	4032,0,c	;volatile
  3441                           
  3442                           ;ABS_Code.c: 455: ADCON2bits.ADFM = 0;
  3443  002764  9EC0               	bcf	4032,7,c	;volatile
  3444                           
  3445                           ;ABS_Code.c: 456: ADCON0bits.ADON = 1;
  3446  002766  80C2               	bsf	4034,0,c	;volatile
  3447                           
  3448                           ;ABS_Code.c: 459: PIE3bits.RXB1IE = 1;
  3449  002768  82A3               	bsf	4003,1,c	;volatile
  3450                           
  3451                           ;ABS_Code.c: 460: PIE3bits.RXB0IE = 1;
  3452  00276A  80A3               	bsf	4003,0,c	;volatile
  3453                           
  3454                           ;ABS_Code.c: 461: INTCONbits.TMR0IE = 1;
  3455  00276C  8AF2               	bsf	intcon,5,c	;volatile
  3456                           
  3457                           ;ABS_Code.c: 462: PIE1bits.TMR1IE = 1;
  3458  00276E  809D               	bsf	3997,0,c	;volatile
  3459                           
  3460                           ;ABS_Code.c: 463: PIE2bits.TMR3IE = 1;
  3461  002770  82A0               	bsf	4000,1,c	;volatile
  3462                           
  3463                           ;ABS_Code.c: 464: INTCONbits.INT0IE = 1;
  3464  002772  88F2               	bsf	intcon,4,c	;volatile
  3465                           
  3466                           ;ABS_Code.c: 465: INTCON3bits.INT1IE = 1;
  3467  002774  86F0               	bsf	intcon3,3,c	;volatile
  3468                           
  3469                           ;ABS_Code.c: 466: INTCONbits.GIEH = 1;
  3470  002776  8EF2               	bsf	intcon,7,c	;volatile
  3471                           
  3472                           ;ABS_Code.c: 467: INTCONbits.GIEL = 1;
  3473  002778  8CF2               	bsf	intcon,6,c	;volatile
  3474                           
  3475                           ;ABS_Code.c: 470: T1CONbits.TMR1ON = 1;
  3476  00277A  80CD               	bsf	4045,0,c	;volatile
  3477                           
  3478                           ;ABS_Code.c: 471: T3CONbits.TMR3ON = 1;
  3479  00277C  80B1               	bsf	4017,0,c	;volatile
  3480                           
  3481                           ;ABS_Code.c: 472: T0CONbits.TMR0ON = 1;
  3482  00277E  8ED5               	bsf	4053,7,c	;volatile
  3483  002780  0012               	return		;funcret
  3484  002782                     __end_of_board_initialization:
  3485                           	opt stack 0
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           prodh	equ	0xFF4
  3491                           prodl	equ	0xFF3
  3492                           intcon	equ	0xFF2
  3493                           intcon2	equ	0xFF1
  3494                           intcon3	equ	0xFF0
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           postdec1	equ	0xFE5
  3498                           fsr1l	equ	0xFE1
  3499                           indf2	equ	0xFDF
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _CANInitialize *****************
  3505 ;; Defined at:
  3506 ;;		line 218 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  propSeg         1    wreg     unsigned char 
  3509 ;;  phaseSeg1       1    0[BANK1 ] unsigned char 
  3510 ;;  phaseSeg2       1    1[BANK1 ] unsigned char 
  3511 ;;  SJW             1    2[BANK1 ] unsigned char 
  3512 ;;  BRP             1    3[BANK1 ] unsigned char 
  3513 ;;  flags           1    4[BANK1 ] enum E16844
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  propSeg         1   40[BANK0 ] unsigned char 
  3516 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3517 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;		None               void
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3527 ;;      Params:         0       0       5       0
  3528 ;;      Locals:         0       3       0       0
  3529 ;;      Temps:          0       0       4       0
  3530 ;;      Totals:         0       3       9       0
  3531 ;;Total ram usage:       12 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    5
  3534 ;; This function calls:
  3535 ;;		_CANOperationMode
  3536 ;;		_CANSetFilter
  3537 ;;		_CANSetMask
  3538 ;; This function is called by:
  3539 ;;		_board_initialization
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text7
  3544  00232C                     __ptext7:
  3545                           	opt stack 0
  3546  00232C                     _CANInitialize:
  3547                           	opt stack 24
  3548                           
  3549                           ;incstack = 0
  3550                           ;CANInitialize@propSeg stored from wreg
  3551  00232C  0100               	movlb	0	; () banked
  3552  00232E  6FDA               	movwf	CANInitialize@propSeg& (0+255),b
  3553                           
  3554                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3555                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3556                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3557  002330  0E80               	movlw	128
  3558  002332  EC14  F015         	call	_CANOperationMode
  3559                           
  3560                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3561  002336  0E00               	movlw	0
  3562  002338  6E70               	movwf	3952,c	;volatile
  3563                           
  3564                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3565  00233A  0E00               	movlw	0
  3566  00233C  6E71               	movwf	3953,c	;volatile
  3567                           
  3568                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3569  00233E  0E00               	movlw	0
  3570  002340  6E72               	movwf	3954,c	;volatile
  3571                           
  3572                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3573  002342  0101               	movlb	1	; () banked
  3574  002344  4102               	rrncf	CANInitialize@SJW& (0+255),w,b
  3575  002346  42E8               	rrncf	wreg,f,c
  3576  002348  0BC0               	andlw	192
  3577  00234A  0101               	movlb	1	; () banked
  3578  00234C  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3579                           
  3580                           ; BSR set to: 1
  3581                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3582  00234E  0101               	movlb	1	; () banked
  3583  002350  5102               	movf	CANInitialize@SJW& (0+255),w,b
  3584  002352  1270               	iorwf	3952,f,c	;volatile
  3585                           
  3586                           ; BSR set to: 1
  3587                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3588  002354  0101               	movlb	1	; () banked
  3589  002356  5103               	movf	CANInitialize@BRP& (0+255),w,b
  3590  002358  1270               	iorwf	3952,f,c	;volatile
  3591                           
  3592                           ; BSR set to: 1
  3593                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3594  00235A  0100               	movlb	0	; () banked
  3595  00235C  51DA               	movf	CANInitialize@propSeg& (0+255),w,b
  3596  00235E  1271               	iorwf	3953,f,c	;volatile
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3600  002360  0101               	movlb	1	; () banked
  3601  002362  3900               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3602  002364  42E8               	rrncf	wreg,f,c
  3603  002366  0BF8               	andlw	248
  3604  002368  0101               	movlb	1	; () banked
  3605  00236A  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3606                           
  3607                           ; BSR set to: 1
  3608                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3609  00236C  0101               	movlb	1	; () banked
  3610  00236E  5100               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3611  002370  1271               	iorwf	3953,f,c	;volatile
  3612                           
  3613                           ; BSR set to: 1
  3614                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3615  002372  0101               	movlb	1	; () banked
  3616  002374  A504               	btfss	CANInitialize@flags& (0+255),2,b
  3617                           
  3618                           ; BSR set to: 1
  3619                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3620  002376  8C71               	bsf	3953,6,c	;volatile
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3624  002378  0101               	movlb	1	; () banked
  3625  00237A  B104               	btfsc	CANInitialize@flags& (0+255),0,b
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3629  00237C  8E71               	bsf	3953,7,c	;volatile
  3630                           
  3631                           ; BSR set to: 1
  3632                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3633                           
  3634                           ; BSR set to: 1
  3635  00237E  0101               	movlb	1	; () banked
  3636  002380  5101               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3637  002382  1272               	iorwf	3954,f,c	;volatile
  3638                           
  3639                           ; BSR set to: 1
  3640                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3641  002384  0101               	movlb	1	; () banked
  3642  002386  B304               	btfsc	CANInitialize@flags& (0+255),1,b
  3643                           
  3644                           ; BSR set to: 1
  3645                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3646  002388  8C72               	bsf	3954,6,c	;volatile
  3647                           
  3648                           ; BSR set to: 1
  3649                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3650                           
  3651                           ; BSR set to: 1
  3652  00238A  0101               	movlb	1	; () banked
  3653  00238C  5104               	movf	CANInitialize@flags& (0+255),w,b
  3654  00238E  0B60               	andlw	96
  3655  002390  6E60               	movwf	3936,c	;volatile
  3656                           
  3657                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3658  002392  0101               	movlb	1	; () banked
  3659  002394  5104               	movf	CANInitialize@flags& (0+255),w,b
  3660  002396  0B10               	andlw	16
  3661  002398  0AFF               	xorlw	255
  3662  00239A  B4D8               	btfsc	status,2,c
  3663                           
  3664                           ; BSR set to: 1
  3665                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3666  00239C  8460               	bsf	3936,2,c	;volatile
  3667                           
  3668                           ; BSR set to: 1
  3669                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3670  00239E  CF60 FF50          	movff	3936,3920	;volatile
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3674  0023A2  0E00               	movlw	0
  3675  0023A4  0100               	movlb	0	; () banked
  3676  0023A6  6FCC               	movwf	CANSetMask@mask& (0+255),b
  3677  0023A8  0E00               	movlw	0
  3678  0023AA  6FCD               	movwf	(CANSetMask@mask+1)& (0+255),b
  3679  0023AC  0E00               	movlw	0
  3680  0023AE  6FCE               	movwf	(CANSetMask@mask+2)& (0+255),b
  3681  0023B0  0E00               	movlw	0
  3682  0023B2  6FCF               	movwf	(CANSetMask@mask+3)& (0+255),b
  3683  0023B4  0EF7               	movlw	247
  3684  0023B6  0100               	movlb	0	; () banked
  3685  0023B8  6FD0               	movwf	CANSetMask@type& (0+255),b
  3686  0023BA  0E01               	movlw	1
  3687  0023BC  EC73  F00C         	call	_CANSetMask
  3688                           
  3689                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3690  0023C0  0E00               	movlw	0
  3691  0023C2  0100               	movlb	0	; () banked
  3692  0023C4  6FCC               	movwf	CANSetMask@mask& (0+255),b
  3693  0023C6  0E00               	movlw	0
  3694  0023C8  6FCD               	movwf	(CANSetMask@mask+1)& (0+255),b
  3695  0023CA  0E00               	movlw	0
  3696  0023CC  6FCE               	movwf	(CANSetMask@mask+2)& (0+255),b
  3697  0023CE  0E00               	movlw	0
  3698  0023D0  6FCF               	movwf	(CANSetMask@mask+3)& (0+255),b
  3699  0023D2  0EF7               	movlw	247
  3700  0023D4  0100               	movlb	0	; () banked
  3701  0023D6  6FD0               	movwf	CANSetMask@type& (0+255),b
  3702  0023D8  0E02               	movlw	2
  3703  0023DA  EC73  F00C         	call	_CANSetMask
  3704                           
  3705                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3706  0023DE  D00F               	goto	l4296
  3707  0023E0                     l4290:
  3708                           
  3709                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3710  0023E0  0EF7               	movlw	247
  3711  0023E2  0100               	movlb	0	; () banked
  3712  0023E4  6FDB               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3713  0023E6  D007               	goto	l4292
  3714  0023E8                     l378:
  3715                           
  3716                           ; BSR set to: 1
  3717                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3718  0023E8  0100               	movlb	0	; () banked
  3719  0023EA  69DB               	setf	CANInitialize@FilterConfig1& (0+255),b
  3720                           
  3721                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3722  0023EC  0100               	movlb	0	; () banked
  3723  0023EE  69DC               	setf	CANInitialize@FilterConfig2& (0+255),b
  3724                           
  3725                           ;inc\CANlib.h: 273: break;
  3726  0023F0  D028               	goto	l4298
  3727  0023F2                     l379:
  3728                           
  3729                           ; BSR set to: 1
  3730                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3731  0023F2  0100               	movlb	0	; () banked
  3732  0023F4  69DB               	setf	CANInitialize@FilterConfig1& (0+255),b
  3733  0023F6                     l4292:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3737  0023F6  0EF7               	movlw	247
  3738  0023F8  0100               	movlb	0	; () banked
  3739  0023FA  6FDC               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;inc\CANlib.h: 278: }
  3743                           
  3744                           ;inc\CANlib.h: 277: break;
  3745  0023FC  D022               	goto	l4298
  3746  0023FE                     l4296:
  3747  0023FE  0E9F               	movlw	159
  3748  002400  0101               	movlb	1	; () banked
  3749  002402  6F05               	movwf	??_CANInitialize& (0+255),b
  3750  002404  0EFF               	movlw	255
  3751  002406  0101               	movlb	1	; () banked
  3752  002408  6F06               	movwf	(??_CANInitialize+1)& (0+255),b
  3753  00240A  0101               	movlb	1	; () banked
  3754  00240C  5104               	movf	CANInitialize@flags& (0+255),w,b
  3755  00240E  0B60               	andlw	96
  3756  002410  0101               	movlb	1	; () banked
  3757  002412  6F07               	movwf	(??_CANInitialize+2)& (0+255),b
  3758  002414  6B08               	clrf	(??_CANInitialize+3)& (0+255),b
  3759  002416  0101               	movlb	1	; () banked
  3760  002418  5105               	movf	??_CANInitialize& (0+255),w,b
  3761  00241A  0101               	movlb	1	; () banked
  3762  00241C  1307               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3763  00241E  0101               	movlb	1	; () banked
  3764  002420  5106               	movf	(??_CANInitialize+1)& (0+255),w,b
  3765  002422  0101               	movlb	1	; () banked
  3766  002424  1308               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3767                           
  3768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3769                           ; Switch size 1, requested type "space"
  3770                           ; Number of cases is 1, Range of values is 0 to 0
  3771                           ; switch strategies available:
  3772                           ; Name         Instructions Cycles
  3773                           ; simple_byte            4     3 (average)
  3774                           ;	Chosen strategy is simple_byte
  3775  002426  0101               	movlb	1	; () banked
  3776  002428  5108               	movf	(??_CANInitialize+3)& (0+255),w,b
  3777  00242A  0A00               	xorlw	0	; case 0
  3778  00242C  A4D8               	btfss	status,2,c
  3779  00242E  D7E1               	goto	l379
  3780                           
  3781                           ; BSR set to: 1
  3782                           ; Switch size 1, requested type "space"
  3783                           ; Number of cases is 2, Range of values is 191 to 223
  3784                           ; switch strategies available:
  3785                           ; Name         Instructions Cycles
  3786                           ; simple_byte            7     4 (average)
  3787                           ;	Chosen strategy is simple_byte
  3788  002430  0101               	movlb	1	; () banked
  3789  002432  5107               	movf	(??_CANInitialize+2)& (0+255),w,b
  3790  002434  0ABF               	xorlw	191	; case 191
  3791  002436  B4D8               	btfsc	status,2,c
  3792  002438  D7D7               	goto	l378
  3793  00243A  0A60               	xorlw	96	; case 223
  3794  00243C  B4D8               	btfsc	status,2,c
  3795  00243E  D7D0               	goto	l4290
  3796  002440  D7D8               	goto	l379
  3797  002442                     l4298:
  3798                           
  3799                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3800  002442  0E00               	movlw	0
  3801  002444  0100               	movlb	0	; () banked
  3802  002446  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3803  002448  0E00               	movlw	0
  3804  00244A  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3805  00244C  0E00               	movlw	0
  3806  00244E  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3807  002450  0E00               	movlw	0
  3808  002452  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3809  002454  C0DB  F0D0         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3810  002458  0E00               	movlw	0
  3811  00245A  ECA4  F000         	call	_CANSetFilter
  3812                           
  3813                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3814  00245E  0E00               	movlw	0
  3815  002460  0100               	movlb	0	; () banked
  3816  002462  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3817  002464  0E00               	movlw	0
  3818  002466  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3819  002468  0E00               	movlw	0
  3820  00246A  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3821  00246C  0E00               	movlw	0
  3822  00246E  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3823  002470  C0DB  F0D0         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3824  002474  0E01               	movlw	1
  3825  002476  ECA4  F000         	call	_CANSetFilter
  3826                           
  3827                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3828  00247A  0E00               	movlw	0
  3829  00247C  0100               	movlb	0	; () banked
  3830  00247E  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3831  002480  0E00               	movlw	0
  3832  002482  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3833  002484  0E00               	movlw	0
  3834  002486  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3835  002488  0E00               	movlw	0
  3836  00248A  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3837  00248C  C0DC  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3838  002490  0E02               	movlw	2
  3839  002492  ECA4  F000         	call	_CANSetFilter
  3840                           
  3841                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3842  002496  0E00               	movlw	0
  3843  002498  0100               	movlb	0	; () banked
  3844  00249A  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3845  00249C  0E00               	movlw	0
  3846  00249E  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3847  0024A0  0E00               	movlw	0
  3848  0024A2  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3849  0024A4  0E00               	movlw	0
  3850  0024A6  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3851  0024A8  C0DC  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3852  0024AC  0E03               	movlw	3
  3853  0024AE  ECA4  F000         	call	_CANSetFilter
  3854                           
  3855                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3856  0024B2  0E00               	movlw	0
  3857  0024B4  0100               	movlb	0	; () banked
  3858  0024B6  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3859  0024B8  0E00               	movlw	0
  3860  0024BA  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3861  0024BC  0E00               	movlw	0
  3862  0024BE  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3863  0024C0  0E00               	movlw	0
  3864  0024C2  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3865  0024C4  C0DC  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3866  0024C8  0E04               	movlw	4
  3867  0024CA  ECA4  F000         	call	_CANSetFilter
  3868                           
  3869                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3870  0024CE  0E00               	movlw	0
  3871  0024D0  0100               	movlb	0	; () banked
  3872  0024D2  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3873  0024D4  0E00               	movlw	0
  3874  0024D6  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3875  0024D8  0E00               	movlw	0
  3876  0024DA  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3877  0024DC  0E00               	movlw	0
  3878  0024DE  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3879  0024E0  C0DC  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3880  0024E4  0E05               	movlw	5
  3881  0024E6  ECA4  F000         	call	_CANSetFilter
  3882                           
  3883                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3884  0024EA  0E00               	movlw	0
  3885  0024EC  EC14  F015         	call	_CANOperationMode
  3886  0024F0  0012               	return		;funcret
  3887  0024F2                     __end_of_CANInitialize:
  3888                           	opt stack 0
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           prodh	equ	0xFF4
  3894                           prodl	equ	0xFF3
  3895                           intcon	equ	0xFF2
  3896                           intcon2	equ	0xFF1
  3897                           intcon3	equ	0xFF0
  3898                           postinc0	equ	0xFEE
  3899                           wreg	equ	0xFE8
  3900                           postdec1	equ	0xFE5
  3901                           fsr1l	equ	0xFE1
  3902                           indf2	equ	0xFDF
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _CANSetMask *****************
  3908 ;; Defined at:
  3909 ;;		line 640 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  numBuffer       1    wreg     enum E16878
  3912 ;;  mask            4   26[BANK0 ] unsigned long 
  3913 ;;  type            1   30[BANK0 ] enum E16844
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  numBuffer       1   35[BANK0 ] enum E16878
  3916 ;;  tamp            4   36[BANK0 ] unsigned long 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;		None               void
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3926 ;;      Params:         0       5       0       0
  3927 ;;      Locals:         0       5       0       0
  3928 ;;      Temps:          0       4       0       0
  3929 ;;      Totals:         0      14       0       0
  3930 ;;Total ram usage:       14 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    4
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_CANInitialize
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text8
  3941  0018E6                     __ptext8:
  3942                           	opt stack 0
  3943  0018E6                     _CANSetMask:
  3944                           	opt stack 24
  3945                           
  3946                           ;incstack = 0
  3947                           ;CANSetMask@numBuffer stored from wreg
  3948  0018E6  0100               	movlb	0	; () banked
  3949  0018E8  6FD5               	movwf	CANSetMask@numBuffer& (0+255),b
  3950                           
  3951                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3952  0018EA  0100               	movlb	0	; () banked
  3953  0018EC  05D5               	decf	CANSetMask@numBuffer& (0+255),w,b
  3954  0018EE  A4D8               	btfss	status,2,c
  3955  0018F0  D056               	goto	l2850
  3956                           
  3957                           ; BSR set to: 0
  3958  0018F2  0100               	movlb	0	; () banked
  3959  0018F4  29D0               	incf	CANSetMask@type& (0+255),w,b
  3960  0018F6  A4D8               	btfss	status,2,c
  3961  0018F8  D052               	goto	l2850
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;inc\CANlib.h: 644: {
  3965                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3966  0018FA  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  3967  0018FE  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3968  001902  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3969  001906  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3970  00190A  0E04               	movlw	4
  3971  00190C  D006               	goto	u2450
  3972  00190E                     u2455:
  3973  00190E  0100               	movlb	0	; () banked
  3974  001910  90D8               	bcf	status,0,c
  3975  001912  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3976  001914  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3977  001916  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3978  001918  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  3979  00191A                     u2450:
  3980  00191A  2EE8               	decfsz	wreg,f,c
  3981  00191C  D7F8               	goto	u2455
  3982  00191E  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  3983  001922  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3984  001926  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3985  00192A  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3989  00192E  0100               	movlb	0	; () banked
  3990  001930  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  3991  001932  0100               	movlb	0	; () banked
  3992  001934  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  3993  001936  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3994  001938  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3995  00193A  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3999  00193C  C0D6  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4003  001940  0E07               	movlw	7
  4004  001942  0100               	movlb	0	; () banked
  4005  001944  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4006  001946  0100               	movlb	0	; () banked
  4007  001948  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4008  00194A  0E00               	movlw	0
  4009  00194C  0100               	movlb	0	; () banked
  4010  00194E  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4011  001950  0100               	movlb	0	; () banked
  4012  001952  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4013  001954  0E00               	movlw	0
  4014  001956  0100               	movlb	0	; () banked
  4015  001958  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4016  00195A  0100               	movlb	0	; () banked
  4017  00195C  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4018  00195E  0E00               	movlw	0
  4019  001960  0100               	movlb	0	; () banked
  4020  001962  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4021  001964  0100               	movlb	0	; () banked
  4022  001966  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4026  001968  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4027  00196C  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4028  001970  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4029  001974  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4030  001978  0E05               	movlw	5
  4031  00197A                     u2465:
  4032  00197A  90D8               	bcf	status,0,c
  4033  00197C  0100               	movlb	0	; () banked
  4034  00197E  37D1               	rlcf	??_CANSetMask& (0+255),f,b
  4035  001980  37D2               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4036  001982  37D3               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4037  001984  37D4               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4038  001986  2EE8               	decfsz	wreg,f,c
  4039  001988  D7F8               	goto	u2465
  4040  00198A  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4041  00198E  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4042  001992  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4043  001996  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4047  00199A  C0D6  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4048  00199E                     l2850:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;inc\CANlib.h: 652: }
  4052                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4053  00199E  0E02               	movlw	2
  4054  0019A0  0100               	movlb	0	; () banked
  4055  0019A2  19D5               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4056  0019A4  A4D8               	btfss	status,2,c
  4057  0019A6  D056               	goto	l2866
  4058                           
  4059                           ; BSR set to: 0
  4060  0019A8  0100               	movlb	0	; () banked
  4061  0019AA  29D0               	incf	CANSetMask@type& (0+255),w,b
  4062  0019AC  A4D8               	btfss	status,2,c
  4063  0019AE  D052               	goto	l2866
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 655: {
  4067                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4068  0019B0  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  4069  0019B4  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4070  0019B8  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4071  0019BC  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4072  0019C0  0E04               	movlw	4
  4073  0019C2  D006               	goto	u2490
  4074  0019C4                     u2495:
  4075  0019C4  0100               	movlb	0	; () banked
  4076  0019C6  90D8               	bcf	status,0,c
  4077  0019C8  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4078  0019CA  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4079  0019CC  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4080  0019CE  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  4081  0019D0                     u2490:
  4082  0019D0  2EE8               	decfsz	wreg,f,c
  4083  0019D2  D7F8               	goto	u2495
  4084  0019D4  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4085  0019D8  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4086  0019DC  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4087  0019E0  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4091  0019E4  0100               	movlb	0	; () banked
  4092  0019E6  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  4093  0019E8  0100               	movlb	0	; () banked
  4094  0019EA  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4095  0019EC  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4096  0019EE  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4097  0019F0  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4101  0019F2  C0D6  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4105  0019F6  0E07               	movlw	7
  4106  0019F8  0100               	movlb	0	; () banked
  4107  0019FA  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4108  0019FC  0100               	movlb	0	; () banked
  4109  0019FE  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4110  001A00  0E00               	movlw	0
  4111  001A02  0100               	movlb	0	; () banked
  4112  001A04  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4113  001A06  0100               	movlb	0	; () banked
  4114  001A08  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4115  001A0A  0E00               	movlw	0
  4116  001A0C  0100               	movlb	0	; () banked
  4117  001A0E  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4118  001A10  0100               	movlb	0	; () banked
  4119  001A12  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4120  001A14  0E00               	movlw	0
  4121  001A16  0100               	movlb	0	; () banked
  4122  001A18  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4123  001A1A  0100               	movlb	0	; () banked
  4124  001A1C  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4128  001A1E  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4129  001A22  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4130  001A26  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4131  001A2A  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4132  001A2E  0E05               	movlw	5
  4133  001A30                     u2505:
  4134  001A30  90D8               	bcf	status,0,c
  4135  001A32  0100               	movlb	0	; () banked
  4136  001A34  37D1               	rlcf	??_CANSetMask& (0+255),f,b
  4137  001A36  37D2               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4138  001A38  37D3               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4139  001A3A  37D4               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4140  001A3C  2EE8               	decfsz	wreg,f,c
  4141  001A3E  D7F8               	goto	u2505
  4142  001A40  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4143  001A44  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4144  001A48  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4145  001A4C  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4149  001A50  C0D6  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4150  001A54                     l2866:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;inc\CANlib.h: 663: }
  4154                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4155  001A54  0100               	movlb	0	; () banked
  4156  001A56  05D5               	decf	CANSetMask@numBuffer& (0+255),w,b
  4157  001A58  A4D8               	btfss	status,2,c
  4158  001A5A  D087               	goto	l2898
  4159                           
  4160                           ; BSR set to: 0
  4161  001A5C  0EF7               	movlw	247
  4162  001A5E  0100               	movlb	0	; () banked
  4163  001A60  19D0               	xorwf	CANSetMask@type& (0+255),w,b
  4164  001A62  A4D8               	btfss	status,2,c
  4165  001A64  D082               	goto	l2898
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;inc\CANlib.h: 666: {
  4169                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4170  001A66  0100               	movlb	0	; () banked
  4171  001A68  51CC               	movf	CANSetMask@mask& (0+255),w,b
  4172  001A6A  0100               	movlb	0	; () banked
  4173  001A6C  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4174  001A6E  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4175  001A70  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4176  001A72  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4180  001A74  C0D6  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4184  001A78  0E00               	movlw	0
  4185  001A7A  0100               	movlb	0	; () banked
  4186  001A7C  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4187  001A7E  0100               	movlb	0	; () banked
  4188  001A80  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4189  001A82  0EFF               	movlw	255
  4190  001A84  0100               	movlb	0	; () banked
  4191  001A86  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4192  001A88  0100               	movlb	0	; () banked
  4193  001A8A  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4194  001A8C  0E00               	movlw	0
  4195  001A8E  0100               	movlb	0	; () banked
  4196  001A90  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4197  001A92  0100               	movlb	0	; () banked
  4198  001A94  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4199  001A96  0E00               	movlw	0
  4200  001A98  0100               	movlb	0	; () banked
  4201  001A9A  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4202  001A9C  0100               	movlb	0	; () banked
  4203  001A9E  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4207  001AA0  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4208  001AA4  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4209  001AA8  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4210  001AAC  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4211  001AB0  C0D2  F0D1         	movff	??_CANSetMask+1,??_CANSetMask
  4212  001AB4  C0D3  F0D2         	movff	??_CANSetMask+2,??_CANSetMask+1
  4213  001AB8  C0D4  F0D3         	movff	??_CANSetMask+3,??_CANSetMask+2
  4214  001ABC  0100               	movlb	0	; () banked
  4215  001ABE  6BD4               	clrf	(??_CANSetMask+3)& (0+255),b
  4216  001AC0  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4217  001AC4  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4218  001AC8  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4219  001ACC  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4223  001AD0  C0D6  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4227  001AD4  0100               	movlb	0	; () banked
  4228  001AD6  A1CE               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4229  001AD8  D003               	goto	l452
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4233  001ADA  010F               	movlb	15	; () banked
  4234  001ADC  8119               	bsf	25,0,b	;volatile
  4235  001ADE  D002               	goto	l453
  4236  001AE0                     l452:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;inc\CANlib.h: 676: else
  4240                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4241  001AE0  010F               	movlb	15	; () banked
  4242  001AE2  9119               	bcf	25,0,b	;volatile
  4243  001AE4                     l453:
  4244                           
  4245                           ; BSR set to: 15
  4246                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4247  001AE4  0100               	movlb	0	; () banked
  4248  001AE6  A3CE               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4249  001AE8  D003               	goto	l454
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4253  001AEA  010F               	movlb	15	; () banked
  4254  001AEC  8319               	bsf	25,1,b	;volatile
  4255  001AEE  D002               	goto	l455
  4256  001AF0                     l454:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;inc\CANlib.h: 681: else
  4260                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4261  001AF0  010F               	movlb	15	; () banked
  4262  001AF2  9319               	bcf	25,1,b	;volatile
  4263  001AF4                     l455:
  4264                           
  4265                           ; BSR set to: 15
  4266                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4267  001AF4  0100               	movlb	0	; () banked
  4268  001AF6  A5CE               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4269  001AF8  D003               	goto	l456
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4273  001AFA  010F               	movlb	15	; () banked
  4274  001AFC  8B19               	bsf	25,5,b	;volatile
  4275  001AFE  D002               	goto	l457
  4276  001B00                     l456:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 686: else
  4280                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4281  001B00  010F               	movlb	15	; () banked
  4282  001B02  9B19               	bcf	25,5,b	;volatile
  4283  001B04                     l457:
  4284                           
  4285                           ; BSR set to: 15
  4286                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4287  001B04  0100               	movlb	0	; () banked
  4288  001B06  A7CE               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4289  001B08  D003               	goto	l458
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4293  001B0A  010F               	movlb	15	; () banked
  4294  001B0C  8D19               	bsf	25,6,b	;volatile
  4295  001B0E  D002               	goto	l459
  4296  001B10                     l458:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;inc\CANlib.h: 691: else
  4300                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4301  001B10  010F               	movlb	15	; () banked
  4302  001B12  9D19               	bcf	25,6,b	;volatile
  4303  001B14                     l459:
  4304                           
  4305                           ; BSR set to: 15
  4306                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4307  001B14  0100               	movlb	0	; () banked
  4308  001B16  A9CE               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4309  001B18  D003               	goto	l460
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4313  001B1A  010F               	movlb	15	; () banked
  4314  001B1C  8F19               	bsf	25,7,b	;volatile
  4315  001B1E  D002               	goto	l2892
  4316  001B20                     l460:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;inc\CANlib.h: 696: else
  4320                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4321  001B20  010F               	movlb	15	; () banked
  4322  001B22  9F19               	bcf	25,7,b	;volatile
  4323  001B24                     l2892:
  4324                           
  4325                           ; BSR set to: 15
  4326                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4327  001B24  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  4328  001B28  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4329  001B2C  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4330  001B30  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4331  001B34  0E16               	movlw	22
  4332  001B36  D006               	goto	u2580
  4333  001B38                     u2585:
  4334  001B38  0100               	movlb	0	; () banked
  4335  001B3A  90D8               	bcf	status,0,c
  4336  001B3C  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4337  001B3E  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4338  001B40  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4339  001B42  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  4340  001B44                     u2580:
  4341  001B44  2EE8               	decfsz	wreg,f,c
  4342  001B46  D7F8               	goto	u2585
  4343  001B48  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4344  001B4C  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4345  001B50  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4346  001B54  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4350  001B58  0100               	movlb	0	; () banked
  4351  001B5A  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  4352  001B5C  0100               	movlb	0	; () banked
  4353  001B5E  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4354  001B60  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4355  001B62  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4356  001B64  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4360  001B66  C0D6  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4361  001B6A                     l2898:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 702: }
  4365                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4366  001B6A  0E02               	movlw	2
  4367  001B6C  0100               	movlb	0	; () banked
  4368  001B6E  19D5               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4369  001B70  A4D8               	btfss	status,2,c
  4370  001B72  0012               	return	
  4371                           
  4372                           ; BSR set to: 0
  4373  001B74  0EF7               	movlw	247
  4374  001B76  0100               	movlb	0	; () banked
  4375  001B78  19D0               	xorwf	CANSetMask@type& (0+255),w,b
  4376  001B7A  A4D8               	btfss	status,2,c
  4377  001B7C  0012               	return	
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;inc\CANlib.h: 705: {
  4381                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4382  001B7E  0100               	movlb	0	; () banked
  4383  001B80  51CC               	movf	CANSetMask@mask& (0+255),w,b
  4384  001B82  0100               	movlb	0	; () banked
  4385  001B84  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4386  001B86  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4387  001B88  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4388  001B8A  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4392  001B8C  C0D6  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4396  001B90  0E00               	movlw	0
  4397  001B92  0100               	movlb	0	; () banked
  4398  001B94  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4399  001B96  0100               	movlb	0	; () banked
  4400  001B98  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4401  001B9A  0EFF               	movlw	255
  4402  001B9C  0100               	movlb	0	; () banked
  4403  001B9E  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4404  001BA0  0100               	movlb	0	; () banked
  4405  001BA2  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4406  001BA4  0E00               	movlw	0
  4407  001BA6  0100               	movlb	0	; () banked
  4408  001BA8  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4409  001BAA  0100               	movlb	0	; () banked
  4410  001BAC  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4411  001BAE  0E00               	movlw	0
  4412  001BB0  0100               	movlb	0	; () banked
  4413  001BB2  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4414  001BB4  0100               	movlb	0	; () banked
  4415  001BB6  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4419  001BB8  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4420  001BBC  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4421  001BC0  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4422  001BC4  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4423  001BC8  C0D2  F0D1         	movff	??_CANSetMask+1,??_CANSetMask
  4424  001BCC  C0D3  F0D2         	movff	??_CANSetMask+2,??_CANSetMask+1
  4425  001BD0  C0D4  F0D3         	movff	??_CANSetMask+3,??_CANSetMask+2
  4426  001BD4  0100               	movlb	0	; () banked
  4427  001BD6  6BD4               	clrf	(??_CANSetMask+3)& (0+255),b
  4428  001BD8  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4429  001BDC  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4430  001BE0  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4431  001BE4  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4435  001BE8  C0D6  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4439  001BEC  0100               	movlb	0	; () banked
  4440  001BEE  A1CE               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4441  001BF0  D003               	goto	l463
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4445  001BF2  010F               	movlb	15	; () banked
  4446  001BF4  811D               	bsf	29,0,b	;volatile
  4447  001BF6  D002               	goto	l464
  4448  001BF8                     l463:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;inc\CANlib.h: 715: else
  4452                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4453  001BF8  010F               	movlb	15	; () banked
  4454  001BFA  911D               	bcf	29,0,b	;volatile
  4455  001BFC                     l464:
  4456                           
  4457                           ; BSR set to: 15
  4458                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4459  001BFC  0100               	movlb	0	; () banked
  4460  001BFE  A3CE               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4461  001C00  D003               	goto	l465
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4465  001C02  010F               	movlb	15	; () banked
  4466  001C04  831D               	bsf	29,1,b	;volatile
  4467  001C06  D002               	goto	l466
  4468  001C08                     l465:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;inc\CANlib.h: 720: else
  4472                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4473  001C08  010F               	movlb	15	; () banked
  4474  001C0A  931D               	bcf	29,1,b	;volatile
  4475  001C0C                     l466:
  4476                           
  4477                           ; BSR set to: 15
  4478                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4479  001C0C  0100               	movlb	0	; () banked
  4480  001C0E  A5CE               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4481  001C10  D003               	goto	l467
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4485  001C12  010F               	movlb	15	; () banked
  4486  001C14  8B1D               	bsf	29,5,b	;volatile
  4487  001C16  D002               	goto	l468
  4488  001C18                     l467:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;inc\CANlib.h: 725: else
  4492                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4493  001C18  010F               	movlb	15	; () banked
  4494  001C1A  9B1D               	bcf	29,5,b	;volatile
  4495  001C1C                     l468:
  4496                           
  4497                           ; BSR set to: 15
  4498                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4499  001C1C  0100               	movlb	0	; () banked
  4500  001C1E  A7CE               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4501  001C20  D003               	goto	l469
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4505  001C22  010F               	movlb	15	; () banked
  4506  001C24  8D1D               	bsf	29,6,b	;volatile
  4507  001C26  D002               	goto	l470
  4508  001C28                     l469:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;inc\CANlib.h: 730: else
  4512                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4513  001C28  010F               	movlb	15	; () banked
  4514  001C2A  9D1D               	bcf	29,6,b	;volatile
  4515  001C2C                     l470:
  4516                           
  4517                           ; BSR set to: 15
  4518                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4519  001C2C  0100               	movlb	0	; () banked
  4520  001C2E  A9CE               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4521  001C30  D003               	goto	l471
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4525  001C32  010F               	movlb	15	; () banked
  4526  001C34  8F1D               	bsf	29,7,b	;volatile
  4527  001C36  D002               	goto	l2924
  4528  001C38                     l471:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;inc\CANlib.h: 735: else
  4532                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4533  001C38  010F               	movlb	15	; () banked
  4534  001C3A  9F1D               	bcf	29,7,b	;volatile
  4535  001C3C                     l2924:
  4536                           
  4537                           ; BSR set to: 15
  4538                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4539  001C3C  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  4540  001C40  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4541  001C44  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4542  001C48  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4543  001C4C  0E16               	movlw	22
  4544  001C4E  D006               	goto	u2660
  4545  001C50                     u2665:
  4546  001C50  0100               	movlb	0	; () banked
  4547  001C52  90D8               	bcf	status,0,c
  4548  001C54  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4549  001C56  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4550  001C58  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4551  001C5A  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  4552  001C5C                     u2660:
  4553  001C5C  2EE8               	decfsz	wreg,f,c
  4554  001C5E  D7F8               	goto	u2665
  4555  001C60  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4556  001C64  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4557  001C68  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4558  001C6C  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4562  001C70  0100               	movlb	0	; () banked
  4563  001C72  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  4564  001C74  0100               	movlb	0	; () banked
  4565  001C76  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4566  001C78  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4567  001C7A  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4568  001C7C  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4572  001C7E  C0D6  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4573  001C82  0012               	return	
  4574  001C84                     __end_of_CANSetMask:
  4575                           	opt stack 0
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           prodh	equ	0xFF4
  4581                           prodl	equ	0xFF3
  4582                           intcon	equ	0xFF2
  4583                           intcon2	equ	0xFF1
  4584                           intcon3	equ	0xFF0
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           postdec1	equ	0xFE5
  4588                           fsr1l	equ	0xFE1
  4589                           indf2	equ	0xFDF
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _CANSetFilter *****************
  4595 ;; Defined at:
  4596 ;;		line 748 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  numBuffer       1    wreg     enum E16881
  4599 ;;  filter          4   26[BANK0 ] unsigned long 
  4600 ;;  type            1   30[BANK0 ] enum E16844
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  numBuffer       1   35[BANK0 ] enum E16881
  4603 ;;  tamp            4   36[BANK0 ] unsigned long 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;		None               void
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4613 ;;      Params:         0       5       0       0
  4614 ;;      Locals:         0       5       0       0
  4615 ;;      Temps:          0       4       0       0
  4616 ;;      Totals:         0      14       0       0
  4617 ;;Total ram usage:       14 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    4
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_CANInitialize
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text9
  4628  000148                     __ptext9:
  4629                           	opt stack 0
  4630  000148                     _CANSetFilter:
  4631                           	opt stack 24
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;incstack = 0
  4635                           ;CANSetFilter@numBuffer stored from wreg
  4636  000148  0100               	movlb	0	; () banked
  4637  00014A  6FD5               	movwf	CANSetFilter@numBuffer& (0+255),b
  4638                           
  4639                           ;inc\CANlib.h: 750: unsigned long tamp;
  4640                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4641  00014C  0100               	movlb	0	; () banked
  4642  00014E  51D5               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4643  000150  0100               	movlb	0	; () banked
  4644  000152  A4D8               	btfss	status,2,c
  4645  000154  D058               	goto	l2948
  4646                           
  4647                           ; BSR set to: 0
  4648  000156  0100               	movlb	0	; () banked
  4649  000158  29D0               	incf	CANSetFilter@type& (0+255),w,b
  4650  00015A  A4D8               	btfss	status,2,c
  4651  00015C  D054               	goto	l2948
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 753: {
  4655                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4656  00015E  010F               	movlb	15	; () banked
  4657  000160  9701               	bcf	1,3,b	;volatile
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4661  000162  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  4662  000166  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4663  00016A  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4664  00016E  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4665  000172  0E04               	movlw	4
  4666  000174  D006               	goto	u2690
  4667  000176                     u2695:
  4668  000176  0100               	movlb	0	; () banked
  4669  000178  90D8               	bcf	status,0,c
  4670  00017A  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4671  00017C  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4672  00017E  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4673  000180  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  4674  000182                     u2690:
  4675  000182  2EE8               	decfsz	wreg,f,c
  4676  000184  D7F8               	goto	u2695
  4677  000186  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4678  00018A  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4679  00018E  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4680  000192  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4684  000196  0100               	movlb	0	; () banked
  4685  000198  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  4686  00019A  0100               	movlb	0	; () banked
  4687  00019C  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4688  00019E  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4689  0001A0  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4690  0001A2  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4694  0001A4  C0D6  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4698  0001A8  0E07               	movlw	7
  4699  0001AA  0100               	movlb	0	; () banked
  4700  0001AC  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  4701  0001AE  0100               	movlb	0	; () banked
  4702  0001B0  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4703  0001B2  0E00               	movlw	0
  4704  0001B4  0100               	movlb	0	; () banked
  4705  0001B6  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4706  0001B8  0100               	movlb	0	; () banked
  4707  0001BA  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4708  0001BC  0E00               	movlw	0
  4709  0001BE  0100               	movlb	0	; () banked
  4710  0001C0  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4711  0001C2  0100               	movlb	0	; () banked
  4712  0001C4  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4713  0001C6  0E00               	movlw	0
  4714  0001C8  0100               	movlb	0	; () banked
  4715  0001CA  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4716  0001CC  0100               	movlb	0	; () banked
  4717  0001CE  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4721  0001D0  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  4722  0001D4  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4723  0001D8  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4724  0001DC  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4725  0001E0  0E05               	movlw	5
  4726  0001E2                     u2705:
  4727  0001E2  90D8               	bcf	status,0,c
  4728  0001E4  0100               	movlb	0	; () banked
  4729  0001E6  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  4730  0001E8  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4731  0001EA  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4732  0001EC  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4733  0001EE  2EE8               	decfsz	wreg,f,c
  4734  0001F0  D7F8               	goto	u2705
  4735  0001F2  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4736  0001F6  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4737  0001FA  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4738  0001FE  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4742  000202  C0D6  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4743  000206                     l2948:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;inc\CANlib.h: 763: }
  4747                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4748  000206  0100               	movlb	0	; () banked
  4749  000208  05D5               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4750  00020A  A4D8               	btfss	status,2,c
  4751  00020C  D058               	goto	l2966
  4752                           
  4753                           ; BSR set to: 0
  4754  00020E  0100               	movlb	0	; () banked
  4755  000210  29D0               	incf	CANSetFilter@type& (0+255),w,b
  4756  000212  A4D8               	btfss	status,2,c
  4757  000214  D054               	goto	l2966
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 766: {
  4761                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4762  000216  010F               	movlb	15	; () banked
  4763  000218  9705               	bcf	5,3,b	;volatile
  4764                           
  4765                           ; BSR set to: 15
  4766                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4767  00021A  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  4768  00021E  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4769  000222  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4770  000226  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4771  00022A  0E04               	movlw	4
  4772  00022C  D006               	goto	u2730
  4773  00022E                     u2735:
  4774  00022E  0100               	movlb	0	; () banked
  4775  000230  90D8               	bcf	status,0,c
  4776  000232  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4777  000234  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4778  000236  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4779  000238  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  4780  00023A                     u2730:
  4781  00023A  2EE8               	decfsz	wreg,f,c
  4782  00023C  D7F8               	goto	u2735
  4783  00023E  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4784  000242  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4785  000246  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4786  00024A  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4790  00024E  0100               	movlb	0	; () banked
  4791  000250  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  4792  000252  0100               	movlb	0	; () banked
  4793  000254  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4794  000256  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4795  000258  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4796  00025A  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4800  00025C  C0D6  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4804  000260  0E07               	movlw	7
  4805  000262  0100               	movlb	0	; () banked
  4806  000264  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  4807  000266  0100               	movlb	0	; () banked
  4808  000268  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4809  00026A  0E00               	movlw	0
  4810  00026C  0100               	movlb	0	; () banked
  4811  00026E  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4812  000270  0100               	movlb	0	; () banked
  4813  000272  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4814  000274  0E00               	movlw	0
  4815  000276  0100               	movlb	0	; () banked
  4816  000278  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4817  00027A  0100               	movlb	0	; () banked
  4818  00027C  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4819  00027E  0E00               	movlw	0
  4820  000280  0100               	movlb	0	; () banked
  4821  000282  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4822  000284  0100               	movlb	0	; () banked
  4823  000286  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4827  000288  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  4828  00028C  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4829  000290  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4830  000294  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4831  000298  0E05               	movlw	5
  4832  00029A                     u2745:
  4833  00029A  90D8               	bcf	status,0,c
  4834  00029C  0100               	movlb	0	; () banked
  4835  00029E  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  4836  0002A0  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4837  0002A2  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4838  0002A4  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4839  0002A6  2EE8               	decfsz	wreg,f,c
  4840  0002A8  D7F8               	goto	u2745
  4841  0002AA  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4842  0002AE  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4843  0002B2  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4844  0002B6  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4848  0002BA  C0D6  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4849  0002BE                     l2966:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;inc\CANlib.h: 776: }
  4853                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4854  0002BE  0E02               	movlw	2
  4855  0002C0  0100               	movlb	0	; () banked
  4856  0002C2  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4857  0002C4  A4D8               	btfss	status,2,c
  4858  0002C6  D058               	goto	l2984
  4859                           
  4860                           ; BSR set to: 0
  4861  0002C8  0100               	movlb	0	; () banked
  4862  0002CA  29D0               	incf	CANSetFilter@type& (0+255),w,b
  4863  0002CC  A4D8               	btfss	status,2,c
  4864  0002CE  D054               	goto	l2984
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;inc\CANlib.h: 779: {
  4868                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4869  0002D0  010F               	movlb	15	; () banked
  4870  0002D2  9709               	bcf	9,3,b	;volatile
  4871                           
  4872                           ; BSR set to: 15
  4873                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4874  0002D4  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  4875  0002D8  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4876  0002DC  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4877  0002E0  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4878  0002E4  0E04               	movlw	4
  4879  0002E6  D006               	goto	u2770
  4880  0002E8                     u2775:
  4881  0002E8  0100               	movlb	0	; () banked
  4882  0002EA  90D8               	bcf	status,0,c
  4883  0002EC  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4884  0002EE  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4885  0002F0  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4886  0002F2  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  4887  0002F4                     u2770:
  4888  0002F4  2EE8               	decfsz	wreg,f,c
  4889  0002F6  D7F8               	goto	u2775
  4890  0002F8  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4891  0002FC  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4892  000300  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4893  000304  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4897  000308  0100               	movlb	0	; () banked
  4898  00030A  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  4899  00030C  0100               	movlb	0	; () banked
  4900  00030E  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4901  000310  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4902  000312  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4903  000314  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4907  000316  C0D6  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4911  00031A  0E07               	movlw	7
  4912  00031C  0100               	movlb	0	; () banked
  4913  00031E  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  4914  000320  0100               	movlb	0	; () banked
  4915  000322  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4916  000324  0E00               	movlw	0
  4917  000326  0100               	movlb	0	; () banked
  4918  000328  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4919  00032A  0100               	movlb	0	; () banked
  4920  00032C  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4921  00032E  0E00               	movlw	0
  4922  000330  0100               	movlb	0	; () banked
  4923  000332  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4924  000334  0100               	movlb	0	; () banked
  4925  000336  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4926  000338  0E00               	movlw	0
  4927  00033A  0100               	movlb	0	; () banked
  4928  00033C  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4929  00033E  0100               	movlb	0	; () banked
  4930  000340  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4934  000342  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  4935  000346  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4936  00034A  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4937  00034E  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4938  000352  0E05               	movlw	5
  4939  000354                     u2785:
  4940  000354  90D8               	bcf	status,0,c
  4941  000356  0100               	movlb	0	; () banked
  4942  000358  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  4943  00035A  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4944  00035C  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4945  00035E  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4946  000360  2EE8               	decfsz	wreg,f,c
  4947  000362  D7F8               	goto	u2785
  4948  000364  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4949  000368  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4950  00036C  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4951  000370  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4955  000374  C0D6  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4956  000378                     l2984:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;inc\CANlib.h: 789: }
  4960                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4961  000378  0E03               	movlw	3
  4962  00037A  0100               	movlb	0	; () banked
  4963  00037C  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4964  00037E  A4D8               	btfss	status,2,c
  4965  000380  D058               	goto	l3002
  4966                           
  4967                           ; BSR set to: 0
  4968  000382  0100               	movlb	0	; () banked
  4969  000384  29D0               	incf	CANSetFilter@type& (0+255),w,b
  4970  000386  A4D8               	btfss	status,2,c
  4971  000388  D054               	goto	l3002
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;inc\CANlib.h: 792: {
  4975                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4976  00038A  010F               	movlb	15	; () banked
  4977  00038C  970D               	bcf	13,3,b	;volatile
  4978                           
  4979                           ; BSR set to: 15
  4980                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4981  00038E  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  4982  000392  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4983  000396  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4984  00039A  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4985  00039E  0E04               	movlw	4
  4986  0003A0  D006               	goto	u2810
  4987  0003A2                     u2815:
  4988  0003A2  0100               	movlb	0	; () banked
  4989  0003A4  90D8               	bcf	status,0,c
  4990  0003A6  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4991  0003A8  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4992  0003AA  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4993  0003AC  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  4994  0003AE                     u2810:
  4995  0003AE  2EE8               	decfsz	wreg,f,c
  4996  0003B0  D7F8               	goto	u2815
  4997  0003B2  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4998  0003B6  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4999  0003BA  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5000  0003BE  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5004  0003C2  0100               	movlb	0	; () banked
  5005  0003C4  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5006  0003C6  0100               	movlb	0	; () banked
  5007  0003C8  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5008  0003CA  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5009  0003CC  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5010  0003CE  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5014  0003D0  C0D6  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5018  0003D4  0E07               	movlw	7
  5019  0003D6  0100               	movlb	0	; () banked
  5020  0003D8  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5021  0003DA  0100               	movlb	0	; () banked
  5022  0003DC  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5023  0003DE  0E00               	movlw	0
  5024  0003E0  0100               	movlb	0	; () banked
  5025  0003E2  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5026  0003E4  0100               	movlb	0	; () banked
  5027  0003E6  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5028  0003E8  0E00               	movlw	0
  5029  0003EA  0100               	movlb	0	; () banked
  5030  0003EC  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5031  0003EE  0100               	movlb	0	; () banked
  5032  0003F0  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5033  0003F2  0E00               	movlw	0
  5034  0003F4  0100               	movlb	0	; () banked
  5035  0003F6  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5036  0003F8  0100               	movlb	0	; () banked
  5037  0003FA  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5041  0003FC  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5042  000400  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5043  000404  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5044  000408  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5045  00040C  0E05               	movlw	5
  5046  00040E                     u2825:
  5047  00040E  90D8               	bcf	status,0,c
  5048  000410  0100               	movlb	0	; () banked
  5049  000412  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  5050  000414  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5051  000416  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5052  000418  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5053  00041A  2EE8               	decfsz	wreg,f,c
  5054  00041C  D7F8               	goto	u2825
  5055  00041E  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5056  000422  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5057  000426  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5058  00042A  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5062  00042E  C0D6  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5063  000432                     l3002:
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;inc\CANlib.h: 802: }
  5067                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5068  000432  0E04               	movlw	4
  5069  000434  0100               	movlb	0	; () banked
  5070  000436  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5071  000438  A4D8               	btfss	status,2,c
  5072  00043A  D058               	goto	l3020
  5073                           
  5074                           ; BSR set to: 0
  5075  00043C  0100               	movlb	0	; () banked
  5076  00043E  29D0               	incf	CANSetFilter@type& (0+255),w,b
  5077  000440  A4D8               	btfss	status,2,c
  5078  000442  D054               	goto	l3020
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;inc\CANlib.h: 805: {
  5082                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5083  000444  010F               	movlb	15	; () banked
  5084  000446  9711               	bcf	17,3,b	;volatile
  5085                           
  5086                           ; BSR set to: 15
  5087                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5088  000448  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5089  00044C  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5090  000450  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5091  000454  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5092  000458  0E04               	movlw	4
  5093  00045A  D006               	goto	u2850
  5094  00045C                     u2855:
  5095  00045C  0100               	movlb	0	; () banked
  5096  00045E  90D8               	bcf	status,0,c
  5097  000460  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5098  000462  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5099  000464  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5100  000466  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5101  000468                     u2850:
  5102  000468  2EE8               	decfsz	wreg,f,c
  5103  00046A  D7F8               	goto	u2855
  5104  00046C  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5105  000470  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5106  000474  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5107  000478  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5111  00047C  0100               	movlb	0	; () banked
  5112  00047E  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5113  000480  0100               	movlb	0	; () banked
  5114  000482  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5115  000484  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5116  000486  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5117  000488  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5121  00048A  C0D6  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5125  00048E  0E07               	movlw	7
  5126  000490  0100               	movlb	0	; () banked
  5127  000492  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5128  000494  0100               	movlb	0	; () banked
  5129  000496  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5130  000498  0E00               	movlw	0
  5131  00049A  0100               	movlb	0	; () banked
  5132  00049C  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5133  00049E  0100               	movlb	0	; () banked
  5134  0004A0  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5135  0004A2  0E00               	movlw	0
  5136  0004A4  0100               	movlb	0	; () banked
  5137  0004A6  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5138  0004A8  0100               	movlb	0	; () banked
  5139  0004AA  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5140  0004AC  0E00               	movlw	0
  5141  0004AE  0100               	movlb	0	; () banked
  5142  0004B0  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5143  0004B2  0100               	movlb	0	; () banked
  5144  0004B4  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5148  0004B6  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5149  0004BA  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5150  0004BE  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5151  0004C2  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5152  0004C6  0E05               	movlw	5
  5153  0004C8                     u2865:
  5154  0004C8  90D8               	bcf	status,0,c
  5155  0004CA  0100               	movlb	0	; () banked
  5156  0004CC  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  5157  0004CE  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5158  0004D0  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5159  0004D2  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5160  0004D4  2EE8               	decfsz	wreg,f,c
  5161  0004D6  D7F8               	goto	u2865
  5162  0004D8  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5163  0004DC  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5164  0004E0  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5165  0004E4  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5169  0004E8  C0D6  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5170  0004EC                     l3020:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;inc\CANlib.h: 815: }
  5174                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5175  0004EC  0E05               	movlw	5
  5176  0004EE  0100               	movlb	0	; () banked
  5177  0004F0  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5178  0004F2  A4D8               	btfss	status,2,c
  5179  0004F4  D058               	goto	l3038
  5180                           
  5181                           ; BSR set to: 0
  5182  0004F6  0100               	movlb	0	; () banked
  5183  0004F8  29D0               	incf	CANSetFilter@type& (0+255),w,b
  5184  0004FA  A4D8               	btfss	status,2,c
  5185  0004FC  D054               	goto	l3038
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;inc\CANlib.h: 818: {
  5189                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5190  0004FE  010F               	movlb	15	; () banked
  5191  000500  9715               	bcf	21,3,b	;volatile
  5192                           
  5193                           ; BSR set to: 15
  5194                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5195  000502  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5196  000506  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5197  00050A  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5198  00050E  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5199  000512  0E04               	movlw	4
  5200  000514  D006               	goto	u2890
  5201  000516                     u2895:
  5202  000516  0100               	movlb	0	; () banked
  5203  000518  90D8               	bcf	status,0,c
  5204  00051A  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5205  00051C  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5206  00051E  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5207  000520  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5208  000522                     u2890:
  5209  000522  2EE8               	decfsz	wreg,f,c
  5210  000524  D7F8               	goto	u2895
  5211  000526  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5212  00052A  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5213  00052E  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5214  000532  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5218  000536  0100               	movlb	0	; () banked
  5219  000538  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5220  00053A  0100               	movlb	0	; () banked
  5221  00053C  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5222  00053E  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5223  000540  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5224  000542  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5228  000544  C0D6  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5232  000548  0E07               	movlw	7
  5233  00054A  0100               	movlb	0	; () banked
  5234  00054C  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5235  00054E  0100               	movlb	0	; () banked
  5236  000550  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5237  000552  0E00               	movlw	0
  5238  000554  0100               	movlb	0	; () banked
  5239  000556  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5240  000558  0100               	movlb	0	; () banked
  5241  00055A  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5242  00055C  0E00               	movlw	0
  5243  00055E  0100               	movlb	0	; () banked
  5244  000560  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5245  000562  0100               	movlb	0	; () banked
  5246  000564  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5247  000566  0E00               	movlw	0
  5248  000568  0100               	movlb	0	; () banked
  5249  00056A  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5250  00056C  0100               	movlb	0	; () banked
  5251  00056E  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5255  000570  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5256  000574  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5257  000578  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5258  00057C  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5259  000580  0E05               	movlw	5
  5260  000582                     u2905:
  5261  000582  90D8               	bcf	status,0,c
  5262  000584  0100               	movlb	0	; () banked
  5263  000586  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  5264  000588  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5265  00058A  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5266  00058C  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5267  00058E  2EE8               	decfsz	wreg,f,c
  5268  000590  D7F8               	goto	u2905
  5269  000592  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5270  000596  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5271  00059A  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5272  00059E  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5276  0005A2  C0D6  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5277  0005A6                     l3038:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;inc\CANlib.h: 828: }
  5281                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5282  0005A6  0100               	movlb	0	; () banked
  5283  0005A8  51D5               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5284  0005AA  0100               	movlb	0	; () banked
  5285  0005AC  A4D8               	btfss	status,2,c
  5286  0005AE  D089               	goto	l3072
  5287                           
  5288                           ; BSR set to: 0
  5289  0005B0  0EF7               	movlw	247
  5290  0005B2  0100               	movlb	0	; () banked
  5291  0005B4  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5292  0005B6  A4D8               	btfss	status,2,c
  5293  0005B8  D084               	goto	l3072
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;inc\CANlib.h: 832: {
  5297                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5298  0005BA  010F               	movlb	15	; () banked
  5299  0005BC  8701               	bsf	1,3,b	;volatile
  5300                           
  5301                           ; BSR set to: 15
  5302                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5303  0005BE  0100               	movlb	0	; () banked
  5304  0005C0  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5305  0005C2  0100               	movlb	0	; () banked
  5306  0005C4  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5307  0005C6  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5308  0005C8  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5309  0005CA  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5313  0005CC  C0D6  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5317  0005D0  0E00               	movlw	0
  5318  0005D2  0100               	movlb	0	; () banked
  5319  0005D4  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5320  0005D6  0100               	movlb	0	; () banked
  5321  0005D8  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5322  0005DA  0EFF               	movlw	255
  5323  0005DC  0100               	movlb	0	; () banked
  5324  0005DE  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5325  0005E0  0100               	movlb	0	; () banked
  5326  0005E2  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5327  0005E4  0E00               	movlw	0
  5328  0005E6  0100               	movlb	0	; () banked
  5329  0005E8  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5330  0005EA  0100               	movlb	0	; () banked
  5331  0005EC  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5332  0005EE  0E00               	movlw	0
  5333  0005F0  0100               	movlb	0	; () banked
  5334  0005F2  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5335  0005F4  0100               	movlb	0	; () banked
  5336  0005F6  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5340  0005F8  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5341  0005FC  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5342  000600  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5343  000604  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5344  000608  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  5345  00060C  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5346  000610  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5347  000614  0100               	movlb	0	; () banked
  5348  000616  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  5349  000618  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5350  00061C  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5351  000620  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5352  000624  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5356  000628  C0D6  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5360  00062C  0100               	movlb	0	; () banked
  5361  00062E  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5362  000630  D003               	goto	l483
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5366  000632  010F               	movlb	15	; () banked
  5367  000634  8101               	bsf	1,0,b	;volatile
  5368  000636  D002               	goto	l484
  5369  000638                     l483:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 844: else
  5373                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5374  000638  010F               	movlb	15	; () banked
  5375  00063A  9101               	bcf	1,0,b	;volatile
  5376  00063C                     l484:
  5377                           
  5378                           ; BSR set to: 15
  5379                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5380  00063C  0100               	movlb	0	; () banked
  5381  00063E  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5382  000640  D003               	goto	l485
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5386  000642  010F               	movlb	15	; () banked
  5387  000644  8301               	bsf	1,1,b	;volatile
  5388  000646  D002               	goto	l486
  5389  000648                     l485:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;inc\CANlib.h: 849: else
  5393                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5394  000648  010F               	movlb	15	; () banked
  5395  00064A  9301               	bcf	1,1,b	;volatile
  5396  00064C                     l486:
  5397                           
  5398                           ; BSR set to: 15
  5399                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5400  00064C  0100               	movlb	0	; () banked
  5401  00064E  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5402  000650  D003               	goto	l487
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5406  000652  010F               	movlb	15	; () banked
  5407  000654  8B01               	bsf	1,5,b	;volatile
  5408  000656  D002               	goto	l488
  5409  000658                     l487:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 854: else
  5413                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5414  000658  010F               	movlb	15	; () banked
  5415  00065A  9B01               	bcf	1,5,b	;volatile
  5416  00065C                     l488:
  5417                           
  5418                           ; BSR set to: 15
  5419                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5420  00065C  0100               	movlb	0	; () banked
  5421  00065E  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5422  000660  D003               	goto	l489
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5426  000662  010F               	movlb	15	; () banked
  5427  000664  8D01               	bsf	1,6,b	;volatile
  5428  000666  D002               	goto	l490
  5429  000668                     l489:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;inc\CANlib.h: 859: else
  5433                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5434  000668  010F               	movlb	15	; () banked
  5435  00066A  9D01               	bcf	1,6,b	;volatile
  5436  00066C                     l490:
  5437                           
  5438                           ; BSR set to: 15
  5439                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5440  00066C  0100               	movlb	0	; () banked
  5441  00066E  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5442  000670  D003               	goto	l491
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5446  000672  010F               	movlb	15	; () banked
  5447  000674  8F01               	bsf	1,7,b	;volatile
  5448  000676  D002               	goto	l3066
  5449  000678                     l491:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 864: else
  5453                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5454  000678  010F               	movlb	15	; () banked
  5455  00067A  9F01               	bcf	1,7,b	;volatile
  5456  00067C                     l3066:
  5457                           
  5458                           ; BSR set to: 15
  5459                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5460  00067C  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5461  000680  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5462  000684  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5463  000688  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5464  00068C  0E16               	movlw	22
  5465  00068E  D006               	goto	u2980
  5466  000690                     u2985:
  5467  000690  0100               	movlb	0	; () banked
  5468  000692  90D8               	bcf	status,0,c
  5469  000694  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5470  000696  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5471  000698  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5472  00069A  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5473  00069C                     u2980:
  5474  00069C  2EE8               	decfsz	wreg,f,c
  5475  00069E  D7F8               	goto	u2985
  5476  0006A0  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5477  0006A4  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5478  0006A8  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5479  0006AC  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5483  0006B0  0100               	movlb	0	; () banked
  5484  0006B2  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5485  0006B4  0100               	movlb	0	; () banked
  5486  0006B6  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5487  0006B8  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5488  0006BA  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5489  0006BC  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5493  0006BE  C0D6  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5494  0006C2                     l3072:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 870: }
  5498                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5499  0006C2  0100               	movlb	0	; () banked
  5500  0006C4  05D5               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5501  0006C6  A4D8               	btfss	status,2,c
  5502  0006C8  D089               	goto	l3106
  5503                           
  5504                           ; BSR set to: 0
  5505  0006CA  0EF7               	movlw	247
  5506  0006CC  0100               	movlb	0	; () banked
  5507  0006CE  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5508  0006D0  A4D8               	btfss	status,2,c
  5509  0006D2  D084               	goto	l3106
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;inc\CANlib.h: 873: {
  5513                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5514  0006D4  010F               	movlb	15	; () banked
  5515  0006D6  8705               	bsf	5,3,b	;volatile
  5516                           
  5517                           ; BSR set to: 15
  5518                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5519  0006D8  0100               	movlb	0	; () banked
  5520  0006DA  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5521  0006DC  0100               	movlb	0	; () banked
  5522  0006DE  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5523  0006E0  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5524  0006E2  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5525  0006E4  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5529  0006E6  C0D6  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5533  0006EA  0E00               	movlw	0
  5534  0006EC  0100               	movlb	0	; () banked
  5535  0006EE  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5536  0006F0  0100               	movlb	0	; () banked
  5537  0006F2  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5538  0006F4  0EFF               	movlw	255
  5539  0006F6  0100               	movlb	0	; () banked
  5540  0006F8  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5541  0006FA  0100               	movlb	0	; () banked
  5542  0006FC  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5543  0006FE  0E00               	movlw	0
  5544  000700  0100               	movlb	0	; () banked
  5545  000702  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5546  000704  0100               	movlb	0	; () banked
  5547  000706  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5548  000708  0E00               	movlw	0
  5549  00070A  0100               	movlb	0	; () banked
  5550  00070C  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5551  00070E  0100               	movlb	0	; () banked
  5552  000710  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5556  000712  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5557  000716  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5558  00071A  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5559  00071E  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5560  000722  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  5561  000726  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5562  00072A  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5563  00072E  0100               	movlb	0	; () banked
  5564  000730  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  5565  000732  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5566  000736  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5567  00073A  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5568  00073E  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5572  000742  C0D6  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5576  000746  0100               	movlb	0	; () banked
  5577  000748  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5578  00074A  D003               	goto	l494
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5582  00074C  010F               	movlb	15	; () banked
  5583  00074E  8105               	bsf	5,0,b	;volatile
  5584  000750  D002               	goto	l495
  5585  000752                     l494:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;inc\CANlib.h: 885: else
  5589                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5590  000752  010F               	movlb	15	; () banked
  5591  000754  9105               	bcf	5,0,b	;volatile
  5592  000756                     l495:
  5593                           
  5594                           ; BSR set to: 15
  5595                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5596  000756  0100               	movlb	0	; () banked
  5597  000758  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5598  00075A  D003               	goto	l496
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5602  00075C  010F               	movlb	15	; () banked
  5603  00075E  8305               	bsf	5,1,b	;volatile
  5604  000760  D002               	goto	l497
  5605  000762                     l496:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 890: else
  5609                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5610  000762  010F               	movlb	15	; () banked
  5611  000764  9305               	bcf	5,1,b	;volatile
  5612  000766                     l497:
  5613                           
  5614                           ; BSR set to: 15
  5615                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5616  000766  0100               	movlb	0	; () banked
  5617  000768  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5618  00076A  D003               	goto	l498
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5622  00076C  010F               	movlb	15	; () banked
  5623  00076E  8B05               	bsf	5,5,b	;volatile
  5624  000770  D002               	goto	l499
  5625  000772                     l498:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;inc\CANlib.h: 895: else
  5629                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5630  000772  010F               	movlb	15	; () banked
  5631  000774  9B05               	bcf	5,5,b	;volatile
  5632  000776                     l499:
  5633                           
  5634                           ; BSR set to: 15
  5635                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5636  000776  0100               	movlb	0	; () banked
  5637  000778  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5638  00077A  D003               	goto	l500
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5642  00077C  010F               	movlb	15	; () banked
  5643  00077E  8D05               	bsf	5,6,b	;volatile
  5644  000780  D002               	goto	l501
  5645  000782                     l500:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;inc\CANlib.h: 900: else
  5649                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5650  000782  010F               	movlb	15	; () banked
  5651  000784  9D05               	bcf	5,6,b	;volatile
  5652  000786                     l501:
  5653                           
  5654                           ; BSR set to: 15
  5655                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5656  000786  0100               	movlb	0	; () banked
  5657  000788  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5658  00078A  D003               	goto	l502
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5662  00078C  010F               	movlb	15	; () banked
  5663  00078E  8F05               	bsf	5,7,b	;volatile
  5664  000790  D002               	goto	l3100
  5665  000792                     l502:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 905: else
  5669                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5670  000792  010F               	movlb	15	; () banked
  5671  000794  9F05               	bcf	5,7,b	;volatile
  5672  000796                     l3100:
  5673                           
  5674                           ; BSR set to: 15
  5675                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5676  000796  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5677  00079A  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5678  00079E  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5679  0007A2  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5680  0007A6  0E16               	movlw	22
  5681  0007A8  D006               	goto	u3060
  5682  0007AA                     u3065:
  5683  0007AA  0100               	movlb	0	; () banked
  5684  0007AC  90D8               	bcf	status,0,c
  5685  0007AE  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5686  0007B0  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5687  0007B2  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5688  0007B4  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5689  0007B6                     u3060:
  5690  0007B6  2EE8               	decfsz	wreg,f,c
  5691  0007B8  D7F8               	goto	u3065
  5692  0007BA  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5693  0007BE  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5694  0007C2  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5695  0007C6  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5699  0007CA  0100               	movlb	0	; () banked
  5700  0007CC  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5701  0007CE  0100               	movlb	0	; () banked
  5702  0007D0  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5703  0007D2  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5704  0007D4  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5705  0007D6  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5709  0007D8  C0D6  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5710  0007DC                     l3106:
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;inc\CANlib.h: 911: }
  5714                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5715  0007DC  0E02               	movlw	2
  5716  0007DE  0100               	movlb	0	; () banked
  5717  0007E0  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5718  0007E2  A4D8               	btfss	status,2,c
  5719  0007E4  D089               	goto	l3140
  5720                           
  5721                           ; BSR set to: 0
  5722  0007E6  0EF7               	movlw	247
  5723  0007E8  0100               	movlb	0	; () banked
  5724  0007EA  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5725  0007EC  A4D8               	btfss	status,2,c
  5726  0007EE  D084               	goto	l3140
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;inc\CANlib.h: 915: {
  5730                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5731  0007F0  010F               	movlb	15	; () banked
  5732  0007F2  8709               	bsf	9,3,b	;volatile
  5733                           
  5734                           ; BSR set to: 15
  5735                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5736  0007F4  0100               	movlb	0	; () banked
  5737  0007F6  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5738  0007F8  0100               	movlb	0	; () banked
  5739  0007FA  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5740  0007FC  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5741  0007FE  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5742  000800  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5746  000802  C0D6  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5750  000806  0E00               	movlw	0
  5751  000808  0100               	movlb	0	; () banked
  5752  00080A  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5753  00080C  0100               	movlb	0	; () banked
  5754  00080E  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5755  000810  0EFF               	movlw	255
  5756  000812  0100               	movlb	0	; () banked
  5757  000814  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5758  000816  0100               	movlb	0	; () banked
  5759  000818  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5760  00081A  0E00               	movlw	0
  5761  00081C  0100               	movlb	0	; () banked
  5762  00081E  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5763  000820  0100               	movlb	0	; () banked
  5764  000822  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5765  000824  0E00               	movlw	0
  5766  000826  0100               	movlb	0	; () banked
  5767  000828  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5768  00082A  0100               	movlb	0	; () banked
  5769  00082C  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5773  00082E  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5774  000832  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5775  000836  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5776  00083A  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5777  00083E  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  5778  000842  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5779  000846  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5780  00084A  0100               	movlb	0	; () banked
  5781  00084C  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  5782  00084E  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5783  000852  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5784  000856  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5785  00085A  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5789  00085E  C0D6  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5793  000862  0100               	movlb	0	; () banked
  5794  000864  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5795  000866  D003               	goto	l505
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5799  000868  010F               	movlb	15	; () banked
  5800  00086A  8109               	bsf	9,0,b	;volatile
  5801  00086C  D002               	goto	l506
  5802  00086E                     l505:
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;inc\CANlib.h: 927: else
  5806                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5807  00086E  010F               	movlb	15	; () banked
  5808  000870  9109               	bcf	9,0,b	;volatile
  5809  000872                     l506:
  5810                           
  5811                           ; BSR set to: 15
  5812                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5813  000872  0100               	movlb	0	; () banked
  5814  000874  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5815  000876  D003               	goto	l507
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5819  000878  010F               	movlb	15	; () banked
  5820  00087A  8309               	bsf	9,1,b	;volatile
  5821  00087C  D002               	goto	l508
  5822  00087E                     l507:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;inc\CANlib.h: 932: else
  5826                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5827  00087E  010F               	movlb	15	; () banked
  5828  000880  9309               	bcf	9,1,b	;volatile
  5829  000882                     l508:
  5830                           
  5831                           ; BSR set to: 15
  5832                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5833  000882  0100               	movlb	0	; () banked
  5834  000884  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5835  000886  D003               	goto	l509
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5839  000888  010F               	movlb	15	; () banked
  5840  00088A  8B09               	bsf	9,5,b	;volatile
  5841  00088C  D002               	goto	l510
  5842  00088E                     l509:
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;inc\CANlib.h: 937: else
  5846                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5847  00088E  010F               	movlb	15	; () banked
  5848  000890  9B09               	bcf	9,5,b	;volatile
  5849  000892                     l510:
  5850                           
  5851                           ; BSR set to: 15
  5852                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5853  000892  0100               	movlb	0	; () banked
  5854  000894  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5855  000896  D003               	goto	l511
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5859  000898  010F               	movlb	15	; () banked
  5860  00089A  8D09               	bsf	9,6,b	;volatile
  5861  00089C  D002               	goto	l512
  5862  00089E                     l511:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;inc\CANlib.h: 942: else
  5866                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5867  00089E  010F               	movlb	15	; () banked
  5868  0008A0  9D09               	bcf	9,6,b	;volatile
  5869  0008A2                     l512:
  5870                           
  5871                           ; BSR set to: 15
  5872                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5873  0008A2  0100               	movlb	0	; () banked
  5874  0008A4  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5875  0008A6  D003               	goto	l513
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5879  0008A8  010F               	movlb	15	; () banked
  5880  0008AA  8F09               	bsf	9,7,b	;volatile
  5881  0008AC  D002               	goto	l3134
  5882  0008AE                     l513:
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;inc\CANlib.h: 947: else
  5886                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5887  0008AE  010F               	movlb	15	; () banked
  5888  0008B0  9F09               	bcf	9,7,b	;volatile
  5889  0008B2                     l3134:
  5890                           
  5891                           ; BSR set to: 15
  5892                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5893  0008B2  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5894  0008B6  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5895  0008BA  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5896  0008BE  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5897  0008C2  0E16               	movlw	22
  5898  0008C4  D006               	goto	u3140
  5899  0008C6                     u3145:
  5900  0008C6  0100               	movlb	0	; () banked
  5901  0008C8  90D8               	bcf	status,0,c
  5902  0008CA  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5903  0008CC  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5904  0008CE  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5905  0008D0  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5906  0008D2                     u3140:
  5907  0008D2  2EE8               	decfsz	wreg,f,c
  5908  0008D4  D7F8               	goto	u3145
  5909  0008D6  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5910  0008DA  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5911  0008DE  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5912  0008E2  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5916  0008E6  0100               	movlb	0	; () banked
  5917  0008E8  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5918  0008EA  0100               	movlb	0	; () banked
  5919  0008EC  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5920  0008EE  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5921  0008F0  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5922  0008F2  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5926  0008F4  C0D6  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5927  0008F8                     l3140:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;inc\CANlib.h: 953: }
  5931                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5932  0008F8  0E03               	movlw	3
  5933  0008FA  0100               	movlb	0	; () banked
  5934  0008FC  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5935  0008FE  A4D8               	btfss	status,2,c
  5936  000900  D089               	goto	l3174
  5937                           
  5938                           ; BSR set to: 0
  5939  000902  0EF7               	movlw	247
  5940  000904  0100               	movlb	0	; () banked
  5941  000906  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5942  000908  A4D8               	btfss	status,2,c
  5943  00090A  D084               	goto	l3174
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;inc\CANlib.h: 956: {
  5947                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5948  00090C  010F               	movlb	15	; () banked
  5949  00090E  870D               	bsf	13,3,b	;volatile
  5950                           
  5951                           ; BSR set to: 15
  5952                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5953  000910  0100               	movlb	0	; () banked
  5954  000912  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5955  000914  0100               	movlb	0	; () banked
  5956  000916  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5957  000918  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5958  00091A  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5959  00091C  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5963  00091E  C0D6  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5967  000922  0E00               	movlw	0
  5968  000924  0100               	movlb	0	; () banked
  5969  000926  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5970  000928  0100               	movlb	0	; () banked
  5971  00092A  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5972  00092C  0EFF               	movlw	255
  5973  00092E  0100               	movlb	0	; () banked
  5974  000930  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5975  000932  0100               	movlb	0	; () banked
  5976  000934  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5977  000936  0E00               	movlw	0
  5978  000938  0100               	movlb	0	; () banked
  5979  00093A  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5980  00093C  0100               	movlb	0	; () banked
  5981  00093E  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5982  000940  0E00               	movlw	0
  5983  000942  0100               	movlb	0	; () banked
  5984  000944  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5985  000946  0100               	movlb	0	; () banked
  5986  000948  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5990  00094A  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5991  00094E  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5992  000952  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5993  000956  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5994  00095A  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  5995  00095E  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5996  000962  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5997  000966  0100               	movlb	0	; () banked
  5998  000968  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  5999  00096A  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6000  00096E  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6001  000972  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6002  000976  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6006  00097A  C0D6  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6010  00097E  0100               	movlb	0	; () banked
  6011  000980  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6012  000982  D003               	goto	l516
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6016  000984  010F               	movlb	15	; () banked
  6017  000986  810D               	bsf	13,0,b	;volatile
  6018  000988  D002               	goto	l517
  6019  00098A                     l516:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;inc\CANlib.h: 968: else
  6023                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6024  00098A  010F               	movlb	15	; () banked
  6025  00098C  910D               	bcf	13,0,b	;volatile
  6026  00098E                     l517:
  6027                           
  6028                           ; BSR set to: 15
  6029                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6030  00098E  0100               	movlb	0	; () banked
  6031  000990  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6032  000992  D003               	goto	l518
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6036  000994  010F               	movlb	15	; () banked
  6037  000996  830D               	bsf	13,1,b	;volatile
  6038  000998  D002               	goto	l519
  6039  00099A                     l518:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;inc\CANlib.h: 973: else
  6043                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6044  00099A  010F               	movlb	15	; () banked
  6045  00099C  930D               	bcf	13,1,b	;volatile
  6046  00099E                     l519:
  6047                           
  6048                           ; BSR set to: 15
  6049                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6050  00099E  0100               	movlb	0	; () banked
  6051  0009A0  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6052  0009A2  D003               	goto	l520
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6056  0009A4  010F               	movlb	15	; () banked
  6057  0009A6  8B0D               	bsf	13,5,b	;volatile
  6058  0009A8  D002               	goto	l521
  6059  0009AA                     l520:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;inc\CANlib.h: 978: else
  6063                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6064  0009AA  010F               	movlb	15	; () banked
  6065  0009AC  9B0D               	bcf	13,5,b	;volatile
  6066  0009AE                     l521:
  6067                           
  6068                           ; BSR set to: 15
  6069                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6070  0009AE  0100               	movlb	0	; () banked
  6071  0009B0  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6072  0009B2  D003               	goto	l522
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6076  0009B4  010F               	movlb	15	; () banked
  6077  0009B6  8D0D               	bsf	13,6,b	;volatile
  6078  0009B8  D002               	goto	l523
  6079  0009BA                     l522:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;inc\CANlib.h: 983: else
  6083                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6084  0009BA  010F               	movlb	15	; () banked
  6085  0009BC  9D0D               	bcf	13,6,b	;volatile
  6086  0009BE                     l523:
  6087                           
  6088                           ; BSR set to: 15
  6089                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6090  0009BE  0100               	movlb	0	; () banked
  6091  0009C0  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6092  0009C2  D003               	goto	l524
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6096  0009C4  010F               	movlb	15	; () banked
  6097  0009C6  8F0D               	bsf	13,7,b	;volatile
  6098  0009C8  D002               	goto	l3168
  6099  0009CA                     l524:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;inc\CANlib.h: 988: else
  6103                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6104  0009CA  010F               	movlb	15	; () banked
  6105  0009CC  9F0D               	bcf	13,7,b	;volatile
  6106  0009CE                     l3168:
  6107                           
  6108                           ; BSR set to: 15
  6109                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6110  0009CE  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  6111  0009D2  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6112  0009D6  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6113  0009DA  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6114  0009DE  0E16               	movlw	22
  6115  0009E0  D006               	goto	u3220
  6116  0009E2                     u3225:
  6117  0009E2  0100               	movlb	0	; () banked
  6118  0009E4  90D8               	bcf	status,0,c
  6119  0009E6  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6120  0009E8  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6121  0009EA  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6122  0009EC  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  6123  0009EE                     u3220:
  6124  0009EE  2EE8               	decfsz	wreg,f,c
  6125  0009F0  D7F8               	goto	u3225
  6126  0009F2  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6127  0009F6  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6128  0009FA  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6129  0009FE  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6133  000A02  0100               	movlb	0	; () banked
  6134  000A04  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  6135  000A06  0100               	movlb	0	; () banked
  6136  000A08  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6137  000A0A  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6138  000A0C  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6139  000A0E  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6143  000A10  C0D6  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6144  000A14                     l3174:
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;inc\CANlib.h: 994: }
  6148                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6149  000A14  0E04               	movlw	4
  6150  000A16  0100               	movlb	0	; () banked
  6151  000A18  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6152  000A1A  A4D8               	btfss	status,2,c
  6153  000A1C  D089               	goto	l3208
  6154                           
  6155                           ; BSR set to: 0
  6156  000A1E  0EF7               	movlw	247
  6157  000A20  0100               	movlb	0	; () banked
  6158  000A22  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  6159  000A24  A4D8               	btfss	status,2,c
  6160  000A26  D084               	goto	l3208
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;inc\CANlib.h: 997: {
  6164                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6165  000A28  010F               	movlb	15	; () banked
  6166  000A2A  8711               	bsf	17,3,b	;volatile
  6167                           
  6168                           ; BSR set to: 15
  6169                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6170  000A2C  0100               	movlb	0	; () banked
  6171  000A2E  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  6172  000A30  0100               	movlb	0	; () banked
  6173  000A32  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6174  000A34  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6175  000A36  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6176  000A38  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6180  000A3A  C0D6  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6184  000A3E  0E00               	movlw	0
  6185  000A40  0100               	movlb	0	; () banked
  6186  000A42  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  6187  000A44  0100               	movlb	0	; () banked
  6188  000A46  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6189  000A48  0EFF               	movlw	255
  6190  000A4A  0100               	movlb	0	; () banked
  6191  000A4C  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6192  000A4E  0100               	movlb	0	; () banked
  6193  000A50  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6194  000A52  0E00               	movlw	0
  6195  000A54  0100               	movlb	0	; () banked
  6196  000A56  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6197  000A58  0100               	movlb	0	; () banked
  6198  000A5A  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6199  000A5C  0E00               	movlw	0
  6200  000A5E  0100               	movlb	0	; () banked
  6201  000A60  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6202  000A62  0100               	movlb	0	; () banked
  6203  000A64  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6207  000A66  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  6208  000A6A  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6209  000A6E  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6210  000A72  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6211  000A76  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  6212  000A7A  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6213  000A7E  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6214  000A82  0100               	movlb	0	; () banked
  6215  000A84  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  6216  000A86  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6217  000A8A  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6218  000A8E  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6219  000A92  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6223  000A96  C0D6  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6227  000A9A  0100               	movlb	0	; () banked
  6228  000A9C  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6229  000A9E  D003               	goto	l527
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6233  000AA0  010F               	movlb	15	; () banked
  6234  000AA2  8111               	bsf	17,0,b	;volatile
  6235  000AA4  D002               	goto	l528
  6236  000AA6                     l527:
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;inc\CANlib.h: 1009: else
  6240                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6241  000AA6  010F               	movlb	15	; () banked
  6242  000AA8  9111               	bcf	17,0,b	;volatile
  6243  000AAA                     l528:
  6244                           
  6245                           ; BSR set to: 15
  6246                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6247  000AAA  0100               	movlb	0	; () banked
  6248  000AAC  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6249  000AAE  D003               	goto	l529
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6253  000AB0  010F               	movlb	15	; () banked
  6254  000AB2  8311               	bsf	17,1,b	;volatile
  6255  000AB4  D002               	goto	l530
  6256  000AB6                     l529:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;inc\CANlib.h: 1014: else
  6260                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6261  000AB6  010F               	movlb	15	; () banked
  6262  000AB8  9311               	bcf	17,1,b	;volatile
  6263  000ABA                     l530:
  6264                           
  6265                           ; BSR set to: 15
  6266                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6267  000ABA  0100               	movlb	0	; () banked
  6268  000ABC  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6269  000ABE  D003               	goto	l531
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6273  000AC0  010F               	movlb	15	; () banked
  6274  000AC2  8B11               	bsf	17,5,b	;volatile
  6275  000AC4  D002               	goto	l532
  6276  000AC6                     l531:
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;inc\CANlib.h: 1019: else
  6280                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6281  000AC6  010F               	movlb	15	; () banked
  6282  000AC8  9B11               	bcf	17,5,b	;volatile
  6283  000ACA                     l532:
  6284                           
  6285                           ; BSR set to: 15
  6286                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6287  000ACA  0100               	movlb	0	; () banked
  6288  000ACC  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6289  000ACE  D003               	goto	l533
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6293  000AD0  010F               	movlb	15	; () banked
  6294  000AD2  8D11               	bsf	17,6,b	;volatile
  6295  000AD4  D002               	goto	l534
  6296  000AD6                     l533:
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;inc\CANlib.h: 1024: else
  6300                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6301  000AD6  010F               	movlb	15	; () banked
  6302  000AD8  9D11               	bcf	17,6,b	;volatile
  6303  000ADA                     l534:
  6304                           
  6305                           ; BSR set to: 15
  6306                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6307  000ADA  0100               	movlb	0	; () banked
  6308  000ADC  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6309  000ADE  D003               	goto	l535
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6313  000AE0  010F               	movlb	15	; () banked
  6314  000AE2  8F11               	bsf	17,7,b	;volatile
  6315  000AE4  D002               	goto	l3202
  6316  000AE6                     l535:
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;inc\CANlib.h: 1029: else
  6320                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6321  000AE6  010F               	movlb	15	; () banked
  6322  000AE8  9F11               	bcf	17,7,b	;volatile
  6323  000AEA                     l3202:
  6324                           
  6325                           ; BSR set to: 15
  6326                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6327  000AEA  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  6328  000AEE  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6329  000AF2  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6330  000AF6  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6331  000AFA  0E16               	movlw	22
  6332  000AFC  D006               	goto	u3300
  6333  000AFE                     u3305:
  6334  000AFE  0100               	movlb	0	; () banked
  6335  000B00  90D8               	bcf	status,0,c
  6336  000B02  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6337  000B04  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6338  000B06  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6339  000B08  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  6340  000B0A                     u3300:
  6341  000B0A  2EE8               	decfsz	wreg,f,c
  6342  000B0C  D7F8               	goto	u3305
  6343  000B0E  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6344  000B12  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6345  000B16  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6346  000B1A  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6350  000B1E  0100               	movlb	0	; () banked
  6351  000B20  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  6352  000B22  0100               	movlb	0	; () banked
  6353  000B24  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6354  000B26  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6355  000B28  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6356  000B2A  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6360  000B2C  C0D6  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6361  000B30                     l3208:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;inc\CANlib.h: 1035: }
  6365                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6366  000B30  0E05               	movlw	5
  6367  000B32  0100               	movlb	0	; () banked
  6368  000B34  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6369  000B36  A4D8               	btfss	status,2,c
  6370  000B38  0012               	return	
  6371                           
  6372                           ; BSR set to: 0
  6373  000B3A  0EF7               	movlw	247
  6374  000B3C  0100               	movlb	0	; () banked
  6375  000B3E  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  6376  000B40  A4D8               	btfss	status,2,c
  6377  000B42  0012               	return	
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;inc\CANlib.h: 1038: {
  6381                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6382  000B44  010F               	movlb	15	; () banked
  6383  000B46  8715               	bsf	21,3,b	;volatile
  6384                           
  6385                           ; BSR set to: 15
  6386                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6387  000B48  0100               	movlb	0	; () banked
  6388  000B4A  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  6389  000B4C  0100               	movlb	0	; () banked
  6390  000B4E  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6391  000B50  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6392  000B52  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6393  000B54  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6397  000B56  C0D6  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6401  000B5A  0E00               	movlw	0
  6402  000B5C  0100               	movlb	0	; () banked
  6403  000B5E  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  6404  000B60  0100               	movlb	0	; () banked
  6405  000B62  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6406  000B64  0EFF               	movlw	255
  6407  000B66  0100               	movlb	0	; () banked
  6408  000B68  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6409  000B6A  0100               	movlb	0	; () banked
  6410  000B6C  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6411  000B6E  0E00               	movlw	0
  6412  000B70  0100               	movlb	0	; () banked
  6413  000B72  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6414  000B74  0100               	movlb	0	; () banked
  6415  000B76  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6416  000B78  0E00               	movlw	0
  6417  000B7A  0100               	movlb	0	; () banked
  6418  000B7C  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6419  000B7E  0100               	movlb	0	; () banked
  6420  000B80  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6424  000B82  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  6425  000B86  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6426  000B8A  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6427  000B8E  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6428  000B92  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  6429  000B96  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6430  000B9A  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6431  000B9E  0100               	movlb	0	; () banked
  6432  000BA0  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  6433  000BA2  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6434  000BA6  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6435  000BAA  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6436  000BAE  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6440  000BB2  C0D6  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6444  000BB6  0100               	movlb	0	; () banked
  6445  000BB8  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6446  000BBA  D003               	goto	l538
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6450  000BBC  010F               	movlb	15	; () banked
  6451  000BBE  8115               	bsf	21,0,b	;volatile
  6452  000BC0  D002               	goto	l539
  6453  000BC2                     l538:
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;inc\CANlib.h: 1050: else
  6457                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6458  000BC2  010F               	movlb	15	; () banked
  6459  000BC4  9115               	bcf	21,0,b	;volatile
  6460  000BC6                     l539:
  6461                           
  6462                           ; BSR set to: 15
  6463                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6464  000BC6  0100               	movlb	0	; () banked
  6465  000BC8  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6466  000BCA  D003               	goto	l540
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6470  000BCC  010F               	movlb	15	; () banked
  6471  000BCE  8315               	bsf	21,1,b	;volatile
  6472  000BD0  D002               	goto	l541
  6473  000BD2                     l540:
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;inc\CANlib.h: 1055: else
  6477                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6478  000BD2  010F               	movlb	15	; () banked
  6479  000BD4  9315               	bcf	21,1,b	;volatile
  6480  000BD6                     l541:
  6481                           
  6482                           ; BSR set to: 15
  6483                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6484  000BD6  0100               	movlb	0	; () banked
  6485  000BD8  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6486  000BDA  D003               	goto	l542
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6490  000BDC  010F               	movlb	15	; () banked
  6491  000BDE  8B15               	bsf	21,5,b	;volatile
  6492  000BE0  D002               	goto	l543
  6493  000BE2                     l542:
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;inc\CANlib.h: 1060: else
  6497                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6498  000BE2  010F               	movlb	15	; () banked
  6499  000BE4  9B15               	bcf	21,5,b	;volatile
  6500  000BE6                     l543:
  6501                           
  6502                           ; BSR set to: 15
  6503                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6504  000BE6  0100               	movlb	0	; () banked
  6505  000BE8  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6506  000BEA  D003               	goto	l544
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6510  000BEC  010F               	movlb	15	; () banked
  6511  000BEE  8D15               	bsf	21,6,b	;volatile
  6512  000BF0  D002               	goto	l545
  6513  000BF2                     l544:
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;inc\CANlib.h: 1065: else
  6517                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6518  000BF2  010F               	movlb	15	; () banked
  6519  000BF4  9D15               	bcf	21,6,b	;volatile
  6520  000BF6                     l545:
  6521                           
  6522                           ; BSR set to: 15
  6523                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6524  000BF6  0100               	movlb	0	; () banked
  6525  000BF8  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6526  000BFA  D003               	goto	l546
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6530  000BFC  010F               	movlb	15	; () banked
  6531  000BFE  8F15               	bsf	21,7,b	;volatile
  6532  000C00  D002               	goto	l3236
  6533  000C02                     l546:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;inc\CANlib.h: 1070: else
  6537                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6538  000C02  010F               	movlb	15	; () banked
  6539  000C04  9F15               	bcf	21,7,b	;volatile
  6540  000C06                     l3236:
  6541                           
  6542                           ; BSR set to: 15
  6543                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6544  000C06  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  6545  000C0A  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6546  000C0E  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6547  000C12  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6548  000C16  0E16               	movlw	22
  6549  000C18  D006               	goto	u3380
  6550  000C1A                     u3385:
  6551  000C1A  0100               	movlb	0	; () banked
  6552  000C1C  90D8               	bcf	status,0,c
  6553  000C1E  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6554  000C20  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6555  000C22  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6556  000C24  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  6557  000C26                     u3380:
  6558  000C26  2EE8               	decfsz	wreg,f,c
  6559  000C28  D7F8               	goto	u3385
  6560  000C2A  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6561  000C2E  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6562  000C32  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6563  000C36  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6567  000C3A  0100               	movlb	0	; () banked
  6568  000C3C  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  6569  000C3E  0100               	movlb	0	; () banked
  6570  000C40  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6571  000C42  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6572  000C44  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6573  000C46  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6577  000C48  C0D6  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6578  000C4C  0012               	return	
  6579  000C4E                     __end_of_CANSetFilter:
  6580                           	opt stack 0
  6581                           tblptru	equ	0xFF8
  6582                           tblptrh	equ	0xFF7
  6583                           tblptrl	equ	0xFF6
  6584                           tablat	equ	0xFF5
  6585                           prodh	equ	0xFF4
  6586                           prodl	equ	0xFF3
  6587                           intcon	equ	0xFF2
  6588                           intcon2	equ	0xFF1
  6589                           intcon3	equ	0xFF0
  6590                           postinc0	equ	0xFEE
  6591                           wreg	equ	0xFE8
  6592                           postdec1	equ	0xFE5
  6593                           fsr1l	equ	0xFE1
  6594                           indf2	equ	0xFDF
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function _CANOperationMode *****************
  6600 ;; Defined at:
  6601 ;;		line 206 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  mode            1    wreg     enum E16838
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  mode            1   26[BANK0 ] enum E16838
  6606 ;; Return value:  Size  Location     Type
  6607 ;;		None               void
  6608 ;; Registers used:
  6609 ;;		wreg, status,2, status,0
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6615 ;;      Params:         0       0       0       0
  6616 ;;      Locals:         0       1       0       0
  6617 ;;      Temps:          0       0       0       0
  6618 ;;      Totals:         0       1       0       0
  6619 ;;Total ram usage:        1 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    4
  6622 ;; This function calls:
  6623 ;;		Nothing
  6624 ;; This function is called by:
  6625 ;;		_CANInitialize
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text10
  6630  002A28                     __ptext10:
  6631                           	opt stack 0
  6632  002A28                     _CANOperationMode:
  6633                           	opt stack 24
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;incstack = 0
  6637                           ;CANOperationMode@mode stored from wreg
  6638  002A28  0100               	movlb	0	; () banked
  6639  002A2A  6FCC               	movwf	CANOperationMode@mode& (0+255),b
  6640                           
  6641                           ;inc\CANlib.h: 208: CANCON = mode;
  6642  002A2C  C0CC  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6643  002A30                     l2832:
  6644  002A30  506E               	movf	3950,w,c	;volatile
  6645  002A32  0BE0               	andlw	224
  6646  002A34  0100               	movlb	0	; () banked
  6647  002A36  19CC               	xorwf	CANOperationMode@mode& (0+255),w,b
  6648  002A38  B4D8               	btfsc	status,2,c
  6649  002A3A  0012               	return	
  6650  002A3C  D7F9               	goto	l2832
  6651  002A3E                     __end_of_CANOperationMode:
  6652                           	opt stack 0
  6653                           tblptru	equ	0xFF8
  6654                           tblptrh	equ	0xFF7
  6655                           tblptrl	equ	0xFF6
  6656                           tablat	equ	0xFF5
  6657                           prodh	equ	0xFF4
  6658                           prodl	equ	0xFF3
  6659                           intcon	equ	0xFF2
  6660                           intcon2	equ	0xFF1
  6661                           intcon3	equ	0xFF0
  6662                           postinc0	equ	0xFEE
  6663                           wreg	equ	0xFE8
  6664                           postdec1	equ	0xFE5
  6665                           fsr1l	equ	0xFE1
  6666                           indf2	equ	0xFDF
  6667                           fsr2h	equ	0xFDA
  6668                           fsr2l	equ	0xFD9
  6669                           status	equ	0xFD8
  6670                           
  6671 ;; *************** function ___lmul *****************
  6672 ;; Defined at:
  6673 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  multiplier      4   26[BANK0 ] unsigned long 
  6676 ;;  multiplicand    4   30[BANK0 ] unsigned long 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  product         4   34[BANK0 ] unsigned long 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  4   26[BANK0 ] unsigned long 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6688 ;;      Params:         0       8       0       0
  6689 ;;      Locals:         0       4       0       0
  6690 ;;      Temps:          0       0       0       0
  6691 ;;      Totals:         0      12       0       0
  6692 ;;Total ram usage:       12 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    4
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_main
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text11
  6703  00281E                     __ptext11:
  6704                           	opt stack 0
  6705  00281E                     ___lmul:
  6706                           	opt stack 26
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;incstack = 0
  6710  00281E  0E00               	movlw	0
  6711  002820  0100               	movlb	0	; () banked
  6712  002822  6FD4               	movwf	___lmul@product& (0+255),b
  6713  002824  0E00               	movlw	0
  6714  002826  6FD5               	movwf	(___lmul@product+1)& (0+255),b
  6715  002828  0E00               	movlw	0
  6716  00282A  6FD6               	movwf	(___lmul@product+2)& (0+255),b
  6717  00282C  0E00               	movlw	0
  6718  00282E  6FD7               	movwf	(___lmul@product+3)& (0+255),b
  6719  002830                     l3906:
  6720                           
  6721                           ; BSR set to: 0
  6722  002830  0100               	movlb	0	; () banked
  6723  002832  A1CC               	btfss	___lmul@multiplier& (0+255),0,b
  6724  002834  D010               	goto	l3910
  6725                           
  6726                           ; BSR set to: 0
  6727  002836  0100               	movlb	0	; () banked
  6728  002838  51D0               	movf	___lmul@multiplicand& (0+255),w,b
  6729  00283A  0100               	movlb	0	; () banked
  6730  00283C  27D4               	addwf	___lmul@product& (0+255),f,b
  6731  00283E  0100               	movlb	0	; () banked
  6732  002840  51D1               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6733  002842  0100               	movlb	0	; () banked
  6734  002844  23D5               	addwfc	(___lmul@product+1)& (0+255),f,b
  6735  002846  0100               	movlb	0	; () banked
  6736  002848  51D2               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6737  00284A  0100               	movlb	0	; () banked
  6738  00284C  23D6               	addwfc	(___lmul@product+2)& (0+255),f,b
  6739  00284E  0100               	movlb	0	; () banked
  6740  002850  51D3               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6741  002852  0100               	movlb	0	; () banked
  6742  002854  23D7               	addwfc	(___lmul@product+3)& (0+255),f,b
  6743  002856                     l3910:
  6744                           
  6745                           ; BSR set to: 0
  6746  002856  0100               	movlb	0	; () banked
  6747  002858  90D8               	bcf	status,0,c
  6748  00285A  37D0               	rlcf	___lmul@multiplicand& (0+255),f,b
  6749  00285C  37D1               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6750  00285E  37D2               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6751  002860  37D3               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6752                           
  6753                           ; BSR set to: 0
  6754  002862  0100               	movlb	0	; () banked
  6755  002864  90D8               	bcf	status,0,c
  6756  002866  33CF               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6757  002868  33CE               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6758  00286A  33CD               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6759  00286C  33CC               	rrcf	___lmul@multiplier& (0+255),f,b
  6760  00286E  0100               	movlb	0	; () banked
  6761  002870  51CC               	movf	___lmul@multiplier& (0+255),w,b
  6762  002872  0100               	movlb	0	; () banked
  6763  002874  11CD               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6764  002876  0100               	movlb	0	; () banked
  6765  002878  11CE               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6766  00287A  0100               	movlb	0	; () banked
  6767  00287C  11CF               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6768  00287E  A4D8               	btfss	status,2,c
  6769  002880  D7D7               	goto	l3906
  6770                           
  6771                           ; BSR set to: 0
  6772  002882  C0D4  F0CC         	movff	___lmul@product,?___lmul
  6773  002886  C0D5  F0CD         	movff	___lmul@product+1,?___lmul+1
  6774  00288A  C0D6  F0CE         	movff	___lmul@product+2,?___lmul+2
  6775  00288E  C0D7  F0CF         	movff	___lmul@product+3,?___lmul+3
  6776                           
  6777                           ; BSR set to: 0
  6778  002892  0012               	return		;funcret
  6779  002894                     __end_of___lmul:
  6780                           	opt stack 0
  6781                           tblptru	equ	0xFF8
  6782                           tblptrh	equ	0xFF7
  6783                           tblptrl	equ	0xFF6
  6784                           tablat	equ	0xFF5
  6785                           prodh	equ	0xFF4
  6786                           prodl	equ	0xFF3
  6787                           intcon	equ	0xFF2
  6788                           intcon2	equ	0xFF1
  6789                           intcon3	equ	0xFF0
  6790                           postinc0	equ	0xFEE
  6791                           wreg	equ	0xFE8
  6792                           postdec1	equ	0xFE5
  6793                           fsr1l	equ	0xFE1
  6794                           indf2	equ	0xFDF
  6795                           fsr2h	equ	0xFDA
  6796                           fsr2l	equ	0xFD9
  6797                           status	equ	0xFD8
  6798                           
  6799 ;; *************** function ___aldiv *****************
  6800 ;; Defined at:
  6801 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  6802 ;; Parameters:    Size  Location     Type
  6803 ;;  dividend        4    0[BANK1 ] long 
  6804 ;;  divisor         4    4[BANK1 ] long 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  quotient        4   10[BANK1 ] long 
  6807 ;;  sign            1    9[BANK1 ] unsigned char 
  6808 ;;  counter         1    8[BANK1 ] unsigned char 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  4    0[BANK1 ] long 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6818 ;;      Params:         0       0       8       0
  6819 ;;      Locals:         0       0       6       0
  6820 ;;      Temps:          0       0       0       0
  6821 ;;      Totals:         0       0      14       0
  6822 ;;Total ram usage:       14 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    4
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_main
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text12
  6833  0024F2                     __ptext12:
  6834                           	opt stack 0
  6835  0024F2                     ___aldiv:
  6836                           	opt stack 26
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;incstack = 0
  6840  0024F2  0E00               	movlw	0
  6841  0024F4  0101               	movlb	1	; () banked
  6842  0024F6  6F09               	movwf	___aldiv@sign& (0+255),b
  6843                           
  6844                           ; BSR set to: 1
  6845  0024F8  0101               	movlb	1	; () banked
  6846  0024FA  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6847  0024FC  D00C               	goto	l4418
  6848                           
  6849                           ; BSR set to: 1
  6850  0024FE  0101               	movlb	1	; () banked
  6851  002500  1F07               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6852  002502  1F06               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6853  002504  1F05               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6854  002506  6D04               	negf	___aldiv@divisor& (0+255),b
  6855  002508  0E00               	movlw	0
  6856  00250A  2305               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6857  00250C  2306               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6858  00250E  2307               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6859                           
  6860                           ; BSR set to: 1
  6861  002510  0E01               	movlw	1
  6862  002512  0101               	movlb	1	; () banked
  6863  002514  6F09               	movwf	___aldiv@sign& (0+255),b
  6864  002516                     l4418:
  6865                           
  6866                           ; BSR set to: 1
  6867  002516  0101               	movlb	1	; () banked
  6868  002518  AF03               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6869  00251A  D00C               	goto	l4424
  6870                           
  6871                           ; BSR set to: 1
  6872  00251C  0101               	movlb	1	; () banked
  6873  00251E  1F03               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6874  002520  1F02               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6875  002522  1F01               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6876  002524  6D00               	negf	___aldiv@dividend& (0+255),b
  6877  002526  0E00               	movlw	0
  6878  002528  2301               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6879  00252A  2302               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6880  00252C  2303               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6881                           
  6882                           ; BSR set to: 1
  6883  00252E  0E01               	movlw	1
  6884  002530  0101               	movlb	1	; () banked
  6885  002532  1B09               	xorwf	___aldiv@sign& (0+255),f,b
  6886  002534                     l4424:
  6887                           
  6888                           ; BSR set to: 1
  6889  002534  0E00               	movlw	0
  6890  002536  0101               	movlb	1	; () banked
  6891  002538  6F0A               	movwf	___aldiv@quotient& (0+255),b
  6892  00253A  0E00               	movlw	0
  6893  00253C  6F0B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6894  00253E  0E00               	movlw	0
  6895  002540  6F0C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6896  002542  0E00               	movlw	0
  6897  002544  6F0D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6898                           
  6899                           ; BSR set to: 1
  6900  002546  0101               	movlb	1	; () banked
  6901  002548  5104               	movf	___aldiv@divisor& (0+255),w,b
  6902  00254A  0101               	movlb	1	; () banked
  6903  00254C  1105               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6904  00254E  0101               	movlb	1	; () banked
  6905  002550  1106               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6906  002552  0101               	movlb	1	; () banked
  6907  002554  1107               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6908  002556  B4D8               	btfsc	status,2,c
  6909  002558  D042               	goto	l4446
  6910                           
  6911                           ; BSR set to: 1
  6912  00255A  0E01               	movlw	1
  6913  00255C  0101               	movlb	1	; () banked
  6914  00255E  6F08               	movwf	___aldiv@counter& (0+255),b
  6915  002560  D008               	goto	l4432
  6916  002562                     l4430:
  6917                           
  6918                           ; BSR set to: 1
  6919  002562  0101               	movlb	1	; () banked
  6920  002564  90D8               	bcf	status,0,c
  6921  002566  3704               	rlcf	___aldiv@divisor& (0+255),f,b
  6922  002568  3705               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6923  00256A  3706               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6924  00256C  3707               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6925  00256E  0101               	movlb	1	; () banked
  6926  002570  2B08               	incf	___aldiv@counter& (0+255),f,b
  6927  002572                     l4432:
  6928                           
  6929                           ; BSR set to: 1
  6930  002572  0101               	movlb	1	; () banked
  6931  002574  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6932  002576  D7F5               	goto	l4430
  6933  002578                     l4434:
  6934                           
  6935                           ; BSR set to: 1
  6936  002578  0101               	movlb	1	; () banked
  6937  00257A  90D8               	bcf	status,0,c
  6938  00257C  370A               	rlcf	___aldiv@quotient& (0+255),f,b
  6939  00257E  370B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6940  002580  370C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6941  002582  370D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6942                           
  6943                           ; BSR set to: 1
  6944  002584  0101               	movlb	1	; () banked
  6945  002586  5104               	movf	___aldiv@divisor& (0+255),w,b
  6946  002588  0101               	movlb	1	; () banked
  6947  00258A  5D00               	subwf	___aldiv@dividend& (0+255),w,b
  6948  00258C  0101               	movlb	1	; () banked
  6949  00258E  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6950  002590  0101               	movlb	1	; () banked
  6951  002592  5901               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6952  002594  0101               	movlb	1	; () banked
  6953  002596  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6954  002598  0101               	movlb	1	; () banked
  6955  00259A  5902               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6956  00259C  0101               	movlb	1	; () banked
  6957  00259E  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6958  0025A0  0101               	movlb	1	; () banked
  6959  0025A2  5903               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6960  0025A4  A0D8               	btfss	status,0,c
  6961  0025A6  D012               	goto	l4442
  6962                           
  6963                           ; BSR set to: 1
  6964  0025A8  0101               	movlb	1	; () banked
  6965  0025AA  5104               	movf	___aldiv@divisor& (0+255),w,b
  6966  0025AC  0101               	movlb	1	; () banked
  6967  0025AE  5F00               	subwf	___aldiv@dividend& (0+255),f,b
  6968  0025B0  0101               	movlb	1	; () banked
  6969  0025B2  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6970  0025B4  0101               	movlb	1	; () banked
  6971  0025B6  5B01               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6972  0025B8  0101               	movlb	1	; () banked
  6973  0025BA  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6974  0025BC  0101               	movlb	1	; () banked
  6975  0025BE  5B02               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6976  0025C0  0101               	movlb	1	; () banked
  6977  0025C2  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6978  0025C4  0101               	movlb	1	; () banked
  6979  0025C6  5B03               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6980                           
  6981                           ; BSR set to: 1
  6982  0025C8  0101               	movlb	1	; () banked
  6983  0025CA  810A               	bsf	___aldiv@quotient& (0+255),0,b
  6984  0025CC                     l4442:
  6985                           
  6986                           ; BSR set to: 1
  6987  0025CC  0101               	movlb	1	; () banked
  6988  0025CE  90D8               	bcf	status,0,c
  6989  0025D0  3307               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6990  0025D2  3306               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6991  0025D4  3305               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6992  0025D6  3304               	rrcf	___aldiv@divisor& (0+255),f,b
  6993                           
  6994                           ; BSR set to: 1
  6995  0025D8  0101               	movlb	1	; () banked
  6996  0025DA  2F08               	decfsz	___aldiv@counter& (0+255),f,b
  6997  0025DC  D7CD               	goto	l4434
  6998  0025DE                     l4446:
  6999                           
  7000                           ; BSR set to: 1
  7001  0025DE  0101               	movlb	1	; () banked
  7002  0025E0  5109               	movf	___aldiv@sign& (0+255),w,b
  7003  0025E2  0101               	movlb	1	; () banked
  7004  0025E4  B4D8               	btfsc	status,2,c
  7005  0025E6  D009               	goto	l4450
  7006                           
  7007                           ; BSR set to: 1
  7008  0025E8  0101               	movlb	1	; () banked
  7009  0025EA  1F0D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7010  0025EC  1F0C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7011  0025EE  1F0B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7012  0025F0  6D0A               	negf	___aldiv@quotient& (0+255),b
  7013  0025F2  0E00               	movlw	0
  7014  0025F4  230B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7015  0025F6  230C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7016  0025F8  230D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7017  0025FA                     l4450:
  7018                           
  7019                           ; BSR set to: 1
  7020  0025FA  C10A  F100         	movff	___aldiv@quotient,?___aldiv
  7021  0025FE  C10B  F101         	movff	___aldiv@quotient+1,?___aldiv+1
  7022  002602  C10C  F102         	movff	___aldiv@quotient+2,?___aldiv+2
  7023  002606  C10D  F103         	movff	___aldiv@quotient+3,?___aldiv+3
  7024  00260A  0012               	return	
  7025  00260C                     __end_of___aldiv:
  7026                           	opt stack 0
  7027                           tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           intcon	equ	0xFF2
  7034                           intcon2	equ	0xFF1
  7035                           intcon3	equ	0xFF0
  7036                           postinc0	equ	0xFEE
  7037                           wreg	equ	0xFE8
  7038                           postdec1	equ	0xFE5
  7039                           fsr1l	equ	0xFE1
  7040                           indf2	equ	0xFDF
  7041                           fsr2h	equ	0xFDA
  7042                           fsr2l	equ	0xFD9
  7043                           status	equ	0xFD8
  7044                           
  7045 ;; *************** function _CANisTXwarningON *****************
  7046 ;; Defined at:
  7047 ;;		line 1119 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      unsigned char 
  7054 ;; Registers used:
  7055 ;;		wreg
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7061 ;;      Params:         0       0       0       0
  7062 ;;      Locals:         0       0       0       0
  7063 ;;      Temps:          0       0       0       0
  7064 ;;      Totals:         0       0       0       0
  7065 ;;Total ram usage:        0 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    4
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text13
  7076  002A66                     __ptext13:
  7077                           	opt stack 0
  7078  002A66                     _CANisTXwarningON:
  7079                           	opt stack 26
  7080                           
  7081                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;incstack = 0
  7085  002A66  A474               	btfss	3956,2,c	;volatile
  7086  002A68  D002               	goto	u4150
  7087  002A6A  0E01               	movlw	1
  7088  002A6C  0012               	return	
  7089  002A6E                     u4150:
  7090  002A6E  0E00               	movlw	0
  7091  002A70  0012               	return	
  7092  002A72                     __end_of_CANisTXwarningON:
  7093                           	opt stack 0
  7094                           tblptru	equ	0xFF8
  7095                           tblptrh	equ	0xFF7
  7096                           tblptrl	equ	0xFF6
  7097                           tablat	equ	0xFF5
  7098                           prodh	equ	0xFF4
  7099                           prodl	equ	0xFF3
  7100                           intcon	equ	0xFF2
  7101                           intcon2	equ	0xFF1
  7102                           intcon3	equ	0xFF0
  7103                           postinc0	equ	0xFEE
  7104                           wreg	equ	0xFE8
  7105                           postdec1	equ	0xFE5
  7106                           fsr1l	equ	0xFE1
  7107                           indf2	equ	0xFDF
  7108                           fsr2h	equ	0xFDA
  7109                           fsr2l	equ	0xFD9
  7110                           status	equ	0xFD8
  7111                           
  7112 ;; *************** function _CANisRXwarningON *****************
  7113 ;; Defined at:
  7114 ;;		line 1127 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      unsigned char 
  7121 ;; Registers used:
  7122 ;;		wreg
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7128 ;;      Params:         0       0       0       0
  7129 ;;      Locals:         0       0       0       0
  7130 ;;      Temps:          0       0       0       0
  7131 ;;      Totals:         0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    4
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_main
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142                           	psect	text14
  7143  002A72                     __ptext14:
  7144                           	opt stack 0
  7145  002A72                     _CANisRXwarningON:
  7146                           	opt stack 26
  7147                           
  7148                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7149                           
  7150                           ;incstack = 0
  7151  002A72  A274               	btfss	3956,1,c	;volatile
  7152  002A74  D002               	goto	u4160
  7153  002A76  0E01               	movlw	1
  7154  002A78  0012               	return	
  7155  002A7A                     u4160:
  7156  002A7A  0E00               	movlw	0
  7157  002A7C  0012               	return	
  7158  002A7E                     __end_of_CANisRXwarningON:
  7159                           	opt stack 0
  7160                           tblptru	equ	0xFF8
  7161                           tblptrh	equ	0xFF7
  7162                           tblptrl	equ	0xFF6
  7163                           tablat	equ	0xFF5
  7164                           prodh	equ	0xFF4
  7165                           prodl	equ	0xFF3
  7166                           intcon	equ	0xFF2
  7167                           intcon2	equ	0xFF1
  7168                           intcon3	equ	0xFF0
  7169                           postinc0	equ	0xFEE
  7170                           wreg	equ	0xFE8
  7171                           postdec1	equ	0xFE5
  7172                           fsr1l	equ	0xFE1
  7173                           indf2	equ	0xFDF
  7174                           fsr2h	equ	0xFDA
  7175                           fsr2l	equ	0xFD9
  7176                           status	equ	0xFD8
  7177                           
  7178 ;; *************** function _ADC_Read *****************
  7179 ;; Defined at:
  7180 ;;		line 381 in file "ABS_Code.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;		None               void
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, status,0, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7194 ;;      Params:         0       0       0       0
  7195 ;;      Locals:         0       0       0       0
  7196 ;;      Temps:          0       0       0       0
  7197 ;;      Totals:         0       0       0       0
  7198 ;;Total ram usage:        0 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    5
  7201 ;; This function calls:
  7202 ;;		___awdiv
  7203 ;; This function is called by:
  7204 ;;		_main
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           	psect	text15
  7209  002930                     __ptext15:
  7210                           	opt stack 0
  7211  002930                     _ADC_Read:
  7212                           	opt stack 25
  7213                           
  7214                           ;ABS_Code.c: 382: ADCON0bits.GO = 1;
  7215                           
  7216                           ;incstack = 0
  7217  002930  82C2               	bsf	4034,1,c	;volatile
  7218  002932                     l759:
  7219  002932  B2C2               	btfsc	4034,1,c	;volatile
  7220  002934  D7FE               	goto	l759
  7221                           
  7222                           ;ABS_Code.c: 384: read = ADRESH;
  7223  002936  CFC4 F088          	movff	4036,_read	;volatile
  7224                           
  7225                           ;ABS_Code.c: 385: correction_factor = read - 127;
  7226  00293A  0E81               	movlw	129
  7227  00293C  0100               	movlb	0	; () banked
  7228  00293E  2588               	addwf	_read& (0+255),w,b
  7229  002940  0100               	movlb	0	; () banked
  7230  002942  6F76               	movwf	_correction_factor& (0+255),b
  7231  002944  0100               	movlb	0	; () banked
  7232  002946  6B77               	clrf	(_correction_factor+1)& (0+255),b
  7233  002948  0EFF               	movlw	255
  7234  00294A  2377               	addwfc	(_correction_factor+1)& (0+255),f,b
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;ABS_Code.c: 386: home_position = correction_factor / 4 + 127;
  7238  00294C  C076  F0CC         	movff	_correction_factor,___awdiv@dividend
  7239  002950  C077  F0CD         	movff	_correction_factor+1,___awdiv@dividend+1
  7240  002954  0E00               	movlw	0
  7241  002956  0100               	movlb	0	; () banked
  7242  002958  6FCF               	movwf	(___awdiv@divisor+1)& (0+255),b
  7243  00295A  0E04               	movlw	4
  7244  00295C  6FCE               	movwf	___awdiv@divisor& (0+255),b
  7245  00295E  EC06  F013         	call	___awdiv	;wreg free
  7246  002962  0100               	movlb	0	; () banked
  7247  002964  51CC               	movf	?___awdiv& (0+255),w,b
  7248  002966  0F7F               	addlw	127
  7249  002968  0100               	movlb	0	; () banked
  7250  00296A  6F87               	movwf	_home_position& (0+255),b
  7251                           
  7252                           ; BSR set to: 0
  7253  00296C  0012               	return		;funcret
  7254  00296E                     __end_of_ADC_Read:
  7255                           	opt stack 0
  7256                           tblptru	equ	0xFF8
  7257                           tblptrh	equ	0xFF7
  7258                           tblptrl	equ	0xFF6
  7259                           tablat	equ	0xFF5
  7260                           prodh	equ	0xFF4
  7261                           prodl	equ	0xFF3
  7262                           intcon	equ	0xFF2
  7263                           intcon2	equ	0xFF1
  7264                           intcon3	equ	0xFF0
  7265                           postinc0	equ	0xFEE
  7266                           wreg	equ	0xFE8
  7267                           postdec1	equ	0xFE5
  7268                           fsr1l	equ	0xFE1
  7269                           indf2	equ	0xFDF
  7270                           fsr2h	equ	0xFDA
  7271                           fsr2l	equ	0xFD9
  7272                           status	equ	0xFD8
  7273                           
  7274 ;; *************** function ___awdiv *****************
  7275 ;; Defined at:
  7276 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  dividend        2   26[BANK0 ] int 
  7279 ;;  divisor         2   28[BANK0 ] int 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;  quotient        2   32[BANK0 ] int 
  7282 ;;  sign            1   31[BANK0 ] unsigned char 
  7283 ;;  counter         1   30[BANK0 ] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  2   26[BANK0 ] int 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7293 ;;      Params:         0       4       0       0
  7294 ;;      Locals:         0       4       0       0
  7295 ;;      Temps:          0       0       0       0
  7296 ;;      Totals:         0       8       0       0
  7297 ;;Total ram usage:        8 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:    4
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_main
  7304 ;;		_ADC_Read
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text16
  7309  00260C                     __ptext16:
  7310                           	opt stack 0
  7311  00260C                     ___awdiv:
  7312                           	opt stack 26
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;incstack = 0
  7316  00260C  0E00               	movlw	0
  7317  00260E  0100               	movlb	0	; () banked
  7318  002610  6FD1               	movwf	___awdiv@sign& (0+255),b
  7319                           
  7320                           ; BSR set to: 0
  7321  002612  0100               	movlb	0	; () banked
  7322  002614  AFCF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7323  002616  D008               	goto	l3550
  7324                           
  7325                           ; BSR set to: 0
  7326  002618  0100               	movlb	0	; () banked
  7327  00261A  6DCE               	negf	___awdiv@divisor& (0+255),b
  7328  00261C  1FCF               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7329  00261E  B0D8               	btfsc	status,0,c
  7330  002620  2BCF               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7331                           
  7332                           ; BSR set to: 0
  7333  002622  0E01               	movlw	1
  7334  002624  0100               	movlb	0	; () banked
  7335  002626  6FD1               	movwf	___awdiv@sign& (0+255),b
  7336  002628                     l3550:
  7337                           
  7338                           ; BSR set to: 0
  7339  002628  0100               	movlb	0	; () banked
  7340  00262A  AFCD               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7341  00262C  D008               	goto	l3556
  7342                           
  7343                           ; BSR set to: 0
  7344  00262E  0100               	movlb	0	; () banked
  7345  002630  6DCC               	negf	___awdiv@dividend& (0+255),b
  7346  002632  1FCD               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7347  002634  B0D8               	btfsc	status,0,c
  7348  002636  2BCD               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7349                           
  7350                           ; BSR set to: 0
  7351  002638  0E01               	movlw	1
  7352  00263A  0100               	movlb	0	; () banked
  7353  00263C  1BD1               	xorwf	___awdiv@sign& (0+255),f,b
  7354  00263E                     l3556:
  7355                           
  7356                           ; BSR set to: 0
  7357  00263E  0E00               	movlw	0
  7358  002640  0100               	movlb	0	; () banked
  7359  002642  6FD3               	movwf	(___awdiv@quotient+1)& (0+255),b
  7360  002644  0E00               	movlw	0
  7361  002646  6FD2               	movwf	___awdiv@quotient& (0+255),b
  7362                           
  7363                           ; BSR set to: 0
  7364  002648  0100               	movlb	0	; () banked
  7365  00264A  51CE               	movf	___awdiv@divisor& (0+255),w,b
  7366  00264C  0100               	movlb	0	; () banked
  7367  00264E  11CF               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7368  002650  B4D8               	btfsc	status,2,c
  7369  002652  D02C               	goto	l3578
  7370                           
  7371                           ; BSR set to: 0
  7372  002654  0E01               	movlw	1
  7373  002656  0100               	movlb	0	; () banked
  7374  002658  6FD0               	movwf	___awdiv@counter& (0+255),b
  7375  00265A  D006               	goto	l3564
  7376  00265C                     l3562:
  7377                           
  7378                           ; BSR set to: 0
  7379  00265C  0100               	movlb	0	; () banked
  7380  00265E  90D8               	bcf	status,0,c
  7381  002660  37CE               	rlcf	___awdiv@divisor& (0+255),f,b
  7382  002662  37CF               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7383  002664  0100               	movlb	0	; () banked
  7384  002666  2BD0               	incf	___awdiv@counter& (0+255),f,b
  7385  002668                     l3564:
  7386                           
  7387                           ; BSR set to: 0
  7388  002668  0100               	movlb	0	; () banked
  7389  00266A  AFCF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7390  00266C  D7F7               	goto	l3562
  7391  00266E                     l3566:
  7392                           
  7393                           ; BSR set to: 0
  7394  00266E  0100               	movlb	0	; () banked
  7395  002670  90D8               	bcf	status,0,c
  7396  002672  37D2               	rlcf	___awdiv@quotient& (0+255),f,b
  7397  002674  37D3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7398                           
  7399                           ; BSR set to: 0
  7400  002676  0100               	movlb	0	; () banked
  7401  002678  51CE               	movf	___awdiv@divisor& (0+255),w,b
  7402  00267A  0100               	movlb	0	; () banked
  7403  00267C  5DCC               	subwf	___awdiv@dividend& (0+255),w,b
  7404  00267E  0100               	movlb	0	; () banked
  7405  002680  51CF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7406  002682  0100               	movlb	0	; () banked
  7407  002684  59CD               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7408  002686  A0D8               	btfss	status,0,c
  7409  002688  D00A               	goto	l3574
  7410                           
  7411                           ; BSR set to: 0
  7412  00268A  0100               	movlb	0	; () banked
  7413  00268C  51CE               	movf	___awdiv@divisor& (0+255),w,b
  7414  00268E  0100               	movlb	0	; () banked
  7415  002690  5FCC               	subwf	___awdiv@dividend& (0+255),f,b
  7416  002692  0100               	movlb	0	; () banked
  7417  002694  51CF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7418  002696  0100               	movlb	0	; () banked
  7419  002698  5BCD               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7420                           
  7421                           ; BSR set to: 0
  7422  00269A  0100               	movlb	0	; () banked
  7423  00269C  81D2               	bsf	___awdiv@quotient& (0+255),0,b
  7424  00269E                     l3574:
  7425                           
  7426                           ; BSR set to: 0
  7427  00269E  0100               	movlb	0	; () banked
  7428  0026A0  90D8               	bcf	status,0,c
  7429  0026A2  33CF               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7430  0026A4  33CE               	rrcf	___awdiv@divisor& (0+255),f,b
  7431                           
  7432                           ; BSR set to: 0
  7433  0026A6  0100               	movlb	0	; () banked
  7434  0026A8  2FD0               	decfsz	___awdiv@counter& (0+255),f,b
  7435  0026AA  D7E1               	goto	l3566
  7436  0026AC                     l3578:
  7437                           
  7438                           ; BSR set to: 0
  7439  0026AC  0100               	movlb	0	; () banked
  7440  0026AE  51D1               	movf	___awdiv@sign& (0+255),w,b
  7441  0026B0  0100               	movlb	0	; () banked
  7442  0026B2  B4D8               	btfsc	status,2,c
  7443  0026B4  D005               	goto	l3582
  7444                           
  7445                           ; BSR set to: 0
  7446  0026B6  0100               	movlb	0	; () banked
  7447  0026B8  6DD2               	negf	___awdiv@quotient& (0+255),b
  7448  0026BA  1FD3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7449  0026BC  B0D8               	btfsc	status,0,c
  7450  0026BE  2BD3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7451  0026C0                     l3582:
  7452                           
  7453                           ; BSR set to: 0
  7454  0026C0  C0D2  F0CC         	movff	___awdiv@quotient,?___awdiv
  7455  0026C4  C0D3  F0CD         	movff	___awdiv@quotient+1,?___awdiv+1
  7456  0026C8  0012               	return	
  7457  0026CA                     __end_of___awdiv:
  7458                           	opt stack 0
  7459                           tblptru	equ	0xFF8
  7460                           tblptrh	equ	0xFF7
  7461                           tblptrl	equ	0xFF6
  7462                           tablat	equ	0xFF5
  7463                           prodh	equ	0xFF4
  7464                           prodl	equ	0xFF3
  7465                           intcon	equ	0xFF2
  7466                           intcon2	equ	0xFF1
  7467                           intcon3	equ	0xFF0
  7468                           postinc0	equ	0xFEE
  7469                           wreg	equ	0xFE8
  7470                           postdec1	equ	0xFE5
  7471                           fsr1l	equ	0xFE1
  7472                           indf2	equ	0xFDF
  7473                           fsr2h	equ	0xFDA
  7474                           fsr2l	equ	0xFD9
  7475                           status	equ	0xFD8
  7476                           
  7477 ;; *************** function _ISR_Bassa *****************
  7478 ;; Defined at:
  7479 ;;		line 214 in file "ABS_Code.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;		None
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;		None               void
  7486 ;; Registers used:
  7487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7493 ;;      Params:         0       0       0       0
  7494 ;;      Locals:         0       0       0       0
  7495 ;;      Temps:         17       0       0       0
  7496 ;;      Totals:        17       0       0       0
  7497 ;;Total ram usage:       17 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; Hardware stack levels required when called:    3
  7500 ;; This function calls:
  7501 ;;		_CANisRxReady
  7502 ;;		_CANreceiveMessage
  7503 ;; This function is called by:
  7504 ;;		Interrupt level 1
  7505 ;; This function uses a non-reentrant model
  7506 ;;
  7507                           
  7508                           	psect	intcodelo
  7509  000018                     __pintcodelo:
  7510                           	opt stack 0
  7511  000018                     _ISR_Bassa:
  7512                           	opt stack 24
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;incstack = 0
  7516  000018  803F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7517  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7518  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7519  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7520  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7521  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7522  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7523  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7524  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7525  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7526  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7527  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7528  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7529  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7530  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7531  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7532  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7533  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7534                           
  7535                           ;ABS_Code.c: 216: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7536  00005E  A0A4               	btfss	4004,0,c	;volatile
  7537  000060  B2A4               	btfsc	4004,1,c	;volatile
  7538  000062  D001               	goto	i1l4116
  7539  000064  D043               	goto	i1l4140
  7540  000066                     i1l4116:
  7541                           
  7542                           ;ABS_Code.c: 217: if (CANisRxReady()) {
  7543  000066  EC1F  F015         	call	_CANisRxReady	;wreg free
  7544  00006A  0900               	iorlw	0
  7545  00006C  B4D8               	btfsc	status,2,c
  7546  00006E  D03C               	goto	i1l4136
  7547                           
  7548                           ;ABS_Code.c: 218: CANreceiveMessage(&msg);
  7549  000070  0E8A               	movlw	low _msg
  7550  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7551  000074  0E00               	movlw	high _msg
  7552  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7553  000078  ECED  F009         	call	_CANreceiveMessage	;wreg free
  7554                           
  7555                           ;ABS_Code.c: 219: if (msg.RTR == 1) {
  7556  00007C  0100               	movlb	0	; () banked
  7557  00007E  0598               	decf	(_msg+14)& (0+255),w,b
  7558  000080  A4D8               	btfss	status,2,c
  7559  000082  D009               	goto	i1l4124
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;ABS_Code.c: 220: remote_frame_id = msg.identifier;
  7563  000084  C08A  F068         	movff	_msg,_remote_frame_id	;volatile
  7564  000088  C08B  F069         	movff	_msg+1,_remote_frame_id+1	;volatile
  7565  00008C  C08C  F06A         	movff	_msg+2,_remote_frame_id+2	;volatile
  7566  000090  C08D  F06B         	movff	_msg+3,_remote_frame_id+3	;volatile
  7567                           
  7568                           ;ABS_Code.c: 221: remote_frame = 1;
  7569  000094  803E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7570  000096                     i1l4124:
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;ABS_Code.c: 222: }
  7574                           ;ABS_Code.c: 223: if (msg.identifier == 0b00000000000000000000000000100) {
  7575  000096  0E04               	movlw	4
  7576  000098  0100               	movlb	0	; () banked
  7577  00009A  198A               	xorwf	_msg& (0+255),w,b
  7578  00009C  0100               	movlb	0	; () banked
  7579  00009E  118B               	iorwf	(_msg+1)& (0+255),w,b
  7580  0000A0  0100               	movlb	0	; () banked
  7581  0000A2  118C               	iorwf	(_msg+2)& (0+255),w,b
  7582  0000A4  0100               	movlb	0	; () banked
  7583  0000A6  118D               	iorwf	(_msg+3)& (0+255),w,b
  7584  0000A8  A4D8               	btfss	status,2,c
  7585  0000AA  D004               	goto	i1l4128
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;ABS_Code.c: 224: brake_signal_CAN = msg.data[0];
  7589  0000AC  C08E  F085         	movff	_msg+4,_brake_signal_CAN	;volatile
  7590                           
  7591                           ;ABS_Code.c: 225: Analogic_Mode = msg.data[1];
  7592  0000B0  C08F  F084         	movff	_msg+5,_Analogic_Mode	;volatile
  7593  0000B4                     i1l4128:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;ABS_Code.c: 226: }
  7597                           ;ABS_Code.c: 227: if (msg.identifier == 0b00000000000000000000000001010) {
  7598  0000B4  0E0A               	movlw	10
  7599  0000B6  0100               	movlb	0	; () banked
  7600  0000B8  198A               	xorwf	_msg& (0+255),w,b
  7601  0000BA  0100               	movlb	0	; () banked
  7602  0000BC  118B               	iorwf	(_msg+1)& (0+255),w,b
  7603  0000BE  0100               	movlb	0	; () banked
  7604  0000C0  118C               	iorwf	(_msg+2)& (0+255),w,b
  7605  0000C2  0100               	movlb	0	; () banked
  7606  0000C4  118D               	iorwf	(_msg+3)& (0+255),w,b
  7607  0000C6  A4D8               	btfss	status,2,c
  7608  0000C8  D00F               	goto	i1l4136
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;ABS_Code.c: 228: distance_set_value = msg.data[0];
  7612  0000CA  C08E  F082         	movff	_msg+4,_distance_set_value	;volatile
  7613  0000CE  0100               	movlb	0	; () banked
  7614  0000D0  6B83               	clrf	(_distance_set_value+1)& (0+255),b	;volatile
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;ABS_Code.c: 229: distance_set_counter_1 = 0;
  7618  0000D2  0E00               	movlw	0
  7619  0000D4  0100               	movlb	0	; () banked
  7620  0000D6  6F7F               	movwf	(_distance_set_counter_1+1)& (0+255),b	;volatile
  7621  0000D8  0E00               	movlw	0
  7622  0000DA  6F7E               	movwf	_distance_set_counter_1& (0+255),b	;volatile
  7623                           
  7624                           ;ABS_Code.c: 230: distance_set_counter_2 = 0;
  7625  0000DC  0E00               	movlw	0
  7626  0000DE  0100               	movlb	0	; () banked
  7627  0000E0  6F81               	movwf	(_distance_set_counter_2+1)& (0+255),b	;volatile
  7628  0000E2  0E00               	movlw	0
  7629  0000E4  6F80               	movwf	_distance_set_counter_2& (0+255),b	;volatile
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;ABS_Code.c: 231: distance_set_flag = 1;
  7633  0000E6  8E3D               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  7634  0000E8                     i1l4136:
  7635                           
  7636                           ;ABS_Code.c: 232: }
  7637                           ;ABS_Code.c: 233: }
  7638                           ;ABS_Code.c: 234: PIR3bits.RXB0IF = 0;
  7639  0000E8  90A4               	bcf	4004,0,c	;volatile
  7640                           
  7641                           ;ABS_Code.c: 235: PIR3bits.RXB1IF = 0;
  7642  0000EA  92A4               	bcf	4004,1,c	;volatile
  7643  0000EC                     i1l4140:
  7644                           
  7645                           ;ABS_Code.c: 236: }
  7646                           ;ABS_Code.c: 239: if (PIR1bits.TMR1IF == 1) {
  7647  0000EC  A09E               	btfss	3998,0,c	;volatile
  7648  0000EE  D002               	goto	i1l709
  7649                           
  7650                           ;ABS_Code.c: 240: TMR1_overflow = 1;
  7651  0000F0  843D               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7652                           
  7653                           ;ABS_Code.c: 241: PIR1bits.TMR1IF = 0;
  7654  0000F2  909E               	bcf	3998,0,c	;volatile
  7655  0000F4                     i1l709:
  7656                           
  7657                           ;ABS_Code.c: 242: }
  7658                           ;ABS_Code.c: 245: if (PIR2bits.TMR3IF == 1) {
  7659  0000F4  A2A1               	btfss	4001,1,c	;volatile
  7660  0000F6  D002               	goto	i1l711
  7661                           
  7662                           ;ABS_Code.c: 246: TMR3_overflow = 1;
  7663  0000F8  863D               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7664                           
  7665                           ;ABS_Code.c: 247: PIR2bits.TMR3IF = 0;
  7666  0000FA  92A1               	bcf	4001,1,c	;volatile
  7667  0000FC                     i1l711:
  7668  0000FC  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7669  000100  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7670  000104  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7671  000108  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7672  00010C  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7673  000110  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7674  000114  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7675  000118  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7676  00011C  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7677  000120  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7678  000124  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7679  000128  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7680  00012C  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7681  000130  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7682  000134  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7683  000138  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7684  00013C  C00D  FFD8         	movff	??_ISR_Bassa,status
  7685  000140  903F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7686  000142  0010               	retfie	
  7687  000144                     __end_of_ISR_Bassa:
  7688                           	opt stack 0
  7689                           pclatu	equ	0xFFB
  7690                           pclath	equ	0xFFA
  7691                           tblptru	equ	0xFF8
  7692                           tblptrh	equ	0xFF7
  7693                           tblptrl	equ	0xFF6
  7694                           tablat	equ	0xFF5
  7695                           prodh	equ	0xFF4
  7696                           prodl	equ	0xFF3
  7697                           intcon	equ	0xFF2
  7698                           intcon2	equ	0xFF1
  7699                           intcon3	equ	0xFF0
  7700                           postinc0	equ	0xFEE
  7701                           fsr0h	equ	0xFEA
  7702                           fsr0l	equ	0xFE9
  7703                           wreg	equ	0xFE8
  7704                           postdec1	equ	0xFE5
  7705                           fsr1h	equ	0xFE2
  7706                           fsr1l	equ	0xFE1
  7707                           bsr	equ	0xFE0
  7708                           indf2	equ	0xFDF
  7709                           fsr2h	equ	0xFDA
  7710                           fsr2l	equ	0xFD9
  7711                           status	equ	0xFD8
  7712                           
  7713 ;; *************** function _CANreceiveMessage *****************
  7714 ;; Defined at:
  7715 ;;		line 528 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  msg             2    0[COMRAM] PTR struct .
  7718 ;;		 -> msg(15), 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  tamp            1   11[COMRAM] unsigned char 
  7721 ;;  error           1   10[COMRAM] unsigned char 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      unsigned char 
  7724 ;; Registers used:
  7725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7731 ;;      Params:         2       0       0       0
  7732 ;;      Locals:         2       0       0       0
  7733 ;;      Temps:          8       0       0       0
  7734 ;;      Totals:        12       0       0       0
  7735 ;;Total ram usage:       12 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    2
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_ISR_Bassa
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text18
  7746  0013DA                     __ptext18:
  7747                           	opt stack 0
  7748  0013DA                     _CANreceiveMessage:
  7749                           	opt stack 24
  7750                           
  7751                           ;inc\CANlib.h: 530: BYTE tamp;
  7752                           ;inc\CANlib.h: 531: BYTE error = 0;
  7753                           
  7754                           ;incstack = 0
  7755  0013DA  0E00               	movlw	0
  7756  0013DC  6E0B               	movwf	CANreceiveMessage@error,c
  7757                           
  7758                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7759  0013DE  BE74               	btfsc	3956,7,c	;volatile
  7760                           
  7761                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7762  0013E0  800B               	bsf	CANreceiveMessage@error,0,c
  7763                           
  7764                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7765  0013E2  BC74               	btfsc	3956,6,c	;volatile
  7766                           
  7767                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7768  0013E4  820B               	bsf	CANreceiveMessage@error,1,c
  7769                           
  7770                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7771  0013E6  010F               	movlb	15	; () banked
  7772  0013E8  AF50               	btfss	80,7,b	;volatile
  7773  0013EA  D143               	goto	i1l430
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;inc\CANlib.h: 541: {
  7777                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7778  0013EC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7779  0013F0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7780  0013F4  6ADE               	clrf	postinc2,c
  7781  0013F6  6ADE               	clrf	postinc2,c
  7782  0013F8  6ADE               	clrf	postinc2,c
  7783  0013FA  6ADD               	clrf	postdec2,c
  7784                           
  7785                           ; BSR set to: 15
  7786                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7787  0013FC  EE20 F004          	lfsr	2,4
  7788  001400  5001               	movf	CANreceiveMessage@msg,w,c
  7789  001402  26D9               	addwf	fsr2l,f,c
  7790  001404  5002               	movf	CANreceiveMessage@msg+1,w,c
  7791  001406  22DA               	addwfc	fsr2h,f,c
  7792  001408  CF56 FFDF          	movff	3926,indf2	;volatile
  7793                           
  7794                           ; BSR set to: 15
  7795                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7796  00140C  EE20 F005          	lfsr	2,5
  7797  001410  5001               	movf	CANreceiveMessage@msg,w,c
  7798  001412  26D9               	addwf	fsr2l,f,c
  7799  001414  5002               	movf	CANreceiveMessage@msg+1,w,c
  7800  001416  22DA               	addwfc	fsr2h,f,c
  7801  001418  CF57 FFDF          	movff	3927,indf2	;volatile
  7802                           
  7803                           ; BSR set to: 15
  7804                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7805  00141C  EE20 F006          	lfsr	2,6
  7806  001420  5001               	movf	CANreceiveMessage@msg,w,c
  7807  001422  26D9               	addwf	fsr2l,f,c
  7808  001424  5002               	movf	CANreceiveMessage@msg+1,w,c
  7809  001426  22DA               	addwfc	fsr2h,f,c
  7810  001428  CF58 FFDF          	movff	3928,indf2	;volatile
  7811                           
  7812                           ; BSR set to: 15
  7813                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7814  00142C  EE20 F007          	lfsr	2,7
  7815  001430  5001               	movf	CANreceiveMessage@msg,w,c
  7816  001432  26D9               	addwf	fsr2l,f,c
  7817  001434  5002               	movf	CANreceiveMessage@msg+1,w,c
  7818  001436  22DA               	addwfc	fsr2h,f,c
  7819  001438  CF59 FFDF          	movff	3929,indf2	;volatile
  7820                           
  7821                           ; BSR set to: 15
  7822                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7823  00143C  EE20 F008          	lfsr	2,8
  7824  001440  5001               	movf	CANreceiveMessage@msg,w,c
  7825  001442  26D9               	addwf	fsr2l,f,c
  7826  001444  5002               	movf	CANreceiveMessage@msg+1,w,c
  7827  001446  22DA               	addwfc	fsr2h,f,c
  7828  001448  CF5A FFDF          	movff	3930,indf2	;volatile
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7832  00144C  EE20 F009          	lfsr	2,9
  7833  001450  5001               	movf	CANreceiveMessage@msg,w,c
  7834  001452  26D9               	addwf	fsr2l,f,c
  7835  001454  5002               	movf	CANreceiveMessage@msg+1,w,c
  7836  001456  22DA               	addwfc	fsr2h,f,c
  7837  001458  CF5B FFDF          	movff	3931,indf2	;volatile
  7838                           
  7839                           ; BSR set to: 15
  7840                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7841  00145C  EE20 F00A          	lfsr	2,10
  7842  001460  5001               	movf	CANreceiveMessage@msg,w,c
  7843  001462  26D9               	addwf	fsr2l,f,c
  7844  001464  5002               	movf	CANreceiveMessage@msg+1,w,c
  7845  001466  22DA               	addwfc	fsr2h,f,c
  7846  001468  CF5C FFDF          	movff	3932,indf2	;volatile
  7847                           
  7848                           ; BSR set to: 15
  7849                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7850  00146C  EE20 F00B          	lfsr	2,11
  7851  001470  5001               	movf	CANreceiveMessage@msg,w,c
  7852  001472  26D9               	addwf	fsr2l,f,c
  7853  001474  5002               	movf	CANreceiveMessage@msg+1,w,c
  7854  001476  22DA               	addwfc	fsr2h,f,c
  7855  001478  CF5D FFDF          	movff	3933,indf2	;volatile
  7856                           
  7857                           ; BSR set to: 15
  7858                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7859  00147C  EE20 F00E          	lfsr	2,14
  7860  001480  5001               	movf	CANreceiveMessage@msg,w,c
  7861  001482  26D9               	addwf	fsr2l,f,c
  7862  001484  5002               	movf	CANreceiveMessage@msg+1,w,c
  7863  001486  22DA               	addwfc	fsr2h,f,c
  7864  001488  010F               	movlb	15	; () banked
  7865  00148A  AD55               	btfss	85,6,b	;volatile
  7866  00148C  D002               	goto	i1u394_20
  7867  00148E  0E01               	movlw	1
  7868  001490  D001               	goto	i1u394_26
  7869  001492                     i1u394_20:
  7870  001492  0E00               	movlw	0
  7871  001494                     i1u394_26:
  7872  001494  6EDF               	movwf	indf2,c
  7873                           
  7874                           ; BSR set to: 15
  7875                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7876  001496  EE20 F00D          	lfsr	2,13
  7877  00149A  5001               	movf	CANreceiveMessage@msg,w,c
  7878  00149C  26D9               	addwf	fsr2l,f,c
  7879  00149E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7880  0014A0  22DA               	addwfc	fsr2h,f,c
  7881  0014A2  010F               	movlb	15	; () banked
  7882  0014A4  5155               	movf	85,w,b	;volatile
  7883  0014A6  0B0F               	andlw	15
  7884  0014A8  6EDF               	movwf	indf2,c
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7888  0014AA  EE20 F00C          	lfsr	2,12
  7889  0014AE  5001               	movf	CANreceiveMessage@msg,w,c
  7890  0014B0  26D9               	addwf	fsr2l,f,c
  7891  0014B2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7892  0014B4  22DA               	addwfc	fsr2h,f,c
  7893  0014B6  010F               	movlb	15	; () banked
  7894  0014B8  A752               	btfss	82,3,b	;volatile
  7895  0014BA  D002               	goto	i1u395_20
  7896  0014BC  0E01               	movlw	1
  7897  0014BE  D001               	goto	i1u395_26
  7898  0014C0                     i1u395_20:
  7899  0014C0  0E00               	movlw	0
  7900  0014C2                     i1u395_26:
  7901  0014C2  6EDF               	movwf	indf2,c
  7902                           
  7903                           ; BSR set to: 15
  7904                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7905  0014C4  010F               	movlb	15	; () banked
  7906  0014C6  B752               	btfsc	82,3,b	;volatile
  7907  0014C8  D044               	goto	i1l3630
  7908                           
  7909                           ; BSR set to: 15
  7910                           ;inc\CANlib.h: 559: {
  7911                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7912  0014CA  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7913  0014CE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7914  0014D0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7915  0014D2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7916  0014D4  0E03               	movlw	3
  7917  0014D6                     i1u397_25:
  7918  0014D6  90D8               	bcf	status,0,c
  7919  0014D8  3603               	rlcf	??_CANreceiveMessage,f,c
  7920  0014DA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7921  0014DC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7922  0014DE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7923  0014E0  2EE8               	decfsz	wreg,f,c
  7924  0014E2  D7F9               	goto	i1u397_25
  7925  0014E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7926  0014E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7927  0014EC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7928  0014F0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7929  0014F4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7930  0014F8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7931                           
  7932                           ; BSR set to: 15
  7933                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7934  0014FC  010F               	movlb	15	; () banked
  7935  0014FE  3952               	swapf	82,w,b	;volatile
  7936  001500  42E8               	rrncf	wreg,f,c
  7937  001502  0B07               	andlw	7
  7938  001504  0B07               	andlw	7
  7939  001506  6E0C               	movwf	CANreceiveMessage@tamp,c
  7940                           
  7941                           ; BSR set to: 15
  7942                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7943  001508  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7944  00150C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7945  001510  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7946  001514  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7947  001518  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7948  00151C  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7949  001520  500C               	movf	CANreceiveMessage@tamp,w,c
  7950  001522  2403               	addwf	??_CANreceiveMessage,w,c
  7951  001524  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7952  001526  0E00               	movlw	0
  7953  001528  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7954  00152A  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7955  00152C  0E00               	movlw	0
  7956  00152E  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7957  001530  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7958  001532  0E00               	movlw	0
  7959  001534  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7960  001536  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7961  001538  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7962  00153C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7963  001540  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7964  001544  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7965  001548  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7966  00154C  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7967                           
  7968                           ;inc\CANlib.h: 563: }
  7969  001550  D08D               	goto	i1l3656
  7970  001552                     i1l3630:
  7971                           
  7972                           ; BSR set to: 15
  7973                           ;inc\CANlib.h: 564: else
  7974                           ;inc\CANlib.h: 565: {
  7975                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7976  001552  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7977  001556  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7978  001558  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7979  00155A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7980  00155C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7981  001560  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7982  001564  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7983  001568  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7984  00156C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7985  001570  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7986                           
  7987                           ; BSR set to: 15
  7988                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7989  001574  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7990  001578  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7991  00157A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7992  00157C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7993  00157E  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7994  001582  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7995  001586  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7996  00158A  6A03               	clrf	??_CANreceiveMessage,c
  7997  00158C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7998  001590  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7999  001594  5003               	movf	??_CANreceiveMessage,w,c
  8000  001596  26DE               	addwf	postinc2,f,c
  8001  001598  5004               	movf	??_CANreceiveMessage+1,w,c
  8002  00159A  22DE               	addwfc	postinc2,f,c
  8003  00159C  5005               	movf	??_CANreceiveMessage+2,w,c
  8004  00159E  22DE               	addwfc	postinc2,f,c
  8005  0015A0  5006               	movf	??_CANreceiveMessage+3,w,c
  8006  0015A2  22DE               	addwfc	postinc2,f,c
  8007                           
  8008                           ; BSR set to: 15
  8009                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8010  0015A4  010F               	movlb	15	; () banked
  8011  0015A6  A152               	btfss	82,0,b	;volatile
  8012  0015A8  D00C               	goto	i1l3638
  8013                           
  8014                           ; BSR set to: 15
  8015                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  8016  0015AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8017  0015AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8018  0015B2  0E00               	movlw	0
  8019  0015B4  12DE               	iorwf	postinc2,f,c
  8020  0015B6  0E00               	movlw	0
  8021  0015B8  12DE               	iorwf	postinc2,f,c
  8022  0015BA  0E01               	movlw	1
  8023  0015BC  12DE               	iorwf	postinc2,f,c
  8024  0015BE  0E00               	movlw	0
  8025  0015C0  12DE               	iorwf	postinc2,f,c
  8026  0015C2                     i1l3638:
  8027                           
  8028                           ; BSR set to: 15
  8029                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8030  0015C2  010F               	movlb	15	; () banked
  8031  0015C4  A352               	btfss	82,1,b	;volatile
  8032  0015C6  D00C               	goto	i1l3642
  8033                           
  8034                           ; BSR set to: 15
  8035                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  8036  0015C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8037  0015CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8038  0015D0  0E00               	movlw	0
  8039  0015D2  12DE               	iorwf	postinc2,f,c
  8040  0015D4  0E00               	movlw	0
  8041  0015D6  12DE               	iorwf	postinc2,f,c
  8042  0015D8  0E02               	movlw	2
  8043  0015DA  12DE               	iorwf	postinc2,f,c
  8044  0015DC  0E00               	movlw	0
  8045  0015DE  12DE               	iorwf	postinc2,f,c
  8046  0015E0                     i1l3642:
  8047                           
  8048                           ; BSR set to: 15
  8049                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8050  0015E0  010F               	movlb	15	; () banked
  8051  0015E2  AB52               	btfss	82,5,b	;volatile
  8052  0015E4  D00C               	goto	i1l3646
  8053                           
  8054                           ; BSR set to: 15
  8055                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8056  0015E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8057  0015EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8058  0015EE  0E00               	movlw	0
  8059  0015F0  12DE               	iorwf	postinc2,f,c
  8060  0015F2  0E00               	movlw	0
  8061  0015F4  12DE               	iorwf	postinc2,f,c
  8062  0015F6  0E04               	movlw	4
  8063  0015F8  12DE               	iorwf	postinc2,f,c
  8064  0015FA  0E00               	movlw	0
  8065  0015FC  12DE               	iorwf	postinc2,f,c
  8066  0015FE                     i1l3646:
  8067                           
  8068                           ; BSR set to: 15
  8069                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8070  0015FE  010F               	movlb	15	; () banked
  8071  001600  AD52               	btfss	82,6,b	;volatile
  8072  001602  D00C               	goto	i1l3650
  8073                           
  8074                           ; BSR set to: 15
  8075                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8076  001604  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8077  001608  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8078  00160C  0E00               	movlw	0
  8079  00160E  12DE               	iorwf	postinc2,f,c
  8080  001610  0E00               	movlw	0
  8081  001612  12DE               	iorwf	postinc2,f,c
  8082  001614  0E08               	movlw	8
  8083  001616  12DE               	iorwf	postinc2,f,c
  8084  001618  0E00               	movlw	0
  8085  00161A  12DE               	iorwf	postinc2,f,c
  8086  00161C                     i1l3650:
  8087                           
  8088                           ; BSR set to: 15
  8089                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8090  00161C  010F               	movlb	15	; () banked
  8091  00161E  AF52               	btfss	82,7,b	;volatile
  8092  001620  D00C               	goto	i1l3654
  8093                           
  8094                           ; BSR set to: 15
  8095                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8096  001622  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8097  001626  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8098  00162A  0E00               	movlw	0
  8099  00162C  12DE               	iorwf	postinc2,f,c
  8100  00162E  0E00               	movlw	0
  8101  001630  12DE               	iorwf	postinc2,f,c
  8102  001632  0E10               	movlw	16
  8103  001634  12DE               	iorwf	postinc2,f,c
  8104  001636  0E00               	movlw	0
  8105  001638  12DE               	iorwf	postinc2,f,c
  8106  00163A                     i1l3654:
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8110  00163A  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8111  00163E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8112  001640  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8113  001642  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8114  001644  0E15               	movlw	21
  8115  001646                     i1u403_25:
  8116  001646  90D8               	bcf	status,0,c
  8117  001648  3603               	rlcf	??_CANreceiveMessage,f,c
  8118  00164A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8119  00164C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8120  00164E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8121  001650  2EE8               	decfsz	wreg,f,c
  8122  001652  D7F9               	goto	i1u403_25
  8123  001654  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8124  001658  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8125  00165C  5003               	movf	??_CANreceiveMessage,w,c
  8126  00165E  12DE               	iorwf	postinc2,f,c
  8127  001660  5004               	movf	??_CANreceiveMessage+1,w,c
  8128  001662  12DE               	iorwf	postinc2,f,c
  8129  001664  5005               	movf	??_CANreceiveMessage+2,w,c
  8130  001666  12DE               	iorwf	postinc2,f,c
  8131  001668  5006               	movf	??_CANreceiveMessage+3,w,c
  8132  00166A  12DE               	iorwf	postinc2,f,c
  8133  00166C                     i1l3656:
  8134                           
  8135                           ; BSR set to: 15
  8136                           ;inc\CANlib.h: 581: }
  8137                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8138  00166C  010F               	movlb	15	; () banked
  8139  00166E  9F50               	bcf	80,7,b	;volatile
  8140                           
  8141                           ; BSR set to: 15
  8142                           ;inc\CANlib.h: 584: return (error);
  8143                           ;	Return value of _CANreceiveMessage is never used
  8144  001670  0012               	return	
  8145  001672                     i1l430:
  8146                           
  8147                           ; BSR set to: 15
  8148                           ;inc\CANlib.h: 585: }
  8149                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8150  001672  AE60               	btfss	3936,7,c	;volatile
  8151  001674  0012               	return	
  8152                           
  8153                           ; BSR set to: 15
  8154                           ;inc\CANlib.h: 588: {
  8155                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8156  001676  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8157  00167A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8158  00167E  6ADE               	clrf	postinc2,c
  8159  001680  6ADE               	clrf	postinc2,c
  8160  001682  6ADE               	clrf	postinc2,c
  8161  001684  6ADD               	clrf	postdec2,c
  8162                           
  8163                           ; BSR set to: 15
  8164                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8165  001686  EE20 F004          	lfsr	2,4
  8166  00168A  5001               	movf	CANreceiveMessage@msg,w,c
  8167  00168C  26D9               	addwf	fsr2l,f,c
  8168  00168E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8169  001690  22DA               	addwfc	fsr2h,f,c
  8170  001692  CF66 FFDF          	movff	3942,indf2	;volatile
  8171                           
  8172                           ; BSR set to: 15
  8173                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8174  001696  EE20 F005          	lfsr	2,5
  8175  00169A  5001               	movf	CANreceiveMessage@msg,w,c
  8176  00169C  26D9               	addwf	fsr2l,f,c
  8177  00169E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8178  0016A0  22DA               	addwfc	fsr2h,f,c
  8179  0016A2  CF67 FFDF          	movff	3943,indf2	;volatile
  8180                           
  8181                           ; BSR set to: 15
  8182                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8183  0016A6  EE20 F006          	lfsr	2,6
  8184  0016AA  5001               	movf	CANreceiveMessage@msg,w,c
  8185  0016AC  26D9               	addwf	fsr2l,f,c
  8186  0016AE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8187  0016B0  22DA               	addwfc	fsr2h,f,c
  8188  0016B2  CF68 FFDF          	movff	3944,indf2	;volatile
  8189                           
  8190                           ; BSR set to: 15
  8191                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8192  0016B6  EE20 F007          	lfsr	2,7
  8193  0016BA  5001               	movf	CANreceiveMessage@msg,w,c
  8194  0016BC  26D9               	addwf	fsr2l,f,c
  8195  0016BE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8196  0016C0  22DA               	addwfc	fsr2h,f,c
  8197  0016C2  CF69 FFDF          	movff	3945,indf2	;volatile
  8198                           
  8199                           ; BSR set to: 15
  8200                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8201  0016C6  EE20 F008          	lfsr	2,8
  8202  0016CA  5001               	movf	CANreceiveMessage@msg,w,c
  8203  0016CC  26D9               	addwf	fsr2l,f,c
  8204  0016CE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8205  0016D0  22DA               	addwfc	fsr2h,f,c
  8206  0016D2  CF6A FFDF          	movff	3946,indf2	;volatile
  8207                           
  8208                           ; BSR set to: 15
  8209                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8210  0016D6  EE20 F009          	lfsr	2,9
  8211  0016DA  5001               	movf	CANreceiveMessage@msg,w,c
  8212  0016DC  26D9               	addwf	fsr2l,f,c
  8213  0016DE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8214  0016E0  22DA               	addwfc	fsr2h,f,c
  8215  0016E2  CF6B FFDF          	movff	3947,indf2	;volatile
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8219  0016E6  EE20 F00A          	lfsr	2,10
  8220  0016EA  5001               	movf	CANreceiveMessage@msg,w,c
  8221  0016EC  26D9               	addwf	fsr2l,f,c
  8222  0016EE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8223  0016F0  22DA               	addwfc	fsr2h,f,c
  8224  0016F2  CF6C FFDF          	movff	3948,indf2	;volatile
  8225                           
  8226                           ; BSR set to: 15
  8227                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8228  0016F6  EE20 F00B          	lfsr	2,11
  8229  0016FA  5001               	movf	CANreceiveMessage@msg,w,c
  8230  0016FC  26D9               	addwf	fsr2l,f,c
  8231  0016FE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8232  001700  22DA               	addwfc	fsr2h,f,c
  8233  001702  CF6D FFDF          	movff	3949,indf2	;volatile
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8237  001706  EE20 F00E          	lfsr	2,14
  8238  00170A  5001               	movf	CANreceiveMessage@msg,w,c
  8239  00170C  26D9               	addwf	fsr2l,f,c
  8240  00170E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8241  001710  22DA               	addwfc	fsr2h,f,c
  8242  001712  AC65               	btfss	3941,6,c	;volatile
  8243  001714  D002               	goto	i1u405_20
  8244  001716  0E01               	movlw	1
  8245  001718  D001               	goto	i1u405_26
  8246  00171A                     i1u405_20:
  8247  00171A  0E00               	movlw	0
  8248  00171C                     i1u405_26:
  8249  00171C  6EDF               	movwf	indf2,c
  8250                           
  8251                           ; BSR set to: 15
  8252                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8253  00171E  EE20 F00D          	lfsr	2,13
  8254  001722  5001               	movf	CANreceiveMessage@msg,w,c
  8255  001724  26D9               	addwf	fsr2l,f,c
  8256  001726  5002               	movf	CANreceiveMessage@msg+1,w,c
  8257  001728  22DA               	addwfc	fsr2h,f,c
  8258  00172A  5065               	movf	3941,w,c	;volatile
  8259  00172C  0B0F               	andlw	15
  8260  00172E  6EDF               	movwf	indf2,c
  8261                           
  8262                           ; BSR set to: 15
  8263                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8264  001730  EE20 F00C          	lfsr	2,12
  8265  001734  5001               	movf	CANreceiveMessage@msg,w,c
  8266  001736  26D9               	addwf	fsr2l,f,c
  8267  001738  5002               	movf	CANreceiveMessage@msg+1,w,c
  8268  00173A  22DA               	addwfc	fsr2h,f,c
  8269  00173C  A662               	btfss	3938,3,c	;volatile
  8270  00173E  D002               	goto	i1u406_20
  8271  001740  0E01               	movlw	1
  8272  001742  D001               	goto	i1u406_26
  8273  001744                     i1u406_20:
  8274  001744  0E00               	movlw	0
  8275  001746                     i1u406_26:
  8276  001746  6EDF               	movwf	indf2,c
  8277                           
  8278                           ; BSR set to: 15
  8279                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8280  001748  B662               	btfsc	3938,3,c	;volatile
  8281  00174A  D043               	goto	i1l3692
  8282                           
  8283                           ; BSR set to: 15
  8284                           ;inc\CANlib.h: 606: {
  8285                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8286  00174C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8287  001750  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8288  001752  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8289  001754  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8290  001756  0E03               	movlw	3
  8291  001758                     i1u408_25:
  8292  001758  90D8               	bcf	status,0,c
  8293  00175A  3603               	rlcf	??_CANreceiveMessage,f,c
  8294  00175C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8295  00175E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8296  001760  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8297  001762  2EE8               	decfsz	wreg,f,c
  8298  001764  D7F9               	goto	i1u408_25
  8299  001766  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8300  00176A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8301  00176E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8302  001772  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8303  001776  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8304  00177A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8305                           
  8306                           ; BSR set to: 15
  8307                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8308  00177E  3862               	swapf	3938,w,c	;volatile
  8309  001780  42E8               	rrncf	wreg,f,c
  8310  001782  0B07               	andlw	7
  8311  001784  0B07               	andlw	7
  8312  001786  6E0C               	movwf	CANreceiveMessage@tamp,c
  8313                           
  8314                           ; BSR set to: 15
  8315                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8316  001788  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8317  00178C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8318  001790  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8319  001794  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8320  001798  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8321  00179C  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8322  0017A0  500C               	movf	CANreceiveMessage@tamp,w,c
  8323  0017A2  2403               	addwf	??_CANreceiveMessage,w,c
  8324  0017A4  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8325  0017A6  0E00               	movlw	0
  8326  0017A8  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8327  0017AA  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8328  0017AC  0E00               	movlw	0
  8329  0017AE  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8330  0017B0  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8331  0017B2  0E00               	movlw	0
  8332  0017B4  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8333  0017B6  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8334  0017B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8335  0017BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8336  0017C0  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8337  0017C4  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8338  0017C8  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8339  0017CC  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8340                           
  8341                           ;inc\CANlib.h: 610: }
  8342  0017D0  D088               	goto	i1l3718
  8343  0017D2                     i1l3692:
  8344                           
  8345                           ; BSR set to: 15
  8346                           ;inc\CANlib.h: 611: else
  8347                           ;inc\CANlib.h: 612: {
  8348                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8349  0017D2  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8350  0017D6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8351  0017D8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8352  0017DA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8353  0017DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8354  0017E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8355  0017E4  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8356  0017E8  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8357  0017EC  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8358  0017F0  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8359                           
  8360                           ; BSR set to: 15
  8361                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8362  0017F4  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8363  0017F8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8364  0017FA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8365  0017FC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8366  0017FE  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8367  001802  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8368  001806  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8369  00180A  6A03               	clrf	??_CANreceiveMessage,c
  8370  00180C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8371  001810  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8372  001814  5003               	movf	??_CANreceiveMessage,w,c
  8373  001816  26DE               	addwf	postinc2,f,c
  8374  001818  5004               	movf	??_CANreceiveMessage+1,w,c
  8375  00181A  22DE               	addwfc	postinc2,f,c
  8376  00181C  5005               	movf	??_CANreceiveMessage+2,w,c
  8377  00181E  22DE               	addwfc	postinc2,f,c
  8378  001820  5006               	movf	??_CANreceiveMessage+3,w,c
  8379  001822  22DE               	addwfc	postinc2,f,c
  8380                           
  8381                           ; BSR set to: 15
  8382                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8383  001824  A062               	btfss	3938,0,c	;volatile
  8384  001826  D00C               	goto	i1l3700
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8388  001828  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8389  00182C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8390  001830  0E00               	movlw	0
  8391  001832  12DE               	iorwf	postinc2,f,c
  8392  001834  0E00               	movlw	0
  8393  001836  12DE               	iorwf	postinc2,f,c
  8394  001838  0E01               	movlw	1
  8395  00183A  12DE               	iorwf	postinc2,f,c
  8396  00183C  0E00               	movlw	0
  8397  00183E  12DE               	iorwf	postinc2,f,c
  8398  001840                     i1l3700:
  8399                           
  8400                           ; BSR set to: 15
  8401                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8402  001840  A262               	btfss	3938,1,c	;volatile
  8403  001842  D00C               	goto	i1l3704
  8404                           
  8405                           ; BSR set to: 15
  8406                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8407  001844  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8408  001848  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8409  00184C  0E00               	movlw	0
  8410  00184E  12DE               	iorwf	postinc2,f,c
  8411  001850  0E00               	movlw	0
  8412  001852  12DE               	iorwf	postinc2,f,c
  8413  001854  0E02               	movlw	2
  8414  001856  12DE               	iorwf	postinc2,f,c
  8415  001858  0E00               	movlw	0
  8416  00185A  12DE               	iorwf	postinc2,f,c
  8417  00185C                     i1l3704:
  8418                           
  8419                           ; BSR set to: 15
  8420                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8421  00185C  AA62               	btfss	3938,5,c	;volatile
  8422  00185E  D00C               	goto	i1l3708
  8423                           
  8424                           ; BSR set to: 15
  8425                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8426  001860  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8427  001864  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8428  001868  0E00               	movlw	0
  8429  00186A  12DE               	iorwf	postinc2,f,c
  8430  00186C  0E00               	movlw	0
  8431  00186E  12DE               	iorwf	postinc2,f,c
  8432  001870  0E04               	movlw	4
  8433  001872  12DE               	iorwf	postinc2,f,c
  8434  001874  0E00               	movlw	0
  8435  001876  12DE               	iorwf	postinc2,f,c
  8436  001878                     i1l3708:
  8437                           
  8438                           ; BSR set to: 15
  8439                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8440  001878  AC62               	btfss	3938,6,c	;volatile
  8441  00187A  D00C               	goto	i1l3712
  8442                           
  8443                           ; BSR set to: 15
  8444                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8445  00187C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8446  001880  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8447  001884  0E00               	movlw	0
  8448  001886  12DE               	iorwf	postinc2,f,c
  8449  001888  0E00               	movlw	0
  8450  00188A  12DE               	iorwf	postinc2,f,c
  8451  00188C  0E08               	movlw	8
  8452  00188E  12DE               	iorwf	postinc2,f,c
  8453  001890  0E00               	movlw	0
  8454  001892  12DE               	iorwf	postinc2,f,c
  8455  001894                     i1l3712:
  8456                           
  8457                           ; BSR set to: 15
  8458                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8459  001894  AE62               	btfss	3938,7,c	;volatile
  8460  001896  D00C               	goto	i1l3716
  8461                           
  8462                           ; BSR set to: 15
  8463                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8464  001898  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8465  00189C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8466  0018A0  0E00               	movlw	0
  8467  0018A2  12DE               	iorwf	postinc2,f,c
  8468  0018A4  0E00               	movlw	0
  8469  0018A6  12DE               	iorwf	postinc2,f,c
  8470  0018A8  0E10               	movlw	16
  8471  0018AA  12DE               	iorwf	postinc2,f,c
  8472  0018AC  0E00               	movlw	0
  8473  0018AE  12DE               	iorwf	postinc2,f,c
  8474  0018B0                     i1l3716:
  8475                           
  8476                           ; BSR set to: 15
  8477                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8478  0018B0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8479  0018B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8480  0018B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8481  0018B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8482  0018BA  0E15               	movlw	21
  8483  0018BC                     i1u414_25:
  8484  0018BC  90D8               	bcf	status,0,c
  8485  0018BE  3603               	rlcf	??_CANreceiveMessage,f,c
  8486  0018C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8487  0018C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8488  0018C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8489  0018C6  2EE8               	decfsz	wreg,f,c
  8490  0018C8  D7F9               	goto	i1u414_25
  8491  0018CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8492  0018CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8493  0018D2  5003               	movf	??_CANreceiveMessage,w,c
  8494  0018D4  12DE               	iorwf	postinc2,f,c
  8495  0018D6  5004               	movf	??_CANreceiveMessage+1,w,c
  8496  0018D8  12DE               	iorwf	postinc2,f,c
  8497  0018DA  5005               	movf	??_CANreceiveMessage+2,w,c
  8498  0018DC  12DE               	iorwf	postinc2,f,c
  8499  0018DE  5006               	movf	??_CANreceiveMessage+3,w,c
  8500  0018E0  12DE               	iorwf	postinc2,f,c
  8501  0018E2                     i1l3718:
  8502                           
  8503                           ; BSR set to: 15
  8504                           ;inc\CANlib.h: 629: }
  8505                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8506  0018E2  9E60               	bcf	3936,7,c	;volatile
  8507                           
  8508                           ; BSR set to: 15
  8509                           ;inc\CANlib.h: 632: return (error);
  8510                           ;	Return value of _CANreceiveMessage is never used
  8511  0018E4  0012               	return	
  8512  0018E6                     __end_of_CANreceiveMessage:
  8513                           	opt stack 0
  8514                           pclatu	equ	0xFFB
  8515                           pclath	equ	0xFFA
  8516                           tblptru	equ	0xFF8
  8517                           tblptrh	equ	0xFF7
  8518                           tblptrl	equ	0xFF6
  8519                           tablat	equ	0xFF5
  8520                           prodh	equ	0xFF4
  8521                           prodl	equ	0xFF3
  8522                           intcon	equ	0xFF2
  8523                           intcon2	equ	0xFF1
  8524                           intcon3	equ	0xFF0
  8525                           postinc0	equ	0xFEE
  8526                           fsr0h	equ	0xFEA
  8527                           fsr0l	equ	0xFE9
  8528                           wreg	equ	0xFE8
  8529                           postdec1	equ	0xFE5
  8530                           fsr1h	equ	0xFE2
  8531                           fsr1l	equ	0xFE1
  8532                           bsr	equ	0xFE0
  8533                           indf2	equ	0xFDF
  8534                           postinc2	equ	0xFDE
  8535                           postdec2	equ	0xFDD
  8536                           fsr2h	equ	0xFDA
  8537                           fsr2l	equ	0xFD9
  8538                           status	equ	0xFD8
  8539                           
  8540 ;; *************** function _CANisRxReady *****************
  8541 ;; Defined at:
  8542 ;;		line 1163 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;		None
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;		None
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      unsigned char 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8556 ;;      Params:         0       0       0       0
  8557 ;;      Locals:         1       0       0       0
  8558 ;;      Temps:          0       0       0       0
  8559 ;;      Totals:         1       0       0       0
  8560 ;;Total ram usage:        1 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    2
  8563 ;; This function calls:
  8564 ;;		Nothing
  8565 ;; This function is called by:
  8566 ;;		_ISR_Bassa
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text19
  8571  002A3E                     __ptext19:
  8572                           	opt stack 0
  8573  002A3E                     _CANisRxReady:
  8574                           	opt stack 24
  8575                           
  8576                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8577                           
  8578                           ; BSR set to: 15
  8579                           ;incstack = 0
  8580  002A3E  0E01               	movlw	1
  8581  002A40  6E01               	movwf	_CANisRxReady$3284,c
  8582  002A42  BE60               	btfsc	3936,7,c	;volatile
  8583  002A44  D005               	goto	i1l581
  8584  002A46  010F               	movlb	15	; () banked
  8585  002A48  BF50               	btfsc	80,7,b	;volatile
  8586  002A4A  D002               	goto	i1l581
  8587                           
  8588                           ; BSR set to: 15
  8589  002A4C  0E00               	movlw	0
  8590  002A4E  6E01               	movwf	_CANisRxReady$3284,c
  8591  002A50                     i1l581:
  8592  002A50  5001               	movf	_CANisRxReady$3284,w,c
  8593  002A52  0012               	return	
  8594  002A54                     __end_of_CANisRxReady:
  8595                           	opt stack 0
  8596                           pclatu	equ	0xFFB
  8597                           pclath	equ	0xFFA
  8598                           tblptru	equ	0xFF8
  8599                           tblptrh	equ	0xFF7
  8600                           tblptrl	equ	0xFF6
  8601                           tablat	equ	0xFF5
  8602                           prodh	equ	0xFF4
  8603                           prodl	equ	0xFF3
  8604                           intcon	equ	0xFF2
  8605                           intcon2	equ	0xFF1
  8606                           intcon3	equ	0xFF0
  8607                           postinc0	equ	0xFEE
  8608                           fsr0h	equ	0xFEA
  8609                           fsr0l	equ	0xFE9
  8610                           wreg	equ	0xFE8
  8611                           postdec1	equ	0xFE5
  8612                           fsr1h	equ	0xFE2
  8613                           fsr1l	equ	0xFE1
  8614                           bsr	equ	0xFE0
  8615                           indf2	equ	0xFDF
  8616                           postinc2	equ	0xFDE
  8617                           postdec2	equ	0xFDD
  8618                           fsr2h	equ	0xFDA
  8619                           fsr2l	equ	0xFD9
  8620                           status	equ	0xFD8
  8621                           
  8622 ;; *************** function _ISR_Alta *****************
  8623 ;; Defined at:
  8624 ;;		line 147 in file "ABS_Code.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;		None
  8627 ;; Auto vars:     Size  Location     Type
  8628 ;;		None
  8629 ;; Return value:  Size  Location     Type
  8630 ;;		None               void
  8631 ;; Registers used:
  8632 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8638 ;;      Params:         0       0       0       0
  8639 ;;      Locals:         0       0       0       0
  8640 ;;      Temps:          0      22       0       0
  8641 ;;      Totals:         0      22       0       0
  8642 ;;Total ram usage:       22 bytes
  8643 ;; Hardware stack levels used:    1
  8644 ;; Hardware stack levels required when called:    1
  8645 ;; This function calls:
  8646 ;;		_WriteTimer0
  8647 ;;		___lwdiv
  8648 ;;		i2___awdiv
  8649 ;;		i2___wmul
  8650 ;; This function is called by:
  8651 ;;		Interrupt level 2
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	intcode
  8656  000008                     __pintcode:
  8657                           	opt stack 0
  8658  000008                     _ISR_Alta:
  8659                           	opt stack 24
  8660                           
  8661                           ;incstack = 0
  8662  000008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8663  00000A  CFFA F0BE          	movff	pclath,??_ISR_Alta+8
  8664  00000E  CFFB F0BF          	movff	pclatu,??_ISR_Alta+9
  8665  000012  ED42  F00E         	call	int_func,f	;refresh shadow registers
  8666                           pclatu	equ	0xFFB
  8667                           pclath	equ	0xFFA
  8668                           tblptru	equ	0xFF8
  8669                           tblptrh	equ	0xFF7
  8670                           tblptrl	equ	0xFF6
  8671                           tablat	equ	0xFF5
  8672                           prodh	equ	0xFF4
  8673                           prodl	equ	0xFF3
  8674                           intcon	equ	0xFF2
  8675                           intcon2	equ	0xFF1
  8676                           intcon3	equ	0xFF0
  8677                           postinc0	equ	0xFEE
  8678                           fsr0h	equ	0xFEA
  8679                           fsr0l	equ	0xFE9
  8680                           wreg	equ	0xFE8
  8681                           postdec1	equ	0xFE5
  8682                           fsr1h	equ	0xFE2
  8683                           fsr1l	equ	0xFE1
  8684                           bsr	equ	0xFE0
  8685                           indf2	equ	0xFDF
  8686                           postinc2	equ	0xFDE
  8687                           postdec2	equ	0xFDD
  8688                           fsr2h	equ	0xFDA
  8689                           fsr2l	equ	0xFD9
  8690                           status	equ	0xFD8
  8691                           
  8692                           	psect	intcode_body
  8693  001C84                     __pintcode_body:
  8694                           	opt stack 24
  8695  001C84                     int_func:
  8696                           	opt stack 24
  8697  001C84  0006               	pop		; remove dummy address from shadow register refresh
  8698  001C86  CFE9 F0C0          	movff	fsr0l,??_ISR_Alta+10
  8699  001C8A  CFEA F0C1          	movff	fsr0h,??_ISR_Alta+11
  8700  001C8E  CFE1 F0C2          	movff	fsr1l,??_ISR_Alta+12
  8701  001C92  CFE2 F0C3          	movff	fsr1h,??_ISR_Alta+13
  8702  001C96  CFD9 F0C4          	movff	fsr2l,??_ISR_Alta+14
  8703  001C9A  CFDA F0C5          	movff	fsr2h,??_ISR_Alta+15
  8704  001C9E  CFF3 F0C6          	movff	prodl,??_ISR_Alta+16
  8705  001CA2  CFF4 F0C7          	movff	prodh,??_ISR_Alta+17
  8706  001CA6  CFF6 F0C8          	movff	tblptrl,??_ISR_Alta+18
  8707  001CAA  CFF7 F0C9          	movff	tblptrh,??_ISR_Alta+19
  8708  001CAE  CFF8 F0CA          	movff	tblptru,??_ISR_Alta+20
  8709  001CB2  CFF5 F0CB          	movff	tablat,??_ISR_Alta+21
  8710                           
  8711                           ;ABS_Code.c: 149: if (INTCONbits.TMR0IF == 1) {
  8712  001CB6  A4F2               	btfss	intcon,2,c	;volatile
  8713  001CB8  D09D               	goto	i2l4514
  8714                           
  8715                           ;ABS_Code.c: 150: if (PORTCbits.RC0 == 1) {
  8716  001CBA  A082               	btfss	3970,0,c	;volatile
  8717  001CBC  D094               	goto	i2l4510
  8718                           
  8719                           ;ABS_Code.c: 151: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8720  001CBE  0E40               	movlw	64
  8721  001CC0  0100               	movlb	0	; () banked
  8722  001CC2  6FB6               	movwf	??_ISR_Alta& (0+255),b
  8723  001CC4  0E06               	movlw	6
  8724  001CC6  0100               	movlb	0	; () banked
  8725  001CC8  6FB7               	movwf	(??_ISR_Alta+1)& (0+255),b
  8726  001CCA  C03C  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8727  001CCE  6A1F               	clrf	i2___wmul@multiplier+1,c
  8728  001CD0  0E05               	movlw	5
  8729  001CD2  6E21               	movwf	i2___wmul@multiplicand+1,c
  8730  001CD4  0E78               	movlw	120
  8731  001CD6  6E20               	movwf	i2___wmul@multiplicand,c
  8732  001CD8  ECEF  F014         	call	i2___wmul	;wreg free
  8733  001CDC  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8734  001CE0  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8735  001CE4  0E00               	movlw	0
  8736  001CE6  6E27               	movwf	i2___awdiv@divisor+1,c
  8737  001CE8  0EB4               	movlw	180
  8738  001CEA  6E26               	movwf	i2___awdiv@divisor,c
  8739  001CEC  ECC1  F013         	call	i2___awdiv	;wreg free
  8740  001CF0  90D8               	bcf	status,0,c
  8741  001CF2  3624               	rlcf	?i2___awdiv,f,c
  8742  001CF4  3625               	rlcf	?i2___awdiv+1,f,c
  8743  001CF6  0100               	movlb	0	; () banked
  8744  001CF8  51B6               	movf	??_ISR_Alta& (0+255),w,b
  8745  001CFA  2624               	addwf	?i2___awdiv,f,c
  8746  001CFC  0100               	movlb	0	; () banked
  8747  001CFE  51B7               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8748  001D00  2225               	addwfc	?i2___awdiv+1,f,c
  8749  001D02  C024  F034         	movff	?i2___awdiv,_timer_on	;volatile
  8750  001D06  C025  F035         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8751  001D0A  0E00               	movlw	0
  8752  001D0C  BE35               	btfsc	_timer_on+1,7,c	;volatile
  8753  001D0E  0EFF               	movlw	-1
  8754  001D10  6E36               	movwf	_timer_on+2,c	;volatile
  8755  001D12  6E37               	movwf	_timer_on+3,c	;volatile
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;ABS_Code.c: 152: timer_off = 65536 - (40000 - timer_on);
  8759  001D14  C034  F0B6         	movff	_timer_on,??_ISR_Alta	;volatile
  8760  001D18  C035  F0B7         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8761  001D1C  C036  F0B8         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8762  001D20  C037  F0B9         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8763  001D24  0100               	movlb	0	; () banked
  8764  001D26  1FB6               	comf	??_ISR_Alta& (0+255),f,b
  8765  001D28  1FB7               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8766  001D2A  1FB8               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8767  001D2C  1FB9               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8768  001D2E  2BB6               	incf	??_ISR_Alta& (0+255),f,b
  8769  001D30  0E00               	movlw	0
  8770  001D32  23B7               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8771  001D34  23B8               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8772  001D36  23B9               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8773  001D38  0E40               	movlw	64
  8774  001D3A  0100               	movlb	0	; () banked
  8775  001D3C  25B6               	addwf	??_ISR_Alta& (0+255),w,b
  8776  001D3E  0100               	movlb	0	; () banked
  8777  001D40  6FBA               	movwf	(??_ISR_Alta+4)& (0+255),b
  8778  001D42  0E9C               	movlw	156
  8779  001D44  0100               	movlb	0	; () banked
  8780  001D46  21B7               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8781  001D48  0100               	movlb	0	; () banked
  8782  001D4A  6FBB               	movwf	(??_ISR_Alta+5)& (0+255),b
  8783  001D4C  0E00               	movlw	0
  8784  001D4E  0100               	movlb	0	; () banked
  8785  001D50  21B8               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8786  001D52  0100               	movlb	0	; () banked
  8787  001D54  6FBC               	movwf	(??_ISR_Alta+6)& (0+255),b
  8788  001D56  0E00               	movlw	0
  8789  001D58  0100               	movlb	0	; () banked
  8790  001D5A  21B9               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8791  001D5C  0100               	movlb	0	; () banked
  8792  001D5E  6FBD               	movwf	(??_ISR_Alta+7)& (0+255),b
  8793  001D60  0100               	movlb	0	; () banked
  8794  001D62  1FBA               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8795  001D64  1FBB               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8796  001D66  1FBC               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8797  001D68  1FBD               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8798  001D6A  2BBA               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8799  001D6C  0E00               	movlw	0
  8800  001D6E  23BB               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8801  001D70  23BC               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8802  001D72  23BD               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8803  001D74  0E00               	movlw	0
  8804  001D76  0100               	movlb	0	; () banked
  8805  001D78  25BA               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8806  001D7A  6E30               	movwf	_timer_off,c	;volatile
  8807  001D7C  0E00               	movlw	0
  8808  001D7E  0100               	movlb	0	; () banked
  8809  001D80  21BB               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8810  001D82  6E31               	movwf	_timer_off+1,c	;volatile
  8811  001D84  0E01               	movlw	1
  8812  001D86  0100               	movlb	0	; () banked
  8813  001D88  21BC               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8814  001D8A  6E32               	movwf	_timer_off+2,c	;volatile
  8815  001D8C  0E00               	movlw	0
  8816  001D8E  0100               	movlb	0	; () banked
  8817  001D90  21BD               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8818  001D92  6E33               	movwf	_timer_off+3,c	;volatile
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;ABS_Code.c: 153: timer_on = 65536 - timer_on;
  8822  001D94  C034  F0B6         	movff	_timer_on,??_ISR_Alta	;volatile
  8823  001D98  C035  F0B7         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8824  001D9C  C036  F0B8         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8825  001DA0  C037  F0B9         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8826  001DA4  0100               	movlb	0	; () banked
  8827  001DA6  1FB6               	comf	??_ISR_Alta& (0+255),f,b
  8828  001DA8  1FB7               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8829  001DAA  1FB8               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8830  001DAC  1FB9               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8831  001DAE  2BB6               	incf	??_ISR_Alta& (0+255),f,b
  8832  001DB0  0E00               	movlw	0
  8833  001DB2  23B7               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8834  001DB4  23B8               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8835  001DB6  23B9               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8836  001DB8  0E00               	movlw	0
  8837  001DBA  0100               	movlb	0	; () banked
  8838  001DBC  25B6               	addwf	??_ISR_Alta& (0+255),w,b
  8839  001DBE  6E34               	movwf	_timer_on,c	;volatile
  8840  001DC0  0E00               	movlw	0
  8841  001DC2  0100               	movlb	0	; () banked
  8842  001DC4  21B7               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8843  001DC6  6E35               	movwf	_timer_on+1,c	;volatile
  8844  001DC8  0E01               	movlw	1
  8845  001DCA  0100               	movlb	0	; () banked
  8846  001DCC  21B8               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8847  001DCE  6E36               	movwf	_timer_on+2,c	;volatile
  8848  001DD0  0E00               	movlw	0
  8849  001DD2  0100               	movlb	0	; () banked
  8850  001DD4  21B9               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8851  001DD6  6E37               	movwf	_timer_on+3,c	;volatile
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;ABS_Code.c: 154: WriteTimer0(timer_on);
  8855  001DD8  C034  F01E         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8856  001DDC  C035  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8857  001DE0  EC2A  F015         	call	_WriteTimer0	;wreg free
  8858                           
  8859                           ;ABS_Code.c: 155: } else {
  8860  001DE4  D006               	goto	i2l4512
  8861  001DE6                     i2l4510:
  8862                           
  8863                           ;ABS_Code.c: 156: WriteTimer0(timer_off);
  8864  001DE6  C030  F01E         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8865  001DEA  C031  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8866  001DEE  EC2A  F015         	call	_WriteTimer0	;wreg free
  8867  001DF2                     i2l4512:
  8868                           
  8869                           ;ABS_Code.c: 157: }
  8870                           ;ABS_Code.c: 158: INTCONbits.TMR0IF = 0;
  8871  001DF2  94F2               	bcf	intcon,2,c	;volatile
  8872  001DF4                     i2l4514:
  8873                           
  8874                           ;ABS_Code.c: 159: }
  8875                           ;ABS_Code.c: 162: if (INTCONbits.INT0IF == 1) {
  8876  001DF4  A2F2               	btfss	intcon,1,c	;volatile
  8877  001DF6  D037               	goto	i2l4542
  8878                           
  8879                           ;ABS_Code.c: 163: if (x == 0) {
  8880  001DF8  B23E               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8881  001DFA  D006               	goto	i2l4522
  8882                           
  8883                           ;ABS_Code.c: 164: TMR1H = 0x00;
  8884  001DFC  0E00               	movlw	0
  8885  001DFE  6ECF               	movwf	4047,c	;volatile
  8886                           
  8887                           ;ABS_Code.c: 165: TMR1L = 0x00;
  8888  001E00  0E00               	movlw	0
  8889  001E02  6ECE               	movwf	4046,c	;volatile
  8890                           
  8891                           ;ABS_Code.c: 166: x = 1;
  8892  001E04  823E               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8893                           
  8894                           ;ABS_Code.c: 167: } else {
  8895  001E06  D02E               	goto	i2l4540
  8896  001E08                     i2l4522:
  8897                           
  8898                           ;ABS_Code.c: 168: gap_time_1 = (TMR1H << 8) + TMR1L;
  8899  001E08  50CF               	movf	4047,w,c	;volatile
  8900  001E0A  0100               	movlb	0	; () banked
  8901  001E0C  6FB7               	movwf	(??_ISR_Alta+1)& (0+255),b
  8902  001E0E  6BB6               	clrf	??_ISR_Alta& (0+255),b
  8903  001E10  50CE               	movf	4046,w,c	;volatile
  8904  001E12  0100               	movlb	0	; () banked
  8905  001E14  25B6               	addwf	??_ISR_Alta& (0+255),w,b
  8906  001E16  6E38               	movwf	_gap_time_1,c	;volatile
  8907  001E18  0E00               	movlw	0
  8908  001E1A  0100               	movlb	0	; () banked
  8909  001E1C  21B7               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8910  001E1E  6E39               	movwf	_gap_time_1+1,c	;volatile
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;ABS_Code.c: 169: gap_time_1 = gap_time_1 / 500;
  8914  001E20  C038  F01E         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8915  001E24  C039  F01F         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8916  001E28  0E01               	movlw	1
  8917  001E2A  6E21               	movwf	___lwdiv@divisor+1,c
  8918  001E2C  0EF4               	movlw	244
  8919  001E2E  6E20               	movwf	___lwdiv@divisor,c
  8920  001E30  EC4A  F014         	call	___lwdiv	;wreg free
  8921  001E34  C01E  F038         	movff	?___lwdiv,_gap_time_1	;volatile
  8922  001E38  C01F  F039         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8923                           
  8924                           ;ABS_Code.c: 170: ENC1_measure = 1;
  8925  001E3C  803D               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8926                           
  8927                           ;ABS_Code.c: 171: TMR1H = 0x00;
  8928  001E3E  0E00               	movlw	0
  8929  001E40  6ECF               	movwf	4047,c	;volatile
  8930                           
  8931                           ;ABS_Code.c: 172: TMR1H = 0x00;
  8932  001E42  0E00               	movlw	0
  8933  001E44  6ECF               	movwf	4047,c	;volatile
  8934                           
  8935                           ;ABS_Code.c: 173: if (count_flag == 1) {
  8936  001E46  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8937  001E48  D007               	goto	i2l4536
  8938                           
  8939                           ;ABS_Code.c: 174: int_counter_1++;
  8940  001E4A  0E01               	movlw	1
  8941  001E4C  0100               	movlb	0	; () banked
  8942  001E4E  2760               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8943  001E50  0E00               	movlw	0
  8944  001E52  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8945  001E54  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8946  001E56  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8947  001E58                     i2l4536:
  8948                           
  8949                           ;ABS_Code.c: 175: }
  8950                           ;ABS_Code.c: 176: if (distance_set_flag = 1) {
  8951  001E58  8E3D               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  8952  001E5A  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  8953  001E5C  D003               	goto	i2l4540
  8954                           
  8955                           ;ABS_Code.c: 177: distance_set_counter_1++;
  8956  001E5E  0100               	movlb	0	; () banked
  8957  001E60  4B7E               	infsnz	_distance_set_counter_1& (0+255),f,b	;volatile
  8958  001E62  2B7F               	incf	(_distance_set_counter_1+1)& (0+255),f,b	;volatile
  8959  001E64                     i2l4540:
  8960                           
  8961                           ;ABS_Code.c: 178: }
  8962                           ;ABS_Code.c: 179: }
  8963                           ;ABS_Code.c: 180: INTCONbits.INT0IF = 0;
  8964  001E64  92F2               	bcf	intcon,1,c	;volatile
  8965  001E66                     i2l4542:
  8966                           
  8967                           ;ABS_Code.c: 182: }
  8968                           ;ABS_Code.c: 185: if (INTCON3bits.INT1IF == 1) {
  8969  001E66  A0F0               	btfss	intcon3,0,c	;volatile
  8970  001E68  D037               	goto	i2l699
  8971                           
  8972                           ;ABS_Code.c: 186: if (y == 0) {
  8973  001E6A  B43E               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  8974  001E6C  D006               	goto	i2l4550
  8975                           
  8976                           ;ABS_Code.c: 187: TMR3H = 0x00;
  8977  001E6E  0E00               	movlw	0
  8978  001E70  6EB3               	movwf	4019,c	;volatile
  8979                           
  8980                           ;ABS_Code.c: 188: TMR3L = 0x00;
  8981  001E72  0E00               	movlw	0
  8982  001E74  6EB2               	movwf	4018,c	;volatile
  8983                           
  8984                           ;ABS_Code.c: 189: y = 1;
  8985  001E76  843E               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  8986                           
  8987                           ;ABS_Code.c: 190: } else {
  8988  001E78  D02E               	goto	i2l4568
  8989  001E7A                     i2l4550:
  8990                           
  8991                           ;ABS_Code.c: 191: gap_time_2 = (TMR3H << 8) + TMR3L;
  8992  001E7A  50B3               	movf	4019,w,c	;volatile
  8993  001E7C  0100               	movlb	0	; () banked
  8994  001E7E  6FB7               	movwf	(??_ISR_Alta+1)& (0+255),b
  8995  001E80  6BB6               	clrf	??_ISR_Alta& (0+255),b
  8996  001E82  50B2               	movf	4018,w,c	;volatile
  8997  001E84  0100               	movlb	0	; () banked
  8998  001E86  25B6               	addwf	??_ISR_Alta& (0+255),w,b
  8999  001E88  6E3A               	movwf	_gap_time_2,c	;volatile
  9000  001E8A  0E00               	movlw	0
  9001  001E8C  0100               	movlb	0	; () banked
  9002  001E8E  21B7               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  9003  001E90  6E3B               	movwf	_gap_time_2+1,c	;volatile
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;ABS_Code.c: 192: gap_time_2 = gap_time_2 / 500;
  9007  001E92  C03A  F01E         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  9008  001E96  C03B  F01F         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  9009  001E9A  0E01               	movlw	1
  9010  001E9C  6E21               	movwf	___lwdiv@divisor+1,c
  9011  001E9E  0EF4               	movlw	244
  9012  001EA0  6E20               	movwf	___lwdiv@divisor,c
  9013  001EA2  EC4A  F014         	call	___lwdiv	;wreg free
  9014  001EA6  C01E  F03A         	movff	?___lwdiv,_gap_time_2	;volatile
  9015  001EAA  C01F  F03B         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  9016                           
  9017                           ;ABS_Code.c: 193: ENC2_measure = 1;
  9018  001EAE  823D               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  9019                           
  9020                           ;ABS_Code.c: 194: TMR3H = 0x00;
  9021  001EB0  0E00               	movlw	0
  9022  001EB2  6EB3               	movwf	4019,c	;volatile
  9023                           
  9024                           ;ABS_Code.c: 195: TMR3H = 0x00;
  9025  001EB4  0E00               	movlw	0
  9026  001EB6  6EB3               	movwf	4019,c	;volatile
  9027                           
  9028                           ;ABS_Code.c: 196: if (count_flag == 1) {
  9029  001EB8  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9030  001EBA  D007               	goto	i2l4564
  9031                           
  9032                           ;ABS_Code.c: 197: int_counter_2++;
  9033  001EBC  0E01               	movlw	1
  9034  001EBE  0100               	movlb	0	; () banked
  9035  001EC0  2764               	addwf	_int_counter_2& (0+255),f,b	;volatile
  9036  001EC2  0E00               	movlw	0
  9037  001EC4  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  9038  001EC6  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  9039  001EC8  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9040  001ECA                     i2l4564:
  9041                           
  9042                           ;ABS_Code.c: 198: }
  9043                           ;ABS_Code.c: 199: if (distance_set_flag = 1) {
  9044  001ECA  8E3D               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  9045  001ECC  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  9046  001ECE  D003               	goto	i2l4568
  9047                           
  9048                           ;ABS_Code.c: 200: distance_set_counter_2++;
  9049  001ED0  0100               	movlb	0	; () banked
  9050  001ED2  4B80               	infsnz	_distance_set_counter_2& (0+255),f,b	;volatile
  9051  001ED4  2B81               	incf	(_distance_set_counter_2+1)& (0+255),f,b	;volatile
  9052  001ED6                     i2l4568:
  9053                           
  9054                           ;ABS_Code.c: 201: }
  9055                           ;ABS_Code.c: 202: }
  9056                           ;ABS_Code.c: 203: INTCON3bits.INT1IF = 0;
  9057  001ED6  90F0               	bcf	intcon3,0,c	;volatile
  9058  001ED8                     i2l699:
  9059  001ED8  C0CB  FFF5         	movff	??_ISR_Alta+21,tablat
  9060  001EDC  C0CA  FFF8         	movff	??_ISR_Alta+20,tblptru
  9061  001EE0  C0C9  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9062  001EE4  C0C8  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9063  001EE8  C0C7  FFF4         	movff	??_ISR_Alta+17,prodh
  9064  001EEC  C0C6  FFF3         	movff	??_ISR_Alta+16,prodl
  9065  001EF0  C0C5  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9066  001EF4  C0C4  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9067  001EF8  C0C3  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9068  001EFC  C0C2  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9069  001F00  C0C1  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9070  001F04  C0C0  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9071  001F08  C0BF  FFFB         	movff	??_ISR_Alta+9,pclatu
  9072  001F0C  C0BE  FFFA         	movff	??_ISR_Alta+8,pclath
  9073  001F10  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9074  001F12  0011               	retfie		f
  9075  001F14                     __end_of_ISR_Alta:
  9076                           	opt stack 0
  9077                           pclatu	equ	0xFFB
  9078                           pclath	equ	0xFFA
  9079                           tblptru	equ	0xFF8
  9080                           tblptrh	equ	0xFF7
  9081                           tblptrl	equ	0xFF6
  9082                           tablat	equ	0xFF5
  9083                           prodh	equ	0xFF4
  9084                           prodl	equ	0xFF3
  9085                           intcon	equ	0xFF2
  9086                           intcon2	equ	0xFF1
  9087                           intcon3	equ	0xFF0
  9088                           postinc0	equ	0xFEE
  9089                           fsr0h	equ	0xFEA
  9090                           fsr0l	equ	0xFE9
  9091                           wreg	equ	0xFE8
  9092                           postdec1	equ	0xFE5
  9093                           fsr1h	equ	0xFE2
  9094                           fsr1l	equ	0xFE1
  9095                           bsr	equ	0xFE0
  9096                           indf2	equ	0xFDF
  9097                           postinc2	equ	0xFDE
  9098                           postdec2	equ	0xFDD
  9099                           fsr2h	equ	0xFDA
  9100                           fsr2l	equ	0xFD9
  9101                           status	equ	0xFD8
  9102                           
  9103 ;; *************** function i2___wmul *****************
  9104 ;; Defined at:
  9105 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  multiplier      2   29[COMRAM] unsigned int 
  9108 ;;  multiplicand    2   31[COMRAM] unsigned int 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  __wmul          2   33[COMRAM] unsigned int 
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  2   29[COMRAM] unsigned int 
  9113 ;; Registers used:
  9114 ;;		wreg, status,2, status,0, prodl, prodh
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9120 ;;      Params:         4       0       0       0
  9121 ;;      Locals:         2       0       0       0
  9122 ;;      Temps:          0       0       0       0
  9123 ;;      Totals:         6       0       0       0
  9124 ;;Total ram usage:        6 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_ISR_Alta
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text21
  9134  0029DE                     __ptext21:
  9135                           	opt stack 0
  9136  0029DE                     i2___wmul:
  9137                           	opt stack 24
  9138                           
  9139                           ;incstack = 0
  9140  0029DE  501E               	movf	i2___wmul@multiplier,w,c
  9141  0029E0  0220               	mulwf	i2___wmul@multiplicand,c
  9142  0029E2  CFF3 F022          	movff	prodl,i2___wmul@product
  9143  0029E6  CFF4 F023          	movff	prodh,i2___wmul@product+1
  9144  0029EA  501E               	movf	i2___wmul@multiplier,w,c
  9145  0029EC  0221               	mulwf	i2___wmul@multiplicand+1,c
  9146  0029EE  50F3               	movf	prodl,w,c
  9147  0029F0  2623               	addwf	i2___wmul@product+1,f,c
  9148  0029F2  501F               	movf	i2___wmul@multiplier+1,w,c
  9149  0029F4  0220               	mulwf	i2___wmul@multiplicand,c
  9150  0029F6  50F3               	movf	prodl,w,c
  9151  0029F8  2623               	addwf	i2___wmul@product+1,f,c
  9152  0029FA  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  9153  0029FE  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  9154  002A02  0012               	return	
  9155  002A04                     __end_ofi2___wmul:
  9156                           	opt stack 0
  9157                           pclatu	equ	0xFFB
  9158                           pclath	equ	0xFFA
  9159                           tblptru	equ	0xFF8
  9160                           tblptrh	equ	0xFF7
  9161                           tblptrl	equ	0xFF6
  9162                           tablat	equ	0xFF5
  9163                           prodh	equ	0xFF4
  9164                           prodl	equ	0xFF3
  9165                           intcon	equ	0xFF2
  9166                           intcon2	equ	0xFF1
  9167                           intcon3	equ	0xFF0
  9168                           postinc0	equ	0xFEE
  9169                           fsr0h	equ	0xFEA
  9170                           fsr0l	equ	0xFE9
  9171                           wreg	equ	0xFE8
  9172                           postdec1	equ	0xFE5
  9173                           fsr1h	equ	0xFE2
  9174                           fsr1l	equ	0xFE1
  9175                           bsr	equ	0xFE0
  9176                           indf2	equ	0xFDF
  9177                           postinc2	equ	0xFDE
  9178                           postdec2	equ	0xFDD
  9179                           fsr2h	equ	0xFDA
  9180                           fsr2l	equ	0xFD9
  9181                           status	equ	0xFD8
  9182                           
  9183 ;; *************** function i2___awdiv *****************
  9184 ;; Defined at:
  9185 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  dividend        2   35[COMRAM] int 
  9188 ;;  divisor         2   37[COMRAM] int 
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;  __awdiv         2    2[BANK0 ] int 
  9191 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  9192 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  2   35[COMRAM] int 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9202 ;;      Params:         4       0       0       0
  9203 ;;      Locals:         0       4       0       0
  9204 ;;      Temps:          0       0       0       0
  9205 ;;      Totals:         4       4       0       0
  9206 ;;Total ram usage:        8 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		_ISR_Alta
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text22
  9216  002782                     __ptext22:
  9217                           	opt stack 0
  9218  002782                     i2___awdiv:
  9219                           	opt stack 24
  9220                           
  9221                           ;incstack = 0
  9222  002782  0E00               	movlw	0
  9223  002784  0100               	movlb	0	; () banked
  9224  002786  6FB3               	movwf	i2___awdiv@sign& (0+255),b
  9225                           
  9226                           ; BSR set to: 0
  9227  002788  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9228  00278A  D007               	goto	i2l4462
  9229                           
  9230                           ; BSR set to: 0
  9231  00278C  6C26               	negf	i2___awdiv@divisor,c
  9232  00278E  1E27               	comf	i2___awdiv@divisor+1,f,c
  9233  002790  B0D8               	btfsc	status,0,c
  9234  002792  2A27               	incf	i2___awdiv@divisor+1,f,c
  9235                           
  9236                           ; BSR set to: 0
  9237  002794  0E01               	movlw	1
  9238  002796  0100               	movlb	0	; () banked
  9239  002798  6FB3               	movwf	i2___awdiv@sign& (0+255),b
  9240  00279A                     i2l4462:
  9241                           
  9242                           ; BSR set to: 0
  9243  00279A  AE25               	btfss	i2___awdiv@dividend+1,7,c
  9244  00279C  D007               	goto	i2l4468
  9245                           
  9246                           ; BSR set to: 0
  9247  00279E  6C24               	negf	i2___awdiv@dividend,c
  9248  0027A0  1E25               	comf	i2___awdiv@dividend+1,f,c
  9249  0027A2  B0D8               	btfsc	status,0,c
  9250  0027A4  2A25               	incf	i2___awdiv@dividend+1,f,c
  9251                           
  9252                           ; BSR set to: 0
  9253  0027A6  0E01               	movlw	1
  9254  0027A8  0100               	movlb	0	; () banked
  9255  0027AA  1BB3               	xorwf	i2___awdiv@sign& (0+255),f,b
  9256  0027AC                     i2l4468:
  9257                           
  9258                           ; BSR set to: 0
  9259  0027AC  0E00               	movlw	0
  9260  0027AE  0100               	movlb	0	; () banked
  9261  0027B0  6FB5               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9262  0027B2  0E00               	movlw	0
  9263  0027B4  6FB4               	movwf	i2___awdiv@quotient& (0+255),b
  9264                           
  9265                           ; BSR set to: 0
  9266  0027B6  5026               	movf	i2___awdiv@divisor,w,c
  9267  0027B8  1027               	iorwf	i2___awdiv@divisor+1,w,c
  9268  0027BA  B4D8               	btfsc	status,2,c
  9269  0027BC  D021               	goto	i2l4490
  9270                           
  9271                           ; BSR set to: 0
  9272  0027BE  0E01               	movlw	1
  9273  0027C0  0100               	movlb	0	; () banked
  9274  0027C2  6FB2               	movwf	i2___awdiv@counter& (0+255),b
  9275  0027C4  D005               	goto	i2l4476
  9276  0027C6                     i2l4474:
  9277                           
  9278                           ; BSR set to: 0
  9279  0027C6  90D8               	bcf	status,0,c
  9280  0027C8  3626               	rlcf	i2___awdiv@divisor,f,c
  9281  0027CA  3627               	rlcf	i2___awdiv@divisor+1,f,c
  9282  0027CC  0100               	movlb	0	; () banked
  9283  0027CE  2BB2               	incf	i2___awdiv@counter& (0+255),f,b
  9284  0027D0                     i2l4476:
  9285                           
  9286                           ; BSR set to: 0
  9287  0027D0  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9288  0027D2  D7F9               	goto	i2l4474
  9289  0027D4                     i2l4478:
  9290                           
  9291                           ; BSR set to: 0
  9292  0027D4  0100               	movlb	0	; () banked
  9293  0027D6  90D8               	bcf	status,0,c
  9294  0027D8  37B4               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9295  0027DA  37B5               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9296                           
  9297                           ; BSR set to: 0
  9298  0027DC  5026               	movf	i2___awdiv@divisor,w,c
  9299  0027DE  5C24               	subwf	i2___awdiv@dividend,w,c
  9300  0027E0  5027               	movf	i2___awdiv@divisor+1,w,c
  9301  0027E2  5825               	subwfb	i2___awdiv@dividend+1,w,c
  9302  0027E4  A0D8               	btfss	status,0,c
  9303  0027E6  D006               	goto	i2l4486
  9304                           
  9305                           ; BSR set to: 0
  9306  0027E8  5026               	movf	i2___awdiv@divisor,w,c
  9307  0027EA  5E24               	subwf	i2___awdiv@dividend,f,c
  9308  0027EC  5027               	movf	i2___awdiv@divisor+1,w,c
  9309  0027EE  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  9310                           
  9311                           ; BSR set to: 0
  9312  0027F0  0100               	movlb	0	; () banked
  9313  0027F2  81B4               	bsf	i2___awdiv@quotient& (0+255),0,b
  9314  0027F4                     i2l4486:
  9315                           
  9316                           ; BSR set to: 0
  9317  0027F4  90D8               	bcf	status,0,c
  9318  0027F6  3227               	rrcf	i2___awdiv@divisor+1,f,c
  9319  0027F8  3226               	rrcf	i2___awdiv@divisor,f,c
  9320                           
  9321                           ; BSR set to: 0
  9322  0027FA  0100               	movlb	0	; () banked
  9323  0027FC  2FB2               	decfsz	i2___awdiv@counter& (0+255),f,b
  9324  0027FE  D7EA               	goto	i2l4478
  9325  002800                     i2l4490:
  9326                           
  9327                           ; BSR set to: 0
  9328  002800  0100               	movlb	0	; () banked
  9329  002802  51B3               	movf	i2___awdiv@sign& (0+255),w,b
  9330  002804  0100               	movlb	0	; () banked
  9331  002806  B4D8               	btfsc	status,2,c
  9332  002808  D005               	goto	i2l4494
  9333                           
  9334                           ; BSR set to: 0
  9335  00280A  0100               	movlb	0	; () banked
  9336  00280C  6DB4               	negf	i2___awdiv@quotient& (0+255),b
  9337  00280E  1FB5               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9338  002810  B0D8               	btfsc	status,0,c
  9339  002812  2BB5               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9340  002814                     i2l4494:
  9341                           
  9342                           ; BSR set to: 0
  9343  002814  C0B4  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  9344  002818  C0B5  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9345  00281C  0012               	return	
  9346  00281E                     __end_ofi2___awdiv:
  9347                           	opt stack 0
  9348                           pclatu	equ	0xFFB
  9349                           pclath	equ	0xFFA
  9350                           tblptru	equ	0xFF8
  9351                           tblptrh	equ	0xFF7
  9352                           tblptrl	equ	0xFF6
  9353                           tablat	equ	0xFF5
  9354                           prodh	equ	0xFF4
  9355                           prodl	equ	0xFF3
  9356                           intcon	equ	0xFF2
  9357                           intcon2	equ	0xFF1
  9358                           intcon3	equ	0xFF0
  9359                           postinc0	equ	0xFEE
  9360                           fsr0h	equ	0xFEA
  9361                           fsr0l	equ	0xFE9
  9362                           wreg	equ	0xFE8
  9363                           postdec1	equ	0xFE5
  9364                           fsr1h	equ	0xFE2
  9365                           fsr1l	equ	0xFE1
  9366                           bsr	equ	0xFE0
  9367                           indf2	equ	0xFDF
  9368                           postinc2	equ	0xFDE
  9369                           postdec2	equ	0xFDD
  9370                           fsr2h	equ	0xFDA
  9371                           fsr2l	equ	0xFD9
  9372                           status	equ	0xFD8
  9373                           
  9374 ;; *************** function ___lwdiv *****************
  9375 ;; Defined at:
  9376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  dividend        2   29[COMRAM] unsigned int 
  9379 ;;  divisor         2   31[COMRAM] unsigned int 
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;  quotient        2   33[COMRAM] unsigned int 
  9382 ;;  counter         1   35[COMRAM] unsigned char 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  2   29[COMRAM] unsigned int 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9392 ;;      Params:         4       0       0       0
  9393 ;;      Locals:         3       0       0       0
  9394 ;;      Temps:          0       0       0       0
  9395 ;;      Totals:         7       0       0       0
  9396 ;;Total ram usage:        7 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_ISR_Alta
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text23
  9406  002894                     __ptext23:
  9407                           	opt stack 0
  9408  002894                     ___lwdiv:
  9409                           	opt stack 24
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;incstack = 0
  9413  002894  0E00               	movlw	0
  9414  002896  6E23               	movwf	___lwdiv@quotient+1,c
  9415  002898  0E00               	movlw	0
  9416  00289A  6E22               	movwf	___lwdiv@quotient,c
  9417  00289C  5020               	movf	___lwdiv@divisor,w,c
  9418  00289E  1021               	iorwf	___lwdiv@divisor+1,w,c
  9419  0028A0  B4D8               	btfsc	status,2,c
  9420  0028A2  D01C               	goto	i2l1175
  9421  0028A4  0E01               	movlw	1
  9422  0028A6  6E24               	movwf	___lwdiv@counter,c
  9423  0028A8  D004               	goto	i2l3966
  9424  0028AA                     i2l3964:
  9425  0028AA  90D8               	bcf	status,0,c
  9426  0028AC  3620               	rlcf	___lwdiv@divisor,f,c
  9427  0028AE  3621               	rlcf	___lwdiv@divisor+1,f,c
  9428  0028B0  2A24               	incf	___lwdiv@counter,f,c
  9429  0028B2                     i2l3966:
  9430  0028B2  AE21               	btfss	___lwdiv@divisor+1,7,c
  9431  0028B4  D7FA               	goto	i2l3964
  9432  0028B6                     i2l3968:
  9433  0028B6  90D8               	bcf	status,0,c
  9434  0028B8  3622               	rlcf	___lwdiv@quotient,f,c
  9435  0028BA  3623               	rlcf	___lwdiv@quotient+1,f,c
  9436  0028BC  5020               	movf	___lwdiv@divisor,w,c
  9437  0028BE  5C1E               	subwf	___lwdiv@dividend,w,c
  9438  0028C0  5021               	movf	___lwdiv@divisor+1,w,c
  9439  0028C2  581F               	subwfb	___lwdiv@dividend+1,w,c
  9440  0028C4  A0D8               	btfss	status,0,c
  9441  0028C6  D005               	goto	i2l3976
  9442  0028C8  5020               	movf	___lwdiv@divisor,w,c
  9443  0028CA  5E1E               	subwf	___lwdiv@dividend,f,c
  9444  0028CC  5021               	movf	___lwdiv@divisor+1,w,c
  9445  0028CE  5A1F               	subwfb	___lwdiv@dividend+1,f,c
  9446  0028D0  8022               	bsf	___lwdiv@quotient,0,c
  9447  0028D2                     i2l3976:
  9448  0028D2  90D8               	bcf	status,0,c
  9449  0028D4  3221               	rrcf	___lwdiv@divisor+1,f,c
  9450  0028D6  3220               	rrcf	___lwdiv@divisor,f,c
  9451  0028D8  2E24               	decfsz	___lwdiv@counter,f,c
  9452  0028DA  D7ED               	goto	i2l3968
  9453  0028DC                     i2l1175:
  9454  0028DC  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  9455  0028E0  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9456  0028E4  0012               	return		;funcret
  9457  0028E6                     __end_of___lwdiv:
  9458                           	opt stack 0
  9459                           pclatu	equ	0xFFB
  9460                           pclath	equ	0xFFA
  9461                           tblptru	equ	0xFF8
  9462                           tblptrh	equ	0xFF7
  9463                           tblptrl	equ	0xFF6
  9464                           tablat	equ	0xFF5
  9465                           prodh	equ	0xFF4
  9466                           prodl	equ	0xFF3
  9467                           intcon	equ	0xFF2
  9468                           intcon2	equ	0xFF1
  9469                           intcon3	equ	0xFF0
  9470                           postinc0	equ	0xFEE
  9471                           fsr0h	equ	0xFEA
  9472                           fsr0l	equ	0xFE9
  9473                           wreg	equ	0xFE8
  9474                           postdec1	equ	0xFE5
  9475                           fsr1h	equ	0xFE2
  9476                           fsr1l	equ	0xFE1
  9477                           bsr	equ	0xFE0
  9478                           indf2	equ	0xFDF
  9479                           postinc2	equ	0xFDE
  9480                           postdec2	equ	0xFDD
  9481                           fsr2h	equ	0xFDA
  9482                           fsr2l	equ	0xFD9
  9483                           status	equ	0xFD8
  9484                           
  9485 ;; *************** function _WriteTimer0 *****************
  9486 ;; Defined at:
  9487 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  timer0          2   29[COMRAM] unsigned int 
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;  timer           2   31[COMRAM] struct Timers
  9492 ;; Return value:  Size  Location     Type
  9493 ;;		None               void
  9494 ;; Registers used:
  9495 ;;		None
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9501 ;;      Params:         2       0       0       0
  9502 ;;      Locals:         2       0       0       0
  9503 ;;      Temps:          0       0       0       0
  9504 ;;      Totals:         4       0       0       0
  9505 ;;Total ram usage:        4 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; This function calls:
  9508 ;;		Nothing
  9509 ;; This function is called by:
  9510 ;;		_ISR_Alta
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text24
  9515  002A54                     __ptext24:
  9516                           	opt stack 0
  9517  002A54                     _WriteTimer0:
  9518                           	opt stack 24
  9519                           
  9520                           ;incstack = 0
  9521  002A54  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9522  002A58  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9523  002A5C  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9524  002A60  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9525  002A64  0012               	return		;funcret
  9526  002A66                     __end_of_WriteTimer0:
  9527                           	opt stack 0
  9528  0000                     pclatu	equ	0xFFB
  9529                           pclath	equ	0xFFA
  9530                           tblptru	equ	0xFF8
  9531                           tblptrh	equ	0xFF7
  9532                           tblptrl	equ	0xFF6
  9533                           tablat	equ	0xFF5
  9534                           prodh	equ	0xFF4
  9535                           prodl	equ	0xFF3
  9536                           intcon	equ	0xFF2
  9537                           intcon2	equ	0xFF1
  9538                           intcon3	equ	0xFF0
  9539                           postinc0	equ	0xFEE
  9540                           fsr0h	equ	0xFEA
  9541                           fsr0l	equ	0xFE9
  9542                           wreg	equ	0xFE8
  9543                           postdec1	equ	0xFE5
  9544                           fsr1h	equ	0xFE2
  9545                           fsr1l	equ	0xFE1
  9546                           bsr	equ	0xFE0
  9547                           indf2	equ	0xFDF
  9548                           postinc2	equ	0xFDE
  9549                           postdec2	equ	0xFDD
  9550                           fsr2h	equ	0xFDA
  9551                           fsr2l	equ	0xFD9
  9552                           status	equ	0xFD8
  9553                           pclatu	equ	0xFFB
  9554                           pclath	equ	0xFFA
  9555                           tblptru	equ	0xFF8
  9556                           tblptrh	equ	0xFF7
  9557                           tblptrl	equ	0xFF6
  9558                           tablat	equ	0xFF5
  9559                           prodh	equ	0xFF4
  9560                           prodl	equ	0xFF3
  9561                           intcon	equ	0xFF2
  9562                           intcon2	equ	0xFF1
  9563                           intcon3	equ	0xFF0
  9564                           postinc0	equ	0xFEE
  9565                           fsr0h	equ	0xFEA
  9566                           fsr0l	equ	0xFE9
  9567                           wreg	equ	0xFE8
  9568                           postdec1	equ	0xFE5
  9569                           fsr1h	equ	0xFE2
  9570                           fsr1l	equ	0xFE1
  9571                           bsr	equ	0xFE0
  9572                           indf2	equ	0xFDF
  9573                           postinc2	equ	0xFDE
  9574                           postdec2	equ	0xFDD
  9575                           fsr2h	equ	0xFDA
  9576                           fsr2l	equ	0xFD9
  9577                           status	equ	0xFD8
  9578                           
  9579                           	psect	rparam
  9580  0000                     pclatu	equ	0xFFB
  9581                           pclath	equ	0xFFA
  9582                           tblptru	equ	0xFF8
  9583                           tblptrh	equ	0xFF7
  9584                           tblptrl	equ	0xFF6
  9585                           tablat	equ	0xFF5
  9586                           prodh	equ	0xFF4
  9587                           prodl	equ	0xFF3
  9588                           intcon	equ	0xFF2
  9589                           intcon2	equ	0xFF1
  9590                           intcon3	equ	0xFF0
  9591                           postinc0	equ	0xFEE
  9592                           fsr0h	equ	0xFEA
  9593                           fsr0l	equ	0xFE9
  9594                           wreg	equ	0xFE8
  9595                           postdec1	equ	0xFE5
  9596                           fsr1h	equ	0xFE2
  9597                           fsr1l	equ	0xFE1
  9598                           bsr	equ	0xFE0
  9599                           indf2	equ	0xFDF
  9600                           postinc2	equ	0xFDE
  9601                           postdec2	equ	0xFDD
  9602                           fsr2h	equ	0xFDA
  9603                           fsr2l	equ	0xFD9
  9604                           status	equ	0xFD8
  9605                           
  9606                           	psect	temp
  9607  00003F                     btemp:
  9608                           	opt stack 0
  9609  00003F                     	ds	1
  9610  0000                     int$flags	set	btemp
  9611                           pclatu	equ	0xFFB
  9612                           pclath	equ	0xFFA
  9613                           tblptru	equ	0xFF8
  9614                           tblptrh	equ	0xFF7
  9615                           tblptrl	equ	0xFF6
  9616                           tablat	equ	0xFF5
  9617                           prodh	equ	0xFF4
  9618                           prodl	equ	0xFF3
  9619                           intcon	equ	0xFF2
  9620                           intcon2	equ	0xFF1
  9621                           intcon3	equ	0xFF0
  9622                           postinc0	equ	0xFEE
  9623                           fsr0h	equ	0xFEA
  9624                           fsr0l	equ	0xFE9
  9625                           wreg	equ	0xFE8
  9626                           postdec1	equ	0xFE5
  9627                           fsr1h	equ	0xFE2
  9628                           fsr1l	equ	0xFE1
  9629                           bsr	equ	0xFE0
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           fsr2h	equ	0xFDA
  9634                           fsr2l	equ	0xFD9
  9635                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      62
    BANK0           160     43     134
    BANK1           256     16      16
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> remote_frame_array(BANK0[8]), distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->_remote_frame_handler
    _remote_frame_handler->_CANsendMessage
    _delay_ms->___wmul
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _board_initialization->_CANInitialize

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14557
                                             14 BANK1      2     2      0
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___aldiv
                            ___awdiv
                             ___lmul
                             ___wmul
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    3936
                                             42 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3163
                                             26 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     963
                                             32 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     749
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6186
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6186
                                             40 BANK0      3     3      0
                                              0 BANK1      9     4      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     450
                                             26 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                              0 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             26 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1338
                                              4 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                             35 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     10      10       6        6.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2B      86       4       83.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      3E       1       66.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4       9        0.0%
DATA                 0      0      D4      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Mar 29 15:54:26 2016

           ??_CANisTXwarningON 00CC                              _x 01F1                              _y 01F2  
         __end_of_CANSetFilter 0C4E                   ___awdiv@sign 00D1                             bsr 000FE0  
          ___wmul@multiplicand 00CE                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 0EEC  
                          l401 0FE4                            l410 10B2                            l402 0F74  
                          l403 0F7E                            l500 0782                            l404 0F88  
                          l501 0786                            l413 116C                            l405 0F92  
                          l510 0892                            l502 0792                            l422 1326  
                          l414 1170                            l511 089E                            l423 132A  
                          l415 1268                            l520 09AA                            l512 08A2  
                          l424 1336                            l416 11F8                            l408 10A2  
                          l521 09AE                            l513 08AE                            l505 086E  
                          l417 1202                            l409 10A6                            l530 0ABA  
                          l522 09BA                            l506 0872                            l418 120C  
                          l531 0AC6                            l523 09BE                            l507 087E  
                          l419 1216                            l540 0BD2                            l532 0ACA  
                          l524 09CA                            l516 098A                            l508 0882  
                          l460 1B20                            l452 1AE0                            l541 0BD6  
                          l533 0AD6                            l517 098E                            l509 088E  
                          l453 1AE4                            l542 0BE2                            l534 0ADA  
                          l518 099A                            l470 1C2C                            l454 1AF0  
                          l390 0D0E                            l543 0BE6                            l535 0AE6  
                          l527 0AA6                            l519 099E                            l471 1C38  
                          l463 1BF8                            l455 1AF4                            l383 0ED2  
                          l544 0BF2                            l528 0AAA                            l464 1BFC  
                          l456 1B00                            l384 0C64                            l545 0BF6  
                          l529 0AB6                            l465 1C08                            l457 1B04  
                          l393 0E1E                            l385 0C68                            l546 0C02  
                          l538 0BC2                            l490 066C                            l466 1C0C  
                          l458 1B10                            l378 23E8                            l394 0E22  
                          l386 0D60                            l539 0BC6                            l491 0678  
                          l483 0638                            l467 1C18                            l459 1B14  
                          l379 23F2                            l395 0E2E                            l387 0CF0  
                          l723 1FC4                            l715 1F62                            l484 063C  
                          l468 1C1C                            l388 0CFA                            l732 205C  
                          l724 200E                            l485 0648                            l469 1C28  
                          l389 0D04                            l717 1F5A                            l494 0752  
                          l486 064C                            l398 1156                            l718 1F64  
                          l495 0756                            l487 0658                            l399 0EE8  
                          l751 2322                            l719 1FBC                            l496 0762  
                          l488 065C                            l576 2A22                            l497 0766  
                          l489 0668                            l753 231E                            l745 2328  
                          l737 20DE                            l498 0772                            l499 0776  
                          l589 299A                            l759 2932                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012                            _msg 008A  
                          wreg 000FE8                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l3002 0432                           l3100 0796                           l3020 04EC  
                         l3202 0AEA                           l3106 07DC                           l3140 08F8  
                         l3134 08B2                           l3038 05A6                           l3208 0B30  
                         l3072 06C2                           l3066 067C                           l3402 0F9C  
                         l3236 0C06                           l3174 0A14                           l3422 1096  
                         l3326 0D18                           l3168 09CE                           l3504 133A  
                         l3352 0E32                           l3346 0E12                           l3428 10B6  
                         l3550 2628                           l4430 2562                           l4432 2572  
                         l4424 2534                           l2832 2A30                           l3562 265C  
                         l4450 25FA                           l4442 25CC                           l4434 2578  
                         l4418 2516                           l2850 199E                           l4290 23E0  
                         l4602 1FCA                           l3564 2668                           l3556 263E  
                         l2924 1C3C                           l4292 23F6                           l3900 2312  
                         l4620 2012                           l4612 1FEE                           l3582 26C0  
                         l3574 269E                           l3566 266E                           l4446 25DE  
                         l3910 2856                           l3742 298C                           l3478 1220  
                         l4296 23FE                           l4632 2076                           l4640 20D6  
                         l4616 1FFE                           l4608 1FE0                           l3578 26AC  
                         l3906 2830                           l2866 1A54                           l4298 2442  
                         l3498 131A                           l4650 214E                           l4634 20CC  
                         l2948 0206                           l2892 1B24                           l2966 02BE  
                         l3870 21CE                           l2984 0378                           l3880 224C  
                         l4648 20F8                           l2898 1B6A                           l3874 2210  
                         l4586 1F42                           l3896 22E0                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u3300 0B0A                           u3220 09EE  
                         u3140 08D2                           u3060 07B6                           u3305 0AFE  
                         u3225 09E2                           u3145 08C6                           u3065 07AA  
                         u2505 1A30                           u2450 191A                           u4150 2A6E  
                         u3510 0D38                           u4230 21B6                           u2455 190E  
                         u4160 2A7A                           u3520 0D84                           u2705 01E2  
                         u2465 197A                           u2810 03AE                           u2730 023A  
                         u2490 19D0                           u3515 0D2C                           u3380 0C26  
                         u2660 1C5C                           u2580 1B44                           u4236 21B8  
                         u3525 0D78                           u2815 03A2                           u2735 022E  
                         u2495 19C4                           u3535 0DE4                           u3640 0FBC  
                         u3385 0C1A                           u2905 0582                           u2825 040E  
                         u2745 029A                           u2665 1C50                           u2585 1B38  
                         u2850 0468                           u2770 02F4                           u2690 0182  
                         u3650 1008                           u3645 0FB0                           u2855 045C  
                         u2775 02E8                           u2695 0176                           u3655 0FFC  
                         u2865 04C8                           u2785 0354                           u3665 1068  
                         u2890 0522                           u3770 1240                           u5267 298E  
                         u2980 069C                           u3780 128C                           u2895 0516  
                         u3775 1234                           u2985 0690                           u3785 1280  
                         u3795 12EC            __size_of_CANSetMask 039E                           _main 1F14  
                         _read 0088                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _step 0089  
                         btemp 003F               __end_of_ADC_Read 296E                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0144  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
             _CANOperationMode 2A28                   _status_array 00A9                _brake_value_inc 0086  
         _remote_frame_handler 215A     __size_of_CANreceiveMessage 050C                __end_of___aldiv 260C  
                        ?_main 0001                __end_of___awdiv 26CA                          _T0CON 000FD5  
              ___awdiv@divisor 00CE                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 012C                __end_of___lwdiv 28E6                          i1l430 1672  
                        i1l711 00FC                          i1l581 2A50                          i1l709 00F4  
                        i2l699 1ED8                ___awdiv@counter 00D0                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR3H 000FB3  
                        _TMR1L 000FCE                          _TMR3L 000FB2              _CANisRxReady$3284 0001  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                          _TRISE 000F96                  __CFG_PWRT$OFF 000000  
             __end_of_ISR_Alta 1F14                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
          ___lmul@multiplicand 00D0                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000             CANInitialize@flags 0104                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
               __pbitbssCOMRAM 01E8           __end_of_CANisRxReady 2A54                          tablat 000FF5  
       _distance_set_counter_1 007E         _distance_set_counter_2 0080           __end_of_CANisTxReady 2A28  
             __end_ofi2___wmul 2A04                          status 000FD8             __size_ofi2___awdiv 009C  
               __CFG_PBADEN$ON 000000                __initialization 28E6                   __end_of_main 215A  
__size_of_board_initialization 00B8               _brake_signal_CAN 0085          ?_remote_frame_handler 0001  
                       ??_main 010E                  __activetblptr 000002              _CANisTxReady$3282 00CC  
                       _ADCON1 000FC1                         _CANCON 000F6F                         _ADRESH 000FC4  
             ___awdiv@dividend 00CC                __CFG_BBSIZ$1024 000000                         i1l4124 0096  
                       i1l4140 00EC                         i1l4116 0066                         i1l4128 00B4  
                       i1l4136 00E8                         i1l3700 1840                         i1l3630 1552  
                       i1l3712 1894                         i1l3704 185C                         i1l3650 161C  
                       i1l3642 15E0                         i1l3716 18B0                         i1l3708 1878  
                       i1l3718 18E2                         i1l3654 163A                         i1l3646 15FE  
                       i1l3638 15C2                         i2l1175 28DC                         i1l3656 166C  
                       i1l3692 17D2                         i2l4510 1DE6                         i2l4512 1DF2  
                       i2l4522 1E08                         i2l4514 1DF4                         i2l4540 1E64  
                       i2l4462 279A                         i2l4550 1E7A                         i2l4542 1E66  
                       i2l4536 1E58                         i2l4474 27C6                         i2l4490 2800  
                       i2l4476 27D0                         i2l4468 27AC                         i2l4564 1ECA  
                       i2l4494 2814                         i2l4486 27F4                         i2l4478 27D4  
                       i2l4568 1ED6                         i2l3964 28AA                         i2l3966 28B2  
                       i2l3976 28D2                         i2l3968 28B6                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 00D0             CANsendMessage@tamp 00D8              __end_of_ISR_Bassa 0144  
             __end_of_delay_ms 29A8          __size_of_CANSetFilter 0B06             _distance_set_value 0082  
               __CFG_XINST$OFF 000000                         ___lmul 281E                      ??___aldiv 00D8  
                       ___wmul 29A8                      ??___awdiv 00D0                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 0022                   ??_CANSetMask 00D1                         clear_0 28EC  
                       clear_1 28FC               ___awdiv@quotient 00D2                 i2___awdiv@sign 00B3  
              __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 281E                      ?_ADC_Read 0001  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                _home_position 0087                   _CANSetFilter 0148                     __accesstop 0060  
      __end_of__initialization 2922             __end_of_CANSetMask 1C84                  ___rparam_used 000001  
    __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001                      ?_ISR_Alta 0001  
                 __pidataBANK0 2A7E         ??_remote_frame_handler 00DC                   _ENC1_measure 01E8  
        CANSetFilter@numBuffer 00D5                      ?i2___wmul 001E      __size_of_CANisTXwarningON 000C  
                 _ENC2_measure 01E9                     ??_ADC_Read 00D4          __size_of_CANisRxReady 0016  
        __size_of_CANisTxReady 0024       __end_of_CANOperationMode 2A3E                     __pbssBANK0 0060  
      __size_of_CANsendMessage 078C                     ??_ISR_Alta 00B6                        ?___lmul 00CC  
                      ?___wmul 00CC                     _gap_time_1 0038                     _gap_time_2 003A  
             WriteTimer0@timer 0020                  ??_WriteTimer0 0020                 ___lmul@product 00D4  
                 _CANisRxReady 2A3E                        _CANSTAT 000F6E                   _CANisTxReady 2A04  
                      _BRGCON1 000F70                        _BRGCON2 000F71                        _BRGCON3 000F72  
                   ??i2___wmul 0022                  _int_counter_1 0060                  _int_counter_2 0064  
       __size_of_CANInitialize 01C6          _distance_reached_flag 01EE                      ?_delay_ms 00D2  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25                     _distance_1 0078                     _distance_2 007A  
          CANsendMessage@flags 00D3                     _count_flag 01ED                        __Hparam 0000  
                      __Lparam 0000               delay_ms@value_ms 00D2                        ___aldiv 24F2  
                      ___awdiv 260C                __size_of___lmul 0076                __size_of___wmul 0036  
                      ___lwdiv 2894           CANInitialize@propSeg 00DA                        __pcinit 28E6  
                      __ramtop 0300                        __ptext0 1F14                        __ptext1 215A  
                      __ptext2 0C4E                        __ptext3 2A04                        __ptext4 296E  
                      __ptext5 29A8                        __ptext6 26CA                        __ptext7 232C  
                      __ptext8 18E6                        __ptext9 0148                      _T0CONbits 000FD5  
                    _T1CONbits 000FCD                      _T3CONbits 000FB1               ___aldiv@dividend 0100  
          __end_of_WriteTimer0 2A66                     ??_delay_ms 00D4         CANreceiveMessage@error 000B  
 __end_of_board_initialization 2782                 __pintcode_body 1C84           end_of_initialization 2922  
                _Analogic_Mode 0084                  __Lmediumconst 0000                        int_func 1C84  
          i2___wmul@multiplier 001E               _CANisRXwarningON 2A72                  _CANInitialize 232C  
             ___aldiv@quotient 010A                      _ISR_Bassa 0018                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                    _PORTAbits 000F80                 CANSetMask@mask 00CC                      _PORTCbits 000F82  
            _correction_factor 0076                 CANSetMask@tamp 00D6                 CANSetMask@type 00D0  
             _CANisTXwarningON 2A66              __size_of_ADC_Read 003E                      i2___awdiv 2782  
      _clock_counter_reference 0074                 _CANsendMessage 0C4E             _remote_frame_array 00DE  
             CANInitialize@BRP 0103               CANInitialize@SJW 0102                 ?_CANInitialize 0100  
           i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001                 __end_of___lmul 2894  
            __size_of_ISR_Alta 1F0C                 __end_of___wmul 29DE                    _WriteTimer0 2A54  
             i2___wmul@product 0022            start_initialization 28E6             i2___awdiv@quotient 00B4  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 00D5                     ?i2___awdiv 0024  
       __end_of_CANsendMessage 13DA              ?_CANOperationMode 0001             ??_CANOperationMode 00CC  
   CANInitialize@FilterConfig1 00DB     CANInitialize@FilterConfig2 00DC              _distance_set_flag 01EF  
                     ??___lmul 00D4           _board_initialization 26CA                       ??___wmul 00D0  
                  __pdataBANK0 00DD               __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 01D2  
           _brake_value_degree 003C         CANInitialize@phaseSeg1 0100         CANInitialize@phaseSeg2 0101  
                  __pbssCOMRAM 0028                  __pcstackBANK0 00B2                  __pcstackBANK1 0100  
                  _data_debug1 0028                    _BRGCON2bits 000F71                    _BRGCON3bits 000F72  
            __size_of_delay_ms 003A                ?_CANsendMessage 00CC                ??_CANInitialize 0105  
           CANSetFilter@filter 00CC               ___lwdiv@dividend 001E          ?_board_initialization 0001  
                  ??_ISR_Bassa 000D                      __pintcode 0008                       ?___aldiv 0100  
                     ?___awdiv 00CC                       ?___lwdiv 001E                    __pintcodelo 0018  
            WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2A7E                    _brake_value 00B1  
                  _COMSTATbits 000F74                       _ADC_Read 2930               ___lwdiv@quotient 0022  
                  ??i2___awdiv 0028                ___aldiv@divisor 0104          CANreceiveMessage@tamp 000C  
              ___aldiv@counter 0108                 ___wmul@product 00D0                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2   _delay_quartz_frequency_value 00DD                       _PIE1bits 000F9D  
                     _IPR3bits 000FA5                       _PIE2bits 000FA0                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 2A72                       i1u403_25 1646                       i1u405_20 171A  
                     i1u405_26 171C                       i1u406_20 1744                       i1u414_25 18BC  
                     i1u406_26 1746                       i1u408_25 1758                       i1u394_20 1492  
                     i1u394_26 1494                       i1u395_20 14C0                       i1u395_26 14C2  
                     i1u397_25 14D6                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _PIR3bits 000FA4                       _RXB0EIDH 000F63                       _RXB0EIDL 000F64  
                     _RXB1EIDH 000F53                       _RXB1EIDL 000F54                       _ISR_Alta 0008  
                     _RCONbits 000FD0               __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61  
                     _RXB0SIDL 000F62                       _RXF0EIDH 000F02                       _RXB1SIDH 000F51  
                     _RXF0EIDL 000F03                       _RXB1SIDL 000F52                       _RXF1EIDH 000F06  
                     _RXF1EIDL 000F07                       _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B  
                     _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F                       _RXF4EIDH 000F12  
                     _RXF4EIDL 000F13                       _RXF5EIDH 000F16                       _RXF5EIDL 000F17  
                     _RXF0SIDH 000F00                       _RXF0SIDL 000F01                       _TXB0EIDH 000F43  
                     _RXF1SIDH 000F04                       _TXB0EIDL 000F44                       _RXF1SIDL 000F05  
                     _TXB1EIDH 000F33                       _RXF2SIDH 000F08                       _TXB1EIDL 000F34  
                     _RXF2SIDL 000F09                       _TXB2EIDH 000F23                       _RXF3SIDH 000F0C  
                     _TXB2EIDL 000F24                       _RXF3SIDL 000F0D                       _RXF4SIDH 000F10  
                     _RXF4SIDL 000F11                       _RXF5SIDH 000F14                       _RXF5SIDL 000F15  
                     _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B                       _TXB0SIDH 000F41  
                     _RXM1EIDH 000F1E                       _TXB0SIDL 000F42                       _RXM1EIDL 000F1F  
                     _TXB1SIDH 000F31                       _TXB1SIDL 000F32                       _TXB2SIDH 000F21  
                     _TXB2SIDL 000F22                      _timer_off 0030                       _RXM0SIDH 000F18  
                     _RXM0SIDL 000F19                       _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D  
                     _RXERRCNT 000F75                       _TXERRCNT 000F76                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0              ___wmul@multiplier 00CC                       i2___wmul 29DE  
            i2___awdiv@divisor 0026              i2___awdiv@counter 00B2                  ?_CANSetFilter 00CC  
            ___lmul@multiplier 00CC                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 2916                     _CANCONbits 000F6F                       __Hrparam 0000  
                 _RXB0SIDLbits 000F62         ??_board_initialization 00DD                       __Lrparam 0000  
                 _RXB1SIDLbits 000F52               __size_of___aldiv 011A                     _CANSetMask 18E6  
             __size_of___awdiv 00BE          i2___wmul@multiplicand 0020               __size_of___lwdiv 0052  
              _remote_frame_id 0068                       _Tx_retry 01EC                   ?_WriteTimer0 001E  
                 _RXF0SIDLbits 000F01                       _delay_ms 296E                ___lwdiv@divisor 0020  
                 _RXF1SIDLbits 000F05                  _TMR1_overflow 01EA                ___lwdiv@counter 0024  
               ??_CANSetFilter 00D1                       __ptext10 2A28                       __ptext11 281E  
                     __ptext12 24F2                       __ptext21 29DE                       __ptext13 2A66  
                     __ptext22 2782                       __ptext14 2A72                       __ptext23 2894  
                     __ptext15 2930                       __ptext24 2A54                       __ptext16 260C  
                     __ptext18 13DA                       __ptext19 2A3E                   _RXF2SIDLbits 000F09  
                 _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15  
     CANsendMessage@dataLength 00D2                   _remote_frame 01F0                  _TMR3_overflow 01EB  
                __size_of_main 0246           CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42  
                 _TXB1SIDLbits 000F32                       _timer_on 0034                   _TXB2SIDLbits 000F22  
                     int$flags 003F      __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001  
                ?_CANisTxReady 0001                    _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55  
                 _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60                    _RXB1CONbits 000F50  
            _CANreceiveMessage 13DA                   _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2  
             ??_CANsendMessage 00D4                  _wheel_speed_1 006C                  _wheel_speed_2 0070  
           ?_CANreceiveMessage 0001       CANsendMessage@identifier 00CC   __end_of_remote_frame_handler 232C  
                     intlevel1 0000                       intlevel2 0000               CANSetFilter@tamp 00D6  
             CANSetFilter@type 00D0            ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45  
                  _TXB1DLCbits 000F35                    _TXB0CONbits 000F40                    _TXB2DLCbits 000F25  
                  _TXB1CONbits 000F30                    _TXB2CONbits 000F20           CANOperationMode@mode 00CC  
               ??_CANisRxReady 0001                    ?_CANSetMask 00CC                 ??_CANisTxReady 00CC  
               _distance_array 0099      __end_of_CANreceiveMessage 18E6              ?_CANisRXwarningON 0001  
                  _speed_array 00A1                   ___aldiv@sign 0109             ??_CANisRXwarningON 00CC  
        _distance_actual_value 007C          __end_of_CANInitialize 24F2              ?_CANisTXwarningON 0001  
