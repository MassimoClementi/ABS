

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Mar 28 11:39:49 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataBANK0
    45  002A9A                     __pidataBANK0:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _delay_quartz_frequency_value
    49  002A9A  14                 	db	20
    50                           
    51                           ;initializer for _remote_frame_array
    52  002A9B  01                 	db	1
    53  002A9C  00                 	db	0
    54  002A9D  00                 	db	0
    55  002A9E  00                 	db	0
    56  002A9F  00                 	db	0
    57  002AA0  00                 	db	0
    58  002AA1  00                 	db	0
    59  002AA2  00                 	db	0
    60  0000                     _RXB1CON	set	3920
    61  0000                     _RXB1CONbits	set	3920
    62  0000                     _RXB1D0	set	3926
    63  0000                     _RXB1D1	set	3927
    64  0000                     _RXB1D2	set	3928
    65  0000                     _RXB1D3	set	3929
    66  0000                     _RXB1D4	set	3930
    67  0000                     _RXB1D5	set	3931
    68  0000                     _RXB1D6	set	3932
    69  0000                     _RXB1D7	set	3933
    70  0000                     _RXB1DLC	set	3925
    71  0000                     _RXB1DLCbits	set	3925
    72  0000                     _RXB1EIDH	set	3923
    73  0000                     _RXB1EIDL	set	3924
    74  0000                     _RXB1SIDH	set	3921
    75  0000                     _RXB1SIDL	set	3922
    76  0000                     _RXB1SIDLbits	set	3922
    77  0000                     _RXF0EIDH	set	3842
    78  0000                     _RXF0EIDL	set	3843
    79  0000                     _RXF0SIDH	set	3840
    80  0000                     _RXF0SIDL	set	3841
    81  0000                     _RXF0SIDLbits	set	3841
    82  0000                     _RXF1EIDH	set	3846
    83  0000                     _RXF1EIDL	set	3847
    84  0000                     _RXF1SIDH	set	3844
    85  0000                     _RXF1SIDL	set	3845
    86  0000                     _RXF1SIDLbits	set	3845
    87  0000                     _RXF2EIDH	set	3850
    88  0000                     _RXF2EIDL	set	3851
    89  0000                     _RXF2SIDH	set	3848
    90  0000                     _RXF2SIDL	set	3849
    91  0000                     _RXF2SIDLbits	set	3849
    92  0000                     _RXF3EIDH	set	3854
    93  0000                     _RXF3EIDL	set	3855
    94  0000                     _RXF3SIDH	set	3852
    95  0000                     _RXF3SIDL	set	3853
    96  0000                     _RXF3SIDLbits	set	3853
    97  0000                     _RXF4EIDH	set	3858
    98  0000                     _RXF4EIDL	set	3859
    99  0000                     _RXF4SIDH	set	3856
   100  0000                     _RXF4SIDL	set	3857
   101  0000                     _RXF4SIDLbits	set	3857
   102  0000                     _RXF5EIDH	set	3862
   103  0000                     _RXF5EIDL	set	3863
   104  0000                     _RXF5SIDH	set	3860
   105  0000                     _RXF5SIDL	set	3861
   106  0000                     _RXF5SIDLbits	set	3861
   107  0000                     _RXM0EIDH	set	3866
   108  0000                     _RXM0EIDL	set	3867
   109  0000                     _RXM0SIDH	set	3864
   110  0000                     _RXM0SIDL	set	3865
   111  0000                     _RXM0SIDLbits	set	3865
   112  0000                     _RXM1EIDH	set	3870
   113  0000                     _RXM1EIDL	set	3871
   114  0000                     _RXM1SIDH	set	3868
   115  0000                     _RXM1SIDL	set	3869
   116  0000                     _RXM1SIDLbits	set	3869
   117  0000                     _TXB0CONbits	set	3904
   118  0000                     _TXB0D0	set	3910
   119  0000                     _TXB0D1	set	3911
   120  0000                     _TXB0D2	set	3912
   121  0000                     _TXB0D3	set	3913
   122  0000                     _TXB0D4	set	3914
   123  0000                     _TXB0D5	set	3915
   124  0000                     _TXB0D6	set	3916
   125  0000                     _TXB0D7	set	3917
   126  0000                     _TXB0DLC	set	3909
   127  0000                     _TXB0DLCbits	set	3909
   128  0000                     _TXB0EIDH	set	3907
   129  0000                     _TXB0EIDL	set	3908
   130  0000                     _TXB0SIDH	set	3905
   131  0000                     _TXB0SIDL	set	3906
   132  0000                     _TXB0SIDLbits	set	3906
   133  0000                     _TXB1CONbits	set	3888
   134  0000                     _TXB1D0	set	3894
   135  0000                     _TXB1D1	set	3895
   136  0000                     _TXB1D2	set	3896
   137  0000                     _TXB1D3	set	3897
   138  0000                     _TXB1D4	set	3898
   139  0000                     _TXB1D5	set	3899
   140  0000                     _TXB1D6	set	3900
   141  0000                     _TXB1D7	set	3901
   142  0000                     _TXB1DLC	set	3893
   143  0000                     _TXB1DLCbits	set	3893
   144  0000                     _TXB1EIDH	set	3891
   145  0000                     _TXB1EIDL	set	3892
   146  0000                     _TXB1SIDH	set	3889
   147  0000                     _TXB1SIDL	set	3890
   148  0000                     _TXB1SIDLbits	set	3890
   149  0000                     _TXB2CONbits	set	3872
   150  0000                     _TXB2D0	set	3878
   151  0000                     _TXB2D1	set	3879
   152  0000                     _TXB2D2	set	3880
   153  0000                     _TXB2D3	set	3881
   154  0000                     _TXB2D4	set	3882
   155  0000                     _TXB2D5	set	3883
   156  0000                     _TXB2D6	set	3884
   157  0000                     _TXB2D7	set	3885
   158  0000                     _TXB2DLC	set	3877
   159  0000                     _TXB2DLCbits	set	3877
   160  0000                     _TXB2EIDH	set	3875
   161  0000                     _TXB2EIDL	set	3876
   162  0000                     _TXB2SIDH	set	3873
   163  0000                     _TXB2SIDL	set	3874
   164  0000                     _TXB2SIDLbits	set	3874
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADCON1	set	4033
   167  0000                     _ADCON2bits	set	4032
   168  0000                     _ADRESH	set	4036
   169  0000                     _BRGCON1	set	3952
   170  0000                     _BRGCON2	set	3953
   171  0000                     _BRGCON2bits	set	3953
   172  0000                     _BRGCON3	set	3954
   173  0000                     _BRGCON3bits	set	3954
   174  0000                     _CANCON	set	3951
   175  0000                     _CANCONbits	set	3951
   176  0000                     _CANSTAT	set	3950
   177  0000                     _COMSTATbits	set	3956
   178  0000                     _INTCON2bits	set	4081
   179  0000                     _INTCON3bits	set	4080
   180  0000                     _INTCONbits	set	4082
   181  0000                     _IPR1bits	set	3999
   182  0000                     _IPR2bits	set	4002
   183  0000                     _IPR3bits	set	4005
   184  0000                     _LATA	set	3977
   185  0000                     _LATB	set	3978
   186  0000                     _LATC	set	3979
   187  0000                     _LATD	set	3980
   188  0000                     _LATE	set	3981
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIE2bits	set	4000
   191  0000                     _PIE3bits	set	4003
   192  0000                     _PIR1bits	set	3998
   193  0000                     _PIR2bits	set	4001
   194  0000                     _PIR3bits	set	4004
   195  0000                     _PORTAbits	set	3968
   196  0000                     _PORTCbits	set	3970
   197  0000                     _RCONbits	set	4048
   198  0000                     _RXB0CON	set	3936
   199  0000                     _RXB0CONbits	set	3936
   200  0000                     _RXB0D0	set	3942
   201  0000                     _RXB0D1	set	3943
   202  0000                     _RXB0D2	set	3944
   203  0000                     _RXB0D3	set	3945
   204  0000                     _RXB0D4	set	3946
   205  0000                     _RXB0D5	set	3947
   206  0000                     _RXB0D6	set	3948
   207  0000                     _RXB0D7	set	3949
   208  0000                     _RXB0DLC	set	3941
   209  0000                     _RXB0DLCbits	set	3941
   210  0000                     _RXB0EIDH	set	3939
   211  0000                     _RXB0EIDL	set	3940
   212  0000                     _RXB0SIDH	set	3937
   213  0000                     _RXB0SIDL	set	3938
   214  0000                     _RXB0SIDLbits	set	3938
   215  0000                     _RXERRCNT	set	3957
   216  0000                     _T0CON	set	4053
   217  0000                     _T0CONbits	set	4053
   218  0000                     _T1CON	set	4045
   219  0000                     _T1CONbits	set	4045
   220  0000                     _T3CON	set	4017
   221  0000                     _T3CONbits	set	4017
   222  0000                     _TMR0H	set	4055
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR1H	set	4047
   225  0000                     _TMR1L	set	4046
   226  0000                     _TMR3H	set	4019
   227  0000                     _TMR3L	set	4018
   228  0000                     _TRISA	set	3986
   229  0000                     _TRISB	set	3987
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISD	set	3989
   232  0000                     _TRISE	set	3990
   233  0000                     _TXERRCNT	set	3958
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  002902                     __pcinit:
   239                           	opt stack 0
   240  002902                     start_initialization:
   241                           	opt stack 0
   242  002902                     __initialization:
   243                           	opt stack 0
   244                           
   245                           ; Clear objects allocated to BANK0 (80 bytes)
   246  002902  EE00  F060         	lfsr	0,__pbssBANK0
   247  002906  0E50               	movlw	80
   248  002908                     clear_0:
   249  002908  6AEE               	clrf	postinc0,c
   250  00290A  06E8               	decf	wreg,f,c
   251  00290C  E1FD               	bnz	clear_0
   252                           
   253                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   254  00290E  6A40               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   255  002910  6A3F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   256                           
   257                           ; Clear objects allocated to COMRAM (23 bytes)
   258  002912  EE00  F028         	lfsr	0,__pbssCOMRAM
   259  002916  0E17               	movlw	23
   260  002918                     clear_1:
   261  002918  6AEE               	clrf	postinc0,c
   262  00291A  06E8               	decf	wreg,f,c
   263  00291C  E1FD               	bnz	clear_1
   264                           
   265                           ; Initialize objects allocated to BANK0 (9 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  00291E  0E9A               	movlw	low __pidataBANK0
   268  002920  6EF6               	movwf	tblptrl,c
   269  002922  0E2A               	movlw	high __pidataBANK0
   270  002924  6EF7               	movwf	tblptrh,c
   271  002926  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  002928  6EF8               	movwf	tblptru,c
   273  00292A  EE00  F0DA         	lfsr	0,__pdataBANK0
   274  00292E  EE10 F009          	lfsr	1,9
   275  002932                     copy_data0:
   276  002932  0009               	tblrd		*+
   277  002934  CFF5 FFEE          	movff	tablat,postinc0
   278  002938  50E5               	movf	postdec1,w,c
   279  00293A  50E1               	movf	fsr1l,w,c
   280  00293C  E1FA               	bnz	copy_data0
   281  00293E                     end_of_initialization:
   282                           	opt stack 0
   283  00293E                     __end_of__initialization:
   284                           	opt stack 0
   285  00293E  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   286  002940  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   287  002942  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  002944  6EF8               	movwf	tblptru,c
   289  002946  0100               	movlb	0
   290  002948  EF97  F00F         	goto	_main	;jump to C main() function
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bitbssCOMRAM
   301  0001F8                     __pbitbssCOMRAM:
   302                           	opt stack 0
   303  0001F8                     _ENC1_measure:
   304                           	opt stack 0
   305  0001F8                     	ds	1
   306  0001F9                     _ENC2_measure:
   307                           	opt stack 0
   308  0001F9                     	ds	1
   309  0001FA                     _TMR1_overflow:
   310                           	opt stack 0
   311  0001FA                     	ds	1
   312  0001FB                     _TMR3_overflow:
   313                           	opt stack 0
   314  0001FB                     	ds	1
   315  0001FC                     _Tx_retry:
   316                           	opt stack 0
   317  0001FC                     	ds	1
   318  0001FD                     _count_flag:
   319                           	opt stack 0
   320  0001FD                     	ds	1
   321  0001FE                     _distance_reached_flag:
   322                           	opt stack 0
   323  0001FE                     	ds	1
   324  0001FF                     _distance_set_flag:
   325                           	opt stack 0
   326  0001FF                     	ds	1
   327  000200                     _remote_frame:
   328                           	opt stack 0
   329  000200                     	ds	1
   330  000201                     _x:
   331                           	opt stack 0
   332  000201                     	ds	1
   333  000202                     _y:
   334                           	opt stack 0
   335  000202                     	ds	1
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	bssCOMRAM
   346  000028                     __pbssCOMRAM:
   347                           	opt stack 0
   348  000028                     _data_debug1:
   349                           	opt stack 0
   350  000028                     	ds	8
   351  000030                     _msg:
   352                           	opt stack 0
   353  000030                     	ds	15
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	bssBANK0
   364  000060                     __pbssBANK0:
   365                           	opt stack 0
   366  000060                     _int_counter_1:
   367                           	opt stack 0
   368  000060                     	ds	4
   369  000064                     _int_counter_2:
   370                           	opt stack 0
   371  000064                     	ds	4
   372  000068                     _remote_frame_id:
   373                           	opt stack 0
   374  000068                     	ds	4
   375  00006C                     _timer_off:
   376                           	opt stack 0
   377  00006C                     	ds	4
   378  000070                     _timer_on:
   379                           	opt stack 0
   380  000070                     	ds	4
   381  000074                     _wheel_speed_1:
   382                           	opt stack 0
   383  000074                     	ds	4
   384  000078                     _wheel_speed_2:
   385                           	opt stack 0
   386  000078                     	ds	4
   387  00007C                     _clock_counter_reference:
   388                           	opt stack 0
   389  00007C                     	ds	2
   390  00007E                     _correction_factor:
   391                           	opt stack 0
   392  00007E                     	ds	2
   393  000080                     _distance_1:
   394                           	opt stack 0
   395  000080                     	ds	2
   396  000082                     _distance_2:
   397                           	opt stack 0
   398  000082                     	ds	2
   399  000084                     _distance_actual_value:
   400                           	opt stack 0
   401  000084                     	ds	2
   402  000086                     _distance_set_counter_1:
   403                           	opt stack 0
   404  000086                     	ds	2
   405  000088                     _distance_set_counter_2:
   406                           	opt stack 0
   407  000088                     	ds	2
   408  00008A                     _distance_set_value:
   409                           	opt stack 0
   410  00008A                     	ds	2
   411  00008C                     _gap_time_1:
   412                           	opt stack 0
   413  00008C                     	ds	2
   414  00008E                     _gap_time_2:
   415                           	opt stack 0
   416  00008E                     	ds	2
   417  000090                     _Analogic_Mode:
   418                           	opt stack 0
   419  000090                     	ds	1
   420  000091                     _brake_signal_CAN:
   421                           	opt stack 0
   422  000091                     	ds	1
   423  000092                     _brake_value_inc:
   424                           	opt stack 0
   425  000092                     	ds	1
   426  000093                     _home_position:
   427                           	opt stack 0
   428  000093                     	ds	1
   429  000094                     _read:
   430                           	opt stack 0
   431  000094                     	ds	1
   432  000095                     _step:
   433                           	opt stack 0
   434  000095                     	ds	1
   435  000096                     _distance_array:
   436                           	opt stack 0
   437  000096                     	ds	8
   438  00009E                     _speed_array:
   439                           	opt stack 0
   440  00009E                     	ds	8
   441  0000A6                     _status_array:
   442                           	opt stack 0
   443  0000A6                     	ds	8
   444  0000AE                     _brake_value:
   445                           	opt stack 0
   446  0000AE                     	ds	1
   447  0000AF                     _brake_value_degree:
   448                           	opt stack 0
   449  0000AF                     	ds	1
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           
   459                           	psect	dataBANK0
   460  0000DA                     __pdataBANK0:
   461                           	opt stack 0
   462  0000DA                     _delay_quartz_frequency_value:
   463                           	opt stack 0
   464  0000DA                     	ds	1
   465  0000DB                     _remote_frame_array:
   466                           	opt stack 0
   467  0000DB                     	ds	8
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	cstackBANK1
   478  000100                     __pcstackBANK1:
   479                           	opt stack 0
   480  000100                     ?___aldiv:
   481                           	opt stack 0
   482  000100                     CANInitialize@phaseSeg1:
   483                           	opt stack 0
   484  000100                     CANsendMessage@tamp:
   485                           	opt stack 0
   486  000100                     ___aldiv@dividend:
   487                           	opt stack 0
   488                           
   489                           ; 4 bytes @ 0x0
   490  000100                     	ds	1
   491  000101                     CANInitialize@phaseSeg2:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x1
   495  000101                     	ds	1
   496  000102                     CANInitialize@SJW:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x2
   500  000102                     	ds	1
   501  000103                     CANInitialize@BRP:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x3
   505  000103                     	ds	1
   506  000104                     CANInitialize@flags:
   507                           	opt stack 0
   508  000104                     ___aldiv@divisor:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x4
   512  000104                     	ds	1
   513  000105                     ??_CANInitialize:
   514                           
   515                           ; 0 bytes @ 0x5
   516  000105                     	ds	3
   517  000108                     ___aldiv@counter:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x8
   521  000108                     	ds	1
   522  000109                     CANInitialize@propSeg:
   523                           	opt stack 0
   524  000109                     ___aldiv@sign:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x9
   528  000109                     	ds	1
   529  00010A                     CANInitialize@FilterConfig1:
   530                           	opt stack 0
   531  00010A                     ___aldiv@quotient:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0xA
   535  00010A                     	ds	1
   536  00010B                     CANInitialize@FilterConfig2:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0xB
   540  00010B                     	ds	3
   541  00010E                     ??_main:
   542                           
   543                           ; 0 bytes @ 0xE
   544  00010E                     	ds	2
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           postdec1	equ	0xFE5
   552                           fsr1l	equ	0xFE1
   553                           
   554                           	psect	cstackBANK0
   555  0000B0                     __pcstackBANK0:
   556                           	opt stack 0
   557  0000B0                     i2___awdiv@counter:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x0
   561  0000B0                     	ds	1
   562  0000B1                     i2___awdiv@sign:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x1
   566  0000B1                     	ds	1
   567  0000B2                     i2___awdiv@quotient:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x2
   571  0000B2                     	ds	2
   572  0000B4                     ??_ISR_Alta:
   573                           
   574                           ; 0 bytes @ 0x4
   575  0000B4                     	ds	22
   576  0000CA                     ISR_Alta@A:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x1A
   580  0000CA                     	ds	1
   581  0000CB                     ISR_Alta@B:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x1B
   585  0000CB                     	ds	1
   586  0000CC                     ?___wmul:
   587                           	opt stack 0
   588  0000CC                     ?___awdiv:
   589                           	opt stack 0
   590  0000CC                     ?___lmul:
   591                           	opt stack 0
   592  0000CC                     CANOperationMode@mode:
   593                           	opt stack 0
   594  0000CC                     _CANisTxReady$3282:
   595                           	opt stack 0
   596  0000CC                     ___wmul@multiplier:
   597                           	opt stack 0
   598  0000CC                     ___awdiv@dividend:
   599                           	opt stack 0
   600  0000CC                     CANsendMessage@identifier:
   601                           	opt stack 0
   602  0000CC                     CANSetMask@mask:
   603                           	opt stack 0
   604  0000CC                     CANSetFilter@filter:
   605                           	opt stack 0
   606  0000CC                     ___lmul@multiplier:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x1C
   610  0000CC                     	ds	2
   611  0000CE                     ___wmul@multiplicand:
   612                           	opt stack 0
   613  0000CE                     ___awdiv@divisor:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x1E
   617  0000CE                     	ds	2
   618  0000D0                     CANSetMask@type:
   619                           	opt stack 0
   620  0000D0                     CANSetFilter@type:
   621                           	opt stack 0
   622  0000D0                     ___awdiv@counter:
   623                           	opt stack 0
   624  0000D0                     CANsendMessage@data:
   625                           	opt stack 0
   626  0000D0                     ___wmul@product:
   627                           	opt stack 0
   628  0000D0                     ___lmul@multiplicand:
   629                           	opt stack 0
   630                           
   631                           ; 4 bytes @ 0x20
   632  0000D0                     	ds	1
   633  0000D1                     ??_CANSetMask:
   634  0000D1                     ??_CANSetFilter:
   635  0000D1                     ___awdiv@sign:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x21
   639  0000D1                     	ds	1
   640  0000D2                     CANsendMessage@dataLength:
   641                           	opt stack 0
   642  0000D2                     delay_ms@value_ms:
   643                           	opt stack 0
   644  0000D2                     ___awdiv@quotient:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x22
   648  0000D2                     	ds	1
   649  0000D3                     CANsendMessage@flags:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x23
   653  0000D3                     	ds	1
   654  0000D4                     ??_CANsendMessage:
   655  0000D4                     ___lmul@product:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x24
   659  0000D4                     	ds	1
   660  0000D5                     CANSetMask@numBuffer:
   661                           	opt stack 0
   662  0000D5                     CANSetFilter@numBuffer:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x25
   666  0000D5                     	ds	1
   667  0000D6                     CANSetMask@tamp:
   668                           	opt stack 0
   669  0000D6                     CANSetFilter@tamp:
   670                           	opt stack 0
   671                           
   672                           ; 4 bytes @ 0x26
   673  0000D6                     	ds	2
   674  0000D8                     ??_remote_frame_handler:
   675  0000D8                     
   676                           ; 0 bytes @ 0x28
   677  0000D8                     	ds	2
   678  0000DA                     tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           postdec1	equ	0xFE5
   685                           fsr1l	equ	0xFE1
   686                           
   687                           ; 0 bytes @ 0x2A
   688                           
   689                           	psect	cstackCOMRAM
   690  000001                     __pcstackCOMRAM:
   691                           	opt stack 0
   692  000001                     _CANisRxReady$3284:
   693                           	opt stack 0
   694  000001                     CANreceiveMessage@msg:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x0
   698  000001                     	ds	2
   699  000003                     ??_CANreceiveMessage:
   700                           
   701                           ; 0 bytes @ 0x2
   702  000003                     	ds	8
   703  00000B                     CANreceiveMessage@error:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0xA
   707  00000B                     	ds	1
   708  00000C                     CANreceiveMessage@tamp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0xB
   712  00000C                     	ds	1
   713  00000D                     ??_ISR_Bassa:
   714                           
   715                           ; 0 bytes @ 0xC
   716  00000D                     	ds	17
   717  00001E                     ?___lwdiv:
   718                           	opt stack 0
   719  00001E                     ?i2___wmul:
   720                           	opt stack 0
   721  00001E                     WriteTimer0@timer0:
   722                           	opt stack 0
   723  00001E                     ___lwdiv@dividend:
   724                           	opt stack 0
   725  00001E                     i2___wmul@multiplier:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x1D
   729  00001E                     	ds	2
   730  000020                     WriteTimer0@timer:
   731                           	opt stack 0
   732  000020                     ___lwdiv@divisor:
   733                           	opt stack 0
   734  000020                     i2___wmul@multiplicand:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1F
   738  000020                     	ds	2
   739  000022                     ___lwdiv@quotient:
   740                           	opt stack 0
   741  000022                     i2___wmul@product:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x21
   745  000022                     	ds	2
   746  000024                     ?i2___awdiv:
   747                           	opt stack 0
   748  000024                     ___lwdiv@counter:
   749                           	opt stack 0
   750  000024                     i2___awdiv@dividend:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x23
   754  000024                     	ds	2
   755  000026                     i2___awdiv@divisor:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x25
   759  000026                     	ds	2
   760  000028                     tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           tblptrl	equ	0xFF6
   763                           tablat	equ	0xFF5
   764                           postinc0	equ	0xFEE
   765                           wreg	equ	0xFE8
   766                           postdec1	equ	0xFE5
   767                           fsr1l	equ	0xFE1
   768                           
   769                           ; 0 bytes @ 0x27
   770 ;;
   771 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   772 ;;
   773 ;; *************** function _main *****************
   774 ;; Defined at:
   775 ;;		line 262 in file "ABS_Code.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  2  713[None  ] int 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   789 ;;      Params:         0       0       0       0
   790 ;;      Locals:         0       0       0       0
   791 ;;      Temps:          0       0       2       0
   792 ;;      Totals:         0       0       2       0
   793 ;;Total ram usage:        2 bytes
   794 ;; Hardware stack levels required when called:    7
   795 ;; This function calls:
   796 ;;		_ADC_Read
   797 ;;		_CANisRXwarningON
   798 ;;		_CANisTXwarningON
   799 ;;		___aldiv
   800 ;;		___awdiv
   801 ;;		___lmul
   802 ;;		___wmul
   803 ;;		_board_initialization
   804 ;;		_delay_ms
   805 ;;		_remote_frame_handler
   806 ;; This function is called by:
   807 ;;		Startup code after reset
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text0
   812  001F2E                     __ptext0:
   813                           	opt stack 0
   814  001F2E                     _main:
   815                           	opt stack 24
   816                           
   817                           ;ABS_Code.c: 263: board_initialization();
   818                           
   819                           ;incstack = 0
   820  001F2E  EC73  F013         	call	_board_initialization	;wreg free
   821                           
   822                           ;ABS_Code.c: 264: step = (11 * (3.1415)) / 16;
   823  001F32  0E02               	movlw	2
   824  001F34  0100               	movlb	0	; () banked
   825  001F36  6F95               	movwf	_step& (0+255),b
   826                           
   827                           ; BSR set to: 0
   828                           ;ABS_Code.c: 267: PORTAbits.RA1 = 1;
   829  001F38  8280               	bsf	3968,1,c	;volatile
   830                           
   831                           ; BSR set to: 0
   832                           ;ABS_Code.c: 268: PORTCbits.RC1 = 1;
   833  001F3A  8282               	bsf	3970,1,c	;volatile
   834                           
   835                           ; BSR set to: 0
   836                           ;ABS_Code.c: 269: delay_ms(500);
   837  001F3C  0E01               	movlw	1
   838  001F3E  0100               	movlb	0	; () banked
   839  001F40  6FD3               	movwf	(delay_ms@value_ms+1)& (0+255),b
   840  001F42  0EF4               	movlw	244
   841  001F44  6FD2               	movwf	delay_ms@value_ms& (0+255),b
   842  001F46  ECC5  F014         	call	_delay_ms	;wreg free
   843                           
   844                           ;ABS_Code.c: 270: PORTAbits.RA1 = 0;
   845  001F4A  9280               	bcf	3968,1,c	;volatile
   846                           
   847                           ;ABS_Code.c: 271: PORTCbits.RC1 = 0;
   848  001F4C  9282               	bcf	3970,1,c	;volatile
   849                           
   850                           ;ABS_Code.c: 272: delay_ms(100);
   851  001F4E  0E00               	movlw	0
   852  001F50  0100               	movlb	0	; () banked
   853  001F52  6FD3               	movwf	(delay_ms@value_ms+1)& (0+255),b
   854  001F54  0E64               	movlw	100
   855  001F56  6FD2               	movwf	delay_ms@value_ms& (0+255),b
   856  001F58  ECC5  F014         	call	_delay_ms	;wreg free
   857  001F5C                     l5286:
   858                           
   859                           ;ABS_Code.c: 275: ADC_Read();
   860  001F5C  ECA6  F014         	call	_ADC_Read	;wreg free
   861                           
   862                           ;ABS_Code.c: 276: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   863  001F60  EC41  F015         	call	_CANisTXwarningON	;wreg free
   864  001F64  06E8               	decf	wreg,f,c
   865  001F66  B4D8               	btfsc	status,2,c
   866  001F68  D005               	goto	l717
   867  001F6A  EC47  F015         	call	_CANisRXwarningON	;wreg free
   868  001F6E  06E8               	decf	wreg,f,c
   869  001F70  A4D8               	btfss	status,2,c
   870  001F72  D004               	goto	l715
   871  001F74                     l717:
   872                           
   873                           ;ABS_Code.c: 277: PORTAbits.RA1 = 1;
   874  001F74  8280               	bsf	3968,1,c	;volatile
   875                           
   876                           ;ABS_Code.c: 278: COMSTATbits.TXWARN = 0;
   877  001F76  9474               	bcf	3956,2,c	;volatile
   878                           
   879                           ;ABS_Code.c: 279: COMSTATbits.RXWARN = 0;
   880  001F78  9274               	bcf	3956,1,c	;volatile
   881                           
   882                           ;ABS_Code.c: 280: } else {
   883  001F7A  D001               	goto	l718
   884  001F7C                     l715:
   885                           
   886                           ;ABS_Code.c: 281: PORTAbits.RA1 = 0;
   887  001F7C  9280               	bcf	3968,1,c	;volatile
   888  001F7E                     l718:
   889                           
   890                           ;ABS_Code.c: 282: }
   891                           ;ABS_Code.c: 284: if (distance_set_flag == 1) {
   892  001F7E  AE3F               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   893  001F80  D02A               	goto	l719
   894                           
   895                           ;ABS_Code.c: 285: distance_actual_value = (step*(distance_set_counter_1 + distance_set_c
      +                          ounter_2)) / 2;
   896  001F82  0100               	movlb	0	; () banked
   897  001F84  5188               	movf	_distance_set_counter_2& (0+255),w,b	;volatile
   898  001F86  0100               	movlb	0	; () banked
   899  001F88  2586               	addwf	_distance_set_counter_1& (0+255),w,b	;volatile
   900  001F8A  0100               	movlb	0	; () banked
   901  001F8C  6FCC               	movwf	___wmul@multiplier& (0+255),b
   902  001F8E  0100               	movlb	0	; () banked
   903  001F90  5189               	movf	(_distance_set_counter_2+1)& (0+255),w,b	;volatile
   904  001F92  0100               	movlb	0	; () banked
   905  001F94  2187               	addwfc	(_distance_set_counter_1+1)& (0+255),w,b	;volatile
   906  001F96  0100               	movlb	0	; () banked
   907  001F98  6FCD               	movwf	(___wmul@multiplier+1)& (0+255),b
   908  001F9A  C095  F0CE         	movff	_step,___wmul@multiplicand
   909  001F9E  0100               	movlb	0	; () banked
   910  001FA0  6BCF               	clrf	(___wmul@multiplicand+1)& (0+255),b
   911  001FA2  ECE2  F014         	call	___wmul	;wreg free
   912  001FA6  90D8               	bcf	status,0,c
   913  001FA8  0100               	movlb	0	; () banked
   914  001FAA  31CD               	rrcf	(?___wmul+1)& (0+255),w,b
   915  001FAC  0101               	movlb	1	; () banked
   916  001FAE  6F0E               	movwf	??_main& (0+255),b
   917  001FB0  0100               	movlb	0	; () banked
   918  001FB2  31CC               	rrcf	?___wmul& (0+255),w,b
   919  001FB4  0100               	movlb	0	; () banked
   920  001FB6  6F84               	movwf	_distance_actual_value& (0+255),b	;volatile
   921  001FB8  C10E  F085         	movff	??_main,_distance_actual_value+1	;volatile
   922                           
   923                           ; BSR set to: 0
   924                           ;ABS_Code.c: 286: if (distance_actual_value > distance_set_value) {
   925  001FBC  0100               	movlb	0	; () banked
   926  001FBE  5184               	movf	_distance_actual_value& (0+255),w,b	;volatile
   927  001FC0  0100               	movlb	0	; () banked
   928  001FC2  5D8A               	subwf	_distance_set_value& (0+255),w,b	;volatile
   929  001FC4  0100               	movlb	0	; () banked
   930  001FC6  5185               	movf	(_distance_actual_value+1)& (0+255),w,b	;volatile
   931  001FC8  0100               	movlb	0	; () banked
   932  001FCA  598B               	subwfb	(_distance_set_value+1)& (0+255),w,b	;volatile
   933  001FCC  B0D8               	btfsc	status,0,c
   934  001FCE  D003               	goto	l719
   935                           
   936                           ; BSR set to: 0
   937                           ;ABS_Code.c: 287: distance_set_flag = 0;
   938  001FD0  9E3F               	bcf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   939                           
   940                           ;ABS_Code.c: 288: distance_reached_flag = 1;
   941  001FD2  8C3F               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
   942                           
   943                           ;ABS_Code.c: 289: Tx_retry = 1;
   944  001FD4  883F               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   945  001FD6                     l719:
   946                           
   947                           ;ABS_Code.c: 290: }
   948                           ;ABS_Code.c: 291: }
   949                           ;ABS_Code.c: 293: if ((remote_frame == 1) || (Tx_retry == 1)) {
   950  001FD6  B040               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   951  001FD8  D002               	goto	l723
   952  001FDA  A83F               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   953  001FDC  D003               	goto	l5302
   954  001FDE                     l723:
   955                           
   956                           ;ABS_Code.c: 294: remote_frame = 0;
   957  001FDE  9040               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   958                           
   959                           ;ABS_Code.c: 295: remote_frame_handler();
   960  001FE0  ECBB  F010         	call	_remote_frame_handler	;wreg free
   961  001FE4                     l5302:
   962                           
   963                           ;ABS_Code.c: 296: }
   964                           ;ABS_Code.c: 298: if (Analogic_Mode == 0b00000000) {
   965  001FE4  0100               	movlb	0	; () banked
   966  001FE6  5190               	movf	_Analogic_Mode& (0+255),w,b	;volatile
   967  001FE8  A4D8               	btfss	status,2,c
   968  001FEA  D01E               	goto	l724
   969                           
   970                           ; BSR set to: 0
   971                           ;ABS_Code.c: 299: if (brake_signal_CAN == 0b00000000) {
   972  001FEC  0100               	movlb	0	; () banked
   973  001FEE  5191               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
   974  001FF0  A4D8               	btfss	status,2,c
   975  001FF2  D003               	goto	l5308
   976                           
   977                           ; BSR set to: 0
   978                           ;ABS_Code.c: 300: brake_value_inc = 0;
   979  001FF4  0E00               	movlw	0
   980  001FF6  0100               	movlb	0	; () banked
   981  001FF8  6F92               	movwf	_brake_value_inc& (0+255),b
   982  001FFA                     l5308:
   983                           
   984                           ; BSR set to: 0
   985                           ;ABS_Code.c: 301: }
   986                           ;ABS_Code.c: 302: if (brake_signal_CAN == 0b00000001) {
   987  001FFA  0100               	movlb	0	; () banked
   988  001FFC  0591               	decf	_brake_signal_CAN& (0+255),w,b	;volatile
   989  001FFE  A4D8               	btfss	status,2,c
   990  002000  D003               	goto	l5312
   991                           
   992                           ; BSR set to: 0
   993                           ;ABS_Code.c: 303: brake_value_inc = 150;
   994  002002  0E96               	movlw	150
   995  002004  0100               	movlb	0	; () banked
   996  002006  6F92               	movwf	_brake_value_inc& (0+255),b
   997  002008                     l5312:
   998                           
   999                           ; BSR set to: 0
  1000                           ;ABS_Code.c: 304: }
  1001                           ;ABS_Code.c: 305: if (brake_signal_CAN == 0b00000010) {
  1002  002008  0E02               	movlw	2
  1003  00200A  0100               	movlb	0	; () banked
  1004  00200C  1991               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1005  00200E  A4D8               	btfss	status,2,c
  1006  002010  D003               	goto	l5316
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;ABS_Code.c: 306: brake_value_inc = 200;
  1010  002012  0EC8               	movlw	200
  1011  002014  0100               	movlb	0	; () banked
  1012  002016  6F92               	movwf	_brake_value_inc& (0+255),b
  1013  002018                     l5316:
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;ABS_Code.c: 307: }
  1017                           ;ABS_Code.c: 308: if (brake_signal_CAN == 0b00000011) {
  1018  002018  0E03               	movlw	3
  1019  00201A  0100               	movlb	0	; () banked
  1020  00201C  1991               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1021  00201E  A4D8               	btfss	status,2,c
  1022  002020  D005               	goto	l5320
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;ABS_Code.c: 309: brake_value_inc = 255;
  1026  002022  0100               	movlb	0	; () banked
  1027  002024  6992               	setf	_brake_value_inc& (0+255),b
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;ABS_Code.c: 310: }
  1031                           ;ABS_Code.c: 311: } else {
  1032  002026  D002               	goto	l5320
  1033  002028                     l724:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;ABS_Code.c: 312: brake_value_inc = brake_signal_CAN;
  1037  002028  C091  F092         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
  1038  00202C                     l5320:
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;ABS_Code.c: 313: }
  1042                           ;ABS_Code.c: 315: brake_value = (brake_value_inc / 17) + home_position;
  1043  00202C  C092  F0CC         	movff	_brake_value_inc,___awdiv@dividend
  1044  002030  0100               	movlb	0	; () banked
  1045  002032  6BCD               	clrf	(___awdiv@dividend+1)& (0+255),b
  1046  002034  0E00               	movlw	0
  1047  002036  0100               	movlb	0	; () banked
  1048  002038  6FCF               	movwf	(___awdiv@divisor+1)& (0+255),b
  1049  00203A  0E11               	movlw	17
  1050  00203C  6FCE               	movwf	___awdiv@divisor& (0+255),b
  1051  00203E  EC14  F013         	call	___awdiv	;wreg free
  1052  002042  0100               	movlb	0	; () banked
  1053  002044  51CC               	movf	?___awdiv& (0+255),w,b
  1054  002046  0100               	movlb	0	; () banked
  1055  002048  2593               	addwf	_home_position& (0+255),w,b
  1056  00204A  0100               	movlb	0	; () banked
  1057  00204C  6FAE               	movwf	_brake_value& (0+255),b
  1058                           
  1059                           ; BSR set to: 0
  1060                           ;ABS_Code.c: 316: brake_value_degree = (180 * brake_value) / 255;
  1061  00204E  0100               	movlb	0	; () banked
  1062  002050  51AE               	movf	_brake_value& (0+255),w,b
  1063  002052  0DB4               	mullw	180
  1064  002054  CFF3 F0CC          	movff	prodl,___awdiv@dividend
  1065  002058  CFF4 F0CD          	movff	prodh,___awdiv@dividend+1
  1066  00205C  0E00               	movlw	0
  1067  00205E  0100               	movlb	0	; () banked
  1068  002060  6FCF               	movwf	(___awdiv@divisor+1)& (0+255),b
  1069  002062  69CE               	setf	___awdiv@divisor& (0+255),b
  1070  002064  EC14  F013         	call	___awdiv	;wreg free
  1071  002068  0100               	movlb	0	; () banked
  1072  00206A  51CC               	movf	?___awdiv& (0+255),w,b
  1073  00206C  0100               	movlb	0	; () banked
  1074  00206E  6FAF               	movwf	_brake_value_degree& (0+255),b
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;ABS_Code.c: 318: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1078  002070  B03F               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1079  002072  D002               	goto	l732
  1080                           
  1081                           ; BSR set to: 0
  1082  002074  A43F               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1083  002076  D03D               	goto	l5340
  1084  002078                     l732:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;ABS_Code.c: 319: if (TMR1_overflow == 1) {
  1088  002078  A43F               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1089  00207A  D00B               	goto	l5332
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;ABS_Code.c: 320: wheel_speed_1 = 0;
  1093  00207C  0E00               	movlw	0
  1094  00207E  0100               	movlb	0	; () banked
  1095  002080  6F74               	movwf	_wheel_speed_1& (0+255),b	;volatile
  1096  002082  0E00               	movlw	0
  1097  002084  6F75               	movwf	(_wheel_speed_1+1)& (0+255),b	;volatile
  1098  002086  0E00               	movlw	0
  1099  002088  6F76               	movwf	(_wheel_speed_1+2)& (0+255),b	;volatile
  1100  00208A  0E00               	movlw	0
  1101  00208C  6F77               	movwf	(_wheel_speed_1+3)& (0+255),b	;volatile
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;ABS_Code.c: 321: TMR1_overflow = 0;
  1105  00208E  943F               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1106                           
  1107                           ;ABS_Code.c: 322: } else {
  1108  002090  D02B               	goto	l5334
  1109  002092                     l5332:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;ABS_Code.c: 323: wheel_speed_1 = (step * 100000) / gap_time_1;
  1113  002092  0100               	movlb	0	; () banked
  1114  002094  5195               	movf	_step& (0+255),w,b
  1115  002096  0100               	movlb	0	; () banked
  1116  002098  6FCC               	movwf	___lmul@multiplier& (0+255),b
  1117  00209A  6BCD               	clrf	(___lmul@multiplier+1)& (0+255),b
  1118  00209C  6BCE               	clrf	(___lmul@multiplier+2)& (0+255),b
  1119  00209E  6BCF               	clrf	(___lmul@multiplier+3)& (0+255),b
  1120  0020A0  0EA0               	movlw	160
  1121  0020A2  0100               	movlb	0	; () banked
  1122  0020A4  6FD0               	movwf	___lmul@multiplicand& (0+255),b
  1123  0020A6  0E86               	movlw	134
  1124  0020A8  6FD1               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1125  0020AA  0E01               	movlw	1
  1126  0020AC  6FD2               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1127  0020AE  0E00               	movlw	0
  1128  0020B0  6FD3               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1129  0020B2  EC1D  F014         	call	___lmul	;wreg free
  1130  0020B6  C0CC  F100         	movff	?___lmul,___aldiv@dividend
  1131  0020BA  C0CD  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1132  0020BE  C0CE  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1133  0020C2  C0CF  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1134  0020C6  C08C  F104         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1135  0020CA  C08D  F105         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1136  0020CE  0101               	movlb	1	; () banked
  1137  0020D0  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1138  0020D2  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1139  0020D4  EC87  F012         	call	___aldiv	;wreg free
  1140  0020D8  C100  F074         	movff	?___aldiv,_wheel_speed_1	;volatile
  1141  0020DC  C101  F075         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1142  0020E0  C102  F076         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1143  0020E4  C103  F077         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1144  0020E8                     l5334:
  1145                           
  1146                           ;ABS_Code.c: 324: }
  1147                           ;ABS_Code.c: 325: speed_array[3] = wheel_speed_1 >> 8;
  1148  0020E8  C075  F0A1         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1149                           
  1150                           ;ABS_Code.c: 326: speed_array[2] = wheel_speed_1;
  1151  0020EC  C074  F0A0         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1152                           
  1153                           ;ABS_Code.c: 327: ENC1_measure = 0;
  1154  0020F0  903F               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1155  0020F2                     l5340:
  1156                           
  1157                           ;ABS_Code.c: 328: }
  1158                           ;ABS_Code.c: 330: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1159  0020F2  B23F               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1160  0020F4  D002               	goto	l737
  1161  0020F6  A63F               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1162  0020F8  D731               	goto	l5286
  1163  0020FA                     l737:
  1164                           
  1165                           ;ABS_Code.c: 331: if (TMR3_overflow == 1) {
  1166  0020FA  A63F               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1167  0020FC  D00B               	goto	l5348
  1168                           
  1169                           ;ABS_Code.c: 332: wheel_speed_2 = 0;
  1170  0020FE  0E00               	movlw	0
  1171  002100  0100               	movlb	0	; () banked
  1172  002102  6F78               	movwf	_wheel_speed_2& (0+255),b	;volatile
  1173  002104  0E00               	movlw	0
  1174  002106  6F79               	movwf	(_wheel_speed_2+1)& (0+255),b	;volatile
  1175  002108  0E00               	movlw	0
  1176  00210A  6F7A               	movwf	(_wheel_speed_2+2)& (0+255),b	;volatile
  1177  00210C  0E00               	movlw	0
  1178  00210E  6F7B               	movwf	(_wheel_speed_2+3)& (0+255),b	;volatile
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;ABS_Code.c: 333: TMR3_overflow = 0;
  1182  002110  963F               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1183                           
  1184                           ;ABS_Code.c: 334: } else {
  1185  002112  D02B               	goto	l5350
  1186  002114                     l5348:
  1187                           
  1188                           ;ABS_Code.c: 335: wheel_speed_2 = (step * 100000) / gap_time_2;
  1189  002114  0100               	movlb	0	; () banked
  1190  002116  5195               	movf	_step& (0+255),w,b
  1191  002118  0100               	movlb	0	; () banked
  1192  00211A  6FCC               	movwf	___lmul@multiplier& (0+255),b
  1193  00211C  6BCD               	clrf	(___lmul@multiplier+1)& (0+255),b
  1194  00211E  6BCE               	clrf	(___lmul@multiplier+2)& (0+255),b
  1195  002120  6BCF               	clrf	(___lmul@multiplier+3)& (0+255),b
  1196  002122  0EA0               	movlw	160
  1197  002124  0100               	movlb	0	; () banked
  1198  002126  6FD0               	movwf	___lmul@multiplicand& (0+255),b
  1199  002128  0E86               	movlw	134
  1200  00212A  6FD1               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1201  00212C  0E01               	movlw	1
  1202  00212E  6FD2               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1203  002130  0E00               	movlw	0
  1204  002132  6FD3               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1205  002134  EC1D  F014         	call	___lmul	;wreg free
  1206  002138  C0CC  F100         	movff	?___lmul,___aldiv@dividend
  1207  00213C  C0CD  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1208  002140  C0CE  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1209  002144  C0CF  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1210  002148  C08E  F104         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1211  00214C  C08F  F105         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1212  002150  0101               	movlb	1	; () banked
  1213  002152  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1214  002154  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1215  002156  EC87  F012         	call	___aldiv	;wreg free
  1216  00215A  C100  F078         	movff	?___aldiv,_wheel_speed_2	;volatile
  1217  00215E  C101  F079         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1218  002162  C102  F07A         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1219  002166  C103  F07B         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1220  00216A                     l5350:
  1221                           
  1222                           ;ABS_Code.c: 336: }
  1223                           ;ABS_Code.c: 337: speed_array[1] = wheel_speed_2 >> 8;
  1224  00216A  C079  F09F         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1225                           
  1226                           ;ABS_Code.c: 338: speed_array[0] = wheel_speed_2;
  1227  00216E  C078  F09E         	movff	_wheel_speed_2,_speed_array	;volatile
  1228                           
  1229                           ;ABS_Code.c: 339: ENC2_measure = 0;
  1230  002172  923F               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1231  002174  D6F3               	goto	l5286
  1232  002176                     __end_of_main:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           prodh	equ	0xFF4
  1239                           prodl	equ	0xFF3
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           postdec1	equ	0xFE5
  1243                           fsr1l	equ	0xFE1
  1244                           status	equ	0xFD8
  1245                           
  1246 ;; *************** function _remote_frame_handler *****************
  1247 ;; Defined at:
  1248 ;;		line 349 in file "ABS_Code.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;		None               void
  1255 ;; Registers used:
  1256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1262 ;;      Params:         0       0       0       0
  1263 ;;      Locals:         0       0       0       0
  1264 ;;      Temps:          0       1       0       0
  1265 ;;      Totals:         0       1       0       0
  1266 ;;Total ram usage:        1 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    5
  1269 ;; This function calls:
  1270 ;;		_CANisTxReady
  1271 ;;		_CANsendMessage
  1272 ;;		___wmul
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text1
  1279  002176                     __ptext1:
  1280                           	opt stack 0
  1281  002176                     _remote_frame_handler:
  1282                           	opt stack 25
  1283                           
  1284                           ;ABS_Code.c: 350: if (CANisTxReady()) {
  1285                           
  1286                           ;incstack = 0
  1287  002176  EC10  F015         	call	_CANisTxReady	;wreg free
  1288  00217A  0900               	iorlw	0
  1289  00217C  B4D8               	btfsc	status,2,c
  1290  00217E  D0E2               	goto	l745
  1291                           
  1292                           ;ABS_Code.c: 351: if (remote_frame_id == 0b00000000000000000000000000010) {
  1293  002180  0E02               	movlw	2
  1294  002182  0100               	movlb	0	; () banked
  1295  002184  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1296  002186  0100               	movlb	0	; () banked
  1297  002188  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1298  00218A  0100               	movlb	0	; () banked
  1299  00218C  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1300  00218E  0100               	movlb	0	; () banked
  1301  002190  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1302  002192  A4D8               	btfss	status,2,c
  1303  002194  D02A               	goto	l5070
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;ABS_Code.c: 352: status_array[0] = 0x01;
  1307  002196  0E01               	movlw	1
  1308  002198  0100               	movlb	0	; () banked
  1309  00219A  6FA6               	movwf	_status_array& (0+255),b
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;ABS_Code.c: 353: CANsendMessage(0b00000000000000000000000000010, status_array, 8, CAN_C
      +                          ONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1313  00219C  0E02               	movlw	2
  1314  00219E  0100               	movlb	0	; () banked
  1315  0021A0  6FCC               	movwf	CANsendMessage@identifier& (0+255),b
  1316  0021A2  0E00               	movlw	0
  1317  0021A4  6FCD               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1318  0021A6  0E00               	movlw	0
  1319  0021A8  6FCE               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1320  0021AA  0E00               	movlw	0
  1321  0021AC  6FCF               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1322  0021AE  0EA6               	movlw	low _status_array
  1323  0021B0  0100               	movlb	0	; () banked
  1324  0021B2  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1325  0021B4  0E00               	movlw	high _status_array
  1326  0021B6  0100               	movlb	0	; () banked
  1327  0021B8  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1328  0021BA  0E08               	movlw	8
  1329  0021BC  0100               	movlb	0	; () banked
  1330  0021BE  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1331  0021C0  0EBC               	movlw	188
  1332  0021C2  0100               	movlb	0	; () banked
  1333  0021C4  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1334  0021C6  EC1E  F006         	call	_CANsendMessage	;wreg free
  1335                           
  1336                           ;ABS_Code.c: 354: PORTCbits.RC1 = ~PORTCbits.RC1;
  1337  0021CA  A282               	btfss	3970,1,c	;volatile
  1338  0021CC  D002               	goto	u6250
  1339  0021CE  0E01               	movlw	1
  1340  0021D0  D001               	goto	u6256
  1341  0021D2                     u6250:
  1342  0021D2  0E00               	movlw	0
  1343  0021D4                     u6256:
  1344  0021D4  0AFF               	xorlw	255
  1345  0021D6  0100               	movlb	0	; () banked
  1346  0021D8  6FD8               	movwf	??_remote_frame_handler& (0+255),b
  1347  0021DA  0100               	movlb	0	; () banked
  1348  0021DC  47D8               	rlncf	??_remote_frame_handler& (0+255),f,b
  1349  0021DE  5082               	movf	3970,w,c	;volatile
  1350  0021E0  0100               	movlb	0	; () banked
  1351  0021E2  19D8               	xorwf	??_remote_frame_handler& (0+255),w,b
  1352  0021E4  0BFD               	andlw	-3
  1353  0021E6  19D8               	xorwf	??_remote_frame_handler& (0+255),w,b
  1354  0021E8  6E82               	movwf	3970,c	;volatile
  1355  0021EA                     l5070:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;ABS_Code.c: 355: }
  1359                           ;ABS_Code.c: 356: if (remote_frame_id == 0b00000000000000000000000000110) {
  1360  0021EA  0E06               	movlw	6
  1361  0021EC  0100               	movlb	0	; () banked
  1362  0021EE  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1363  0021F0  0100               	movlb	0	; () banked
  1364  0021F2  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1365  0021F4  0100               	movlb	0	; () banked
  1366  0021F6  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1367  0021F8  0100               	movlb	0	; () banked
  1368  0021FA  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1369  0021FC  A4D8               	btfss	status,2,c
  1370  0021FE  D016               	goto	l5074
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;ABS_Code.c: 357: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1374  002200  C068  F0CC         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1375  002204  C069  F0CD         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1376  002208  C06A  F0CE         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1377  00220C  C06B  F0CF         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1378  002210  0E9E               	movlw	low _speed_array
  1379  002212  0100               	movlb	0	; () banked
  1380  002214  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1381  002216  0E00               	movlw	high _speed_array
  1382  002218  0100               	movlb	0	; () banked
  1383  00221A  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1384  00221C  0E08               	movlw	8
  1385  00221E  0100               	movlb	0	; () banked
  1386  002220  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1387  002222  0EBC               	movlw	188
  1388  002224  0100               	movlb	0	; () banked
  1389  002226  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1390  002228  EC1E  F006         	call	_CANsendMessage	;wreg free
  1391  00222C                     l5074:
  1392                           
  1393                           ;ABS_Code.c: 358: }
  1394                           ;ABS_Code.c: 359: if (remote_frame_id == 0b00000000000000000000000001000) {
  1395  00222C  0E08               	movlw	8
  1396  00222E  0100               	movlb	0	; () banked
  1397  002230  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1398  002232  0100               	movlb	0	; () banked
  1399  002234  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1400  002236  0100               	movlb	0	; () banked
  1401  002238  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1402  00223A  0100               	movlb	0	; () banked
  1403  00223C  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1404  00223E  A4D8               	btfss	status,2,c
  1405  002240  D013               	goto	l5080
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;ABS_Code.c: 360: int_counter_1 = 0;
  1409  002242  0E00               	movlw	0
  1410  002244  0100               	movlb	0	; () banked
  1411  002246  6F60               	movwf	_int_counter_1& (0+255),b	;volatile
  1412  002248  0E00               	movlw	0
  1413  00224A  6F61               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1414  00224C  0E00               	movlw	0
  1415  00224E  6F62               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1416  002250  0E00               	movlw	0
  1417  002252  6F63               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1418                           
  1419                           ;ABS_Code.c: 361: int_counter_2 = 0;
  1420  002254  0E00               	movlw	0
  1421  002256  0100               	movlb	0	; () banked
  1422  002258  6F64               	movwf	_int_counter_2& (0+255),b	;volatile
  1423  00225A  0E00               	movlw	0
  1424  00225C  6F65               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1425  00225E  0E00               	movlw	0
  1426  002260  6F66               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1427  002262  0E00               	movlw	0
  1428  002264  6F67               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;ABS_Code.c: 362: count_flag = 1;
  1432  002266  8A3F               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1433  002268                     l5080:
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;ABS_Code.c: 363: }
  1437                           ;ABS_Code.c: 364: if (remote_frame_id == 0b00000000000000000000000000111) {
  1438  002268  0E07               	movlw	7
  1439  00226A  0100               	movlb	0	; () banked
  1440  00226C  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1441  00226E  0100               	movlb	0	; () banked
  1442  002270  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1443  002272  0100               	movlb	0	; () banked
  1444  002274  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1445  002276  0100               	movlb	0	; () banked
  1446  002278  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1447  00227A  A4D8               	btfss	status,2,c
  1448  00227C  D03F               	goto	l5096
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;ABS_Code.c: 365: distance_1 = step * (int_counter_1);
  1452  00227E  C095  F0CC         	movff	_step,___wmul@multiplier
  1453  002282  0100               	movlb	0	; () banked
  1454  002284  6BCD               	clrf	(___wmul@multiplier+1)& (0+255),b
  1455  002286  C060  F0CE         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1456  00228A  C061  F0CF         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1457  00228E  ECE2  F014         	call	___wmul	;wreg free
  1458  002292  C0CC  F080         	movff	?___wmul,_distance_1	;volatile
  1459  002296  C0CD  F081         	movff	?___wmul+1,_distance_1+1	;volatile
  1460                           
  1461                           ;ABS_Code.c: 366: distance_2 = step * (int_counter_2);
  1462  00229A  C095  F0CC         	movff	_step,___wmul@multiplier
  1463  00229E  0100               	movlb	0	; () banked
  1464  0022A0  6BCD               	clrf	(___wmul@multiplier+1)& (0+255),b
  1465  0022A2  C064  F0CE         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1466  0022A6  C065  F0CF         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1467  0022AA  ECE2  F014         	call	___wmul	;wreg free
  1468  0022AE  C0CC  F082         	movff	?___wmul,_distance_2	;volatile
  1469  0022B2  C0CD  F083         	movff	?___wmul+1,_distance_2+1	;volatile
  1470                           
  1471                           ;ABS_Code.c: 367: count_flag = 0;
  1472  0022B6  9A3F               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1473                           
  1474                           ;ABS_Code.c: 368: distance_array[0] = distance_1;
  1475  0022B8  C080  F096         	movff	_distance_1,_distance_array	;volatile
  1476                           
  1477                           ;ABS_Code.c: 369: distance_array[1] = distance_1 >> 8;
  1478  0022BC  0100               	movlb	0	; () banked
  1479  0022BE  5181               	movf	(_distance_1+1)& (0+255),w,b	;volatile
  1480  0022C0  0100               	movlb	0	; () banked
  1481  0022C2  6F97               	movwf	(_distance_array+1)& (0+255),b
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;ABS_Code.c: 370: distance_array[2] = distance_2;
  1485  0022C4  C082  F098         	movff	_distance_2,_distance_array+2	;volatile
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;ABS_Code.c: 371: distance_array[3] = distance_2 >> 8;
  1489  0022C8  0100               	movlb	0	; () banked
  1490  0022CA  5183               	movf	(_distance_2+1)& (0+255),w,b	;volatile
  1491  0022CC  0100               	movlb	0	; () banked
  1492  0022CE  6F99               	movwf	(_distance_array+3)& (0+255),b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;ABS_Code.c: 372: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1496  0022D0  C068  F0CC         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1497  0022D4  C069  F0CD         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1498  0022D8  C06A  F0CE         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1499  0022DC  C06B  F0CF         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1500  0022E0  0E96               	movlw	low _distance_array
  1501  0022E2  0100               	movlb	0	; () banked
  1502  0022E4  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1503  0022E6  0E00               	movlw	high _distance_array
  1504  0022E8  0100               	movlb	0	; () banked
  1505  0022EA  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1506  0022EC  0E08               	movlw	8
  1507  0022EE  0100               	movlb	0	; () banked
  1508  0022F0  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1509  0022F2  0EBC               	movlw	188
  1510  0022F4  0100               	movlb	0	; () banked
  1511  0022F6  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1512  0022F8  EC1E  F006         	call	_CANsendMessage	;wreg free
  1513  0022FC                     l5096:
  1514                           
  1515                           ;ABS_Code.c: 373: }
  1516                           ;ABS_Code.c: 374: if (distance_reached_flag == 1) {
  1517  0022FC  AC3F               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1518  0022FE  D017               	goto	l5100
  1519                           
  1520                           ;ABS_Code.c: 375: CANsendMessage(0b00000000000000000000000001010, remote_frame_array, 8,
      +                           CAN_CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1521  002300  0E0A               	movlw	10
  1522  002302  0100               	movlb	0	; () banked
  1523  002304  6FCC               	movwf	CANsendMessage@identifier& (0+255),b
  1524  002306  0E00               	movlw	0
  1525  002308  6FCD               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1526  00230A  0E00               	movlw	0
  1527  00230C  6FCE               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1528  00230E  0E00               	movlw	0
  1529  002310  6FCF               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1530  002312  0EDB               	movlw	low _remote_frame_array
  1531  002314  0100               	movlb	0	; () banked
  1532  002316  6FD0               	movwf	CANsendMessage@data& (0+255),b
  1533  002318  0E00               	movlw	high _remote_frame_array
  1534  00231A  0100               	movlb	0	; () banked
  1535  00231C  6FD1               	movwf	(CANsendMessage@data+1)& (0+255),b
  1536  00231E  0E08               	movlw	8
  1537  002320  0100               	movlb	0	; () banked
  1538  002322  6FD2               	movwf	CANsendMessage@dataLength& (0+255),b
  1539  002324  0EFC               	movlw	252
  1540  002326  0100               	movlb	0	; () banked
  1541  002328  6FD3               	movwf	CANsendMessage@flags& (0+255),b
  1542  00232A  EC1E  F006         	call	_CANsendMessage	;wreg free
  1543  00232E                     l5100:
  1544                           
  1545                           ;ABS_Code.c: 376: }
  1546                           ;ABS_Code.c: 377: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1547  00232E  010F               	movlb	15	; () banked
  1548  002330  BD40               	btfsc	64,6,b	;volatile
  1549  002332  D003               	goto	l753
  1550                           
  1551                           ; BSR set to: 15
  1552  002334  010F               	movlb	15	; () banked
  1553  002336  AD30               	btfss	48,6,b	;volatile
  1554  002338  D002               	goto	l751
  1555  00233A                     l753:
  1556                           
  1557                           ; BSR set to: 15
  1558                           ;ABS_Code.c: 378: Tx_retry = 1;
  1559  00233A  883F               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1560                           
  1561                           ;ABS_Code.c: 379: } else {
  1562  00233C  0012               	return	
  1563  00233E                     l751:
  1564                           
  1565                           ; BSR set to: 15
  1566                           ;ABS_Code.c: 380: Tx_retry = 0;
  1567  00233E  983F               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1568                           
  1569                           ;ABS_Code.c: 381: distance_reached_flag = 0;
  1570  002340  9C3F               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1571                           
  1572                           ; BSR set to: 15
  1573                           ;ABS_Code.c: 382: }
  1574                           ;ABS_Code.c: 383: } else {
  1575  002342  0012               	return	
  1576  002344                     l745:
  1577                           
  1578                           ;ABS_Code.c: 384: Tx_retry = 1;
  1579  002344  883F               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1580  002346  0012               	return	
  1581  002348                     __end_of_remote_frame_handler:
  1582                           	opt stack 0
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           prodh	equ	0xFF4
  1588                           prodl	equ	0xFF3
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           postdec1	equ	0xFE5
  1592                           fsr1l	equ	0xFE1
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _CANsendMessage *****************
  1596 ;; Defined at:
  1597 ;;		line 294 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  identifier      4   28[BANK0 ] unsigned long 
  1600 ;;  data            2   32[BANK0 ] PTR unsigned char 
  1601 ;;		 -> remote_frame_array(8), distance_array(8), status_array(8), speed_array(8), 
  1602 ;;  dataLength      1   34[BANK0 ] unsigned char 
  1603 ;;  flags           1   35[BANK0 ] enum E16866
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  tamp            4    0[BANK1 ] unsigned long 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;		None               void
  1608 ;; Registers used:
  1609 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1615 ;;      Params:         0       8       0       0
  1616 ;;      Locals:         0       0       4       0
  1617 ;;      Temps:          0       4       0       0
  1618 ;;      Totals:         0      12       4       0
  1619 ;;Total ram usage:       16 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    4
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_remote_frame_handler
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text2
  1630  000C3C                     __ptext2:
  1631                           	opt stack 0
  1632  000C3C                     _CANsendMessage:
  1633                           	opt stack 25
  1634                           
  1635                           ;inc\CANlib.h: 296: unsigned long tamp;
  1636                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1637                           
  1638                           ;incstack = 0
  1639  000C3C  010F               	movlb	15	; () banked
  1640  000C3E  B740               	btfsc	64,3,b	;volatile
  1641  000C40  D13F               	goto	l383
  1642                           
  1643                           ; BSR set to: 15
  1644                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1645  000C42  C0D2  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1646                           
  1647                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1648  000C46  0100               	movlb	0	; () banked
  1649  000C48  ADD3               	btfss	CANsendMessage@flags& (0+255),6,b
  1650  000C4A  D003               	goto	l384
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1654  000C4C  010F               	movlb	15	; () banked
  1655  000C4E  8D45               	bsf	69,6,b	;volatile
  1656  000C50  D002               	goto	l385
  1657  000C52                     l384:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;inc\CANlib.h: 302: else
  1661                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1662  000C52  010F               	movlb	15	; () banked
  1663  000C54  9D45               	bcf	69,6,b	;volatile
  1664  000C56                     l385:
  1665                           
  1666                           ; BSR set to: 15
  1667                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1668  000C56  0100               	movlb	0	; () banked
  1669  000C58  A7D3               	btfss	CANsendMessage@flags& (0+255),3,b
  1670  000C5A  D079               	goto	l386
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;inc\CANlib.h: 306: {
  1674                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1675  000C5C  0100               	movlb	0	; () banked
  1676  000C5E  51CC               	movf	CANsendMessage@identifier& (0+255),w,b
  1677  000C60  0101               	movlb	1	; () banked
  1678  000C62  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  1679  000C64  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1680  000C66  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1681  000C68  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1682                           
  1683                           ; BSR set to: 1
  1684                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1685  000C6A  C100  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1689  000C6E  0E00               	movlw	0
  1690  000C70  0100               	movlb	0	; () banked
  1691  000C72  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  1692  000C74  0101               	movlb	1	; () banked
  1693  000C76  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  1694  000C78  0EFF               	movlw	255
  1695  000C7A  0100               	movlb	0	; () banked
  1696  000C7C  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1697  000C7E  0101               	movlb	1	; () banked
  1698  000C80  6F01               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1699  000C82  0E00               	movlw	0
  1700  000C84  0100               	movlb	0	; () banked
  1701  000C86  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1702  000C88  0101               	movlb	1	; () banked
  1703  000C8A  6F02               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1704  000C8C  0E00               	movlw	0
  1705  000C8E  0100               	movlb	0	; () banked
  1706  000C90  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1707  000C92  0101               	movlb	1	; () banked
  1708  000C94  6F03               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1709                           
  1710                           ; BSR set to: 1
  1711                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1712  000C96  C100  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  1713  000C9A  C101  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1714  000C9E  C102  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1715  000CA2  C103  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1716  000CA6  C0D5  F0D4         	movff	??_CANsendMessage+1,??_CANsendMessage
  1717  000CAA  C0D6  F0D5         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1718  000CAE  C0D7  F0D6         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1719  000CB2  0100               	movlb	0	; () banked
  1720  000CB4  6BD7               	clrf	(??_CANsendMessage+3)& (0+255),b
  1721  000CB6  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  1722  000CBA  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1723  000CBE  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1724  000CC2  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1728  000CC6  C100  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1732  000CCA  0E00               	movlw	0
  1733  000CCC  010F               	movlb	15	; () banked
  1734  000CCE  6F42               	movwf	66,b	;volatile
  1735                           
  1736                           ; BSR set to: 15
  1737                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1738  000CD0  010F               	movlb	15	; () banked
  1739  000CD2  8742               	bsf	66,3,b	;volatile
  1740                           
  1741                           ; BSR set to: 15
  1742                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1743  000CD4  0100               	movlb	0	; () banked
  1744  000CD6  A1CE               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1745  000CD8  D002               	goto	l387
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1749  000CDA  010F               	movlb	15	; () banked
  1750  000CDC  8142               	bsf	66,0,b	;volatile
  1751  000CDE                     l387:
  1752                           
  1753                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1754  000CDE  0100               	movlb	0	; () banked
  1755  000CE0  A3CE               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1756  000CE2  D002               	goto	l388
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1760  000CE4  010F               	movlb	15	; () banked
  1761  000CE6  8342               	bsf	66,1,b	;volatile
  1762  000CE8                     l388:
  1763                           
  1764                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1765  000CE8  0100               	movlb	0	; () banked
  1766  000CEA  A5CE               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1767  000CEC  D002               	goto	l389
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1771  000CEE  010F               	movlb	15	; () banked
  1772  000CF0  8B42               	bsf	66,5,b	;volatile
  1773  000CF2                     l389:
  1774                           
  1775                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1776  000CF2  0100               	movlb	0	; () banked
  1777  000CF4  A7CE               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1778  000CF6  D002               	goto	l390
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1782  000CF8  010F               	movlb	15	; () banked
  1783  000CFA  8D42               	bsf	66,6,b	;volatile
  1784  000CFC                     l390:
  1785                           
  1786                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1787  000CFC  0100               	movlb	0	; () banked
  1788  000CFE  A9CE               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1789  000D00  D002               	goto	l4758
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1793  000D02  010F               	movlb	15	; () banked
  1794  000D04  8F42               	bsf	66,7,b	;volatile
  1795  000D06                     l4758:
  1796                           
  1797                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1798  000D06  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  1799  000D0A  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1800  000D0E  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1801  000D12  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1802  000D16  0E16               	movlw	22
  1803  000D18  D006               	goto	u5920
  1804  000D1A                     u5925:
  1805  000D1A  0100               	movlb	0	; () banked
  1806  000D1C  90D8               	bcf	status,0,c
  1807  000D1E  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1808  000D20  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1809  000D22  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1810  000D24  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  1811  000D26                     u5920:
  1812  000D26  2EE8               	decfsz	wreg,f,c
  1813  000D28  D7F8               	goto	u5925
  1814  000D2A  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  1815  000D2E  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1816  000D32  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1817  000D36  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1821  000D3A  0101               	movlb	1	; () banked
  1822  000D3C  5100               	movf	CANsendMessage@tamp& (0+255),w,b
  1823  000D3E  0101               	movlb	1	; () banked
  1824  000D40  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  1825  000D42  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1826  000D44  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1827  000D46  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1828                           
  1829                           ; BSR set to: 1
  1830                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1831  000D48  C100  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1832                           
  1833                           ;inc\CANlib.h: 332: }
  1834  000D4C  D059               	goto	l4778
  1835  000D4E                     l386:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;inc\CANlib.h: 334: else
  1839                           ;inc\CANlib.h: 336: {
  1840                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1841  000D4E  010F               	movlb	15	; () banked
  1842  000D50  9742               	bcf	66,3,b	;volatile
  1843                           
  1844                           ; BSR set to: 15
  1845                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1846  000D52  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  1847  000D56  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1848  000D5A  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1849  000D5E  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1850  000D62  0E04               	movlw	4
  1851  000D64  D006               	goto	u5930
  1852  000D66                     u5935:
  1853  000D66  0100               	movlb	0	; () banked
  1854  000D68  90D8               	bcf	status,0,c
  1855  000D6A  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1856  000D6C  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1857  000D6E  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1858  000D70  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  1859  000D72                     u5930:
  1860  000D72  2EE8               	decfsz	wreg,f,c
  1861  000D74  D7F8               	goto	u5935
  1862  000D76  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  1863  000D7A  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1864  000D7E  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1865  000D82  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1869  000D86  0101               	movlb	1	; () banked
  1870  000D88  5100               	movf	CANsendMessage@tamp& (0+255),w,b
  1871  000D8A  0101               	movlb	1	; () banked
  1872  000D8C  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  1873  000D8E  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1874  000D90  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1875  000D92  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1879  000D94  C100  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1880                           
  1881                           ; BSR set to: 1
  1882                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1883  000D98  0E07               	movlw	7
  1884  000D9A  0100               	movlb	0	; () banked
  1885  000D9C  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  1886  000D9E  0101               	movlb	1	; () banked
  1887  000DA0  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  1888  000DA2  0E00               	movlw	0
  1889  000DA4  0100               	movlb	0	; () banked
  1890  000DA6  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1891  000DA8  0101               	movlb	1	; () banked
  1892  000DAA  6F01               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1893  000DAC  0E00               	movlw	0
  1894  000DAE  0100               	movlb	0	; () banked
  1895  000DB0  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1896  000DB2  0101               	movlb	1	; () banked
  1897  000DB4  6F02               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1898  000DB6  0E00               	movlw	0
  1899  000DB8  0100               	movlb	0	; () banked
  1900  000DBA  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1901  000DBC  0101               	movlb	1	; () banked
  1902  000DBE  6F03               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1903                           
  1904                           ; BSR set to: 1
  1905                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1906  000DC0  C100  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  1907  000DC4  C101  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1908  000DC8  C102  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1909  000DCC  C103  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1910  000DD0  0E05               	movlw	5
  1911  000DD2                     u5945:
  1912  000DD2  90D8               	bcf	status,0,c
  1913  000DD4  0100               	movlb	0	; () banked
  1914  000DD6  37D4               	rlcf	??_CANsendMessage& (0+255),f,b
  1915  000DD8  37D5               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1916  000DDA  37D6               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1917  000DDC  37D7               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1918  000DDE  2EE8               	decfsz	wreg,f,c
  1919  000DE0  D7F8               	goto	u5945
  1920  000DE2  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  1921  000DE6  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1922  000DEA  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1923  000DEE  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1927  000DF2  010F               	movlb	15	; () banked
  1928  000DF4  5142               	movf	66,w,b	;volatile
  1929  000DF6  0B1F               	andlw	31
  1930  000DF8  010F               	movlb	15	; () banked
  1931  000DFA  6F42               	movwf	66,b	;volatile
  1932                           
  1933                           ; BSR set to: 15
  1934                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1935  000DFC  C100  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1936  000E00                     l4778:
  1937                           
  1938                           ;inc\CANlib.h: 347: }
  1939                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1940  000E00  0100               	movlb	0	; () banked
  1941  000E02  A1D3               	btfss	CANsendMessage@flags& (0+255),0,b
  1942  000E04  D003               	goto	l393
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1946  000E06  010F               	movlb	15	; () banked
  1947  000E08  8140               	bsf	64,0,b	;volatile
  1948  000E0A  D002               	goto	l394
  1949  000E0C                     l393:
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;inc\CANlib.h: 351: else
  1953                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1954  000E0C  010F               	movlb	15	; () banked
  1955  000E0E  9140               	bcf	64,0,b	;volatile
  1956  000E10                     l394:
  1957                           
  1958                           ; BSR set to: 15
  1959                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1960  000E10  0100               	movlb	0	; () banked
  1961  000E12  A3D3               	btfss	CANsendMessage@flags& (0+255),1,b
  1962  000E14  D003               	goto	l395
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1966  000E16  010F               	movlb	15	; () banked
  1967  000E18  8340               	bsf	64,1,b	;volatile
  1968  000E1A  D002               	goto	l4784
  1969  000E1C                     l395:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;inc\CANlib.h: 355: else
  1973                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1974  000E1C  010F               	movlb	15	; () banked
  1975  000E1E  9340               	bcf	64,1,b	;volatile
  1976  000E20                     l4784:
  1977                           
  1978                           ; BSR set to: 15
  1979                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1980  000E20  C0D0  FFD9         	movff	CANsendMessage@data,fsr2l
  1981  000E24  C0D1  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1982  000E28  50DF               	movf	indf2,w,c
  1983  000E2A  010F               	movlb	15	; () banked
  1984  000E2C  6F46               	movwf	70,b	;volatile
  1985                           
  1986                           ; BSR set to: 15
  1987                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1988  000E2E  0100               	movlb	0	; () banked
  1989  000E30  EE20 F001          	lfsr	2,1
  1990  000E34  51D0               	movf	CANsendMessage@data& (0+255),w,b
  1991  000E36  26D9               	addwf	fsr2l,f,c
  1992  000E38  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1993  000E3A  22DA               	addwfc	fsr2h,f,c
  1994  000E3C  50DF               	movf	indf2,w,c
  1995  000E3E  010F               	movlb	15	; () banked
  1996  000E40  6F47               	movwf	71,b	;volatile
  1997                           
  1998                           ; BSR set to: 15
  1999                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2000  000E42  0100               	movlb	0	; () banked
  2001  000E44  EE20 F002          	lfsr	2,2
  2002  000E48  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2003  000E4A  26D9               	addwf	fsr2l,f,c
  2004  000E4C  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2005  000E4E  22DA               	addwfc	fsr2h,f,c
  2006  000E50  50DF               	movf	indf2,w,c
  2007  000E52  010F               	movlb	15	; () banked
  2008  000E54  6F48               	movwf	72,b	;volatile
  2009                           
  2010                           ; BSR set to: 15
  2011                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2012  000E56  0100               	movlb	0	; () banked
  2013  000E58  EE20 F003          	lfsr	2,3
  2014  000E5C  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2015  000E5E  26D9               	addwf	fsr2l,f,c
  2016  000E60  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2017  000E62  22DA               	addwfc	fsr2h,f,c
  2018  000E64  50DF               	movf	indf2,w,c
  2019  000E66  010F               	movlb	15	; () banked
  2020  000E68  6F49               	movwf	73,b	;volatile
  2021                           
  2022                           ; BSR set to: 15
  2023                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2024  000E6A  0100               	movlb	0	; () banked
  2025  000E6C  EE20 F004          	lfsr	2,4
  2026  000E70  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2027  000E72  26D9               	addwf	fsr2l,f,c
  2028  000E74  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2029  000E76  22DA               	addwfc	fsr2h,f,c
  2030  000E78  50DF               	movf	indf2,w,c
  2031  000E7A  010F               	movlb	15	; () banked
  2032  000E7C  6F4A               	movwf	74,b	;volatile
  2033                           
  2034                           ; BSR set to: 15
  2035                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2036  000E7E  0100               	movlb	0	; () banked
  2037  000E80  EE20 F005          	lfsr	2,5
  2038  000E84  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2039  000E86  26D9               	addwf	fsr2l,f,c
  2040  000E88  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2041  000E8A  22DA               	addwfc	fsr2h,f,c
  2042  000E8C  50DF               	movf	indf2,w,c
  2043  000E8E  010F               	movlb	15	; () banked
  2044  000E90  6F4B               	movwf	75,b	;volatile
  2045                           
  2046                           ; BSR set to: 15
  2047                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2048  000E92  0100               	movlb	0	; () banked
  2049  000E94  EE20 F006          	lfsr	2,6
  2050  000E98  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2051  000E9A  26D9               	addwf	fsr2l,f,c
  2052  000E9C  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2053  000E9E  22DA               	addwfc	fsr2h,f,c
  2054  000EA0  50DF               	movf	indf2,w,c
  2055  000EA2  010F               	movlb	15	; () banked
  2056  000EA4  6F4C               	movwf	76,b	;volatile
  2057                           
  2058                           ; BSR set to: 15
  2059                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2060  000EA6  0100               	movlb	0	; () banked
  2061  000EA8  EE20 F007          	lfsr	2,7
  2062  000EAC  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2063  000EAE  26D9               	addwf	fsr2l,f,c
  2064  000EB0  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2065  000EB2  22DA               	addwfc	fsr2h,f,c
  2066  000EB4  50DF               	movf	indf2,w,c
  2067  000EB6  010F               	movlb	15	; () banked
  2068  000EB8  6F4D               	movwf	77,b	;volatile
  2069                           
  2070                           ; BSR set to: 15
  2071                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2072  000EBA  010F               	movlb	15	; () banked
  2073  000EBC  8740               	bsf	64,3,b	;volatile
  2074                           
  2075                           ; BSR set to: 15
  2076                           ;inc\CANlib.h: 368: return;
  2077  000EBE  0012               	return	
  2078  000EC0                     l383:
  2079                           
  2080                           ; BSR set to: 15
  2081                           ;inc\CANlib.h: 369: }
  2082                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2083  000EC0  010F               	movlb	15	; () banked
  2084  000EC2  B730               	btfsc	48,3,b	;volatile
  2085  000EC4  D13F               	goto	l398
  2086                           
  2087                           ; BSR set to: 15
  2088                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2089  000EC6  C0D2  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2090                           
  2091                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2092  000ECA  0100               	movlb	0	; () banked
  2093  000ECC  ADD3               	btfss	CANsendMessage@flags& (0+255),6,b
  2094  000ECE  D003               	goto	l399
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2098  000ED0  010F               	movlb	15	; () banked
  2099  000ED2  8D35               	bsf	53,6,b	;volatile
  2100  000ED4  D002               	goto	l400
  2101  000ED6                     l399:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;inc\CANlib.h: 378: else
  2105                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2106  000ED6  010F               	movlb	15	; () banked
  2107  000ED8  9D35               	bcf	53,6,b	;volatile
  2108  000EDA                     l400:
  2109                           
  2110                           ; BSR set to: 15
  2111                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2112  000EDA  0100               	movlb	0	; () banked
  2113  000EDC  A7D3               	btfss	CANsendMessage@flags& (0+255),3,b
  2114  000EDE  D079               	goto	l401
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;inc\CANlib.h: 382: {
  2118                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2119  000EE0  0100               	movlb	0	; () banked
  2120  000EE2  51CC               	movf	CANsendMessage@identifier& (0+255),w,b
  2121  000EE4  0101               	movlb	1	; () banked
  2122  000EE6  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2123  000EE8  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2124  000EEA  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2125  000EEC  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2129  000EEE  C100  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2133  000EF2  0E00               	movlw	0
  2134  000EF4  0100               	movlb	0	; () banked
  2135  000EF6  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2136  000EF8  0101               	movlb	1	; () banked
  2137  000EFA  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2138  000EFC  0EFF               	movlw	255
  2139  000EFE  0100               	movlb	0	; () banked
  2140  000F00  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2141  000F02  0101               	movlb	1	; () banked
  2142  000F04  6F01               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2143  000F06  0E00               	movlw	0
  2144  000F08  0100               	movlb	0	; () banked
  2145  000F0A  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2146  000F0C  0101               	movlb	1	; () banked
  2147  000F0E  6F02               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2148  000F10  0E00               	movlw	0
  2149  000F12  0100               	movlb	0	; () banked
  2150  000F14  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2151  000F16  0101               	movlb	1	; () banked
  2152  000F18  6F03               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2156  000F1A  C100  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2157  000F1E  C101  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2158  000F22  C102  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2159  000F26  C103  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2160  000F2A  C0D5  F0D4         	movff	??_CANsendMessage+1,??_CANsendMessage
  2161  000F2E  C0D6  F0D5         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2162  000F32  C0D7  F0D6         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2163  000F36  0100               	movlb	0	; () banked
  2164  000F38  6BD7               	clrf	(??_CANsendMessage+3)& (0+255),b
  2165  000F3A  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2166  000F3E  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2167  000F42  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2168  000F46  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2172  000F4A  C100  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2176  000F4E  0E00               	movlw	0
  2177  000F50  010F               	movlb	15	; () banked
  2178  000F52  6F32               	movwf	50,b	;volatile
  2179                           
  2180                           ; BSR set to: 15
  2181                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2182  000F54  010F               	movlb	15	; () banked
  2183  000F56  8732               	bsf	50,3,b	;volatile
  2184                           
  2185                           ; BSR set to: 15
  2186                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2187  000F58  0100               	movlb	0	; () banked
  2188  000F5A  A1CE               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2189  000F5C  D002               	goto	l402
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2193  000F5E  010F               	movlb	15	; () banked
  2194  000F60  8132               	bsf	50,0,b	;volatile
  2195  000F62                     l402:
  2196                           
  2197                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2198  000F62  0100               	movlb	0	; () banked
  2199  000F64  A3CE               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2200  000F66  D002               	goto	l403
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2204  000F68  010F               	movlb	15	; () banked
  2205  000F6A  8332               	bsf	50,1,b	;volatile
  2206  000F6C                     l403:
  2207                           
  2208                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2209  000F6C  0100               	movlb	0	; () banked
  2210  000F6E  A5CE               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2211  000F70  D002               	goto	l404
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2215  000F72  010F               	movlb	15	; () banked
  2216  000F74  8B32               	bsf	50,5,b	;volatile
  2217  000F76                     l404:
  2218                           
  2219                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2220  000F76  0100               	movlb	0	; () banked
  2221  000F78  A7CE               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2222  000F7A  D002               	goto	l405
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2226  000F7C  010F               	movlb	15	; () banked
  2227  000F7E  8D32               	bsf	50,6,b	;volatile
  2228  000F80                     l405:
  2229                           
  2230                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2231  000F80  0100               	movlb	0	; () banked
  2232  000F82  A9CE               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2233  000F84  D002               	goto	l4834
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2237  000F86  010F               	movlb	15	; () banked
  2238  000F88  8F32               	bsf	50,7,b	;volatile
  2239  000F8A                     l4834:
  2240                           
  2241                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2242  000F8A  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2243  000F8E  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2244  000F92  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2245  000F96  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2246  000F9A  0E16               	movlw	22
  2247  000F9C  D006               	goto	u6050
  2248  000F9E                     u6055:
  2249  000F9E  0100               	movlb	0	; () banked
  2250  000FA0  90D8               	bcf	status,0,c
  2251  000FA2  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2252  000FA4  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2253  000FA6  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2254  000FA8  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2255  000FAA                     u6050:
  2256  000FAA  2EE8               	decfsz	wreg,f,c
  2257  000FAC  D7F8               	goto	u6055
  2258  000FAE  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2259  000FB2  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2260  000FB6  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2261  000FBA  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2265  000FBE  0101               	movlb	1	; () banked
  2266  000FC0  5100               	movf	CANsendMessage@tamp& (0+255),w,b
  2267  000FC2  0101               	movlb	1	; () banked
  2268  000FC4  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2269  000FC6  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2270  000FC8  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2271  000FCA  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2275  000FCC  C100  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2276                           
  2277                           ;inc\CANlib.h: 407: }
  2278  000FD0  D059               	goto	l4854
  2279  000FD2                     l401:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;inc\CANlib.h: 409: else
  2283                           ;inc\CANlib.h: 411: {
  2284                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2285  000FD2  010F               	movlb	15	; () banked
  2286  000FD4  9732               	bcf	50,3,b	;volatile
  2287                           
  2288                           ; BSR set to: 15
  2289                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2290  000FD6  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2291  000FDA  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2292  000FDE  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2293  000FE2  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2294  000FE6  0E04               	movlw	4
  2295  000FE8  D006               	goto	u6060
  2296  000FEA                     u6065:
  2297  000FEA  0100               	movlb	0	; () banked
  2298  000FEC  90D8               	bcf	status,0,c
  2299  000FEE  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2300  000FF0  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2301  000FF2  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2302  000FF4  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2303  000FF6                     u6060:
  2304  000FF6  2EE8               	decfsz	wreg,f,c
  2305  000FF8  D7F8               	goto	u6065
  2306  000FFA  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2307  000FFE  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2308  001002  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2309  001006  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2313  00100A  0101               	movlb	1	; () banked
  2314  00100C  5100               	movf	CANsendMessage@tamp& (0+255),w,b
  2315  00100E  0101               	movlb	1	; () banked
  2316  001010  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2317  001012  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2318  001014  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2319  001016  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2323  001018  C100  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2327  00101C  0E07               	movlw	7
  2328  00101E  0100               	movlb	0	; () banked
  2329  001020  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2330  001022  0101               	movlb	1	; () banked
  2331  001024  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2332  001026  0E00               	movlw	0
  2333  001028  0100               	movlb	0	; () banked
  2334  00102A  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2335  00102C  0101               	movlb	1	; () banked
  2336  00102E  6F01               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2337  001030  0E00               	movlw	0
  2338  001032  0100               	movlb	0	; () banked
  2339  001034  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2340  001036  0101               	movlb	1	; () banked
  2341  001038  6F02               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2342  00103A  0E00               	movlw	0
  2343  00103C  0100               	movlb	0	; () banked
  2344  00103E  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2345  001040  0101               	movlb	1	; () banked
  2346  001042  6F03               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2350  001044  C100  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2351  001048  C101  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2352  00104C  C102  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2353  001050  C103  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2354  001054  0E05               	movlw	5
  2355  001056                     u6075:
  2356  001056  90D8               	bcf	status,0,c
  2357  001058  0100               	movlb	0	; () banked
  2358  00105A  37D4               	rlcf	??_CANsendMessage& (0+255),f,b
  2359  00105C  37D5               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2360  00105E  37D6               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2361  001060  37D7               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2362  001062  2EE8               	decfsz	wreg,f,c
  2363  001064  D7F8               	goto	u6075
  2364  001066  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2365  00106A  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2366  00106E  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2367  001072  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2371  001076  010F               	movlb	15	; () banked
  2372  001078  5132               	movf	50,w,b	;volatile
  2373  00107A  0B1F               	andlw	31
  2374  00107C  010F               	movlb	15	; () banked
  2375  00107E  6F32               	movwf	50,b	;volatile
  2376                           
  2377                           ; BSR set to: 15
  2378                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2379  001080  C100  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2380  001084                     l4854:
  2381                           
  2382                           ;inc\CANlib.h: 422: }
  2383                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2384  001084  0100               	movlb	0	; () banked
  2385  001086  A1D3               	btfss	CANsendMessage@flags& (0+255),0,b
  2386  001088  D003               	goto	l408
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2390  00108A  010F               	movlb	15	; () banked
  2391  00108C  8130               	bsf	48,0,b	;volatile
  2392  00108E  D002               	goto	l409
  2393  001090                     l408:
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;inc\CANlib.h: 426: else
  2397                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2398  001090  010F               	movlb	15	; () banked
  2399  001092  9130               	bcf	48,0,b	;volatile
  2400  001094                     l409:
  2401                           
  2402                           ; BSR set to: 15
  2403                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2404  001094  0100               	movlb	0	; () banked
  2405  001096  A3D3               	btfss	CANsendMessage@flags& (0+255),1,b
  2406  001098  D003               	goto	l410
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2410  00109A  010F               	movlb	15	; () banked
  2411  00109C  8330               	bsf	48,1,b	;volatile
  2412  00109E  D002               	goto	l4860
  2413  0010A0                     l410:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;inc\CANlib.h: 430: else
  2417                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2418  0010A0  010F               	movlb	15	; () banked
  2419  0010A2  9330               	bcf	48,1,b	;volatile
  2420  0010A4                     l4860:
  2421                           
  2422                           ; BSR set to: 15
  2423                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2424  0010A4  C0D0  FFD9         	movff	CANsendMessage@data,fsr2l
  2425  0010A8  C0D1  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2426  0010AC  50DF               	movf	indf2,w,c
  2427  0010AE  010F               	movlb	15	; () banked
  2428  0010B0  6F36               	movwf	54,b	;volatile
  2429                           
  2430                           ; BSR set to: 15
  2431                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2432  0010B2  0100               	movlb	0	; () banked
  2433  0010B4  EE20 F001          	lfsr	2,1
  2434  0010B8  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2435  0010BA  26D9               	addwf	fsr2l,f,c
  2436  0010BC  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2437  0010BE  22DA               	addwfc	fsr2h,f,c
  2438  0010C0  50DF               	movf	indf2,w,c
  2439  0010C2  010F               	movlb	15	; () banked
  2440  0010C4  6F37               	movwf	55,b	;volatile
  2441                           
  2442                           ; BSR set to: 15
  2443                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2444  0010C6  0100               	movlb	0	; () banked
  2445  0010C8  EE20 F002          	lfsr	2,2
  2446  0010CC  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2447  0010CE  26D9               	addwf	fsr2l,f,c
  2448  0010D0  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2449  0010D2  22DA               	addwfc	fsr2h,f,c
  2450  0010D4  50DF               	movf	indf2,w,c
  2451  0010D6  010F               	movlb	15	; () banked
  2452  0010D8  6F38               	movwf	56,b	;volatile
  2453                           
  2454                           ; BSR set to: 15
  2455                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2456  0010DA  0100               	movlb	0	; () banked
  2457  0010DC  EE20 F003          	lfsr	2,3
  2458  0010E0  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2459  0010E2  26D9               	addwf	fsr2l,f,c
  2460  0010E4  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2461  0010E6  22DA               	addwfc	fsr2h,f,c
  2462  0010E8  50DF               	movf	indf2,w,c
  2463  0010EA  010F               	movlb	15	; () banked
  2464  0010EC  6F39               	movwf	57,b	;volatile
  2465                           
  2466                           ; BSR set to: 15
  2467                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2468  0010EE  0100               	movlb	0	; () banked
  2469  0010F0  EE20 F004          	lfsr	2,4
  2470  0010F4  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2471  0010F6  26D9               	addwf	fsr2l,f,c
  2472  0010F8  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2473  0010FA  22DA               	addwfc	fsr2h,f,c
  2474  0010FC  50DF               	movf	indf2,w,c
  2475  0010FE  010F               	movlb	15	; () banked
  2476  001100  6F3A               	movwf	58,b	;volatile
  2477                           
  2478                           ; BSR set to: 15
  2479                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2480  001102  0100               	movlb	0	; () banked
  2481  001104  EE20 F005          	lfsr	2,5
  2482  001108  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2483  00110A  26D9               	addwf	fsr2l,f,c
  2484  00110C  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2485  00110E  22DA               	addwfc	fsr2h,f,c
  2486  001110  50DF               	movf	indf2,w,c
  2487  001112  010F               	movlb	15	; () banked
  2488  001114  6F3B               	movwf	59,b	;volatile
  2489                           
  2490                           ; BSR set to: 15
  2491                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2492  001116  0100               	movlb	0	; () banked
  2493  001118  EE20 F006          	lfsr	2,6
  2494  00111C  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2495  00111E  26D9               	addwf	fsr2l,f,c
  2496  001120  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2497  001122  22DA               	addwfc	fsr2h,f,c
  2498  001124  50DF               	movf	indf2,w,c
  2499  001126  010F               	movlb	15	; () banked
  2500  001128  6F3C               	movwf	60,b	;volatile
  2501                           
  2502                           ; BSR set to: 15
  2503                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2504  00112A  0100               	movlb	0	; () banked
  2505  00112C  EE20 F007          	lfsr	2,7
  2506  001130  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2507  001132  26D9               	addwf	fsr2l,f,c
  2508  001134  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2509  001136  22DA               	addwfc	fsr2h,f,c
  2510  001138  50DF               	movf	indf2,w,c
  2511  00113A  010F               	movlb	15	; () banked
  2512  00113C  6F3D               	movwf	61,b	;volatile
  2513                           
  2514                           ; BSR set to: 15
  2515                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2516  00113E  010F               	movlb	15	; () banked
  2517  001140  8730               	bsf	48,3,b	;volatile
  2518                           
  2519                           ; BSR set to: 15
  2520                           ;inc\CANlib.h: 444: return;
  2521  001142  0012               	return	
  2522  001144                     l398:
  2523                           
  2524                           ; BSR set to: 15
  2525                           ;inc\CANlib.h: 445: }
  2526                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2527  001144  010F               	movlb	15	; () banked
  2528  001146  B720               	btfsc	32,3,b	;volatile
  2529  001148  0012               	return	
  2530                           
  2531                           ; BSR set to: 15
  2532                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2533  00114A  C0D2  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2534                           
  2535                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2536  00114E  0100               	movlb	0	; () banked
  2537  001150  ADD3               	btfss	CANsendMessage@flags& (0+255),6,b
  2538  001152  D003               	goto	l413
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2542  001154  010F               	movlb	15	; () banked
  2543  001156  8D25               	bsf	37,6,b	;volatile
  2544  001158  D002               	goto	l414
  2545  00115A                     l413:
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;inc\CANlib.h: 454: else
  2549                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2550  00115A  010F               	movlb	15	; () banked
  2551  00115C  9D25               	bcf	37,6,b	;volatile
  2552  00115E                     l414:
  2553                           
  2554                           ; BSR set to: 15
  2555                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2556  00115E  0100               	movlb	0	; () banked
  2557  001160  A7D3               	btfss	CANsendMessage@flags& (0+255),3,b
  2558  001162  D079               	goto	l415
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;inc\CANlib.h: 458: {
  2562                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2563  001164  0100               	movlb	0	; () banked
  2564  001166  51CC               	movf	CANsendMessage@identifier& (0+255),w,b
  2565  001168  0101               	movlb	1	; () banked
  2566  00116A  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2567  00116C  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2568  00116E  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2569  001170  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2570                           
  2571                           ; BSR set to: 1
  2572                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2573  001172  C100  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2574                           
  2575                           ; BSR set to: 1
  2576                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2577  001176  0E00               	movlw	0
  2578  001178  0100               	movlb	0	; () banked
  2579  00117A  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2580  00117C  0101               	movlb	1	; () banked
  2581  00117E  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2582  001180  0EFF               	movlw	255
  2583  001182  0100               	movlb	0	; () banked
  2584  001184  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2585  001186  0101               	movlb	1	; () banked
  2586  001188  6F01               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2587  00118A  0E00               	movlw	0
  2588  00118C  0100               	movlb	0	; () banked
  2589  00118E  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2590  001190  0101               	movlb	1	; () banked
  2591  001192  6F02               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2592  001194  0E00               	movlw	0
  2593  001196  0100               	movlb	0	; () banked
  2594  001198  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2595  00119A  0101               	movlb	1	; () banked
  2596  00119C  6F03               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2597                           
  2598                           ; BSR set to: 1
  2599                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2600  00119E  C100  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2601  0011A2  C101  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2602  0011A6  C102  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2603  0011AA  C103  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2604  0011AE  C0D5  F0D4         	movff	??_CANsendMessage+1,??_CANsendMessage
  2605  0011B2  C0D6  F0D5         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2606  0011B6  C0D7  F0D6         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2607  0011BA  0100               	movlb	0	; () banked
  2608  0011BC  6BD7               	clrf	(??_CANsendMessage+3)& (0+255),b
  2609  0011BE  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2610  0011C2  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2611  0011C6  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2612  0011CA  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2616  0011CE  C100  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2620  0011D2  0E00               	movlw	0
  2621  0011D4  010F               	movlb	15	; () banked
  2622  0011D6  6F22               	movwf	34,b	;volatile
  2623                           
  2624                           ; BSR set to: 15
  2625                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2626  0011D8  010F               	movlb	15	; () banked
  2627  0011DA  8722               	bsf	34,3,b	;volatile
  2628                           
  2629                           ; BSR set to: 15
  2630                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2631  0011DC  0100               	movlb	0	; () banked
  2632  0011DE  A1CE               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2633  0011E0  D002               	goto	l416
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2637  0011E2  010F               	movlb	15	; () banked
  2638  0011E4  8122               	bsf	34,0,b	;volatile
  2639  0011E6                     l416:
  2640                           
  2641                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2642  0011E6  0100               	movlb	0	; () banked
  2643  0011E8  A3CE               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2644  0011EA  D002               	goto	l417
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2648  0011EC  010F               	movlb	15	; () banked
  2649  0011EE  8322               	bsf	34,1,b	;volatile
  2650  0011F0                     l417:
  2651                           
  2652                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2653  0011F0  0100               	movlb	0	; () banked
  2654  0011F2  A5CE               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2655  0011F4  D002               	goto	l418
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2659  0011F6  010F               	movlb	15	; () banked
  2660  0011F8  8B22               	bsf	34,5,b	;volatile
  2661  0011FA                     l418:
  2662                           
  2663                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2664  0011FA  0100               	movlb	0	; () banked
  2665  0011FC  A7CE               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2666  0011FE  D002               	goto	l419
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2670  001200  010F               	movlb	15	; () banked
  2671  001202  8D22               	bsf	34,6,b	;volatile
  2672  001204                     l419:
  2673                           
  2674                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2675  001204  0100               	movlb	0	; () banked
  2676  001206  A9CE               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2677  001208  D002               	goto	l4910
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2681  00120A  010F               	movlb	15	; () banked
  2682  00120C  8F22               	bsf	34,7,b	;volatile
  2683  00120E                     l4910:
  2684                           
  2685                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2686  00120E  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2687  001212  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2688  001216  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2689  00121A  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2690  00121E  0E16               	movlw	22
  2691  001220  D006               	goto	u6180
  2692  001222                     u6185:
  2693  001222  0100               	movlb	0	; () banked
  2694  001224  90D8               	bcf	status,0,c
  2695  001226  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2696  001228  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2697  00122A  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2698  00122C  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2699  00122E                     u6180:
  2700  00122E  2EE8               	decfsz	wreg,f,c
  2701  001230  D7F8               	goto	u6185
  2702  001232  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2703  001236  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2704  00123A  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2705  00123E  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2709  001242  0101               	movlb	1	; () banked
  2710  001244  5100               	movf	CANsendMessage@tamp& (0+255),w,b
  2711  001246  0101               	movlb	1	; () banked
  2712  001248  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2713  00124A  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2714  00124C  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2715  00124E  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2716                           
  2717                           ; BSR set to: 1
  2718                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2719  001250  C100  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2720                           
  2721                           ;inc\CANlib.h: 483: }
  2722  001254  D059               	goto	l4930
  2723  001256                     l415:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;inc\CANlib.h: 485: else
  2727                           ;inc\CANlib.h: 487: {
  2728                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2729  001256  010F               	movlb	15	; () banked
  2730  001258  9722               	bcf	34,3,b	;volatile
  2731                           
  2732                           ; BSR set to: 15
  2733                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2734  00125A  C0CC  F0D4         	movff	CANsendMessage@identifier,??_CANsendMessage
  2735  00125E  C0CD  F0D5         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2736  001262  C0CE  F0D6         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2737  001266  C0CF  F0D7         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2738  00126A  0E04               	movlw	4
  2739  00126C  D006               	goto	u6190
  2740  00126E                     u6195:
  2741  00126E  0100               	movlb	0	; () banked
  2742  001270  90D8               	bcf	status,0,c
  2743  001272  33D7               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2744  001274  33D6               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2745  001276  33D5               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2746  001278  33D4               	rrcf	??_CANsendMessage& (0+255),f,b
  2747  00127A                     u6190:
  2748  00127A  2EE8               	decfsz	wreg,f,c
  2749  00127C  D7F8               	goto	u6195
  2750  00127E  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2751  001282  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2752  001286  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2753  00128A  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2757  00128E  0101               	movlb	1	; () banked
  2758  001290  5100               	movf	CANsendMessage@tamp& (0+255),w,b
  2759  001292  0101               	movlb	1	; () banked
  2760  001294  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2761  001296  6B01               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2762  001298  6B02               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2763  00129A  6B03               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2764                           
  2765                           ; BSR set to: 1
  2766                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2767  00129C  C100  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2768                           
  2769                           ; BSR set to: 1
  2770                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2771  0012A0  0E07               	movlw	7
  2772  0012A2  0100               	movlb	0	; () banked
  2773  0012A4  15CC               	andwf	CANsendMessage@identifier& (0+255),w,b
  2774  0012A6  0101               	movlb	1	; () banked
  2775  0012A8  6F00               	movwf	CANsendMessage@tamp& (0+255),b
  2776  0012AA  0E00               	movlw	0
  2777  0012AC  0100               	movlb	0	; () banked
  2778  0012AE  15CD               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2779  0012B0  0101               	movlb	1	; () banked
  2780  0012B2  6F01               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2781  0012B4  0E00               	movlw	0
  2782  0012B6  0100               	movlb	0	; () banked
  2783  0012B8  15CE               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2784  0012BA  0101               	movlb	1	; () banked
  2785  0012BC  6F02               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2786  0012BE  0E00               	movlw	0
  2787  0012C0  0100               	movlb	0	; () banked
  2788  0012C2  15CF               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2789  0012C4  0101               	movlb	1	; () banked
  2790  0012C6  6F03               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2791                           
  2792                           ; BSR set to: 1
  2793                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2794  0012C8  C100  F0D4         	movff	CANsendMessage@tamp,??_CANsendMessage
  2795  0012CC  C101  F0D5         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2796  0012D0  C102  F0D6         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2797  0012D4  C103  F0D7         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2798  0012D8  0E05               	movlw	5
  2799  0012DA                     u6205:
  2800  0012DA  90D8               	bcf	status,0,c
  2801  0012DC  0100               	movlb	0	; () banked
  2802  0012DE  37D4               	rlcf	??_CANsendMessage& (0+255),f,b
  2803  0012E0  37D5               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2804  0012E2  37D6               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2805  0012E4  37D7               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2806  0012E6  2EE8               	decfsz	wreg,f,c
  2807  0012E8  D7F8               	goto	u6205
  2808  0012EA  C0D4  F100         	movff	??_CANsendMessage,CANsendMessage@tamp
  2809  0012EE  C0D5  F101         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2810  0012F2  C0D6  F102         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2811  0012F6  C0D7  F103         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2815  0012FA  010F               	movlb	15	; () banked
  2816  0012FC  5122               	movf	34,w,b	;volatile
  2817  0012FE  0B1F               	andlw	31
  2818  001300  010F               	movlb	15	; () banked
  2819  001302  6F22               	movwf	34,b	;volatile
  2820                           
  2821                           ; BSR set to: 15
  2822                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2823  001304  C100  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2824  001308                     l4930:
  2825                           
  2826                           ;inc\CANlib.h: 498: }
  2827                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2828  001308  0100               	movlb	0	; () banked
  2829  00130A  A1D3               	btfss	CANsendMessage@flags& (0+255),0,b
  2830  00130C  D003               	goto	l422
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2834  00130E  010F               	movlb	15	; () banked
  2835  001310  8120               	bsf	32,0,b	;volatile
  2836  001312  D002               	goto	l423
  2837  001314                     l422:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;inc\CANlib.h: 502: else
  2841                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2842  001314  010F               	movlb	15	; () banked
  2843  001316  9120               	bcf	32,0,b	;volatile
  2844  001318                     l423:
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2848  001318  0100               	movlb	0	; () banked
  2849  00131A  A3D3               	btfss	CANsendMessage@flags& (0+255),1,b
  2850  00131C  D003               	goto	l424
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2854  00131E  010F               	movlb	15	; () banked
  2855  001320  8320               	bsf	32,1,b	;volatile
  2856  001322  D002               	goto	l4936
  2857  001324                     l424:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;inc\CANlib.h: 506: else
  2861                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2862  001324  010F               	movlb	15	; () banked
  2863  001326  9320               	bcf	32,1,b	;volatile
  2864  001328                     l4936:
  2865                           
  2866                           ; BSR set to: 15
  2867                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2868  001328  C0D0  FFD9         	movff	CANsendMessage@data,fsr2l
  2869  00132C  C0D1  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2870  001330  50DF               	movf	indf2,w,c
  2871  001332  010F               	movlb	15	; () banked
  2872  001334  6F26               	movwf	38,b	;volatile
  2873                           
  2874                           ; BSR set to: 15
  2875                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2876  001336  0100               	movlb	0	; () banked
  2877  001338  EE20 F001          	lfsr	2,1
  2878  00133C  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2879  00133E  26D9               	addwf	fsr2l,f,c
  2880  001340  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2881  001342  22DA               	addwfc	fsr2h,f,c
  2882  001344  50DF               	movf	indf2,w,c
  2883  001346  010F               	movlb	15	; () banked
  2884  001348  6F27               	movwf	39,b	;volatile
  2885                           
  2886                           ; BSR set to: 15
  2887                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2888  00134A  0100               	movlb	0	; () banked
  2889  00134C  EE20 F002          	lfsr	2,2
  2890  001350  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2891  001352  26D9               	addwf	fsr2l,f,c
  2892  001354  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2893  001356  22DA               	addwfc	fsr2h,f,c
  2894  001358  50DF               	movf	indf2,w,c
  2895  00135A  010F               	movlb	15	; () banked
  2896  00135C  6F28               	movwf	40,b	;volatile
  2897                           
  2898                           ; BSR set to: 15
  2899                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2900  00135E  0100               	movlb	0	; () banked
  2901  001360  EE20 F003          	lfsr	2,3
  2902  001364  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2903  001366  26D9               	addwf	fsr2l,f,c
  2904  001368  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2905  00136A  22DA               	addwfc	fsr2h,f,c
  2906  00136C  50DF               	movf	indf2,w,c
  2907  00136E  010F               	movlb	15	; () banked
  2908  001370  6F29               	movwf	41,b	;volatile
  2909                           
  2910                           ; BSR set to: 15
  2911                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2912  001372  0100               	movlb	0	; () banked
  2913  001374  EE20 F004          	lfsr	2,4
  2914  001378  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2915  00137A  26D9               	addwf	fsr2l,f,c
  2916  00137C  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2917  00137E  22DA               	addwfc	fsr2h,f,c
  2918  001380  50DF               	movf	indf2,w,c
  2919  001382  010F               	movlb	15	; () banked
  2920  001384  6F2A               	movwf	42,b	;volatile
  2921                           
  2922                           ; BSR set to: 15
  2923                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2924  001386  0100               	movlb	0	; () banked
  2925  001388  EE20 F005          	lfsr	2,5
  2926  00138C  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2927  00138E  26D9               	addwf	fsr2l,f,c
  2928  001390  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2929  001392  22DA               	addwfc	fsr2h,f,c
  2930  001394  50DF               	movf	indf2,w,c
  2931  001396  010F               	movlb	15	; () banked
  2932  001398  6F2B               	movwf	43,b	;volatile
  2933                           
  2934                           ; BSR set to: 15
  2935                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2936  00139A  0100               	movlb	0	; () banked
  2937  00139C  EE20 F006          	lfsr	2,6
  2938  0013A0  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2939  0013A2  26D9               	addwf	fsr2l,f,c
  2940  0013A4  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2941  0013A6  22DA               	addwfc	fsr2h,f,c
  2942  0013A8  50DF               	movf	indf2,w,c
  2943  0013AA  010F               	movlb	15	; () banked
  2944  0013AC  6F2C               	movwf	44,b	;volatile
  2945                           
  2946                           ; BSR set to: 15
  2947                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2948  0013AE  0100               	movlb	0	; () banked
  2949  0013B0  EE20 F007          	lfsr	2,7
  2950  0013B4  51D0               	movf	CANsendMessage@data& (0+255),w,b
  2951  0013B6  26D9               	addwf	fsr2l,f,c
  2952  0013B8  51D1               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2953  0013BA  22DA               	addwfc	fsr2h,f,c
  2954  0013BC  50DF               	movf	indf2,w,c
  2955  0013BE  010F               	movlb	15	; () banked
  2956  0013C0  6F2D               	movwf	45,b	;volatile
  2957                           
  2958                           ; BSR set to: 15
  2959                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2960  0013C2  010F               	movlb	15	; () banked
  2961  0013C4  8720               	bsf	32,3,b	;volatile
  2962                           
  2963                           ; BSR set to: 15
  2964                           ;inc\CANlib.h: 520: return;
  2965  0013C6  0012               	return	
  2966  0013C8                     __end_of_CANsendMessage:
  2967                           	opt stack 0
  2968                           tblptru	equ	0xFF8
  2969                           tblptrh	equ	0xFF7
  2970                           tblptrl	equ	0xFF6
  2971                           tablat	equ	0xFF5
  2972                           prodh	equ	0xFF4
  2973                           prodl	equ	0xFF3
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postdec1	equ	0xFE5
  2977                           fsr1l	equ	0xFE1
  2978                           indf2	equ	0xFDF
  2979                           fsr2h	equ	0xFDA
  2980                           fsr2l	equ	0xFD9
  2981                           status	equ	0xFD8
  2982                           
  2983 ;; *************** function _CANisTxReady *****************
  2984 ;; Defined at:
  2985 ;;		line 1154 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      unsigned char 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2999 ;;      Params:         0       0       0       0
  3000 ;;      Locals:         0       1       0       0
  3001 ;;      Temps:          0       0       0       0
  3002 ;;      Totals:         0       1       0       0
  3003 ;;Total ram usage:        1 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    4
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_remote_frame_handler
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text3
  3014  002A20                     __ptext3:
  3015                           	opt stack 0
  3016  002A20                     _CANisTxReady:
  3017                           	opt stack 25
  3018                           
  3019                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3020                           
  3021                           ; BSR set to: 15
  3022                           ;incstack = 0
  3023  002A20  0E01               	movlw	1
  3024  002A22  0100               	movlb	0	; () banked
  3025  002A24  6FCC               	movwf	_CANisTxReady$3282& (0+255),b
  3026                           
  3027                           ; BSR set to: 0
  3028  002A26  010F               	movlb	15	; () banked
  3029  002A28  A740               	btfss	64,3,b	;volatile
  3030  002A2A  D009               	goto	l576
  3031                           
  3032                           ; BSR set to: 15
  3033  002A2C  010F               	movlb	15	; () banked
  3034  002A2E  A730               	btfss	48,3,b	;volatile
  3035  002A30  D006               	goto	l576
  3036                           
  3037                           ; BSR set to: 15
  3038  002A32  010F               	movlb	15	; () banked
  3039  002A34  A720               	btfss	32,3,b	;volatile
  3040  002A36  D003               	goto	l576
  3041                           
  3042                           ; BSR set to: 15
  3043  002A38  0E00               	movlw	0
  3044  002A3A  0100               	movlb	0	; () banked
  3045  002A3C  6FCC               	movwf	_CANisTxReady$3282& (0+255),b
  3046  002A3E                     l576:
  3047  002A3E  0100               	movlb	0	; () banked
  3048  002A40  51CC               	movf	_CANisTxReady$3282& (0+255),w,b
  3049  002A42  0012               	return	
  3050  002A44                     __end_of_CANisTxReady:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           prodh	equ	0xFF4
  3057                           prodl	equ	0xFF3
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           postdec1	equ	0xFE5
  3061                           fsr1l	equ	0xFE1
  3062                           indf2	equ	0xFDF
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function _delay_ms *****************
  3068 ;; Defined at:
  3069 ;;		line 61 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  value_ms        2   34[BANK0 ] unsigned int 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;		None               void
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3083 ;;      Params:         0       2       0       0
  3084 ;;      Locals:         0       0       0       0
  3085 ;;      Temps:          0       0       0       0
  3086 ;;      Totals:         0       2       0       0
  3087 ;;Total ram usage:        2 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		___wmul
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;;		_delay_s
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text4
  3099  00298A                     __ptext4:
  3100                           	opt stack 0
  3101  00298A                     _delay_ms:
  3102                           	opt stack 25
  3103                           
  3104                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;incstack = 0
  3108  00298A  C0DA  F0CC         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3109  00298E  0100               	movlb	0	; () banked
  3110  002990  6BCD               	clrf	(___wmul@multiplier+1)& (0+255),b
  3111  002992  C0D2  F0CE         	movff	delay_ms@value_ms,___wmul@multiplicand
  3112  002996  C0D3  F0CF         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3113  00299A  ECE2  F014         	call	___wmul	;wreg free
  3114  00299E  C0CC  F07C         	movff	?___wmul,_clock_counter_reference	;volatile
  3115  0029A2  C0CD  F07D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3116                           
  3117                           ;src\delay.c: 75: while (clock_counter_reference) {
  3118  0029A6  D007               	goto	l589
  3119  0029A8                     l3746:
  3120                           
  3121                           ;src\delay.c: 85: _delay(240);
  3122  0029A8  0E50               	movlw	80
  3123  0029AA                     u6717:
  3124  0029AA  2EE8               	decfsz	wreg,f,c
  3125  0029AC  D7FE               	goto	u6717
  3126                           
  3127                           ;src\delay.c: 88: clock_counter_reference--;
  3128  0029AE  0100               	movlb	0	; () banked
  3129  0029B0  077C               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3130  0029B2  A0D8               	btfss	status,0,c
  3131  0029B4  077D               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3132  0029B6                     l589:
  3133  0029B6  0100               	movlb	0	; () banked
  3134  0029B8  517C               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3135  0029BA  0100               	movlb	0	; () banked
  3136  0029BC  117D               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3137  0029BE  B4D8               	btfsc	status,2,c
  3138  0029C0  0012               	return	
  3139  0029C2  D7F2               	goto	l3746
  3140  0029C4                     __end_of_delay_ms:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           indf2	equ	0xFDF
  3153                           fsr2h	equ	0xFDA
  3154                           fsr2l	equ	0xFD9
  3155                           status	equ	0xFD8
  3156                           
  3157 ;; *************** function ___wmul *****************
  3158 ;; Defined at:
  3159 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  multiplier      2   28[BANK0 ] unsigned int 
  3162 ;;  multiplicand    2   30[BANK0 ] unsigned int 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  product         2   32[BANK0 ] unsigned int 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2   28[BANK0 ] unsigned int 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, prodl, prodh
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3174 ;;      Params:         0       4       0       0
  3175 ;;      Locals:         0       2       0       0
  3176 ;;      Temps:          0       0       0       0
  3177 ;;      Totals:         0       6       0       0
  3178 ;;Total ram usage:        6 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    4
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_delay_ms
  3185 ;;		_main
  3186 ;;		_remote_frame_handler
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text5
  3191  0029C4                     __ptext5:
  3192                           	opt stack 0
  3193  0029C4                     ___wmul:
  3194                           	opt stack 25
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;incstack = 0
  3198  0029C4  0100               	movlb	0	; () banked
  3199  0029C6  51CC               	movf	___wmul@multiplier& (0+255),w,b
  3200  0029C8  0100               	movlb	0	; () banked
  3201  0029CA  03CE               	mulwf	___wmul@multiplicand& (0+255),b
  3202  0029CC  CFF3 F0D0          	movff	prodl,___wmul@product
  3203  0029D0  CFF4 F0D1          	movff	prodh,___wmul@product+1
  3204  0029D4  0100               	movlb	0	; () banked
  3205  0029D6  51CC               	movf	___wmul@multiplier& (0+255),w,b
  3206  0029D8  0100               	movlb	0	; () banked
  3207  0029DA  03CF               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3208  0029DC  50F3               	movf	prodl,w,c
  3209  0029DE  0100               	movlb	0	; () banked
  3210  0029E0  27D1               	addwf	(___wmul@product+1)& (0+255),f,b
  3211  0029E2  0100               	movlb	0	; () banked
  3212  0029E4  51CD               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3213  0029E6  0100               	movlb	0	; () banked
  3214  0029E8  03CE               	mulwf	___wmul@multiplicand& (0+255),b
  3215  0029EA  50F3               	movf	prodl,w,c
  3216  0029EC  0100               	movlb	0	; () banked
  3217  0029EE  27D1               	addwf	(___wmul@product+1)& (0+255),f,b
  3218                           
  3219                           ; BSR set to: 0
  3220  0029F0  C0D0  F0CC         	movff	___wmul@product,?___wmul
  3221  0029F4  C0D1  F0CD         	movff	___wmul@product+1,?___wmul+1
  3222  0029F8  0012               	return	
  3223  0029FA                     __end_of___wmul:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           prodh	equ	0xFF4
  3230                           prodl	equ	0xFF3
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           postdec1	equ	0xFE5
  3234                           fsr1l	equ	0xFE1
  3235                           indf2	equ	0xFDF
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function _board_initialization *****************
  3241 ;; Defined at:
  3242 ;;		line 396 in file "ABS_Code.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;		None               void
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3256 ;;      Params:         0       0       0       0
  3257 ;;      Locals:         0       0       0       0
  3258 ;;      Temps:          0       0       0       0
  3259 ;;      Totals:         0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    6
  3263 ;; This function calls:
  3264 ;;		_CANInitialize
  3265 ;; This function is called by:
  3266 ;;		_main
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text6
  3271  0026E6                     __ptext6:
  3272                           	opt stack 0
  3273  0026E6                     _board_initialization:
  3274                           	opt stack 24
  3275                           
  3276                           ;ABS_Code.c: 398: LATA = 0x00;
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;incstack = 0
  3280  0026E6  0E00               	movlw	0
  3281  0026E8  6E89               	movwf	3977,c	;volatile
  3282                           
  3283                           ;ABS_Code.c: 399: TRISA = 0b11111101;
  3284  0026EA  0EFD               	movlw	253
  3285  0026EC  6E92               	movwf	3986,c	;volatile
  3286                           
  3287                           ;ABS_Code.c: 400: LATB = 0x00;
  3288  0026EE  0E00               	movlw	0
  3289  0026F0  6E8A               	movwf	3978,c	;volatile
  3290                           
  3291                           ;ABS_Code.c: 401: TRISB = 0b11111111;
  3292  0026F2  6893               	setf	3987,c	;volatile
  3293                           
  3294                           ;ABS_Code.c: 402: LATC = 0x00;
  3295  0026F4  0E00               	movlw	0
  3296  0026F6  6E8B               	movwf	3979,c	;volatile
  3297                           
  3298                           ;ABS_Code.c: 403: TRISC = 0b11111100;
  3299  0026F8  0EFC               	movlw	252
  3300  0026FA  6E94               	movwf	3988,c	;volatile
  3301                           
  3302                           ;ABS_Code.c: 404: LATD = 0x00;
  3303  0026FC  0E00               	movlw	0
  3304  0026FE  6E8C               	movwf	3980,c	;volatile
  3305                           
  3306                           ;ABS_Code.c: 405: TRISD = 0xFF;
  3307  002700  6895               	setf	3989,c	;volatile
  3308                           
  3309                           ;ABS_Code.c: 406: LATE = 0x00;
  3310  002702  0E00               	movlw	0
  3311  002704  6E8D               	movwf	3981,c	;volatile
  3312                           
  3313                           ;ABS_Code.c: 407: TRISE = 0xFF;
  3314  002706  6896               	setf	3990,c	;volatile
  3315                           
  3316                           ;ABS_Code.c: 409: ADCON1 = 0b11111110;
  3317  002708  0EFE               	movlw	254
  3318  00270A  6EC1               	movwf	4033,c	;volatile
  3319                           
  3320                           ;ABS_Code.c: 412: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3321  00270C  0E06               	movlw	6
  3322  00270E  0101               	movlb	1	; () banked
  3323  002710  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3324  002712  0E05               	movlw	5
  3325  002714  0101               	movlb	1	; () banked
  3326  002716  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3327  002718  0E01               	movlw	1
  3328  00271A  0101               	movlb	1	; () banked
  3329  00271C  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3330  00271E  0E03               	movlw	3
  3331  002720  0101               	movlb	1	; () banked
  3332  002722  6F03               	movwf	CANInitialize@BRP& (0+255),b
  3333  002724  0E9D               	movlw	157
  3334  002726  0101               	movlb	1	; () banked
  3335  002728  6F04               	movwf	CANInitialize@flags& (0+255),b
  3336  00272A  0E04               	movlw	4
  3337  00272C  ECA4  F011         	call	_CANInitialize
  3338                           
  3339                           ;ABS_Code.c: 415: PIR3bits.RXB1IF = 0;
  3340  002730  92A4               	bcf	4004,1,c	;volatile
  3341                           
  3342                           ;ABS_Code.c: 416: PIR3bits.RXB0IF = 0;
  3343  002732  90A4               	bcf	4004,0,c	;volatile
  3344                           
  3345                           ;ABS_Code.c: 417: INTCONbits.TMR0IF = 0;
  3346  002734  94F2               	bcf	intcon,2,c	;volatile
  3347                           
  3348                           ;ABS_Code.c: 418: PIR1bits.TMR1IF = 0;
  3349  002736  909E               	bcf	3998,0,c	;volatile
  3350                           
  3351                           ;ABS_Code.c: 419: PIR2bits.TMR3IF = 0;
  3352  002738  92A1               	bcf	4001,1,c	;volatile
  3353                           
  3354                           ;ABS_Code.c: 420: INTCONbits.INT0IF = 0;
  3355  00273A  92F2               	bcf	intcon,1,c	;volatile
  3356                           
  3357                           ;ABS_Code.c: 421: INTCON3bits.INT1IF = 0;
  3358  00273C  90F0               	bcf	intcon3,0,c	;volatile
  3359                           
  3360                           ;ABS_Code.c: 425: RCONbits.IPEN = 1;
  3361  00273E  8ED0               	bsf	4048,7,c	;volatile
  3362                           
  3363                           ;ABS_Code.c: 426: IPR3bits.RXB1IP = 0;
  3364  002740  92A5               	bcf	4005,1,c	;volatile
  3365                           
  3366                           ;ABS_Code.c: 427: IPR3bits.RXB0IP = 0;
  3367  002742  90A5               	bcf	4005,0,c	;volatile
  3368                           
  3369                           ;ABS_Code.c: 428: INTCON2bits.TMR0IP = 1;
  3370  002744  84F1               	bsf	intcon2,2,c	;volatile
  3371                           
  3372                           ;ABS_Code.c: 429: INTCON3bits.INT1IP = 1;
  3373  002746  8CF0               	bsf	intcon3,6,c	;volatile
  3374                           
  3375                           ;ABS_Code.c: 430: IPR1bits.TMR1IP = 0;
  3376  002748  909F               	bcf	3999,0,c	;volatile
  3377                           
  3378                           ;ABS_Code.c: 431: IPR2bits.TMR3IP = 0;
  3379  00274A  92A2               	bcf	4002,1,c	;volatile
  3380                           
  3381                           ;ABS_Code.c: 434: T0CON = 0x80;
  3382  00274C  0E80               	movlw	128
  3383  00274E  6ED5               	movwf	4053,c	;volatile
  3384                           
  3385                           ;ABS_Code.c: 441: TMR0H = 0xFF;
  3386  002750  68D7               	setf	4055,c	;volatile
  3387                           
  3388                           ;ABS_Code.c: 442: TMR0L = 0xFE;
  3389  002752  0EFE               	movlw	254
  3390  002754  6ED6               	movwf	4054,c	;volatile
  3391                           
  3392                           ;ABS_Code.c: 443: PORTCbits.RC0 = 0;
  3393  002756  9082               	bcf	3970,0,c	;volatile
  3394                           
  3395                           ;ABS_Code.c: 444: brake_value_degree = 90;
  3396  002758  0E5A               	movlw	90
  3397  00275A  0100               	movlb	0	; () banked
  3398  00275C  6FAF               	movwf	_brake_value_degree& (0+255),b
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;ABS_Code.c: 445: T1CON = 00110000;
  3402  00275E  0E00               	movlw	0
  3403  002760  6ECD               	movwf	4045,c	;volatile
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;ABS_Code.c: 446: T3CON = 01110000;
  3407  002762  0E00               	movlw	0
  3408  002764  6EB1               	movwf	4017,c	;volatile
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;ABS_Code.c: 447: INTCON2bits.INTEDG0 = 1;
  3412  002766  8CF1               	bsf	intcon2,6,c	;volatile
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;ABS_Code.c: 448: INTCON2bits.INTEDG1 = 1;
  3416  002768  8AF1               	bsf	intcon2,5,c	;volatile
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;ABS_Code.c: 451: ADCON1 = 0b00001110;
  3420  00276A  0E0E               	movlw	14
  3421  00276C  6EC1               	movwf	4033,c	;volatile
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;ABS_Code.c: 452: ADCON0bits.CHS2 = 0;
  3425  00276E  98C2               	bcf	4034,4,c	;volatile
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;ABS_Code.c: 453: ADCON0bits.CHS1 = 0;
  3429  002770  96C2               	bcf	4034,3,c	;volatile
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;ABS_Code.c: 454: ADCON0bits.CHS0 = 0;
  3433  002772  94C2               	bcf	4034,2,c	;volatile
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;ABS_Code.c: 455: ADCON2bits.ACQT2 = 1;
  3437  002774  8AC0               	bsf	4032,5,c	;volatile
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;ABS_Code.c: 456: ADCON2bits.ACQT1 = 1;
  3441  002776  88C0               	bsf	4032,4,c	;volatile
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;ABS_Code.c: 457: ADCON2bits.ACQT0 = 0;
  3445  002778  96C0               	bcf	4032,3,c	;volatile
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;ABS_Code.c: 458: ADCON2bits.ADCS2 = 1;
  3449  00277A  84C0               	bsf	4032,2,c	;volatile
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;ABS_Code.c: 459: ADCON2bits.ADCS1 = 0;
  3453  00277C  92C0               	bcf	4032,1,c	;volatile
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;ABS_Code.c: 460: ADCON2bits.ADCS0 = 1;
  3457  00277E  80C0               	bsf	4032,0,c	;volatile
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;ABS_Code.c: 461: ADCON2bits.ADFM = 0;
  3461  002780  9EC0               	bcf	4032,7,c	;volatile
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;ABS_Code.c: 462: ADCON0bits.ADON = 1;
  3465  002782  80C2               	bsf	4034,0,c	;volatile
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;ABS_Code.c: 465: PIE3bits.RXB1IE = 1;
  3469  002784  82A3               	bsf	4003,1,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;ABS_Code.c: 466: PIE3bits.RXB0IE = 1;
  3473  002786  80A3               	bsf	4003,0,c	;volatile
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;ABS_Code.c: 467: INTCONbits.TMR0IE = 1;
  3477  002788  8AF2               	bsf	intcon,5,c	;volatile
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;ABS_Code.c: 468: PIE1bits.TMR1IE = 1;
  3481  00278A  809D               	bsf	3997,0,c	;volatile
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;ABS_Code.c: 469: PIE2bits.TMR3IE = 1;
  3485  00278C  82A0               	bsf	4000,1,c	;volatile
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;ABS_Code.c: 470: INTCONbits.INT0IE = 1;
  3489  00278E  88F2               	bsf	intcon,4,c	;volatile
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;ABS_Code.c: 471: INTCON3bits.INT1IE = 1;
  3493  002790  86F0               	bsf	intcon3,3,c	;volatile
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;ABS_Code.c: 472: INTCONbits.GIEH = 1;
  3497  002792  8EF2               	bsf	intcon,7,c	;volatile
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;ABS_Code.c: 473: INTCONbits.GIEL = 1;
  3501  002794  8CF2               	bsf	intcon,6,c	;volatile
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;ABS_Code.c: 476: T1CONbits.TMR1ON = 1;
  3505  002796  80CD               	bsf	4045,0,c	;volatile
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;ABS_Code.c: 477: T3CONbits.TMR3ON = 1;
  3509  002798  80B1               	bsf	4017,0,c	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;ABS_Code.c: 478: T0CONbits.TMR0ON = 1;
  3513  00279A  8ED5               	bsf	4053,7,c	;volatile
  3514                           
  3515                           ; BSR set to: 0
  3516  00279C  0012               	return		;funcret
  3517  00279E                     __end_of_board_initialization:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           intcon2	equ	0xFF1
  3527                           intcon3	equ	0xFF0
  3528                           postinc0	equ	0xFEE
  3529                           wreg	equ	0xFE8
  3530                           postdec1	equ	0xFE5
  3531                           fsr1l	equ	0xFE1
  3532                           indf2	equ	0xFDF
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537 ;; *************** function _CANInitialize *****************
  3538 ;; Defined at:
  3539 ;;		line 218 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  propSeg         1    wreg     unsigned char 
  3542 ;;  phaseSeg1       1    0[BANK1 ] unsigned char 
  3543 ;;  phaseSeg2       1    1[BANK1 ] unsigned char 
  3544 ;;  SJW             1    2[BANK1 ] unsigned char 
  3545 ;;  BRP             1    3[BANK1 ] unsigned char 
  3546 ;;  flags           1    4[BANK1 ] enum E16844
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  propSeg         1    9[BANK1 ] unsigned char 
  3549 ;;  FilterConfig    1   11[BANK1 ] unsigned char 
  3550 ;;  FilterConfig    1   10[BANK1 ] unsigned char 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;		None               void
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3560 ;;      Params:         0       0       5       0
  3561 ;;      Locals:         0       0       3       0
  3562 ;;      Temps:          0       0       4       0
  3563 ;;      Totals:         0       0      12       0
  3564 ;;Total ram usage:       12 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    5
  3567 ;; This function calls:
  3568 ;;		_CANOperationMode
  3569 ;;		_CANSetFilter
  3570 ;;		_CANSetMask
  3571 ;; This function is called by:
  3572 ;;		_board_initialization
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text7
  3577  002348                     __ptext7:
  3578                           	opt stack 0
  3579  002348                     _CANInitialize:
  3580                           	opt stack 24
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;incstack = 0
  3584                           ;CANInitialize@propSeg stored from wreg
  3585  002348  0101               	movlb	1	; () banked
  3586  00234A  6F09               	movwf	CANInitialize@propSeg& (0+255),b
  3587                           
  3588                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3589                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3590                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3591  00234C  0E80               	movlw	128
  3592  00234E  EC22  F015         	call	_CANOperationMode
  3593                           
  3594                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3595  002352  0E00               	movlw	0
  3596  002354  6E70               	movwf	3952,c	;volatile
  3597                           
  3598                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3599  002356  0E00               	movlw	0
  3600  002358  6E71               	movwf	3953,c	;volatile
  3601                           
  3602                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3603  00235A  0E00               	movlw	0
  3604  00235C  6E72               	movwf	3954,c	;volatile
  3605                           
  3606                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3607  00235E  0101               	movlb	1	; () banked
  3608  002360  4102               	rrncf	CANInitialize@SJW& (0+255),w,b
  3609  002362  42E8               	rrncf	wreg,f,c
  3610  002364  0BC0               	andlw	192
  3611  002366  0101               	movlb	1	; () banked
  3612  002368  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3616  00236A  0101               	movlb	1	; () banked
  3617  00236C  5102               	movf	CANInitialize@SJW& (0+255),w,b
  3618  00236E  1270               	iorwf	3952,f,c	;volatile
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3622  002370  0101               	movlb	1	; () banked
  3623  002372  5103               	movf	CANInitialize@BRP& (0+255),w,b
  3624  002374  1270               	iorwf	3952,f,c	;volatile
  3625                           
  3626                           ; BSR set to: 1
  3627                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3628  002376  0101               	movlb	1	; () banked
  3629  002378  5109               	movf	CANInitialize@propSeg& (0+255),w,b
  3630  00237A  1271               	iorwf	3953,f,c	;volatile
  3631                           
  3632                           ; BSR set to: 1
  3633                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3634  00237C  0101               	movlb	1	; () banked
  3635  00237E  3900               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3636  002380  42E8               	rrncf	wreg,f,c
  3637  002382  0BF8               	andlw	248
  3638  002384  0101               	movlb	1	; () banked
  3639  002386  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3643  002388  0101               	movlb	1	; () banked
  3644  00238A  5100               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3645  00238C  1271               	iorwf	3953,f,c	;volatile
  3646                           
  3647                           ; BSR set to: 1
  3648                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3649  00238E  0101               	movlb	1	; () banked
  3650  002390  A504               	btfss	CANInitialize@flags& (0+255),2,b
  3651                           
  3652                           ; BSR set to: 1
  3653                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3654  002392  8C71               	bsf	3953,6,c	;volatile
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3658  002394  0101               	movlb	1	; () banked
  3659  002396  B104               	btfsc	CANInitialize@flags& (0+255),0,b
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3663  002398  8E71               	bsf	3953,7,c	;volatile
  3664                           
  3665                           ; BSR set to: 1
  3666                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3667                           
  3668                           ; BSR set to: 1
  3669  00239A  0101               	movlb	1	; () banked
  3670  00239C  5101               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3671  00239E  1272               	iorwf	3954,f,c	;volatile
  3672                           
  3673                           ; BSR set to: 1
  3674                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3675  0023A0  0101               	movlb	1	; () banked
  3676  0023A2  B304               	btfsc	CANInitialize@flags& (0+255),1,b
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3680  0023A4  8C72               	bsf	3954,6,c	;volatile
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3684                           
  3685                           ; BSR set to: 1
  3686  0023A6  0101               	movlb	1	; () banked
  3687  0023A8  5104               	movf	CANInitialize@flags& (0+255),w,b
  3688  0023AA  0B60               	andlw	96
  3689  0023AC  6E60               	movwf	3936,c	;volatile
  3690                           
  3691                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3692  0023AE  0101               	movlb	1	; () banked
  3693  0023B0  5104               	movf	CANInitialize@flags& (0+255),w,b
  3694  0023B2  0B10               	andlw	16
  3695  0023B4  0AFF               	xorlw	255
  3696  0023B6  B4D8               	btfsc	status,2,c
  3697                           
  3698                           ; BSR set to: 1
  3699                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3700  0023B8  8460               	bsf	3936,2,c	;volatile
  3701                           
  3702                           ; BSR set to: 1
  3703                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3704  0023BA  CF60 FF50          	movff	3936,3920	;volatile
  3705                           
  3706                           ; BSR set to: 1
  3707                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3708  0023BE  0E00               	movlw	0
  3709  0023C0  0100               	movlb	0	; () banked
  3710  0023C2  6FCC               	movwf	CANSetMask@mask& (0+255),b
  3711  0023C4  0E00               	movlw	0
  3712  0023C6  6FCD               	movwf	(CANSetMask@mask+1)& (0+255),b
  3713  0023C8  0E00               	movlw	0
  3714  0023CA  6FCE               	movwf	(CANSetMask@mask+2)& (0+255),b
  3715  0023CC  0E00               	movlw	0
  3716  0023CE  6FCF               	movwf	(CANSetMask@mask+3)& (0+255),b
  3717  0023D0  0EF7               	movlw	247
  3718  0023D2  0100               	movlb	0	; () banked
  3719  0023D4  6FD0               	movwf	CANSetMask@type& (0+255),b
  3720  0023D6  0E01               	movlw	1
  3721  0023D8  EC6A  F00C         	call	_CANSetMask
  3722                           
  3723                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3724  0023DC  0E00               	movlw	0
  3725  0023DE  0100               	movlb	0	; () banked
  3726  0023E0  6FCC               	movwf	CANSetMask@mask& (0+255),b
  3727  0023E2  0E00               	movlw	0
  3728  0023E4  6FCD               	movwf	(CANSetMask@mask+1)& (0+255),b
  3729  0023E6  0E00               	movlw	0
  3730  0023E8  6FCE               	movwf	(CANSetMask@mask+2)& (0+255),b
  3731  0023EA  0E00               	movlw	0
  3732  0023EC  6FCF               	movwf	(CANSetMask@mask+3)& (0+255),b
  3733  0023EE  0EF7               	movlw	247
  3734  0023F0  0100               	movlb	0	; () banked
  3735  0023F2  6FD0               	movwf	CANSetMask@type& (0+255),b
  3736  0023F4  0E02               	movlw	2
  3737  0023F6  EC6A  F00C         	call	_CANSetMask
  3738                           
  3739                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3740  0023FA  D00F               	goto	l4716
  3741  0023FC                     l4710:
  3742                           
  3743                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3744  0023FC  0EF7               	movlw	247
  3745  0023FE  0101               	movlb	1	; () banked
  3746  002400  6F0A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3747  002402  D007               	goto	l4712
  3748  002404                     l378:
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3752  002404  0101               	movlb	1	; () banked
  3753  002406  690A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3754                           
  3755                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3756  002408  0101               	movlb	1	; () banked
  3757  00240A  690B               	setf	CANInitialize@FilterConfig2& (0+255),b
  3758                           
  3759                           ;inc\CANlib.h: 273: break;
  3760  00240C  D028               	goto	l4718
  3761  00240E                     l379:
  3762                           
  3763                           ; BSR set to: 1
  3764                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3765  00240E  0101               	movlb	1	; () banked
  3766  002410  690A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3767  002412                     l4712:
  3768                           
  3769                           ; BSR set to: 1
  3770                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3771  002412  0EF7               	movlw	247
  3772  002414  0101               	movlb	1	; () banked
  3773  002416  6F0B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3774                           
  3775                           ; BSR set to: 1
  3776                           ;inc\CANlib.h: 278: }
  3777                           
  3778                           ;inc\CANlib.h: 277: break;
  3779  002418  D022               	goto	l4718
  3780  00241A                     l4716:
  3781  00241A  0E9F               	movlw	159
  3782  00241C  0101               	movlb	1	; () banked
  3783  00241E  6F05               	movwf	??_CANInitialize& (0+255),b
  3784  002420  0EFF               	movlw	255
  3785  002422  0101               	movlb	1	; () banked
  3786  002424  6F06               	movwf	(??_CANInitialize+1)& (0+255),b
  3787  002426  0101               	movlb	1	; () banked
  3788  002428  5104               	movf	CANInitialize@flags& (0+255),w,b
  3789  00242A  0B60               	andlw	96
  3790  00242C  0101               	movlb	1	; () banked
  3791  00242E  6F07               	movwf	(??_CANInitialize+2)& (0+255),b
  3792  002430  6B08               	clrf	(??_CANInitialize+3)& (0+255),b
  3793  002432  0101               	movlb	1	; () banked
  3794  002434  5105               	movf	??_CANInitialize& (0+255),w,b
  3795  002436  0101               	movlb	1	; () banked
  3796  002438  1307               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3797  00243A  0101               	movlb	1	; () banked
  3798  00243C  5106               	movf	(??_CANInitialize+1)& (0+255),w,b
  3799  00243E  0101               	movlb	1	; () banked
  3800  002440  1308               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3801                           
  3802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3803                           ; Switch size 1, requested type "space"
  3804                           ; Number of cases is 1, Range of values is 0 to 0
  3805                           ; switch strategies available:
  3806                           ; Name         Instructions Cycles
  3807                           ; simple_byte            4     3 (average)
  3808                           ;	Chosen strategy is simple_byte
  3809  002442  0101               	movlb	1	; () banked
  3810  002444  5108               	movf	(??_CANInitialize+3)& (0+255),w,b
  3811  002446  0A00               	xorlw	0	; case 0
  3812  002448  A4D8               	btfss	status,2,c
  3813  00244A  D7E1               	goto	l379
  3814                           
  3815                           ; BSR set to: 1
  3816                           ; Switch size 1, requested type "space"
  3817                           ; Number of cases is 2, Range of values is 191 to 223
  3818                           ; switch strategies available:
  3819                           ; Name         Instructions Cycles
  3820                           ; simple_byte            7     4 (average)
  3821                           ;	Chosen strategy is simple_byte
  3822  00244C  0101               	movlb	1	; () banked
  3823  00244E  5107               	movf	(??_CANInitialize+2)& (0+255),w,b
  3824  002450  0ABF               	xorlw	191	; case 191
  3825  002452  B4D8               	btfsc	status,2,c
  3826  002454  D7D7               	goto	l378
  3827  002456  0A60               	xorlw	96	; case 223
  3828  002458  B4D8               	btfsc	status,2,c
  3829  00245A  D7D0               	goto	l4710
  3830  00245C  D7D8               	goto	l379
  3831  00245E                     l4718:
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3835  00245E  0E00               	movlw	0
  3836  002460  0100               	movlb	0	; () banked
  3837  002462  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3838  002464  0E00               	movlw	0
  3839  002466  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3840  002468  0E00               	movlw	0
  3841  00246A  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3842  00246C  0E00               	movlw	0
  3843  00246E  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3844  002470  C10A  F0D0         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3845  002474  0E00               	movlw	0
  3846  002476  EC9B  F000         	call	_CANSetFilter
  3847                           
  3848                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3849  00247A  0E00               	movlw	0
  3850  00247C  0100               	movlb	0	; () banked
  3851  00247E  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3852  002480  0E00               	movlw	0
  3853  002482  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3854  002484  0E00               	movlw	0
  3855  002486  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3856  002488  0E00               	movlw	0
  3857  00248A  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3858  00248C  C10A  F0D0         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3859  002490  0E01               	movlw	1
  3860  002492  EC9B  F000         	call	_CANSetFilter
  3861                           
  3862                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3863  002496  0E00               	movlw	0
  3864  002498  0100               	movlb	0	; () banked
  3865  00249A  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3866  00249C  0E00               	movlw	0
  3867  00249E  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3868  0024A0  0E00               	movlw	0
  3869  0024A2  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3870  0024A4  0E00               	movlw	0
  3871  0024A6  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3872  0024A8  C10B  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3873  0024AC  0E02               	movlw	2
  3874  0024AE  EC9B  F000         	call	_CANSetFilter
  3875                           
  3876                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3877  0024B2  0E00               	movlw	0
  3878  0024B4  0100               	movlb	0	; () banked
  3879  0024B6  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3880  0024B8  0E00               	movlw	0
  3881  0024BA  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3882  0024BC  0E00               	movlw	0
  3883  0024BE  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3884  0024C0  0E00               	movlw	0
  3885  0024C2  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3886  0024C4  C10B  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3887  0024C8  0E03               	movlw	3
  3888  0024CA  EC9B  F000         	call	_CANSetFilter
  3889                           
  3890                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3891  0024CE  0E00               	movlw	0
  3892  0024D0  0100               	movlb	0	; () banked
  3893  0024D2  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3894  0024D4  0E00               	movlw	0
  3895  0024D6  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3896  0024D8  0E00               	movlw	0
  3897  0024DA  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3898  0024DC  0E00               	movlw	0
  3899  0024DE  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3900  0024E0  C10B  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3901  0024E4  0E04               	movlw	4
  3902  0024E6  EC9B  F000         	call	_CANSetFilter
  3903                           
  3904                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3905  0024EA  0E00               	movlw	0
  3906  0024EC  0100               	movlb	0	; () banked
  3907  0024EE  6FCC               	movwf	CANSetFilter@filter& (0+255),b
  3908  0024F0  0E00               	movlw	0
  3909  0024F2  6FCD               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3910  0024F4  0E00               	movlw	0
  3911  0024F6  6FCE               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3912  0024F8  0E00               	movlw	0
  3913  0024FA  6FCF               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3914  0024FC  C10B  F0D0         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3915  002500  0E05               	movlw	5
  3916  002502  EC9B  F000         	call	_CANSetFilter
  3917                           
  3918                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3919  002506  0E00               	movlw	0
  3920  002508  EC22  F015         	call	_CANOperationMode
  3921  00250C  0012               	return		;funcret
  3922  00250E                     __end_of_CANInitialize:
  3923                           	opt stack 0
  3924                           tblptru	equ	0xFF8
  3925                           tblptrh	equ	0xFF7
  3926                           tblptrl	equ	0xFF6
  3927                           tablat	equ	0xFF5
  3928                           prodh	equ	0xFF4
  3929                           prodl	equ	0xFF3
  3930                           intcon	equ	0xFF2
  3931                           intcon2	equ	0xFF1
  3932                           intcon3	equ	0xFF0
  3933                           postinc0	equ	0xFEE
  3934                           wreg	equ	0xFE8
  3935                           postdec1	equ	0xFE5
  3936                           fsr1l	equ	0xFE1
  3937                           indf2	equ	0xFDF
  3938                           fsr2h	equ	0xFDA
  3939                           fsr2l	equ	0xFD9
  3940                           status	equ	0xFD8
  3941                           
  3942 ;; *************** function _CANSetMask *****************
  3943 ;; Defined at:
  3944 ;;		line 640 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  numBuffer       1    wreg     enum E16878
  3947 ;;  mask            4   28[BANK0 ] unsigned long 
  3948 ;;  type            1   32[BANK0 ] enum E16844
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  numBuffer       1   37[BANK0 ] enum E16878
  3951 ;;  tamp            4   38[BANK0 ] unsigned long 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;		None               void
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3961 ;;      Params:         0       5       0       0
  3962 ;;      Locals:         0       5       0       0
  3963 ;;      Temps:          0       4       0       0
  3964 ;;      Totals:         0      14       0       0
  3965 ;;Total ram usage:       14 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    4
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_CANInitialize
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text8
  3976  0018D4                     __ptext8:
  3977                           	opt stack 0
  3978  0018D4                     _CANSetMask:
  3979                           	opt stack 24
  3980                           
  3981                           ;incstack = 0
  3982                           ;CANSetMask@numBuffer stored from wreg
  3983  0018D4  0100               	movlb	0	; () banked
  3984  0018D6  6FD5               	movwf	CANSetMask@numBuffer& (0+255),b
  3985                           
  3986                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3987  0018D8  0100               	movlb	0	; () banked
  3988  0018DA  05D5               	decf	CANSetMask@numBuffer& (0+255),w,b
  3989  0018DC  A4D8               	btfss	status,2,c
  3990  0018DE  D056               	goto	l4280
  3991                           
  3992                           ; BSR set to: 0
  3993  0018E0  0100               	movlb	0	; () banked
  3994  0018E2  29D0               	incf	CANSetMask@type& (0+255),w,b
  3995  0018E4  A4D8               	btfss	status,2,c
  3996  0018E6  D052               	goto	l4280
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;inc\CANlib.h: 644: {
  4000                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4001  0018E8  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  4002  0018EC  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4003  0018F0  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4004  0018F4  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4005  0018F8  0E04               	movlw	4
  4006  0018FA  D006               	goto	u4860
  4007  0018FC                     u4865:
  4008  0018FC  0100               	movlb	0	; () banked
  4009  0018FE  90D8               	bcf	status,0,c
  4010  001900  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4011  001902  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4012  001904  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4013  001906  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  4014  001908                     u4860:
  4015  001908  2EE8               	decfsz	wreg,f,c
  4016  00190A  D7F8               	goto	u4865
  4017  00190C  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4018  001910  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4019  001914  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4020  001918  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4024  00191C  0100               	movlb	0	; () banked
  4025  00191E  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  4026  001920  0100               	movlb	0	; () banked
  4027  001922  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4028  001924  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4029  001926  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4030  001928  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4034  00192A  C0D6  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4038  00192E  0E07               	movlw	7
  4039  001930  0100               	movlb	0	; () banked
  4040  001932  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4041  001934  0100               	movlb	0	; () banked
  4042  001936  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4043  001938  0E00               	movlw	0
  4044  00193A  0100               	movlb	0	; () banked
  4045  00193C  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4046  00193E  0100               	movlb	0	; () banked
  4047  001940  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4048  001942  0E00               	movlw	0
  4049  001944  0100               	movlb	0	; () banked
  4050  001946  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4051  001948  0100               	movlb	0	; () banked
  4052  00194A  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4053  00194C  0E00               	movlw	0
  4054  00194E  0100               	movlb	0	; () banked
  4055  001950  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4056  001952  0100               	movlb	0	; () banked
  4057  001954  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4061  001956  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4062  00195A  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4063  00195E  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4064  001962  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4065  001966  0E05               	movlw	5
  4066  001968                     u4875:
  4067  001968  90D8               	bcf	status,0,c
  4068  00196A  0100               	movlb	0	; () banked
  4069  00196C  37D1               	rlcf	??_CANSetMask& (0+255),f,b
  4070  00196E  37D2               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4071  001970  37D3               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4072  001972  37D4               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4073  001974  2EE8               	decfsz	wreg,f,c
  4074  001976  D7F8               	goto	u4875
  4075  001978  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4076  00197C  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4077  001980  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4078  001984  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4082  001988  C0D6  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4083  00198C                     l4280:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;inc\CANlib.h: 652: }
  4087                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4088  00198C  0E02               	movlw	2
  4089  00198E  0100               	movlb	0	; () banked
  4090  001990  19D5               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4091  001992  A4D8               	btfss	status,2,c
  4092  001994  D056               	goto	l4296
  4093                           
  4094                           ; BSR set to: 0
  4095  001996  0100               	movlb	0	; () banked
  4096  001998  29D0               	incf	CANSetMask@type& (0+255),w,b
  4097  00199A  A4D8               	btfss	status,2,c
  4098  00199C  D052               	goto	l4296
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;inc\CANlib.h: 655: {
  4102                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4103  00199E  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  4104  0019A2  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4105  0019A6  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4106  0019AA  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4107  0019AE  0E04               	movlw	4
  4108  0019B0  D006               	goto	u4900
  4109  0019B2                     u4905:
  4110  0019B2  0100               	movlb	0	; () banked
  4111  0019B4  90D8               	bcf	status,0,c
  4112  0019B6  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4113  0019B8  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4114  0019BA  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4115  0019BC  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  4116  0019BE                     u4900:
  4117  0019BE  2EE8               	decfsz	wreg,f,c
  4118  0019C0  D7F8               	goto	u4905
  4119  0019C2  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4120  0019C6  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4121  0019CA  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4122  0019CE  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4126  0019D2  0100               	movlb	0	; () banked
  4127  0019D4  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  4128  0019D6  0100               	movlb	0	; () banked
  4129  0019D8  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4130  0019DA  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4131  0019DC  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4132  0019DE  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4136  0019E0  C0D6  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4140  0019E4  0E07               	movlw	7
  4141  0019E6  0100               	movlb	0	; () banked
  4142  0019E8  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4143  0019EA  0100               	movlb	0	; () banked
  4144  0019EC  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4145  0019EE  0E00               	movlw	0
  4146  0019F0  0100               	movlb	0	; () banked
  4147  0019F2  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4148  0019F4  0100               	movlb	0	; () banked
  4149  0019F6  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4150  0019F8  0E00               	movlw	0
  4151  0019FA  0100               	movlb	0	; () banked
  4152  0019FC  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4153  0019FE  0100               	movlb	0	; () banked
  4154  001A00  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4155  001A02  0E00               	movlw	0
  4156  001A04  0100               	movlb	0	; () banked
  4157  001A06  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4158  001A08  0100               	movlb	0	; () banked
  4159  001A0A  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4163  001A0C  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4164  001A10  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4165  001A14  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4166  001A18  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4167  001A1C  0E05               	movlw	5
  4168  001A1E                     u4915:
  4169  001A1E  90D8               	bcf	status,0,c
  4170  001A20  0100               	movlb	0	; () banked
  4171  001A22  37D1               	rlcf	??_CANSetMask& (0+255),f,b
  4172  001A24  37D2               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4173  001A26  37D3               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4174  001A28  37D4               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4175  001A2A  2EE8               	decfsz	wreg,f,c
  4176  001A2C  D7F8               	goto	u4915
  4177  001A2E  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4178  001A32  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4179  001A36  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4180  001A3A  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4184  001A3E  C0D6  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4185  001A42                     l4296:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;inc\CANlib.h: 663: }
  4189                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4190  001A42  0100               	movlb	0	; () banked
  4191  001A44  05D5               	decf	CANSetMask@numBuffer& (0+255),w,b
  4192  001A46  A4D8               	btfss	status,2,c
  4193  001A48  D087               	goto	l4328
  4194                           
  4195                           ; BSR set to: 0
  4196  001A4A  0EF7               	movlw	247
  4197  001A4C  0100               	movlb	0	; () banked
  4198  001A4E  19D0               	xorwf	CANSetMask@type& (0+255),w,b
  4199  001A50  A4D8               	btfss	status,2,c
  4200  001A52  D082               	goto	l4328
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 666: {
  4204                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4205  001A54  0100               	movlb	0	; () banked
  4206  001A56  51CC               	movf	CANSetMask@mask& (0+255),w,b
  4207  001A58  0100               	movlb	0	; () banked
  4208  001A5A  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4209  001A5C  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4210  001A5E  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4211  001A60  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4215  001A62  C0D6  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4219  001A66  0E00               	movlw	0
  4220  001A68  0100               	movlb	0	; () banked
  4221  001A6A  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4222  001A6C  0100               	movlb	0	; () banked
  4223  001A6E  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4224  001A70  0EFF               	movlw	255
  4225  001A72  0100               	movlb	0	; () banked
  4226  001A74  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4227  001A76  0100               	movlb	0	; () banked
  4228  001A78  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4229  001A7A  0E00               	movlw	0
  4230  001A7C  0100               	movlb	0	; () banked
  4231  001A7E  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4232  001A80  0100               	movlb	0	; () banked
  4233  001A82  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4234  001A84  0E00               	movlw	0
  4235  001A86  0100               	movlb	0	; () banked
  4236  001A88  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4237  001A8A  0100               	movlb	0	; () banked
  4238  001A8C  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4242  001A8E  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4243  001A92  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4244  001A96  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4245  001A9A  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4246  001A9E  C0D2  F0D1         	movff	??_CANSetMask+1,??_CANSetMask
  4247  001AA2  C0D3  F0D2         	movff	??_CANSetMask+2,??_CANSetMask+1
  4248  001AA6  C0D4  F0D3         	movff	??_CANSetMask+3,??_CANSetMask+2
  4249  001AAA  0100               	movlb	0	; () banked
  4250  001AAC  6BD4               	clrf	(??_CANSetMask+3)& (0+255),b
  4251  001AAE  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4252  001AB2  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4253  001AB6  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4254  001ABA  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4258  001ABE  C0D6  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4262  001AC2  0100               	movlb	0	; () banked
  4263  001AC4  A1CE               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4264  001AC6  D003               	goto	l452
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4268  001AC8  010F               	movlb	15	; () banked
  4269  001ACA  8119               	bsf	25,0,b	;volatile
  4270  001ACC  D002               	goto	l453
  4271  001ACE                     l452:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 676: else
  4275                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4276  001ACE  010F               	movlb	15	; () banked
  4277  001AD0  9119               	bcf	25,0,b	;volatile
  4278  001AD2                     l453:
  4279                           
  4280                           ; BSR set to: 15
  4281                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4282  001AD2  0100               	movlb	0	; () banked
  4283  001AD4  A3CE               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4284  001AD6  D003               	goto	l454
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4288  001AD8  010F               	movlb	15	; () banked
  4289  001ADA  8319               	bsf	25,1,b	;volatile
  4290  001ADC  D002               	goto	l455
  4291  001ADE                     l454:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;inc\CANlib.h: 681: else
  4295                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4296  001ADE  010F               	movlb	15	; () banked
  4297  001AE0  9319               	bcf	25,1,b	;volatile
  4298  001AE2                     l455:
  4299                           
  4300                           ; BSR set to: 15
  4301                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4302  001AE2  0100               	movlb	0	; () banked
  4303  001AE4  A5CE               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4304  001AE6  D003               	goto	l456
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4308  001AE8  010F               	movlb	15	; () banked
  4309  001AEA  8B19               	bsf	25,5,b	;volatile
  4310  001AEC  D002               	goto	l457
  4311  001AEE                     l456:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;inc\CANlib.h: 686: else
  4315                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4316  001AEE  010F               	movlb	15	; () banked
  4317  001AF0  9B19               	bcf	25,5,b	;volatile
  4318  001AF2                     l457:
  4319                           
  4320                           ; BSR set to: 15
  4321                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4322  001AF2  0100               	movlb	0	; () banked
  4323  001AF4  A7CE               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4324  001AF6  D003               	goto	l458
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4328  001AF8  010F               	movlb	15	; () banked
  4329  001AFA  8D19               	bsf	25,6,b	;volatile
  4330  001AFC  D002               	goto	l459
  4331  001AFE                     l458:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;inc\CANlib.h: 691: else
  4335                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4336  001AFE  010F               	movlb	15	; () banked
  4337  001B00  9D19               	bcf	25,6,b	;volatile
  4338  001B02                     l459:
  4339                           
  4340                           ; BSR set to: 15
  4341                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4342  001B02  0100               	movlb	0	; () banked
  4343  001B04  A9CE               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4344  001B06  D003               	goto	l460
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4348  001B08  010F               	movlb	15	; () banked
  4349  001B0A  8F19               	bsf	25,7,b	;volatile
  4350  001B0C  D002               	goto	l4322
  4351  001B0E                     l460:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 696: else
  4355                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4356  001B0E  010F               	movlb	15	; () banked
  4357  001B10  9F19               	bcf	25,7,b	;volatile
  4358  001B12                     l4322:
  4359                           
  4360                           ; BSR set to: 15
  4361                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4362  001B12  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  4363  001B16  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4364  001B1A  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4365  001B1E  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4366  001B22  0E16               	movlw	22
  4367  001B24  D006               	goto	u4990
  4368  001B26                     u4995:
  4369  001B26  0100               	movlb	0	; () banked
  4370  001B28  90D8               	bcf	status,0,c
  4371  001B2A  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4372  001B2C  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4373  001B2E  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4374  001B30  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  4375  001B32                     u4990:
  4376  001B32  2EE8               	decfsz	wreg,f,c
  4377  001B34  D7F8               	goto	u4995
  4378  001B36  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4379  001B3A  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4380  001B3E  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4381  001B42  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4385  001B46  0100               	movlb	0	; () banked
  4386  001B48  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  4387  001B4A  0100               	movlb	0	; () banked
  4388  001B4C  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4389  001B4E  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4390  001B50  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4391  001B52  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4395  001B54  C0D6  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4396  001B58                     l4328:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;inc\CANlib.h: 702: }
  4400                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4401  001B58  0E02               	movlw	2
  4402  001B5A  0100               	movlb	0	; () banked
  4403  001B5C  19D5               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4404  001B5E  A4D8               	btfss	status,2,c
  4405  001B60  0012               	return	
  4406                           
  4407                           ; BSR set to: 0
  4408  001B62  0EF7               	movlw	247
  4409  001B64  0100               	movlb	0	; () banked
  4410  001B66  19D0               	xorwf	CANSetMask@type& (0+255),w,b
  4411  001B68  A4D8               	btfss	status,2,c
  4412  001B6A  0012               	return	
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;inc\CANlib.h: 705: {
  4416                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4417  001B6C  0100               	movlb	0	; () banked
  4418  001B6E  51CC               	movf	CANSetMask@mask& (0+255),w,b
  4419  001B70  0100               	movlb	0	; () banked
  4420  001B72  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4421  001B74  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4422  001B76  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4423  001B78  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4427  001B7A  C0D6  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4431  001B7E  0E00               	movlw	0
  4432  001B80  0100               	movlb	0	; () banked
  4433  001B82  15CC               	andwf	CANSetMask@mask& (0+255),w,b
  4434  001B84  0100               	movlb	0	; () banked
  4435  001B86  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4436  001B88  0EFF               	movlw	255
  4437  001B8A  0100               	movlb	0	; () banked
  4438  001B8C  15CD               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4439  001B8E  0100               	movlb	0	; () banked
  4440  001B90  6FD7               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4441  001B92  0E00               	movlw	0
  4442  001B94  0100               	movlb	0	; () banked
  4443  001B96  15CE               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4444  001B98  0100               	movlb	0	; () banked
  4445  001B9A  6FD8               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4446  001B9C  0E00               	movlw	0
  4447  001B9E  0100               	movlb	0	; () banked
  4448  001BA0  15CF               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4449  001BA2  0100               	movlb	0	; () banked
  4450  001BA4  6FD9               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4454  001BA6  C0D6  F0D1         	movff	CANSetMask@tamp,??_CANSetMask
  4455  001BAA  C0D7  F0D2         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4456  001BAE  C0D8  F0D3         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4457  001BB2  C0D9  F0D4         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4458  001BB6  C0D2  F0D1         	movff	??_CANSetMask+1,??_CANSetMask
  4459  001BBA  C0D3  F0D2         	movff	??_CANSetMask+2,??_CANSetMask+1
  4460  001BBE  C0D4  F0D3         	movff	??_CANSetMask+3,??_CANSetMask+2
  4461  001BC2  0100               	movlb	0	; () banked
  4462  001BC4  6BD4               	clrf	(??_CANSetMask+3)& (0+255),b
  4463  001BC6  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4464  001BCA  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4465  001BCE  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4466  001BD2  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4470  001BD6  C0D6  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4474  001BDA  0100               	movlb	0	; () banked
  4475  001BDC  A1CE               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4476  001BDE  D003               	goto	l463
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4480  001BE0  010F               	movlb	15	; () banked
  4481  001BE2  811D               	bsf	29,0,b	;volatile
  4482  001BE4  D002               	goto	l464
  4483  001BE6                     l463:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;inc\CANlib.h: 715: else
  4487                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4488  001BE6  010F               	movlb	15	; () banked
  4489  001BE8  911D               	bcf	29,0,b	;volatile
  4490  001BEA                     l464:
  4491                           
  4492                           ; BSR set to: 15
  4493                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4494  001BEA  0100               	movlb	0	; () banked
  4495  001BEC  A3CE               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4496  001BEE  D003               	goto	l465
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4500  001BF0  010F               	movlb	15	; () banked
  4501  001BF2  831D               	bsf	29,1,b	;volatile
  4502  001BF4  D002               	goto	l466
  4503  001BF6                     l465:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;inc\CANlib.h: 720: else
  4507                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4508  001BF6  010F               	movlb	15	; () banked
  4509  001BF8  931D               	bcf	29,1,b	;volatile
  4510  001BFA                     l466:
  4511                           
  4512                           ; BSR set to: 15
  4513                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4514  001BFA  0100               	movlb	0	; () banked
  4515  001BFC  A5CE               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4516  001BFE  D003               	goto	l467
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4520  001C00  010F               	movlb	15	; () banked
  4521  001C02  8B1D               	bsf	29,5,b	;volatile
  4522  001C04  D002               	goto	l468
  4523  001C06                     l467:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;inc\CANlib.h: 725: else
  4527                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4528  001C06  010F               	movlb	15	; () banked
  4529  001C08  9B1D               	bcf	29,5,b	;volatile
  4530  001C0A                     l468:
  4531                           
  4532                           ; BSR set to: 15
  4533                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4534  001C0A  0100               	movlb	0	; () banked
  4535  001C0C  A7CE               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4536  001C0E  D003               	goto	l469
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4540  001C10  010F               	movlb	15	; () banked
  4541  001C12  8D1D               	bsf	29,6,b	;volatile
  4542  001C14  D002               	goto	l470
  4543  001C16                     l469:
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;inc\CANlib.h: 730: else
  4547                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4548  001C16  010F               	movlb	15	; () banked
  4549  001C18  9D1D               	bcf	29,6,b	;volatile
  4550  001C1A                     l470:
  4551                           
  4552                           ; BSR set to: 15
  4553                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4554  001C1A  0100               	movlb	0	; () banked
  4555  001C1C  A9CE               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4556  001C1E  D003               	goto	l471
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4560  001C20  010F               	movlb	15	; () banked
  4561  001C22  8F1D               	bsf	29,7,b	;volatile
  4562  001C24  D002               	goto	l4354
  4563  001C26                     l471:
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;inc\CANlib.h: 735: else
  4567                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4568  001C26  010F               	movlb	15	; () banked
  4569  001C28  9F1D               	bcf	29,7,b	;volatile
  4570  001C2A                     l4354:
  4571                           
  4572                           ; BSR set to: 15
  4573                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4574  001C2A  C0CC  F0D1         	movff	CANSetMask@mask,??_CANSetMask
  4575  001C2E  C0CD  F0D2         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4576  001C32  C0CE  F0D3         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4577  001C36  C0CF  F0D4         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4578  001C3A  0E16               	movlw	22
  4579  001C3C  D006               	goto	u5070
  4580  001C3E                     u5075:
  4581  001C3E  0100               	movlb	0	; () banked
  4582  001C40  90D8               	bcf	status,0,c
  4583  001C42  33D4               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4584  001C44  33D3               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4585  001C46  33D2               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4586  001C48  33D1               	rrcf	??_CANSetMask& (0+255),f,b
  4587  001C4A                     u5070:
  4588  001C4A  2EE8               	decfsz	wreg,f,c
  4589  001C4C  D7F8               	goto	u5075
  4590  001C4E  C0D1  F0D6         	movff	??_CANSetMask,CANSetMask@tamp
  4591  001C52  C0D2  F0D7         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4592  001C56  C0D3  F0D8         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4593  001C5A  C0D4  F0D9         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4597  001C5E  0100               	movlb	0	; () banked
  4598  001C60  51D6               	movf	CANSetMask@tamp& (0+255),w,b
  4599  001C62  0100               	movlb	0	; () banked
  4600  001C64  6FD6               	movwf	CANSetMask@tamp& (0+255),b
  4601  001C66  6BD7               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4602  001C68  6BD8               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4603  001C6A  6BD9               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4607  001C6C  C0D6  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4608  001C70  0012               	return	
  4609  001C72                     __end_of_CANSetMask:
  4610                           	opt stack 0
  4611                           tblptru	equ	0xFF8
  4612                           tblptrh	equ	0xFF7
  4613                           tblptrl	equ	0xFF6
  4614                           tablat	equ	0xFF5
  4615                           prodh	equ	0xFF4
  4616                           prodl	equ	0xFF3
  4617                           intcon	equ	0xFF2
  4618                           intcon2	equ	0xFF1
  4619                           intcon3	equ	0xFF0
  4620                           postinc0	equ	0xFEE
  4621                           wreg	equ	0xFE8
  4622                           postdec1	equ	0xFE5
  4623                           fsr1l	equ	0xFE1
  4624                           indf2	equ	0xFDF
  4625                           fsr2h	equ	0xFDA
  4626                           fsr2l	equ	0xFD9
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function _CANSetFilter *****************
  4630 ;; Defined at:
  4631 ;;		line 748 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  numBuffer       1    wreg     enum E16881
  4634 ;;  filter          4   28[BANK0 ] unsigned long 
  4635 ;;  type            1   32[BANK0 ] enum E16844
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  numBuffer       1   37[BANK0 ] enum E16881
  4638 ;;  tamp            4   38[BANK0 ] unsigned long 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;		None               void
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4648 ;;      Params:         0       5       0       0
  4649 ;;      Locals:         0       5       0       0
  4650 ;;      Temps:          0       4       0       0
  4651 ;;      Totals:         0      14       0       0
  4652 ;;Total ram usage:       14 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    4
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_CANInitialize
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text9
  4663  000136                     __ptext9:
  4664                           	opt stack 0
  4665  000136                     _CANSetFilter:
  4666                           	opt stack 24
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;incstack = 0
  4670                           ;CANSetFilter@numBuffer stored from wreg
  4671  000136  0100               	movlb	0	; () banked
  4672  000138  6FD5               	movwf	CANSetFilter@numBuffer& (0+255),b
  4673                           
  4674                           ;inc\CANlib.h: 750: unsigned long tamp;
  4675                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4676  00013A  0100               	movlb	0	; () banked
  4677  00013C  51D5               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4678  00013E  0100               	movlb	0	; () banked
  4679  000140  A4D8               	btfss	status,2,c
  4680  000142  D058               	goto	l4378
  4681                           
  4682                           ; BSR set to: 0
  4683  000144  0100               	movlb	0	; () banked
  4684  000146  29D0               	incf	CANSetFilter@type& (0+255),w,b
  4685  000148  A4D8               	btfss	status,2,c
  4686  00014A  D054               	goto	l4378
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;inc\CANlib.h: 753: {
  4690                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4691  00014C  010F               	movlb	15	; () banked
  4692  00014E  9701               	bcf	1,3,b	;volatile
  4693                           
  4694                           ; BSR set to: 15
  4695                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4696  000150  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  4697  000154  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4698  000158  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4699  00015C  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4700  000160  0E04               	movlw	4
  4701  000162  D006               	goto	u5100
  4702  000164                     u5105:
  4703  000164  0100               	movlb	0	; () banked
  4704  000166  90D8               	bcf	status,0,c
  4705  000168  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4706  00016A  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4707  00016C  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4708  00016E  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  4709  000170                     u5100:
  4710  000170  2EE8               	decfsz	wreg,f,c
  4711  000172  D7F8               	goto	u5105
  4712  000174  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4713  000178  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4714  00017C  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4715  000180  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4719  000184  0100               	movlb	0	; () banked
  4720  000186  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  4721  000188  0100               	movlb	0	; () banked
  4722  00018A  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4723  00018C  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4724  00018E  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4725  000190  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4729  000192  C0D6  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4733  000196  0E07               	movlw	7
  4734  000198  0100               	movlb	0	; () banked
  4735  00019A  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  4736  00019C  0100               	movlb	0	; () banked
  4737  00019E  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4738  0001A0  0E00               	movlw	0
  4739  0001A2  0100               	movlb	0	; () banked
  4740  0001A4  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4741  0001A6  0100               	movlb	0	; () banked
  4742  0001A8  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4743  0001AA  0E00               	movlw	0
  4744  0001AC  0100               	movlb	0	; () banked
  4745  0001AE  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4746  0001B0  0100               	movlb	0	; () banked
  4747  0001B2  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4748  0001B4  0E00               	movlw	0
  4749  0001B6  0100               	movlb	0	; () banked
  4750  0001B8  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4751  0001BA  0100               	movlb	0	; () banked
  4752  0001BC  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4756  0001BE  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  4757  0001C2  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4758  0001C6  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4759  0001CA  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4760  0001CE  0E05               	movlw	5
  4761  0001D0                     u5115:
  4762  0001D0  90D8               	bcf	status,0,c
  4763  0001D2  0100               	movlb	0	; () banked
  4764  0001D4  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  4765  0001D6  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4766  0001D8  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4767  0001DA  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4768  0001DC  2EE8               	decfsz	wreg,f,c
  4769  0001DE  D7F8               	goto	u5115
  4770  0001E0  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4771  0001E4  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4772  0001E8  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4773  0001EC  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4777  0001F0  C0D6  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4778  0001F4                     l4378:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;inc\CANlib.h: 763: }
  4782                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4783  0001F4  0100               	movlb	0	; () banked
  4784  0001F6  05D5               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4785  0001F8  A4D8               	btfss	status,2,c
  4786  0001FA  D058               	goto	l4396
  4787                           
  4788                           ; BSR set to: 0
  4789  0001FC  0100               	movlb	0	; () banked
  4790  0001FE  29D0               	incf	CANSetFilter@type& (0+255),w,b
  4791  000200  A4D8               	btfss	status,2,c
  4792  000202  D054               	goto	l4396
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;inc\CANlib.h: 766: {
  4796                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4797  000204  010F               	movlb	15	; () banked
  4798  000206  9705               	bcf	5,3,b	;volatile
  4799                           
  4800                           ; BSR set to: 15
  4801                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4802  000208  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  4803  00020C  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4804  000210  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4805  000214  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4806  000218  0E04               	movlw	4
  4807  00021A  D006               	goto	u5140
  4808  00021C                     u5145:
  4809  00021C  0100               	movlb	0	; () banked
  4810  00021E  90D8               	bcf	status,0,c
  4811  000220  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4812  000222  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4813  000224  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4814  000226  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  4815  000228                     u5140:
  4816  000228  2EE8               	decfsz	wreg,f,c
  4817  00022A  D7F8               	goto	u5145
  4818  00022C  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4819  000230  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4820  000234  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4821  000238  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4825  00023C  0100               	movlb	0	; () banked
  4826  00023E  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  4827  000240  0100               	movlb	0	; () banked
  4828  000242  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4829  000244  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4830  000246  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4831  000248  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4835  00024A  C0D6  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4839  00024E  0E07               	movlw	7
  4840  000250  0100               	movlb	0	; () banked
  4841  000252  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  4842  000254  0100               	movlb	0	; () banked
  4843  000256  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4844  000258  0E00               	movlw	0
  4845  00025A  0100               	movlb	0	; () banked
  4846  00025C  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4847  00025E  0100               	movlb	0	; () banked
  4848  000260  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4849  000262  0E00               	movlw	0
  4850  000264  0100               	movlb	0	; () banked
  4851  000266  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4852  000268  0100               	movlb	0	; () banked
  4853  00026A  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4854  00026C  0E00               	movlw	0
  4855  00026E  0100               	movlb	0	; () banked
  4856  000270  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4857  000272  0100               	movlb	0	; () banked
  4858  000274  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4862  000276  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  4863  00027A  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4864  00027E  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4865  000282  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4866  000286  0E05               	movlw	5
  4867  000288                     u5155:
  4868  000288  90D8               	bcf	status,0,c
  4869  00028A  0100               	movlb	0	; () banked
  4870  00028C  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  4871  00028E  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4872  000290  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4873  000292  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4874  000294  2EE8               	decfsz	wreg,f,c
  4875  000296  D7F8               	goto	u5155
  4876  000298  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4877  00029C  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4878  0002A0  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4879  0002A4  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4883  0002A8  C0D6  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4884  0002AC                     l4396:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;inc\CANlib.h: 776: }
  4888                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4889  0002AC  0E02               	movlw	2
  4890  0002AE  0100               	movlb	0	; () banked
  4891  0002B0  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4892  0002B2  A4D8               	btfss	status,2,c
  4893  0002B4  D058               	goto	l4414
  4894                           
  4895                           ; BSR set to: 0
  4896  0002B6  0100               	movlb	0	; () banked
  4897  0002B8  29D0               	incf	CANSetFilter@type& (0+255),w,b
  4898  0002BA  A4D8               	btfss	status,2,c
  4899  0002BC  D054               	goto	l4414
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;inc\CANlib.h: 779: {
  4903                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4904  0002BE  010F               	movlb	15	; () banked
  4905  0002C0  9709               	bcf	9,3,b	;volatile
  4906                           
  4907                           ; BSR set to: 15
  4908                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4909  0002C2  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  4910  0002C6  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4911  0002CA  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4912  0002CE  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4913  0002D2  0E04               	movlw	4
  4914  0002D4  D006               	goto	u5180
  4915  0002D6                     u5185:
  4916  0002D6  0100               	movlb	0	; () banked
  4917  0002D8  90D8               	bcf	status,0,c
  4918  0002DA  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4919  0002DC  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4920  0002DE  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4921  0002E0  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  4922  0002E2                     u5180:
  4923  0002E2  2EE8               	decfsz	wreg,f,c
  4924  0002E4  D7F8               	goto	u5185
  4925  0002E6  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4926  0002EA  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4927  0002EE  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4928  0002F2  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4932  0002F6  0100               	movlb	0	; () banked
  4933  0002F8  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  4934  0002FA  0100               	movlb	0	; () banked
  4935  0002FC  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4936  0002FE  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4937  000300  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4938  000302  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4942  000304  C0D6  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4946  000308  0E07               	movlw	7
  4947  00030A  0100               	movlb	0	; () banked
  4948  00030C  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  4949  00030E  0100               	movlb	0	; () banked
  4950  000310  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  4951  000312  0E00               	movlw	0
  4952  000314  0100               	movlb	0	; () banked
  4953  000316  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4954  000318  0100               	movlb	0	; () banked
  4955  00031A  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4956  00031C  0E00               	movlw	0
  4957  00031E  0100               	movlb	0	; () banked
  4958  000320  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4959  000322  0100               	movlb	0	; () banked
  4960  000324  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4961  000326  0E00               	movlw	0
  4962  000328  0100               	movlb	0	; () banked
  4963  00032A  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4964  00032C  0100               	movlb	0	; () banked
  4965  00032E  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4969  000330  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  4970  000334  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4971  000338  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4972  00033C  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4973  000340  0E05               	movlw	5
  4974  000342                     u5195:
  4975  000342  90D8               	bcf	status,0,c
  4976  000344  0100               	movlb	0	; () banked
  4977  000346  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  4978  000348  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4979  00034A  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4980  00034C  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4981  00034E  2EE8               	decfsz	wreg,f,c
  4982  000350  D7F8               	goto	u5195
  4983  000352  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  4984  000356  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4985  00035A  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4986  00035E  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4990  000362  C0D6  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4991  000366                     l4414:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;inc\CANlib.h: 789: }
  4995                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4996  000366  0E03               	movlw	3
  4997  000368  0100               	movlb	0	; () banked
  4998  00036A  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4999  00036C  A4D8               	btfss	status,2,c
  5000  00036E  D058               	goto	l4432
  5001                           
  5002                           ; BSR set to: 0
  5003  000370  0100               	movlb	0	; () banked
  5004  000372  29D0               	incf	CANSetFilter@type& (0+255),w,b
  5005  000374  A4D8               	btfss	status,2,c
  5006  000376  D054               	goto	l4432
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;inc\CANlib.h: 792: {
  5010                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5011  000378  010F               	movlb	15	; () banked
  5012  00037A  970D               	bcf	13,3,b	;volatile
  5013                           
  5014                           ; BSR set to: 15
  5015                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5016  00037C  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5017  000380  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5018  000384  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5019  000388  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5020  00038C  0E04               	movlw	4
  5021  00038E  D006               	goto	u5220
  5022  000390                     u5225:
  5023  000390  0100               	movlb	0	; () banked
  5024  000392  90D8               	bcf	status,0,c
  5025  000394  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5026  000396  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5027  000398  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5028  00039A  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5029  00039C                     u5220:
  5030  00039C  2EE8               	decfsz	wreg,f,c
  5031  00039E  D7F8               	goto	u5225
  5032  0003A0  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5033  0003A4  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5034  0003A8  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5035  0003AC  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5039  0003B0  0100               	movlb	0	; () banked
  5040  0003B2  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5041  0003B4  0100               	movlb	0	; () banked
  5042  0003B6  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5043  0003B8  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5044  0003BA  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5045  0003BC  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5049  0003BE  C0D6  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5053  0003C2  0E07               	movlw	7
  5054  0003C4  0100               	movlb	0	; () banked
  5055  0003C6  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5056  0003C8  0100               	movlb	0	; () banked
  5057  0003CA  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5058  0003CC  0E00               	movlw	0
  5059  0003CE  0100               	movlb	0	; () banked
  5060  0003D0  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5061  0003D2  0100               	movlb	0	; () banked
  5062  0003D4  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5063  0003D6  0E00               	movlw	0
  5064  0003D8  0100               	movlb	0	; () banked
  5065  0003DA  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5066  0003DC  0100               	movlb	0	; () banked
  5067  0003DE  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5068  0003E0  0E00               	movlw	0
  5069  0003E2  0100               	movlb	0	; () banked
  5070  0003E4  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5071  0003E6  0100               	movlb	0	; () banked
  5072  0003E8  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5076  0003EA  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5077  0003EE  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5078  0003F2  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5079  0003F6  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5080  0003FA  0E05               	movlw	5
  5081  0003FC                     u5235:
  5082  0003FC  90D8               	bcf	status,0,c
  5083  0003FE  0100               	movlb	0	; () banked
  5084  000400  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  5085  000402  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5086  000404  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5087  000406  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5088  000408  2EE8               	decfsz	wreg,f,c
  5089  00040A  D7F8               	goto	u5235
  5090  00040C  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5091  000410  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5092  000414  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5093  000418  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5097  00041C  C0D6  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5098  000420                     l4432:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;inc\CANlib.h: 802: }
  5102                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5103  000420  0E04               	movlw	4
  5104  000422  0100               	movlb	0	; () banked
  5105  000424  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5106  000426  A4D8               	btfss	status,2,c
  5107  000428  D058               	goto	l4450
  5108                           
  5109                           ; BSR set to: 0
  5110  00042A  0100               	movlb	0	; () banked
  5111  00042C  29D0               	incf	CANSetFilter@type& (0+255),w,b
  5112  00042E  A4D8               	btfss	status,2,c
  5113  000430  D054               	goto	l4450
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 805: {
  5117                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5118  000432  010F               	movlb	15	; () banked
  5119  000434  9711               	bcf	17,3,b	;volatile
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5123  000436  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5124  00043A  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5125  00043E  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5126  000442  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5127  000446  0E04               	movlw	4
  5128  000448  D006               	goto	u5260
  5129  00044A                     u5265:
  5130  00044A  0100               	movlb	0	; () banked
  5131  00044C  90D8               	bcf	status,0,c
  5132  00044E  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5133  000450  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5134  000452  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5135  000454  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5136  000456                     u5260:
  5137  000456  2EE8               	decfsz	wreg,f,c
  5138  000458  D7F8               	goto	u5265
  5139  00045A  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5140  00045E  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5141  000462  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5142  000466  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5146  00046A  0100               	movlb	0	; () banked
  5147  00046C  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5148  00046E  0100               	movlb	0	; () banked
  5149  000470  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5150  000472  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5151  000474  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5152  000476  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5156  000478  C0D6  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5160  00047C  0E07               	movlw	7
  5161  00047E  0100               	movlb	0	; () banked
  5162  000480  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5163  000482  0100               	movlb	0	; () banked
  5164  000484  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5165  000486  0E00               	movlw	0
  5166  000488  0100               	movlb	0	; () banked
  5167  00048A  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5168  00048C  0100               	movlb	0	; () banked
  5169  00048E  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5170  000490  0E00               	movlw	0
  5171  000492  0100               	movlb	0	; () banked
  5172  000494  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5173  000496  0100               	movlb	0	; () banked
  5174  000498  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5175  00049A  0E00               	movlw	0
  5176  00049C  0100               	movlb	0	; () banked
  5177  00049E  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5178  0004A0  0100               	movlb	0	; () banked
  5179  0004A2  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5183  0004A4  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5184  0004A8  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5185  0004AC  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5186  0004B0  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5187  0004B4  0E05               	movlw	5
  5188  0004B6                     u5275:
  5189  0004B6  90D8               	bcf	status,0,c
  5190  0004B8  0100               	movlb	0	; () banked
  5191  0004BA  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  5192  0004BC  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5193  0004BE  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5194  0004C0  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5195  0004C2  2EE8               	decfsz	wreg,f,c
  5196  0004C4  D7F8               	goto	u5275
  5197  0004C6  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5198  0004CA  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5199  0004CE  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5200  0004D2  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5204  0004D6  C0D6  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5205  0004DA                     l4450:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;inc\CANlib.h: 815: }
  5209                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5210  0004DA  0E05               	movlw	5
  5211  0004DC  0100               	movlb	0	; () banked
  5212  0004DE  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5213  0004E0  A4D8               	btfss	status,2,c
  5214  0004E2  D058               	goto	l4468
  5215                           
  5216                           ; BSR set to: 0
  5217  0004E4  0100               	movlb	0	; () banked
  5218  0004E6  29D0               	incf	CANSetFilter@type& (0+255),w,b
  5219  0004E8  A4D8               	btfss	status,2,c
  5220  0004EA  D054               	goto	l4468
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 818: {
  5224                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5225  0004EC  010F               	movlb	15	; () banked
  5226  0004EE  9715               	bcf	21,3,b	;volatile
  5227                           
  5228                           ; BSR set to: 15
  5229                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5230  0004F0  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5231  0004F4  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5232  0004F8  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5233  0004FC  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5234  000500  0E04               	movlw	4
  5235  000502  D006               	goto	u5300
  5236  000504                     u5305:
  5237  000504  0100               	movlb	0	; () banked
  5238  000506  90D8               	bcf	status,0,c
  5239  000508  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5240  00050A  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5241  00050C  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5242  00050E  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5243  000510                     u5300:
  5244  000510  2EE8               	decfsz	wreg,f,c
  5245  000512  D7F8               	goto	u5305
  5246  000514  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5247  000518  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5248  00051C  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5249  000520  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5253  000524  0100               	movlb	0	; () banked
  5254  000526  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5255  000528  0100               	movlb	0	; () banked
  5256  00052A  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5257  00052C  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5258  00052E  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5259  000530  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5263  000532  C0D6  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5267  000536  0E07               	movlw	7
  5268  000538  0100               	movlb	0	; () banked
  5269  00053A  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5270  00053C  0100               	movlb	0	; () banked
  5271  00053E  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5272  000540  0E00               	movlw	0
  5273  000542  0100               	movlb	0	; () banked
  5274  000544  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5275  000546  0100               	movlb	0	; () banked
  5276  000548  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5277  00054A  0E00               	movlw	0
  5278  00054C  0100               	movlb	0	; () banked
  5279  00054E  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5280  000550  0100               	movlb	0	; () banked
  5281  000552  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5282  000554  0E00               	movlw	0
  5283  000556  0100               	movlb	0	; () banked
  5284  000558  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5285  00055A  0100               	movlb	0	; () banked
  5286  00055C  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5290  00055E  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5291  000562  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5292  000566  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5293  00056A  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5294  00056E  0E05               	movlw	5
  5295  000570                     u5315:
  5296  000570  90D8               	bcf	status,0,c
  5297  000572  0100               	movlb	0	; () banked
  5298  000574  37D1               	rlcf	??_CANSetFilter& (0+255),f,b
  5299  000576  37D2               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5300  000578  37D3               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5301  00057A  37D4               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5302  00057C  2EE8               	decfsz	wreg,f,c
  5303  00057E  D7F8               	goto	u5315
  5304  000580  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5305  000584  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5306  000588  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5307  00058C  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5311  000590  C0D6  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5312  000594                     l4468:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 828: }
  5316                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5317  000594  0100               	movlb	0	; () banked
  5318  000596  51D5               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5319  000598  0100               	movlb	0	; () banked
  5320  00059A  A4D8               	btfss	status,2,c
  5321  00059C  D089               	goto	l4502
  5322                           
  5323                           ; BSR set to: 0
  5324  00059E  0EF7               	movlw	247
  5325  0005A0  0100               	movlb	0	; () banked
  5326  0005A2  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5327  0005A4  A4D8               	btfss	status,2,c
  5328  0005A6  D084               	goto	l4502
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;inc\CANlib.h: 832: {
  5332                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5333  0005A8  010F               	movlb	15	; () banked
  5334  0005AA  8701               	bsf	1,3,b	;volatile
  5335                           
  5336                           ; BSR set to: 15
  5337                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5338  0005AC  0100               	movlb	0	; () banked
  5339  0005AE  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5340  0005B0  0100               	movlb	0	; () banked
  5341  0005B2  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5342  0005B4  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5343  0005B6  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5344  0005B8  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5348  0005BA  C0D6  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5352  0005BE  0E00               	movlw	0
  5353  0005C0  0100               	movlb	0	; () banked
  5354  0005C2  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5355  0005C4  0100               	movlb	0	; () banked
  5356  0005C6  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5357  0005C8  0EFF               	movlw	255
  5358  0005CA  0100               	movlb	0	; () banked
  5359  0005CC  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5360  0005CE  0100               	movlb	0	; () banked
  5361  0005D0  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5362  0005D2  0E00               	movlw	0
  5363  0005D4  0100               	movlb	0	; () banked
  5364  0005D6  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5365  0005D8  0100               	movlb	0	; () banked
  5366  0005DA  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5367  0005DC  0E00               	movlw	0
  5368  0005DE  0100               	movlb	0	; () banked
  5369  0005E0  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5370  0005E2  0100               	movlb	0	; () banked
  5371  0005E4  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5375  0005E6  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5376  0005EA  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5377  0005EE  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5378  0005F2  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5379  0005F6  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  5380  0005FA  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5381  0005FE  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5382  000602  0100               	movlb	0	; () banked
  5383  000604  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  5384  000606  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5385  00060A  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5386  00060E  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5387  000612  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5391  000616  C0D6  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5395  00061A  0100               	movlb	0	; () banked
  5396  00061C  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5397  00061E  D003               	goto	l483
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5401  000620  010F               	movlb	15	; () banked
  5402  000622  8101               	bsf	1,0,b	;volatile
  5403  000624  D002               	goto	l484
  5404  000626                     l483:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;inc\CANlib.h: 844: else
  5408                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5409  000626  010F               	movlb	15	; () banked
  5410  000628  9101               	bcf	1,0,b	;volatile
  5411  00062A                     l484:
  5412                           
  5413                           ; BSR set to: 15
  5414                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5415  00062A  0100               	movlb	0	; () banked
  5416  00062C  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5417  00062E  D003               	goto	l485
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5421  000630  010F               	movlb	15	; () banked
  5422  000632  8301               	bsf	1,1,b	;volatile
  5423  000634  D002               	goto	l486
  5424  000636                     l485:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;inc\CANlib.h: 849: else
  5428                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5429  000636  010F               	movlb	15	; () banked
  5430  000638  9301               	bcf	1,1,b	;volatile
  5431  00063A                     l486:
  5432                           
  5433                           ; BSR set to: 15
  5434                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5435  00063A  0100               	movlb	0	; () banked
  5436  00063C  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5437  00063E  D003               	goto	l487
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5441  000640  010F               	movlb	15	; () banked
  5442  000642  8B01               	bsf	1,5,b	;volatile
  5443  000644  D002               	goto	l488
  5444  000646                     l487:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;inc\CANlib.h: 854: else
  5448                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5449  000646  010F               	movlb	15	; () banked
  5450  000648  9B01               	bcf	1,5,b	;volatile
  5451  00064A                     l488:
  5452                           
  5453                           ; BSR set to: 15
  5454                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5455  00064A  0100               	movlb	0	; () banked
  5456  00064C  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5457  00064E  D003               	goto	l489
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5461  000650  010F               	movlb	15	; () banked
  5462  000652  8D01               	bsf	1,6,b	;volatile
  5463  000654  D002               	goto	l490
  5464  000656                     l489:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;inc\CANlib.h: 859: else
  5468                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5469  000656  010F               	movlb	15	; () banked
  5470  000658  9D01               	bcf	1,6,b	;volatile
  5471  00065A                     l490:
  5472                           
  5473                           ; BSR set to: 15
  5474                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5475  00065A  0100               	movlb	0	; () banked
  5476  00065C  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5477  00065E  D003               	goto	l491
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5481  000660  010F               	movlb	15	; () banked
  5482  000662  8F01               	bsf	1,7,b	;volatile
  5483  000664  D002               	goto	l4496
  5484  000666                     l491:
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;inc\CANlib.h: 864: else
  5488                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5489  000666  010F               	movlb	15	; () banked
  5490  000668  9F01               	bcf	1,7,b	;volatile
  5491  00066A                     l4496:
  5492                           
  5493                           ; BSR set to: 15
  5494                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5495  00066A  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5496  00066E  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5497  000672  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5498  000676  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5499  00067A  0E16               	movlw	22
  5500  00067C  D006               	goto	u5390
  5501  00067E                     u5395:
  5502  00067E  0100               	movlb	0	; () banked
  5503  000680  90D8               	bcf	status,0,c
  5504  000682  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5505  000684  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5506  000686  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5507  000688  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5508  00068A                     u5390:
  5509  00068A  2EE8               	decfsz	wreg,f,c
  5510  00068C  D7F8               	goto	u5395
  5511  00068E  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5512  000692  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5513  000696  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5514  00069A  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5518  00069E  0100               	movlb	0	; () banked
  5519  0006A0  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5520  0006A2  0100               	movlb	0	; () banked
  5521  0006A4  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5522  0006A6  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5523  0006A8  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5524  0006AA  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5528  0006AC  C0D6  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5529  0006B0                     l4502:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 870: }
  5533                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5534  0006B0  0100               	movlb	0	; () banked
  5535  0006B2  05D5               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5536  0006B4  A4D8               	btfss	status,2,c
  5537  0006B6  D089               	goto	l4536
  5538                           
  5539                           ; BSR set to: 0
  5540  0006B8  0EF7               	movlw	247
  5541  0006BA  0100               	movlb	0	; () banked
  5542  0006BC  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5543  0006BE  A4D8               	btfss	status,2,c
  5544  0006C0  D084               	goto	l4536
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 873: {
  5548                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5549  0006C2  010F               	movlb	15	; () banked
  5550  0006C4  8705               	bsf	5,3,b	;volatile
  5551                           
  5552                           ; BSR set to: 15
  5553                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5554  0006C6  0100               	movlb	0	; () banked
  5555  0006C8  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5556  0006CA  0100               	movlb	0	; () banked
  5557  0006CC  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5558  0006CE  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5559  0006D0  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5560  0006D2  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5564  0006D4  C0D6  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5568  0006D8  0E00               	movlw	0
  5569  0006DA  0100               	movlb	0	; () banked
  5570  0006DC  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5571  0006DE  0100               	movlb	0	; () banked
  5572  0006E0  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5573  0006E2  0EFF               	movlw	255
  5574  0006E4  0100               	movlb	0	; () banked
  5575  0006E6  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5576  0006E8  0100               	movlb	0	; () banked
  5577  0006EA  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5578  0006EC  0E00               	movlw	0
  5579  0006EE  0100               	movlb	0	; () banked
  5580  0006F0  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5581  0006F2  0100               	movlb	0	; () banked
  5582  0006F4  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5583  0006F6  0E00               	movlw	0
  5584  0006F8  0100               	movlb	0	; () banked
  5585  0006FA  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5586  0006FC  0100               	movlb	0	; () banked
  5587  0006FE  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5591  000700  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5592  000704  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5593  000708  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5594  00070C  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5595  000710  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  5596  000714  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5597  000718  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5598  00071C  0100               	movlb	0	; () banked
  5599  00071E  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  5600  000720  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5601  000724  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5602  000728  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5603  00072C  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5607  000730  C0D6  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5611  000734  0100               	movlb	0	; () banked
  5612  000736  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5613  000738  D003               	goto	l494
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5617  00073A  010F               	movlb	15	; () banked
  5618  00073C  8105               	bsf	5,0,b	;volatile
  5619  00073E  D002               	goto	l495
  5620  000740                     l494:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;inc\CANlib.h: 885: else
  5624                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5625  000740  010F               	movlb	15	; () banked
  5626  000742  9105               	bcf	5,0,b	;volatile
  5627  000744                     l495:
  5628                           
  5629                           ; BSR set to: 15
  5630                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5631  000744  0100               	movlb	0	; () banked
  5632  000746  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5633  000748  D003               	goto	l496
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5637  00074A  010F               	movlb	15	; () banked
  5638  00074C  8305               	bsf	5,1,b	;volatile
  5639  00074E  D002               	goto	l497
  5640  000750                     l496:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;inc\CANlib.h: 890: else
  5644                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5645  000750  010F               	movlb	15	; () banked
  5646  000752  9305               	bcf	5,1,b	;volatile
  5647  000754                     l497:
  5648                           
  5649                           ; BSR set to: 15
  5650                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5651  000754  0100               	movlb	0	; () banked
  5652  000756  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5653  000758  D003               	goto	l498
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5657  00075A  010F               	movlb	15	; () banked
  5658  00075C  8B05               	bsf	5,5,b	;volatile
  5659  00075E  D002               	goto	l499
  5660  000760                     l498:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;inc\CANlib.h: 895: else
  5664                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5665  000760  010F               	movlb	15	; () banked
  5666  000762  9B05               	bcf	5,5,b	;volatile
  5667  000764                     l499:
  5668                           
  5669                           ; BSR set to: 15
  5670                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5671  000764  0100               	movlb	0	; () banked
  5672  000766  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5673  000768  D003               	goto	l500
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5677  00076A  010F               	movlb	15	; () banked
  5678  00076C  8D05               	bsf	5,6,b	;volatile
  5679  00076E  D002               	goto	l501
  5680  000770                     l500:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;inc\CANlib.h: 900: else
  5684                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5685  000770  010F               	movlb	15	; () banked
  5686  000772  9D05               	bcf	5,6,b	;volatile
  5687  000774                     l501:
  5688                           
  5689                           ; BSR set to: 15
  5690                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5691  000774  0100               	movlb	0	; () banked
  5692  000776  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5693  000778  D003               	goto	l502
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5697  00077A  010F               	movlb	15	; () banked
  5698  00077C  8F05               	bsf	5,7,b	;volatile
  5699  00077E  D002               	goto	l4530
  5700  000780                     l502:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;inc\CANlib.h: 905: else
  5704                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5705  000780  010F               	movlb	15	; () banked
  5706  000782  9F05               	bcf	5,7,b	;volatile
  5707  000784                     l4530:
  5708                           
  5709                           ; BSR set to: 15
  5710                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5711  000784  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5712  000788  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5713  00078C  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5714  000790  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5715  000794  0E16               	movlw	22
  5716  000796  D006               	goto	u5470
  5717  000798                     u5475:
  5718  000798  0100               	movlb	0	; () banked
  5719  00079A  90D8               	bcf	status,0,c
  5720  00079C  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5721  00079E  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5722  0007A0  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5723  0007A2  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5724  0007A4                     u5470:
  5725  0007A4  2EE8               	decfsz	wreg,f,c
  5726  0007A6  D7F8               	goto	u5475
  5727  0007A8  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5728  0007AC  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5729  0007B0  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5730  0007B4  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5734  0007B8  0100               	movlb	0	; () banked
  5735  0007BA  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5736  0007BC  0100               	movlb	0	; () banked
  5737  0007BE  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5738  0007C0  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5739  0007C2  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5740  0007C4  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5744  0007C6  C0D6  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5745  0007CA                     l4536:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;inc\CANlib.h: 911: }
  5749                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5750  0007CA  0E02               	movlw	2
  5751  0007CC  0100               	movlb	0	; () banked
  5752  0007CE  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5753  0007D0  A4D8               	btfss	status,2,c
  5754  0007D2  D089               	goto	l4570
  5755                           
  5756                           ; BSR set to: 0
  5757  0007D4  0EF7               	movlw	247
  5758  0007D6  0100               	movlb	0	; () banked
  5759  0007D8  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5760  0007DA  A4D8               	btfss	status,2,c
  5761  0007DC  D084               	goto	l4570
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 915: {
  5765                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5766  0007DE  010F               	movlb	15	; () banked
  5767  0007E0  8709               	bsf	9,3,b	;volatile
  5768                           
  5769                           ; BSR set to: 15
  5770                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5771  0007E2  0100               	movlb	0	; () banked
  5772  0007E4  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5773  0007E6  0100               	movlb	0	; () banked
  5774  0007E8  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5775  0007EA  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5776  0007EC  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5777  0007EE  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5781  0007F0  C0D6  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5785  0007F4  0E00               	movlw	0
  5786  0007F6  0100               	movlb	0	; () banked
  5787  0007F8  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  5788  0007FA  0100               	movlb	0	; () banked
  5789  0007FC  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5790  0007FE  0EFF               	movlw	255
  5791  000800  0100               	movlb	0	; () banked
  5792  000802  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5793  000804  0100               	movlb	0	; () banked
  5794  000806  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5795  000808  0E00               	movlw	0
  5796  00080A  0100               	movlb	0	; () banked
  5797  00080C  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5798  00080E  0100               	movlb	0	; () banked
  5799  000810  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5800  000812  0E00               	movlw	0
  5801  000814  0100               	movlb	0	; () banked
  5802  000816  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5803  000818  0100               	movlb	0	; () banked
  5804  00081A  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5808  00081C  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  5809  000820  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5810  000824  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5811  000828  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5812  00082C  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  5813  000830  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5814  000834  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5815  000838  0100               	movlb	0	; () banked
  5816  00083A  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  5817  00083C  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5818  000840  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5819  000844  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5820  000848  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5824  00084C  C0D6  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5828  000850  0100               	movlb	0	; () banked
  5829  000852  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5830  000854  D003               	goto	l505
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5834  000856  010F               	movlb	15	; () banked
  5835  000858  8109               	bsf	9,0,b	;volatile
  5836  00085A  D002               	goto	l506
  5837  00085C                     l505:
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;inc\CANlib.h: 927: else
  5841                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5842  00085C  010F               	movlb	15	; () banked
  5843  00085E  9109               	bcf	9,0,b	;volatile
  5844  000860                     l506:
  5845                           
  5846                           ; BSR set to: 15
  5847                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5848  000860  0100               	movlb	0	; () banked
  5849  000862  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5850  000864  D003               	goto	l507
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5854  000866  010F               	movlb	15	; () banked
  5855  000868  8309               	bsf	9,1,b	;volatile
  5856  00086A  D002               	goto	l508
  5857  00086C                     l507:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;inc\CANlib.h: 932: else
  5861                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5862  00086C  010F               	movlb	15	; () banked
  5863  00086E  9309               	bcf	9,1,b	;volatile
  5864  000870                     l508:
  5865                           
  5866                           ; BSR set to: 15
  5867                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5868  000870  0100               	movlb	0	; () banked
  5869  000872  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5870  000874  D003               	goto	l509
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5874  000876  010F               	movlb	15	; () banked
  5875  000878  8B09               	bsf	9,5,b	;volatile
  5876  00087A  D002               	goto	l510
  5877  00087C                     l509:
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;inc\CANlib.h: 937: else
  5881                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5882  00087C  010F               	movlb	15	; () banked
  5883  00087E  9B09               	bcf	9,5,b	;volatile
  5884  000880                     l510:
  5885                           
  5886                           ; BSR set to: 15
  5887                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5888  000880  0100               	movlb	0	; () banked
  5889  000882  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5890  000884  D003               	goto	l511
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5894  000886  010F               	movlb	15	; () banked
  5895  000888  8D09               	bsf	9,6,b	;volatile
  5896  00088A  D002               	goto	l512
  5897  00088C                     l511:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;inc\CANlib.h: 942: else
  5901                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5902  00088C  010F               	movlb	15	; () banked
  5903  00088E  9D09               	bcf	9,6,b	;volatile
  5904  000890                     l512:
  5905                           
  5906                           ; BSR set to: 15
  5907                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5908  000890  0100               	movlb	0	; () banked
  5909  000892  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5910  000894  D003               	goto	l513
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5914  000896  010F               	movlb	15	; () banked
  5915  000898  8F09               	bsf	9,7,b	;volatile
  5916  00089A  D002               	goto	l4564
  5917  00089C                     l513:
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;inc\CANlib.h: 947: else
  5921                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5922  00089C  010F               	movlb	15	; () banked
  5923  00089E  9F09               	bcf	9,7,b	;volatile
  5924  0008A0                     l4564:
  5925                           
  5926                           ; BSR set to: 15
  5927                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5928  0008A0  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  5929  0008A4  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5930  0008A8  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5931  0008AC  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5932  0008B0  0E16               	movlw	22
  5933  0008B2  D006               	goto	u5550
  5934  0008B4                     u5555:
  5935  0008B4  0100               	movlb	0	; () banked
  5936  0008B6  90D8               	bcf	status,0,c
  5937  0008B8  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5938  0008BA  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5939  0008BC  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5940  0008BE  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  5941  0008C0                     u5550:
  5942  0008C0  2EE8               	decfsz	wreg,f,c
  5943  0008C2  D7F8               	goto	u5555
  5944  0008C4  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  5945  0008C8  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5946  0008CC  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5947  0008D0  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5951  0008D4  0100               	movlb	0	; () banked
  5952  0008D6  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  5953  0008D8  0100               	movlb	0	; () banked
  5954  0008DA  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5955  0008DC  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5956  0008DE  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5957  0008E0  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5961  0008E2  C0D6  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5962  0008E6                     l4570:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 953: }
  5966                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5967  0008E6  0E03               	movlw	3
  5968  0008E8  0100               	movlb	0	; () banked
  5969  0008EA  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5970  0008EC  A4D8               	btfss	status,2,c
  5971  0008EE  D089               	goto	l4604
  5972                           
  5973                           ; BSR set to: 0
  5974  0008F0  0EF7               	movlw	247
  5975  0008F2  0100               	movlb	0	; () banked
  5976  0008F4  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  5977  0008F6  A4D8               	btfss	status,2,c
  5978  0008F8  D084               	goto	l4604
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;inc\CANlib.h: 956: {
  5982                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5983  0008FA  010F               	movlb	15	; () banked
  5984  0008FC  870D               	bsf	13,3,b	;volatile
  5985                           
  5986                           ; BSR set to: 15
  5987                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5988  0008FE  0100               	movlb	0	; () banked
  5989  000900  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  5990  000902  0100               	movlb	0	; () banked
  5991  000904  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  5992  000906  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5993  000908  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5994  00090A  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5998  00090C  C0D6  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6002  000910  0E00               	movlw	0
  6003  000912  0100               	movlb	0	; () banked
  6004  000914  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  6005  000916  0100               	movlb	0	; () banked
  6006  000918  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6007  00091A  0EFF               	movlw	255
  6008  00091C  0100               	movlb	0	; () banked
  6009  00091E  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6010  000920  0100               	movlb	0	; () banked
  6011  000922  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6012  000924  0E00               	movlw	0
  6013  000926  0100               	movlb	0	; () banked
  6014  000928  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6015  00092A  0100               	movlb	0	; () banked
  6016  00092C  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6017  00092E  0E00               	movlw	0
  6018  000930  0100               	movlb	0	; () banked
  6019  000932  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6020  000934  0100               	movlb	0	; () banked
  6021  000936  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6025  000938  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  6026  00093C  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6027  000940  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6028  000944  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6029  000948  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  6030  00094C  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6031  000950  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6032  000954  0100               	movlb	0	; () banked
  6033  000956  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  6034  000958  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6035  00095C  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6036  000960  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6037  000964  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6041  000968  C0D6  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6045  00096C  0100               	movlb	0	; () banked
  6046  00096E  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6047  000970  D003               	goto	l516
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6051  000972  010F               	movlb	15	; () banked
  6052  000974  810D               	bsf	13,0,b	;volatile
  6053  000976  D002               	goto	l517
  6054  000978                     l516:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;inc\CANlib.h: 968: else
  6058                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6059  000978  010F               	movlb	15	; () banked
  6060  00097A  910D               	bcf	13,0,b	;volatile
  6061  00097C                     l517:
  6062                           
  6063                           ; BSR set to: 15
  6064                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6065  00097C  0100               	movlb	0	; () banked
  6066  00097E  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6067  000980  D003               	goto	l518
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6071  000982  010F               	movlb	15	; () banked
  6072  000984  830D               	bsf	13,1,b	;volatile
  6073  000986  D002               	goto	l519
  6074  000988                     l518:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;inc\CANlib.h: 973: else
  6078                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6079  000988  010F               	movlb	15	; () banked
  6080  00098A  930D               	bcf	13,1,b	;volatile
  6081  00098C                     l519:
  6082                           
  6083                           ; BSR set to: 15
  6084                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6085  00098C  0100               	movlb	0	; () banked
  6086  00098E  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6087  000990  D003               	goto	l520
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6091  000992  010F               	movlb	15	; () banked
  6092  000994  8B0D               	bsf	13,5,b	;volatile
  6093  000996  D002               	goto	l521
  6094  000998                     l520:
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;inc\CANlib.h: 978: else
  6098                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6099  000998  010F               	movlb	15	; () banked
  6100  00099A  9B0D               	bcf	13,5,b	;volatile
  6101  00099C                     l521:
  6102                           
  6103                           ; BSR set to: 15
  6104                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6105  00099C  0100               	movlb	0	; () banked
  6106  00099E  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6107  0009A0  D003               	goto	l522
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6111  0009A2  010F               	movlb	15	; () banked
  6112  0009A4  8D0D               	bsf	13,6,b	;volatile
  6113  0009A6  D002               	goto	l523
  6114  0009A8                     l522:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;inc\CANlib.h: 983: else
  6118                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6119  0009A8  010F               	movlb	15	; () banked
  6120  0009AA  9D0D               	bcf	13,6,b	;volatile
  6121  0009AC                     l523:
  6122                           
  6123                           ; BSR set to: 15
  6124                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6125  0009AC  0100               	movlb	0	; () banked
  6126  0009AE  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6127  0009B0  D003               	goto	l524
  6128                           
  6129                           ; BSR set to: 0
  6130                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6131  0009B2  010F               	movlb	15	; () banked
  6132  0009B4  8F0D               	bsf	13,7,b	;volatile
  6133  0009B6  D002               	goto	l4598
  6134  0009B8                     l524:
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;inc\CANlib.h: 988: else
  6138                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6139  0009B8  010F               	movlb	15	; () banked
  6140  0009BA  9F0D               	bcf	13,7,b	;volatile
  6141  0009BC                     l4598:
  6142                           
  6143                           ; BSR set to: 15
  6144                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6145  0009BC  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  6146  0009C0  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6147  0009C4  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6148  0009C8  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6149  0009CC  0E16               	movlw	22
  6150  0009CE  D006               	goto	u5630
  6151  0009D0                     u5635:
  6152  0009D0  0100               	movlb	0	; () banked
  6153  0009D2  90D8               	bcf	status,0,c
  6154  0009D4  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6155  0009D6  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6156  0009D8  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6157  0009DA  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  6158  0009DC                     u5630:
  6159  0009DC  2EE8               	decfsz	wreg,f,c
  6160  0009DE  D7F8               	goto	u5635
  6161  0009E0  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6162  0009E4  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6163  0009E8  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6164  0009EC  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6168  0009F0  0100               	movlb	0	; () banked
  6169  0009F2  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  6170  0009F4  0100               	movlb	0	; () banked
  6171  0009F6  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6172  0009F8  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6173  0009FA  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6174  0009FC  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6178  0009FE  C0D6  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6179  000A02                     l4604:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;inc\CANlib.h: 994: }
  6183                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6184  000A02  0E04               	movlw	4
  6185  000A04  0100               	movlb	0	; () banked
  6186  000A06  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6187  000A08  A4D8               	btfss	status,2,c
  6188  000A0A  D089               	goto	l4638
  6189                           
  6190                           ; BSR set to: 0
  6191  000A0C  0EF7               	movlw	247
  6192  000A0E  0100               	movlb	0	; () banked
  6193  000A10  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  6194  000A12  A4D8               	btfss	status,2,c
  6195  000A14  D084               	goto	l4638
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;inc\CANlib.h: 997: {
  6199                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6200  000A16  010F               	movlb	15	; () banked
  6201  000A18  8711               	bsf	17,3,b	;volatile
  6202                           
  6203                           ; BSR set to: 15
  6204                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6205  000A1A  0100               	movlb	0	; () banked
  6206  000A1C  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  6207  000A1E  0100               	movlb	0	; () banked
  6208  000A20  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6209  000A22  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6210  000A24  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6211  000A26  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6215  000A28  C0D6  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6219  000A2C  0E00               	movlw	0
  6220  000A2E  0100               	movlb	0	; () banked
  6221  000A30  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  6222  000A32  0100               	movlb	0	; () banked
  6223  000A34  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6224  000A36  0EFF               	movlw	255
  6225  000A38  0100               	movlb	0	; () banked
  6226  000A3A  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6227  000A3C  0100               	movlb	0	; () banked
  6228  000A3E  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6229  000A40  0E00               	movlw	0
  6230  000A42  0100               	movlb	0	; () banked
  6231  000A44  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6232  000A46  0100               	movlb	0	; () banked
  6233  000A48  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6234  000A4A  0E00               	movlw	0
  6235  000A4C  0100               	movlb	0	; () banked
  6236  000A4E  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6237  000A50  0100               	movlb	0	; () banked
  6238  000A52  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6242  000A54  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  6243  000A58  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6244  000A5C  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6245  000A60  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6246  000A64  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  6247  000A68  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6248  000A6C  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6249  000A70  0100               	movlb	0	; () banked
  6250  000A72  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  6251  000A74  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6252  000A78  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6253  000A7C  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6254  000A80  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6258  000A84  C0D6  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6262  000A88  0100               	movlb	0	; () banked
  6263  000A8A  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6264  000A8C  D003               	goto	l527
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6268  000A8E  010F               	movlb	15	; () banked
  6269  000A90  8111               	bsf	17,0,b	;volatile
  6270  000A92  D002               	goto	l528
  6271  000A94                     l527:
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;inc\CANlib.h: 1009: else
  6275                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6276  000A94  010F               	movlb	15	; () banked
  6277  000A96  9111               	bcf	17,0,b	;volatile
  6278  000A98                     l528:
  6279                           
  6280                           ; BSR set to: 15
  6281                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6282  000A98  0100               	movlb	0	; () banked
  6283  000A9A  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6284  000A9C  D003               	goto	l529
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6288  000A9E  010F               	movlb	15	; () banked
  6289  000AA0  8311               	bsf	17,1,b	;volatile
  6290  000AA2  D002               	goto	l530
  6291  000AA4                     l529:
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;inc\CANlib.h: 1014: else
  6295                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6296  000AA4  010F               	movlb	15	; () banked
  6297  000AA6  9311               	bcf	17,1,b	;volatile
  6298  000AA8                     l530:
  6299                           
  6300                           ; BSR set to: 15
  6301                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6302  000AA8  0100               	movlb	0	; () banked
  6303  000AAA  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6304  000AAC  D003               	goto	l531
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6308  000AAE  010F               	movlb	15	; () banked
  6309  000AB0  8B11               	bsf	17,5,b	;volatile
  6310  000AB2  D002               	goto	l532
  6311  000AB4                     l531:
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;inc\CANlib.h: 1019: else
  6315                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6316  000AB4  010F               	movlb	15	; () banked
  6317  000AB6  9B11               	bcf	17,5,b	;volatile
  6318  000AB8                     l532:
  6319                           
  6320                           ; BSR set to: 15
  6321                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6322  000AB8  0100               	movlb	0	; () banked
  6323  000ABA  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6324  000ABC  D003               	goto	l533
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6328  000ABE  010F               	movlb	15	; () banked
  6329  000AC0  8D11               	bsf	17,6,b	;volatile
  6330  000AC2  D002               	goto	l534
  6331  000AC4                     l533:
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;inc\CANlib.h: 1024: else
  6335                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6336  000AC4  010F               	movlb	15	; () banked
  6337  000AC6  9D11               	bcf	17,6,b	;volatile
  6338  000AC8                     l534:
  6339                           
  6340                           ; BSR set to: 15
  6341                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6342  000AC8  0100               	movlb	0	; () banked
  6343  000ACA  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6344  000ACC  D003               	goto	l535
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6348  000ACE  010F               	movlb	15	; () banked
  6349  000AD0  8F11               	bsf	17,7,b	;volatile
  6350  000AD2  D002               	goto	l4632
  6351  000AD4                     l535:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;inc\CANlib.h: 1029: else
  6355                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6356  000AD4  010F               	movlb	15	; () banked
  6357  000AD6  9F11               	bcf	17,7,b	;volatile
  6358  000AD8                     l4632:
  6359                           
  6360                           ; BSR set to: 15
  6361                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6362  000AD8  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  6363  000ADC  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6364  000AE0  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6365  000AE4  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6366  000AE8  0E16               	movlw	22
  6367  000AEA  D006               	goto	u5710
  6368  000AEC                     u5715:
  6369  000AEC  0100               	movlb	0	; () banked
  6370  000AEE  90D8               	bcf	status,0,c
  6371  000AF0  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6372  000AF2  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6373  000AF4  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6374  000AF6  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  6375  000AF8                     u5710:
  6376  000AF8  2EE8               	decfsz	wreg,f,c
  6377  000AFA  D7F8               	goto	u5715
  6378  000AFC  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6379  000B00  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6380  000B04  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6381  000B08  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6385  000B0C  0100               	movlb	0	; () banked
  6386  000B0E  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  6387  000B10  0100               	movlb	0	; () banked
  6388  000B12  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6389  000B14  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6390  000B16  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6391  000B18  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6395  000B1A  C0D6  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6396  000B1E                     l4638:
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;inc\CANlib.h: 1035: }
  6400                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6401  000B1E  0E05               	movlw	5
  6402  000B20  0100               	movlb	0	; () banked
  6403  000B22  19D5               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6404  000B24  A4D8               	btfss	status,2,c
  6405  000B26  0012               	return	
  6406                           
  6407                           ; BSR set to: 0
  6408  000B28  0EF7               	movlw	247
  6409  000B2A  0100               	movlb	0	; () banked
  6410  000B2C  19D0               	xorwf	CANSetFilter@type& (0+255),w,b
  6411  000B2E  A4D8               	btfss	status,2,c
  6412  000B30  0012               	return	
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;inc\CANlib.h: 1038: {
  6416                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6417  000B32  010F               	movlb	15	; () banked
  6418  000B34  8715               	bsf	21,3,b	;volatile
  6419                           
  6420                           ; BSR set to: 15
  6421                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6422  000B36  0100               	movlb	0	; () banked
  6423  000B38  51CC               	movf	CANSetFilter@filter& (0+255),w,b
  6424  000B3A  0100               	movlb	0	; () banked
  6425  000B3C  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6426  000B3E  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6427  000B40  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6428  000B42  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6432  000B44  C0D6  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6436  000B48  0E00               	movlw	0
  6437  000B4A  0100               	movlb	0	; () banked
  6438  000B4C  15CC               	andwf	CANSetFilter@filter& (0+255),w,b
  6439  000B4E  0100               	movlb	0	; () banked
  6440  000B50  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6441  000B52  0EFF               	movlw	255
  6442  000B54  0100               	movlb	0	; () banked
  6443  000B56  15CD               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6444  000B58  0100               	movlb	0	; () banked
  6445  000B5A  6FD7               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6446  000B5C  0E00               	movlw	0
  6447  000B5E  0100               	movlb	0	; () banked
  6448  000B60  15CE               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6449  000B62  0100               	movlb	0	; () banked
  6450  000B64  6FD8               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6451  000B66  0E00               	movlw	0
  6452  000B68  0100               	movlb	0	; () banked
  6453  000B6A  15CF               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6454  000B6C  0100               	movlb	0	; () banked
  6455  000B6E  6FD9               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6459  000B70  C0D6  F0D1         	movff	CANSetFilter@tamp,??_CANSetFilter
  6460  000B74  C0D7  F0D2         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6461  000B78  C0D8  F0D3         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6462  000B7C  C0D9  F0D4         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6463  000B80  C0D2  F0D1         	movff	??_CANSetFilter+1,??_CANSetFilter
  6464  000B84  C0D3  F0D2         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6465  000B88  C0D4  F0D3         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6466  000B8C  0100               	movlb	0	; () banked
  6467  000B8E  6BD4               	clrf	(??_CANSetFilter+3)& (0+255),b
  6468  000B90  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6469  000B94  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6470  000B98  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6471  000B9C  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6475  000BA0  C0D6  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6479  000BA4  0100               	movlb	0	; () banked
  6480  000BA6  A1CE               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6481  000BA8  D003               	goto	l538
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6485  000BAA  010F               	movlb	15	; () banked
  6486  000BAC  8115               	bsf	21,0,b	;volatile
  6487  000BAE  D002               	goto	l539
  6488  000BB0                     l538:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;inc\CANlib.h: 1050: else
  6492                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6493  000BB0  010F               	movlb	15	; () banked
  6494  000BB2  9115               	bcf	21,0,b	;volatile
  6495  000BB4                     l539:
  6496                           
  6497                           ; BSR set to: 15
  6498                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6499  000BB4  0100               	movlb	0	; () banked
  6500  000BB6  A3CE               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6501  000BB8  D003               	goto	l540
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6505  000BBA  010F               	movlb	15	; () banked
  6506  000BBC  8315               	bsf	21,1,b	;volatile
  6507  000BBE  D002               	goto	l541
  6508  000BC0                     l540:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;inc\CANlib.h: 1055: else
  6512                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6513  000BC0  010F               	movlb	15	; () banked
  6514  000BC2  9315               	bcf	21,1,b	;volatile
  6515  000BC4                     l541:
  6516                           
  6517                           ; BSR set to: 15
  6518                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6519  000BC4  0100               	movlb	0	; () banked
  6520  000BC6  A5CE               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6521  000BC8  D003               	goto	l542
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6525  000BCA  010F               	movlb	15	; () banked
  6526  000BCC  8B15               	bsf	21,5,b	;volatile
  6527  000BCE  D002               	goto	l543
  6528  000BD0                     l542:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;inc\CANlib.h: 1060: else
  6532                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6533  000BD0  010F               	movlb	15	; () banked
  6534  000BD2  9B15               	bcf	21,5,b	;volatile
  6535  000BD4                     l543:
  6536                           
  6537                           ; BSR set to: 15
  6538                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6539  000BD4  0100               	movlb	0	; () banked
  6540  000BD6  A7CE               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6541  000BD8  D003               	goto	l544
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6545  000BDA  010F               	movlb	15	; () banked
  6546  000BDC  8D15               	bsf	21,6,b	;volatile
  6547  000BDE  D002               	goto	l545
  6548  000BE0                     l544:
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;inc\CANlib.h: 1065: else
  6552                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6553  000BE0  010F               	movlb	15	; () banked
  6554  000BE2  9D15               	bcf	21,6,b	;volatile
  6555  000BE4                     l545:
  6556                           
  6557                           ; BSR set to: 15
  6558                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6559  000BE4  0100               	movlb	0	; () banked
  6560  000BE6  A9CE               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6561  000BE8  D003               	goto	l546
  6562                           
  6563                           ; BSR set to: 0
  6564                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6565  000BEA  010F               	movlb	15	; () banked
  6566  000BEC  8F15               	bsf	21,7,b	;volatile
  6567  000BEE  D002               	goto	l4666
  6568  000BF0                     l546:
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;inc\CANlib.h: 1070: else
  6572                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6573  000BF0  010F               	movlb	15	; () banked
  6574  000BF2  9F15               	bcf	21,7,b	;volatile
  6575  000BF4                     l4666:
  6576                           
  6577                           ; BSR set to: 15
  6578                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6579  000BF4  C0CC  F0D1         	movff	CANSetFilter@filter,??_CANSetFilter
  6580  000BF8  C0CD  F0D2         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6581  000BFC  C0CE  F0D3         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6582  000C00  C0CF  F0D4         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6583  000C04  0E16               	movlw	22
  6584  000C06  D006               	goto	u5790
  6585  000C08                     u5795:
  6586  000C08  0100               	movlb	0	; () banked
  6587  000C0A  90D8               	bcf	status,0,c
  6588  000C0C  33D4               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6589  000C0E  33D3               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6590  000C10  33D2               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6591  000C12  33D1               	rrcf	??_CANSetFilter& (0+255),f,b
  6592  000C14                     u5790:
  6593  000C14  2EE8               	decfsz	wreg,f,c
  6594  000C16  D7F8               	goto	u5795
  6595  000C18  C0D1  F0D6         	movff	??_CANSetFilter,CANSetFilter@tamp
  6596  000C1C  C0D2  F0D7         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6597  000C20  C0D3  F0D8         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6598  000C24  C0D4  F0D9         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6602  000C28  0100               	movlb	0	; () banked
  6603  000C2A  51D6               	movf	CANSetFilter@tamp& (0+255),w,b
  6604  000C2C  0100               	movlb	0	; () banked
  6605  000C2E  6FD6               	movwf	CANSetFilter@tamp& (0+255),b
  6606  000C30  6BD7               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6607  000C32  6BD8               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6608  000C34  6BD9               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6612  000C36  C0D6  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6613  000C3A  0012               	return	
  6614  000C3C                     __end_of_CANSetFilter:
  6615                           	opt stack 0
  6616                           tblptru	equ	0xFF8
  6617                           tblptrh	equ	0xFF7
  6618                           tblptrl	equ	0xFF6
  6619                           tablat	equ	0xFF5
  6620                           prodh	equ	0xFF4
  6621                           prodl	equ	0xFF3
  6622                           intcon	equ	0xFF2
  6623                           intcon2	equ	0xFF1
  6624                           intcon3	equ	0xFF0
  6625                           postinc0	equ	0xFEE
  6626                           wreg	equ	0xFE8
  6627                           postdec1	equ	0xFE5
  6628                           fsr1l	equ	0xFE1
  6629                           indf2	equ	0xFDF
  6630                           fsr2h	equ	0xFDA
  6631                           fsr2l	equ	0xFD9
  6632                           status	equ	0xFD8
  6633                           
  6634 ;; *************** function _CANOperationMode *****************
  6635 ;; Defined at:
  6636 ;;		line 206 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  mode            1    wreg     enum E16838
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  mode            1   28[BANK0 ] enum E16838
  6641 ;; Return value:  Size  Location     Type
  6642 ;;		None               void
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6650 ;;      Params:         0       0       0       0
  6651 ;;      Locals:         0       1       0       0
  6652 ;;      Temps:          0       0       0       0
  6653 ;;      Totals:         0       1       0       0
  6654 ;;Total ram usage:        1 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    4
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_CANInitialize
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text10
  6665  002A44                     __ptext10:
  6666                           	opt stack 0
  6667  002A44                     _CANOperationMode:
  6668                           	opt stack 24
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;incstack = 0
  6672                           ;CANOperationMode@mode stored from wreg
  6673  002A44  0100               	movlb	0	; () banked
  6674  002A46  6FCC               	movwf	CANOperationMode@mode& (0+255),b
  6675                           
  6676                           ;inc\CANlib.h: 208: CANCON = mode;
  6677  002A48  C0CC  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6678  002A4C                     l4262:
  6679  002A4C  506E               	movf	3950,w,c	;volatile
  6680  002A4E  0BE0               	andlw	224
  6681  002A50  0100               	movlb	0	; () banked
  6682  002A52  19CC               	xorwf	CANOperationMode@mode& (0+255),w,b
  6683  002A54  B4D8               	btfsc	status,2,c
  6684  002A56  0012               	return	
  6685  002A58  D7F9               	goto	l4262
  6686  002A5A                     __end_of_CANOperationMode:
  6687                           	opt stack 0
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           intcon2	equ	0xFF1
  6696                           intcon3	equ	0xFF0
  6697                           postinc0	equ	0xFEE
  6698                           wreg	equ	0xFE8
  6699                           postdec1	equ	0xFE5
  6700                           fsr1l	equ	0xFE1
  6701                           indf2	equ	0xFDF
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706 ;; *************** function ___lmul *****************
  6707 ;; Defined at:
  6708 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  multiplier      4   28[BANK0 ] unsigned long 
  6711 ;;  multiplicand    4   32[BANK0 ] unsigned long 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  product         4   36[BANK0 ] unsigned long 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  4   28[BANK0 ] unsigned long 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6723 ;;      Params:         0       8       0       0
  6724 ;;      Locals:         0       4       0       0
  6725 ;;      Temps:          0       0       0       0
  6726 ;;      Totals:         0      12       0       0
  6727 ;;Total ram usage:       12 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    4
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text11
  6738  00283A                     __ptext11:
  6739                           	opt stack 0
  6740  00283A                     ___lmul:
  6741                           	opt stack 26
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;incstack = 0
  6745  00283A  0E00               	movlw	0
  6746  00283C  0100               	movlb	0	; () banked
  6747  00283E  6FD4               	movwf	___lmul@product& (0+255),b
  6748  002840  0E00               	movlw	0
  6749  002842  6FD5               	movwf	(___lmul@product+1)& (0+255),b
  6750  002844  0E00               	movlw	0
  6751  002846  6FD6               	movwf	(___lmul@product+2)& (0+255),b
  6752  002848  0E00               	movlw	0
  6753  00284A  6FD7               	movwf	(___lmul@product+3)& (0+255),b
  6754  00284C                     l3908:
  6755                           
  6756                           ; BSR set to: 0
  6757  00284C  0100               	movlb	0	; () banked
  6758  00284E  A1CC               	btfss	___lmul@multiplier& (0+255),0,b
  6759  002850  D010               	goto	l3912
  6760                           
  6761                           ; BSR set to: 0
  6762  002852  0100               	movlb	0	; () banked
  6763  002854  51D0               	movf	___lmul@multiplicand& (0+255),w,b
  6764  002856  0100               	movlb	0	; () banked
  6765  002858  27D4               	addwf	___lmul@product& (0+255),f,b
  6766  00285A  0100               	movlb	0	; () banked
  6767  00285C  51D1               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6768  00285E  0100               	movlb	0	; () banked
  6769  002860  23D5               	addwfc	(___lmul@product+1)& (0+255),f,b
  6770  002862  0100               	movlb	0	; () banked
  6771  002864  51D2               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6772  002866  0100               	movlb	0	; () banked
  6773  002868  23D6               	addwfc	(___lmul@product+2)& (0+255),f,b
  6774  00286A  0100               	movlb	0	; () banked
  6775  00286C  51D3               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6776  00286E  0100               	movlb	0	; () banked
  6777  002870  23D7               	addwfc	(___lmul@product+3)& (0+255),f,b
  6778  002872                     l3912:
  6779                           
  6780                           ; BSR set to: 0
  6781  002872  0100               	movlb	0	; () banked
  6782  002874  90D8               	bcf	status,0,c
  6783  002876  37D0               	rlcf	___lmul@multiplicand& (0+255),f,b
  6784  002878  37D1               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6785  00287A  37D2               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6786  00287C  37D3               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6787                           
  6788                           ; BSR set to: 0
  6789  00287E  0100               	movlb	0	; () banked
  6790  002880  90D8               	bcf	status,0,c
  6791  002882  33CF               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6792  002884  33CE               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6793  002886  33CD               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6794  002888  33CC               	rrcf	___lmul@multiplier& (0+255),f,b
  6795  00288A  0100               	movlb	0	; () banked
  6796  00288C  51CC               	movf	___lmul@multiplier& (0+255),w,b
  6797  00288E  0100               	movlb	0	; () banked
  6798  002890  11CD               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6799  002892  0100               	movlb	0	; () banked
  6800  002894  11CE               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6801  002896  0100               	movlb	0	; () banked
  6802  002898  11CF               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6803  00289A  A4D8               	btfss	status,2,c
  6804  00289C  D7D7               	goto	l3908
  6805                           
  6806                           ; BSR set to: 0
  6807  00289E  C0D4  F0CC         	movff	___lmul@product,?___lmul
  6808  0028A2  C0D5  F0CD         	movff	___lmul@product+1,?___lmul+1
  6809  0028A6  C0D6  F0CE         	movff	___lmul@product+2,?___lmul+2
  6810  0028AA  C0D7  F0CF         	movff	___lmul@product+3,?___lmul+3
  6811                           
  6812                           ; BSR set to: 0
  6813  0028AE  0012               	return		;funcret
  6814  0028B0                     __end_of___lmul:
  6815                           	opt stack 0
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           prodh	equ	0xFF4
  6821                           prodl	equ	0xFF3
  6822                           intcon	equ	0xFF2
  6823                           intcon2	equ	0xFF1
  6824                           intcon3	equ	0xFF0
  6825                           postinc0	equ	0xFEE
  6826                           wreg	equ	0xFE8
  6827                           postdec1	equ	0xFE5
  6828                           fsr1l	equ	0xFE1
  6829                           indf2	equ	0xFDF
  6830                           fsr2h	equ	0xFDA
  6831                           fsr2l	equ	0xFD9
  6832                           status	equ	0xFD8
  6833                           
  6834 ;; *************** function ___aldiv *****************
  6835 ;; Defined at:
  6836 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  dividend        4    0[BANK1 ] long 
  6839 ;;  divisor         4    4[BANK1 ] long 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  quotient        4   10[BANK1 ] long 
  6842 ;;  sign            1    9[BANK1 ] unsigned char 
  6843 ;;  counter         1    8[BANK1 ] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  4    0[BANK1 ] long 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6853 ;;      Params:         0       0       8       0
  6854 ;;      Locals:         0       0       6       0
  6855 ;;      Temps:          0       0       0       0
  6856 ;;      Totals:         0       0      14       0
  6857 ;;Total ram usage:       14 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    4
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_main
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text12
  6868  00250E                     __ptext12:
  6869                           	opt stack 0
  6870  00250E                     ___aldiv:
  6871                           	opt stack 26
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;incstack = 0
  6875  00250E  0E00               	movlw	0
  6876  002510  0101               	movlb	1	; () banked
  6877  002512  6F09               	movwf	___aldiv@sign& (0+255),b
  6878                           
  6879                           ; BSR set to: 1
  6880  002514  0101               	movlb	1	; () banked
  6881  002516  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6882  002518  D00C               	goto	l5112
  6883                           
  6884                           ; BSR set to: 1
  6885  00251A  0101               	movlb	1	; () banked
  6886  00251C  1F07               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6887  00251E  1F06               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6888  002520  1F05               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6889  002522  6D04               	negf	___aldiv@divisor& (0+255),b
  6890  002524  0E00               	movlw	0
  6891  002526  2305               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6892  002528  2306               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6893  00252A  2307               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6894                           
  6895                           ; BSR set to: 1
  6896  00252C  0E01               	movlw	1
  6897  00252E  0101               	movlb	1	; () banked
  6898  002530  6F09               	movwf	___aldiv@sign& (0+255),b
  6899  002532                     l5112:
  6900                           
  6901                           ; BSR set to: 1
  6902  002532  0101               	movlb	1	; () banked
  6903  002534  AF03               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6904  002536  D00C               	goto	l5118
  6905                           
  6906                           ; BSR set to: 1
  6907  002538  0101               	movlb	1	; () banked
  6908  00253A  1F03               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6909  00253C  1F02               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6910  00253E  1F01               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6911  002540  6D00               	negf	___aldiv@dividend& (0+255),b
  6912  002542  0E00               	movlw	0
  6913  002544  2301               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6914  002546  2302               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6915  002548  2303               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6916                           
  6917                           ; BSR set to: 1
  6918  00254A  0E01               	movlw	1
  6919  00254C  0101               	movlb	1	; () banked
  6920  00254E  1B09               	xorwf	___aldiv@sign& (0+255),f,b
  6921  002550                     l5118:
  6922                           
  6923                           ; BSR set to: 1
  6924  002550  0E00               	movlw	0
  6925  002552  0101               	movlb	1	; () banked
  6926  002554  6F0A               	movwf	___aldiv@quotient& (0+255),b
  6927  002556  0E00               	movlw	0
  6928  002558  6F0B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6929  00255A  0E00               	movlw	0
  6930  00255C  6F0C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6931  00255E  0E00               	movlw	0
  6932  002560  6F0D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6933                           
  6934                           ; BSR set to: 1
  6935  002562  0101               	movlb	1	; () banked
  6936  002564  5104               	movf	___aldiv@divisor& (0+255),w,b
  6937  002566  0101               	movlb	1	; () banked
  6938  002568  1105               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6939  00256A  0101               	movlb	1	; () banked
  6940  00256C  1106               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6941  00256E  0101               	movlb	1	; () banked
  6942  002570  1107               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6943  002572  B4D8               	btfsc	status,2,c
  6944  002574  D042               	goto	l5140
  6945                           
  6946                           ; BSR set to: 1
  6947  002576  0E01               	movlw	1
  6948  002578  0101               	movlb	1	; () banked
  6949  00257A  6F08               	movwf	___aldiv@counter& (0+255),b
  6950  00257C  D008               	goto	l5126
  6951  00257E                     l5124:
  6952                           
  6953                           ; BSR set to: 1
  6954  00257E  0101               	movlb	1	; () banked
  6955  002580  90D8               	bcf	status,0,c
  6956  002582  3704               	rlcf	___aldiv@divisor& (0+255),f,b
  6957  002584  3705               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6958  002586  3706               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6959  002588  3707               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6960  00258A  0101               	movlb	1	; () banked
  6961  00258C  2B08               	incf	___aldiv@counter& (0+255),f,b
  6962  00258E                     l5126:
  6963                           
  6964                           ; BSR set to: 1
  6965  00258E  0101               	movlb	1	; () banked
  6966  002590  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6967  002592  D7F5               	goto	l5124
  6968  002594                     l5128:
  6969                           
  6970                           ; BSR set to: 1
  6971  002594  0101               	movlb	1	; () banked
  6972  002596  90D8               	bcf	status,0,c
  6973  002598  370A               	rlcf	___aldiv@quotient& (0+255),f,b
  6974  00259A  370B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6975  00259C  370C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6976  00259E  370D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6977                           
  6978                           ; BSR set to: 1
  6979  0025A0  0101               	movlb	1	; () banked
  6980  0025A2  5104               	movf	___aldiv@divisor& (0+255),w,b
  6981  0025A4  0101               	movlb	1	; () banked
  6982  0025A6  5D00               	subwf	___aldiv@dividend& (0+255),w,b
  6983  0025A8  0101               	movlb	1	; () banked
  6984  0025AA  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6985  0025AC  0101               	movlb	1	; () banked
  6986  0025AE  5901               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6987  0025B0  0101               	movlb	1	; () banked
  6988  0025B2  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6989  0025B4  0101               	movlb	1	; () banked
  6990  0025B6  5902               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6991  0025B8  0101               	movlb	1	; () banked
  6992  0025BA  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6993  0025BC  0101               	movlb	1	; () banked
  6994  0025BE  5903               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6995  0025C0  A0D8               	btfss	status,0,c
  6996  0025C2  D012               	goto	l5136
  6997                           
  6998                           ; BSR set to: 1
  6999  0025C4  0101               	movlb	1	; () banked
  7000  0025C6  5104               	movf	___aldiv@divisor& (0+255),w,b
  7001  0025C8  0101               	movlb	1	; () banked
  7002  0025CA  5F00               	subwf	___aldiv@dividend& (0+255),f,b
  7003  0025CC  0101               	movlb	1	; () banked
  7004  0025CE  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7005  0025D0  0101               	movlb	1	; () banked
  7006  0025D2  5B01               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7007  0025D4  0101               	movlb	1	; () banked
  7008  0025D6  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7009  0025D8  0101               	movlb	1	; () banked
  7010  0025DA  5B02               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7011  0025DC  0101               	movlb	1	; () banked
  7012  0025DE  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7013  0025E0  0101               	movlb	1	; () banked
  7014  0025E2  5B03               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7015                           
  7016                           ; BSR set to: 1
  7017  0025E4  0101               	movlb	1	; () banked
  7018  0025E6  810A               	bsf	___aldiv@quotient& (0+255),0,b
  7019  0025E8                     l5136:
  7020                           
  7021                           ; BSR set to: 1
  7022  0025E8  0101               	movlb	1	; () banked
  7023  0025EA  90D8               	bcf	status,0,c
  7024  0025EC  3307               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7025  0025EE  3306               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7026  0025F0  3305               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7027  0025F2  3304               	rrcf	___aldiv@divisor& (0+255),f,b
  7028                           
  7029                           ; BSR set to: 1
  7030  0025F4  0101               	movlb	1	; () banked
  7031  0025F6  2F08               	decfsz	___aldiv@counter& (0+255),f,b
  7032  0025F8  D7CD               	goto	l5128
  7033  0025FA                     l5140:
  7034                           
  7035                           ; BSR set to: 1
  7036  0025FA  0101               	movlb	1	; () banked
  7037  0025FC  5109               	movf	___aldiv@sign& (0+255),w,b
  7038  0025FE  0101               	movlb	1	; () banked
  7039  002600  B4D8               	btfsc	status,2,c
  7040  002602  D009               	goto	l5144
  7041                           
  7042                           ; BSR set to: 1
  7043  002604  0101               	movlb	1	; () banked
  7044  002606  1F0D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7045  002608  1F0C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7046  00260A  1F0B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7047  00260C  6D0A               	negf	___aldiv@quotient& (0+255),b
  7048  00260E  0E00               	movlw	0
  7049  002610  230B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7050  002612  230C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7051  002614  230D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7052  002616                     l5144:
  7053                           
  7054                           ; BSR set to: 1
  7055  002616  C10A  F100         	movff	___aldiv@quotient,?___aldiv
  7056  00261A  C10B  F101         	movff	___aldiv@quotient+1,?___aldiv+1
  7057  00261E  C10C  F102         	movff	___aldiv@quotient+2,?___aldiv+2
  7058  002622  C10D  F103         	movff	___aldiv@quotient+3,?___aldiv+3
  7059  002626  0012               	return	
  7060  002628                     __end_of___aldiv:
  7061                           	opt stack 0
  7062                           tblptru	equ	0xFF8
  7063                           tblptrh	equ	0xFF7
  7064                           tblptrl	equ	0xFF6
  7065                           tablat	equ	0xFF5
  7066                           prodh	equ	0xFF4
  7067                           prodl	equ	0xFF3
  7068                           intcon	equ	0xFF2
  7069                           intcon2	equ	0xFF1
  7070                           intcon3	equ	0xFF0
  7071                           postinc0	equ	0xFEE
  7072                           wreg	equ	0xFE8
  7073                           postdec1	equ	0xFE5
  7074                           fsr1l	equ	0xFE1
  7075                           indf2	equ	0xFDF
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function _CANisTXwarningON *****************
  7081 ;; Defined at:
  7082 ;;		line 1119 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      unsigned char 
  7089 ;; Registers used:
  7090 ;;		wreg
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7096 ;;      Params:         0       0       0       0
  7097 ;;      Locals:         0       0       0       0
  7098 ;;      Temps:          0       0       0       0
  7099 ;;      Totals:         0       0       0       0
  7100 ;;Total ram usage:        0 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    4
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text13
  7111  002A82                     __ptext13:
  7112                           	opt stack 0
  7113  002A82                     _CANisTXwarningON:
  7114                           	opt stack 26
  7115                           
  7116                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7117                           
  7118                           ; BSR set to: 1
  7119                           ;incstack = 0
  7120  002A82  A474               	btfss	3956,2,c	;volatile
  7121  002A84  D002               	goto	u4150
  7122  002A86  0E01               	movlw	1
  7123  002A88  0012               	return	
  7124  002A8A                     u4150:
  7125  002A8A  0E00               	movlw	0
  7126  002A8C  0012               	return	
  7127  002A8E                     __end_of_CANisTXwarningON:
  7128                           	opt stack 0
  7129                           tblptru	equ	0xFF8
  7130                           tblptrh	equ	0xFF7
  7131                           tblptrl	equ	0xFF6
  7132                           tablat	equ	0xFF5
  7133                           prodh	equ	0xFF4
  7134                           prodl	equ	0xFF3
  7135                           intcon	equ	0xFF2
  7136                           intcon2	equ	0xFF1
  7137                           intcon3	equ	0xFF0
  7138                           postinc0	equ	0xFEE
  7139                           wreg	equ	0xFE8
  7140                           postdec1	equ	0xFE5
  7141                           fsr1l	equ	0xFE1
  7142                           indf2	equ	0xFDF
  7143                           fsr2h	equ	0xFDA
  7144                           fsr2l	equ	0xFD9
  7145                           status	equ	0xFD8
  7146                           
  7147 ;; *************** function _CANisRXwarningON *****************
  7148 ;; Defined at:
  7149 ;;		line 1127 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      unsigned char 
  7156 ;; Registers used:
  7157 ;;		wreg
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7163 ;;      Params:         0       0       0       0
  7164 ;;      Locals:         0       0       0       0
  7165 ;;      Temps:          0       0       0       0
  7166 ;;      Totals:         0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    4
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		_main
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           	psect	text14
  7178  002A8E                     __ptext14:
  7179                           	opt stack 0
  7180  002A8E                     _CANisRXwarningON:
  7181                           	opt stack 26
  7182                           
  7183                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7184                           
  7185                           ;incstack = 0
  7186  002A8E  A274               	btfss	3956,1,c	;volatile
  7187  002A90  D002               	goto	u4160
  7188  002A92  0E01               	movlw	1
  7189  002A94  0012               	return	
  7190  002A96                     u4160:
  7191  002A96  0E00               	movlw	0
  7192  002A98  0012               	return	
  7193  002A9A                     __end_of_CANisRXwarningON:
  7194                           	opt stack 0
  7195                           tblptru	equ	0xFF8
  7196                           tblptrh	equ	0xFF7
  7197                           tblptrl	equ	0xFF6
  7198                           tablat	equ	0xFF5
  7199                           prodh	equ	0xFF4
  7200                           prodl	equ	0xFF3
  7201                           intcon	equ	0xFF2
  7202                           intcon2	equ	0xFF1
  7203                           intcon3	equ	0xFF0
  7204                           postinc0	equ	0xFEE
  7205                           wreg	equ	0xFE8
  7206                           postdec1	equ	0xFE5
  7207                           fsr1l	equ	0xFE1
  7208                           indf2	equ	0xFDF
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function _ADC_Read *****************
  7214 ;; Defined at:
  7215 ;;		line 388 in file "ABS_Code.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7229 ;;      Params:         0       0       0       0
  7230 ;;      Locals:         0       0       0       0
  7231 ;;      Temps:          0       0       0       0
  7232 ;;      Totals:         0       0       0       0
  7233 ;;Total ram usage:        0 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    5
  7236 ;; This function calls:
  7237 ;;		___awdiv
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text15
  7244  00294C                     __ptext15:
  7245                           	opt stack 0
  7246  00294C                     _ADC_Read:
  7247                           	opt stack 25
  7248                           
  7249                           ;ABS_Code.c: 389: ADCON0bits.GO = 1;
  7250                           
  7251                           ;incstack = 0
  7252  00294C  82C2               	bsf	4034,1,c	;volatile
  7253  00294E                     l759:
  7254  00294E  B2C2               	btfsc	4034,1,c	;volatile
  7255  002950  D7FE               	goto	l759
  7256                           
  7257                           ;ABS_Code.c: 391: read = ADRESH;
  7258  002952  CFC4 F094          	movff	4036,_read	;volatile
  7259                           
  7260                           ;ABS_Code.c: 392: correction_factor = read - 127;
  7261  002956  0E81               	movlw	129
  7262  002958  0100               	movlb	0	; () banked
  7263  00295A  2594               	addwf	_read& (0+255),w,b
  7264  00295C  0100               	movlb	0	; () banked
  7265  00295E  6F7E               	movwf	_correction_factor& (0+255),b
  7266  002960  0100               	movlb	0	; () banked
  7267  002962  6B7F               	clrf	(_correction_factor+1)& (0+255),b
  7268  002964  0EFF               	movlw	255
  7269  002966  237F               	addwfc	(_correction_factor+1)& (0+255),f,b
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;ABS_Code.c: 393: home_position = correction_factor / 4 + 127;
  7273  002968  C07E  F0CC         	movff	_correction_factor,___awdiv@dividend
  7274  00296C  C07F  F0CD         	movff	_correction_factor+1,___awdiv@dividend+1
  7275  002970  0E00               	movlw	0
  7276  002972  0100               	movlb	0	; () banked
  7277  002974  6FCF               	movwf	(___awdiv@divisor+1)& (0+255),b
  7278  002976  0E04               	movlw	4
  7279  002978  6FCE               	movwf	___awdiv@divisor& (0+255),b
  7280  00297A  EC14  F013         	call	___awdiv	;wreg free
  7281  00297E  0100               	movlb	0	; () banked
  7282  002980  51CC               	movf	?___awdiv& (0+255),w,b
  7283  002982  0F7F               	addlw	127
  7284  002984  0100               	movlb	0	; () banked
  7285  002986  6F93               	movwf	_home_position& (0+255),b
  7286                           
  7287                           ; BSR set to: 0
  7288  002988  0012               	return		;funcret
  7289  00298A                     __end_of_ADC_Read:
  7290                           	opt stack 0
  7291                           tblptru	equ	0xFF8
  7292                           tblptrh	equ	0xFF7
  7293                           tblptrl	equ	0xFF6
  7294                           tablat	equ	0xFF5
  7295                           prodh	equ	0xFF4
  7296                           prodl	equ	0xFF3
  7297                           intcon	equ	0xFF2
  7298                           intcon2	equ	0xFF1
  7299                           intcon3	equ	0xFF0
  7300                           postinc0	equ	0xFEE
  7301                           wreg	equ	0xFE8
  7302                           postdec1	equ	0xFE5
  7303                           fsr1l	equ	0xFE1
  7304                           indf2	equ	0xFDF
  7305                           fsr2h	equ	0xFDA
  7306                           fsr2l	equ	0xFD9
  7307                           status	equ	0xFD8
  7308                           
  7309 ;; *************** function ___awdiv *****************
  7310 ;; Defined at:
  7311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  dividend        2   28[BANK0 ] int 
  7314 ;;  divisor         2   30[BANK0 ] int 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  quotient        2   34[BANK0 ] int 
  7317 ;;  sign            1   33[BANK0 ] unsigned char 
  7318 ;;  counter         1   32[BANK0 ] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  2   28[BANK0 ] int 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7328 ;;      Params:         0       4       0       0
  7329 ;;      Locals:         0       4       0       0
  7330 ;;      Temps:          0       0       0       0
  7331 ;;      Totals:         0       8       0       0
  7332 ;;Total ram usage:        8 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; Hardware stack levels required when called:    4
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_main
  7339 ;;		_ADC_Read
  7340 ;; This function uses a non-reentrant model
  7341 ;;
  7342                           
  7343                           	psect	text16
  7344  002628                     __ptext16:
  7345                           	opt stack 0
  7346  002628                     ___awdiv:
  7347                           	opt stack 26
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;incstack = 0
  7351  002628  0E00               	movlw	0
  7352  00262A  0100               	movlb	0	; () banked
  7353  00262C  6FD1               	movwf	___awdiv@sign& (0+255),b
  7354                           
  7355                           ; BSR set to: 0
  7356  00262E  0100               	movlb	0	; () banked
  7357  002630  AFCF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7358  002632  D008               	goto	l3554
  7359                           
  7360                           ; BSR set to: 0
  7361  002634  0100               	movlb	0	; () banked
  7362  002636  6DCE               	negf	___awdiv@divisor& (0+255),b
  7363  002638  1FCF               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7364  00263A  B0D8               	btfsc	status,0,c
  7365  00263C  2BCF               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7366                           
  7367                           ; BSR set to: 0
  7368  00263E  0E01               	movlw	1
  7369  002640  0100               	movlb	0	; () banked
  7370  002642  6FD1               	movwf	___awdiv@sign& (0+255),b
  7371  002644                     l3554:
  7372                           
  7373                           ; BSR set to: 0
  7374  002644  0100               	movlb	0	; () banked
  7375  002646  AFCD               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7376  002648  D008               	goto	l3560
  7377                           
  7378                           ; BSR set to: 0
  7379  00264A  0100               	movlb	0	; () banked
  7380  00264C  6DCC               	negf	___awdiv@dividend& (0+255),b
  7381  00264E  1FCD               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7382  002650  B0D8               	btfsc	status,0,c
  7383  002652  2BCD               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7384                           
  7385                           ; BSR set to: 0
  7386  002654  0E01               	movlw	1
  7387  002656  0100               	movlb	0	; () banked
  7388  002658  1BD1               	xorwf	___awdiv@sign& (0+255),f,b
  7389  00265A                     l3560:
  7390                           
  7391                           ; BSR set to: 0
  7392  00265A  0E00               	movlw	0
  7393  00265C  0100               	movlb	0	; () banked
  7394  00265E  6FD3               	movwf	(___awdiv@quotient+1)& (0+255),b
  7395  002660  0E00               	movlw	0
  7396  002662  6FD2               	movwf	___awdiv@quotient& (0+255),b
  7397                           
  7398                           ; BSR set to: 0
  7399  002664  0100               	movlb	0	; () banked
  7400  002666  51CE               	movf	___awdiv@divisor& (0+255),w,b
  7401  002668  0100               	movlb	0	; () banked
  7402  00266A  11CF               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7403  00266C  B4D8               	btfsc	status,2,c
  7404  00266E  D02C               	goto	l3582
  7405                           
  7406                           ; BSR set to: 0
  7407  002670  0E01               	movlw	1
  7408  002672  0100               	movlb	0	; () banked
  7409  002674  6FD0               	movwf	___awdiv@counter& (0+255),b
  7410  002676  D006               	goto	l3568
  7411  002678                     l3566:
  7412                           
  7413                           ; BSR set to: 0
  7414  002678  0100               	movlb	0	; () banked
  7415  00267A  90D8               	bcf	status,0,c
  7416  00267C  37CE               	rlcf	___awdiv@divisor& (0+255),f,b
  7417  00267E  37CF               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7418  002680  0100               	movlb	0	; () banked
  7419  002682  2BD0               	incf	___awdiv@counter& (0+255),f,b
  7420  002684                     l3568:
  7421                           
  7422                           ; BSR set to: 0
  7423  002684  0100               	movlb	0	; () banked
  7424  002686  AFCF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7425  002688  D7F7               	goto	l3566
  7426  00268A                     l3570:
  7427                           
  7428                           ; BSR set to: 0
  7429  00268A  0100               	movlb	0	; () banked
  7430  00268C  90D8               	bcf	status,0,c
  7431  00268E  37D2               	rlcf	___awdiv@quotient& (0+255),f,b
  7432  002690  37D3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7433                           
  7434                           ; BSR set to: 0
  7435  002692  0100               	movlb	0	; () banked
  7436  002694  51CE               	movf	___awdiv@divisor& (0+255),w,b
  7437  002696  0100               	movlb	0	; () banked
  7438  002698  5DCC               	subwf	___awdiv@dividend& (0+255),w,b
  7439  00269A  0100               	movlb	0	; () banked
  7440  00269C  51CF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7441  00269E  0100               	movlb	0	; () banked
  7442  0026A0  59CD               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7443  0026A2  A0D8               	btfss	status,0,c
  7444  0026A4  D00A               	goto	l3578
  7445                           
  7446                           ; BSR set to: 0
  7447  0026A6  0100               	movlb	0	; () banked
  7448  0026A8  51CE               	movf	___awdiv@divisor& (0+255),w,b
  7449  0026AA  0100               	movlb	0	; () banked
  7450  0026AC  5FCC               	subwf	___awdiv@dividend& (0+255),f,b
  7451  0026AE  0100               	movlb	0	; () banked
  7452  0026B0  51CF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7453  0026B2  0100               	movlb	0	; () banked
  7454  0026B4  5BCD               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7455                           
  7456                           ; BSR set to: 0
  7457  0026B6  0100               	movlb	0	; () banked
  7458  0026B8  81D2               	bsf	___awdiv@quotient& (0+255),0,b
  7459  0026BA                     l3578:
  7460                           
  7461                           ; BSR set to: 0
  7462  0026BA  0100               	movlb	0	; () banked
  7463  0026BC  90D8               	bcf	status,0,c
  7464  0026BE  33CF               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7465  0026C0  33CE               	rrcf	___awdiv@divisor& (0+255),f,b
  7466                           
  7467                           ; BSR set to: 0
  7468  0026C2  0100               	movlb	0	; () banked
  7469  0026C4  2FD0               	decfsz	___awdiv@counter& (0+255),f,b
  7470  0026C6  D7E1               	goto	l3570
  7471  0026C8                     l3582:
  7472                           
  7473                           ; BSR set to: 0
  7474  0026C8  0100               	movlb	0	; () banked
  7475  0026CA  51D1               	movf	___awdiv@sign& (0+255),w,b
  7476  0026CC  0100               	movlb	0	; () banked
  7477  0026CE  B4D8               	btfsc	status,2,c
  7478  0026D0  D005               	goto	l3586
  7479                           
  7480                           ; BSR set to: 0
  7481  0026D2  0100               	movlb	0	; () banked
  7482  0026D4  6DD2               	negf	___awdiv@quotient& (0+255),b
  7483  0026D6  1FD3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7484  0026D8  B0D8               	btfsc	status,0,c
  7485  0026DA  2BD3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7486  0026DC                     l3586:
  7487                           
  7488                           ; BSR set to: 0
  7489  0026DC  C0D2  F0CC         	movff	___awdiv@quotient,?___awdiv
  7490  0026E0  C0D3  F0CD         	movff	___awdiv@quotient+1,?___awdiv+1
  7491  0026E4  0012               	return	
  7492  0026E6                     __end_of___awdiv:
  7493                           	opt stack 0
  7494                           tblptru	equ	0xFF8
  7495                           tblptrh	equ	0xFF7
  7496                           tblptrl	equ	0xFF6
  7497                           tablat	equ	0xFF5
  7498                           prodh	equ	0xFF4
  7499                           prodl	equ	0xFF3
  7500                           intcon	equ	0xFF2
  7501                           intcon2	equ	0xFF1
  7502                           intcon3	equ	0xFF0
  7503                           postinc0	equ	0xFEE
  7504                           wreg	equ	0xFE8
  7505                           postdec1	equ	0xFE5
  7506                           fsr1l	equ	0xFE1
  7507                           indf2	equ	0xFDF
  7508                           fsr2h	equ	0xFDA
  7509                           fsr2l	equ	0xFD9
  7510                           status	equ	0xFD8
  7511                           
  7512 ;; *************** function _ISR_Bassa *****************
  7513 ;; Defined at:
  7514 ;;		line 221 in file "ABS_Code.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;		None               void
  7521 ;; Registers used:
  7522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7528 ;;      Params:         0       0       0       0
  7529 ;;      Locals:         0       0       0       0
  7530 ;;      Temps:         17       0       0       0
  7531 ;;      Totals:        17       0       0       0
  7532 ;;Total ram usage:       17 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    3
  7535 ;; This function calls:
  7536 ;;		_CANisRxReady
  7537 ;;		_CANreceiveMessage
  7538 ;; This function is called by:
  7539 ;;		Interrupt level 1
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	intcodelo
  7544  000018                     __pintcodelo:
  7545                           	opt stack 0
  7546  000018                     _ISR_Bassa:
  7547                           	opt stack 24
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;incstack = 0
  7551  000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7552  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7553  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7554  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7555  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7556  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7557  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7558  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7559  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7560  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7561  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7562  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7563  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7564  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7565  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7566  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7567  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7568  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7569                           
  7570                           ;ABS_Code.c: 223: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7571  00005E  A0A4               	btfss	4004,0,c	;volatile
  7572  000060  B2A4               	btfsc	4004,1,c	;volatile
  7573  000062  D001               	goto	i1l4124
  7574  000064  D03A               	goto	i1l4148
  7575  000066                     i1l4124:
  7576                           
  7577                           ;ABS_Code.c: 224: if (CANisRxReady()) {
  7578  000066  EC2D  F015         	call	_CANisRxReady	;wreg free
  7579  00006A  0900               	iorlw	0
  7580  00006C  B4D8               	btfsc	status,2,c
  7581  00006E  D033               	goto	i1l4144
  7582                           
  7583                           ;ABS_Code.c: 225: CANreceiveMessage(&msg);
  7584  000070  0E30               	movlw	low _msg
  7585  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7586  000074  0E00               	movlw	high _msg
  7587  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7588  000078  ECE4  F009         	call	_CANreceiveMessage	;wreg free
  7589                           
  7590                           ;ABS_Code.c: 226: if (msg.RTR == 1) {
  7591  00007C  043E               	decf	_msg+14,w,c
  7592  00007E  A4D8               	btfss	status,2,c
  7593  000080  D009               	goto	i1l4132
  7594                           
  7595                           ;ABS_Code.c: 227: remote_frame_id = msg.identifier;
  7596  000082  C030  F068         	movff	_msg,_remote_frame_id	;volatile
  7597  000086  C031  F069         	movff	_msg+1,_remote_frame_id+1	;volatile
  7598  00008A  C032  F06A         	movff	_msg+2,_remote_frame_id+2	;volatile
  7599  00008E  C033  F06B         	movff	_msg+3,_remote_frame_id+3	;volatile
  7600                           
  7601                           ;ABS_Code.c: 228: remote_frame = 1;
  7602  000092  8040               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7603  000094                     i1l4132:
  7604                           
  7605                           ;ABS_Code.c: 229: }
  7606                           ;ABS_Code.c: 230: if (msg.identifier == 0b00000000000000000000000000100) {
  7607  000094  0E04               	movlw	4
  7608  000096  1830               	xorwf	_msg,w,c
  7609  000098  1031               	iorwf	_msg+1,w,c
  7610  00009A  1032               	iorwf	_msg+2,w,c
  7611  00009C  1033               	iorwf	_msg+3,w,c
  7612  00009E  A4D8               	btfss	status,2,c
  7613  0000A0  D004               	goto	i1l4136
  7614                           
  7615                           ;ABS_Code.c: 231: brake_signal_CAN = msg.data[0];
  7616  0000A2  C034  F091         	movff	_msg+4,_brake_signal_CAN	;volatile
  7617                           
  7618                           ;ABS_Code.c: 232: Analogic_Mode = msg.data[1];
  7619  0000A6  C035  F090         	movff	_msg+5,_Analogic_Mode	;volatile
  7620  0000AA                     i1l4136:
  7621                           
  7622                           ;ABS_Code.c: 233: }
  7623                           ;ABS_Code.c: 234: if (msg.identifier == 0b00000000000000000000000001010) {
  7624  0000AA  0E0A               	movlw	10
  7625  0000AC  1830               	xorwf	_msg,w,c
  7626  0000AE  1031               	iorwf	_msg+1,w,c
  7627  0000B0  1032               	iorwf	_msg+2,w,c
  7628  0000B2  1033               	iorwf	_msg+3,w,c
  7629  0000B4  A4D8               	btfss	status,2,c
  7630  0000B6  D00F               	goto	i1l4144
  7631                           
  7632                           ;ABS_Code.c: 235: distance_set_value = msg.data[0];
  7633  0000B8  C034  F08A         	movff	_msg+4,_distance_set_value	;volatile
  7634  0000BC  0100               	movlb	0	; () banked
  7635  0000BE  6B8B               	clrf	(_distance_set_value+1)& (0+255),b	;volatile
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;ABS_Code.c: 236: distance_set_counter_1 = 0;
  7639  0000C0  0E00               	movlw	0
  7640  0000C2  0100               	movlb	0	; () banked
  7641  0000C4  6F87               	movwf	(_distance_set_counter_1+1)& (0+255),b	;volatile
  7642  0000C6  0E00               	movlw	0
  7643  0000C8  6F86               	movwf	_distance_set_counter_1& (0+255),b	;volatile
  7644                           
  7645                           ;ABS_Code.c: 237: distance_set_counter_2 = 0;
  7646  0000CA  0E00               	movlw	0
  7647  0000CC  0100               	movlb	0	; () banked
  7648  0000CE  6F89               	movwf	(_distance_set_counter_2+1)& (0+255),b	;volatile
  7649  0000D0  0E00               	movlw	0
  7650  0000D2  6F88               	movwf	_distance_set_counter_2& (0+255),b	;volatile
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;ABS_Code.c: 238: distance_set_flag = 1;
  7654  0000D4  8E3F               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  7655  0000D6                     i1l4144:
  7656                           
  7657                           ;ABS_Code.c: 239: }
  7658                           ;ABS_Code.c: 240: }
  7659                           ;ABS_Code.c: 241: PIR3bits.RXB0IF = 0;
  7660  0000D6  90A4               	bcf	4004,0,c	;volatile
  7661                           
  7662                           ;ABS_Code.c: 242: PIR3bits.RXB1IF = 0;
  7663  0000D8  92A4               	bcf	4004,1,c	;volatile
  7664  0000DA                     i1l4148:
  7665                           
  7666                           ;ABS_Code.c: 243: }
  7667                           ;ABS_Code.c: 246: if (PIR1bits.TMR1IF == 1) {
  7668  0000DA  A09E               	btfss	3998,0,c	;volatile
  7669  0000DC  D002               	goto	i1l709
  7670                           
  7671                           ;ABS_Code.c: 247: TMR1_overflow = 1;
  7672  0000DE  843F               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7673                           
  7674                           ;ABS_Code.c: 248: PIR1bits.TMR1IF = 0;
  7675  0000E0  909E               	bcf	3998,0,c	;volatile
  7676  0000E2                     i1l709:
  7677                           
  7678                           ;ABS_Code.c: 249: }
  7679                           ;ABS_Code.c: 252: if (PIR2bits.TMR3IF == 1) {
  7680  0000E2  A2A1               	btfss	4001,1,c	;volatile
  7681  0000E4  D002               	goto	i1l711
  7682                           
  7683                           ;ABS_Code.c: 253: TMR3_overflow = 1;
  7684  0000E6  863F               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7685                           
  7686                           ;ABS_Code.c: 254: PIR2bits.TMR3IF = 0;
  7687  0000E8  92A1               	bcf	4001,1,c	;volatile
  7688  0000EA                     i1l711:
  7689  0000EA  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7690  0000EE  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7691  0000F2  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7692  0000F6  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7693  0000FA  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7694  0000FE  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7695  000102  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7696  000106  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7697  00010A  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7698  00010E  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7699  000112  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7700  000116  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7701  00011A  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7702  00011E  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7703  000122  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7704  000126  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7705  00012A  C00D  FFD8         	movff	??_ISR_Bassa,status
  7706  00012E  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7707  000130  0010               	retfie	
  7708  000132                     __end_of_ISR_Bassa:
  7709                           	opt stack 0
  7710                           pclatu	equ	0xFFB
  7711                           pclath	equ	0xFFA
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           intcon	equ	0xFF2
  7719                           intcon2	equ	0xFF1
  7720                           intcon3	equ	0xFF0
  7721                           postinc0	equ	0xFEE
  7722                           fsr0h	equ	0xFEA
  7723                           fsr0l	equ	0xFE9
  7724                           wreg	equ	0xFE8
  7725                           postdec1	equ	0xFE5
  7726                           fsr1h	equ	0xFE2
  7727                           fsr1l	equ	0xFE1
  7728                           bsr	equ	0xFE0
  7729                           indf2	equ	0xFDF
  7730                           fsr2h	equ	0xFDA
  7731                           fsr2l	equ	0xFD9
  7732                           status	equ	0xFD8
  7733                           
  7734 ;; *************** function _CANreceiveMessage *****************
  7735 ;; Defined at:
  7736 ;;		line 528 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  msg             2    0[COMRAM] PTR struct .
  7739 ;;		 -> msg(15), 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  tamp            1   11[COMRAM] unsigned char 
  7742 ;;  error           1   10[COMRAM] unsigned char 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      unsigned char 
  7745 ;; Registers used:
  7746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7752 ;;      Params:         2       0       0       0
  7753 ;;      Locals:         2       0       0       0
  7754 ;;      Temps:          8       0       0       0
  7755 ;;      Totals:        12       0       0       0
  7756 ;;Total ram usage:       12 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:    2
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_ISR_Bassa
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text18
  7767  0013C8                     __ptext18:
  7768                           	opt stack 0
  7769  0013C8                     _CANreceiveMessage:
  7770                           	opt stack 24
  7771                           
  7772                           ;inc\CANlib.h: 530: BYTE tamp;
  7773                           ;inc\CANlib.h: 531: BYTE error = 0;
  7774                           
  7775                           ;incstack = 0
  7776  0013C8  0E00               	movlw	0
  7777  0013CA  6E0B               	movwf	CANreceiveMessage@error,c
  7778                           
  7779                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7780  0013CC  BE74               	btfsc	3956,7,c	;volatile
  7781                           
  7782                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7783  0013CE  800B               	bsf	CANreceiveMessage@error,0,c
  7784                           
  7785                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7786  0013D0  BC74               	btfsc	3956,6,c	;volatile
  7787                           
  7788                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7789  0013D2  820B               	bsf	CANreceiveMessage@error,1,c
  7790                           
  7791                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7792  0013D4  010F               	movlb	15	; () banked
  7793  0013D6  AF50               	btfss	80,7,b	;volatile
  7794  0013D8  D143               	goto	i1l430
  7795                           
  7796                           ; BSR set to: 15
  7797                           ;inc\CANlib.h: 541: {
  7798                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7799  0013DA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7800  0013DE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7801  0013E2  6ADE               	clrf	postinc2,c
  7802  0013E4  6ADE               	clrf	postinc2,c
  7803  0013E6  6ADE               	clrf	postinc2,c
  7804  0013E8  6ADD               	clrf	postdec2,c
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7808  0013EA  EE20 F004          	lfsr	2,4
  7809  0013EE  5001               	movf	CANreceiveMessage@msg,w,c
  7810  0013F0  26D9               	addwf	fsr2l,f,c
  7811  0013F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7812  0013F4  22DA               	addwfc	fsr2h,f,c
  7813  0013F6  CF56 FFDF          	movff	3926,indf2	;volatile
  7814                           
  7815                           ; BSR set to: 15
  7816                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7817  0013FA  EE20 F005          	lfsr	2,5
  7818  0013FE  5001               	movf	CANreceiveMessage@msg,w,c
  7819  001400  26D9               	addwf	fsr2l,f,c
  7820  001402  5002               	movf	CANreceiveMessage@msg+1,w,c
  7821  001404  22DA               	addwfc	fsr2h,f,c
  7822  001406  CF57 FFDF          	movff	3927,indf2	;volatile
  7823                           
  7824                           ; BSR set to: 15
  7825                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7826  00140A  EE20 F006          	lfsr	2,6
  7827  00140E  5001               	movf	CANreceiveMessage@msg,w,c
  7828  001410  26D9               	addwf	fsr2l,f,c
  7829  001412  5002               	movf	CANreceiveMessage@msg+1,w,c
  7830  001414  22DA               	addwfc	fsr2h,f,c
  7831  001416  CF58 FFDF          	movff	3928,indf2	;volatile
  7832                           
  7833                           ; BSR set to: 15
  7834                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7835  00141A  EE20 F007          	lfsr	2,7
  7836  00141E  5001               	movf	CANreceiveMessage@msg,w,c
  7837  001420  26D9               	addwf	fsr2l,f,c
  7838  001422  5002               	movf	CANreceiveMessage@msg+1,w,c
  7839  001424  22DA               	addwfc	fsr2h,f,c
  7840  001426  CF59 FFDF          	movff	3929,indf2	;volatile
  7841                           
  7842                           ; BSR set to: 15
  7843                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7844  00142A  EE20 F008          	lfsr	2,8
  7845  00142E  5001               	movf	CANreceiveMessage@msg,w,c
  7846  001430  26D9               	addwf	fsr2l,f,c
  7847  001432  5002               	movf	CANreceiveMessage@msg+1,w,c
  7848  001434  22DA               	addwfc	fsr2h,f,c
  7849  001436  CF5A FFDF          	movff	3930,indf2	;volatile
  7850                           
  7851                           ; BSR set to: 15
  7852                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7853  00143A  EE20 F009          	lfsr	2,9
  7854  00143E  5001               	movf	CANreceiveMessage@msg,w,c
  7855  001440  26D9               	addwf	fsr2l,f,c
  7856  001442  5002               	movf	CANreceiveMessage@msg+1,w,c
  7857  001444  22DA               	addwfc	fsr2h,f,c
  7858  001446  CF5B FFDF          	movff	3931,indf2	;volatile
  7859                           
  7860                           ; BSR set to: 15
  7861                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7862  00144A  EE20 F00A          	lfsr	2,10
  7863  00144E  5001               	movf	CANreceiveMessage@msg,w,c
  7864  001450  26D9               	addwf	fsr2l,f,c
  7865  001452  5002               	movf	CANreceiveMessage@msg+1,w,c
  7866  001454  22DA               	addwfc	fsr2h,f,c
  7867  001456  CF5C FFDF          	movff	3932,indf2	;volatile
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7871  00145A  EE20 F00B          	lfsr	2,11
  7872  00145E  5001               	movf	CANreceiveMessage@msg,w,c
  7873  001460  26D9               	addwf	fsr2l,f,c
  7874  001462  5002               	movf	CANreceiveMessage@msg+1,w,c
  7875  001464  22DA               	addwfc	fsr2h,f,c
  7876  001466  CF5D FFDF          	movff	3933,indf2	;volatile
  7877                           
  7878                           ; BSR set to: 15
  7879                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7880  00146A  EE20 F00E          	lfsr	2,14
  7881  00146E  5001               	movf	CANreceiveMessage@msg,w,c
  7882  001470  26D9               	addwf	fsr2l,f,c
  7883  001472  5002               	movf	CANreceiveMessage@msg+1,w,c
  7884  001474  22DA               	addwfc	fsr2h,f,c
  7885  001476  010F               	movlb	15	; () banked
  7886  001478  AD55               	btfss	85,6,b	;volatile
  7887  00147A  D002               	goto	i1u394_20
  7888  00147C  0E01               	movlw	1
  7889  00147E  D001               	goto	i1u394_26
  7890  001480                     i1u394_20:
  7891  001480  0E00               	movlw	0
  7892  001482                     i1u394_26:
  7893  001482  6EDF               	movwf	indf2,c
  7894                           
  7895                           ; BSR set to: 15
  7896                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7897  001484  EE20 F00D          	lfsr	2,13
  7898  001488  5001               	movf	CANreceiveMessage@msg,w,c
  7899  00148A  26D9               	addwf	fsr2l,f,c
  7900  00148C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7901  00148E  22DA               	addwfc	fsr2h,f,c
  7902  001490  010F               	movlb	15	; () banked
  7903  001492  5155               	movf	85,w,b	;volatile
  7904  001494  0B0F               	andlw	15
  7905  001496  6EDF               	movwf	indf2,c
  7906                           
  7907                           ; BSR set to: 15
  7908                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7909  001498  EE20 F00C          	lfsr	2,12
  7910  00149C  5001               	movf	CANreceiveMessage@msg,w,c
  7911  00149E  26D9               	addwf	fsr2l,f,c
  7912  0014A0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7913  0014A2  22DA               	addwfc	fsr2h,f,c
  7914  0014A4  010F               	movlb	15	; () banked
  7915  0014A6  A752               	btfss	82,3,b	;volatile
  7916  0014A8  D002               	goto	i1u395_20
  7917  0014AA  0E01               	movlw	1
  7918  0014AC  D001               	goto	i1u395_26
  7919  0014AE                     i1u395_20:
  7920  0014AE  0E00               	movlw	0
  7921  0014B0                     i1u395_26:
  7922  0014B0  6EDF               	movwf	indf2,c
  7923                           
  7924                           ; BSR set to: 15
  7925                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7926  0014B2  010F               	movlb	15	; () banked
  7927  0014B4  B752               	btfsc	82,3,b	;volatile
  7928  0014B6  D044               	goto	i1l3634
  7929                           
  7930                           ; BSR set to: 15
  7931                           ;inc\CANlib.h: 559: {
  7932                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7933  0014B8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7934  0014BC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7935  0014BE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7936  0014C0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7937  0014C2  0E03               	movlw	3
  7938  0014C4                     i1u397_25:
  7939  0014C4  90D8               	bcf	status,0,c
  7940  0014C6  3603               	rlcf	??_CANreceiveMessage,f,c
  7941  0014C8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7942  0014CA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7943  0014CC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7944  0014CE  2EE8               	decfsz	wreg,f,c
  7945  0014D0  D7F9               	goto	i1u397_25
  7946  0014D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7947  0014D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7948  0014DA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7949  0014DE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7950  0014E2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7951  0014E6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7952                           
  7953                           ; BSR set to: 15
  7954                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7955  0014EA  010F               	movlb	15	; () banked
  7956  0014EC  3952               	swapf	82,w,b	;volatile
  7957  0014EE  42E8               	rrncf	wreg,f,c
  7958  0014F0  0B07               	andlw	7
  7959  0014F2  0B07               	andlw	7
  7960  0014F4  6E0C               	movwf	CANreceiveMessage@tamp,c
  7961                           
  7962                           ; BSR set to: 15
  7963                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7964  0014F6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7965  0014FA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7966  0014FE  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7967  001502  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7968  001506  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7969  00150A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7970  00150E  500C               	movf	CANreceiveMessage@tamp,w,c
  7971  001510  2403               	addwf	??_CANreceiveMessage,w,c
  7972  001512  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7973  001514  0E00               	movlw	0
  7974  001516  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7975  001518  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7976  00151A  0E00               	movlw	0
  7977  00151C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7978  00151E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7979  001520  0E00               	movlw	0
  7980  001522  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7981  001524  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7982  001526  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7983  00152A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7984  00152E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7985  001532  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7986  001536  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7987  00153A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7988                           
  7989                           ;inc\CANlib.h: 563: }
  7990  00153E  D08D               	goto	i1l3660
  7991  001540                     i1l3634:
  7992                           
  7993                           ; BSR set to: 15
  7994                           ;inc\CANlib.h: 564: else
  7995                           ;inc\CANlib.h: 565: {
  7996                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7997  001540  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7998  001544  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7999  001546  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8000  001548  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8001  00154A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8002  00154E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8003  001552  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8004  001556  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8005  00155A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8006  00155E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8007                           
  8008                           ; BSR set to: 15
  8009                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8010  001562  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  8011  001566  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8012  001568  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8013  00156A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8014  00156C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8015  001570  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8016  001574  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8017  001578  6A03               	clrf	??_CANreceiveMessage,c
  8018  00157A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8019  00157E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8020  001582  5003               	movf	??_CANreceiveMessage,w,c
  8021  001584  26DE               	addwf	postinc2,f,c
  8022  001586  5004               	movf	??_CANreceiveMessage+1,w,c
  8023  001588  22DE               	addwfc	postinc2,f,c
  8024  00158A  5005               	movf	??_CANreceiveMessage+2,w,c
  8025  00158C  22DE               	addwfc	postinc2,f,c
  8026  00158E  5006               	movf	??_CANreceiveMessage+3,w,c
  8027  001590  22DE               	addwfc	postinc2,f,c
  8028                           
  8029                           ; BSR set to: 15
  8030                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8031  001592  010F               	movlb	15	; () banked
  8032  001594  A152               	btfss	82,0,b	;volatile
  8033  001596  D00C               	goto	i1l3642
  8034                           
  8035                           ; BSR set to: 15
  8036                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  8037  001598  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8038  00159C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8039  0015A0  0E00               	movlw	0
  8040  0015A2  12DE               	iorwf	postinc2,f,c
  8041  0015A4  0E00               	movlw	0
  8042  0015A6  12DE               	iorwf	postinc2,f,c
  8043  0015A8  0E01               	movlw	1
  8044  0015AA  12DE               	iorwf	postinc2,f,c
  8045  0015AC  0E00               	movlw	0
  8046  0015AE  12DE               	iorwf	postinc2,f,c
  8047  0015B0                     i1l3642:
  8048                           
  8049                           ; BSR set to: 15
  8050                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8051  0015B0  010F               	movlb	15	; () banked
  8052  0015B2  A352               	btfss	82,1,b	;volatile
  8053  0015B4  D00C               	goto	i1l3646
  8054                           
  8055                           ; BSR set to: 15
  8056                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  8057  0015B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8058  0015BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8059  0015BE  0E00               	movlw	0
  8060  0015C0  12DE               	iorwf	postinc2,f,c
  8061  0015C2  0E00               	movlw	0
  8062  0015C4  12DE               	iorwf	postinc2,f,c
  8063  0015C6  0E02               	movlw	2
  8064  0015C8  12DE               	iorwf	postinc2,f,c
  8065  0015CA  0E00               	movlw	0
  8066  0015CC  12DE               	iorwf	postinc2,f,c
  8067  0015CE                     i1l3646:
  8068                           
  8069                           ; BSR set to: 15
  8070                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8071  0015CE  010F               	movlb	15	; () banked
  8072  0015D0  AB52               	btfss	82,5,b	;volatile
  8073  0015D2  D00C               	goto	i1l3650
  8074                           
  8075                           ; BSR set to: 15
  8076                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8077  0015D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8078  0015D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8079  0015DC  0E00               	movlw	0
  8080  0015DE  12DE               	iorwf	postinc2,f,c
  8081  0015E0  0E00               	movlw	0
  8082  0015E2  12DE               	iorwf	postinc2,f,c
  8083  0015E4  0E04               	movlw	4
  8084  0015E6  12DE               	iorwf	postinc2,f,c
  8085  0015E8  0E00               	movlw	0
  8086  0015EA  12DE               	iorwf	postinc2,f,c
  8087  0015EC                     i1l3650:
  8088                           
  8089                           ; BSR set to: 15
  8090                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8091  0015EC  010F               	movlb	15	; () banked
  8092  0015EE  AD52               	btfss	82,6,b	;volatile
  8093  0015F0  D00C               	goto	i1l3654
  8094                           
  8095                           ; BSR set to: 15
  8096                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8097  0015F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8098  0015F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8099  0015FA  0E00               	movlw	0
  8100  0015FC  12DE               	iorwf	postinc2,f,c
  8101  0015FE  0E00               	movlw	0
  8102  001600  12DE               	iorwf	postinc2,f,c
  8103  001602  0E08               	movlw	8
  8104  001604  12DE               	iorwf	postinc2,f,c
  8105  001606  0E00               	movlw	0
  8106  001608  12DE               	iorwf	postinc2,f,c
  8107  00160A                     i1l3654:
  8108                           
  8109                           ; BSR set to: 15
  8110                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8111  00160A  010F               	movlb	15	; () banked
  8112  00160C  AF52               	btfss	82,7,b	;volatile
  8113  00160E  D00C               	goto	i1l3658
  8114                           
  8115                           ; BSR set to: 15
  8116                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8117  001610  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8118  001614  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8119  001618  0E00               	movlw	0
  8120  00161A  12DE               	iorwf	postinc2,f,c
  8121  00161C  0E00               	movlw	0
  8122  00161E  12DE               	iorwf	postinc2,f,c
  8123  001620  0E10               	movlw	16
  8124  001622  12DE               	iorwf	postinc2,f,c
  8125  001624  0E00               	movlw	0
  8126  001626  12DE               	iorwf	postinc2,f,c
  8127  001628                     i1l3658:
  8128                           
  8129                           ; BSR set to: 15
  8130                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8131  001628  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8132  00162C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8133  00162E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8134  001630  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8135  001632  0E15               	movlw	21
  8136  001634                     i1u403_25:
  8137  001634  90D8               	bcf	status,0,c
  8138  001636  3603               	rlcf	??_CANreceiveMessage,f,c
  8139  001638  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8140  00163A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8141  00163C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8142  00163E  2EE8               	decfsz	wreg,f,c
  8143  001640  D7F9               	goto	i1u403_25
  8144  001642  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8145  001646  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8146  00164A  5003               	movf	??_CANreceiveMessage,w,c
  8147  00164C  12DE               	iorwf	postinc2,f,c
  8148  00164E  5004               	movf	??_CANreceiveMessage+1,w,c
  8149  001650  12DE               	iorwf	postinc2,f,c
  8150  001652  5005               	movf	??_CANreceiveMessage+2,w,c
  8151  001654  12DE               	iorwf	postinc2,f,c
  8152  001656  5006               	movf	??_CANreceiveMessage+3,w,c
  8153  001658  12DE               	iorwf	postinc2,f,c
  8154  00165A                     i1l3660:
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;inc\CANlib.h: 581: }
  8158                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8159  00165A  010F               	movlb	15	; () banked
  8160  00165C  9F50               	bcf	80,7,b	;volatile
  8161                           
  8162                           ; BSR set to: 15
  8163                           ;inc\CANlib.h: 584: return (error);
  8164                           ;	Return value of _CANreceiveMessage is never used
  8165  00165E  0012               	return	
  8166  001660                     i1l430:
  8167                           
  8168                           ; BSR set to: 15
  8169                           ;inc\CANlib.h: 585: }
  8170                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8171  001660  AE60               	btfss	3936,7,c	;volatile
  8172  001662  0012               	return	
  8173                           
  8174                           ; BSR set to: 15
  8175                           ;inc\CANlib.h: 588: {
  8176                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8177  001664  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8178  001668  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8179  00166C  6ADE               	clrf	postinc2,c
  8180  00166E  6ADE               	clrf	postinc2,c
  8181  001670  6ADE               	clrf	postinc2,c
  8182  001672  6ADD               	clrf	postdec2,c
  8183                           
  8184                           ; BSR set to: 15
  8185                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8186  001674  EE20 F004          	lfsr	2,4
  8187  001678  5001               	movf	CANreceiveMessage@msg,w,c
  8188  00167A  26D9               	addwf	fsr2l,f,c
  8189  00167C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8190  00167E  22DA               	addwfc	fsr2h,f,c
  8191  001680  CF66 FFDF          	movff	3942,indf2	;volatile
  8192                           
  8193                           ; BSR set to: 15
  8194                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8195  001684  EE20 F005          	lfsr	2,5
  8196  001688  5001               	movf	CANreceiveMessage@msg,w,c
  8197  00168A  26D9               	addwf	fsr2l,f,c
  8198  00168C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8199  00168E  22DA               	addwfc	fsr2h,f,c
  8200  001690  CF67 FFDF          	movff	3943,indf2	;volatile
  8201                           
  8202                           ; BSR set to: 15
  8203                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8204  001694  EE20 F006          	lfsr	2,6
  8205  001698  5001               	movf	CANreceiveMessage@msg,w,c
  8206  00169A  26D9               	addwf	fsr2l,f,c
  8207  00169C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8208  00169E  22DA               	addwfc	fsr2h,f,c
  8209  0016A0  CF68 FFDF          	movff	3944,indf2	;volatile
  8210                           
  8211                           ; BSR set to: 15
  8212                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8213  0016A4  EE20 F007          	lfsr	2,7
  8214  0016A8  5001               	movf	CANreceiveMessage@msg,w,c
  8215  0016AA  26D9               	addwf	fsr2l,f,c
  8216  0016AC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8217  0016AE  22DA               	addwfc	fsr2h,f,c
  8218  0016B0  CF69 FFDF          	movff	3945,indf2	;volatile
  8219                           
  8220                           ; BSR set to: 15
  8221                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8222  0016B4  EE20 F008          	lfsr	2,8
  8223  0016B8  5001               	movf	CANreceiveMessage@msg,w,c
  8224  0016BA  26D9               	addwf	fsr2l,f,c
  8225  0016BC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8226  0016BE  22DA               	addwfc	fsr2h,f,c
  8227  0016C0  CF6A FFDF          	movff	3946,indf2	;volatile
  8228                           
  8229                           ; BSR set to: 15
  8230                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8231  0016C4  EE20 F009          	lfsr	2,9
  8232  0016C8  5001               	movf	CANreceiveMessage@msg,w,c
  8233  0016CA  26D9               	addwf	fsr2l,f,c
  8234  0016CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8235  0016CE  22DA               	addwfc	fsr2h,f,c
  8236  0016D0  CF6B FFDF          	movff	3947,indf2	;volatile
  8237                           
  8238                           ; BSR set to: 15
  8239                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8240  0016D4  EE20 F00A          	lfsr	2,10
  8241  0016D8  5001               	movf	CANreceiveMessage@msg,w,c
  8242  0016DA  26D9               	addwf	fsr2l,f,c
  8243  0016DC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8244  0016DE  22DA               	addwfc	fsr2h,f,c
  8245  0016E0  CF6C FFDF          	movff	3948,indf2	;volatile
  8246                           
  8247                           ; BSR set to: 15
  8248                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8249  0016E4  EE20 F00B          	lfsr	2,11
  8250  0016E8  5001               	movf	CANreceiveMessage@msg,w,c
  8251  0016EA  26D9               	addwf	fsr2l,f,c
  8252  0016EC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8253  0016EE  22DA               	addwfc	fsr2h,f,c
  8254  0016F0  CF6D FFDF          	movff	3949,indf2	;volatile
  8255                           
  8256                           ; BSR set to: 15
  8257                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8258  0016F4  EE20 F00E          	lfsr	2,14
  8259  0016F8  5001               	movf	CANreceiveMessage@msg,w,c
  8260  0016FA  26D9               	addwf	fsr2l,f,c
  8261  0016FC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8262  0016FE  22DA               	addwfc	fsr2h,f,c
  8263  001700  AC65               	btfss	3941,6,c	;volatile
  8264  001702  D002               	goto	i1u405_20
  8265  001704  0E01               	movlw	1
  8266  001706  D001               	goto	i1u405_26
  8267  001708                     i1u405_20:
  8268  001708  0E00               	movlw	0
  8269  00170A                     i1u405_26:
  8270  00170A  6EDF               	movwf	indf2,c
  8271                           
  8272                           ; BSR set to: 15
  8273                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8274  00170C  EE20 F00D          	lfsr	2,13
  8275  001710  5001               	movf	CANreceiveMessage@msg,w,c
  8276  001712  26D9               	addwf	fsr2l,f,c
  8277  001714  5002               	movf	CANreceiveMessage@msg+1,w,c
  8278  001716  22DA               	addwfc	fsr2h,f,c
  8279  001718  5065               	movf	3941,w,c	;volatile
  8280  00171A  0B0F               	andlw	15
  8281  00171C  6EDF               	movwf	indf2,c
  8282                           
  8283                           ; BSR set to: 15
  8284                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8285  00171E  EE20 F00C          	lfsr	2,12
  8286  001722  5001               	movf	CANreceiveMessage@msg,w,c
  8287  001724  26D9               	addwf	fsr2l,f,c
  8288  001726  5002               	movf	CANreceiveMessage@msg+1,w,c
  8289  001728  22DA               	addwfc	fsr2h,f,c
  8290  00172A  A662               	btfss	3938,3,c	;volatile
  8291  00172C  D002               	goto	i1u406_20
  8292  00172E  0E01               	movlw	1
  8293  001730  D001               	goto	i1u406_26
  8294  001732                     i1u406_20:
  8295  001732  0E00               	movlw	0
  8296  001734                     i1u406_26:
  8297  001734  6EDF               	movwf	indf2,c
  8298                           
  8299                           ; BSR set to: 15
  8300                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8301  001736  B662               	btfsc	3938,3,c	;volatile
  8302  001738  D043               	goto	i1l3696
  8303                           
  8304                           ; BSR set to: 15
  8305                           ;inc\CANlib.h: 606: {
  8306                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8307  00173A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8308  00173E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8309  001740  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8310  001742  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8311  001744  0E03               	movlw	3
  8312  001746                     i1u408_25:
  8313  001746  90D8               	bcf	status,0,c
  8314  001748  3603               	rlcf	??_CANreceiveMessage,f,c
  8315  00174A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8316  00174C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8317  00174E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8318  001750  2EE8               	decfsz	wreg,f,c
  8319  001752  D7F9               	goto	i1u408_25
  8320  001754  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8321  001758  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8322  00175C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8323  001760  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8324  001764  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8325  001768  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8326                           
  8327                           ; BSR set to: 15
  8328                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8329  00176C  3862               	swapf	3938,w,c	;volatile
  8330  00176E  42E8               	rrncf	wreg,f,c
  8331  001770  0B07               	andlw	7
  8332  001772  0B07               	andlw	7
  8333  001774  6E0C               	movwf	CANreceiveMessage@tamp,c
  8334                           
  8335                           ; BSR set to: 15
  8336                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8337  001776  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8338  00177A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8339  00177E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8340  001782  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8341  001786  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8342  00178A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8343  00178E  500C               	movf	CANreceiveMessage@tamp,w,c
  8344  001790  2403               	addwf	??_CANreceiveMessage,w,c
  8345  001792  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8346  001794  0E00               	movlw	0
  8347  001796  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8348  001798  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8349  00179A  0E00               	movlw	0
  8350  00179C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8351  00179E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8352  0017A0  0E00               	movlw	0
  8353  0017A2  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8354  0017A4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8355  0017A6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8356  0017AA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8357  0017AE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8358  0017B2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8359  0017B6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8360  0017BA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8361                           
  8362                           ;inc\CANlib.h: 610: }
  8363  0017BE  D088               	goto	i1l3722
  8364  0017C0                     i1l3696:
  8365                           
  8366                           ; BSR set to: 15
  8367                           ;inc\CANlib.h: 611: else
  8368                           ;inc\CANlib.h: 612: {
  8369                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8370  0017C0  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8371  0017C4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8372  0017C6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8373  0017C8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8374  0017CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8375  0017CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8376  0017D2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8377  0017D6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8378  0017DA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8379  0017DE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8380                           
  8381                           ; BSR set to: 15
  8382                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8383  0017E2  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8384  0017E6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8385  0017E8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8386  0017EA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8387  0017EC  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8388  0017F0  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8389  0017F4  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8390  0017F8  6A03               	clrf	??_CANreceiveMessage,c
  8391  0017FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8392  0017FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8393  001802  5003               	movf	??_CANreceiveMessage,w,c
  8394  001804  26DE               	addwf	postinc2,f,c
  8395  001806  5004               	movf	??_CANreceiveMessage+1,w,c
  8396  001808  22DE               	addwfc	postinc2,f,c
  8397  00180A  5005               	movf	??_CANreceiveMessage+2,w,c
  8398  00180C  22DE               	addwfc	postinc2,f,c
  8399  00180E  5006               	movf	??_CANreceiveMessage+3,w,c
  8400  001810  22DE               	addwfc	postinc2,f,c
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8404  001812  A062               	btfss	3938,0,c	;volatile
  8405  001814  D00C               	goto	i1l3704
  8406                           
  8407                           ; BSR set to: 15
  8408                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8409  001816  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8410  00181A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8411  00181E  0E00               	movlw	0
  8412  001820  12DE               	iorwf	postinc2,f,c
  8413  001822  0E00               	movlw	0
  8414  001824  12DE               	iorwf	postinc2,f,c
  8415  001826  0E01               	movlw	1
  8416  001828  12DE               	iorwf	postinc2,f,c
  8417  00182A  0E00               	movlw	0
  8418  00182C  12DE               	iorwf	postinc2,f,c
  8419  00182E                     i1l3704:
  8420                           
  8421                           ; BSR set to: 15
  8422                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8423  00182E  A262               	btfss	3938,1,c	;volatile
  8424  001830  D00C               	goto	i1l3708
  8425                           
  8426                           ; BSR set to: 15
  8427                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8428  001832  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8429  001836  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8430  00183A  0E00               	movlw	0
  8431  00183C  12DE               	iorwf	postinc2,f,c
  8432  00183E  0E00               	movlw	0
  8433  001840  12DE               	iorwf	postinc2,f,c
  8434  001842  0E02               	movlw	2
  8435  001844  12DE               	iorwf	postinc2,f,c
  8436  001846  0E00               	movlw	0
  8437  001848  12DE               	iorwf	postinc2,f,c
  8438  00184A                     i1l3708:
  8439                           
  8440                           ; BSR set to: 15
  8441                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8442  00184A  AA62               	btfss	3938,5,c	;volatile
  8443  00184C  D00C               	goto	i1l3712
  8444                           
  8445                           ; BSR set to: 15
  8446                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8447  00184E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8448  001852  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8449  001856  0E00               	movlw	0
  8450  001858  12DE               	iorwf	postinc2,f,c
  8451  00185A  0E00               	movlw	0
  8452  00185C  12DE               	iorwf	postinc2,f,c
  8453  00185E  0E04               	movlw	4
  8454  001860  12DE               	iorwf	postinc2,f,c
  8455  001862  0E00               	movlw	0
  8456  001864  12DE               	iorwf	postinc2,f,c
  8457  001866                     i1l3712:
  8458                           
  8459                           ; BSR set to: 15
  8460                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8461  001866  AC62               	btfss	3938,6,c	;volatile
  8462  001868  D00C               	goto	i1l3716
  8463                           
  8464                           ; BSR set to: 15
  8465                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8466  00186A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8467  00186E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8468  001872  0E00               	movlw	0
  8469  001874  12DE               	iorwf	postinc2,f,c
  8470  001876  0E00               	movlw	0
  8471  001878  12DE               	iorwf	postinc2,f,c
  8472  00187A  0E08               	movlw	8
  8473  00187C  12DE               	iorwf	postinc2,f,c
  8474  00187E  0E00               	movlw	0
  8475  001880  12DE               	iorwf	postinc2,f,c
  8476  001882                     i1l3716:
  8477                           
  8478                           ; BSR set to: 15
  8479                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8480  001882  AE62               	btfss	3938,7,c	;volatile
  8481  001884  D00C               	goto	i1l3720
  8482                           
  8483                           ; BSR set to: 15
  8484                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8485  001886  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8486  00188A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8487  00188E  0E00               	movlw	0
  8488  001890  12DE               	iorwf	postinc2,f,c
  8489  001892  0E00               	movlw	0
  8490  001894  12DE               	iorwf	postinc2,f,c
  8491  001896  0E10               	movlw	16
  8492  001898  12DE               	iorwf	postinc2,f,c
  8493  00189A  0E00               	movlw	0
  8494  00189C  12DE               	iorwf	postinc2,f,c
  8495  00189E                     i1l3720:
  8496                           
  8497                           ; BSR set to: 15
  8498                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8499  00189E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8500  0018A2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8501  0018A4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8502  0018A6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8503  0018A8  0E15               	movlw	21
  8504  0018AA                     i1u414_25:
  8505  0018AA  90D8               	bcf	status,0,c
  8506  0018AC  3603               	rlcf	??_CANreceiveMessage,f,c
  8507  0018AE  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8508  0018B0  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8509  0018B2  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8510  0018B4  2EE8               	decfsz	wreg,f,c
  8511  0018B6  D7F9               	goto	i1u414_25
  8512  0018B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8513  0018BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8514  0018C0  5003               	movf	??_CANreceiveMessage,w,c
  8515  0018C2  12DE               	iorwf	postinc2,f,c
  8516  0018C4  5004               	movf	??_CANreceiveMessage+1,w,c
  8517  0018C6  12DE               	iorwf	postinc2,f,c
  8518  0018C8  5005               	movf	??_CANreceiveMessage+2,w,c
  8519  0018CA  12DE               	iorwf	postinc2,f,c
  8520  0018CC  5006               	movf	??_CANreceiveMessage+3,w,c
  8521  0018CE  12DE               	iorwf	postinc2,f,c
  8522  0018D0                     i1l3722:
  8523                           
  8524                           ; BSR set to: 15
  8525                           ;inc\CANlib.h: 629: }
  8526                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8527  0018D0  9E60               	bcf	3936,7,c	;volatile
  8528                           
  8529                           ; BSR set to: 15
  8530                           ;inc\CANlib.h: 632: return (error);
  8531                           ;	Return value of _CANreceiveMessage is never used
  8532  0018D2  0012               	return	
  8533  0018D4                     __end_of_CANreceiveMessage:
  8534                           	opt stack 0
  8535                           pclatu	equ	0xFFB
  8536                           pclath	equ	0xFFA
  8537                           tblptru	equ	0xFF8
  8538                           tblptrh	equ	0xFF7
  8539                           tblptrl	equ	0xFF6
  8540                           tablat	equ	0xFF5
  8541                           prodh	equ	0xFF4
  8542                           prodl	equ	0xFF3
  8543                           intcon	equ	0xFF2
  8544                           intcon2	equ	0xFF1
  8545                           intcon3	equ	0xFF0
  8546                           postinc0	equ	0xFEE
  8547                           fsr0h	equ	0xFEA
  8548                           fsr0l	equ	0xFE9
  8549                           wreg	equ	0xFE8
  8550                           postdec1	equ	0xFE5
  8551                           fsr1h	equ	0xFE2
  8552                           fsr1l	equ	0xFE1
  8553                           bsr	equ	0xFE0
  8554                           indf2	equ	0xFDF
  8555                           postinc2	equ	0xFDE
  8556                           postdec2	equ	0xFDD
  8557                           fsr2h	equ	0xFDA
  8558                           fsr2l	equ	0xFD9
  8559                           status	equ	0xFD8
  8560                           
  8561 ;; *************** function _CANisRxReady *****************
  8562 ;; Defined at:
  8563 ;;		line 1163 in file "C:/Users/simon/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      unsigned char 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8577 ;;      Params:         0       0       0       0
  8578 ;;      Locals:         1       0       0       0
  8579 ;;      Temps:          0       0       0       0
  8580 ;;      Totals:         1       0       0       0
  8581 ;;Total ram usage:        1 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    2
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_ISR_Bassa
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text19
  8592  002A5A                     __ptext19:
  8593                           	opt stack 0
  8594  002A5A                     _CANisRxReady:
  8595                           	opt stack 24
  8596                           
  8597                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8598                           
  8599                           ; BSR set to: 15
  8600                           ;incstack = 0
  8601  002A5A  0E01               	movlw	1
  8602  002A5C  6E01               	movwf	_CANisRxReady$3284,c
  8603  002A5E  BE60               	btfsc	3936,7,c	;volatile
  8604  002A60  D005               	goto	i1l581
  8605  002A62  010F               	movlb	15	; () banked
  8606  002A64  BF50               	btfsc	80,7,b	;volatile
  8607  002A66  D002               	goto	i1l581
  8608                           
  8609                           ; BSR set to: 15
  8610  002A68  0E00               	movlw	0
  8611  002A6A  6E01               	movwf	_CANisRxReady$3284,c
  8612  002A6C                     i1l581:
  8613  002A6C  5001               	movf	_CANisRxReady$3284,w,c
  8614  002A6E  0012               	return	
  8615  002A70                     __end_of_CANisRxReady:
  8616                           	opt stack 0
  8617                           pclatu	equ	0xFFB
  8618                           pclath	equ	0xFFA
  8619                           tblptru	equ	0xFF8
  8620                           tblptrh	equ	0xFF7
  8621                           tblptrl	equ	0xFF6
  8622                           tablat	equ	0xFF5
  8623                           prodh	equ	0xFF4
  8624                           prodl	equ	0xFF3
  8625                           intcon	equ	0xFF2
  8626                           intcon2	equ	0xFF1
  8627                           intcon3	equ	0xFF0
  8628                           postinc0	equ	0xFEE
  8629                           fsr0h	equ	0xFEA
  8630                           fsr0l	equ	0xFE9
  8631                           wreg	equ	0xFE8
  8632                           postdec1	equ	0xFE5
  8633                           fsr1h	equ	0xFE2
  8634                           fsr1l	equ	0xFE1
  8635                           bsr	equ	0xFE0
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function _ISR_Alta *****************
  8644 ;; Defined at:
  8645 ;;		line 147 in file "ABS_Code.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;		None
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  B               1   27[BANK0 ] unsigned char 
  8650 ;;  A               1   26[BANK0 ] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;		None               void
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8660 ;;      Params:         0       0       0       0
  8661 ;;      Locals:         0       2       0       0
  8662 ;;      Temps:          0      22       0       0
  8663 ;;      Totals:         0      24       0       0
  8664 ;;Total ram usage:       24 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    1
  8667 ;; This function calls:
  8668 ;;		_WriteTimer0
  8669 ;;		___lwdiv
  8670 ;;		i2___awdiv
  8671 ;;		i2___wmul
  8672 ;; This function is called by:
  8673 ;;		Interrupt level 2
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	intcode
  8678  000008                     __pintcode:
  8679                           	opt stack 0
  8680  000008                     _ISR_Alta:
  8681                           	opt stack 24
  8682                           
  8683                           ;incstack = 0
  8684  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8685  00000A  CFFA F0BC          	movff	pclath,??_ISR_Alta+8
  8686  00000E  CFFB F0BD          	movff	pclatu,??_ISR_Alta+9
  8687  000012  ED39  F00E         	call	int_func,f	;refresh shadow registers
  8688                           pclatu	equ	0xFFB
  8689                           pclath	equ	0xFFA
  8690                           tblptru	equ	0xFF8
  8691                           tblptrh	equ	0xFF7
  8692                           tblptrl	equ	0xFF6
  8693                           tablat	equ	0xFF5
  8694                           prodh	equ	0xFF4
  8695                           prodl	equ	0xFF3
  8696                           intcon	equ	0xFF2
  8697                           intcon2	equ	0xFF1
  8698                           intcon3	equ	0xFF0
  8699                           postinc0	equ	0xFEE
  8700                           fsr0h	equ	0xFEA
  8701                           fsr0l	equ	0xFE9
  8702                           wreg	equ	0xFE8
  8703                           postdec1	equ	0xFE5
  8704                           fsr1h	equ	0xFE2
  8705                           fsr1l	equ	0xFE1
  8706                           bsr	equ	0xFE0
  8707                           indf2	equ	0xFDF
  8708                           postinc2	equ	0xFDE
  8709                           postdec2	equ	0xFDD
  8710                           fsr2h	equ	0xFDA
  8711                           fsr2l	equ	0xFD9
  8712                           status	equ	0xFD8
  8713                           
  8714                           	psect	intcode_body
  8715  001C72                     __pintcode_body:
  8716                           	opt stack 24
  8717  001C72                     int_func:
  8718                           	opt stack 24
  8719  001C72  0006               	pop		; remove dummy address from shadow register refresh
  8720  001C74  CFE9 F0BE          	movff	fsr0l,??_ISR_Alta+10
  8721  001C78  CFEA F0BF          	movff	fsr0h,??_ISR_Alta+11
  8722  001C7C  CFE1 F0C0          	movff	fsr1l,??_ISR_Alta+12
  8723  001C80  CFE2 F0C1          	movff	fsr1h,??_ISR_Alta+13
  8724  001C84  CFD9 F0C2          	movff	fsr2l,??_ISR_Alta+14
  8725  001C88  CFDA F0C3          	movff	fsr2h,??_ISR_Alta+15
  8726  001C8C  CFF3 F0C4          	movff	prodl,??_ISR_Alta+16
  8727  001C90  CFF4 F0C5          	movff	prodh,??_ISR_Alta+17
  8728  001C94  CFF6 F0C6          	movff	tblptrl,??_ISR_Alta+18
  8729  001C98  CFF7 F0C7          	movff	tblptrh,??_ISR_Alta+19
  8730  001C9C  CFF8 F0C8          	movff	tblptru,??_ISR_Alta+20
  8731  001CA0  CFF5 F0C9          	movff	tablat,??_ISR_Alta+21
  8732                           
  8733                           ;ABS_Code.c: 149: if (INTCONbits.TMR0IF == 1) {
  8734  001CA4  A4F2               	btfss	intcon,2,c	;volatile
  8735  001CA6  D0A6               	goto	i2l5208
  8736                           
  8737                           ;ABS_Code.c: 150: if (PORTCbits.RC0 == 1) {
  8738  001CA8  A082               	btfss	3970,0,c	;volatile
  8739  001CAA  D09D               	goto	i2l5204
  8740                           
  8741                           ;ABS_Code.c: 151: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8742  001CAC  0E40               	movlw	64
  8743  001CAE  0100               	movlb	0	; () banked
  8744  001CB0  6FB4               	movwf	??_ISR_Alta& (0+255),b
  8745  001CB2  0E06               	movlw	6
  8746  001CB4  0100               	movlb	0	; () banked
  8747  001CB6  6FB5               	movwf	(??_ISR_Alta+1)& (0+255),b
  8748  001CB8  C0AF  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8749  001CBC  6A1F               	clrf	i2___wmul@multiplier+1,c
  8750  001CBE  0E05               	movlw	5
  8751  001CC0  6E21               	movwf	i2___wmul@multiplicand+1,c
  8752  001CC2  0E78               	movlw	120
  8753  001CC4  6E20               	movwf	i2___wmul@multiplicand,c
  8754  001CC6  ECFD  F014         	call	i2___wmul	;wreg free
  8755  001CCA  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8756  001CCE  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8757  001CD2  0E00               	movlw	0
  8758  001CD4  6E27               	movwf	i2___awdiv@divisor+1,c
  8759  001CD6  0EB4               	movlw	180
  8760  001CD8  6E26               	movwf	i2___awdiv@divisor,c
  8761  001CDA  ECCF  F013         	call	i2___awdiv	;wreg free
  8762  001CDE  90D8               	bcf	status,0,c
  8763  001CE0  3624               	rlcf	?i2___awdiv,f,c
  8764  001CE2  3625               	rlcf	?i2___awdiv+1,f,c
  8765  001CE4  0100               	movlb	0	; () banked
  8766  001CE6  51B4               	movf	??_ISR_Alta& (0+255),w,b
  8767  001CE8  2624               	addwf	?i2___awdiv,f,c
  8768  001CEA  0100               	movlb	0	; () banked
  8769  001CEC  51B5               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8770  001CEE  2225               	addwfc	?i2___awdiv+1,f,c
  8771  001CF0  C024  F070         	movff	?i2___awdiv,_timer_on	;volatile
  8772  001CF4  C025  F071         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8773  001CF8  0100               	movlb	0	; () banked
  8774  001CFA  0E00               	movlw	0
  8775  001CFC  BF71               	btfsc	(_timer_on+1)& (0+255),7,b	;volatile
  8776  001CFE  0EFF               	movlw	-1
  8777  001D00  6F72               	movwf	(_timer_on+2)& (0+255),b	;volatile
  8778  001D02  6F73               	movwf	(_timer_on+3)& (0+255),b	;volatile
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;ABS_Code.c: 152: timer_off = 65536 - (40000 - timer_on);
  8782  001D04  C070  F0B4         	movff	_timer_on,??_ISR_Alta	;volatile
  8783  001D08  C071  F0B5         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8784  001D0C  C072  F0B6         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8785  001D10  C073  F0B7         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8786  001D14  0100               	movlb	0	; () banked
  8787  001D16  1FB4               	comf	??_ISR_Alta& (0+255),f,b
  8788  001D18  1FB5               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8789  001D1A  1FB6               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8790  001D1C  1FB7               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8791  001D1E  2BB4               	incf	??_ISR_Alta& (0+255),f,b
  8792  001D20  0E00               	movlw	0
  8793  001D22  23B5               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8794  001D24  23B6               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8795  001D26  23B7               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8796  001D28  0E40               	movlw	64
  8797  001D2A  0100               	movlb	0	; () banked
  8798  001D2C  25B4               	addwf	??_ISR_Alta& (0+255),w,b
  8799  001D2E  0100               	movlb	0	; () banked
  8800  001D30  6FB8               	movwf	(??_ISR_Alta+4)& (0+255),b
  8801  001D32  0E9C               	movlw	156
  8802  001D34  0100               	movlb	0	; () banked
  8803  001D36  21B5               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8804  001D38  0100               	movlb	0	; () banked
  8805  001D3A  6FB9               	movwf	(??_ISR_Alta+5)& (0+255),b
  8806  001D3C  0E00               	movlw	0
  8807  001D3E  0100               	movlb	0	; () banked
  8808  001D40  21B6               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8809  001D42  0100               	movlb	0	; () banked
  8810  001D44  6FBA               	movwf	(??_ISR_Alta+6)& (0+255),b
  8811  001D46  0E00               	movlw	0
  8812  001D48  0100               	movlb	0	; () banked
  8813  001D4A  21B7               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8814  001D4C  0100               	movlb	0	; () banked
  8815  001D4E  6FBB               	movwf	(??_ISR_Alta+7)& (0+255),b
  8816  001D50  0100               	movlb	0	; () banked
  8817  001D52  1FB8               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8818  001D54  1FB9               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8819  001D56  1FBA               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8820  001D58  1FBB               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8821  001D5A  2BB8               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8822  001D5C  0E00               	movlw	0
  8823  001D5E  23B9               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8824  001D60  23BA               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8825  001D62  23BB               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8826  001D64  0E00               	movlw	0
  8827  001D66  0100               	movlb	0	; () banked
  8828  001D68  25B8               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8829  001D6A  0100               	movlb	0	; () banked
  8830  001D6C  6F6C               	movwf	_timer_off& (0+255),b	;volatile
  8831  001D6E  0E00               	movlw	0
  8832  001D70  0100               	movlb	0	; () banked
  8833  001D72  21B9               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8834  001D74  0100               	movlb	0	; () banked
  8835  001D76  6F6D               	movwf	(_timer_off+1)& (0+255),b	;volatile
  8836  001D78  0E01               	movlw	1
  8837  001D7A  0100               	movlb	0	; () banked
  8838  001D7C  21BA               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8839  001D7E  0100               	movlb	0	; () banked
  8840  001D80  6F6E               	movwf	(_timer_off+2)& (0+255),b	;volatile
  8841  001D82  0E00               	movlw	0
  8842  001D84  0100               	movlb	0	; () banked
  8843  001D86  21BB               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8844  001D88  0100               	movlb	0	; () banked
  8845  001D8A  6F6F               	movwf	(_timer_off+3)& (0+255),b	;volatile
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;ABS_Code.c: 153: timer_on = 65536 - timer_on;
  8849  001D8C  C070  F0B4         	movff	_timer_on,??_ISR_Alta	;volatile
  8850  001D90  C071  F0B5         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8851  001D94  C072  F0B6         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8852  001D98  C073  F0B7         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8853  001D9C  0100               	movlb	0	; () banked
  8854  001D9E  1FB4               	comf	??_ISR_Alta& (0+255),f,b
  8855  001DA0  1FB5               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8856  001DA2  1FB6               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8857  001DA4  1FB7               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8858  001DA6  2BB4               	incf	??_ISR_Alta& (0+255),f,b
  8859  001DA8  0E00               	movlw	0
  8860  001DAA  23B5               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8861  001DAC  23B6               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8862  001DAE  23B7               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8863  001DB0  0E00               	movlw	0
  8864  001DB2  0100               	movlb	0	; () banked
  8865  001DB4  25B4               	addwf	??_ISR_Alta& (0+255),w,b
  8866  001DB6  0100               	movlb	0	; () banked
  8867  001DB8  6F70               	movwf	_timer_on& (0+255),b	;volatile
  8868  001DBA  0E00               	movlw	0
  8869  001DBC  0100               	movlb	0	; () banked
  8870  001DBE  21B5               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8871  001DC0  0100               	movlb	0	; () banked
  8872  001DC2  6F71               	movwf	(_timer_on+1)& (0+255),b	;volatile
  8873  001DC4  0E01               	movlw	1
  8874  001DC6  0100               	movlb	0	; () banked
  8875  001DC8  21B6               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8876  001DCA  0100               	movlb	0	; () banked
  8877  001DCC  6F72               	movwf	(_timer_on+2)& (0+255),b	;volatile
  8878  001DCE  0E00               	movlw	0
  8879  001DD0  0100               	movlb	0	; () banked
  8880  001DD2  21B7               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8881  001DD4  0100               	movlb	0	; () banked
  8882  001DD6  6F73               	movwf	(_timer_on+3)& (0+255),b	;volatile
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;ABS_Code.c: 154: WriteTimer0(timer_on);
  8886  001DD8  C070  F01E         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8887  001DDC  C071  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8888  001DE0  EC38  F015         	call	_WriteTimer0	;wreg free
  8889                           
  8890                           ;ABS_Code.c: 155: } else {
  8891  001DE4  D006               	goto	i2l5206
  8892  001DE6                     i2l5204:
  8893                           
  8894                           ;ABS_Code.c: 156: WriteTimer0(timer_off);
  8895  001DE6  C06C  F01E         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8896  001DEA  C06D  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8897  001DEE  EC38  F015         	call	_WriteTimer0	;wreg free
  8898  001DF2                     i2l5206:
  8899                           
  8900                           ;ABS_Code.c: 157: }
  8901                           ;ABS_Code.c: 158: INTCONbits.TMR0IF = 0;
  8902  001DF2  94F2               	bcf	intcon,2,c	;volatile
  8903  001DF4                     i2l5208:
  8904                           
  8905                           ;ABS_Code.c: 159: }
  8906                           ;ABS_Code.c: 162: if (INTCONbits.INT0IF == 1) {
  8907  001DF4  A2F2               	btfss	intcon,1,c	;volatile
  8908  001DF6  D039               	goto	i2l5236
  8909                           
  8910                           ;ABS_Code.c: 163: if (x == 0) {
  8911  001DF8  B240               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8912  001DFA  D006               	goto	i2l5216
  8913                           
  8914                           ;ABS_Code.c: 164: TMR1H = 0x00;
  8915  001DFC  0E00               	movlw	0
  8916  001DFE  6ECF               	movwf	4047,c	;volatile
  8917                           
  8918                           ;ABS_Code.c: 165: TMR1L = 0x00;
  8919  001E00  0E00               	movlw	0
  8920  001E02  6ECE               	movwf	4046,c	;volatile
  8921                           
  8922                           ;ABS_Code.c: 166: x = 1;
  8923  001E04  8240               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8924                           
  8925                           ;ABS_Code.c: 167: } else {
  8926  001E06  D030               	goto	i2l5234
  8927  001E08                     i2l5216:
  8928                           
  8929                           ;ABS_Code.c: 168: gap_time_1 = (TMR1H << 8) + TMR1L;
  8930  001E08  50CF               	movf	4047,w,c	;volatile
  8931  001E0A  0100               	movlb	0	; () banked
  8932  001E0C  6FB5               	movwf	(??_ISR_Alta+1)& (0+255),b
  8933  001E0E  6BB4               	clrf	??_ISR_Alta& (0+255),b
  8934  001E10  50CE               	movf	4046,w,c	;volatile
  8935  001E12  0100               	movlb	0	; () banked
  8936  001E14  25B4               	addwf	??_ISR_Alta& (0+255),w,b
  8937  001E16  0100               	movlb	0	; () banked
  8938  001E18  6F8C               	movwf	_gap_time_1& (0+255),b	;volatile
  8939  001E1A  0E00               	movlw	0
  8940  001E1C  0100               	movlb	0	; () banked
  8941  001E1E  21B5               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8942  001E20  0100               	movlb	0	; () banked
  8943  001E22  6F8D               	movwf	(_gap_time_1+1)& (0+255),b	;volatile
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;ABS_Code.c: 169: gap_time_1 = gap_time_1 / 500;
  8947  001E24  C08C  F01E         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8948  001E28  C08D  F01F         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8949  001E2C  0E01               	movlw	1
  8950  001E2E  6E21               	movwf	___lwdiv@divisor+1,c
  8951  001E30  0EF4               	movlw	244
  8952  001E32  6E20               	movwf	___lwdiv@divisor,c
  8953  001E34  EC58  F014         	call	___lwdiv	;wreg free
  8954  001E38  C01E  F08C         	movff	?___lwdiv,_gap_time_1	;volatile
  8955  001E3C  C01F  F08D         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8956                           
  8957                           ;ABS_Code.c: 170: ENC1_measure = 1;
  8958  001E40  803F               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8959                           
  8960                           ;ABS_Code.c: 171: TMR1H = 0x00;
  8961  001E42  0E00               	movlw	0
  8962  001E44  6ECF               	movwf	4047,c	;volatile
  8963                           
  8964                           ;ABS_Code.c: 172: TMR1H = 0x00;
  8965  001E46  0E00               	movlw	0
  8966  001E48  6ECF               	movwf	4047,c	;volatile
  8967                           
  8968                           ;ABS_Code.c: 173: if (count_flag == 1) {
  8969  001E4A  AA3F               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8970  001E4C  D007               	goto	i2l5230
  8971                           
  8972                           ;ABS_Code.c: 174: int_counter_1++;
  8973  001E4E  0E01               	movlw	1
  8974  001E50  0100               	movlb	0	; () banked
  8975  001E52  2760               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8976  001E54  0E00               	movlw	0
  8977  001E56  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8978  001E58  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8979  001E5A  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8980  001E5C                     i2l5230:
  8981                           
  8982                           ;ABS_Code.c: 175: }
  8983                           ;ABS_Code.c: 176: if (distance_set_flag = 1) {
  8984  001E5C  8E3F               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  8985  001E5E  AE3F               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  8986  001E60  D003               	goto	i2l5234
  8987                           
  8988                           ;ABS_Code.c: 177: distance_set_counter_1++;
  8989  001E62  0100               	movlb	0	; () banked
  8990  001E64  4B86               	infsnz	_distance_set_counter_1& (0+255),f,b	;volatile
  8991  001E66  2B87               	incf	(_distance_set_counter_1+1)& (0+255),f,b	;volatile
  8992  001E68                     i2l5234:
  8993                           
  8994                           ;ABS_Code.c: 178: }
  8995                           ;ABS_Code.c: 179: }
  8996                           ;ABS_Code.c: 180: INTCONbits.INT0IF = 0;
  8997  001E68  92F2               	bcf	intcon,1,c	;volatile
  8998  001E6A                     i2l5236:
  8999                           
  9000                           ;ABS_Code.c: 182: }
  9001                           ;ABS_Code.c: 185: if (INTCON3bits.INT1IF == 1) {
  9002  001E6A  A0F0               	btfss	intcon3,0,c	;volatile
  9003  001E6C  D042               	goto	i2l699
  9004                           
  9005                           ;ABS_Code.c: 186: if (y == 0) {
  9006  001E6E  B440               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  9007  001E70  D006               	goto	i2l5244
  9008                           
  9009                           ;ABS_Code.c: 187: TMR3H = 0x00;
  9010  001E72  0E00               	movlw	0
  9011  001E74  6EB3               	movwf	4019,c	;volatile
  9012                           
  9013                           ;ABS_Code.c: 188: TMR3L = 0x00;
  9014  001E76  0E00               	movlw	0
  9015  001E78  6EB2               	movwf	4018,c	;volatile
  9016                           
  9017                           ;ABS_Code.c: 189: y = 1;
  9018  001E7A  8440               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  9019                           
  9020                           ;ABS_Code.c: 190: } else {
  9021  001E7C  D039               	goto	i2l5268
  9022  001E7E                     i2l5244:
  9023                           
  9024                           ;ABS_Code.c: 191: unsigned char A = 0;
  9025  001E7E  0E00               	movlw	0
  9026  001E80  0100               	movlb	0	; () banked
  9027  001E82  6FCA               	movwf	ISR_Alta@A& (0+255),b
  9028                           
  9029                           ;ABS_Code.c: 192: unsigned char B = 0;
  9030  001E84  0E00               	movlw	0
  9031  001E86  0100               	movlb	0	; () banked
  9032  001E88  6FCB               	movwf	ISR_Alta@B& (0+255),b
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;ABS_Code.c: 193: A = TMR3H;
  9036  001E8A  CFB3 F0CA          	movff	4019,ISR_Alta@A	;volatile
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;ABS_Code.c: 194: B = TMR3L;
  9040  001E8E  CFB2 F0CB          	movff	4018,ISR_Alta@B	;volatile
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;ABS_Code.c: 196: gap_time_2 = TMR3H;
  9044  001E92  CFB3 F08E          	movff	4019,_gap_time_2	;volatile
  9045  001E96  0100               	movlb	0	; () banked
  9046  001E98  6B8F               	clrf	(_gap_time_2+1)& (0+255),b	;volatile
  9047                           
  9048                           ;ABS_Code.c: 197: gap_time_2 = (gap_time_2<<8)+TMR3L;
  9049  001E9A  0100               	movlb	0	; () banked
  9050  001E9C  518E               	movf	_gap_time_2& (0+255),w,b	;volatile
  9051  001E9E  0100               	movlb	0	; () banked
  9052  001EA0  6FB4               	movwf	??_ISR_Alta& (0+255),b
  9053  001EA2  50B2               	movf	4018,w,c	;volatile
  9054  001EA4  0100               	movlb	0	; () banked
  9055  001EA6  6F8E               	movwf	_gap_time_2& (0+255),b	;volatile
  9056  001EA8  C0B4  F08F         	movff	??_ISR_Alta,_gap_time_2+1	;volatile
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;ABS_Code.c: 199: gap_time_2 = gap_time_2 / 500;
  9060  001EAC  C08E  F01E         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  9061  001EB0  C08F  F01F         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  9062  001EB4  0E01               	movlw	1
  9063  001EB6  6E21               	movwf	___lwdiv@divisor+1,c
  9064  001EB8  0EF4               	movlw	244
  9065  001EBA  6E20               	movwf	___lwdiv@divisor,c
  9066  001EBC  EC58  F014         	call	___lwdiv	;wreg free
  9067  001EC0  C01E  F08E         	movff	?___lwdiv,_gap_time_2	;volatile
  9068  001EC4  C01F  F08F         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  9069                           
  9070                           ;ABS_Code.c: 200: ENC2_measure = 1;
  9071  001EC8  823F               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  9072                           
  9073                           ;ABS_Code.c: 201: TMR3H = 0x00;
  9074  001ECA  0E00               	movlw	0
  9075  001ECC  6EB3               	movwf	4019,c	;volatile
  9076                           
  9077                           ;ABS_Code.c: 202: TMR3H = 0x00;
  9078  001ECE  0E00               	movlw	0
  9079  001ED0  6EB3               	movwf	4019,c	;volatile
  9080                           
  9081                           ;ABS_Code.c: 203: if (count_flag == 1) {
  9082  001ED2  AA3F               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9083  001ED4  D007               	goto	i2l5264
  9084                           
  9085                           ;ABS_Code.c: 204: int_counter_2++;
  9086  001ED6  0E01               	movlw	1
  9087  001ED8  0100               	movlb	0	; () banked
  9088  001EDA  2764               	addwf	_int_counter_2& (0+255),f,b	;volatile
  9089  001EDC  0E00               	movlw	0
  9090  001EDE  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  9091  001EE0  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  9092  001EE2  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9093  001EE4                     i2l5264:
  9094                           
  9095                           ;ABS_Code.c: 205: }
  9096                           ;ABS_Code.c: 206: if (distance_set_flag = 1) {
  9097  001EE4  8E3F               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  9098  001EE6  AE3F               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  9099  001EE8  D003               	goto	i2l5268
  9100                           
  9101                           ;ABS_Code.c: 207: distance_set_counter_2++;
  9102  001EEA  0100               	movlb	0	; () banked
  9103  001EEC  4B88               	infsnz	_distance_set_counter_2& (0+255),f,b	;volatile
  9104  001EEE  2B89               	incf	(_distance_set_counter_2+1)& (0+255),f,b	;volatile
  9105  001EF0                     i2l5268:
  9106                           
  9107                           ;ABS_Code.c: 208: }
  9108                           ;ABS_Code.c: 209: }
  9109                           ;ABS_Code.c: 210: INTCON3bits.INT1IF = 0;
  9110  001EF0  90F0               	bcf	intcon3,0,c	;volatile
  9111  001EF2                     i2l699:
  9112  001EF2  C0C9  FFF5         	movff	??_ISR_Alta+21,tablat
  9113  001EF6  C0C8  FFF8         	movff	??_ISR_Alta+20,tblptru
  9114  001EFA  C0C7  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9115  001EFE  C0C6  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9116  001F02  C0C5  FFF4         	movff	??_ISR_Alta+17,prodh
  9117  001F06  C0C4  FFF3         	movff	??_ISR_Alta+16,prodl
  9118  001F0A  C0C3  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9119  001F0E  C0C2  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9120  001F12  C0C1  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9121  001F16  C0C0  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9122  001F1A  C0BF  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9123  001F1E  C0BE  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9124  001F22  C0BD  FFFB         	movff	??_ISR_Alta+9,pclatu
  9125  001F26  C0BC  FFFA         	movff	??_ISR_Alta+8,pclath
  9126  001F2A  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9127  001F2C  0011               	retfie		f
  9128  001F2E                     __end_of_ISR_Alta:
  9129                           	opt stack 0
  9130                           pclatu	equ	0xFFB
  9131                           pclath	equ	0xFFA
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           intcon2	equ	0xFF1
  9140                           intcon3	equ	0xFF0
  9141                           postinc0	equ	0xFEE
  9142                           fsr0h	equ	0xFEA
  9143                           fsr0l	equ	0xFE9
  9144                           wreg	equ	0xFE8
  9145                           postdec1	equ	0xFE5
  9146                           fsr1h	equ	0xFE2
  9147                           fsr1l	equ	0xFE1
  9148                           bsr	equ	0xFE0
  9149                           indf2	equ	0xFDF
  9150                           postinc2	equ	0xFDE
  9151                           postdec2	equ	0xFDD
  9152                           fsr2h	equ	0xFDA
  9153                           fsr2l	equ	0xFD9
  9154                           status	equ	0xFD8
  9155                           
  9156 ;; *************** function i2___wmul *****************
  9157 ;; Defined at:
  9158 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;  multiplier      2   29[COMRAM] unsigned int 
  9161 ;;  multiplicand    2   31[COMRAM] unsigned int 
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  __wmul          2   33[COMRAM] unsigned int 
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  2   29[COMRAM] unsigned int 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0, prodl, prodh
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9173 ;;      Params:         4       0       0       0
  9174 ;;      Locals:         2       0       0       0
  9175 ;;      Temps:          0       0       0       0
  9176 ;;      Totals:         6       0       0       0
  9177 ;;Total ram usage:        6 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; This function calls:
  9180 ;;		Nothing
  9181 ;; This function is called by:
  9182 ;;		_ISR_Alta
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text21
  9187  0029FA                     __ptext21:
  9188                           	opt stack 0
  9189  0029FA                     i2___wmul:
  9190                           	opt stack 24
  9191                           
  9192                           ;incstack = 0
  9193  0029FA  501E               	movf	i2___wmul@multiplier,w,c
  9194  0029FC  0220               	mulwf	i2___wmul@multiplicand,c
  9195  0029FE  CFF3 F022          	movff	prodl,i2___wmul@product
  9196  002A02  CFF4 F023          	movff	prodh,i2___wmul@product+1
  9197  002A06  501E               	movf	i2___wmul@multiplier,w,c
  9198  002A08  0221               	mulwf	i2___wmul@multiplicand+1,c
  9199  002A0A  50F3               	movf	prodl,w,c
  9200  002A0C  2623               	addwf	i2___wmul@product+1,f,c
  9201  002A0E  501F               	movf	i2___wmul@multiplier+1,w,c
  9202  002A10  0220               	mulwf	i2___wmul@multiplicand,c
  9203  002A12  50F3               	movf	prodl,w,c
  9204  002A14  2623               	addwf	i2___wmul@product+1,f,c
  9205  002A16  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  9206  002A1A  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  9207  002A1E  0012               	return	
  9208  002A20                     __end_ofi2___wmul:
  9209                           	opt stack 0
  9210                           pclatu	equ	0xFFB
  9211                           pclath	equ	0xFFA
  9212                           tblptru	equ	0xFF8
  9213                           tblptrh	equ	0xFF7
  9214                           tblptrl	equ	0xFF6
  9215                           tablat	equ	0xFF5
  9216                           prodh	equ	0xFF4
  9217                           prodl	equ	0xFF3
  9218                           intcon	equ	0xFF2
  9219                           intcon2	equ	0xFF1
  9220                           intcon3	equ	0xFF0
  9221                           postinc0	equ	0xFEE
  9222                           fsr0h	equ	0xFEA
  9223                           fsr0l	equ	0xFE9
  9224                           wreg	equ	0xFE8
  9225                           postdec1	equ	0xFE5
  9226                           fsr1h	equ	0xFE2
  9227                           fsr1l	equ	0xFE1
  9228                           bsr	equ	0xFE0
  9229                           indf2	equ	0xFDF
  9230                           postinc2	equ	0xFDE
  9231                           postdec2	equ	0xFDD
  9232                           fsr2h	equ	0xFDA
  9233                           fsr2l	equ	0xFD9
  9234                           status	equ	0xFD8
  9235                           
  9236 ;; *************** function i2___awdiv *****************
  9237 ;; Defined at:
  9238 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;  dividend        2   35[COMRAM] int 
  9241 ;;  divisor         2   37[COMRAM] int 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  __awdiv         2    2[BANK0 ] int 
  9244 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  9245 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  2   35[COMRAM] int 
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9255 ;;      Params:         4       0       0       0
  9256 ;;      Locals:         0       4       0       0
  9257 ;;      Temps:          0       0       0       0
  9258 ;;      Totals:         4       4       0       0
  9259 ;;Total ram usage:        8 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_ISR_Alta
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text22
  9269  00279E                     __ptext22:
  9270                           	opt stack 0
  9271  00279E                     i2___awdiv:
  9272                           	opt stack 24
  9273                           
  9274                           ;incstack = 0
  9275  00279E  0E00               	movlw	0
  9276  0027A0  0100               	movlb	0	; () banked
  9277  0027A2  6FB1               	movwf	i2___awdiv@sign& (0+255),b
  9278                           
  9279                           ; BSR set to: 0
  9280  0027A4  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9281  0027A6  D007               	goto	i2l5156
  9282                           
  9283                           ; BSR set to: 0
  9284  0027A8  6C26               	negf	i2___awdiv@divisor,c
  9285  0027AA  1E27               	comf	i2___awdiv@divisor+1,f,c
  9286  0027AC  B0D8               	btfsc	status,0,c
  9287  0027AE  2A27               	incf	i2___awdiv@divisor+1,f,c
  9288                           
  9289                           ; BSR set to: 0
  9290  0027B0  0E01               	movlw	1
  9291  0027B2  0100               	movlb	0	; () banked
  9292  0027B4  6FB1               	movwf	i2___awdiv@sign& (0+255),b
  9293  0027B6                     i2l5156:
  9294                           
  9295                           ; BSR set to: 0
  9296  0027B6  AE25               	btfss	i2___awdiv@dividend+1,7,c
  9297  0027B8  D007               	goto	i2l5162
  9298                           
  9299                           ; BSR set to: 0
  9300  0027BA  6C24               	negf	i2___awdiv@dividend,c
  9301  0027BC  1E25               	comf	i2___awdiv@dividend+1,f,c
  9302  0027BE  B0D8               	btfsc	status,0,c
  9303  0027C0  2A25               	incf	i2___awdiv@dividend+1,f,c
  9304                           
  9305                           ; BSR set to: 0
  9306  0027C2  0E01               	movlw	1
  9307  0027C4  0100               	movlb	0	; () banked
  9308  0027C6  1BB1               	xorwf	i2___awdiv@sign& (0+255),f,b
  9309  0027C8                     i2l5162:
  9310                           
  9311                           ; BSR set to: 0
  9312  0027C8  0E00               	movlw	0
  9313  0027CA  0100               	movlb	0	; () banked
  9314  0027CC  6FB3               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9315  0027CE  0E00               	movlw	0
  9316  0027D0  6FB2               	movwf	i2___awdiv@quotient& (0+255),b
  9317                           
  9318                           ; BSR set to: 0
  9319  0027D2  5026               	movf	i2___awdiv@divisor,w,c
  9320  0027D4  1027               	iorwf	i2___awdiv@divisor+1,w,c
  9321  0027D6  B4D8               	btfsc	status,2,c
  9322  0027D8  D021               	goto	i2l5184
  9323                           
  9324                           ; BSR set to: 0
  9325  0027DA  0E01               	movlw	1
  9326  0027DC  0100               	movlb	0	; () banked
  9327  0027DE  6FB0               	movwf	i2___awdiv@counter& (0+255),b
  9328  0027E0  D005               	goto	i2l5170
  9329  0027E2                     i2l5168:
  9330                           
  9331                           ; BSR set to: 0
  9332  0027E2  90D8               	bcf	status,0,c
  9333  0027E4  3626               	rlcf	i2___awdiv@divisor,f,c
  9334  0027E6  3627               	rlcf	i2___awdiv@divisor+1,f,c
  9335  0027E8  0100               	movlb	0	; () banked
  9336  0027EA  2BB0               	incf	i2___awdiv@counter& (0+255),f,b
  9337  0027EC                     i2l5170:
  9338                           
  9339                           ; BSR set to: 0
  9340  0027EC  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9341  0027EE  D7F9               	goto	i2l5168
  9342  0027F0                     i2l5172:
  9343                           
  9344                           ; BSR set to: 0
  9345  0027F0  0100               	movlb	0	; () banked
  9346  0027F2  90D8               	bcf	status,0,c
  9347  0027F4  37B2               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9348  0027F6  37B3               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9349                           
  9350                           ; BSR set to: 0
  9351  0027F8  5026               	movf	i2___awdiv@divisor,w,c
  9352  0027FA  5C24               	subwf	i2___awdiv@dividend,w,c
  9353  0027FC  5027               	movf	i2___awdiv@divisor+1,w,c
  9354  0027FE  5825               	subwfb	i2___awdiv@dividend+1,w,c
  9355  002800  A0D8               	btfss	status,0,c
  9356  002802  D006               	goto	i2l5180
  9357                           
  9358                           ; BSR set to: 0
  9359  002804  5026               	movf	i2___awdiv@divisor,w,c
  9360  002806  5E24               	subwf	i2___awdiv@dividend,f,c
  9361  002808  5027               	movf	i2___awdiv@divisor+1,w,c
  9362  00280A  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  9363                           
  9364                           ; BSR set to: 0
  9365  00280C  0100               	movlb	0	; () banked
  9366  00280E  81B2               	bsf	i2___awdiv@quotient& (0+255),0,b
  9367  002810                     i2l5180:
  9368                           
  9369                           ; BSR set to: 0
  9370  002810  90D8               	bcf	status,0,c
  9371  002812  3227               	rrcf	i2___awdiv@divisor+1,f,c
  9372  002814  3226               	rrcf	i2___awdiv@divisor,f,c
  9373                           
  9374                           ; BSR set to: 0
  9375  002816  0100               	movlb	0	; () banked
  9376  002818  2FB0               	decfsz	i2___awdiv@counter& (0+255),f,b
  9377  00281A  D7EA               	goto	i2l5172
  9378  00281C                     i2l5184:
  9379                           
  9380                           ; BSR set to: 0
  9381  00281C  0100               	movlb	0	; () banked
  9382  00281E  51B1               	movf	i2___awdiv@sign& (0+255),w,b
  9383  002820  0100               	movlb	0	; () banked
  9384  002822  B4D8               	btfsc	status,2,c
  9385  002824  D005               	goto	i2l5188
  9386                           
  9387                           ; BSR set to: 0
  9388  002826  0100               	movlb	0	; () banked
  9389  002828  6DB2               	negf	i2___awdiv@quotient& (0+255),b
  9390  00282A  1FB3               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9391  00282C  B0D8               	btfsc	status,0,c
  9392  00282E  2BB3               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9393  002830                     i2l5188:
  9394                           
  9395                           ; BSR set to: 0
  9396  002830  C0B2  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  9397  002834  C0B3  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9398  002838  0012               	return	
  9399  00283A                     __end_ofi2___awdiv:
  9400                           	opt stack 0
  9401                           pclatu	equ	0xFFB
  9402                           pclath	equ	0xFFA
  9403                           tblptru	equ	0xFF8
  9404                           tblptrh	equ	0xFF7
  9405                           tblptrl	equ	0xFF6
  9406                           tablat	equ	0xFF5
  9407                           prodh	equ	0xFF4
  9408                           prodl	equ	0xFF3
  9409                           intcon	equ	0xFF2
  9410                           intcon2	equ	0xFF1
  9411                           intcon3	equ	0xFF0
  9412                           postinc0	equ	0xFEE
  9413                           fsr0h	equ	0xFEA
  9414                           fsr0l	equ	0xFE9
  9415                           wreg	equ	0xFE8
  9416                           postdec1	equ	0xFE5
  9417                           fsr1h	equ	0xFE2
  9418                           fsr1l	equ	0xFE1
  9419                           bsr	equ	0xFE0
  9420                           indf2	equ	0xFDF
  9421                           postinc2	equ	0xFDE
  9422                           postdec2	equ	0xFDD
  9423                           fsr2h	equ	0xFDA
  9424                           fsr2l	equ	0xFD9
  9425                           status	equ	0xFD8
  9426                           
  9427 ;; *************** function ___lwdiv *****************
  9428 ;; Defined at:
  9429 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;  dividend        2   29[COMRAM] unsigned int 
  9432 ;;  divisor         2   31[COMRAM] unsigned int 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  quotient        2   33[COMRAM] unsigned int 
  9435 ;;  counter         1   35[COMRAM] unsigned char 
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  2   29[COMRAM] unsigned int 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9445 ;;      Params:         4       0       0       0
  9446 ;;      Locals:         3       0       0       0
  9447 ;;      Temps:          0       0       0       0
  9448 ;;      Totals:         7       0       0       0
  9449 ;;Total ram usage:        7 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_ISR_Alta
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text23
  9459  0028B0                     __ptext23:
  9460                           	opt stack 0
  9461  0028B0                     ___lwdiv:
  9462                           	opt stack 24
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;incstack = 0
  9466  0028B0  0E00               	movlw	0
  9467  0028B2  6E23               	movwf	___lwdiv@quotient+1,c
  9468  0028B4  0E00               	movlw	0
  9469  0028B6  6E22               	movwf	___lwdiv@quotient,c
  9470  0028B8  5020               	movf	___lwdiv@divisor,w,c
  9471  0028BA  1021               	iorwf	___lwdiv@divisor+1,w,c
  9472  0028BC  B4D8               	btfsc	status,2,c
  9473  0028BE  D01C               	goto	i2l1175
  9474  0028C0  0E01               	movlw	1
  9475  0028C2  6E24               	movwf	___lwdiv@counter,c
  9476  0028C4  D004               	goto	i2l3968
  9477  0028C6                     i2l3966:
  9478  0028C6  90D8               	bcf	status,0,c
  9479  0028C8  3620               	rlcf	___lwdiv@divisor,f,c
  9480  0028CA  3621               	rlcf	___lwdiv@divisor+1,f,c
  9481  0028CC  2A24               	incf	___lwdiv@counter,f,c
  9482  0028CE                     i2l3968:
  9483  0028CE  AE21               	btfss	___lwdiv@divisor+1,7,c
  9484  0028D0  D7FA               	goto	i2l3966
  9485  0028D2                     i2l3970:
  9486  0028D2  90D8               	bcf	status,0,c
  9487  0028D4  3622               	rlcf	___lwdiv@quotient,f,c
  9488  0028D6  3623               	rlcf	___lwdiv@quotient+1,f,c
  9489  0028D8  5020               	movf	___lwdiv@divisor,w,c
  9490  0028DA  5C1E               	subwf	___lwdiv@dividend,w,c
  9491  0028DC  5021               	movf	___lwdiv@divisor+1,w,c
  9492  0028DE  581F               	subwfb	___lwdiv@dividend+1,w,c
  9493  0028E0  A0D8               	btfss	status,0,c
  9494  0028E2  D005               	goto	i2l3978
  9495  0028E4  5020               	movf	___lwdiv@divisor,w,c
  9496  0028E6  5E1E               	subwf	___lwdiv@dividend,f,c
  9497  0028E8  5021               	movf	___lwdiv@divisor+1,w,c
  9498  0028EA  5A1F               	subwfb	___lwdiv@dividend+1,f,c
  9499  0028EC  8022               	bsf	___lwdiv@quotient,0,c
  9500  0028EE                     i2l3978:
  9501  0028EE  90D8               	bcf	status,0,c
  9502  0028F0  3221               	rrcf	___lwdiv@divisor+1,f,c
  9503  0028F2  3220               	rrcf	___lwdiv@divisor,f,c
  9504  0028F4  2E24               	decfsz	___lwdiv@counter,f,c
  9505  0028F6  D7ED               	goto	i2l3970
  9506  0028F8                     i2l1175:
  9507  0028F8  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  9508  0028FC  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9509  002900  0012               	return		;funcret
  9510  002902                     __end_of___lwdiv:
  9511                           	opt stack 0
  9512                           pclatu	equ	0xFFB
  9513                           pclath	equ	0xFFA
  9514                           tblptru	equ	0xFF8
  9515                           tblptrh	equ	0xFF7
  9516                           tblptrl	equ	0xFF6
  9517                           tablat	equ	0xFF5
  9518                           prodh	equ	0xFF4
  9519                           prodl	equ	0xFF3
  9520                           intcon	equ	0xFF2
  9521                           intcon2	equ	0xFF1
  9522                           intcon3	equ	0xFF0
  9523                           postinc0	equ	0xFEE
  9524                           fsr0h	equ	0xFEA
  9525                           fsr0l	equ	0xFE9
  9526                           wreg	equ	0xFE8
  9527                           postdec1	equ	0xFE5
  9528                           fsr1h	equ	0xFE2
  9529                           fsr1l	equ	0xFE1
  9530                           bsr	equ	0xFE0
  9531                           indf2	equ	0xFDF
  9532                           postinc2	equ	0xFDE
  9533                           postdec2	equ	0xFDD
  9534                           fsr2h	equ	0xFDA
  9535                           fsr2l	equ	0xFD9
  9536                           status	equ	0xFD8
  9537                           
  9538 ;; *************** function _WriteTimer0 *****************
  9539 ;; Defined at:
  9540 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  timer0          2   29[COMRAM] unsigned int 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;  timer           2   31[COMRAM] struct Timers
  9545 ;; Return value:  Size  Location     Type
  9546 ;;		None               void
  9547 ;; Registers used:
  9548 ;;		None
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9554 ;;      Params:         2       0       0       0
  9555 ;;      Locals:         2       0       0       0
  9556 ;;      Temps:          0       0       0       0
  9557 ;;      Totals:         4       0       0       0
  9558 ;;Total ram usage:        4 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; This function calls:
  9561 ;;		Nothing
  9562 ;; This function is called by:
  9563 ;;		_ISR_Alta
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text24
  9568  002A70                     __ptext24:
  9569                           	opt stack 0
  9570  002A70                     _WriteTimer0:
  9571                           	opt stack 24
  9572                           
  9573                           ;incstack = 0
  9574  002A70  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9575  002A74  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9576  002A78  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9577  002A7C  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9578  002A80  0012               	return		;funcret
  9579  002A82                     __end_of_WriteTimer0:
  9580                           	opt stack 0
  9581  0000                     pclatu	equ	0xFFB
  9582                           pclath	equ	0xFFA
  9583                           tblptru	equ	0xFF8
  9584                           tblptrh	equ	0xFF7
  9585                           tblptrl	equ	0xFF6
  9586                           tablat	equ	0xFF5
  9587                           prodh	equ	0xFF4
  9588                           prodl	equ	0xFF3
  9589                           intcon	equ	0xFF2
  9590                           intcon2	equ	0xFF1
  9591                           intcon3	equ	0xFF0
  9592                           postinc0	equ	0xFEE
  9593                           fsr0h	equ	0xFEA
  9594                           fsr0l	equ	0xFE9
  9595                           wreg	equ	0xFE8
  9596                           postdec1	equ	0xFE5
  9597                           fsr1h	equ	0xFE2
  9598                           fsr1l	equ	0xFE1
  9599                           bsr	equ	0xFE0
  9600                           indf2	equ	0xFDF
  9601                           postinc2	equ	0xFDE
  9602                           postdec2	equ	0xFDD
  9603                           fsr2h	equ	0xFDA
  9604                           fsr2l	equ	0xFD9
  9605                           status	equ	0xFD8
  9606                           pclatu	equ	0xFFB
  9607                           pclath	equ	0xFFA
  9608                           tblptru	equ	0xFF8
  9609                           tblptrh	equ	0xFF7
  9610                           tblptrl	equ	0xFF6
  9611                           tablat	equ	0xFF5
  9612                           prodh	equ	0xFF4
  9613                           prodl	equ	0xFF3
  9614                           intcon	equ	0xFF2
  9615                           intcon2	equ	0xFF1
  9616                           intcon3	equ	0xFF0
  9617                           postinc0	equ	0xFEE
  9618                           fsr0h	equ	0xFEA
  9619                           fsr0l	equ	0xFE9
  9620                           wreg	equ	0xFE8
  9621                           postdec1	equ	0xFE5
  9622                           fsr1h	equ	0xFE2
  9623                           fsr1l	equ	0xFE1
  9624                           bsr	equ	0xFE0
  9625                           indf2	equ	0xFDF
  9626                           postinc2	equ	0xFDE
  9627                           postdec2	equ	0xFDD
  9628                           fsr2h	equ	0xFDA
  9629                           fsr2l	equ	0xFD9
  9630                           status	equ	0xFD8
  9631                           
  9632                           	psect	rparam
  9633  0000                     pclatu	equ	0xFFB
  9634                           pclath	equ	0xFFA
  9635                           tblptru	equ	0xFF8
  9636                           tblptrh	equ	0xFF7
  9637                           tblptrl	equ	0xFF6
  9638                           tablat	equ	0xFF5
  9639                           prodh	equ	0xFF4
  9640                           prodl	equ	0xFF3
  9641                           intcon	equ	0xFF2
  9642                           intcon2	equ	0xFF1
  9643                           intcon3	equ	0xFF0
  9644                           postinc0	equ	0xFEE
  9645                           fsr0h	equ	0xFEA
  9646                           fsr0l	equ	0xFE9
  9647                           wreg	equ	0xFE8
  9648                           postdec1	equ	0xFE5
  9649                           fsr1h	equ	0xFE2
  9650                           fsr1l	equ	0xFE1
  9651                           bsr	equ	0xFE0
  9652                           indf2	equ	0xFDF
  9653                           postinc2	equ	0xFDE
  9654                           postdec2	equ	0xFDD
  9655                           fsr2h	equ	0xFDA
  9656                           fsr2l	equ	0xFD9
  9657                           status	equ	0xFD8
  9658                           
  9659                           	psect	temp
  9660  000041                     btemp:
  9661                           	opt stack 0
  9662  000041                     	ds	1
  9663  0000                     int$flags	set	btemp
  9664                           pclatu	equ	0xFFB
  9665                           pclath	equ	0xFFA
  9666                           tblptru	equ	0xFF8
  9667                           tblptrh	equ	0xFF7
  9668                           tblptrl	equ	0xFF6
  9669                           tablat	equ	0xFF5
  9670                           prodh	equ	0xFF4
  9671                           prodl	equ	0xFF3
  9672                           intcon	equ	0xFF2
  9673                           intcon2	equ	0xFF1
  9674                           intcon3	equ	0xFF0
  9675                           postinc0	equ	0xFEE
  9676                           fsr0h	equ	0xFEA
  9677                           fsr0l	equ	0xFE9
  9678                           wreg	equ	0xFE8
  9679                           postdec1	equ	0xFE5
  9680                           fsr1h	equ	0xFE2
  9681                           fsr1l	equ	0xFE1
  9682                           bsr	equ	0xFE0
  9683                           indf2	equ	0xFDF
  9684                           postinc2	equ	0xFDE
  9685                           postdec2	equ	0xFDD
  9686                           fsr2h	equ	0xFDA
  9687                           fsr2l	equ	0xFD9
  9688                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      64
    BANK0           160     42     131
    BANK1           256     16      16
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> remote_frame_array(BANK0[8]), distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17709
                                             14 BANK1      2     2      0
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___aldiv
                            ___awdiv
                             ___lmul
                             ___wmul
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    5062
                                             40 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             28 BANK0     12     4      8
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     963
                                             34 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     749
                                             28 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              0 BANK1     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             28 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             28 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             28 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     450
                                             28 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                              0 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             28 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            24    24      0    1350
                                              4 BANK0     24    24      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                             35 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     10      10       6        6.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2A      83       4       81.9%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      40       1       68.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3       9        0.0%
DATA                 0      0      D3      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Mar 28 11:39:49 2016

           ??_CANisTXwarningON 00CC                              _x 0201                              _y 0202  
         __end_of_CANSetFilter 0C3C                   ___awdiv@sign 00D1                             bsr 000FE0  
          ___wmul@multiplicand 00CE                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 0EDA  
                          l401 0FD2                            l410 10A0                            l402 0F62  
                          l403 0F6C                            l500 0770                            l404 0F76  
                          l501 0774                            l413 115A                            l405 0F80  
                          l510 0880                            l502 0780                            l422 1314  
                          l414 115E                            l511 088C                            l423 1318  
                          l415 1256                            l520 0998                            l512 0890  
                          l424 1324                            l416 11E6                            l408 1090  
                          l521 099C                            l513 089C                            l505 085C  
                          l417 11F0                            l409 1094                            l530 0AA8  
                          l522 09A8                            l506 0860                            l418 11FA  
                          l531 0AB4                            l523 09AC                            l507 086C  
                          l419 1204                            l540 0BC0                            l532 0AB8  
                          l524 09B8                            l516 0978                            l508 0870  
                          l460 1B0E                            l452 1ACE                            l541 0BC4  
                          l533 0AC4                            l517 097C                            l509 087C  
                          l453 1AD2                            l542 0BD0                            l534 0AC8  
                          l518 0988                            l470 1C1A                            l454 1ADE  
                          l390 0CFC                            l543 0BD4                            l535 0AD4  
                          l527 0A94                            l519 098C                            l471 1C26  
                          l463 1BE6                            l455 1AE2                            l383 0EC0  
                          l544 0BE0                            l528 0A98                            l464 1BEA  
                          l456 1AEE                            l384 0C52                            l545 0BE4  
                          l529 0AA4                            l465 1BF6                            l457 1AF2  
                          l393 0E0C                            l385 0C56                            l546 0BF0  
                          l538 0BB0                            l490 065A                            l466 1BFA  
                          l458 1AFE                            l378 2404                            l394 0E10  
                          l386 0D4E                            l539 0BB4                            l491 0666  
                          l483 0626                            l467 1C06                            l459 1B02  
                          l379 240E                            l395 0E1C                            l387 0CDE  
                          l723 1FDE                            l715 1F7C                            l484 062A  
                          l468 1C0A                            l388 0CE8                            l732 2078  
                          l724 2028                            l485 0636                            l469 1C16  
                          l389 0CF2                            l717 1F74                            l494 0740  
                          l486 063A                            l398 1144                            l718 1F7E  
                          l495 0744                            l487 0646                            l399 0ED6  
                          l751 233E                            l719 1FD6                            l496 0750  
                          l488 064A                            l576 2A3E                            l497 0754  
                          l489 0656                            l753 233A                            l745 2344  
                          l737 20FA                            l498 0760                            l499 0764  
                          l589 29B6                            l759 294E                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012                            _msg 0030  
                          wreg 000FE8                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l5100 232E                           l5112 2532                           l4322 1B12  
                         l5124 257E                           l5140 25FA                           l5126 258E  
                         l5118 2550                           l4262 2A4C                           l4502 06B0  
                         l4414 0366                           l5070 21EA                           l5302 1FE4  
                         l3560 265A                           l5144 2616                           l5136 25E8  
                         l5128 2594                           l4432 0420                           l4328 1B58  
                         l4280 198C                           l5080 2268                           l5320 202C  
                         l5312 2008                           l3570 268A                           l3554 2644  
                         l4530 0784                           l4450 04DA                           l4354 1C2A  
                         l5074 222C                           l4604 0A02                           l5332 2092  
                         l5340 20F2                           l5316 2018                           l5308 1FFA  
                         l3566 2678                           l3582 26C8                           l4710 23FC  
                         l5350 216A                           l5334 20E8                           l3568 2684  
                         l3912 2872                           l4632 0AD8                           l4536 07CA  
                         l4296 1A42                           l4712 2412                           l5096 22FC  
                         l3586 26DC                           l3578 26BA                           l4570 08E6  
                         l4378 01F4                           l3746 29A8                           l3908 284C  
                         l4564 08A0                           l4468 0594                           l4396 02AC  
                         l4716 241A                           l5348 2114                           l4638 0B1E  
                         l4718 245E                           l4910 120E                           l5286 1F5C  
                         l4496 066A                           l4666 0BF4                           l4930 1308  
                         l4834 0F8A                           l4860 10A4                           l4598 09BC  
                         l4854 1084                           l4758 0D06                           l4936 1328  
                         l4784 0E20                           l4778 0E00                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u5100 0170                           u4150 2A8A  
                         u4160 2A96                           u5105 0164                           u5115 01D0  
                         u5300 0510                           u5220 039C                           u5140 0228  
                         u5070 1C4A                           u5305 0504                           u5225 0390  
                         u5145 021C                           u6050 0FAA                           u5315 0570  
                         u5235 03FC                           u5155 0288                           u5075 1C3E  
                         u5260 0456                           u5180 02E2                           u6060 0FF6  
                         u6205 12DA                           u6055 0F9E                           u5265 044A  
                         u5185 02D6                           u6065 0FEA                           u6250 21D2  
                         u5275 04B6                           u5195 0342                           u6075 1056  
                         u4900 19BE                           u6180 122E                           u5710 0AF8  
                         u5630 09DC                           u5550 08C0                           u5470 07A4  
                         u5390 068A                           u6190 127A                           u6256 21D4  
                         u4905 19B2                           u6185 1222                           u5715 0AEC  
                         u5635 09D0                           u5555 08B4                           u5475 0798  
                         u5395 067E                           u4915 1A1E                           u6195 126E  
                         u4860 1908                           u5920 0D26                           u4865 18FC  
                         u5930 0D72                           u4875 1968                           u6717 29AA  
                         u5925 0D1A                           u5790 0C14                           u4990 1B32  
                         u5935 0D66                           u5945 0DD2                           u5795 0C08  
                         u4995 1B26            __size_of_CANSetMask 039E                           _main 1F2E  
                         _read 0094                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _step 0095  
                         btemp 0041               __end_of_ADC_Read 298A                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0132  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
             _CANOperationMode 2A44                   _status_array 00A6                _brake_value_inc 0092  
         _remote_frame_handler 2176     __size_of_CANreceiveMessage 050C                __end_of___aldiv 2628  
                        ?_main 0001                __end_of___awdiv 26E6                          _T0CON 000FD5  
              ___awdiv@divisor 00CE                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 011A                __end_of___lwdiv 2902                          i1l430 1660  
                        i1l711 00EA                          i1l581 2A6C                          i1l709 00E2  
                        i2l699 1EF2                ___awdiv@counter 00D0                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR3H 000FB3  
                        _TMR1L 000FCE                          _TMR3L 000FB2              _CANisRxReady$3284 0001  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                          _TRISE 000F96                  __CFG_PWRT$OFF 000000  
             __end_of_ISR_Alta 1F2E                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
          ___lmul@multiplicand 00D0                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000             CANInitialize@flags 0104                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
               __pbitbssCOMRAM 01F8           __end_of_CANisRxReady 2A70                          tablat 000FF5  
       _distance_set_counter_1 0086         _distance_set_counter_2 0088           __end_of_CANisTxReady 2A44  
             __end_ofi2___wmul 2A20                          status 000FD8             __size_ofi2___awdiv 009C  
               __CFG_PBADEN$ON 000000                __initialization 2902                   __end_of_main 2176  
__size_of_board_initialization 00B8               _brake_signal_CAN 0091          ?_remote_frame_handler 0001  
                       ??_main 010E                  __activetblptr 000002              _CANisTxReady$3282 00CC  
                       _ADCON1 000FC1                         _CANCON 000F6F                         _ADRESH 000FC4  
             ___awdiv@dividend 00CC                __CFG_BBSIZ$1024 000000                         i1l4132 0094  
                       i1l4124 0066                         i1l4136 00AA                         i1l4144 00D6  
                       i1l4148 00DA                         i1l3720 189E                         i1l3712 1866  
                       i1l3704 182E                         i1l3722 18D0                         i1l3650 15EC  
                       i1l3642 15B0                         i1l3634 1540                         i1l3716 1882  
                       i1l3708 184A                         i1l3660 165A                         i1l3654 160A  
                       i1l3646 15CE                         i2l1175 28F8                         i1l3658 1628  
                       i1l3696 17C0                         i2l5204 1DE6                         i2l5230 1E5C  
                       i2l5206 1DF2                         i2l5216 1E08                         i2l5208 1DF4  
                       i2l5170 27EC                         i2l5162 27C8                         i2l5234 1E68  
                       i2l5180 2810                         i2l5172 27F0                         i2l5156 27B6  
                       i2l5244 1E7E                         i2l5236 1E6A                         i2l5168 27E2  
                       i2l5184 281C                         i2l5264 1EE4                         i2l5188 2830  
                       i2l5268 1EF0                         i2l3970 28D2                         i2l3966 28C6  
                       i2l3968 28CE                         i2l3978 28EE                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 00D0             CANsendMessage@tamp 0100              __end_of_ISR_Bassa 0132  
             __end_of_delay_ms 29C4          __size_of_CANSetFilter 0B06             _distance_set_value 008A  
               __CFG_XINST$OFF 000000                         ___lmul 283A                      ??___aldiv 00D8  
                       ___wmul 29C4                      ??___awdiv 00D0                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 0022                   ??_CANSetMask 00D1                         clear_0 2908  
                       clear_1 2918               ___awdiv@quotient 00D2                 i2___awdiv@sign 00B1  
              __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 283A                      ?_ADC_Read 0001  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                _home_position 0093                   _CANSetFilter 0136                     __accesstop 0060  
      __end_of__initialization 293E             __end_of_CANSetMask 1C72                  ___rparam_used 000001  
    __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001                      ?_ISR_Alta 0001  
                 __pidataBANK0 2A9A         ??_remote_frame_handler 00D8                   _ENC1_measure 01F8  
        CANSetFilter@numBuffer 00D5                      ?i2___wmul 001E      __size_of_CANisTXwarningON 000C  
                 _ENC2_measure 01F9                     ??_ADC_Read 00D4          __size_of_CANisRxReady 0016  
        __size_of_CANisTxReady 0024       __end_of_CANOperationMode 2A5A                     __pbssBANK0 0060  
      __size_of_CANsendMessage 078C                      ISR_Alta@A 00CA                      ISR_Alta@B 00CB  
                   ??_ISR_Alta 00B4                        ?___lmul 00CC                        ?___wmul 00CC  
                   _gap_time_1 008C                     _gap_time_2 008E               WriteTimer0@timer 0020  
                ??_WriteTimer0 0020                 ___lmul@product 00D4                   _CANisRxReady 2A5A  
                      _CANSTAT 000F6E                   _CANisTxReady 2A20                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72                     ??i2___wmul 0022  
                _int_counter_1 0060                  _int_counter_2 0064         __size_of_CANInitialize 01C6  
        _distance_reached_flag 01FE                      ?_delay_ms 00D2                        _RXB0DLC 000F65  
                      _RXB1DLC 000F55                        _RXB0CON 000F60                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
                   _distance_1 0080                     _distance_2 0082            CANsendMessage@flags 00D3  
                   _count_flag 01FD                        __Hparam 0000                        __Lparam 0000  
             delay_ms@value_ms 00D2                        ___aldiv 250E                        ___awdiv 2628  
              __size_of___lmul 0076                __size_of___wmul 0036                        ___lwdiv 28B0  
         CANInitialize@propSeg 0109                        __pcinit 2902                        __ramtop 0300  
                      __ptext0 1F2E                        __ptext1 2176                        __ptext2 0C3C  
                      __ptext3 2A20                        __ptext4 298A                        __ptext5 29C4  
                      __ptext6 26E6                        __ptext7 2348                        __ptext8 18D4  
                      __ptext9 0136                      _T0CONbits 000FD5                      _T1CONbits 000FCD  
                    _T3CONbits 000FB1               ___aldiv@dividend 0100            __end_of_WriteTimer0 2A82  
                   ??_delay_ms 00D4         CANreceiveMessage@error 000B   __end_of_board_initialization 279E  
               __pintcode_body 1C72           end_of_initialization 293E                  _Analogic_Mode 0090  
                __Lmediumconst 0000                        int_func 1C72            i2___wmul@multiplier 001E  
             _CANisRXwarningON 2A8E                  _CANInitialize 2348               ___aldiv@quotient 010A  
                    _ISR_Bassa 0018                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                      _PORTAbits 000F80  
               CANSetMask@mask 00CC                      _PORTCbits 000F82              _correction_factor 007E  
               CANSetMask@tamp 00D6                 CANSetMask@type 00D0               _CANisTXwarningON 2A82  
            __size_of_ADC_Read 003E                      i2___awdiv 279E        _clock_counter_reference 007C  
               _CANsendMessage 0C3C             _remote_frame_array 00DB               CANInitialize@BRP 0103  
             CANInitialize@SJW 0102                 ?_CANInitialize 0100             i2___awdiv@dividend 0024  
                   ?_ISR_Bassa 0001                 __end_of___lmul 28B0              __size_of_ISR_Alta 1F26  
               __end_of___wmul 29FA                    _WriteTimer0 2A70               i2___wmul@product 0022  
          start_initialization 2902             i2___awdiv@quotient 00B2              __size_ofi2___wmul 0026  
          CANSetMask@numBuffer 00D5                     ?i2___awdiv 0024         __end_of_CANsendMessage 13C8  
            ?_CANOperationMode 0001             ??_CANOperationMode 00CC     CANInitialize@FilterConfig1 010A  
   CANInitialize@FilterConfig2 010B              _distance_set_flag 01FF                       ??___lmul 00D4  
         _board_initialization 26E6                       ??___wmul 00D0                    __pdataBANK0 00DA  
             __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 01D2             _brake_value_degree 00AF  
       CANInitialize@phaseSeg1 0100         CANInitialize@phaseSeg2 0101                    __pbssCOMRAM 0028  
                __pcstackBANK0 00B0                  __pcstackBANK1 0100                    _data_debug1 0028  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72              __size_of_delay_ms 003A  
              ?_CANsendMessage 00CC                ??_CANInitialize 0105             CANSetFilter@filter 00CC  
             ___lwdiv@dividend 001E          ?_board_initialization 0001                    ??_ISR_Bassa 000D  
                    __pintcode 0008                       ?___aldiv 0100                       ?___awdiv 00CC  
                     ?___lwdiv 001E                    __pintcodelo 0018              WriteTimer0@timer0 001E  
     __end_of_CANisRXwarningON 2A9A                    _brake_value 00AE                    _COMSTATbits 000F74  
                     _ADC_Read 294C               ___lwdiv@quotient 0022                    ??i2___awdiv 0028  
              ___aldiv@divisor 0104          CANreceiveMessage@tamp 000C                ___aldiv@counter 0108  
               ___wmul@product 00D0                       _IPR1bits 000F9F                       _IPR2bits 000FA2  
 _delay_quartz_frequency_value 00DA                       _PIE1bits 000F9D                       _IPR3bits 000FA5  
                     _PIE2bits 000FA0                       _PIE3bits 000FA3       __end_of_CANisTXwarningON 2A8E  
                     i1u403_25 1634                       i1u405_20 1708                       i1u405_26 170A  
                     i1u406_20 1732                       i1u414_25 18AA                       i1u406_26 1734  
                     i1u408_25 1746                       i1u394_20 1480                       i1u394_26 1482  
                     i1u395_20 14AE                       i1u395_26 14B0                       i1u397_25 14C4  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       _PIR3bits 000FA4  
                     _RXB0EIDH 000F63                       _RXB0EIDL 000F64                       _RXB1EIDH 000F53  
                     _RXB1EIDL 000F54                       _ISR_Alta 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0EIDH 000F02                       _RXB1SIDH 000F51                       _RXF0EIDL 000F03  
                     _RXB1SIDL 000F52                       _RXF1EIDH 000F06                       _RXF1EIDL 000F07  
                     _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E  
                     _RXF3EIDL 000F0F                       _RXF4EIDH 000F12                       _RXF4EIDL 000F13  
                     _RXF5EIDH 000F16                       _RXF5EIDL 000F17                       _RXF0SIDH 000F00  
                     _RXF0SIDL 000F01                       _TXB0EIDH 000F43                       _RXF1SIDH 000F04  
                     _TXB0EIDL 000F44                       _RXF1SIDL 000F05                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 006C                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 00CC                       i2___wmul 29FA              i2___awdiv@divisor 0026  
            i2___awdiv@counter 00B0                  ?_CANSetFilter 00CC              ___lmul@multiplier 00CC  
                  _INTCON2bits 000FF1                    _INTCON3bits 000FF0                      copy_data0 2932  
                   _CANCONbits 000F6F                       __Hrparam 0000                   _RXB0SIDLbits 000F62  
       ??_board_initialization 00DA                       __Lrparam 0000                   _RXB1SIDLbits 000F52  
             __size_of___aldiv 011A                     _CANSetMask 18D4               __size_of___awdiv 00BE  
        i2___wmul@multiplicand 0020               __size_of___lwdiv 0052                _remote_frame_id 0068  
                     _Tx_retry 01FC                   ?_WriteTimer0 001E                   _RXF0SIDLbits 000F01  
                     _delay_ms 298A                ___lwdiv@divisor 0020                   _RXF1SIDLbits 000F05  
                _TMR1_overflow 01FA                ___lwdiv@counter 0024                 ??_CANSetFilter 00D1  
                     __ptext10 2A44                       __ptext11 283A                       __ptext12 250E  
                     __ptext21 29FA                       __ptext13 2A82                       __ptext22 279E  
                     __ptext14 2A8E                       __ptext23 28B0                       __ptext15 294C  
                     __ptext24 2A70                       __ptext16 2628                       __ptext18 13C8  
                     __ptext19 2A5A                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00D2  
                 _remote_frame 0200                  _TMR3_overflow 01FB                  __size_of_main 0248  
         CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32  
                     _timer_on 0070                   _TXB2SIDLbits 000F22                       int$flags 0041  
    __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001                  ?_CANisTxReady 0001  
                  _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19  
                  _RXB0CONbits 000F60                    _RXB1CONbits 000F50              _CANreceiveMessage 13C8  
                 _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2               ??_CANsendMessage 00D4  
                _wheel_speed_1 0074                  _wheel_speed_2 0078             ?_CANreceiveMessage 0001  
     CANsendMessage@identifier 00CC   __end_of_remote_frame_handler 2348                       intlevel1 0000  
                     intlevel2 0000               CANSetFilter@tamp 00D6               CANSetFilter@type 00D0  
          ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00CC                 ??_CANisRxReady 0001  
                  ?_CANSetMask 00CC                 ??_CANisTxReady 00CC                 _distance_array 0096  
    __end_of_CANreceiveMessage 18D4              ?_CANisRXwarningON 0001                    _speed_array 009E  
                 ___aldiv@sign 0109             ??_CANisRXwarningON 00CC          _distance_actual_value 0084  
        __end_of_CANInitialize 250E              ?_CANisTXwarningON 0001  
