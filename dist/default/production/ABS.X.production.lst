

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 10 13:35:11 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  0026CA                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _delay_quartz_frequency_value
    46  0026CA  10                 	db	16
    47                           
    48                           ;initializer for _number_of_measures
    49  0026CB  08                 	db	8
    50                           
    51                           ;initializer for _status_array
    52  0026CC  AA                 	db	170
    53  0026CD  AA                 	db	170
    54  0026CE  AA                 	db	170
    55  0026CF  AA                 	db	170
    56  0026D0  AA                 	db	170
    57  0026D1  AA                 	db	170
    58  0026D2  AA                 	db	170
    59  0026D3  AA                 	db	170
    60  0000                     _RXB1CON	set	3920
    61  0000                     _RXB1CONbits	set	3920
    62  0000                     _RXB1D0	set	3926
    63  0000                     _RXB1D1	set	3927
    64  0000                     _RXB1D2	set	3928
    65  0000                     _RXB1D3	set	3929
    66  0000                     _RXB1D4	set	3930
    67  0000                     _RXB1D5	set	3931
    68  0000                     _RXB1D6	set	3932
    69  0000                     _RXB1D7	set	3933
    70  0000                     _RXB1DLC	set	3925
    71  0000                     _RXB1DLCbits	set	3925
    72  0000                     _RXB1EIDH	set	3923
    73  0000                     _RXB1EIDL	set	3924
    74  0000                     _RXB1SIDH	set	3921
    75  0000                     _RXB1SIDL	set	3922
    76  0000                     _RXB1SIDLbits	set	3922
    77  0000                     _RXF0EIDH	set	3842
    78  0000                     _RXF0EIDL	set	3843
    79  0000                     _RXF0SIDH	set	3840
    80  0000                     _RXF0SIDL	set	3841
    81  0000                     _RXF0SIDLbits	set	3841
    82  0000                     _RXF1EIDH	set	3846
    83  0000                     _RXF1EIDL	set	3847
    84  0000                     _RXF1SIDH	set	3844
    85  0000                     _RXF1SIDL	set	3845
    86  0000                     _RXF1SIDLbits	set	3845
    87  0000                     _RXF2EIDH	set	3850
    88  0000                     _RXF2EIDL	set	3851
    89  0000                     _RXF2SIDH	set	3848
    90  0000                     _RXF2SIDL	set	3849
    91  0000                     _RXF2SIDLbits	set	3849
    92  0000                     _RXF3EIDH	set	3854
    93  0000                     _RXF3EIDL	set	3855
    94  0000                     _RXF3SIDH	set	3852
    95  0000                     _RXF3SIDL	set	3853
    96  0000                     _RXF3SIDLbits	set	3853
    97  0000                     _RXF4EIDH	set	3858
    98  0000                     _RXF4EIDL	set	3859
    99  0000                     _RXF4SIDH	set	3856
   100  0000                     _RXF4SIDL	set	3857
   101  0000                     _RXF4SIDLbits	set	3857
   102  0000                     _RXF5EIDH	set	3862
   103  0000                     _RXF5EIDL	set	3863
   104  0000                     _RXF5SIDH	set	3860
   105  0000                     _RXF5SIDL	set	3861
   106  0000                     _RXF5SIDLbits	set	3861
   107  0000                     _RXM0EIDH	set	3866
   108  0000                     _RXM0EIDL	set	3867
   109  0000                     _RXM0SIDH	set	3864
   110  0000                     _RXM0SIDL	set	3865
   111  0000                     _RXM0SIDLbits	set	3865
   112  0000                     _RXM1EIDH	set	3870
   113  0000                     _RXM1EIDL	set	3871
   114  0000                     _RXM1SIDH	set	3868
   115  0000                     _RXM1SIDL	set	3869
   116  0000                     _RXM1SIDLbits	set	3869
   117  0000                     _TXB0CONbits	set	3904
   118  0000                     _TXB0D0	set	3910
   119  0000                     _TXB0D1	set	3911
   120  0000                     _TXB0D2	set	3912
   121  0000                     _TXB0D3	set	3913
   122  0000                     _TXB0D4	set	3914
   123  0000                     _TXB0D5	set	3915
   124  0000                     _TXB0D6	set	3916
   125  0000                     _TXB0D7	set	3917
   126  0000                     _TXB0DLC	set	3909
   127  0000                     _TXB0DLCbits	set	3909
   128  0000                     _TXB0EIDH	set	3907
   129  0000                     _TXB0EIDL	set	3908
   130  0000                     _TXB0SIDH	set	3905
   131  0000                     _TXB0SIDL	set	3906
   132  0000                     _TXB0SIDLbits	set	3906
   133  0000                     _TXB1CONbits	set	3888
   134  0000                     _TXB1D0	set	3894
   135  0000                     _TXB1D1	set	3895
   136  0000                     _TXB1D2	set	3896
   137  0000                     _TXB1D3	set	3897
   138  0000                     _TXB1D4	set	3898
   139  0000                     _TXB1D5	set	3899
   140  0000                     _TXB1D6	set	3900
   141  0000                     _TXB1D7	set	3901
   142  0000                     _TXB1DLC	set	3893
   143  0000                     _TXB1DLCbits	set	3893
   144  0000                     _TXB1EIDH	set	3891
   145  0000                     _TXB1EIDL	set	3892
   146  0000                     _TXB1SIDH	set	3889
   147  0000                     _TXB1SIDL	set	3890
   148  0000                     _TXB1SIDLbits	set	3890
   149  0000                     _TXB2CONbits	set	3872
   150  0000                     _TXB2D0	set	3878
   151  0000                     _TXB2D1	set	3879
   152  0000                     _TXB2D2	set	3880
   153  0000                     _TXB2D3	set	3881
   154  0000                     _TXB2D4	set	3882
   155  0000                     _TXB2D5	set	3883
   156  0000                     _TXB2D6	set	3884
   157  0000                     _TXB2D7	set	3885
   158  0000                     _TXB2DLC	set	3877
   159  0000                     _TXB2DLCbits	set	3877
   160  0000                     _TXB2EIDH	set	3875
   161  0000                     _TXB2EIDL	set	3876
   162  0000                     _TXB2SIDH	set	3873
   163  0000                     _TXB2SIDL	set	3874
   164  0000                     _TXB2SIDLbits	set	3874
   165  0000                     _ADCON0bits	set	4034
   166  0000                     _ADCON1	set	4033
   167  0000                     _ADCON2bits	set	4032
   168  0000                     _ADRESH	set	4036
   169  0000                     _BRGCON1	set	3952
   170  0000                     _BRGCON2	set	3953
   171  0000                     _BRGCON2bits	set	3953
   172  0000                     _BRGCON3	set	3954
   173  0000                     _BRGCON3bits	set	3954
   174  0000                     _CANCON	set	3951
   175  0000                     _CANCONbits	set	3951
   176  0000                     _CANSTAT	set	3950
   177  0000                     _COMSTATbits	set	3956
   178  0000                     _INTCON2bits	set	4081
   179  0000                     _INTCONbits	set	4082
   180  0000                     _IPR2bits	set	4002
   181  0000                     _IPR3bits	set	4005
   182  0000                     _LATA	set	3977
   183  0000                     _LATB	set	3978
   184  0000                     _LATC	set	3979
   185  0000                     _LATD	set	3980
   186  0000                     _LATE	set	3981
   187  0000                     _PIE2bits	set	4000
   188  0000                     _PIE3bits	set	4003
   189  0000                     _PIR2bits	set	4001
   190  0000                     _PIR3bits	set	4004
   191  0000                     _PORTBbits	set	3969
   192  0000                     _PORTCbits	set	3970
   193  0000                     _RCONbits	set	4048
   194  0000                     _RXB0CON	set	3936
   195  0000                     _RXB0CONbits	set	3936
   196  0000                     _RXB0D0	set	3942
   197  0000                     _RXB0D1	set	3943
   198  0000                     _RXB0D2	set	3944
   199  0000                     _RXB0D3	set	3945
   200  0000                     _RXB0D4	set	3946
   201  0000                     _RXB0D5	set	3947
   202  0000                     _RXB0D6	set	3948
   203  0000                     _RXB0D7	set	3949
   204  0000                     _RXB0DLC	set	3941
   205  0000                     _RXB0DLCbits	set	3941
   206  0000                     _RXB0EIDH	set	3939
   207  0000                     _RXB0EIDL	set	3940
   208  0000                     _RXB0SIDH	set	3937
   209  0000                     _RXB0SIDL	set	3938
   210  0000                     _RXB0SIDLbits	set	3938
   211  0000                     _RXERRCNT	set	3957
   212  0000                     _T0CON	set	4053
   213  0000                     _T0CONbits	set	4053
   214  0000                     _T3CON	set	4017
   215  0000                     _TMR0H	set	4055
   216  0000                     _TMR0L	set	4054
   217  0000                     _TMR3H	set	4019
   218  0000                     _TMR3L	set	4018
   219  0000                     _TRISA	set	3986
   220  0000                     _TRISB	set	3987
   221  0000                     _TRISC	set	3988
   222  0000                     _TRISD	set	3989
   223  0000                     _TRISE	set	3990
   224  0000                     _TXERRCNT	set	3958
   225                           
   226                           ; #config settings
   227  0000                     
   228                           	psect	cinit
   229  002572                     __pcinit:
   230                           	opt stack 0
   231  002572                     start_initialization:
   232                           	opt stack 0
   233  002572                     __initialization:
   234                           	opt stack 0
   235                           
   236                           ; Clear objects allocated to BANK0 (30 bytes)
   237  002572  EE00  F086         	lfsr	0,__pbssBANK0
   238  002576  0E1E               	movlw	30
   239  002578                     clear_0:
   240  002578  6AEE               	clrf	postinc0,c
   241  00257A  06E8               	decf	wreg,f,c
   242  00257C  E1FD               	bnz	clear_0
   243                           
   244                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   245  00257E  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   246                           
   247                           ; Clear objects allocated to COMRAM (24 bytes)
   248  002580  EE00  F032         	lfsr	0,__pbssCOMRAM
   249  002584  0E18               	movlw	24
   250  002586                     clear_1:
   251  002586  6AEE               	clrf	postinc0,c
   252  002588  06E8               	decf	wreg,f,c
   253  00258A  E1FD               	bnz	clear_1
   254                           
   255                           ; Initialize objects allocated to BANK0 (10 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257  00258C  0ECA               	movlw	low __pidataBANK0
   258  00258E  6EF6               	movwf	tblptrl,c
   259  002590  0E26               	movlw	high __pidataBANK0
   260  002592  6EF7               	movwf	tblptrh,c
   261  002594  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262  002596  6EF8               	movwf	tblptru,c
   263  002598  EE00  F0A4         	lfsr	0,__pdataBANK0
   264  00259C  EE10 F00A          	lfsr	1,10
   265  0025A0                     copy_data0:
   266  0025A0  0009               	tblrd		*+
   267  0025A2  CFF5 FFEE          	movff	tablat,postinc0
   268  0025A6  50E5               	movf	postdec1,w,c
   269  0025A8  50E1               	movf	fsr1l,w,c
   270  0025AA  E1FA               	bnz	copy_data0
   271  0025AC                     end_of_initialization:
   272                           	opt stack 0
   273  0025AC                     __end_of__initialization:
   274                           	opt stack 0
   275  0025AC  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276  0025AE  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277  0025B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  0025B2  6EF8               	movwf	tblptru,c
   279  0025B4  0100               	movlb	0
   280  0025B6  EF01  F00E         	goto	_main	;jump to C main() function
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	bitbssCOMRAM
   291  000250                     __pbitbssCOMRAM:
   292                           	opt stack 0
   293  000250                     _Tx_retry:
   294                           	opt stack 0
   295  000250                     	ds	1
   296  000251                     _remote_frame:
   297                           	opt stack 0
   298  000251                     	ds	1
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	bssCOMRAM
   309  000032                     __pbssCOMRAM:
   310                           	opt stack 0
   311  000032                     _timer_off:
   312                           	opt stack 0
   313  000032                     	ds	4
   314  000036                     _timer_on:
   315                           	opt stack 0
   316  000036                     	ds	4
   317  00003A                     _msg:
   318                           	opt stack 0
   319  00003A                     	ds	15
   320  000049                     _brake_value_degree:
   321                           	opt stack 0
   322  000049                     	ds	1
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	bssBANK0
   333  000086                     __pbssBANK0:
   334                           	opt stack 0
   335  000086                     _TMR3_counter:
   336                           	opt stack 0
   337  000086                     	ds	4
   338  00008A                     _TMR3_stored:
   339                           	opt stack 0
   340  00008A                     	ds	4
   341  00008E                     _remote_frame_id:
   342                           	opt stack 0
   343  00008E                     	ds	4
   344  000092                     _clock_counter_reference:
   345                           	opt stack 0
   346  000092                     	ds	2
   347  000094                     _correction_factor:
   348                           	opt stack 0
   349  000094                     	ds	2
   350  000096                     _gap:
   351                           	opt stack 0
   352  000096                     	ds	2
   353  000098                     _partial_sum:
   354                           	opt stack 0
   355  000098                     	ds	2
   356  00009A                     _ADC_wait_counter:
   357                           	opt stack 0
   358  00009A                     	ds	1
   359  00009B                     _brake_signal_CAN:
   360                           	opt stack 0
   361  00009B                     	ds	1
   362  00009C                     _brake_value_inc:
   363                           	opt stack 0
   364  00009C                     	ds	1
   365  00009D                     _final_value:
   366                           	opt stack 0
   367  00009D                     	ds	1
   368  00009E                     _home_position:
   369                           	opt stack 0
   370  00009E                     	ds	1
   371  00009F                     _i:
   372                           	opt stack 0
   373  00009F                     	ds	1
   374  0000A0                     _inc:
   375                           	opt stack 0
   376  0000A0                     	ds	1
   377  0000A1                     _read:
   378                           	opt stack 0
   379  0000A1                     	ds	1
   380  0000A2                     _wait_time:
   381                           	opt stack 0
   382  0000A2                     	ds	1
   383  0000A3                     _brake_value:
   384                           	opt stack 0
   385  0000A3                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	dataBANK0
   396  0000A4                     __pdataBANK0:
   397                           	opt stack 0
   398  0000A4                     _delay_quartz_frequency_value:
   399                           	opt stack 0
   400  0000A4                     	ds	1
   401  0000A5                     _number_of_measures:
   402                           	opt stack 0
   403  0000A5                     	ds	1
   404  0000A6                     _status_array:
   405                           	opt stack 0
   406  0000A6                     	ds	8
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           postdec1	equ	0xFE5
   414                           fsr1l	equ	0xFE1
   415                           
   416                           	psect	cstackBANK0
   417  000060                     __pcstackBANK0:
   418                           	opt stack 0
   419  000060                     ?___wmul:
   420                           	opt stack 0
   421  000060                     ?___awdiv:
   422                           	opt stack 0
   423  000060                     ?___lwdiv:
   424                           	opt stack 0
   425  000060                     CANOperationMode@mode:
   426                           	opt stack 0
   427  000060                     _CANisTxReady$2968:
   428                           	opt stack 0
   429  000060                     ___wmul@multiplier:
   430                           	opt stack 0
   431  000060                     ___awdiv@dividend:
   432                           	opt stack 0
   433  000060                     ___lwdiv@dividend:
   434                           	opt stack 0
   435  000060                     CANsendMessage@identifier:
   436                           	opt stack 0
   437  000060                     CANSetMask@mask:
   438                           	opt stack 0
   439  000060                     CANSetFilter@filter:
   440                           	opt stack 0
   441                           
   442                           ; 4 bytes @ 0x0
   443  000060                     	ds	2
   444  000062                     ___wmul@multiplicand:
   445                           	opt stack 0
   446  000062                     ___awdiv@divisor:
   447                           	opt stack 0
   448  000062                     ___lwdiv@divisor:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  000062                     	ds	2
   453  000064                     CANSetMask@type:
   454                           	opt stack 0
   455  000064                     CANSetFilter@type:
   456                           	opt stack 0
   457  000064                     ___awdiv@counter:
   458                           	opt stack 0
   459  000064                     CANsendMessage@data:
   460                           	opt stack 0
   461  000064                     ___wmul@product:
   462                           	opt stack 0
   463  000064                     ___lwdiv@quotient:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x4
   467  000064                     	ds	1
   468  000065                     ??_CANSetMask:
   469  000065                     ??_CANSetFilter:
   470  000065                     ___awdiv@sign:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474  000065                     	ds	1
   475  000066                     CANsendMessage@dataLength:
   476                           	opt stack 0
   477  000066                     ___lwdiv@counter:
   478                           	opt stack 0
   479  000066                     delay_ms@value_ms:
   480                           	opt stack 0
   481  000066                     ___awdiv@quotient:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x6
   485  000066                     	ds	1
   486  000067                     CANsendMessage@flags:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x7
   490  000067                     	ds	1
   491  000068                     ??_CANsendMessage:
   492  000068                     
   493                           ; 0 bytes @ 0x8
   494  000068                     	ds	1
   495  000069                     CANSetMask@numBuffer:
   496                           	opt stack 0
   497  000069                     CANSetFilter@numBuffer:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501  000069                     	ds	1
   502  00006A                     CANSetMask@tamp:
   503                           	opt stack 0
   504  00006A                     CANSetFilter@tamp:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0xA
   508  00006A                     	ds	2
   509  00006C                     CANsendMessage@tamp:
   510                           	opt stack 0
   511                           
   512                           ; 4 bytes @ 0xC
   513  00006C                     	ds	2
   514  00006E                     CANInitialize@phaseSeg1:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0xE
   518  00006E                     	ds	1
   519  00006F                     CANInitialize@phaseSeg2:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0xF
   523  00006F                     	ds	1
   524  000070                     CANInitialize@SJW:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x10
   528  000070                     	ds	1
   529  000071                     CANInitialize@BRP:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x11
   533  000071                     	ds	1
   534  000072                     CANInitialize@flags:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x12
   538  000072                     	ds	1
   539  000073                     ??_CANInitialize:
   540                           
   541                           ; 0 bytes @ 0x13
   542  000073                     	ds	4
   543  000077                     CANInitialize@propSeg:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x17
   547  000077                     	ds	1
   548  000078                     CANInitialize@FilterConfig1:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x18
   552  000078                     	ds	1
   553  000079                     CANInitialize@FilterConfig2:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x19
   557  000079                     	ds	1
   558  00007A                     ??_main:
   559                           
   560                           ; 0 bytes @ 0x1A
   561  00007A                     	ds	12
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           
   571                           	psect	cstackCOMRAM
   572  000001                     __pcstackCOMRAM:
   573                           	opt stack 0
   574  000001                     ??_ISR_Bassa:
   575  000001                     
   576                           ; 2 bytes @ 0x0
   577  000001                     	ds	17
   578  000012                     ?i2___wmul:
   579                           	opt stack 0
   580  000012                     _CANisRxReady$2970:
   581                           	opt stack 0
   582  000012                     CANreceiveMessage@msg:
   583                           	opt stack 0
   584  000012                     WriteTimer0@timer0:
   585                           	opt stack 0
   586  000012                     i2___wmul@multiplier:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x11
   590  000012                     	ds	2
   591  000014                     ??_CANreceiveMessage:
   592  000014                     WriteTimer0@timer:
   593                           	opt stack 0
   594  000014                     i2___wmul@multiplicand:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x13
   598  000014                     	ds	2
   599  000016                     i2___wmul@product:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x15
   603  000016                     	ds	2
   604  000018                     ?i2___awdiv:
   605                           	opt stack 0
   606  000018                     i2___awdiv@dividend:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x17
   610  000018                     	ds	2
   611  00001A                     i2___awdiv@divisor:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x19
   615  00001A                     	ds	2
   616  00001C                     CANreceiveMessage@error:
   617                           	opt stack 0
   618  00001C                     i2___awdiv@counter:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x1B
   622  00001C                     	ds	1
   623  00001D                     CANreceiveMessage@tamp:
   624                           	opt stack 0
   625  00001D                     i2___awdiv@sign:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x1C
   629  00001D                     	ds	1
   630  00001E                     i2___awdiv@quotient:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x1D
   634  00001E                     	ds	2
   635  000020                     ??_ISR_Alta:
   636                           
   637                           ; 0 bytes @ 0x1F
   638  000020                     	ds	18
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postdec1	equ	0xFE5
   646                           fsr1l	equ	0xFE1
   647                           
   648 ;;
   649 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   650 ;;
   651 ;; *************** function _main *****************
   652 ;; Defined at:
   653 ;;		line 144 in file "ABS_Code.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  2  649[None  ] int 
   660 ;; Registers used:
   661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   667 ;;      Params:         0       0       0       0
   668 ;;      Locals:         0       0       0       0
   669 ;;      Temps:          0      12       0       0
   670 ;;      Totals:         0      12       0       0
   671 ;;Total ram usage:       12 bytes
   672 ;; Hardware stack levels required when called:    6
   673 ;; This function calls:
   674 ;;		_ADC_Read
   675 ;;		_CANisRXwarningON
   676 ;;		_CANisTXwarningON
   677 ;;		___awdiv
   678 ;;		_board_initialization
   679 ;;		_status_ok
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text0
   686  001C02                     __ptext0:
   687                           	opt stack 0
   688  001C02                     _main:
   689                           	opt stack 25
   690                           
   691                           ;ABS_Code.c: 145: board_initialization();
   692                           
   693                           ;incstack = 0
   694  001C02  EC70  F011         	call	_board_initialization	;wreg free
   695                           
   696                           ;ABS_Code.c: 146: ADC_Read();
   697  001C06  EC0B  F012         	call	_ADC_Read	;wreg free
   698  001C0A                     l3728:
   699                           
   700                           ;ABS_Code.c: 148: if ((remote_frame == 1) || (Tx_retry = 1)) {
   701  001C0A  B24A               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
   702  001C0C  D002               	goto	l3732
   703  001C0E  804A               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   704  001C10  B04A               	btfsc	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   705  001C12                     l3732:
   706                           
   707                           ;ABS_Code.c: 149: status_ok();
   708  001C12  EC88  F012         	call	_status_ok	;wreg free
   709                           
   710                           ;ABS_Code.c: 150: }
   711                           ;ABS_Code.c: 152: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   712  001C16  EC59  F013         	call	_CANisTXwarningON	;wreg free
   713  001C1A  06E8               	decf	wreg,f,c
   714  001C1C  B4D8               	btfsc	status,2,c
   715  001C1E  D004               	goto	l656
   716  001C20  EC5F  F013         	call	_CANisRXwarningON	;wreg free
   717  001C24  06E8               	decf	wreg,f,c
   718  001C26  B4D8               	btfsc	status,2,c
   719  001C28                     l656:
   720                           
   721                           ;ABS_Code.c: 153: PORTBbits.RB0 = 1;
   722  001C28  8081               	bsf	3969,0,c	;volatile
   723                           
   724                           ;ABS_Code.c: 154: }
   725                           ;ABS_Code.c: 156: if (ADC_wait_counter == 50) {
   726  001C2A  0E32               	movlw	50
   727  001C2C  0100               	movlb	0	; () banked
   728  001C2E  199A               	xorwf	_ADC_wait_counter& (0+255),w,b
   729  001C30  A4D8               	btfss	status,2,c
   730  001C32  D005               	goto	l3744
   731                           
   732                           ; BSR set to: 0
   733                           ;ABS_Code.c: 157: ADC_Read();
   734  001C34  EC0B  F012         	call	_ADC_Read	;wreg free
   735                           
   736                           ;ABS_Code.c: 158: ADC_wait_counter = 0;
   737  001C38  0E00               	movlw	0
   738  001C3A  0100               	movlb	0	; () banked
   739  001C3C  6F9A               	movwf	_ADC_wait_counter& (0+255),b
   740  001C3E                     l3744:
   741                           
   742                           ; BSR set to: 0
   743                           ;ABS_Code.c: 159: }
   744                           ;ABS_Code.c: 161: if ((TMR3_counter - TMR3_stored) > (wait_time / 10)) {
   745  001C3E  C08A  F07A         	movff	_TMR3_stored,??_main
   746  001C42  C08B  F07B         	movff	_TMR3_stored+1,??_main+1
   747  001C46  C08C  F07C         	movff	_TMR3_stored+2,??_main+2
   748  001C4A  C08D  F07D         	movff	_TMR3_stored+3,??_main+3
   749  001C4E  0100               	movlb	0	; () banked
   750  001C50  1F7A               	comf	??_main& (0+255),f,b
   751  001C52  1F7B               	comf	(??_main+1)& (0+255),f,b
   752  001C54  1F7C               	comf	(??_main+2)& (0+255),f,b
   753  001C56  1F7D               	comf	(??_main+3)& (0+255),f,b
   754  001C58  2B7A               	incf	??_main& (0+255),f,b
   755  001C5A  0E00               	movlw	0
   756  001C5C  237B               	addwfc	(??_main+1)& (0+255),f,b
   757  001C5E  237C               	addwfc	(??_main+2)& (0+255),f,b
   758  001C60  237D               	addwfc	(??_main+3)& (0+255),f,b
   759  001C62  0100               	movlb	0	; () banked
   760  001C64  5186               	movf	_TMR3_counter& (0+255),w,b
   761  001C66  0100               	movlb	0	; () banked
   762  001C68  257A               	addwf	??_main& (0+255),w,b
   763  001C6A  0100               	movlb	0	; () banked
   764  001C6C  6F7E               	movwf	(??_main+4)& (0+255),b
   765  001C6E  0100               	movlb	0	; () banked
   766  001C70  5187               	movf	(_TMR3_counter+1)& (0+255),w,b
   767  001C72  0100               	movlb	0	; () banked
   768  001C74  217B               	addwfc	(??_main+1)& (0+255),w,b
   769  001C76  0100               	movlb	0	; () banked
   770  001C78  6F7F               	movwf	(??_main+5)& (0+255),b
   771  001C7A  0100               	movlb	0	; () banked
   772  001C7C  5188               	movf	(_TMR3_counter+2)& (0+255),w,b
   773  001C7E  0100               	movlb	0	; () banked
   774  001C80  217C               	addwfc	(??_main+2)& (0+255),w,b
   775  001C82  0100               	movlb	0	; () banked
   776  001C84  6F80               	movwf	(??_main+6)& (0+255),b
   777  001C86  0100               	movlb	0	; () banked
   778  001C88  5189               	movf	(_TMR3_counter+3)& (0+255),w,b
   779  001C8A  0100               	movlb	0	; () banked
   780  001C8C  217D               	addwfc	(??_main+3)& (0+255),w,b
   781  001C8E  0100               	movlb	0	; () banked
   782  001C90  6F81               	movwf	(??_main+7)& (0+255),b
   783  001C92  C0A2  F060         	movff	_wait_time,___awdiv@dividend
   784  001C96  0100               	movlb	0	; () banked
   785  001C98  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
   786  001C9A  0E00               	movlw	0
   787  001C9C  0100               	movlb	0	; () banked
   788  001C9E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   789  001CA0  0E0A               	movlw	10
   790  001CA2  6F62               	movwf	___awdiv@divisor& (0+255),b
   791  001CA4  EC11  F011         	call	___awdiv	;wreg free
   792  001CA8  0100               	movlb	0	; () banked
   793  001CAA  C060  F082         	movff	?___awdiv,??_main+8
   794  001CAE  0100               	movlb	0	; () banked
   795  001CB0  C061  F083         	movff	?___awdiv+1,??_main+9
   796  001CB4  0E00               	movlw	0
   797  001CB6  0100               	movlb	0	; () banked
   798  001CB8  BF83               	btfsc	(??_main+9)& (0+255),7,b
   799  001CBA  0EFF               	movlw	255
   800  001CBC  6F84               	movwf	(??_main+10)& (0+255),b
   801  001CBE  6F85               	movwf	(??_main+11)& (0+255),b
   802  001CC0  0100               	movlb	0	; () banked
   803  001CC2  517E               	movf	(??_main+4)& (0+255),w,b
   804  001CC4  0100               	movlb	0	; () banked
   805  001CC6  5D82               	subwf	(??_main+8)& (0+255),w,b
   806  001CC8  0100               	movlb	0	; () banked
   807  001CCA  517F               	movf	(??_main+5)& (0+255),w,b
   808  001CCC  0100               	movlb	0	; () banked
   809  001CCE  5983               	subwfb	(??_main+9)& (0+255),w,b
   810  001CD0  0100               	movlb	0	; () banked
   811  001CD2  5180               	movf	(??_main+6)& (0+255),w,b
   812  001CD4  0100               	movlb	0	; () banked
   813  001CD6  5984               	subwfb	(??_main+10)& (0+255),w,b
   814  001CD8  0100               	movlb	0	; () banked
   815  001CDA  5181               	movf	(??_main+7)& (0+255),w,b
   816  001CDC  0100               	movlb	0	; () banked
   817  001CDE  5985               	subwfb	(??_main+11)& (0+255),w,b
   818  001CE0  B0D8               	btfsc	status,0,c
   819  001CE2  D0DE               	goto	l3788
   820                           
   821                           ; BSR set to: 0
   822                           ;ABS_Code.c: 163: if (brake_signal_CAN == 00) {
   823  001CE4  0100               	movlb	0	; () banked
   824  001CE6  519B               	movf	_brake_signal_CAN& (0+255),w,b
   825  001CE8  A4D8               	btfss	status,2,c
   826  001CEA  D027               	goto	l659
   827                           
   828                           ; BSR set to: 0
   829                           ;ABS_Code.c: 164: if((brake_value_inc / 2) > 1) {
   830  001CEC  C09C  F060         	movff	_brake_value_inc,___awdiv@dividend
   831  001CF0  0100               	movlb	0	; () banked
   832  001CF2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
   833  001CF4  0E00               	movlw	0
   834  001CF6  0100               	movlb	0	; () banked
   835  001CF8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   836  001CFA  0E02               	movlw	2
   837  001CFC  6F62               	movwf	___awdiv@divisor& (0+255),b
   838  001CFE  EC11  F011         	call	___awdiv	;wreg free
   839  001D02  0100               	movlb	0	; () banked
   840  001D04  BF61               	btfsc	(?___awdiv+1)& (0+255),7,b
   841  001D06  D016               	goto	l3752
   842  001D08  0100               	movlb	0	; () banked
   843  001D0A  5161               	movf	(?___awdiv+1)& (0+255),w,b
   844  001D0C  E105               	bnz	u4310
   845  001D0E  0E02               	movlw	2
   846  001D10  0100               	movlb	0	; () banked
   847  001D12  5D60               	subwf	?___awdiv& (0+255),w,b
   848  001D14  A0D8               	btfss	status,0,c
   849  001D16  D00E               	goto	l3752
   850  001D18                     u4310:
   851                           
   852                           ; BSR set to: 0
   853                           ;ABS_Code.c: 165: brake_value_inc = brake_value_inc / 2;
   854  001D18  C09C  F060         	movff	_brake_value_inc,___awdiv@dividend
   855  001D1C  0100               	movlb	0	; () banked
   856  001D1E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
   857  001D20  0E00               	movlw	0
   858  001D22  0100               	movlb	0	; () banked
   859  001D24  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   860  001D26  0E02               	movlw	2
   861  001D28  6F62               	movwf	___awdiv@divisor& (0+255),b
   862  001D2A  EC11  F011         	call	___awdiv	;wreg free
   863  001D2E  0100               	movlb	0	; () banked
   864  001D30  5160               	movf	?___awdiv& (0+255),w,b
   865  001D32  D001               	goto	L1
   866  001D34                     l3752:
   867                           
   868                           ; BSR set to: 0
   869                           ;ABS_Code.c: 167: brake_value_inc = 0;
   870  001D34  0E00               	movlw	0
   871  001D36                     L1:
   872  001D36  0100               	movlb	0	; () banked
   873  001D38  6F9C               	movwf	_brake_value_inc& (0+255),b
   874  001D3A                     l659:
   875                           
   876                           ; BSR set to: 0
   877                           ;ABS_Code.c: 168: }
   878                           ;ABS_Code.c: 169: }
   879                           ;ABS_Code.c: 171: if (brake_signal_CAN != 00) {
   880  001D3A  0100               	movlb	0	; () banked
   881  001D3C  519B               	movf	_brake_signal_CAN& (0+255),w,b
   882  001D3E  B4D8               	btfsc	status,2,c
   883  001D40  D085               	goto	l3782
   884                           
   885                           ; BSR set to: 0
   886                           ;ABS_Code.c: 172: if (brake_signal_CAN == 01) {
   887  001D42  0100               	movlb	0	; () banked
   888  001D44  059B               	decf	_brake_signal_CAN& (0+255),w,b
   889  001D46  A4D8               	btfss	status,2,c
   890  001D48  D003               	goto	l3758
   891                           
   892                           ; BSR set to: 0
   893                           ;ABS_Code.c: 173: final_value = 150;
   894  001D4A  0E96               	movlw	150
   895  001D4C  0100               	movlb	0	; () banked
   896  001D4E  6F9D               	movwf	_final_value& (0+255),b
   897  001D50                     l3758:
   898                           
   899                           ; BSR set to: 0
   900                           ;ABS_Code.c: 174: }
   901                           ;ABS_Code.c: 175: if (brake_signal_CAN == 10) {
   902  001D50  0E0A               	movlw	10
   903  001D52  0100               	movlb	0	; () banked
   904  001D54  199B               	xorwf	_brake_signal_CAN& (0+255),w,b
   905  001D56  A4D8               	btfss	status,2,c
   906  001D58  D003               	goto	l3762
   907                           
   908                           ; BSR set to: 0
   909                           ;ABS_Code.c: 176: final_value = 200;
   910  001D5A  0EC8               	movlw	200
   911  001D5C  0100               	movlb	0	; () banked
   912  001D5E  6F9D               	movwf	_final_value& (0+255),b
   913  001D60                     l3762:
   914                           
   915                           ; BSR set to: 0
   916                           ;ABS_Code.c: 177: }
   917                           ;ABS_Code.c: 178: if (brake_signal_CAN == 11) {
   918  001D60  0E0B               	movlw	11
   919  001D62  0100               	movlb	0	; () banked
   920  001D64  199B               	xorwf	_brake_signal_CAN& (0+255),w,b
   921  001D66  A4D8               	btfss	status,2,c
   922  001D68  D002               	goto	l3766
   923                           
   924                           ; BSR set to: 0
   925                           ;ABS_Code.c: 179: final_value = 255;
   926  001D6A  0100               	movlb	0	; () banked
   927  001D6C  699D               	setf	_final_value& (0+255),b
   928  001D6E                     l3766:
   929                           
   930                           ; BSR set to: 0
   931                           ;ABS_Code.c: 180: }
   932                           ;ABS_Code.c: 181: if ((final_value - brake_value_inc) != 0) {
   933  001D6E  0100               	movlb	0	; () banked
   934  001D70  519C               	movf	_brake_value_inc& (0+255),w,b
   935  001D72  0100               	movlb	0	; () banked
   936  001D74  6F7A               	movwf	??_main& (0+255),b
   937  001D76  6B7B               	clrf	(??_main+1)& (0+255),b
   938  001D78  0100               	movlb	0	; () banked
   939  001D7A  1F7A               	comf	??_main& (0+255),f,b
   940  001D7C  1F7B               	comf	(??_main+1)& (0+255),f,b
   941  001D7E  4B7A               	infsnz	??_main& (0+255),f,b
   942  001D80  2B7B               	incf	(??_main+1)& (0+255),f,b
   943  001D82  0100               	movlb	0	; () banked
   944  001D84  519D               	movf	_final_value& (0+255),w,b
   945  001D86  0100               	movlb	0	; () banked
   946  001D88  6F7C               	movwf	(??_main+2)& (0+255),b
   947  001D8A  6B7D               	clrf	(??_main+3)& (0+255),b
   948  001D8C  0100               	movlb	0	; () banked
   949  001D8E  517A               	movf	??_main& (0+255),w,b
   950  001D90  0100               	movlb	0	; () banked
   951  001D92  277C               	addwf	(??_main+2)& (0+255),f,b
   952  001D94  0100               	movlb	0	; () banked
   953  001D96  517B               	movf	(??_main+1)& (0+255),w,b
   954  001D98  0100               	movlb	0	; () banked
   955  001D9A  237D               	addwfc	(??_main+3)& (0+255),f,b
   956  001D9C  0100               	movlb	0	; () banked
   957  001D9E  517C               	movf	(??_main+2)& (0+255),w,b
   958  001DA0  0100               	movlb	0	; () banked
   959  001DA2  117D               	iorwf	(??_main+3)& (0+255),w,b
   960  001DA4  B4D8               	btfsc	status,2,c
   961  001DA6  D052               	goto	l3782
   962                           
   963                           ; BSR set to: 0
   964                           ;ABS_Code.c: 182: gap = final_value - brake_value_inc;
   965  001DA8  0100               	movlb	0	; () banked
   966  001DAA  519C               	movf	_brake_value_inc& (0+255),w,b
   967  001DAC  0100               	movlb	0	; () banked
   968  001DAE  6F7A               	movwf	??_main& (0+255),b
   969  001DB0  6B7B               	clrf	(??_main+1)& (0+255),b
   970  001DB2  0100               	movlb	0	; () banked
   971  001DB4  1F7A               	comf	??_main& (0+255),f,b
   972  001DB6  1F7B               	comf	(??_main+1)& (0+255),f,b
   973  001DB8  4B7A               	infsnz	??_main& (0+255),f,b
   974  001DBA  2B7B               	incf	(??_main+1)& (0+255),f,b
   975  001DBC  0100               	movlb	0	; () banked
   976  001DBE  519D               	movf	_final_value& (0+255),w,b
   977  001DC0  0100               	movlb	0	; () banked
   978  001DC2  257A               	addwf	??_main& (0+255),w,b
   979  001DC4  0100               	movlb	0	; () banked
   980  001DC6  6F96               	movwf	_gap& (0+255),b
   981  001DC8  0E00               	movlw	0
   982  001DCA  0100               	movlb	0	; () banked
   983  001DCC  217B               	addwfc	(??_main+1)& (0+255),w,b
   984  001DCE  0100               	movlb	0	; () banked
   985  001DD0  6F97               	movwf	(_gap+1)& (0+255),b
   986                           
   987                           ; BSR set to: 0
   988                           ;ABS_Code.c: 183: inc = ((gap / 20)*(gap / 20));
   989  001DD2  C096  F060         	movff	_gap,___awdiv@dividend
   990  001DD6  C097  F061         	movff	_gap+1,___awdiv@dividend+1
   991  001DDA  0E00               	movlw	0
   992  001DDC  0100               	movlb	0	; () banked
   993  001DDE  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   994  001DE0  0E14               	movlw	20
   995  001DE2  6F62               	movwf	___awdiv@divisor& (0+255),b
   996  001DE4  EC11  F011         	call	___awdiv	;wreg free
   997  001DE8  C060  F07A         	movff	?___awdiv,??_main
   998  001DEC  C061  F07B         	movff	?___awdiv+1,??_main+1
   999  001DF0  C096  F060         	movff	_gap,___awdiv@dividend
  1000  001DF4  C097  F061         	movff	_gap+1,___awdiv@dividend+1
  1001  001DF8  0E00               	movlw	0
  1002  001DFA  0100               	movlb	0	; () banked
  1003  001DFC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1004  001DFE  0E14               	movlw	20
  1005  001E00  6F62               	movwf	___awdiv@divisor& (0+255),b
  1006  001E02  EC11  F011         	call	___awdiv	;wreg free
  1007  001E06  0100               	movlb	0	; () banked
  1008  001E08  5160               	movf	?___awdiv& (0+255),w,b
  1009  001E0A  0100               	movlb	0	; () banked
  1010  001E0C  037A               	mulwf	??_main& (0+255),b
  1011  001E0E  CFF3 F0A0          	movff	prodl,_inc
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;ABS_Code.c: 184: if (inc < 5) {
  1015  001E12  0E05               	movlw	5
  1016  001E14  0100               	movlb	0	; () banked
  1017  001E16  61A0               	cpfslt	_inc& (0+255),b
  1018  001E18  D003               	goto	l3776
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;ABS_Code.c: 185: brake_value_inc = final_value;
  1022  001E1A  C09D  F09C         	movff	_final_value,_brake_value_inc
  1023                           
  1024                           ;ABS_Code.c: 186: } else {
  1025  001E1E  D016               	goto	l3782
  1026  001E20                     l3776:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;ABS_Code.c: 187: if (gap > 0) {
  1030  001E20  0100               	movlb	0	; () banked
  1031  001E22  BF97               	btfsc	(_gap+1)& (0+255),7,b
  1032  001E24  D00C               	goto	l3780
  1033  001E26  0100               	movlb	0	; () banked
  1034  001E28  5197               	movf	(_gap+1)& (0+255),w,b
  1035  001E2A  E104               	bnz	u4380
  1036  001E2C  0100               	movlb	0	; () banked
  1037  001E2E  0596               	decf	_gap& (0+255),w,b
  1038  001E30  A0D8               	btfss	status,0,c
  1039  001E32  D005               	goto	l3780
  1040  001E34                     u4380:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;ABS_Code.c: 188: brake_value_inc = brake_value_inc + inc;
  1044  001E34  0100               	movlb	0	; () banked
  1045  001E36  519C               	movf	_brake_value_inc& (0+255),w,b
  1046  001E38  0100               	movlb	0	; () banked
  1047  001E3A  25A0               	addwf	_inc& (0+255),w,b
  1048  001E3C  D005               	goto	L2
  1049  001E3E                     l3780:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;ABS_Code.c: 190: brake_value_inc = brake_value_inc - inc;
  1053  001E3E  0100               	movlb	0	; () banked
  1054  001E40  51A0               	movf	_inc& (0+255),w,b
  1055  001E42  0800               	sublw	0
  1056  001E44  0100               	movlb	0	; () banked
  1057  001E46  259C               	addwf	_brake_value_inc& (0+255),w,b
  1058  001E48                     L2:
  1059  001E48  0100               	movlb	0	; () banked
  1060  001E4A  6F9C               	movwf	_brake_value_inc& (0+255),b
  1061  001E4C                     l3782:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;ABS_Code.c: 191: }
  1065                           ;ABS_Code.c: 192: }
  1066                           ;ABS_Code.c: 193: }
  1067                           ;ABS_Code.c: 194: }
  1068                           ;ABS_Code.c: 195: brake_value = (brake_value_inc / 17) + home_position;
  1069  001E4C  C09C  F060         	movff	_brake_value_inc,___awdiv@dividend
  1070  001E50  0100               	movlb	0	; () banked
  1071  001E52  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  1072  001E54  0E00               	movlw	0
  1073  001E56  0100               	movlb	0	; () banked
  1074  001E58  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1075  001E5A  0E11               	movlw	17
  1076  001E5C  6F62               	movwf	___awdiv@divisor& (0+255),b
  1077  001E5E  EC11  F011         	call	___awdiv	;wreg free
  1078  001E62  0100               	movlb	0	; () banked
  1079  001E64  5160               	movf	?___awdiv& (0+255),w,b
  1080  001E66  0100               	movlb	0	; () banked
  1081  001E68  259E               	addwf	_home_position& (0+255),w,b
  1082  001E6A  0100               	movlb	0	; () banked
  1083  001E6C  6FA3               	movwf	_brake_value& (0+255),b
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;ABS_Code.c: 196: brake_value_degree = (255 * brake_value) / 180;
  1087  001E6E  0100               	movlb	0	; () banked
  1088  001E70  51A3               	movf	_brake_value& (0+255),w,b
  1089  001E72  0DFF               	mullw	255
  1090  001E74  CFF3 F060          	movff	prodl,___awdiv@dividend
  1091  001E78  CFF4 F061          	movff	prodh,___awdiv@dividend+1
  1092  001E7C  0E00               	movlw	0
  1093  001E7E  0100               	movlb	0	; () banked
  1094  001E80  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1095  001E82  0EB4               	movlw	180
  1096  001E84  6F62               	movwf	___awdiv@divisor& (0+255),b
  1097  001E86  EC11  F011         	call	___awdiv	;wreg free
  1098  001E8A  0100               	movlb	0	; () banked
  1099  001E8C  5160               	movf	?___awdiv& (0+255),w,b
  1100  001E8E  6E49               	movwf	_brake_value_degree,c
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;ABS_Code.c: 197: TMR3_stored = TMR3_counter;
  1104  001E90  C086  F08A         	movff	_TMR3_counter,_TMR3_stored
  1105  001E94  C087  F08B         	movff	_TMR3_counter+1,_TMR3_stored+1
  1106  001E98  C088  F08C         	movff	_TMR3_counter+2,_TMR3_stored+2
  1107  001E9C  C089  F08D         	movff	_TMR3_counter+3,_TMR3_stored+3
  1108  001EA0                     l3788:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;ABS_Code.c: 198: }
  1112                           ;ABS_Code.c: 199: ADC_wait_counter++;
  1113  001EA0  0100               	movlb	0	; () banked
  1114  001EA2  2B9A               	incf	_ADC_wait_counter& (0+255),f,b
  1115                           
  1116                           ; BSR set to: 0
  1117  001EA4  D6B2               	goto	l3728
  1118  001EA6                     __end_of_main:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           prodh	equ	0xFF4
  1125                           prodl	equ	0xFF3
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec1	equ	0xFE5
  1129                           fsr1l	equ	0xFE1
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _status_ok *****************
  1133 ;; Defined at:
  1134 ;;		line 203 in file "ABS_Code.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;		None               void
  1141 ;; Registers used:
  1142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1148 ;;      Params:         0       0       0       0
  1149 ;;      Locals:         0       0       0       0
  1150 ;;      Temps:          0       0       0       0
  1151 ;;      Totals:         0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    4
  1155 ;; This function calls:
  1156 ;;		_CANisTxReady
  1157 ;;		_CANsendMessage
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text1
  1164  002510                     __ptext1:
  1165                           	opt stack 0
  1166  002510                     _status_ok:
  1167                           	opt stack 26
  1168                           
  1169                           ;ABS_Code.c: 204: if (CANisTxReady()) {
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;incstack = 0
  1173  002510  EC28  F013         	call	_CANisTxReady	;wreg free
  1174  002514  0900               	iorlw	0
  1175  002516  B4D8               	btfsc	status,2,c
  1176  002518  D029               	goto	l676
  1177                           
  1178                           ;ABS_Code.c: 205: if (remote_frame_id == 0b00000000000000000000000000100) {
  1179  00251A  0E04               	movlw	4
  1180  00251C  0100               	movlb	0	; () banked
  1181  00251E  198E               	xorwf	_remote_frame_id& (0+255),w,b
  1182  002520  0100               	movlb	0	; () banked
  1183  002522  118F               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1184  002524  0100               	movlb	0	; () banked
  1185  002526  1190               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1186  002528  0100               	movlb	0	; () banked
  1187  00252A  1191               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1188  00252C  A4D8               	btfss	status,2,c
  1189  00252E  D01F               	goto	l682
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;ABS_Code.c: 206: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1193  002530  C08E  F060         	movff	_remote_frame_id,CANsendMessage@identifier
  1194  002534  C08F  F061         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1195  002538  C090  F062         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1196  00253C  C091  F063         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1197  002540  0EA6               	movlw	low _status_array
  1198  002542  0100               	movlb	0	; () banked
  1199  002544  6F64               	movwf	CANsendMessage@data& (0+255),b
  1200  002546  0E00               	movlw	high _status_array
  1201  002548  0100               	movlb	0	; () banked
  1202  00254A  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1203  00254C  0E08               	movlw	8
  1204  00254E  0100               	movlb	0	; () banked
  1205  002550  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1206  002552  0EBC               	movlw	188
  1207  002554  0100               	movlb	0	; () banked
  1208  002556  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1209  002558  ECE6  F005         	call	_CANsendMessage	;wreg free
  1210                           
  1211                           ;ABS_Code.c: 207: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1212  00255C  010F               	movlb	15	; () banked
  1213  00255E  BD40               	btfsc	64,6,b	;volatile
  1214  002560  D005               	goto	l676
  1215                           
  1216                           ; BSR set to: 15
  1217  002562  010F               	movlb	15	; () banked
  1218  002564  BD30               	btfsc	48,6,b	;volatile
  1219  002566  D002               	goto	l676
  1220                           
  1221                           ; BSR set to: 15
  1222                           ;ABS_Code.c: 210: Tx_retry = 0;
  1223                           
  1224                           ;ABS_Code.c: 209: } else {
  1225                           
  1226                           ; BSR set to: 15
  1227                           ;ABS_Code.c: 208: Tx_retry = 1;
  1228  002568  904A               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1229                           
  1230                           ; BSR set to: 15
  1231                           ;ABS_Code.c: 211: }
  1232                           ;ABS_Code.c: 212: }
  1233                           ;ABS_Code.c: 213: } else {
  1234                           
  1235                           ; BSR set to: 15
  1236  00256A  D001               	goto	l682
  1237  00256C                     l676:
  1238                           
  1239                           ;ABS_Code.c: 214: Tx_retry = 1;
  1240  00256C  804A               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1241  00256E                     l682:
  1242                           
  1243                           ;ABS_Code.c: 215: }
  1244                           ;ABS_Code.c: 216: remote_frame = 0;
  1245  00256E  924A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1246  002570  0012               	return		;funcret
  1247  002572                     __end_of_status_ok:
  1248                           	opt stack 0
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           prodh	equ	0xFF4
  1254                           prodl	equ	0xFF3
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           postdec1	equ	0xFE5
  1258                           fsr1l	equ	0xFE1
  1259                           status	equ	0xFD8
  1260                           
  1261 ;; *************** function _CANsendMessage *****************
  1262 ;; Defined at:
  1263 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  identifier      4    0[BANK0 ] unsigned long 
  1266 ;;  data            2    4[BANK0 ] PTR unsigned char 
  1267 ;;		 -> status_array(8), 
  1268 ;;  dataLength      1    6[BANK0 ] unsigned char 
  1269 ;;  flags           1    7[BANK0 ] enum E16866
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  tamp            4   12[BANK0 ] unsigned long 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1281 ;;      Params:         0       8       0       0
  1282 ;;      Locals:         0       4       0       0
  1283 ;;      Temps:          0       4       0       0
  1284 ;;      Totals:         0      16       0       0
  1285 ;;Total ram usage:       16 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    3
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_status_ok
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text2
  1296  000BCC                     __ptext2:
  1297                           	opt stack 0
  1298  000BCC                     _CANsendMessage:
  1299                           	opt stack 26
  1300                           
  1301                           ;inc\CANlib.h: 296: unsigned long tamp;
  1302                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1303                           
  1304                           ;incstack = 0
  1305  000BCC  010F               	movlb	15	; () banked
  1306  000BCE  B740               	btfsc	64,3,b	;volatile
  1307  000BD0  D13F               	goto	l365
  1308                           
  1309                           ; BSR set to: 15
  1310                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1311  000BD2  C066  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1312                           
  1313                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1314  000BD6  0100               	movlb	0	; () banked
  1315  000BD8  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  1316  000BDA  D003               	goto	l366
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1320  000BDC  010F               	movlb	15	; () banked
  1321  000BDE  8D45               	bsf	69,6,b	;volatile
  1322  000BE0  D002               	goto	l367
  1323  000BE2                     l366:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;inc\CANlib.h: 302: else
  1327                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1328  000BE2  010F               	movlb	15	; () banked
  1329  000BE4  9D45               	bcf	69,6,b	;volatile
  1330  000BE6                     l367:
  1331                           
  1332                           ; BSR set to: 15
  1333                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1334  000BE6  0100               	movlb	0	; () banked
  1335  000BE8  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  1336  000BEA  D079               	goto	l368
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;inc\CANlib.h: 306: {
  1340                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1341  000BEC  0100               	movlb	0	; () banked
  1342  000BEE  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  1343  000BF0  0100               	movlb	0	; () banked
  1344  000BF2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1345  000BF4  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1346  000BF6  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1347  000BF8  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1351  000BFA  C06C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1355  000BFE  0E00               	movlw	0
  1356  000C00  0100               	movlb	0	; () banked
  1357  000C02  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1358  000C04  0100               	movlb	0	; () banked
  1359  000C06  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1360  000C08  0EFF               	movlw	255
  1361  000C0A  0100               	movlb	0	; () banked
  1362  000C0C  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1363  000C0E  0100               	movlb	0	; () banked
  1364  000C10  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1365  000C12  0E00               	movlw	0
  1366  000C14  0100               	movlb	0	; () banked
  1367  000C16  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1368  000C18  0100               	movlb	0	; () banked
  1369  000C1A  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1370  000C1C  0E00               	movlw	0
  1371  000C1E  0100               	movlb	0	; () banked
  1372  000C20  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1373  000C22  0100               	movlb	0	; () banked
  1374  000C24  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1378  000C26  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  1379  000C2A  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1380  000C2E  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1381  000C32  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1382  000C36  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
  1383  000C3A  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1384  000C3E  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1385  000C42  0100               	movlb	0	; () banked
  1386  000C44  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
  1387  000C46  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1388  000C4A  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1389  000C4E  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1390  000C52  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1394  000C56  C06C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1398  000C5A  0E00               	movlw	0
  1399  000C5C  010F               	movlb	15	; () banked
  1400  000C5E  6F42               	movwf	66,b	;volatile
  1401                           
  1402                           ; BSR set to: 15
  1403                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1404  000C60  010F               	movlb	15	; () banked
  1405  000C62  8742               	bsf	66,3,b	;volatile
  1406                           
  1407                           ; BSR set to: 15
  1408                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1409  000C64  0100               	movlb	0	; () banked
  1410  000C66  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1411  000C68  D002               	goto	l369
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1415  000C6A  010F               	movlb	15	; () banked
  1416  000C6C  8142               	bsf	66,0,b	;volatile
  1417  000C6E                     l369:
  1418                           
  1419                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1420  000C6E  0100               	movlb	0	; () banked
  1421  000C70  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1422  000C72  D002               	goto	l370
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1426  000C74  010F               	movlb	15	; () banked
  1427  000C76  8342               	bsf	66,1,b	;volatile
  1428  000C78                     l370:
  1429                           
  1430                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1431  000C78  0100               	movlb	0	; () banked
  1432  000C7A  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1433  000C7C  D002               	goto	l371
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1437  000C7E  010F               	movlb	15	; () banked
  1438  000C80  8B42               	bsf	66,5,b	;volatile
  1439  000C82                     l371:
  1440                           
  1441                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1442  000C82  0100               	movlb	0	; () banked
  1443  000C84  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1444  000C86  D002               	goto	l372
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1448  000C88  010F               	movlb	15	; () banked
  1449  000C8A  8D42               	bsf	66,6,b	;volatile
  1450  000C8C                     l372:
  1451                           
  1452                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1453  000C8C  0100               	movlb	0	; () banked
  1454  000C8E  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1455  000C90  D002               	goto	l3082
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1459  000C92  010F               	movlb	15	; () banked
  1460  000C94  8F42               	bsf	66,7,b	;volatile
  1461  000C96                     l3082:
  1462                           
  1463                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1464  000C96  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1465  000C9A  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1466  000C9E  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1467  000CA2  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1468  000CA6  0E16               	movlw	22
  1469  000CA8  D006               	goto	u3300
  1470  000CAA                     u3305:
  1471  000CAA  0100               	movlb	0	; () banked
  1472  000CAC  90D8               	bcf	status,0,c
  1473  000CAE  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1474  000CB0  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1475  000CB2  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1476  000CB4  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1477  000CB6                     u3300:
  1478  000CB6  2EE8               	decfsz	wreg,f,c
  1479  000CB8  D7F8               	goto	u3305
  1480  000CBA  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1481  000CBE  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1482  000CC2  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1483  000CC6  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1487  000CCA  0100               	movlb	0	; () banked
  1488  000CCC  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1489  000CCE  0100               	movlb	0	; () banked
  1490  000CD0  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1491  000CD2  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1492  000CD4  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1493  000CD6  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1497  000CD8  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1498                           
  1499                           ;inc\CANlib.h: 332: }
  1500  000CDC  D059               	goto	l3102
  1501  000CDE                     l368:
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;inc\CANlib.h: 334: else
  1505                           ;inc\CANlib.h: 336: {
  1506                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1507  000CDE  010F               	movlb	15	; () banked
  1508  000CE0  9742               	bcf	66,3,b	;volatile
  1509                           
  1510                           ; BSR set to: 15
  1511                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1512  000CE2  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1513  000CE6  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1514  000CEA  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1515  000CEE  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1516  000CF2  0E04               	movlw	4
  1517  000CF4  D006               	goto	u3310
  1518  000CF6                     u3315:
  1519  000CF6  0100               	movlb	0	; () banked
  1520  000CF8  90D8               	bcf	status,0,c
  1521  000CFA  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1522  000CFC  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1523  000CFE  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1524  000D00  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1525  000D02                     u3310:
  1526  000D02  2EE8               	decfsz	wreg,f,c
  1527  000D04  D7F8               	goto	u3315
  1528  000D06  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1529  000D0A  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1530  000D0E  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1531  000D12  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1535  000D16  0100               	movlb	0	; () banked
  1536  000D18  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1537  000D1A  0100               	movlb	0	; () banked
  1538  000D1C  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1539  000D1E  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1540  000D20  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1541  000D22  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1545  000D24  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1549  000D28  0E07               	movlw	7
  1550  000D2A  0100               	movlb	0	; () banked
  1551  000D2C  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1552  000D2E  0100               	movlb	0	; () banked
  1553  000D30  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1554  000D32  0E00               	movlw	0
  1555  000D34  0100               	movlb	0	; () banked
  1556  000D36  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1557  000D38  0100               	movlb	0	; () banked
  1558  000D3A  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1559  000D3C  0E00               	movlw	0
  1560  000D3E  0100               	movlb	0	; () banked
  1561  000D40  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1562  000D42  0100               	movlb	0	; () banked
  1563  000D44  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1564  000D46  0E00               	movlw	0
  1565  000D48  0100               	movlb	0	; () banked
  1566  000D4A  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1567  000D4C  0100               	movlb	0	; () banked
  1568  000D4E  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1572  000D50  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  1573  000D54  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1574  000D58  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1575  000D5C  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1576  000D60  0E05               	movlw	5
  1577  000D62                     u3325:
  1578  000D62  90D8               	bcf	status,0,c
  1579  000D64  0100               	movlb	0	; () banked
  1580  000D66  3768               	rlcf	??_CANsendMessage& (0+255),f,b
  1581  000D68  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1582  000D6A  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1583  000D6C  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1584  000D6E  2EE8               	decfsz	wreg,f,c
  1585  000D70  D7F8               	goto	u3325
  1586  000D72  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1587  000D76  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1588  000D7A  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1589  000D7E  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1593  000D82  010F               	movlb	15	; () banked
  1594  000D84  5142               	movf	66,w,b	;volatile
  1595  000D86  0B1F               	andlw	31
  1596  000D88  010F               	movlb	15	; () banked
  1597  000D8A  6F42               	movwf	66,b	;volatile
  1598                           
  1599                           ; BSR set to: 15
  1600                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1601  000D8C  C06C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1602  000D90                     l3102:
  1603                           
  1604                           ;inc\CANlib.h: 347: }
  1605                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1606  000D90  0100               	movlb	0	; () banked
  1607  000D92  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  1608  000D94  D003               	goto	l375
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1612  000D96  010F               	movlb	15	; () banked
  1613  000D98  8140               	bsf	64,0,b	;volatile
  1614  000D9A  D002               	goto	l376
  1615  000D9C                     l375:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;inc\CANlib.h: 351: else
  1619                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1620  000D9C  010F               	movlb	15	; () banked
  1621  000D9E  9140               	bcf	64,0,b	;volatile
  1622  000DA0                     l376:
  1623                           
  1624                           ; BSR set to: 15
  1625                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1626  000DA0  0100               	movlb	0	; () banked
  1627  000DA2  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  1628  000DA4  D003               	goto	l377
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1632  000DA6  010F               	movlb	15	; () banked
  1633  000DA8  8340               	bsf	64,1,b	;volatile
  1634  000DAA  D002               	goto	l3108
  1635  000DAC                     l377:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;inc\CANlib.h: 355: else
  1639                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1640  000DAC  010F               	movlb	15	; () banked
  1641  000DAE  9340               	bcf	64,1,b	;volatile
  1642  000DB0                     l3108:
  1643                           
  1644                           ; BSR set to: 15
  1645                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1646  000DB0  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  1647  000DB4  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1648  000DB8  50DF               	movf	indf2,w,c
  1649  000DBA  010F               	movlb	15	; () banked
  1650  000DBC  6F46               	movwf	70,b	;volatile
  1651                           
  1652                           ; BSR set to: 15
  1653                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1654  000DBE  0100               	movlb	0	; () banked
  1655  000DC0  EE20 F001          	lfsr	2,1
  1656  000DC4  5164               	movf	CANsendMessage@data& (0+255),w,b
  1657  000DC6  26D9               	addwf	fsr2l,f,c
  1658  000DC8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1659  000DCA  22DA               	addwfc	fsr2h,f,c
  1660  000DCC  50DF               	movf	indf2,w,c
  1661  000DCE  010F               	movlb	15	; () banked
  1662  000DD0  6F47               	movwf	71,b	;volatile
  1663                           
  1664                           ; BSR set to: 15
  1665                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1666  000DD2  0100               	movlb	0	; () banked
  1667  000DD4  EE20 F002          	lfsr	2,2
  1668  000DD8  5164               	movf	CANsendMessage@data& (0+255),w,b
  1669  000DDA  26D9               	addwf	fsr2l,f,c
  1670  000DDC  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1671  000DDE  22DA               	addwfc	fsr2h,f,c
  1672  000DE0  50DF               	movf	indf2,w,c
  1673  000DE2  010F               	movlb	15	; () banked
  1674  000DE4  6F48               	movwf	72,b	;volatile
  1675                           
  1676                           ; BSR set to: 15
  1677                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1678  000DE6  0100               	movlb	0	; () banked
  1679  000DE8  EE20 F003          	lfsr	2,3
  1680  000DEC  5164               	movf	CANsendMessage@data& (0+255),w,b
  1681  000DEE  26D9               	addwf	fsr2l,f,c
  1682  000DF0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1683  000DF2  22DA               	addwfc	fsr2h,f,c
  1684  000DF4  50DF               	movf	indf2,w,c
  1685  000DF6  010F               	movlb	15	; () banked
  1686  000DF8  6F49               	movwf	73,b	;volatile
  1687                           
  1688                           ; BSR set to: 15
  1689                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1690  000DFA  0100               	movlb	0	; () banked
  1691  000DFC  EE20 F004          	lfsr	2,4
  1692  000E00  5164               	movf	CANsendMessage@data& (0+255),w,b
  1693  000E02  26D9               	addwf	fsr2l,f,c
  1694  000E04  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1695  000E06  22DA               	addwfc	fsr2h,f,c
  1696  000E08  50DF               	movf	indf2,w,c
  1697  000E0A  010F               	movlb	15	; () banked
  1698  000E0C  6F4A               	movwf	74,b	;volatile
  1699                           
  1700                           ; BSR set to: 15
  1701                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1702  000E0E  0100               	movlb	0	; () banked
  1703  000E10  EE20 F005          	lfsr	2,5
  1704  000E14  5164               	movf	CANsendMessage@data& (0+255),w,b
  1705  000E16  26D9               	addwf	fsr2l,f,c
  1706  000E18  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1707  000E1A  22DA               	addwfc	fsr2h,f,c
  1708  000E1C  50DF               	movf	indf2,w,c
  1709  000E1E  010F               	movlb	15	; () banked
  1710  000E20  6F4B               	movwf	75,b	;volatile
  1711                           
  1712                           ; BSR set to: 15
  1713                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1714  000E22  0100               	movlb	0	; () banked
  1715  000E24  EE20 F006          	lfsr	2,6
  1716  000E28  5164               	movf	CANsendMessage@data& (0+255),w,b
  1717  000E2A  26D9               	addwf	fsr2l,f,c
  1718  000E2C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1719  000E2E  22DA               	addwfc	fsr2h,f,c
  1720  000E30  50DF               	movf	indf2,w,c
  1721  000E32  010F               	movlb	15	; () banked
  1722  000E34  6F4C               	movwf	76,b	;volatile
  1723                           
  1724                           ; BSR set to: 15
  1725                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1726  000E36  0100               	movlb	0	; () banked
  1727  000E38  EE20 F007          	lfsr	2,7
  1728  000E3C  5164               	movf	CANsendMessage@data& (0+255),w,b
  1729  000E3E  26D9               	addwf	fsr2l,f,c
  1730  000E40  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1731  000E42  22DA               	addwfc	fsr2h,f,c
  1732  000E44  50DF               	movf	indf2,w,c
  1733  000E46  010F               	movlb	15	; () banked
  1734  000E48  6F4D               	movwf	77,b	;volatile
  1735                           
  1736                           ; BSR set to: 15
  1737                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1738  000E4A  010F               	movlb	15	; () banked
  1739  000E4C  8740               	bsf	64,3,b	;volatile
  1740                           
  1741                           ; BSR set to: 15
  1742                           ;inc\CANlib.h: 368: return;
  1743  000E4E  0012               	return	
  1744  000E50                     l365:
  1745                           
  1746                           ; BSR set to: 15
  1747                           ;inc\CANlib.h: 369: }
  1748                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1749  000E50  010F               	movlb	15	; () banked
  1750  000E52  B730               	btfsc	48,3,b	;volatile
  1751  000E54  D13F               	goto	l380
  1752                           
  1753                           ; BSR set to: 15
  1754                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1755  000E56  C066  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1756                           
  1757                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1758  000E5A  0100               	movlb	0	; () banked
  1759  000E5C  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  1760  000E5E  D003               	goto	l381
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1764  000E60  010F               	movlb	15	; () banked
  1765  000E62  8D35               	bsf	53,6,b	;volatile
  1766  000E64  D002               	goto	l382
  1767  000E66                     l381:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;inc\CANlib.h: 378: else
  1771                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1772  000E66  010F               	movlb	15	; () banked
  1773  000E68  9D35               	bcf	53,6,b	;volatile
  1774  000E6A                     l382:
  1775                           
  1776                           ; BSR set to: 15
  1777                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1778  000E6A  0100               	movlb	0	; () banked
  1779  000E6C  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  1780  000E6E  D079               	goto	l383
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;inc\CANlib.h: 382: {
  1784                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1785  000E70  0100               	movlb	0	; () banked
  1786  000E72  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  1787  000E74  0100               	movlb	0	; () banked
  1788  000E76  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1789  000E78  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1790  000E7A  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1791  000E7C  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1795  000E7E  C06C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1799  000E82  0E00               	movlw	0
  1800  000E84  0100               	movlb	0	; () banked
  1801  000E86  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1802  000E88  0100               	movlb	0	; () banked
  1803  000E8A  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1804  000E8C  0EFF               	movlw	255
  1805  000E8E  0100               	movlb	0	; () banked
  1806  000E90  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1807  000E92  0100               	movlb	0	; () banked
  1808  000E94  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1809  000E96  0E00               	movlw	0
  1810  000E98  0100               	movlb	0	; () banked
  1811  000E9A  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1812  000E9C  0100               	movlb	0	; () banked
  1813  000E9E  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1814  000EA0  0E00               	movlw	0
  1815  000EA2  0100               	movlb	0	; () banked
  1816  000EA4  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1817  000EA6  0100               	movlb	0	; () banked
  1818  000EA8  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1822  000EAA  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  1823  000EAE  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1824  000EB2  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1825  000EB6  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1826  000EBA  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
  1827  000EBE  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1828  000EC2  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1829  000EC6  0100               	movlb	0	; () banked
  1830  000EC8  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
  1831  000ECA  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1832  000ECE  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1833  000ED2  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1834  000ED6  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1838  000EDA  C06C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1842  000EDE  0E00               	movlw	0
  1843  000EE0  010F               	movlb	15	; () banked
  1844  000EE2  6F32               	movwf	50,b	;volatile
  1845                           
  1846                           ; BSR set to: 15
  1847                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1848  000EE4  010F               	movlb	15	; () banked
  1849  000EE6  8732               	bsf	50,3,b	;volatile
  1850                           
  1851                           ; BSR set to: 15
  1852                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1853  000EE8  0100               	movlb	0	; () banked
  1854  000EEA  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1855  000EEC  D002               	goto	l384
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1859  000EEE  010F               	movlb	15	; () banked
  1860  000EF0  8132               	bsf	50,0,b	;volatile
  1861  000EF2                     l384:
  1862                           
  1863                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1864  000EF2  0100               	movlb	0	; () banked
  1865  000EF4  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1866  000EF6  D002               	goto	l385
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1870  000EF8  010F               	movlb	15	; () banked
  1871  000EFA  8332               	bsf	50,1,b	;volatile
  1872  000EFC                     l385:
  1873                           
  1874                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1875  000EFC  0100               	movlb	0	; () banked
  1876  000EFE  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1877  000F00  D002               	goto	l386
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1881  000F02  010F               	movlb	15	; () banked
  1882  000F04  8B32               	bsf	50,5,b	;volatile
  1883  000F06                     l386:
  1884                           
  1885                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1886  000F06  0100               	movlb	0	; () banked
  1887  000F08  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1888  000F0A  D002               	goto	l387
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1892  000F0C  010F               	movlb	15	; () banked
  1893  000F0E  8D32               	bsf	50,6,b	;volatile
  1894  000F10                     l387:
  1895                           
  1896                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1897  000F10  0100               	movlb	0	; () banked
  1898  000F12  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1899  000F14  D002               	goto	l3158
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1903  000F16  010F               	movlb	15	; () banked
  1904  000F18  8F32               	bsf	50,7,b	;volatile
  1905  000F1A                     l3158:
  1906                           
  1907                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1908  000F1A  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1909  000F1E  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1910  000F22  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1911  000F26  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1912  000F2A  0E16               	movlw	22
  1913  000F2C  D006               	goto	u3430
  1914  000F2E                     u3435:
  1915  000F2E  0100               	movlb	0	; () banked
  1916  000F30  90D8               	bcf	status,0,c
  1917  000F32  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1918  000F34  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1919  000F36  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1920  000F38  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1921  000F3A                     u3430:
  1922  000F3A  2EE8               	decfsz	wreg,f,c
  1923  000F3C  D7F8               	goto	u3435
  1924  000F3E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1925  000F42  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1926  000F46  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1927  000F4A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1931  000F4E  0100               	movlb	0	; () banked
  1932  000F50  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1933  000F52  0100               	movlb	0	; () banked
  1934  000F54  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1935  000F56  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1936  000F58  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1937  000F5A  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1941  000F5C  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1942                           
  1943                           ;inc\CANlib.h: 407: }
  1944  000F60  D059               	goto	l3178
  1945  000F62                     l383:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;inc\CANlib.h: 409: else
  1949                           ;inc\CANlib.h: 411: {
  1950                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1951  000F62  010F               	movlb	15	; () banked
  1952  000F64  9732               	bcf	50,3,b	;volatile
  1953                           
  1954                           ; BSR set to: 15
  1955                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1956  000F66  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  1957  000F6A  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1958  000F6E  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1959  000F72  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1960  000F76  0E04               	movlw	4
  1961  000F78  D006               	goto	u3440
  1962  000F7A                     u3445:
  1963  000F7A  0100               	movlb	0	; () banked
  1964  000F7C  90D8               	bcf	status,0,c
  1965  000F7E  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1966  000F80  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1967  000F82  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1968  000F84  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  1969  000F86                     u3440:
  1970  000F86  2EE8               	decfsz	wreg,f,c
  1971  000F88  D7F8               	goto	u3445
  1972  000F8A  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  1973  000F8E  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1974  000F92  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1975  000F96  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1979  000F9A  0100               	movlb	0	; () banked
  1980  000F9C  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  1981  000F9E  0100               	movlb	0	; () banked
  1982  000FA0  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1983  000FA2  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1984  000FA4  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1985  000FA6  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1989  000FA8  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1993  000FAC  0E07               	movlw	7
  1994  000FAE  0100               	movlb	0	; () banked
  1995  000FB0  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  1996  000FB2  0100               	movlb	0	; () banked
  1997  000FB4  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  1998  000FB6  0E00               	movlw	0
  1999  000FB8  0100               	movlb	0	; () banked
  2000  000FBA  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2001  000FBC  0100               	movlb	0	; () banked
  2002  000FBE  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2003  000FC0  0E00               	movlw	0
  2004  000FC2  0100               	movlb	0	; () banked
  2005  000FC4  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2006  000FC6  0100               	movlb	0	; () banked
  2007  000FC8  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2008  000FCA  0E00               	movlw	0
  2009  000FCC  0100               	movlb	0	; () banked
  2010  000FCE  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2011  000FD0  0100               	movlb	0	; () banked
  2012  000FD2  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2016  000FD4  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  2017  000FD8  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2018  000FDC  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2019  000FE0  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2020  000FE4  0E05               	movlw	5
  2021  000FE6                     u3455:
  2022  000FE6  90D8               	bcf	status,0,c
  2023  000FE8  0100               	movlb	0	; () banked
  2024  000FEA  3768               	rlcf	??_CANsendMessage& (0+255),f,b
  2025  000FEC  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2026  000FEE  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2027  000FF0  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2028  000FF2  2EE8               	decfsz	wreg,f,c
  2029  000FF4  D7F8               	goto	u3455
  2030  000FF6  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2031  000FFA  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2032  000FFE  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2033  001002  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2037  001006  010F               	movlb	15	; () banked
  2038  001008  5132               	movf	50,w,b	;volatile
  2039  00100A  0B1F               	andlw	31
  2040  00100C  010F               	movlb	15	; () banked
  2041  00100E  6F32               	movwf	50,b	;volatile
  2042                           
  2043                           ; BSR set to: 15
  2044                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2045  001010  C06C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2046  001014                     l3178:
  2047                           
  2048                           ;inc\CANlib.h: 422: }
  2049                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2050  001014  0100               	movlb	0	; () banked
  2051  001016  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  2052  001018  D003               	goto	l390
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2056  00101A  010F               	movlb	15	; () banked
  2057  00101C  8130               	bsf	48,0,b	;volatile
  2058  00101E  D002               	goto	l391
  2059  001020                     l390:
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;inc\CANlib.h: 426: else
  2063                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2064  001020  010F               	movlb	15	; () banked
  2065  001022  9130               	bcf	48,0,b	;volatile
  2066  001024                     l391:
  2067                           
  2068                           ; BSR set to: 15
  2069                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2070  001024  0100               	movlb	0	; () banked
  2071  001026  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  2072  001028  D003               	goto	l392
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2076  00102A  010F               	movlb	15	; () banked
  2077  00102C  8330               	bsf	48,1,b	;volatile
  2078  00102E  D002               	goto	l3184
  2079  001030                     l392:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;inc\CANlib.h: 430: else
  2083                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2084  001030  010F               	movlb	15	; () banked
  2085  001032  9330               	bcf	48,1,b	;volatile
  2086  001034                     l3184:
  2087                           
  2088                           ; BSR set to: 15
  2089                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2090  001034  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  2091  001038  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2092  00103C  50DF               	movf	indf2,w,c
  2093  00103E  010F               	movlb	15	; () banked
  2094  001040  6F36               	movwf	54,b	;volatile
  2095                           
  2096                           ; BSR set to: 15
  2097                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2098  001042  0100               	movlb	0	; () banked
  2099  001044  EE20 F001          	lfsr	2,1
  2100  001048  5164               	movf	CANsendMessage@data& (0+255),w,b
  2101  00104A  26D9               	addwf	fsr2l,f,c
  2102  00104C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2103  00104E  22DA               	addwfc	fsr2h,f,c
  2104  001050  50DF               	movf	indf2,w,c
  2105  001052  010F               	movlb	15	; () banked
  2106  001054  6F37               	movwf	55,b	;volatile
  2107                           
  2108                           ; BSR set to: 15
  2109                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2110  001056  0100               	movlb	0	; () banked
  2111  001058  EE20 F002          	lfsr	2,2
  2112  00105C  5164               	movf	CANsendMessage@data& (0+255),w,b
  2113  00105E  26D9               	addwf	fsr2l,f,c
  2114  001060  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2115  001062  22DA               	addwfc	fsr2h,f,c
  2116  001064  50DF               	movf	indf2,w,c
  2117  001066  010F               	movlb	15	; () banked
  2118  001068  6F38               	movwf	56,b	;volatile
  2119                           
  2120                           ; BSR set to: 15
  2121                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2122  00106A  0100               	movlb	0	; () banked
  2123  00106C  EE20 F003          	lfsr	2,3
  2124  001070  5164               	movf	CANsendMessage@data& (0+255),w,b
  2125  001072  26D9               	addwf	fsr2l,f,c
  2126  001074  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2127  001076  22DA               	addwfc	fsr2h,f,c
  2128  001078  50DF               	movf	indf2,w,c
  2129  00107A  010F               	movlb	15	; () banked
  2130  00107C  6F39               	movwf	57,b	;volatile
  2131                           
  2132                           ; BSR set to: 15
  2133                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2134  00107E  0100               	movlb	0	; () banked
  2135  001080  EE20 F004          	lfsr	2,4
  2136  001084  5164               	movf	CANsendMessage@data& (0+255),w,b
  2137  001086  26D9               	addwf	fsr2l,f,c
  2138  001088  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2139  00108A  22DA               	addwfc	fsr2h,f,c
  2140  00108C  50DF               	movf	indf2,w,c
  2141  00108E  010F               	movlb	15	; () banked
  2142  001090  6F3A               	movwf	58,b	;volatile
  2143                           
  2144                           ; BSR set to: 15
  2145                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2146  001092  0100               	movlb	0	; () banked
  2147  001094  EE20 F005          	lfsr	2,5
  2148  001098  5164               	movf	CANsendMessage@data& (0+255),w,b
  2149  00109A  26D9               	addwf	fsr2l,f,c
  2150  00109C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2151  00109E  22DA               	addwfc	fsr2h,f,c
  2152  0010A0  50DF               	movf	indf2,w,c
  2153  0010A2  010F               	movlb	15	; () banked
  2154  0010A4  6F3B               	movwf	59,b	;volatile
  2155                           
  2156                           ; BSR set to: 15
  2157                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2158  0010A6  0100               	movlb	0	; () banked
  2159  0010A8  EE20 F006          	lfsr	2,6
  2160  0010AC  5164               	movf	CANsendMessage@data& (0+255),w,b
  2161  0010AE  26D9               	addwf	fsr2l,f,c
  2162  0010B0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2163  0010B2  22DA               	addwfc	fsr2h,f,c
  2164  0010B4  50DF               	movf	indf2,w,c
  2165  0010B6  010F               	movlb	15	; () banked
  2166  0010B8  6F3C               	movwf	60,b	;volatile
  2167                           
  2168                           ; BSR set to: 15
  2169                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2170  0010BA  0100               	movlb	0	; () banked
  2171  0010BC  EE20 F007          	lfsr	2,7
  2172  0010C0  5164               	movf	CANsendMessage@data& (0+255),w,b
  2173  0010C2  26D9               	addwf	fsr2l,f,c
  2174  0010C4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2175  0010C6  22DA               	addwfc	fsr2h,f,c
  2176  0010C8  50DF               	movf	indf2,w,c
  2177  0010CA  010F               	movlb	15	; () banked
  2178  0010CC  6F3D               	movwf	61,b	;volatile
  2179                           
  2180                           ; BSR set to: 15
  2181                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2182  0010CE  010F               	movlb	15	; () banked
  2183  0010D0  8730               	bsf	48,3,b	;volatile
  2184                           
  2185                           ; BSR set to: 15
  2186                           ;inc\CANlib.h: 444: return;
  2187  0010D2  0012               	return	
  2188  0010D4                     l380:
  2189                           
  2190                           ; BSR set to: 15
  2191                           ;inc\CANlib.h: 445: }
  2192                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2193  0010D4  010F               	movlb	15	; () banked
  2194  0010D6  B720               	btfsc	32,3,b	;volatile
  2195  0010D8  0012               	return	
  2196                           
  2197                           ; BSR set to: 15
  2198                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2199  0010DA  C066  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2200                           
  2201                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2202  0010DE  0100               	movlb	0	; () banked
  2203  0010E0  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
  2204  0010E2  D003               	goto	l395
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2208  0010E4  010F               	movlb	15	; () banked
  2209  0010E6  8D25               	bsf	37,6,b	;volatile
  2210  0010E8  D002               	goto	l396
  2211  0010EA                     l395:
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;inc\CANlib.h: 454: else
  2215                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2216  0010EA  010F               	movlb	15	; () banked
  2217  0010EC  9D25               	bcf	37,6,b	;volatile
  2218  0010EE                     l396:
  2219                           
  2220                           ; BSR set to: 15
  2221                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2222  0010EE  0100               	movlb	0	; () banked
  2223  0010F0  A767               	btfss	CANsendMessage@flags& (0+255),3,b
  2224  0010F2  D079               	goto	l397
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;inc\CANlib.h: 458: {
  2228                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2229  0010F4  0100               	movlb	0	; () banked
  2230  0010F6  5160               	movf	CANsendMessage@identifier& (0+255),w,b
  2231  0010F8  0100               	movlb	0	; () banked
  2232  0010FA  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2233  0010FC  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2234  0010FE  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2235  001100  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2239  001102  C06C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2243  001106  0E00               	movlw	0
  2244  001108  0100               	movlb	0	; () banked
  2245  00110A  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  2246  00110C  0100               	movlb	0	; () banked
  2247  00110E  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2248  001110  0EFF               	movlw	255
  2249  001112  0100               	movlb	0	; () banked
  2250  001114  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2251  001116  0100               	movlb	0	; () banked
  2252  001118  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2253  00111A  0E00               	movlw	0
  2254  00111C  0100               	movlb	0	; () banked
  2255  00111E  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2256  001120  0100               	movlb	0	; () banked
  2257  001122  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2258  001124  0E00               	movlw	0
  2259  001126  0100               	movlb	0	; () banked
  2260  001128  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2261  00112A  0100               	movlb	0	; () banked
  2262  00112C  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2266  00112E  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  2267  001132  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2268  001136  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2269  00113A  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2270  00113E  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
  2271  001142  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2272  001146  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2273  00114A  0100               	movlb	0	; () banked
  2274  00114C  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
  2275  00114E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2276  001152  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2277  001156  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2278  00115A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2282  00115E  C06C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2286  001162  0E00               	movlw	0
  2287  001164  010F               	movlb	15	; () banked
  2288  001166  6F22               	movwf	34,b	;volatile
  2289                           
  2290                           ; BSR set to: 15
  2291                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2292  001168  010F               	movlb	15	; () banked
  2293  00116A  8722               	bsf	34,3,b	;volatile
  2294                           
  2295                           ; BSR set to: 15
  2296                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2297  00116C  0100               	movlb	0	; () banked
  2298  00116E  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2299  001170  D002               	goto	l398
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2303  001172  010F               	movlb	15	; () banked
  2304  001174  8122               	bsf	34,0,b	;volatile
  2305  001176                     l398:
  2306                           
  2307                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2308  001176  0100               	movlb	0	; () banked
  2309  001178  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2310  00117A  D002               	goto	l399
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2314  00117C  010F               	movlb	15	; () banked
  2315  00117E  8322               	bsf	34,1,b	;volatile
  2316  001180                     l399:
  2317                           
  2318                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2319  001180  0100               	movlb	0	; () banked
  2320  001182  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2321  001184  D002               	goto	l400
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2325  001186  010F               	movlb	15	; () banked
  2326  001188  8B22               	bsf	34,5,b	;volatile
  2327  00118A                     l400:
  2328                           
  2329                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2330  00118A  0100               	movlb	0	; () banked
  2331  00118C  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2332  00118E  D002               	goto	l401
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2336  001190  010F               	movlb	15	; () banked
  2337  001192  8D22               	bsf	34,6,b	;volatile
  2338  001194                     l401:
  2339                           
  2340                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2341  001194  0100               	movlb	0	; () banked
  2342  001196  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2343  001198  D002               	goto	l3234
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2347  00119A  010F               	movlb	15	; () banked
  2348  00119C  8F22               	bsf	34,7,b	;volatile
  2349  00119E                     l3234:
  2350                           
  2351                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2352  00119E  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  2353  0011A2  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2354  0011A6  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2355  0011AA  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2356  0011AE  0E16               	movlw	22
  2357  0011B0  D006               	goto	u3560
  2358  0011B2                     u3565:
  2359  0011B2  0100               	movlb	0	; () banked
  2360  0011B4  90D8               	bcf	status,0,c
  2361  0011B6  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2362  0011B8  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2363  0011BA  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2364  0011BC  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  2365  0011BE                     u3560:
  2366  0011BE  2EE8               	decfsz	wreg,f,c
  2367  0011C0  D7F8               	goto	u3565
  2368  0011C2  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2369  0011C6  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2370  0011CA  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2371  0011CE  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2375  0011D2  0100               	movlb	0	; () banked
  2376  0011D4  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  2377  0011D6  0100               	movlb	0	; () banked
  2378  0011D8  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2379  0011DA  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2380  0011DC  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2381  0011DE  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2385  0011E0  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2386                           
  2387                           ;inc\CANlib.h: 483: }
  2388  0011E4  D059               	goto	l3254
  2389  0011E6                     l397:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;inc\CANlib.h: 485: else
  2393                           ;inc\CANlib.h: 487: {
  2394                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2395  0011E6  010F               	movlb	15	; () banked
  2396  0011E8  9722               	bcf	34,3,b	;volatile
  2397                           
  2398                           ; BSR set to: 15
  2399                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2400  0011EA  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
  2401  0011EE  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2402  0011F2  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2403  0011F6  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2404  0011FA  0E04               	movlw	4
  2405  0011FC  D006               	goto	u3570
  2406  0011FE                     u3575:
  2407  0011FE  0100               	movlb	0	; () banked
  2408  001200  90D8               	bcf	status,0,c
  2409  001202  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2410  001204  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2411  001206  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2412  001208  3368               	rrcf	??_CANsendMessage& (0+255),f,b
  2413  00120A                     u3570:
  2414  00120A  2EE8               	decfsz	wreg,f,c
  2415  00120C  D7F8               	goto	u3575
  2416  00120E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2417  001212  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2418  001216  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2419  00121A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2423  00121E  0100               	movlb	0	; () banked
  2424  001220  516C               	movf	CANsendMessage@tamp& (0+255),w,b
  2425  001222  0100               	movlb	0	; () banked
  2426  001224  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2427  001226  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2428  001228  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2429  00122A  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2433  00122C  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2437  001230  0E07               	movlw	7
  2438  001232  0100               	movlb	0	; () banked
  2439  001234  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
  2440  001236  0100               	movlb	0	; () banked
  2441  001238  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
  2442  00123A  0E00               	movlw	0
  2443  00123C  0100               	movlb	0	; () banked
  2444  00123E  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2445  001240  0100               	movlb	0	; () banked
  2446  001242  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2447  001244  0E00               	movlw	0
  2448  001246  0100               	movlb	0	; () banked
  2449  001248  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2450  00124A  0100               	movlb	0	; () banked
  2451  00124C  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2452  00124E  0E00               	movlw	0
  2453  001250  0100               	movlb	0	; () banked
  2454  001252  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2455  001254  0100               	movlb	0	; () banked
  2456  001256  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2460  001258  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
  2461  00125C  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2462  001260  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2463  001264  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2464  001268  0E05               	movlw	5
  2465  00126A                     u3585:
  2466  00126A  90D8               	bcf	status,0,c
  2467  00126C  0100               	movlb	0	; () banked
  2468  00126E  3768               	rlcf	??_CANsendMessage& (0+255),f,b
  2469  001270  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2470  001272  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2471  001274  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2472  001276  2EE8               	decfsz	wreg,f,c
  2473  001278  D7F8               	goto	u3585
  2474  00127A  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
  2475  00127E  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2476  001282  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2477  001286  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2481  00128A  010F               	movlb	15	; () banked
  2482  00128C  5122               	movf	34,w,b	;volatile
  2483  00128E  0B1F               	andlw	31
  2484  001290  010F               	movlb	15	; () banked
  2485  001292  6F22               	movwf	34,b	;volatile
  2486                           
  2487                           ; BSR set to: 15
  2488                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2489  001294  C06C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2490  001298                     l3254:
  2491                           
  2492                           ;inc\CANlib.h: 498: }
  2493                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2494  001298  0100               	movlb	0	; () banked
  2495  00129A  A167               	btfss	CANsendMessage@flags& (0+255),0,b
  2496  00129C  D003               	goto	l404
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2500  00129E  010F               	movlb	15	; () banked
  2501  0012A0  8120               	bsf	32,0,b	;volatile
  2502  0012A2  D002               	goto	l405
  2503  0012A4                     l404:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;inc\CANlib.h: 502: else
  2507                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2508  0012A4  010F               	movlb	15	; () banked
  2509  0012A6  9120               	bcf	32,0,b	;volatile
  2510  0012A8                     l405:
  2511                           
  2512                           ; BSR set to: 15
  2513                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2514  0012A8  0100               	movlb	0	; () banked
  2515  0012AA  A367               	btfss	CANsendMessage@flags& (0+255),1,b
  2516  0012AC  D003               	goto	l406
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2520  0012AE  010F               	movlb	15	; () banked
  2521  0012B0  8320               	bsf	32,1,b	;volatile
  2522  0012B2  D002               	goto	l3260
  2523  0012B4                     l406:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;inc\CANlib.h: 506: else
  2527                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2528  0012B4  010F               	movlb	15	; () banked
  2529  0012B6  9320               	bcf	32,1,b	;volatile
  2530  0012B8                     l3260:
  2531                           
  2532                           ; BSR set to: 15
  2533                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2534  0012B8  C064  FFD9         	movff	CANsendMessage@data,fsr2l
  2535  0012BC  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2536  0012C0  50DF               	movf	indf2,w,c
  2537  0012C2  010F               	movlb	15	; () banked
  2538  0012C4  6F26               	movwf	38,b	;volatile
  2539                           
  2540                           ; BSR set to: 15
  2541                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2542  0012C6  0100               	movlb	0	; () banked
  2543  0012C8  EE20 F001          	lfsr	2,1
  2544  0012CC  5164               	movf	CANsendMessage@data& (0+255),w,b
  2545  0012CE  26D9               	addwf	fsr2l,f,c
  2546  0012D0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2547  0012D2  22DA               	addwfc	fsr2h,f,c
  2548  0012D4  50DF               	movf	indf2,w,c
  2549  0012D6  010F               	movlb	15	; () banked
  2550  0012D8  6F27               	movwf	39,b	;volatile
  2551                           
  2552                           ; BSR set to: 15
  2553                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2554  0012DA  0100               	movlb	0	; () banked
  2555  0012DC  EE20 F002          	lfsr	2,2
  2556  0012E0  5164               	movf	CANsendMessage@data& (0+255),w,b
  2557  0012E2  26D9               	addwf	fsr2l,f,c
  2558  0012E4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2559  0012E6  22DA               	addwfc	fsr2h,f,c
  2560  0012E8  50DF               	movf	indf2,w,c
  2561  0012EA  010F               	movlb	15	; () banked
  2562  0012EC  6F28               	movwf	40,b	;volatile
  2563                           
  2564                           ; BSR set to: 15
  2565                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2566  0012EE  0100               	movlb	0	; () banked
  2567  0012F0  EE20 F003          	lfsr	2,3
  2568  0012F4  5164               	movf	CANsendMessage@data& (0+255),w,b
  2569  0012F6  26D9               	addwf	fsr2l,f,c
  2570  0012F8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2571  0012FA  22DA               	addwfc	fsr2h,f,c
  2572  0012FC  50DF               	movf	indf2,w,c
  2573  0012FE  010F               	movlb	15	; () banked
  2574  001300  6F29               	movwf	41,b	;volatile
  2575                           
  2576                           ; BSR set to: 15
  2577                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2578  001302  0100               	movlb	0	; () banked
  2579  001304  EE20 F004          	lfsr	2,4
  2580  001308  5164               	movf	CANsendMessage@data& (0+255),w,b
  2581  00130A  26D9               	addwf	fsr2l,f,c
  2582  00130C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2583  00130E  22DA               	addwfc	fsr2h,f,c
  2584  001310  50DF               	movf	indf2,w,c
  2585  001312  010F               	movlb	15	; () banked
  2586  001314  6F2A               	movwf	42,b	;volatile
  2587                           
  2588                           ; BSR set to: 15
  2589                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2590  001316  0100               	movlb	0	; () banked
  2591  001318  EE20 F005          	lfsr	2,5
  2592  00131C  5164               	movf	CANsendMessage@data& (0+255),w,b
  2593  00131E  26D9               	addwf	fsr2l,f,c
  2594  001320  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2595  001322  22DA               	addwfc	fsr2h,f,c
  2596  001324  50DF               	movf	indf2,w,c
  2597  001326  010F               	movlb	15	; () banked
  2598  001328  6F2B               	movwf	43,b	;volatile
  2599                           
  2600                           ; BSR set to: 15
  2601                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2602  00132A  0100               	movlb	0	; () banked
  2603  00132C  EE20 F006          	lfsr	2,6
  2604  001330  5164               	movf	CANsendMessage@data& (0+255),w,b
  2605  001332  26D9               	addwf	fsr2l,f,c
  2606  001334  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2607  001336  22DA               	addwfc	fsr2h,f,c
  2608  001338  50DF               	movf	indf2,w,c
  2609  00133A  010F               	movlb	15	; () banked
  2610  00133C  6F2C               	movwf	44,b	;volatile
  2611                           
  2612                           ; BSR set to: 15
  2613                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2614  00133E  0100               	movlb	0	; () banked
  2615  001340  EE20 F007          	lfsr	2,7
  2616  001344  5164               	movf	CANsendMessage@data& (0+255),w,b
  2617  001346  26D9               	addwf	fsr2l,f,c
  2618  001348  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2619  00134A  22DA               	addwfc	fsr2h,f,c
  2620  00134C  50DF               	movf	indf2,w,c
  2621  00134E  010F               	movlb	15	; () banked
  2622  001350  6F2D               	movwf	45,b	;volatile
  2623                           
  2624                           ; BSR set to: 15
  2625                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2626  001352  010F               	movlb	15	; () banked
  2627  001354  8720               	bsf	32,3,b	;volatile
  2628                           
  2629                           ; BSR set to: 15
  2630                           ;inc\CANlib.h: 520: return;
  2631  001356  0012               	return	
  2632  001358                     __end_of_CANsendMessage:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           prodh	equ	0xFF4
  2639                           prodl	equ	0xFF3
  2640                           postinc0	equ	0xFEE
  2641                           wreg	equ	0xFE8
  2642                           postdec1	equ	0xFE5
  2643                           fsr1l	equ	0xFE1
  2644                           indf2	equ	0xFDF
  2645                           fsr2h	equ	0xFDA
  2646                           fsr2l	equ	0xFD9
  2647                           status	equ	0xFD8
  2648                           
  2649 ;; *************** function _CANisTxReady *****************
  2650 ;; Defined at:
  2651 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      unsigned char 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2665 ;;      Params:         0       0       0       0
  2666 ;;      Locals:         0       1       0       0
  2667 ;;      Temps:          0       0       0       0
  2668 ;;      Totals:         0       1       0       0
  2669 ;;Total ram usage:        1 bytes
  2670 ;; Hardware stack levels used:    1
  2671 ;; Hardware stack levels required when called:    3
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_status_ok
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text3
  2680  002650                     __ptext3:
  2681                           	opt stack 0
  2682  002650                     _CANisTxReady:
  2683                           	opt stack 26
  2684                           
  2685                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2686                           
  2687                           ; BSR set to: 15
  2688                           ;incstack = 0
  2689  002650  0E01               	movlw	1
  2690  002652  0100               	movlb	0	; () banked
  2691  002654  6F60               	movwf	_CANisTxReady$2968& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694  002656  010F               	movlb	15	; () banked
  2695  002658  A740               	btfss	64,3,b	;volatile
  2696  00265A  D009               	goto	l558
  2697                           
  2698                           ; BSR set to: 15
  2699  00265C  010F               	movlb	15	; () banked
  2700  00265E  A730               	btfss	48,3,b	;volatile
  2701  002660  D006               	goto	l558
  2702                           
  2703                           ; BSR set to: 15
  2704  002662  010F               	movlb	15	; () banked
  2705  002664  A720               	btfss	32,3,b	;volatile
  2706  002666  D003               	goto	l558
  2707                           
  2708                           ; BSR set to: 15
  2709  002668  0E00               	movlw	0
  2710  00266A  0100               	movlb	0	; () banked
  2711  00266C  6F60               	movwf	_CANisTxReady$2968& (0+255),b
  2712  00266E                     l558:
  2713  00266E  0100               	movlb	0	; () banked
  2714  002670  5160               	movf	_CANisTxReady$2968& (0+255),w,b
  2715  002672  0012               	return	
  2716  002674                     __end_of_CANisTxReady:
  2717                           	opt stack 0
  2718                           tblptru	equ	0xFF8
  2719                           tblptrh	equ	0xFF7
  2720                           tblptrl	equ	0xFF6
  2721                           tablat	equ	0xFF5
  2722                           prodh	equ	0xFF4
  2723                           prodl	equ	0xFF3
  2724                           postinc0	equ	0xFEE
  2725                           wreg	equ	0xFE8
  2726                           postdec1	equ	0xFE5
  2727                           fsr1l	equ	0xFE1
  2728                           indf2	equ	0xFDF
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _board_initialization *****************
  2734 ;; Defined at:
  2735 ;;		line 230 in file "ABS_Code.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;		None               void
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2749 ;;      Params:         0       0       0       0
  2750 ;;      Locals:         0       0       0       0
  2751 ;;      Temps:          0       0       0       0
  2752 ;;      Totals:         0       0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    5
  2756 ;; This function calls:
  2757 ;;		_CANInitialize
  2758 ;;		_delay_ms
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text4
  2765  0022E0                     __ptext4:
  2766                           	opt stack 0
  2767  0022E0                     _board_initialization:
  2768                           	opt stack 25
  2769                           
  2770                           ;ABS_Code.c: 232: TMR0H = 0xFF;
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;incstack = 0
  2774  0022E0  68D7               	setf	4055,c	;volatile
  2775                           
  2776                           ;ABS_Code.c: 233: TMR0L = 0xFE;
  2777  0022E2  0EFE               	movlw	254
  2778  0022E4  6ED6               	movwf	4054,c	;volatile
  2779                           
  2780                           ;ABS_Code.c: 234: T0CONbits.TMR0ON = 1;
  2781  0022E6  8ED5               	bsf	4053,7,c	;volatile
  2782                           
  2783                           ;ABS_Code.c: 237: LATA = 0x00;
  2784  0022E8  0E00               	movlw	0
  2785  0022EA  6E89               	movwf	3977,c	;volatile
  2786                           
  2787                           ;ABS_Code.c: 238: TRISA = 0xFF;
  2788  0022EC  6892               	setf	3986,c	;volatile
  2789                           
  2790                           ;ABS_Code.c: 239: LATB = 0x00;
  2791  0022EE  0E00               	movlw	0
  2792  0022F0  6E8A               	movwf	3978,c	;volatile
  2793                           
  2794                           ;ABS_Code.c: 240: TRISB = 0b11111110;
  2795  0022F2  0EFE               	movlw	254
  2796  0022F4  6E93               	movwf	3987,c	;volatile
  2797                           
  2798                           ;ABS_Code.c: 241: LATC = 0x00;
  2799  0022F6  0E00               	movlw	0
  2800  0022F8  6E8B               	movwf	3979,c	;volatile
  2801                           
  2802                           ;ABS_Code.c: 242: TRISC = 0b11111110;
  2803  0022FA  0EFE               	movlw	254
  2804  0022FC  6E94               	movwf	3988,c	;volatile
  2805                           
  2806                           ;ABS_Code.c: 243: LATD = 0x00;
  2807  0022FE  0E00               	movlw	0
  2808  002300  6E8C               	movwf	3980,c	;volatile
  2809                           
  2810                           ;ABS_Code.c: 244: TRISD = 0xFF;
  2811  002302  6895               	setf	3989,c	;volatile
  2812                           
  2813                           ;ABS_Code.c: 245: LATE = 0x00;
  2814  002304  0E00               	movlw	0
  2815  002306  6E8D               	movwf	3981,c	;volatile
  2816                           
  2817                           ;ABS_Code.c: 246: TRISE = 0xFF;
  2818  002308  6896               	setf	3990,c	;volatile
  2819                           
  2820                           ;ABS_Code.c: 248: ADCON1 = 0x11111110;
  2821  00230A  0E10               	movlw	16
  2822  00230C  6EC1               	movwf	4033,c	;volatile
  2823                           
  2824                           ;ABS_Code.c: 251: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2825  00230E  0E06               	movlw	6
  2826  002310  0100               	movlb	0	; () banked
  2827  002312  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2828  002314  0E05               	movlw	5
  2829  002316  0100               	movlb	0	; () banked
  2830  002318  6F6F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2831  00231A  0E01               	movlw	1
  2832  00231C  0100               	movlb	0	; () banked
  2833  00231E  6F70               	movwf	CANInitialize@SJW& (0+255),b
  2834  002320  0E03               	movlw	3
  2835  002322  0100               	movlb	0	; () banked
  2836  002324  6F71               	movwf	CANInitialize@BRP& (0+255),b
  2837  002326  0E9D               	movlw	157
  2838  002328  0100               	movlb	0	; () banked
  2839  00232A  6F72               	movwf	CANInitialize@flags& (0+255),b
  2840  00232C  0E04               	movlw	4
  2841  00232E  EC53  F00F         	call	_CANInitialize
  2842                           
  2843                           ;ABS_Code.c: 252: RCONbits.IPEN = 1;
  2844  002332  8ED0               	bsf	4048,7,c	;volatile
  2845                           
  2846                           ;ABS_Code.c: 255: PIR3bits.RXB1IF = 0;
  2847  002334  92A4               	bcf	4004,1,c	;volatile
  2848                           
  2849                           ;ABS_Code.c: 256: PIR3bits.RXB0IF = 0;
  2850  002336  90A4               	bcf	4004,0,c	;volatile
  2851                           
  2852                           ;ABS_Code.c: 257: INTCONbits.TMR0IF = 0;
  2853  002338  94F2               	bcf	intcon,2,c	;volatile
  2854                           
  2855                           ;ABS_Code.c: 258: PIR2bits.TMR3IF = 0;
  2856  00233A  92A1               	bcf	4001,1,c	;volatile
  2857                           
  2858                           ;ABS_Code.c: 261: IPR3bits.RXB1IP = 1;
  2859  00233C  82A5               	bsf	4005,1,c	;volatile
  2860                           
  2861                           ;ABS_Code.c: 262: IPR3bits.RXB0IP = 1;
  2862  00233E  80A5               	bsf	4005,0,c	;volatile
  2863                           
  2864                           ;ABS_Code.c: 263: INTCON2bits.TMR0IP = 1;
  2865  002340  84F1               	bsf	intcon2,2,c	;volatile
  2866                           
  2867                           ;ABS_Code.c: 264: IPR2bits.TMR3IP = 0;
  2868  002342  92A2               	bcf	4002,1,c	;volatile
  2869                           
  2870                           ;ABS_Code.c: 267: T0CON = 0x80;
  2871  002344  0E80               	movlw	128
  2872  002346  6ED5               	movwf	4053,c	;volatile
  2873                           
  2874                           ;ABS_Code.c: 268: TMR3H = 0x63;
  2875  002348  0E63               	movlw	99
  2876  00234A  6EB3               	movwf	4019,c	;volatile
  2877                           
  2878                           ;ABS_Code.c: 269: TMR3L = 0xC0;
  2879  00234C  0EC0               	movlw	192
  2880  00234E  6EB2               	movwf	4018,c	;volatile
  2881                           
  2882                           ;ABS_Code.c: 270: INTCON2bits.INTEDG0 = 1;
  2883  002350  8CF1               	bsf	intcon2,6,c	;volatile
  2884                           
  2885                           ;ABS_Code.c: 273: PIE3bits.RXB1IE = 1;
  2886  002352  82A3               	bsf	4003,1,c	;volatile
  2887                           
  2888                           ;ABS_Code.c: 274: PIE3bits.RXB0IE = 1;
  2889  002354  80A3               	bsf	4003,0,c	;volatile
  2890                           
  2891                           ;ABS_Code.c: 275: INTCONbits.TMR0IE = 1;
  2892  002356  8AF2               	bsf	intcon,5,c	;volatile
  2893                           
  2894                           ;ABS_Code.c: 276: PIE2bits.TMR3IE = 1;
  2895  002358  82A0               	bsf	4000,1,c	;volatile
  2896                           
  2897                           ;ABS_Code.c: 277: INTCONbits.GIEH = 1;
  2898  00235A  8EF2               	bsf	intcon,7,c	;volatile
  2899                           
  2900                           ;ABS_Code.c: 278: INTCONbits.GIEL = 1;
  2901  00235C  8CF2               	bsf	intcon,6,c	;volatile
  2902                           
  2903                           ;ABS_Code.c: 281: ADCON1 = 0b01110111;
  2904  00235E  0E77               	movlw	119
  2905  002360  6EC1               	movwf	4033,c	;volatile
  2906                           
  2907                           ;ABS_Code.c: 282: ADCON0bits.CHS2 = 0;
  2908  002362  98C2               	bcf	4034,4,c	;volatile
  2909                           
  2910                           ;ABS_Code.c: 283: ADCON0bits.CHS1 = 0;
  2911  002364  96C2               	bcf	4034,3,c	;volatile
  2912                           
  2913                           ;ABS_Code.c: 284: ADCON0bits.CHS0 = 0;
  2914  002366  94C2               	bcf	4034,2,c	;volatile
  2915                           
  2916                           ;ABS_Code.c: 285: ADCON2bits.ACQT2 = 1;
  2917  002368  8AC0               	bsf	4032,5,c	;volatile
  2918                           
  2919                           ;ABS_Code.c: 286: ADCON2bits.ACQT1 = 1;
  2920  00236A  88C0               	bsf	4032,4,c	;volatile
  2921                           
  2922                           ;ABS_Code.c: 287: ADCON2bits.ACQT0 = 0;
  2923  00236C  96C0               	bcf	4032,3,c	;volatile
  2924                           
  2925                           ;ABS_Code.c: 288: ADCON2bits.ADCS2 = 1;
  2926  00236E  84C0               	bsf	4032,2,c	;volatile
  2927                           
  2928                           ;ABS_Code.c: 289: ADCON2bits.ADCS1 = 0;
  2929  002370  92C0               	bcf	4032,1,c	;volatile
  2930                           
  2931                           ;ABS_Code.c: 290: ADCON2bits.ADCS0 = 1;
  2932  002372  80C0               	bsf	4032,0,c	;volatile
  2933                           
  2934                           ;ABS_Code.c: 291: ADCON2bits.ADFM = 0;
  2935  002374  9EC0               	bcf	4032,7,c	;volatile
  2936                           
  2937                           ;ABS_Code.c: 292: ADCON0bits.ADON = 1;
  2938  002376  80C2               	bsf	4034,0,c	;volatile
  2939                           
  2940                           ;ABS_Code.c: 294: T3CON = 0x01;
  2941  002378  0E01               	movlw	1
  2942  00237A  6EB1               	movwf	4017,c	;volatile
  2943                           
  2944                           ;ABS_Code.c: 295: wait_time = 20;
  2945  00237C  0E14               	movlw	20
  2946  00237E  0100               	movlb	0	; () banked
  2947  002380  6FA2               	movwf	_wait_time& (0+255),b
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;ABS_Code.c: 296: delay_ms(2);
  2951  002382  0E00               	movlw	0
  2952  002384  0100               	movlb	0	; () banked
  2953  002386  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2954  002388  0E02               	movlw	2
  2955  00238A  6F66               	movwf	delay_ms@value_ms& (0+255),b
  2956  00238C  ECDD  F012         	call	_delay_ms	;wreg free
  2957  002390  0012               	return		;funcret
  2958  002392                     __end_of_board_initialization:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           intcon	equ	0xFF2
  2967                           intcon2	equ	0xFF1
  2968                           postinc0	equ	0xFEE
  2969                           wreg	equ	0xFE8
  2970                           postdec1	equ	0xFE5
  2971                           fsr1l	equ	0xFE1
  2972                           indf2	equ	0xFDF
  2973                           fsr2h	equ	0xFDA
  2974                           fsr2l	equ	0xFD9
  2975                           status	equ	0xFD8
  2976                           
  2977 ;; *************** function _delay_ms *****************
  2978 ;; Defined at:
  2979 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  value_ms        2    6[BANK0 ] unsigned int 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;		None               void
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2993 ;;      Params:         0       2       0       0
  2994 ;;      Locals:         0       0       0       0
  2995 ;;      Temps:          0       0       0       0
  2996 ;;      Totals:         0       2       0       0
  2997 ;;Total ram usage:        2 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    4
  3000 ;; This function calls:
  3001 ;;		___wmul
  3002 ;; This function is called by:
  3003 ;;		_board_initialization
  3004 ;;		_delay_s
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text5
  3009  0025BA                     __ptext5:
  3010                           	opt stack 0
  3011  0025BA                     _delay_ms:
  3012                           	opt stack 25
  3013                           
  3014                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3015                           
  3016                           ;incstack = 0
  3017  0025BA  C0A4  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3018  0025BE  0100               	movlb	0	; () banked
  3019  0025C0  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  3020  0025C2  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
  3021  0025C6  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3022  0025CA  ECFA  F012         	call	___wmul	;wreg free
  3023  0025CE  C060  F092         	movff	?___wmul,_clock_counter_reference	;volatile
  3024  0025D2  C061  F093         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3025                           
  3026                           ;src\delay.c: 75: while (clock_counter_reference) {
  3027  0025D6  D007               	goto	l571
  3028  0025D8                     l3294:
  3029                           
  3030                           ;src\delay.c: 85: _delay(240);
  3031  0025D8  0E50               	movlw	80
  3032  0025DA                     u4417:
  3033  0025DA  2EE8               	decfsz	wreg,f,c
  3034  0025DC  D7FE               	goto	u4417
  3035                           
  3036                           ;src\delay.c: 88: clock_counter_reference--;
  3037  0025DE  0100               	movlb	0	; () banked
  3038  0025E0  0792               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3039  0025E2  A0D8               	btfss	status,0,c
  3040  0025E4  0793               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3041  0025E6                     l571:
  3042  0025E6  0100               	movlb	0	; () banked
  3043  0025E8  5192               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3044  0025EA  0100               	movlb	0	; () banked
  3045  0025EC  1193               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3046  0025EE  B4D8               	btfsc	status,2,c
  3047  0025F0  0012               	return	
  3048  0025F2  D7F2               	goto	l3294
  3049  0025F4                     __end_of_delay_ms:
  3050                           	opt stack 0
  3051                           tblptru	equ	0xFF8
  3052                           tblptrh	equ	0xFF7
  3053                           tblptrl	equ	0xFF6
  3054                           tablat	equ	0xFF5
  3055                           prodh	equ	0xFF4
  3056                           prodl	equ	0xFF3
  3057                           intcon	equ	0xFF2
  3058                           intcon2	equ	0xFF1
  3059                           postinc0	equ	0xFEE
  3060                           wreg	equ	0xFE8
  3061                           postdec1	equ	0xFE5
  3062                           fsr1l	equ	0xFE1
  3063                           indf2	equ	0xFDF
  3064                           fsr2h	equ	0xFDA
  3065                           fsr2l	equ	0xFD9
  3066                           status	equ	0xFD8
  3067                           
  3068 ;; *************** function ___wmul *****************
  3069 ;; Defined at:
  3070 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3073 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  product         2    4[BANK0 ] unsigned int 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  2    0[BANK0 ] unsigned int 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, prodl, prodh
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3085 ;;      Params:         0       4       0       0
  3086 ;;      Locals:         0       2       0       0
  3087 ;;      Temps:          0       0       0       0
  3088 ;;      Totals:         0       6       0       0
  3089 ;;Total ram usage:        6 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    3
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_delay_ms
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text6
  3100  0025F4                     __ptext6:
  3101                           	opt stack 0
  3102  0025F4                     ___wmul:
  3103                           	opt stack 25
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;incstack = 0
  3107  0025F4  0100               	movlb	0	; () banked
  3108  0025F6  5160               	movf	___wmul@multiplier& (0+255),w,b
  3109  0025F8  0100               	movlb	0	; () banked
  3110  0025FA  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3111  0025FC  CFF3 F064          	movff	prodl,___wmul@product
  3112  002600  CFF4 F065          	movff	prodh,___wmul@product+1
  3113  002604  0100               	movlb	0	; () banked
  3114  002606  5160               	movf	___wmul@multiplier& (0+255),w,b
  3115  002608  0100               	movlb	0	; () banked
  3116  00260A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3117  00260C  50F3               	movf	prodl,w,c
  3118  00260E  0100               	movlb	0	; () banked
  3119  002610  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3120  002612  0100               	movlb	0	; () banked
  3121  002614  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3122  002616  0100               	movlb	0	; () banked
  3123  002618  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3124  00261A  50F3               	movf	prodl,w,c
  3125  00261C  0100               	movlb	0	; () banked
  3126  00261E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3127                           
  3128                           ; BSR set to: 0
  3129  002620  C064  F060         	movff	___wmul@product,?___wmul
  3130  002624  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3131  002628  0012               	return	
  3132  00262A                     __end_of___wmul:
  3133                           	opt stack 0
  3134                           tblptru	equ	0xFF8
  3135                           tblptrh	equ	0xFF7
  3136                           tblptrl	equ	0xFF6
  3137                           tablat	equ	0xFF5
  3138                           prodh	equ	0xFF4
  3139                           prodl	equ	0xFF3
  3140                           intcon	equ	0xFF2
  3141                           intcon2	equ	0xFF1
  3142                           postinc0	equ	0xFEE
  3143                           wreg	equ	0xFE8
  3144                           postdec1	equ	0xFE5
  3145                           fsr1l	equ	0xFE1
  3146                           indf2	equ	0xFDF
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151 ;; *************** function _CANInitialize *****************
  3152 ;; Defined at:
  3153 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  propSeg         1    wreg     unsigned char 
  3156 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  3157 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  3158 ;;  SJW             1   16[BANK0 ] unsigned char 
  3159 ;;  BRP             1   17[BANK0 ] unsigned char 
  3160 ;;  flags           1   18[BANK0 ] enum E16844
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  propSeg         1   23[BANK0 ] unsigned char 
  3163 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  3164 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;		None               void
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3174 ;;      Params:         0       5       0       0
  3175 ;;      Locals:         0       3       0       0
  3176 ;;      Temps:          0       4       0       0
  3177 ;;      Totals:         0      12       0       0
  3178 ;;Total ram usage:       12 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    4
  3181 ;; This function calls:
  3182 ;;		_CANOperationMode
  3183 ;;		_CANSetFilter
  3184 ;;		_CANSetMask
  3185 ;; This function is called by:
  3186 ;;		_board_initialization
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text7
  3191  001EA6                     __ptext7:
  3192                           	opt stack 0
  3193  001EA6                     _CANInitialize:
  3194                           	opt stack 25
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;incstack = 0
  3198                           ;CANInitialize@propSeg stored from wreg
  3199  001EA6  0100               	movlb	0	; () banked
  3200  001EA8  6F77               	movwf	CANInitialize@propSeg& (0+255),b
  3201                           
  3202                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3203                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3204                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3205  001EAA  0E80               	movlw	128
  3206  001EAC  EC3A  F013         	call	_CANOperationMode
  3207                           
  3208                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3209  001EB0  0E00               	movlw	0
  3210  001EB2  6E70               	movwf	3952,c	;volatile
  3211                           
  3212                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3213  001EB4  0E00               	movlw	0
  3214  001EB6  6E71               	movwf	3953,c	;volatile
  3215                           
  3216                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3217  001EB8  0E00               	movlw	0
  3218  001EBA  6E72               	movwf	3954,c	;volatile
  3219                           
  3220                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3221  001EBC  0100               	movlb	0	; () banked
  3222  001EBE  4170               	rrncf	CANInitialize@SJW& (0+255),w,b
  3223  001EC0  42E8               	rrncf	wreg,f,c
  3224  001EC2  0BC0               	andlw	192
  3225  001EC4  0100               	movlb	0	; () banked
  3226  001EC6  6F70               	movwf	CANInitialize@SJW& (0+255),b
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3230  001EC8  0100               	movlb	0	; () banked
  3231  001ECA  5170               	movf	CANInitialize@SJW& (0+255),w,b
  3232  001ECC  1270               	iorwf	3952,f,c	;volatile
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3236  001ECE  0100               	movlb	0	; () banked
  3237  001ED0  5171               	movf	CANInitialize@BRP& (0+255),w,b
  3238  001ED2  1270               	iorwf	3952,f,c	;volatile
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3242  001ED4  0100               	movlb	0	; () banked
  3243  001ED6  5177               	movf	CANInitialize@propSeg& (0+255),w,b
  3244  001ED8  1271               	iorwf	3953,f,c	;volatile
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3248  001EDA  0100               	movlb	0	; () banked
  3249  001EDC  396E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3250  001EDE  42E8               	rrncf	wreg,f,c
  3251  001EE0  0BF8               	andlw	248
  3252  001EE2  0100               	movlb	0	; () banked
  3253  001EE4  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3257  001EE6  0100               	movlb	0	; () banked
  3258  001EE8  516E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3259  001EEA  1271               	iorwf	3953,f,c	;volatile
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3263  001EEC  0100               	movlb	0	; () banked
  3264  001EEE  A572               	btfss	CANInitialize@flags& (0+255),2,b
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3268  001EF0  8C71               	bsf	3953,6,c	;volatile
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3272  001EF2  0100               	movlb	0	; () banked
  3273  001EF4  B172               	btfsc	CANInitialize@flags& (0+255),0,b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3277  001EF6  8E71               	bsf	3953,7,c	;volatile
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3281                           
  3282                           ; BSR set to: 0
  3283  001EF8  0100               	movlb	0	; () banked
  3284  001EFA  516F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3285  001EFC  1272               	iorwf	3954,f,c	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3289  001EFE  0100               	movlb	0	; () banked
  3290  001F00  B372               	btfsc	CANInitialize@flags& (0+255),1,b
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3294  001F02  8C72               	bsf	3954,6,c	;volatile
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3298                           
  3299                           ; BSR set to: 0
  3300  001F04  0100               	movlb	0	; () banked
  3301  001F06  5172               	movf	CANInitialize@flags& (0+255),w,b
  3302  001F08  0B60               	andlw	96
  3303  001F0A  6E60               	movwf	3936,c	;volatile
  3304                           
  3305                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3306  001F0C  0100               	movlb	0	; () banked
  3307  001F0E  5172               	movf	CANInitialize@flags& (0+255),w,b
  3308  001F10  0B10               	andlw	16
  3309  001F12  0AFF               	xorlw	255
  3310  001F14  B4D8               	btfsc	status,2,c
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3314  001F16  8460               	bsf	3936,2,c	;volatile
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3318  001F18  CF60 FF50          	movff	3936,3920	;volatile
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3322  001F1C  0E00               	movlw	0
  3323  001F1E  0100               	movlb	0	; () banked
  3324  001F20  6F60               	movwf	CANSetMask@mask& (0+255),b
  3325  001F22  0E00               	movlw	0
  3326  001F24  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  3327  001F26  0E00               	movlw	0
  3328  001F28  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  3329  001F2A  0E00               	movlw	0
  3330  001F2C  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  3331  001F2E  0EF7               	movlw	247
  3332  001F30  0100               	movlb	0	; () banked
  3333  001F32  6F64               	movwf	CANSetMask@type& (0+255),b
  3334  001F34  0E01               	movlw	1
  3335  001F36  EC32  F00C         	call	_CANSetMask
  3336                           
  3337                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3338  001F3A  0E00               	movlw	0
  3339  001F3C  0100               	movlb	0	; () banked
  3340  001F3E  6F60               	movwf	CANSetMask@mask& (0+255),b
  3341  001F40  0E00               	movlw	0
  3342  001F42  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  3343  001F44  0E00               	movlw	0
  3344  001F46  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  3345  001F48  0E00               	movlw	0
  3346  001F4A  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  3347  001F4C  0EF7               	movlw	247
  3348  001F4E  0100               	movlb	0	; () banked
  3349  001F50  6F64               	movwf	CANSetMask@type& (0+255),b
  3350  001F52  0E02               	movlw	2
  3351  001F54  EC32  F00C         	call	_CANSetMask
  3352                           
  3353                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3354  001F58  D00F               	goto	l3042
  3355  001F5A                     l3036:
  3356                           
  3357                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3358  001F5A  0EF7               	movlw	247
  3359  001F5C  0100               	movlb	0	; () banked
  3360  001F5E  6F78               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3361  001F60  D007               	goto	l3038
  3362  001F62                     l360:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3366  001F62  0100               	movlb	0	; () banked
  3367  001F64  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  3368                           
  3369                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3370  001F66  0100               	movlb	0	; () banked
  3371  001F68  6979               	setf	CANInitialize@FilterConfig2& (0+255),b
  3372                           
  3373                           ;inc\CANlib.h: 273: break;
  3374  001F6A  D028               	goto	l3044
  3375  001F6C                     l361:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3379  001F6C  0100               	movlb	0	; () banked
  3380  001F6E  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  3381  001F70                     l3038:
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3385  001F70  0EF7               	movlw	247
  3386  001F72  0100               	movlb	0	; () banked
  3387  001F74  6F79               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;inc\CANlib.h: 278: }
  3391                           
  3392                           ;inc\CANlib.h: 277: break;
  3393  001F76  D022               	goto	l3044
  3394  001F78                     l3042:
  3395  001F78  0E9F               	movlw	159
  3396  001F7A  0100               	movlb	0	; () banked
  3397  001F7C  6F73               	movwf	??_CANInitialize& (0+255),b
  3398  001F7E  0EFF               	movlw	255
  3399  001F80  0100               	movlb	0	; () banked
  3400  001F82  6F74               	movwf	(??_CANInitialize+1)& (0+255),b
  3401  001F84  0100               	movlb	0	; () banked
  3402  001F86  5172               	movf	CANInitialize@flags& (0+255),w,b
  3403  001F88  0B60               	andlw	96
  3404  001F8A  0100               	movlb	0	; () banked
  3405  001F8C  6F75               	movwf	(??_CANInitialize+2)& (0+255),b
  3406  001F8E  6B76               	clrf	(??_CANInitialize+3)& (0+255),b
  3407  001F90  0100               	movlb	0	; () banked
  3408  001F92  5173               	movf	??_CANInitialize& (0+255),w,b
  3409  001F94  0100               	movlb	0	; () banked
  3410  001F96  1375               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3411  001F98  0100               	movlb	0	; () banked
  3412  001F9A  5174               	movf	(??_CANInitialize+1)& (0+255),w,b
  3413  001F9C  0100               	movlb	0	; () banked
  3414  001F9E  1376               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3415                           
  3416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3417                           ; Switch size 1, requested type "space"
  3418                           ; Number of cases is 1, Range of values is 0 to 0
  3419                           ; switch strategies available:
  3420                           ; Name         Instructions Cycles
  3421                           ; simple_byte            4     3 (average)
  3422                           ;	Chosen strategy is simple_byte
  3423  001FA0  0100               	movlb	0	; () banked
  3424  001FA2  5176               	movf	(??_CANInitialize+3)& (0+255),w,b
  3425  001FA4  0A00               	xorlw	0	; case 0
  3426  001FA6  A4D8               	btfss	status,2,c
  3427  001FA8  D7E1               	goto	l361
  3428                           
  3429                           ; BSR set to: 0
  3430                           ; Switch size 1, requested type "space"
  3431                           ; Number of cases is 2, Range of values is 191 to 223
  3432                           ; switch strategies available:
  3433                           ; Name         Instructions Cycles
  3434                           ; simple_byte            7     4 (average)
  3435                           ;	Chosen strategy is simple_byte
  3436  001FAA  0100               	movlb	0	; () banked
  3437  001FAC  5175               	movf	(??_CANInitialize+2)& (0+255),w,b
  3438  001FAE  0ABF               	xorlw	191	; case 191
  3439  001FB0  B4D8               	btfsc	status,2,c
  3440  001FB2  D7D7               	goto	l360
  3441  001FB4  0A60               	xorlw	96	; case 223
  3442  001FB6  B4D8               	btfsc	status,2,c
  3443  001FB8  D7D0               	goto	l3036
  3444  001FBA  D7D8               	goto	l361
  3445  001FBC                     l3044:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3449  001FBC  0E00               	movlw	0
  3450  001FBE  0100               	movlb	0	; () banked
  3451  001FC0  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3452  001FC2  0E00               	movlw	0
  3453  001FC4  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3454  001FC6  0E00               	movlw	0
  3455  001FC8  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3456  001FCA  0E00               	movlw	0
  3457  001FCC  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3458  001FCE  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3459  001FD2  0E00               	movlw	0
  3460  001FD4  EC63  F000         	call	_CANSetFilter
  3461                           
  3462                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3463  001FD8  0E00               	movlw	0
  3464  001FDA  0100               	movlb	0	; () banked
  3465  001FDC  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3466  001FDE  0E00               	movlw	0
  3467  001FE0  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3468  001FE2  0E00               	movlw	0
  3469  001FE4  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3470  001FE6  0E00               	movlw	0
  3471  001FE8  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3472  001FEA  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3473  001FEE  0E01               	movlw	1
  3474  001FF0  EC63  F000         	call	_CANSetFilter
  3475                           
  3476                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3477  001FF4  0E00               	movlw	0
  3478  001FF6  0100               	movlb	0	; () banked
  3479  001FF8  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3480  001FFA  0E00               	movlw	0
  3481  001FFC  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3482  001FFE  0E00               	movlw	0
  3483  002000  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3484  002002  0E00               	movlw	0
  3485  002004  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3486  002006  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3487  00200A  0E02               	movlw	2
  3488  00200C  EC63  F000         	call	_CANSetFilter
  3489                           
  3490                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3491  002010  0E00               	movlw	0
  3492  002012  0100               	movlb	0	; () banked
  3493  002014  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3494  002016  0E00               	movlw	0
  3495  002018  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3496  00201A  0E00               	movlw	0
  3497  00201C  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3498  00201E  0E00               	movlw	0
  3499  002020  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3500  002022  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3501  002026  0E03               	movlw	3
  3502  002028  EC63  F000         	call	_CANSetFilter
  3503                           
  3504                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3505  00202C  0E00               	movlw	0
  3506  00202E  0100               	movlb	0	; () banked
  3507  002030  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3508  002032  0E00               	movlw	0
  3509  002034  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3510  002036  0E00               	movlw	0
  3511  002038  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3512  00203A  0E00               	movlw	0
  3513  00203C  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3514  00203E  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3515  002042  0E04               	movlw	4
  3516  002044  EC63  F000         	call	_CANSetFilter
  3517                           
  3518                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3519  002048  0E00               	movlw	0
  3520  00204A  0100               	movlb	0	; () banked
  3521  00204C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  3522  00204E  0E00               	movlw	0
  3523  002050  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3524  002052  0E00               	movlw	0
  3525  002054  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3526  002056  0E00               	movlw	0
  3527  002058  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3528  00205A  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3529  00205E  0E05               	movlw	5
  3530  002060  EC63  F000         	call	_CANSetFilter
  3531                           
  3532                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3533  002064  0E00               	movlw	0
  3534  002066  EC3A  F013         	call	_CANOperationMode
  3535  00206A  0012               	return		;funcret
  3536  00206C                     __end_of_CANInitialize:
  3537                           	opt stack 0
  3538                           tblptru	equ	0xFF8
  3539                           tblptrh	equ	0xFF7
  3540                           tblptrl	equ	0xFF6
  3541                           tablat	equ	0xFF5
  3542                           prodh	equ	0xFF4
  3543                           prodl	equ	0xFF3
  3544                           intcon	equ	0xFF2
  3545                           intcon2	equ	0xFF1
  3546                           postinc0	equ	0xFEE
  3547                           wreg	equ	0xFE8
  3548                           postdec1	equ	0xFE5
  3549                           fsr1l	equ	0xFE1
  3550                           indf2	equ	0xFDF
  3551                           fsr2h	equ	0xFDA
  3552                           fsr2l	equ	0xFD9
  3553                           status	equ	0xFD8
  3554                           
  3555 ;; *************** function _CANSetMask *****************
  3556 ;; Defined at:
  3557 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  numBuffer       1    wreg     enum E16878
  3560 ;;  mask            4    0[BANK0 ] unsigned long 
  3561 ;;  type            1    4[BANK0 ] enum E16844
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  numBuffer       1    9[BANK0 ] enum E16878
  3564 ;;  tamp            4   10[BANK0 ] unsigned long 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;		None               void
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3574 ;;      Params:         0       5       0       0
  3575 ;;      Locals:         0       5       0       0
  3576 ;;      Temps:          0       4       0       0
  3577 ;;      Totals:         0      14       0       0
  3578 ;;Total ram usage:       14 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    3
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_CANInitialize
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text8
  3589  001864                     __ptext8:
  3590                           	opt stack 0
  3591  001864                     _CANSetMask:
  3592                           	opt stack 25
  3593                           
  3594                           ;incstack = 0
  3595                           ;CANSetMask@numBuffer stored from wreg
  3596  001864  0100               	movlb	0	; () banked
  3597  001866  6F69               	movwf	CANSetMask@numBuffer& (0+255),b
  3598                           
  3599                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3600  001868  0100               	movlb	0	; () banked
  3601  00186A  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  3602  00186C  A4D8               	btfss	status,2,c
  3603  00186E  D056               	goto	l2600
  3604                           
  3605                           ; BSR set to: 0
  3606  001870  0100               	movlb	0	; () banked
  3607  001872  2964               	incf	CANSetMask@type& (0+255),w,b
  3608  001874  A4D8               	btfss	status,2,c
  3609  001876  D052               	goto	l2600
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;inc\CANlib.h: 644: {
  3613                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3614  001878  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  3615  00187C  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3616  001880  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3617  001884  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3618  001888  0E04               	movlw	4
  3619  00188A  D006               	goto	u2240
  3620  00188C                     u2245:
  3621  00188C  0100               	movlb	0	; () banked
  3622  00188E  90D8               	bcf	status,0,c
  3623  001890  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3624  001892  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3625  001894  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3626  001896  3365               	rrcf	??_CANSetMask& (0+255),f,b
  3627  001898                     u2240:
  3628  001898  2EE8               	decfsz	wreg,f,c
  3629  00189A  D7F8               	goto	u2245
  3630  00189C  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3631  0018A0  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3632  0018A4  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3633  0018A8  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3637  0018AC  0100               	movlb	0	; () banked
  3638  0018AE  516A               	movf	CANSetMask@tamp& (0+255),w,b
  3639  0018B0  0100               	movlb	0	; () banked
  3640  0018B2  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3641  0018B4  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3642  0018B6  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3643  0018B8  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3647  0018BA  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3651  0018BE  0E07               	movlw	7
  3652  0018C0  0100               	movlb	0	; () banked
  3653  0018C2  1560               	andwf	CANSetMask@mask& (0+255),w,b
  3654  0018C4  0100               	movlb	0	; () banked
  3655  0018C6  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3656  0018C8  0E00               	movlw	0
  3657  0018CA  0100               	movlb	0	; () banked
  3658  0018CC  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3659  0018CE  0100               	movlb	0	; () banked
  3660  0018D0  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3661  0018D2  0E00               	movlw	0
  3662  0018D4  0100               	movlb	0	; () banked
  3663  0018D6  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3664  0018D8  0100               	movlb	0	; () banked
  3665  0018DA  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3666  0018DC  0E00               	movlw	0
  3667  0018DE  0100               	movlb	0	; () banked
  3668  0018E0  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3669  0018E2  0100               	movlb	0	; () banked
  3670  0018E4  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3674  0018E6  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  3675  0018EA  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3676  0018EE  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3677  0018F2  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3678  0018F6  0E05               	movlw	5
  3679  0018F8                     u2255:
  3680  0018F8  90D8               	bcf	status,0,c
  3681  0018FA  0100               	movlb	0	; () banked
  3682  0018FC  3765               	rlcf	??_CANSetMask& (0+255),f,b
  3683  0018FE  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3684  001900  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3685  001902  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3686  001904  2EE8               	decfsz	wreg,f,c
  3687  001906  D7F8               	goto	u2255
  3688  001908  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3689  00190C  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3690  001910  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3691  001914  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3695  001918  C06A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3696  00191C                     l2600:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;inc\CANlib.h: 652: }
  3700                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3701  00191C  0E02               	movlw	2
  3702  00191E  0100               	movlb	0	; () banked
  3703  001920  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3704  001922  A4D8               	btfss	status,2,c
  3705  001924  D056               	goto	l2616
  3706                           
  3707                           ; BSR set to: 0
  3708  001926  0100               	movlb	0	; () banked
  3709  001928  2964               	incf	CANSetMask@type& (0+255),w,b
  3710  00192A  A4D8               	btfss	status,2,c
  3711  00192C  D052               	goto	l2616
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;inc\CANlib.h: 655: {
  3715                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3716  00192E  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  3717  001932  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3718  001936  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3719  00193A  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3720  00193E  0E04               	movlw	4
  3721  001940  D006               	goto	u2280
  3722  001942                     u2285:
  3723  001942  0100               	movlb	0	; () banked
  3724  001944  90D8               	bcf	status,0,c
  3725  001946  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3726  001948  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3727  00194A  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3728  00194C  3365               	rrcf	??_CANSetMask& (0+255),f,b
  3729  00194E                     u2280:
  3730  00194E  2EE8               	decfsz	wreg,f,c
  3731  001950  D7F8               	goto	u2285
  3732  001952  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3733  001956  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3734  00195A  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3735  00195E  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3739  001962  0100               	movlb	0	; () banked
  3740  001964  516A               	movf	CANSetMask@tamp& (0+255),w,b
  3741  001966  0100               	movlb	0	; () banked
  3742  001968  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3743  00196A  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3744  00196C  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3745  00196E  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3749  001970  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3753  001974  0E07               	movlw	7
  3754  001976  0100               	movlb	0	; () banked
  3755  001978  1560               	andwf	CANSetMask@mask& (0+255),w,b
  3756  00197A  0100               	movlb	0	; () banked
  3757  00197C  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3758  00197E  0E00               	movlw	0
  3759  001980  0100               	movlb	0	; () banked
  3760  001982  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3761  001984  0100               	movlb	0	; () banked
  3762  001986  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3763  001988  0E00               	movlw	0
  3764  00198A  0100               	movlb	0	; () banked
  3765  00198C  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3766  00198E  0100               	movlb	0	; () banked
  3767  001990  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3768  001992  0E00               	movlw	0
  3769  001994  0100               	movlb	0	; () banked
  3770  001996  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3771  001998  0100               	movlb	0	; () banked
  3772  00199A  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3776  00199C  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  3777  0019A0  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3778  0019A4  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3779  0019A8  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3780  0019AC  0E05               	movlw	5
  3781  0019AE                     u2295:
  3782  0019AE  90D8               	bcf	status,0,c
  3783  0019B0  0100               	movlb	0	; () banked
  3784  0019B2  3765               	rlcf	??_CANSetMask& (0+255),f,b
  3785  0019B4  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3786  0019B6  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3787  0019B8  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3788  0019BA  2EE8               	decfsz	wreg,f,c
  3789  0019BC  D7F8               	goto	u2295
  3790  0019BE  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3791  0019C2  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3792  0019C6  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3793  0019CA  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3797  0019CE  C06A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3798  0019D2                     l2616:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;inc\CANlib.h: 663: }
  3802                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3803  0019D2  0100               	movlb	0	; () banked
  3804  0019D4  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  3805  0019D6  A4D8               	btfss	status,2,c
  3806  0019D8  D087               	goto	l2648
  3807                           
  3808                           ; BSR set to: 0
  3809  0019DA  0EF7               	movlw	247
  3810  0019DC  0100               	movlb	0	; () banked
  3811  0019DE  1964               	xorwf	CANSetMask@type& (0+255),w,b
  3812  0019E0  A4D8               	btfss	status,2,c
  3813  0019E2  D082               	goto	l2648
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;inc\CANlib.h: 666: {
  3817                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3818  0019E4  0100               	movlb	0	; () banked
  3819  0019E6  5160               	movf	CANSetMask@mask& (0+255),w,b
  3820  0019E8  0100               	movlb	0	; () banked
  3821  0019EA  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3822  0019EC  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3823  0019EE  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3824  0019F0  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3828  0019F2  C06A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3832  0019F6  0E00               	movlw	0
  3833  0019F8  0100               	movlb	0	; () banked
  3834  0019FA  1560               	andwf	CANSetMask@mask& (0+255),w,b
  3835  0019FC  0100               	movlb	0	; () banked
  3836  0019FE  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  3837  001A00  0EFF               	movlw	255
  3838  001A02  0100               	movlb	0	; () banked
  3839  001A04  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3840  001A06  0100               	movlb	0	; () banked
  3841  001A08  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3842  001A0A  0E00               	movlw	0
  3843  001A0C  0100               	movlb	0	; () banked
  3844  001A0E  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3845  001A10  0100               	movlb	0	; () banked
  3846  001A12  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3847  001A14  0E00               	movlw	0
  3848  001A16  0100               	movlb	0	; () banked
  3849  001A18  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3850  001A1A  0100               	movlb	0	; () banked
  3851  001A1C  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3855  001A1E  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  3856  001A22  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3857  001A26  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3858  001A2A  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3859  001A2E  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  3860  001A32  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  3861  001A36  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  3862  001A3A  0100               	movlb	0	; () banked
  3863  001A3C  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  3864  001A3E  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3865  001A42  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3866  001A46  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3867  001A4A  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3871  001A4E  C06A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3875  001A52  0100               	movlb	0	; () banked
  3876  001A54  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3877  001A56  D003               	goto	l434
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3881  001A58  010F               	movlb	15	; () banked
  3882  001A5A  8119               	bsf	25,0,b	;volatile
  3883  001A5C  D002               	goto	l435
  3884  001A5E                     l434:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;inc\CANlib.h: 676: else
  3888                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3889  001A5E  010F               	movlb	15	; () banked
  3890  001A60  9119               	bcf	25,0,b	;volatile
  3891  001A62                     l435:
  3892                           
  3893                           ; BSR set to: 15
  3894                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3895  001A62  0100               	movlb	0	; () banked
  3896  001A64  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3897  001A66  D003               	goto	l436
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3901  001A68  010F               	movlb	15	; () banked
  3902  001A6A  8319               	bsf	25,1,b	;volatile
  3903  001A6C  D002               	goto	l437
  3904  001A6E                     l436:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;inc\CANlib.h: 681: else
  3908                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3909  001A6E  010F               	movlb	15	; () banked
  3910  001A70  9319               	bcf	25,1,b	;volatile
  3911  001A72                     l437:
  3912                           
  3913                           ; BSR set to: 15
  3914                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3915  001A72  0100               	movlb	0	; () banked
  3916  001A74  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3917  001A76  D003               	goto	l438
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3921  001A78  010F               	movlb	15	; () banked
  3922  001A7A  8B19               	bsf	25,5,b	;volatile
  3923  001A7C  D002               	goto	l439
  3924  001A7E                     l438:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;inc\CANlib.h: 686: else
  3928                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3929  001A7E  010F               	movlb	15	; () banked
  3930  001A80  9B19               	bcf	25,5,b	;volatile
  3931  001A82                     l439:
  3932                           
  3933                           ; BSR set to: 15
  3934                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3935  001A82  0100               	movlb	0	; () banked
  3936  001A84  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3937  001A86  D003               	goto	l440
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3941  001A88  010F               	movlb	15	; () banked
  3942  001A8A  8D19               	bsf	25,6,b	;volatile
  3943  001A8C  D002               	goto	l441
  3944  001A8E                     l440:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;inc\CANlib.h: 691: else
  3948                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3949  001A8E  010F               	movlb	15	; () banked
  3950  001A90  9D19               	bcf	25,6,b	;volatile
  3951  001A92                     l441:
  3952                           
  3953                           ; BSR set to: 15
  3954                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3955  001A92  0100               	movlb	0	; () banked
  3956  001A94  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3957  001A96  D003               	goto	l442
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3961  001A98  010F               	movlb	15	; () banked
  3962  001A9A  8F19               	bsf	25,7,b	;volatile
  3963  001A9C  D002               	goto	l2642
  3964  001A9E                     l442:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;inc\CANlib.h: 696: else
  3968                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3969  001A9E  010F               	movlb	15	; () banked
  3970  001AA0  9F19               	bcf	25,7,b	;volatile
  3971  001AA2                     l2642:
  3972                           
  3973                           ; BSR set to: 15
  3974                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3975  001AA2  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  3976  001AA6  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3977  001AAA  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3978  001AAE  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3979  001AB2  0E16               	movlw	22
  3980  001AB4  D006               	goto	u2370
  3981  001AB6                     u2375:
  3982  001AB6  0100               	movlb	0	; () banked
  3983  001AB8  90D8               	bcf	status,0,c
  3984  001ABA  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3985  001ABC  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3986  001ABE  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3987  001AC0  3365               	rrcf	??_CANSetMask& (0+255),f,b
  3988  001AC2                     u2370:
  3989  001AC2  2EE8               	decfsz	wreg,f,c
  3990  001AC4  D7F8               	goto	u2375
  3991  001AC6  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  3992  001ACA  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3993  001ACE  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3994  001AD2  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3998  001AD6  0100               	movlb	0	; () banked
  3999  001AD8  516A               	movf	CANSetMask@tamp& (0+255),w,b
  4000  001ADA  0100               	movlb	0	; () banked
  4001  001ADC  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  4002  001ADE  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4003  001AE0  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4004  001AE2  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4008  001AE4  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4009  001AE8                     l2648:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 702: }
  4013                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4014  001AE8  0E02               	movlw	2
  4015  001AEA  0100               	movlb	0	; () banked
  4016  001AEC  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4017  001AEE  A4D8               	btfss	status,2,c
  4018  001AF0  0012               	return	
  4019                           
  4020                           ; BSR set to: 0
  4021  001AF2  0EF7               	movlw	247
  4022  001AF4  0100               	movlb	0	; () banked
  4023  001AF6  1964               	xorwf	CANSetMask@type& (0+255),w,b
  4024  001AF8  A4D8               	btfss	status,2,c
  4025  001AFA  0012               	return	
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;inc\CANlib.h: 705: {
  4029                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4030  001AFC  0100               	movlb	0	; () banked
  4031  001AFE  5160               	movf	CANSetMask@mask& (0+255),w,b
  4032  001B00  0100               	movlb	0	; () banked
  4033  001B02  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  4034  001B04  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4035  001B06  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4036  001B08  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4040  001B0A  C06A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4044  001B0E  0E00               	movlw	0
  4045  001B10  0100               	movlb	0	; () banked
  4046  001B12  1560               	andwf	CANSetMask@mask& (0+255),w,b
  4047  001B14  0100               	movlb	0	; () banked
  4048  001B16  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  4049  001B18  0EFF               	movlw	255
  4050  001B1A  0100               	movlb	0	; () banked
  4051  001B1C  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4052  001B1E  0100               	movlb	0	; () banked
  4053  001B20  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4054  001B22  0E00               	movlw	0
  4055  001B24  0100               	movlb	0	; () banked
  4056  001B26  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4057  001B28  0100               	movlb	0	; () banked
  4058  001B2A  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4059  001B2C  0E00               	movlw	0
  4060  001B2E  0100               	movlb	0	; () banked
  4061  001B30  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4062  001B32  0100               	movlb	0	; () banked
  4063  001B34  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4067  001B36  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  4068  001B3A  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4069  001B3E  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4070  001B42  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4071  001B46  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  4072  001B4A  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  4073  001B4E  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  4074  001B52  0100               	movlb	0	; () banked
  4075  001B54  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  4076  001B56  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  4077  001B5A  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4078  001B5E  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4079  001B62  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4083  001B66  C06A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4087  001B6A  0100               	movlb	0	; () banked
  4088  001B6C  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4089  001B6E  D003               	goto	l445
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4093  001B70  010F               	movlb	15	; () banked
  4094  001B72  811D               	bsf	29,0,b	;volatile
  4095  001B74  D002               	goto	l446
  4096  001B76                     l445:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 715: else
  4100                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4101  001B76  010F               	movlb	15	; () banked
  4102  001B78  911D               	bcf	29,0,b	;volatile
  4103  001B7A                     l446:
  4104                           
  4105                           ; BSR set to: 15
  4106                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4107  001B7A  0100               	movlb	0	; () banked
  4108  001B7C  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4109  001B7E  D003               	goto	l447
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4113  001B80  010F               	movlb	15	; () banked
  4114  001B82  831D               	bsf	29,1,b	;volatile
  4115  001B84  D002               	goto	l448
  4116  001B86                     l447:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;inc\CANlib.h: 720: else
  4120                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4121  001B86  010F               	movlb	15	; () banked
  4122  001B88  931D               	bcf	29,1,b	;volatile
  4123  001B8A                     l448:
  4124                           
  4125                           ; BSR set to: 15
  4126                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4127  001B8A  0100               	movlb	0	; () banked
  4128  001B8C  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4129  001B8E  D003               	goto	l449
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4133  001B90  010F               	movlb	15	; () banked
  4134  001B92  8B1D               	bsf	29,5,b	;volatile
  4135  001B94  D002               	goto	l450
  4136  001B96                     l449:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;inc\CANlib.h: 725: else
  4140                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4141  001B96  010F               	movlb	15	; () banked
  4142  001B98  9B1D               	bcf	29,5,b	;volatile
  4143  001B9A                     l450:
  4144                           
  4145                           ; BSR set to: 15
  4146                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4147  001B9A  0100               	movlb	0	; () banked
  4148  001B9C  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4149  001B9E  D003               	goto	l451
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4153  001BA0  010F               	movlb	15	; () banked
  4154  001BA2  8D1D               	bsf	29,6,b	;volatile
  4155  001BA4  D002               	goto	l452
  4156  001BA6                     l451:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;inc\CANlib.h: 730: else
  4160                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4161  001BA6  010F               	movlb	15	; () banked
  4162  001BA8  9D1D               	bcf	29,6,b	;volatile
  4163  001BAA                     l452:
  4164                           
  4165                           ; BSR set to: 15
  4166                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4167  001BAA  0100               	movlb	0	; () banked
  4168  001BAC  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4169  001BAE  D003               	goto	l453
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4173  001BB0  010F               	movlb	15	; () banked
  4174  001BB2  8F1D               	bsf	29,7,b	;volatile
  4175  001BB4  D002               	goto	l2674
  4176  001BB6                     l453:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;inc\CANlib.h: 735: else
  4180                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4181  001BB6  010F               	movlb	15	; () banked
  4182  001BB8  9F1D               	bcf	29,7,b	;volatile
  4183  001BBA                     l2674:
  4184                           
  4185                           ; BSR set to: 15
  4186                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4187  001BBA  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  4188  001BBE  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4189  001BC2  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4190  001BC6  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4191  001BCA  0E16               	movlw	22
  4192  001BCC  D006               	goto	u2450
  4193  001BCE                     u2455:
  4194  001BCE  0100               	movlb	0	; () banked
  4195  001BD0  90D8               	bcf	status,0,c
  4196  001BD2  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4197  001BD4  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4198  001BD6  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4199  001BD8  3365               	rrcf	??_CANSetMask& (0+255),f,b
  4200  001BDA                     u2450:
  4201  001BDA  2EE8               	decfsz	wreg,f,c
  4202  001BDC  D7F8               	goto	u2455
  4203  001BDE  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  4204  001BE2  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4205  001BE6  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4206  001BEA  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4210  001BEE  0100               	movlb	0	; () banked
  4211  001BF0  516A               	movf	CANSetMask@tamp& (0+255),w,b
  4212  001BF2  0100               	movlb	0	; () banked
  4213  001BF4  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  4214  001BF6  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4215  001BF8  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4216  001BFA  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4220  001BFC  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4221  001C00  0012               	return	
  4222  001C02                     __end_of_CANSetMask:
  4223                           	opt stack 0
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           prodh	equ	0xFF4
  4229                           prodl	equ	0xFF3
  4230                           intcon	equ	0xFF2
  4231                           intcon2	equ	0xFF1
  4232                           postinc0	equ	0xFEE
  4233                           wreg	equ	0xFE8
  4234                           postdec1	equ	0xFE5
  4235                           fsr1l	equ	0xFE1
  4236                           indf2	equ	0xFDF
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           status	equ	0xFD8
  4240                           
  4241 ;; *************** function _CANSetFilter *****************
  4242 ;; Defined at:
  4243 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  numBuffer       1    wreg     enum E16881
  4246 ;;  filter          4    0[BANK0 ] unsigned long 
  4247 ;;  type            1    4[BANK0 ] enum E16844
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  numBuffer       1    9[BANK0 ] enum E16881
  4250 ;;  tamp            4   10[BANK0 ] unsigned long 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4260 ;;      Params:         0       5       0       0
  4261 ;;      Locals:         0       5       0       0
  4262 ;;      Temps:          0       4       0       0
  4263 ;;      Totals:         0      14       0       0
  4264 ;;Total ram usage:       14 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    3
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_CANInitialize
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text9
  4275  0000C6                     __ptext9:
  4276                           	opt stack 0
  4277  0000C6                     _CANSetFilter:
  4278                           	opt stack 25
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;incstack = 0
  4282                           ;CANSetFilter@numBuffer stored from wreg
  4283  0000C6  0100               	movlb	0	; () banked
  4284  0000C8  6F69               	movwf	CANSetFilter@numBuffer& (0+255),b
  4285                           
  4286                           ;inc\CANlib.h: 750: unsigned long tamp;
  4287                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4288  0000CA  0100               	movlb	0	; () banked
  4289  0000CC  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4290  0000CE  0100               	movlb	0	; () banked
  4291  0000D0  A4D8               	btfss	status,2,c
  4292  0000D2  D058               	goto	l2698
  4293                           
  4294                           ; BSR set to: 0
  4295  0000D4  0100               	movlb	0	; () banked
  4296  0000D6  2964               	incf	CANSetFilter@type& (0+255),w,b
  4297  0000D8  A4D8               	btfss	status,2,c
  4298  0000DA  D054               	goto	l2698
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;inc\CANlib.h: 753: {
  4302                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4303  0000DC  010F               	movlb	15	; () banked
  4304  0000DE  9701               	bcf	1,3,b	;volatile
  4305                           
  4306                           ; BSR set to: 15
  4307                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4308  0000E0  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4309  0000E4  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4310  0000E8  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4311  0000EC  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4312  0000F0  0E04               	movlw	4
  4313  0000F2  D006               	goto	u2480
  4314  0000F4                     u2485:
  4315  0000F4  0100               	movlb	0	; () banked
  4316  0000F6  90D8               	bcf	status,0,c
  4317  0000F8  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4318  0000FA  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4319  0000FC  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4320  0000FE  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4321  000100                     u2480:
  4322  000100  2EE8               	decfsz	wreg,f,c
  4323  000102  D7F8               	goto	u2485
  4324  000104  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4325  000108  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4326  00010C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4327  000110  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4331  000114  0100               	movlb	0	; () banked
  4332  000116  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4333  000118  0100               	movlb	0	; () banked
  4334  00011A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4335  00011C  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4336  00011E  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4337  000120  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4341  000122  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4345  000126  0E07               	movlw	7
  4346  000128  0100               	movlb	0	; () banked
  4347  00012A  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4348  00012C  0100               	movlb	0	; () banked
  4349  00012E  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4350  000130  0E00               	movlw	0
  4351  000132  0100               	movlb	0	; () banked
  4352  000134  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4353  000136  0100               	movlb	0	; () banked
  4354  000138  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4355  00013A  0E00               	movlw	0
  4356  00013C  0100               	movlb	0	; () banked
  4357  00013E  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4358  000140  0100               	movlb	0	; () banked
  4359  000142  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4360  000144  0E00               	movlw	0
  4361  000146  0100               	movlb	0	; () banked
  4362  000148  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4363  00014A  0100               	movlb	0	; () banked
  4364  00014C  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4368  00014E  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4369  000152  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4370  000156  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4371  00015A  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4372  00015E  0E05               	movlw	5
  4373  000160                     u2495:
  4374  000160  90D8               	bcf	status,0,c
  4375  000162  0100               	movlb	0	; () banked
  4376  000164  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4377  000166  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4378  000168  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4379  00016A  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4380  00016C  2EE8               	decfsz	wreg,f,c
  4381  00016E  D7F8               	goto	u2495
  4382  000170  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4383  000174  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4384  000178  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4385  00017C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4389  000180  C06A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4390  000184                     l2698:
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;inc\CANlib.h: 763: }
  4394                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4395  000184  0100               	movlb	0	; () banked
  4396  000186  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4397  000188  A4D8               	btfss	status,2,c
  4398  00018A  D058               	goto	l2716
  4399                           
  4400                           ; BSR set to: 0
  4401  00018C  0100               	movlb	0	; () banked
  4402  00018E  2964               	incf	CANSetFilter@type& (0+255),w,b
  4403  000190  A4D8               	btfss	status,2,c
  4404  000192  D054               	goto	l2716
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;inc\CANlib.h: 766: {
  4408                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4409  000194  010F               	movlb	15	; () banked
  4410  000196  9705               	bcf	5,3,b	;volatile
  4411                           
  4412                           ; BSR set to: 15
  4413                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4414  000198  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4415  00019C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4416  0001A0  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4417  0001A4  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4418  0001A8  0E04               	movlw	4
  4419  0001AA  D006               	goto	u2520
  4420  0001AC                     u2525:
  4421  0001AC  0100               	movlb	0	; () banked
  4422  0001AE  90D8               	bcf	status,0,c
  4423  0001B0  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4424  0001B2  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4425  0001B4  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4426  0001B6  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4427  0001B8                     u2520:
  4428  0001B8  2EE8               	decfsz	wreg,f,c
  4429  0001BA  D7F8               	goto	u2525
  4430  0001BC  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4431  0001C0  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4432  0001C4  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4433  0001C8  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4437  0001CC  0100               	movlb	0	; () banked
  4438  0001CE  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4439  0001D0  0100               	movlb	0	; () banked
  4440  0001D2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4441  0001D4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4442  0001D6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4443  0001D8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4447  0001DA  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4451  0001DE  0E07               	movlw	7
  4452  0001E0  0100               	movlb	0	; () banked
  4453  0001E2  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4454  0001E4  0100               	movlb	0	; () banked
  4455  0001E6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4456  0001E8  0E00               	movlw	0
  4457  0001EA  0100               	movlb	0	; () banked
  4458  0001EC  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4459  0001EE  0100               	movlb	0	; () banked
  4460  0001F0  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4461  0001F2  0E00               	movlw	0
  4462  0001F4  0100               	movlb	0	; () banked
  4463  0001F6  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4464  0001F8  0100               	movlb	0	; () banked
  4465  0001FA  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4466  0001FC  0E00               	movlw	0
  4467  0001FE  0100               	movlb	0	; () banked
  4468  000200  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4469  000202  0100               	movlb	0	; () banked
  4470  000204  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4474  000206  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4475  00020A  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4476  00020E  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4477  000212  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4478  000216  0E05               	movlw	5
  4479  000218                     u2535:
  4480  000218  90D8               	bcf	status,0,c
  4481  00021A  0100               	movlb	0	; () banked
  4482  00021C  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4483  00021E  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4484  000220  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4485  000222  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4486  000224  2EE8               	decfsz	wreg,f,c
  4487  000226  D7F8               	goto	u2535
  4488  000228  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4489  00022C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4490  000230  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4491  000234  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4495  000238  C06A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4496  00023C                     l2716:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 776: }
  4500                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4501  00023C  0E02               	movlw	2
  4502  00023E  0100               	movlb	0	; () banked
  4503  000240  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4504  000242  A4D8               	btfss	status,2,c
  4505  000244  D058               	goto	l2734
  4506                           
  4507                           ; BSR set to: 0
  4508  000246  0100               	movlb	0	; () banked
  4509  000248  2964               	incf	CANSetFilter@type& (0+255),w,b
  4510  00024A  A4D8               	btfss	status,2,c
  4511  00024C  D054               	goto	l2734
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;inc\CANlib.h: 779: {
  4515                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4516  00024E  010F               	movlb	15	; () banked
  4517  000250  9709               	bcf	9,3,b	;volatile
  4518                           
  4519                           ; BSR set to: 15
  4520                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4521  000252  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4522  000256  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4523  00025A  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4524  00025E  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4525  000262  0E04               	movlw	4
  4526  000264  D006               	goto	u2560
  4527  000266                     u2565:
  4528  000266  0100               	movlb	0	; () banked
  4529  000268  90D8               	bcf	status,0,c
  4530  00026A  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4531  00026C  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4532  00026E  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4533  000270  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4534  000272                     u2560:
  4535  000272  2EE8               	decfsz	wreg,f,c
  4536  000274  D7F8               	goto	u2565
  4537  000276  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4538  00027A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4539  00027E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4540  000282  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4544  000286  0100               	movlb	0	; () banked
  4545  000288  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4546  00028A  0100               	movlb	0	; () banked
  4547  00028C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4548  00028E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4549  000290  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4550  000292  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4554  000294  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4558  000298  0E07               	movlw	7
  4559  00029A  0100               	movlb	0	; () banked
  4560  00029C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4561  00029E  0100               	movlb	0	; () banked
  4562  0002A0  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4563  0002A2  0E00               	movlw	0
  4564  0002A4  0100               	movlb	0	; () banked
  4565  0002A6  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4566  0002A8  0100               	movlb	0	; () banked
  4567  0002AA  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4568  0002AC  0E00               	movlw	0
  4569  0002AE  0100               	movlb	0	; () banked
  4570  0002B0  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4571  0002B2  0100               	movlb	0	; () banked
  4572  0002B4  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4573  0002B6  0E00               	movlw	0
  4574  0002B8  0100               	movlb	0	; () banked
  4575  0002BA  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4576  0002BC  0100               	movlb	0	; () banked
  4577  0002BE  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4581  0002C0  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4582  0002C4  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4583  0002C8  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4584  0002CC  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4585  0002D0  0E05               	movlw	5
  4586  0002D2                     u2575:
  4587  0002D2  90D8               	bcf	status,0,c
  4588  0002D4  0100               	movlb	0	; () banked
  4589  0002D6  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4590  0002D8  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4591  0002DA  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4592  0002DC  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4593  0002DE  2EE8               	decfsz	wreg,f,c
  4594  0002E0  D7F8               	goto	u2575
  4595  0002E2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4596  0002E6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4597  0002EA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4598  0002EE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4602  0002F2  C06A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4603  0002F6                     l2734:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;inc\CANlib.h: 789: }
  4607                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4608  0002F6  0E03               	movlw	3
  4609  0002F8  0100               	movlb	0	; () banked
  4610  0002FA  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4611  0002FC  A4D8               	btfss	status,2,c
  4612  0002FE  D058               	goto	l2752
  4613                           
  4614                           ; BSR set to: 0
  4615  000300  0100               	movlb	0	; () banked
  4616  000302  2964               	incf	CANSetFilter@type& (0+255),w,b
  4617  000304  A4D8               	btfss	status,2,c
  4618  000306  D054               	goto	l2752
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;inc\CANlib.h: 792: {
  4622                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4623  000308  010F               	movlb	15	; () banked
  4624  00030A  970D               	bcf	13,3,b	;volatile
  4625                           
  4626                           ; BSR set to: 15
  4627                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4628  00030C  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4629  000310  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4630  000314  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4631  000318  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4632  00031C  0E04               	movlw	4
  4633  00031E  D006               	goto	u2600
  4634  000320                     u2605:
  4635  000320  0100               	movlb	0	; () banked
  4636  000322  90D8               	bcf	status,0,c
  4637  000324  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4638  000326  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4639  000328  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4640  00032A  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4641  00032C                     u2600:
  4642  00032C  2EE8               	decfsz	wreg,f,c
  4643  00032E  D7F8               	goto	u2605
  4644  000330  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4645  000334  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4646  000338  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4647  00033C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4651  000340  0100               	movlb	0	; () banked
  4652  000342  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4653  000344  0100               	movlb	0	; () banked
  4654  000346  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4655  000348  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4656  00034A  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4657  00034C  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4661  00034E  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4665  000352  0E07               	movlw	7
  4666  000354  0100               	movlb	0	; () banked
  4667  000356  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4668  000358  0100               	movlb	0	; () banked
  4669  00035A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4670  00035C  0E00               	movlw	0
  4671  00035E  0100               	movlb	0	; () banked
  4672  000360  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4673  000362  0100               	movlb	0	; () banked
  4674  000364  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4675  000366  0E00               	movlw	0
  4676  000368  0100               	movlb	0	; () banked
  4677  00036A  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4678  00036C  0100               	movlb	0	; () banked
  4679  00036E  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4680  000370  0E00               	movlw	0
  4681  000372  0100               	movlb	0	; () banked
  4682  000374  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4683  000376  0100               	movlb	0	; () banked
  4684  000378  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4688  00037A  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4689  00037E  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4690  000382  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4691  000386  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4692  00038A  0E05               	movlw	5
  4693  00038C                     u2615:
  4694  00038C  90D8               	bcf	status,0,c
  4695  00038E  0100               	movlb	0	; () banked
  4696  000390  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4697  000392  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4698  000394  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4699  000396  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4700  000398  2EE8               	decfsz	wreg,f,c
  4701  00039A  D7F8               	goto	u2615
  4702  00039C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4703  0003A0  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4704  0003A4  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4705  0003A8  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4709  0003AC  C06A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4710  0003B0                     l2752:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;inc\CANlib.h: 802: }
  4714                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4715  0003B0  0E04               	movlw	4
  4716  0003B2  0100               	movlb	0	; () banked
  4717  0003B4  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4718  0003B6  A4D8               	btfss	status,2,c
  4719  0003B8  D058               	goto	l2770
  4720                           
  4721                           ; BSR set to: 0
  4722  0003BA  0100               	movlb	0	; () banked
  4723  0003BC  2964               	incf	CANSetFilter@type& (0+255),w,b
  4724  0003BE  A4D8               	btfss	status,2,c
  4725  0003C0  D054               	goto	l2770
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;inc\CANlib.h: 805: {
  4729                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4730  0003C2  010F               	movlb	15	; () banked
  4731  0003C4  9711               	bcf	17,3,b	;volatile
  4732                           
  4733                           ; BSR set to: 15
  4734                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4735  0003C6  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4736  0003CA  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4737  0003CE  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4738  0003D2  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4739  0003D6  0E04               	movlw	4
  4740  0003D8  D006               	goto	u2640
  4741  0003DA                     u2645:
  4742  0003DA  0100               	movlb	0	; () banked
  4743  0003DC  90D8               	bcf	status,0,c
  4744  0003DE  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4745  0003E0  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4746  0003E2  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4747  0003E4  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4748  0003E6                     u2640:
  4749  0003E6  2EE8               	decfsz	wreg,f,c
  4750  0003E8  D7F8               	goto	u2645
  4751  0003EA  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4752  0003EE  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4753  0003F2  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4754  0003F6  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4758  0003FA  0100               	movlb	0	; () banked
  4759  0003FC  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4760  0003FE  0100               	movlb	0	; () banked
  4761  000400  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4762  000402  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4763  000404  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4764  000406  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4768  000408  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4772  00040C  0E07               	movlw	7
  4773  00040E  0100               	movlb	0	; () banked
  4774  000410  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4775  000412  0100               	movlb	0	; () banked
  4776  000414  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4777  000416  0E00               	movlw	0
  4778  000418  0100               	movlb	0	; () banked
  4779  00041A  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4780  00041C  0100               	movlb	0	; () banked
  4781  00041E  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4782  000420  0E00               	movlw	0
  4783  000422  0100               	movlb	0	; () banked
  4784  000424  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4785  000426  0100               	movlb	0	; () banked
  4786  000428  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4787  00042A  0E00               	movlw	0
  4788  00042C  0100               	movlb	0	; () banked
  4789  00042E  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4790  000430  0100               	movlb	0	; () banked
  4791  000432  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4795  000434  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4796  000438  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4797  00043C  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4798  000440  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4799  000444  0E05               	movlw	5
  4800  000446                     u2655:
  4801  000446  90D8               	bcf	status,0,c
  4802  000448  0100               	movlb	0	; () banked
  4803  00044A  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4804  00044C  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4805  00044E  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4806  000450  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4807  000452  2EE8               	decfsz	wreg,f,c
  4808  000454  D7F8               	goto	u2655
  4809  000456  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4810  00045A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4811  00045E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4812  000462  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4816  000466  C06A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4817  00046A                     l2770:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;inc\CANlib.h: 815: }
  4821                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4822  00046A  0E05               	movlw	5
  4823  00046C  0100               	movlb	0	; () banked
  4824  00046E  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4825  000470  A4D8               	btfss	status,2,c
  4826  000472  D058               	goto	l2788
  4827                           
  4828                           ; BSR set to: 0
  4829  000474  0100               	movlb	0	; () banked
  4830  000476  2964               	incf	CANSetFilter@type& (0+255),w,b
  4831  000478  A4D8               	btfss	status,2,c
  4832  00047A  D054               	goto	l2788
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;inc\CANlib.h: 818: {
  4836                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4837  00047C  010F               	movlb	15	; () banked
  4838  00047E  9715               	bcf	21,3,b	;volatile
  4839                           
  4840                           ; BSR set to: 15
  4841                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4842  000480  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  4843  000484  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4844  000488  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4845  00048C  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4846  000490  0E04               	movlw	4
  4847  000492  D006               	goto	u2680
  4848  000494                     u2685:
  4849  000494  0100               	movlb	0	; () banked
  4850  000496  90D8               	bcf	status,0,c
  4851  000498  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4852  00049A  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4853  00049C  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4854  00049E  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  4855  0004A0                     u2680:
  4856  0004A0  2EE8               	decfsz	wreg,f,c
  4857  0004A2  D7F8               	goto	u2685
  4858  0004A4  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4859  0004A8  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4860  0004AC  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4861  0004B0  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4865  0004B4  0100               	movlb	0	; () banked
  4866  0004B6  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  4867  0004B8  0100               	movlb	0	; () banked
  4868  0004BA  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4869  0004BC  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4870  0004BE  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4871  0004C0  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4875  0004C2  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4879  0004C6  0E07               	movlw	7
  4880  0004C8  0100               	movlb	0	; () banked
  4881  0004CA  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4882  0004CC  0100               	movlb	0	; () banked
  4883  0004CE  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4884  0004D0  0E00               	movlw	0
  4885  0004D2  0100               	movlb	0	; () banked
  4886  0004D4  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4887  0004D6  0100               	movlb	0	; () banked
  4888  0004D8  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4889  0004DA  0E00               	movlw	0
  4890  0004DC  0100               	movlb	0	; () banked
  4891  0004DE  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4892  0004E0  0100               	movlb	0	; () banked
  4893  0004E2  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4894  0004E4  0E00               	movlw	0
  4895  0004E6  0100               	movlb	0	; () banked
  4896  0004E8  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4897  0004EA  0100               	movlb	0	; () banked
  4898  0004EC  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4902  0004EE  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4903  0004F2  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4904  0004F6  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4905  0004FA  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4906  0004FE  0E05               	movlw	5
  4907  000500                     u2695:
  4908  000500  90D8               	bcf	status,0,c
  4909  000502  0100               	movlb	0	; () banked
  4910  000504  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  4911  000506  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4912  000508  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4913  00050A  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4914  00050C  2EE8               	decfsz	wreg,f,c
  4915  00050E  D7F8               	goto	u2695
  4916  000510  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4917  000514  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4918  000518  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4919  00051C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4923  000520  C06A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4924  000524                     l2788:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;inc\CANlib.h: 828: }
  4928                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4929  000524  0100               	movlb	0	; () banked
  4930  000526  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4931  000528  0100               	movlb	0	; () banked
  4932  00052A  A4D8               	btfss	status,2,c
  4933  00052C  D089               	goto	l2822
  4934                           
  4935                           ; BSR set to: 0
  4936  00052E  0EF7               	movlw	247
  4937  000530  0100               	movlb	0	; () banked
  4938  000532  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  4939  000534  A4D8               	btfss	status,2,c
  4940  000536  D084               	goto	l2822
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;inc\CANlib.h: 832: {
  4944                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4945  000538  010F               	movlb	15	; () banked
  4946  00053A  8701               	bsf	1,3,b	;volatile
  4947                           
  4948                           ; BSR set to: 15
  4949                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4950  00053C  0100               	movlb	0	; () banked
  4951  00053E  5160               	movf	CANSetFilter@filter& (0+255),w,b
  4952  000540  0100               	movlb	0	; () banked
  4953  000542  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4954  000544  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4955  000546  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4956  000548  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4960  00054A  C06A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4964  00054E  0E00               	movlw	0
  4965  000550  0100               	movlb	0	; () banked
  4966  000552  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  4967  000554  0100               	movlb	0	; () banked
  4968  000556  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  4969  000558  0EFF               	movlw	255
  4970  00055A  0100               	movlb	0	; () banked
  4971  00055C  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4972  00055E  0100               	movlb	0	; () banked
  4973  000560  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4974  000562  0E00               	movlw	0
  4975  000564  0100               	movlb	0	; () banked
  4976  000566  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4977  000568  0100               	movlb	0	; () banked
  4978  00056A  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4979  00056C  0E00               	movlw	0
  4980  00056E  0100               	movlb	0	; () banked
  4981  000570  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4982  000572  0100               	movlb	0	; () banked
  4983  000574  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4987  000576  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  4988  00057A  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4989  00057E  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4990  000582  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4991  000586  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  4992  00058A  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4993  00058E  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4994  000592  0100               	movlb	0	; () banked
  4995  000594  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  4996  000596  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4997  00059A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4998  00059E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4999  0005A2  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5003  0005A6  C06A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5007  0005AA  0100               	movlb	0	; () banked
  5008  0005AC  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5009  0005AE  D003               	goto	l465
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5013  0005B0  010F               	movlb	15	; () banked
  5014  0005B2  8101               	bsf	1,0,b	;volatile
  5015  0005B4  D002               	goto	l466
  5016  0005B6                     l465:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 844: else
  5020                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5021  0005B6  010F               	movlb	15	; () banked
  5022  0005B8  9101               	bcf	1,0,b	;volatile
  5023  0005BA                     l466:
  5024                           
  5025                           ; BSR set to: 15
  5026                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5027  0005BA  0100               	movlb	0	; () banked
  5028  0005BC  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5029  0005BE  D003               	goto	l467
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5033  0005C0  010F               	movlb	15	; () banked
  5034  0005C2  8301               	bsf	1,1,b	;volatile
  5035  0005C4  D002               	goto	l468
  5036  0005C6                     l467:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;inc\CANlib.h: 849: else
  5040                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5041  0005C6  010F               	movlb	15	; () banked
  5042  0005C8  9301               	bcf	1,1,b	;volatile
  5043  0005CA                     l468:
  5044                           
  5045                           ; BSR set to: 15
  5046                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5047  0005CA  0100               	movlb	0	; () banked
  5048  0005CC  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5049  0005CE  D003               	goto	l469
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5053  0005D0  010F               	movlb	15	; () banked
  5054  0005D2  8B01               	bsf	1,5,b	;volatile
  5055  0005D4  D002               	goto	l470
  5056  0005D6                     l469:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;inc\CANlib.h: 854: else
  5060                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5061  0005D6  010F               	movlb	15	; () banked
  5062  0005D8  9B01               	bcf	1,5,b	;volatile
  5063  0005DA                     l470:
  5064                           
  5065                           ; BSR set to: 15
  5066                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5067  0005DA  0100               	movlb	0	; () banked
  5068  0005DC  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5069  0005DE  D003               	goto	l471
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5073  0005E0  010F               	movlb	15	; () banked
  5074  0005E2  8D01               	bsf	1,6,b	;volatile
  5075  0005E4  D002               	goto	l472
  5076  0005E6                     l471:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 859: else
  5080                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5081  0005E6  010F               	movlb	15	; () banked
  5082  0005E8  9D01               	bcf	1,6,b	;volatile
  5083  0005EA                     l472:
  5084                           
  5085                           ; BSR set to: 15
  5086                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5087  0005EA  0100               	movlb	0	; () banked
  5088  0005EC  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5089  0005EE  D003               	goto	l473
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5093  0005F0  010F               	movlb	15	; () banked
  5094  0005F2  8F01               	bsf	1,7,b	;volatile
  5095  0005F4  D002               	goto	l2816
  5096  0005F6                     l473:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;inc\CANlib.h: 864: else
  5100                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5101  0005F6  010F               	movlb	15	; () banked
  5102  0005F8  9F01               	bcf	1,7,b	;volatile
  5103  0005FA                     l2816:
  5104                           
  5105                           ; BSR set to: 15
  5106                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5107  0005FA  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5108  0005FE  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5109  000602  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5110  000606  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5111  00060A  0E16               	movlw	22
  5112  00060C  D006               	goto	u2770
  5113  00060E                     u2775:
  5114  00060E  0100               	movlb	0	; () banked
  5115  000610  90D8               	bcf	status,0,c
  5116  000612  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5117  000614  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5118  000616  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5119  000618  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5120  00061A                     u2770:
  5121  00061A  2EE8               	decfsz	wreg,f,c
  5122  00061C  D7F8               	goto	u2775
  5123  00061E  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5124  000622  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5125  000626  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5126  00062A  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5130  00062E  0100               	movlb	0	; () banked
  5131  000630  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5132  000632  0100               	movlb	0	; () banked
  5133  000634  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5134  000636  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5135  000638  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5136  00063A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5140  00063C  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5141  000640                     l2822:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;inc\CANlib.h: 870: }
  5145                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5146  000640  0100               	movlb	0	; () banked
  5147  000642  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5148  000644  A4D8               	btfss	status,2,c
  5149  000646  D089               	goto	l2856
  5150                           
  5151                           ; BSR set to: 0
  5152  000648  0EF7               	movlw	247
  5153  00064A  0100               	movlb	0	; () banked
  5154  00064C  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5155  00064E  A4D8               	btfss	status,2,c
  5156  000650  D084               	goto	l2856
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;inc\CANlib.h: 873: {
  5160                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5161  000652  010F               	movlb	15	; () banked
  5162  000654  8705               	bsf	5,3,b	;volatile
  5163                           
  5164                           ; BSR set to: 15
  5165                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5166  000656  0100               	movlb	0	; () banked
  5167  000658  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5168  00065A  0100               	movlb	0	; () banked
  5169  00065C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5170  00065E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5171  000660  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5172  000662  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5176  000664  C06A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5180  000668  0E00               	movlw	0
  5181  00066A  0100               	movlb	0	; () banked
  5182  00066C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5183  00066E  0100               	movlb	0	; () banked
  5184  000670  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5185  000672  0EFF               	movlw	255
  5186  000674  0100               	movlb	0	; () banked
  5187  000676  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5188  000678  0100               	movlb	0	; () banked
  5189  00067A  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5190  00067C  0E00               	movlw	0
  5191  00067E  0100               	movlb	0	; () banked
  5192  000680  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5193  000682  0100               	movlb	0	; () banked
  5194  000684  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5195  000686  0E00               	movlw	0
  5196  000688  0100               	movlb	0	; () banked
  5197  00068A  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5198  00068C  0100               	movlb	0	; () banked
  5199  00068E  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5203  000690  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5204  000694  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5205  000698  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5206  00069C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5207  0006A0  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5208  0006A4  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5209  0006A8  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5210  0006AC  0100               	movlb	0	; () banked
  5211  0006AE  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5212  0006B0  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5213  0006B4  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5214  0006B8  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5215  0006BC  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5219  0006C0  C06A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5223  0006C4  0100               	movlb	0	; () banked
  5224  0006C6  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5225  0006C8  D003               	goto	l476
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5229  0006CA  010F               	movlb	15	; () banked
  5230  0006CC  8105               	bsf	5,0,b	;volatile
  5231  0006CE  D002               	goto	l477
  5232  0006D0                     l476:
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 885: else
  5236                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5237  0006D0  010F               	movlb	15	; () banked
  5238  0006D2  9105               	bcf	5,0,b	;volatile
  5239  0006D4                     l477:
  5240                           
  5241                           ; BSR set to: 15
  5242                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5243  0006D4  0100               	movlb	0	; () banked
  5244  0006D6  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5245  0006D8  D003               	goto	l478
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5249  0006DA  010F               	movlb	15	; () banked
  5250  0006DC  8305               	bsf	5,1,b	;volatile
  5251  0006DE  D002               	goto	l479
  5252  0006E0                     l478:
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;inc\CANlib.h: 890: else
  5256                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5257  0006E0  010F               	movlb	15	; () banked
  5258  0006E2  9305               	bcf	5,1,b	;volatile
  5259  0006E4                     l479:
  5260                           
  5261                           ; BSR set to: 15
  5262                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5263  0006E4  0100               	movlb	0	; () banked
  5264  0006E6  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5265  0006E8  D003               	goto	l480
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5269  0006EA  010F               	movlb	15	; () banked
  5270  0006EC  8B05               	bsf	5,5,b	;volatile
  5271  0006EE  D002               	goto	l481
  5272  0006F0                     l480:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 895: else
  5276                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5277  0006F0  010F               	movlb	15	; () banked
  5278  0006F2  9B05               	bcf	5,5,b	;volatile
  5279  0006F4                     l481:
  5280                           
  5281                           ; BSR set to: 15
  5282                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5283  0006F4  0100               	movlb	0	; () banked
  5284  0006F6  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5285  0006F8  D003               	goto	l482
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5289  0006FA  010F               	movlb	15	; () banked
  5290  0006FC  8D05               	bsf	5,6,b	;volatile
  5291  0006FE  D002               	goto	l483
  5292  000700                     l482:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;inc\CANlib.h: 900: else
  5296                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5297  000700  010F               	movlb	15	; () banked
  5298  000702  9D05               	bcf	5,6,b	;volatile
  5299  000704                     l483:
  5300                           
  5301                           ; BSR set to: 15
  5302                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5303  000704  0100               	movlb	0	; () banked
  5304  000706  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5305  000708  D003               	goto	l484
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5309  00070A  010F               	movlb	15	; () banked
  5310  00070C  8F05               	bsf	5,7,b	;volatile
  5311  00070E  D002               	goto	l2850
  5312  000710                     l484:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 905: else
  5316                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5317  000710  010F               	movlb	15	; () banked
  5318  000712  9F05               	bcf	5,7,b	;volatile
  5319  000714                     l2850:
  5320                           
  5321                           ; BSR set to: 15
  5322                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5323  000714  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5324  000718  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5325  00071C  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5326  000720  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5327  000724  0E16               	movlw	22
  5328  000726  D006               	goto	u2850
  5329  000728                     u2855:
  5330  000728  0100               	movlb	0	; () banked
  5331  00072A  90D8               	bcf	status,0,c
  5332  00072C  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5333  00072E  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5334  000730  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5335  000732  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5336  000734                     u2850:
  5337  000734  2EE8               	decfsz	wreg,f,c
  5338  000736  D7F8               	goto	u2855
  5339  000738  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5340  00073C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5341  000740  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5342  000744  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5346  000748  0100               	movlb	0	; () banked
  5347  00074A  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5348  00074C  0100               	movlb	0	; () banked
  5349  00074E  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5350  000750  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5351  000752  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5352  000754  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5356  000756  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5357  00075A                     l2856:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;inc\CANlib.h: 911: }
  5361                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5362  00075A  0E02               	movlw	2
  5363  00075C  0100               	movlb	0	; () banked
  5364  00075E  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5365  000760  A4D8               	btfss	status,2,c
  5366  000762  D089               	goto	l2890
  5367                           
  5368                           ; BSR set to: 0
  5369  000764  0EF7               	movlw	247
  5370  000766  0100               	movlb	0	; () banked
  5371  000768  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5372  00076A  A4D8               	btfss	status,2,c
  5373  00076C  D084               	goto	l2890
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;inc\CANlib.h: 915: {
  5377                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5378  00076E  010F               	movlb	15	; () banked
  5379  000770  8709               	bsf	9,3,b	;volatile
  5380                           
  5381                           ; BSR set to: 15
  5382                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5383  000772  0100               	movlb	0	; () banked
  5384  000774  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5385  000776  0100               	movlb	0	; () banked
  5386  000778  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5387  00077A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5388  00077C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5389  00077E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5393  000780  C06A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5397  000784  0E00               	movlw	0
  5398  000786  0100               	movlb	0	; () banked
  5399  000788  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5400  00078A  0100               	movlb	0	; () banked
  5401  00078C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5402  00078E  0EFF               	movlw	255
  5403  000790  0100               	movlb	0	; () banked
  5404  000792  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5405  000794  0100               	movlb	0	; () banked
  5406  000796  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5407  000798  0E00               	movlw	0
  5408  00079A  0100               	movlb	0	; () banked
  5409  00079C  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5410  00079E  0100               	movlb	0	; () banked
  5411  0007A0  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5412  0007A2  0E00               	movlw	0
  5413  0007A4  0100               	movlb	0	; () banked
  5414  0007A6  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5415  0007A8  0100               	movlb	0	; () banked
  5416  0007AA  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5420  0007AC  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5421  0007B0  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5422  0007B4  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5423  0007B8  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5424  0007BC  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5425  0007C0  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5426  0007C4  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5427  0007C8  0100               	movlb	0	; () banked
  5428  0007CA  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5429  0007CC  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5430  0007D0  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5431  0007D4  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5432  0007D8  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5436  0007DC  C06A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5440  0007E0  0100               	movlb	0	; () banked
  5441  0007E2  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5442  0007E4  D003               	goto	l487
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5446  0007E6  010F               	movlb	15	; () banked
  5447  0007E8  8109               	bsf	9,0,b	;volatile
  5448  0007EA  D002               	goto	l488
  5449  0007EC                     l487:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 927: else
  5453                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5454  0007EC  010F               	movlb	15	; () banked
  5455  0007EE  9109               	bcf	9,0,b	;volatile
  5456  0007F0                     l488:
  5457                           
  5458                           ; BSR set to: 15
  5459                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5460  0007F0  0100               	movlb	0	; () banked
  5461  0007F2  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5462  0007F4  D003               	goto	l489
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5466  0007F6  010F               	movlb	15	; () banked
  5467  0007F8  8309               	bsf	9,1,b	;volatile
  5468  0007FA  D002               	goto	l490
  5469  0007FC                     l489:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;inc\CANlib.h: 932: else
  5473                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5474  0007FC  010F               	movlb	15	; () banked
  5475  0007FE  9309               	bcf	9,1,b	;volatile
  5476  000800                     l490:
  5477                           
  5478                           ; BSR set to: 15
  5479                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5480  000800  0100               	movlb	0	; () banked
  5481  000802  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5482  000804  D003               	goto	l491
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5486  000806  010F               	movlb	15	; () banked
  5487  000808  8B09               	bsf	9,5,b	;volatile
  5488  00080A  D002               	goto	l492
  5489  00080C                     l491:
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 937: else
  5493                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5494  00080C  010F               	movlb	15	; () banked
  5495  00080E  9B09               	bcf	9,5,b	;volatile
  5496  000810                     l492:
  5497                           
  5498                           ; BSR set to: 15
  5499                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5500  000810  0100               	movlb	0	; () banked
  5501  000812  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5502  000814  D003               	goto	l493
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5506  000816  010F               	movlb	15	; () banked
  5507  000818  8D09               	bsf	9,6,b	;volatile
  5508  00081A  D002               	goto	l494
  5509  00081C                     l493:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;inc\CANlib.h: 942: else
  5513                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5514  00081C  010F               	movlb	15	; () banked
  5515  00081E  9D09               	bcf	9,6,b	;volatile
  5516  000820                     l494:
  5517                           
  5518                           ; BSR set to: 15
  5519                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5520  000820  0100               	movlb	0	; () banked
  5521  000822  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5522  000824  D003               	goto	l495
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5526  000826  010F               	movlb	15	; () banked
  5527  000828  8F09               	bsf	9,7,b	;volatile
  5528  00082A  D002               	goto	l2884
  5529  00082C                     l495:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 947: else
  5533                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5534  00082C  010F               	movlb	15	; () banked
  5535  00082E  9F09               	bcf	9,7,b	;volatile
  5536  000830                     l2884:
  5537                           
  5538                           ; BSR set to: 15
  5539                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5540  000830  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5541  000834  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5542  000838  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5543  00083C  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5544  000840  0E16               	movlw	22
  5545  000842  D006               	goto	u2930
  5546  000844                     u2935:
  5547  000844  0100               	movlb	0	; () banked
  5548  000846  90D8               	bcf	status,0,c
  5549  000848  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5550  00084A  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5551  00084C  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5552  00084E  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5553  000850                     u2930:
  5554  000850  2EE8               	decfsz	wreg,f,c
  5555  000852  D7F8               	goto	u2935
  5556  000854  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5557  000858  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5558  00085C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5559  000860  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5563  000864  0100               	movlb	0	; () banked
  5564  000866  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5565  000868  0100               	movlb	0	; () banked
  5566  00086A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5567  00086C  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5568  00086E  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5569  000870  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5573  000872  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5574  000876                     l2890:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;inc\CANlib.h: 953: }
  5578                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5579  000876  0E03               	movlw	3
  5580  000878  0100               	movlb	0	; () banked
  5581  00087A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5582  00087C  A4D8               	btfss	status,2,c
  5583  00087E  D089               	goto	l2924
  5584                           
  5585                           ; BSR set to: 0
  5586  000880  0EF7               	movlw	247
  5587  000882  0100               	movlb	0	; () banked
  5588  000884  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5589  000886  A4D8               	btfss	status,2,c
  5590  000888  D084               	goto	l2924
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;inc\CANlib.h: 956: {
  5594                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5595  00088A  010F               	movlb	15	; () banked
  5596  00088C  870D               	bsf	13,3,b	;volatile
  5597                           
  5598                           ; BSR set to: 15
  5599                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5600  00088E  0100               	movlb	0	; () banked
  5601  000890  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5602  000892  0100               	movlb	0	; () banked
  5603  000894  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5604  000896  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5605  000898  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5606  00089A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5610  00089C  C06A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5614  0008A0  0E00               	movlw	0
  5615  0008A2  0100               	movlb	0	; () banked
  5616  0008A4  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5617  0008A6  0100               	movlb	0	; () banked
  5618  0008A8  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5619  0008AA  0EFF               	movlw	255
  5620  0008AC  0100               	movlb	0	; () banked
  5621  0008AE  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5622  0008B0  0100               	movlb	0	; () banked
  5623  0008B2  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5624  0008B4  0E00               	movlw	0
  5625  0008B6  0100               	movlb	0	; () banked
  5626  0008B8  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5627  0008BA  0100               	movlb	0	; () banked
  5628  0008BC  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5629  0008BE  0E00               	movlw	0
  5630  0008C0  0100               	movlb	0	; () banked
  5631  0008C2  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5632  0008C4  0100               	movlb	0	; () banked
  5633  0008C6  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5637  0008C8  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5638  0008CC  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5639  0008D0  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5640  0008D4  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5641  0008D8  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5642  0008DC  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5643  0008E0  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5644  0008E4  0100               	movlb	0	; () banked
  5645  0008E6  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5646  0008E8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5647  0008EC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5648  0008F0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5649  0008F4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5653  0008F8  C06A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5657  0008FC  0100               	movlb	0	; () banked
  5658  0008FE  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5659  000900  D003               	goto	l498
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5663  000902  010F               	movlb	15	; () banked
  5664  000904  810D               	bsf	13,0,b	;volatile
  5665  000906  D002               	goto	l499
  5666  000908                     l498:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 968: else
  5670                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5671  000908  010F               	movlb	15	; () banked
  5672  00090A  910D               	bcf	13,0,b	;volatile
  5673  00090C                     l499:
  5674                           
  5675                           ; BSR set to: 15
  5676                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5677  00090C  0100               	movlb	0	; () banked
  5678  00090E  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5679  000910  D003               	goto	l500
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5683  000912  010F               	movlb	15	; () banked
  5684  000914  830D               	bsf	13,1,b	;volatile
  5685  000916  D002               	goto	l501
  5686  000918                     l500:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 973: else
  5690                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5691  000918  010F               	movlb	15	; () banked
  5692  00091A  930D               	bcf	13,1,b	;volatile
  5693  00091C                     l501:
  5694                           
  5695                           ; BSR set to: 15
  5696                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5697  00091C  0100               	movlb	0	; () banked
  5698  00091E  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5699  000920  D003               	goto	l502
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5703  000922  010F               	movlb	15	; () banked
  5704  000924  8B0D               	bsf	13,5,b	;volatile
  5705  000926  D002               	goto	l503
  5706  000928                     l502:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;inc\CANlib.h: 978: else
  5710                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5711  000928  010F               	movlb	15	; () banked
  5712  00092A  9B0D               	bcf	13,5,b	;volatile
  5713  00092C                     l503:
  5714                           
  5715                           ; BSR set to: 15
  5716                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5717  00092C  0100               	movlb	0	; () banked
  5718  00092E  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5719  000930  D003               	goto	l504
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5723  000932  010F               	movlb	15	; () banked
  5724  000934  8D0D               	bsf	13,6,b	;volatile
  5725  000936  D002               	goto	l505
  5726  000938                     l504:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;inc\CANlib.h: 983: else
  5730                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5731  000938  010F               	movlb	15	; () banked
  5732  00093A  9D0D               	bcf	13,6,b	;volatile
  5733  00093C                     l505:
  5734                           
  5735                           ; BSR set to: 15
  5736                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5737  00093C  0100               	movlb	0	; () banked
  5738  00093E  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5739  000940  D003               	goto	l506
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5743  000942  010F               	movlb	15	; () banked
  5744  000944  8F0D               	bsf	13,7,b	;volatile
  5745  000946  D002               	goto	l2918
  5746  000948                     l506:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;inc\CANlib.h: 988: else
  5750                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5751  000948  010F               	movlb	15	; () banked
  5752  00094A  9F0D               	bcf	13,7,b	;volatile
  5753  00094C                     l2918:
  5754                           
  5755                           ; BSR set to: 15
  5756                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5757  00094C  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5758  000950  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5759  000954  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5760  000958  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5761  00095C  0E16               	movlw	22
  5762  00095E  D006               	goto	u3010
  5763  000960                     u3015:
  5764  000960  0100               	movlb	0	; () banked
  5765  000962  90D8               	bcf	status,0,c
  5766  000964  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5767  000966  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5768  000968  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5769  00096A  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5770  00096C                     u3010:
  5771  00096C  2EE8               	decfsz	wreg,f,c
  5772  00096E  D7F8               	goto	u3015
  5773  000970  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5774  000974  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5775  000978  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5776  00097C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5780  000980  0100               	movlb	0	; () banked
  5781  000982  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5782  000984  0100               	movlb	0	; () banked
  5783  000986  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5784  000988  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5785  00098A  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5786  00098C  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5790  00098E  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5791  000992                     l2924:
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;inc\CANlib.h: 994: }
  5795                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5796  000992  0E04               	movlw	4
  5797  000994  0100               	movlb	0	; () banked
  5798  000996  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5799  000998  A4D8               	btfss	status,2,c
  5800  00099A  D089               	goto	l2958
  5801                           
  5802                           ; BSR set to: 0
  5803  00099C  0EF7               	movlw	247
  5804  00099E  0100               	movlb	0	; () banked
  5805  0009A0  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  5806  0009A2  A4D8               	btfss	status,2,c
  5807  0009A4  D084               	goto	l2958
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;inc\CANlib.h: 997: {
  5811                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5812  0009A6  010F               	movlb	15	; () banked
  5813  0009A8  8711               	bsf	17,3,b	;volatile
  5814                           
  5815                           ; BSR set to: 15
  5816                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5817  0009AA  0100               	movlb	0	; () banked
  5818  0009AC  5160               	movf	CANSetFilter@filter& (0+255),w,b
  5819  0009AE  0100               	movlb	0	; () banked
  5820  0009B0  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5821  0009B2  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5822  0009B4  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5823  0009B6  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5827  0009B8  C06A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5831  0009BC  0E00               	movlw	0
  5832  0009BE  0100               	movlb	0	; () banked
  5833  0009C0  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  5834  0009C2  0100               	movlb	0	; () banked
  5835  0009C4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  5836  0009C6  0EFF               	movlw	255
  5837  0009C8  0100               	movlb	0	; () banked
  5838  0009CA  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5839  0009CC  0100               	movlb	0	; () banked
  5840  0009CE  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5841  0009D0  0E00               	movlw	0
  5842  0009D2  0100               	movlb	0	; () banked
  5843  0009D4  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5844  0009D6  0100               	movlb	0	; () banked
  5845  0009D8  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5846  0009DA  0E00               	movlw	0
  5847  0009DC  0100               	movlb	0	; () banked
  5848  0009DE  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5849  0009E0  0100               	movlb	0	; () banked
  5850  0009E2  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5854  0009E4  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  5855  0009E8  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5856  0009EC  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5857  0009F0  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5858  0009F4  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  5859  0009F8  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5860  0009FC  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5861  000A00  0100               	movlb	0	; () banked
  5862  000A02  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  5863  000A04  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5864  000A08  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5865  000A0C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5866  000A10  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5870  000A14  C06A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5874  000A18  0100               	movlb	0	; () banked
  5875  000A1A  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5876  000A1C  D003               	goto	l509
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5880  000A1E  010F               	movlb	15	; () banked
  5881  000A20  8111               	bsf	17,0,b	;volatile
  5882  000A22  D002               	goto	l510
  5883  000A24                     l509:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;inc\CANlib.h: 1009: else
  5887                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5888  000A24  010F               	movlb	15	; () banked
  5889  000A26  9111               	bcf	17,0,b	;volatile
  5890  000A28                     l510:
  5891                           
  5892                           ; BSR set to: 15
  5893                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5894  000A28  0100               	movlb	0	; () banked
  5895  000A2A  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5896  000A2C  D003               	goto	l511
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5900  000A2E  010F               	movlb	15	; () banked
  5901  000A30  8311               	bsf	17,1,b	;volatile
  5902  000A32  D002               	goto	l512
  5903  000A34                     l511:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;inc\CANlib.h: 1014: else
  5907                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5908  000A34  010F               	movlb	15	; () banked
  5909  000A36  9311               	bcf	17,1,b	;volatile
  5910  000A38                     l512:
  5911                           
  5912                           ; BSR set to: 15
  5913                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5914  000A38  0100               	movlb	0	; () banked
  5915  000A3A  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5916  000A3C  D003               	goto	l513
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5920  000A3E  010F               	movlb	15	; () banked
  5921  000A40  8B11               	bsf	17,5,b	;volatile
  5922  000A42  D002               	goto	l514
  5923  000A44                     l513:
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;inc\CANlib.h: 1019: else
  5927                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5928  000A44  010F               	movlb	15	; () banked
  5929  000A46  9B11               	bcf	17,5,b	;volatile
  5930  000A48                     l514:
  5931                           
  5932                           ; BSR set to: 15
  5933                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5934  000A48  0100               	movlb	0	; () banked
  5935  000A4A  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5936  000A4C  D003               	goto	l515
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5940  000A4E  010F               	movlb	15	; () banked
  5941  000A50  8D11               	bsf	17,6,b	;volatile
  5942  000A52  D002               	goto	l516
  5943  000A54                     l515:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;inc\CANlib.h: 1024: else
  5947                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5948  000A54  010F               	movlb	15	; () banked
  5949  000A56  9D11               	bcf	17,6,b	;volatile
  5950  000A58                     l516:
  5951                           
  5952                           ; BSR set to: 15
  5953                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5954  000A58  0100               	movlb	0	; () banked
  5955  000A5A  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5956  000A5C  D003               	goto	l517
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5960  000A5E  010F               	movlb	15	; () banked
  5961  000A60  8F11               	bsf	17,7,b	;volatile
  5962  000A62  D002               	goto	l2952
  5963  000A64                     l517:
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;inc\CANlib.h: 1029: else
  5967                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5968  000A64  010F               	movlb	15	; () banked
  5969  000A66  9F11               	bcf	17,7,b	;volatile
  5970  000A68                     l2952:
  5971                           
  5972                           ; BSR set to: 15
  5973                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5974  000A68  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  5975  000A6C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5976  000A70  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5977  000A74  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5978  000A78  0E16               	movlw	22
  5979  000A7A  D006               	goto	u3090
  5980  000A7C                     u3095:
  5981  000A7C  0100               	movlb	0	; () banked
  5982  000A7E  90D8               	bcf	status,0,c
  5983  000A80  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5984  000A82  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5985  000A84  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5986  000A86  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  5987  000A88                     u3090:
  5988  000A88  2EE8               	decfsz	wreg,f,c
  5989  000A8A  D7F8               	goto	u3095
  5990  000A8C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5991  000A90  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5992  000A94  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5993  000A98  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5997  000A9C  0100               	movlb	0	; () banked
  5998  000A9E  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  5999  000AA0  0100               	movlb	0	; () banked
  6000  000AA2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  6001  000AA4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6002  000AA6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6003  000AA8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6007  000AAA  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6008  000AAE                     l2958:
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;inc\CANlib.h: 1035: }
  6012                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6013  000AAE  0E05               	movlw	5
  6014  000AB0  0100               	movlb	0	; () banked
  6015  000AB2  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6016  000AB4  A4D8               	btfss	status,2,c
  6017  000AB6  0012               	return	
  6018                           
  6019                           ; BSR set to: 0
  6020  000AB8  0EF7               	movlw	247
  6021  000ABA  0100               	movlb	0	; () banked
  6022  000ABC  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  6023  000ABE  A4D8               	btfss	status,2,c
  6024  000AC0  0012               	return	
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;inc\CANlib.h: 1038: {
  6028                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6029  000AC2  010F               	movlb	15	; () banked
  6030  000AC4  8715               	bsf	21,3,b	;volatile
  6031                           
  6032                           ; BSR set to: 15
  6033                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6034  000AC6  0100               	movlb	0	; () banked
  6035  000AC8  5160               	movf	CANSetFilter@filter& (0+255),w,b
  6036  000ACA  0100               	movlb	0	; () banked
  6037  000ACC  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  6038  000ACE  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6039  000AD0  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6040  000AD2  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6044  000AD4  C06A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6048  000AD8  0E00               	movlw	0
  6049  000ADA  0100               	movlb	0	; () banked
  6050  000ADC  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  6051  000ADE  0100               	movlb	0	; () banked
  6052  000AE0  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  6053  000AE2  0EFF               	movlw	255
  6054  000AE4  0100               	movlb	0	; () banked
  6055  000AE6  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6056  000AE8  0100               	movlb	0	; () banked
  6057  000AEA  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6058  000AEC  0E00               	movlw	0
  6059  000AEE  0100               	movlb	0	; () banked
  6060  000AF0  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6061  000AF2  0100               	movlb	0	; () banked
  6062  000AF4  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6063  000AF6  0E00               	movlw	0
  6064  000AF8  0100               	movlb	0	; () banked
  6065  000AFA  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6066  000AFC  0100               	movlb	0	; () banked
  6067  000AFE  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6071  000B00  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  6072  000B04  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6073  000B08  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6074  000B0C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6075  000B10  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  6076  000B14  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6077  000B18  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6078  000B1C  0100               	movlb	0	; () banked
  6079  000B1E  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  6080  000B20  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6081  000B24  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6082  000B28  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6083  000B2C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6087  000B30  C06A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6091  000B34  0100               	movlb	0	; () banked
  6092  000B36  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6093  000B38  D003               	goto	l520
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6097  000B3A  010F               	movlb	15	; () banked
  6098  000B3C  8115               	bsf	21,0,b	;volatile
  6099  000B3E  D002               	goto	l521
  6100  000B40                     l520:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;inc\CANlib.h: 1050: else
  6104                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6105  000B40  010F               	movlb	15	; () banked
  6106  000B42  9115               	bcf	21,0,b	;volatile
  6107  000B44                     l521:
  6108                           
  6109                           ; BSR set to: 15
  6110                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6111  000B44  0100               	movlb	0	; () banked
  6112  000B46  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6113  000B48  D003               	goto	l522
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6117  000B4A  010F               	movlb	15	; () banked
  6118  000B4C  8315               	bsf	21,1,b	;volatile
  6119  000B4E  D002               	goto	l523
  6120  000B50                     l522:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;inc\CANlib.h: 1055: else
  6124                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6125  000B50  010F               	movlb	15	; () banked
  6126  000B52  9315               	bcf	21,1,b	;volatile
  6127  000B54                     l523:
  6128                           
  6129                           ; BSR set to: 15
  6130                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6131  000B54  0100               	movlb	0	; () banked
  6132  000B56  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6133  000B58  D003               	goto	l524
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6137  000B5A  010F               	movlb	15	; () banked
  6138  000B5C  8B15               	bsf	21,5,b	;volatile
  6139  000B5E  D002               	goto	l525
  6140  000B60                     l524:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;inc\CANlib.h: 1060: else
  6144                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6145  000B60  010F               	movlb	15	; () banked
  6146  000B62  9B15               	bcf	21,5,b	;volatile
  6147  000B64                     l525:
  6148                           
  6149                           ; BSR set to: 15
  6150                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6151  000B64  0100               	movlb	0	; () banked
  6152  000B66  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6153  000B68  D003               	goto	l526
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6157  000B6A  010F               	movlb	15	; () banked
  6158  000B6C  8D15               	bsf	21,6,b	;volatile
  6159  000B6E  D002               	goto	l527
  6160  000B70                     l526:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;inc\CANlib.h: 1065: else
  6164                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6165  000B70  010F               	movlb	15	; () banked
  6166  000B72  9D15               	bcf	21,6,b	;volatile
  6167  000B74                     l527:
  6168                           
  6169                           ; BSR set to: 15
  6170                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6171  000B74  0100               	movlb	0	; () banked
  6172  000B76  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6173  000B78  D003               	goto	l528
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6177  000B7A  010F               	movlb	15	; () banked
  6178  000B7C  8F15               	bsf	21,7,b	;volatile
  6179  000B7E  D002               	goto	l2986
  6180  000B80                     l528:
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 1070: else
  6184                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6185  000B80  010F               	movlb	15	; () banked
  6186  000B82  9F15               	bcf	21,7,b	;volatile
  6187  000B84                     l2986:
  6188                           
  6189                           ; BSR set to: 15
  6190                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6191  000B84  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  6192  000B88  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6193  000B8C  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6194  000B90  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6195  000B94  0E16               	movlw	22
  6196  000B96  D006               	goto	u3170
  6197  000B98                     u3175:
  6198  000B98  0100               	movlb	0	; () banked
  6199  000B9A  90D8               	bcf	status,0,c
  6200  000B9C  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6201  000B9E  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6202  000BA0  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6203  000BA2  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  6204  000BA4                     u3170:
  6205  000BA4  2EE8               	decfsz	wreg,f,c
  6206  000BA6  D7F8               	goto	u3175
  6207  000BA8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6208  000BAC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6209  000BB0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6210  000BB4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6214  000BB8  0100               	movlb	0	; () banked
  6215  000BBA  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  6216  000BBC  0100               	movlb	0	; () banked
  6217  000BBE  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  6218  000BC0  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6219  000BC2  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6220  000BC4  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6224  000BC6  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6225  000BCA  0012               	return	
  6226  000BCC                     __end_of_CANSetFilter:
  6227                           	opt stack 0
  6228                           tblptru	equ	0xFF8
  6229                           tblptrh	equ	0xFF7
  6230                           tblptrl	equ	0xFF6
  6231                           tablat	equ	0xFF5
  6232                           prodh	equ	0xFF4
  6233                           prodl	equ	0xFF3
  6234                           intcon	equ	0xFF2
  6235                           intcon2	equ	0xFF1
  6236                           postinc0	equ	0xFEE
  6237                           wreg	equ	0xFE8
  6238                           postdec1	equ	0xFE5
  6239                           fsr1l	equ	0xFE1
  6240                           indf2	equ	0xFDF
  6241                           fsr2h	equ	0xFDA
  6242                           fsr2l	equ	0xFD9
  6243                           status	equ	0xFD8
  6244                           
  6245 ;; *************** function _CANOperationMode *****************
  6246 ;; Defined at:
  6247 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  mode            1    wreg     enum E16838
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  mode            1    0[BANK0 ] enum E16838
  6252 ;; Return value:  Size  Location     Type
  6253 ;;		None               void
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6261 ;;      Params:         0       0       0       0
  6262 ;;      Locals:         0       1       0       0
  6263 ;;      Temps:          0       0       0       0
  6264 ;;      Totals:         0       1       0       0
  6265 ;;Total ram usage:        1 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    3
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_CANInitialize
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text10
  6276  002674                     __ptext10:
  6277                           	opt stack 0
  6278  002674                     _CANOperationMode:
  6279                           	opt stack 25
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;incstack = 0
  6283                           ;CANOperationMode@mode stored from wreg
  6284  002674  0100               	movlb	0	; () banked
  6285  002676  6F60               	movwf	CANOperationMode@mode& (0+255),b
  6286                           
  6287                           ;inc\CANlib.h: 208: CANCON = mode;
  6288  002678  C060  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6289  00267C                     l2582:
  6290  00267C  506E               	movf	3950,w,c	;volatile
  6291  00267E  0BE0               	andlw	224
  6292  002680  0100               	movlb	0	; () banked
  6293  002682  1960               	xorwf	CANOperationMode@mode& (0+255),w,b
  6294  002684  B4D8               	btfsc	status,2,c
  6295  002686  0012               	return	
  6296  002688  D7F9               	goto	l2582
  6297  00268A                     __end_of_CANOperationMode:
  6298                           	opt stack 0
  6299                           tblptru	equ	0xFF8
  6300                           tblptrh	equ	0xFF7
  6301                           tblptrl	equ	0xFF6
  6302                           tablat	equ	0xFF5
  6303                           prodh	equ	0xFF4
  6304                           prodl	equ	0xFF3
  6305                           intcon	equ	0xFF2
  6306                           intcon2	equ	0xFF1
  6307                           postinc0	equ	0xFEE
  6308                           wreg	equ	0xFE8
  6309                           postdec1	equ	0xFE5
  6310                           fsr1l	equ	0xFE1
  6311                           indf2	equ	0xFDF
  6312                           fsr2h	equ	0xFDA
  6313                           fsr2l	equ	0xFD9
  6314                           status	equ	0xFD8
  6315                           
  6316 ;; *************** function _CANisTXwarningON *****************
  6317 ;; Defined at:
  6318 ;;		line 1119 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;		None
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      unsigned char 
  6325 ;; Registers used:
  6326 ;;		wreg
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6332 ;;      Params:         0       0       0       0
  6333 ;;      Locals:         0       0       0       0
  6334 ;;      Temps:          0       0       0       0
  6335 ;;      Totals:         0       0       0       0
  6336 ;;Total ram usage:        0 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    3
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text11
  6347  0026B2                     __ptext11:
  6348                           	opt stack 0
  6349  0026B2                     _CANisTXwarningON:
  6350                           	opt stack 27
  6351                           
  6352                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;incstack = 0
  6356  0026B2  A474               	btfss	3956,2,c	;volatile
  6357  0026B4  D002               	goto	u3980
  6358  0026B6  0E01               	movlw	1
  6359  0026B8  0012               	return	
  6360  0026BA                     u3980:
  6361  0026BA  0E00               	movlw	0
  6362  0026BC  0012               	return	
  6363  0026BE                     __end_of_CANisTXwarningON:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           intcon2	equ	0xFF1
  6373                           postinc0	equ	0xFEE
  6374                           wreg	equ	0xFE8
  6375                           postdec1	equ	0xFE5
  6376                           fsr1l	equ	0xFE1
  6377                           indf2	equ	0xFDF
  6378                           fsr2h	equ	0xFDA
  6379                           fsr2l	equ	0xFD9
  6380                           status	equ	0xFD8
  6381                           
  6382 ;; *************** function _CANisRXwarningON *****************
  6383 ;; Defined at:
  6384 ;;		line 1127 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      unsigned char 
  6391 ;; Registers used:
  6392 ;;		wreg
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6398 ;;      Params:         0       0       0       0
  6399 ;;      Locals:         0       0       0       0
  6400 ;;      Temps:          0       0       0       0
  6401 ;;      Totals:         0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    3
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_main
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           	psect	text12
  6413  0026BE                     __ptext12:
  6414                           	opt stack 0
  6415  0026BE                     _CANisRXwarningON:
  6416                           	opt stack 27
  6417                           
  6418                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6419                           
  6420                           ;incstack = 0
  6421  0026BE  A274               	btfss	3956,1,c	;volatile
  6422  0026C0  D002               	goto	u3990
  6423  0026C2  0E01               	movlw	1
  6424  0026C4  0012               	return	
  6425  0026C6                     u3990:
  6426  0026C6  0E00               	movlw	0
  6427  0026C8  0012               	return	
  6428  0026CA                     __end_of_CANisRXwarningON:
  6429                           	opt stack 0
  6430                           tblptru	equ	0xFF8
  6431                           tblptrh	equ	0xFF7
  6432                           tblptrl	equ	0xFF6
  6433                           tablat	equ	0xFF5
  6434                           prodh	equ	0xFF4
  6435                           prodl	equ	0xFF3
  6436                           intcon	equ	0xFF2
  6437                           intcon2	equ	0xFF1
  6438                           postinc0	equ	0xFEE
  6439                           wreg	equ	0xFE8
  6440                           postdec1	equ	0xFE5
  6441                           fsr1l	equ	0xFE1
  6442                           indf2	equ	0xFDF
  6443                           fsr2h	equ	0xFDA
  6444                           fsr2l	equ	0xFD9
  6445                           status	equ	0xFD8
  6446                           
  6447 ;; *************** function _ADC_Read *****************
  6448 ;; Defined at:
  6449 ;;		line 219 in file "ABS_Code.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;		None               void
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6463 ;;      Params:         0       0       0       0
  6464 ;;      Locals:         0       0       0       0
  6465 ;;      Temps:          0       0       0       0
  6466 ;;      Totals:         0       0       0       0
  6467 ;;Total ram usage:        0 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    4
  6470 ;; This function calls:
  6471 ;;		___awdiv
  6472 ;;		___lwdiv
  6473 ;; This function is called by:
  6474 ;;		_main
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text13
  6479  002416                     __ptext13:
  6480                           	opt stack 0
  6481  002416                     _ADC_Read:
  6482                           	opt stack 26
  6483                           
  6484                           ;ABS_Code.c: 220: for (i = 0; i < number_of_measures; i++) {
  6485                           
  6486                           ;incstack = 0
  6487  002416  0E00               	movlw	0
  6488  002418  0100               	movlb	0	; () banked
  6489  00241A  6F9F               	movwf	_i& (0+255),b
  6490  00241C  D012               	goto	l3608
  6491  00241E                     l687:
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;ABS_Code.c: 221: ADCON0bits.GO = 1;
  6495  00241E  82C2               	bsf	4034,1,c	;volatile
  6496  002420                     l688:
  6497  002420  B2C2               	btfsc	4034,1,c	;volatile
  6498  002422  D7FE               	goto	l688
  6499                           
  6500                           ;ABS_Code.c: 223: read = ADRESH;
  6501  002424  CFC4 F0A1          	movff	4036,_read	;volatile
  6502                           
  6503                           ;ABS_Code.c: 224: partial_sum = partial_sum + read;
  6504  002428  0100               	movlb	0	; () banked
  6505  00242A  51A1               	movf	_read& (0+255),w,b
  6506  00242C  0100               	movlb	0	; () banked
  6507  00242E  2598               	addwf	_partial_sum& (0+255),w,b
  6508  002430  0100               	movlb	0	; () banked
  6509  002432  6F98               	movwf	_partial_sum& (0+255),b
  6510  002434  0E00               	movlw	0
  6511  002436  0100               	movlb	0	; () banked
  6512  002438  2199               	addwfc	(_partial_sum+1)& (0+255),w,b
  6513  00243A  0100               	movlb	0	; () banked
  6514  00243C  6F99               	movwf	(_partial_sum+1)& (0+255),b
  6515                           
  6516                           ; BSR set to: 0
  6517  00243E  0100               	movlb	0	; () banked
  6518  002440  2B9F               	incf	_i& (0+255),f,b
  6519  002442                     l3608:
  6520                           
  6521                           ; BSR set to: 0
  6522  002442  0100               	movlb	0	; () banked
  6523  002444  51A5               	movf	_number_of_measures& (0+255),w,b
  6524  002446  0100               	movlb	0	; () banked
  6525  002448  5D9F               	subwf	_i& (0+255),w,b
  6526  00244A  A0D8               	btfss	status,0,c
  6527  00244C  D7E8               	goto	l687
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;ABS_Code.c: 225: }
  6531                           ;ABS_Code.c: 226: correction_factor = (partial_sum / number_of_measures) - 127;
  6532                           
  6533                           ; BSR set to: 0
  6534  00244E  C098  F060         	movff	_partial_sum,___lwdiv@dividend
  6535  002452  C099  F061         	movff	_partial_sum+1,___lwdiv@dividend+1
  6536  002456  C0A5  F062         	movff	_number_of_measures,___lwdiv@divisor
  6537  00245A  0100               	movlb	0	; () banked
  6538  00245C  6B63               	clrf	(___lwdiv@divisor+1)& (0+255),b
  6539  00245E  EC4C  F012         	call	___lwdiv	;wreg free
  6540  002462  0E81               	movlw	129
  6541  002464  0100               	movlb	0	; () banked
  6542  002466  2560               	addwf	?___lwdiv& (0+255),w,b
  6543  002468  0100               	movlb	0	; () banked
  6544  00246A  6F94               	movwf	_correction_factor& (0+255),b
  6545  00246C  0EFF               	movlw	255
  6546  00246E  0100               	movlb	0	; () banked
  6547  002470  2161               	addwfc	(?___lwdiv+1)& (0+255),w,b
  6548  002472  0100               	movlb	0	; () banked
  6549  002474  6F95               	movwf	(_correction_factor+1)& (0+255),b
  6550                           
  6551                           ;ABS_Code.c: 227: home_position = correction_factor / 4 + 127;
  6552  002476  C094  F060         	movff	_correction_factor,___awdiv@dividend
  6553  00247A  C095  F061         	movff	_correction_factor+1,___awdiv@dividend+1
  6554  00247E  0E00               	movlw	0
  6555  002480  0100               	movlb	0	; () banked
  6556  002482  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6557  002484  0E04               	movlw	4
  6558  002486  6F62               	movwf	___awdiv@divisor& (0+255),b
  6559  002488  EC11  F011         	call	___awdiv	;wreg free
  6560  00248C  0100               	movlb	0	; () banked
  6561  00248E  5160               	movf	?___awdiv& (0+255),w,b
  6562  002490  0F7F               	addlw	127
  6563  002492  0100               	movlb	0	; () banked
  6564  002494  6F9E               	movwf	_home_position& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567  002496  0012               	return		;funcret
  6568  002498                     __end_of_ADC_Read:
  6569                           	opt stack 0
  6570                           tblptru	equ	0xFF8
  6571                           tblptrh	equ	0xFF7
  6572                           tblptrl	equ	0xFF6
  6573                           tablat	equ	0xFF5
  6574                           prodh	equ	0xFF4
  6575                           prodl	equ	0xFF3
  6576                           intcon	equ	0xFF2
  6577                           intcon2	equ	0xFF1
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           postdec1	equ	0xFE5
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587 ;; *************** function ___lwdiv *****************
  6588 ;; Defined at:
  6589 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  dividend        2    0[BANK0 ] unsigned int 
  6592 ;;  divisor         2    2[BANK0 ] unsigned int 
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;  quotient        2    4[BANK0 ] unsigned int 
  6595 ;;  counter         1    6[BANK0 ] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  2    0[BANK0 ] unsigned int 
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6605 ;;      Params:         0       4       0       0
  6606 ;;      Locals:         0       3       0       0
  6607 ;;      Temps:          0       0       0       0
  6608 ;;      Totals:         0       7       0       0
  6609 ;;Total ram usage:        7 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    3
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_ADC_Read
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text14
  6620  002498                     __ptext14:
  6621                           	opt stack 0
  6622  002498                     ___lwdiv:
  6623                           	opt stack 26
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;incstack = 0
  6627  002498  0E00               	movlw	0
  6628  00249A  0100               	movlb	0	; () banked
  6629  00249C  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6630  00249E  0E00               	movlw	0
  6631  0024A0  6F64               	movwf	___lwdiv@quotient& (0+255),b
  6632                           
  6633                           ; BSR set to: 0
  6634  0024A2  0100               	movlb	0	; () banked
  6635  0024A4  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6636  0024A6  0100               	movlb	0	; () banked
  6637  0024A8  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6638  0024AA  B4D8               	btfsc	status,2,c
  6639  0024AC  D02C               	goto	l1105
  6640                           
  6641                           ; BSR set to: 0
  6642  0024AE  0E01               	movlw	1
  6643  0024B0  0100               	movlb	0	; () banked
  6644  0024B2  6F66               	movwf	___lwdiv@counter& (0+255),b
  6645  0024B4  D006               	goto	l3350
  6646  0024B6                     l3348:
  6647                           
  6648                           ; BSR set to: 0
  6649  0024B6  0100               	movlb	0	; () banked
  6650  0024B8  90D8               	bcf	status,0,c
  6651  0024BA  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  6652  0024BC  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6653  0024BE  0100               	movlb	0	; () banked
  6654  0024C0  2B66               	incf	___lwdiv@counter& (0+255),f,b
  6655  0024C2                     l3350:
  6656                           
  6657                           ; BSR set to: 0
  6658  0024C2  0100               	movlb	0	; () banked
  6659  0024C4  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6660  0024C6  D7F7               	goto	l3348
  6661  0024C8                     l3352:
  6662                           
  6663                           ; BSR set to: 0
  6664  0024C8  0100               	movlb	0	; () banked
  6665  0024CA  90D8               	bcf	status,0,c
  6666  0024CC  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
  6667  0024CE  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6668                           
  6669                           ; BSR set to: 0
  6670  0024D0  0100               	movlb	0	; () banked
  6671  0024D2  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6672  0024D4  0100               	movlb	0	; () banked
  6673  0024D6  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  6674  0024D8  0100               	movlb	0	; () banked
  6675  0024DA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6676  0024DC  0100               	movlb	0	; () banked
  6677  0024DE  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6678  0024E0  A0D8               	btfss	status,0,c
  6679  0024E2  D00A               	goto	l3360
  6680                           
  6681                           ; BSR set to: 0
  6682  0024E4  0100               	movlb	0	; () banked
  6683  0024E6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6684  0024E8  0100               	movlb	0	; () banked
  6685  0024EA  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  6686  0024EC  0100               	movlb	0	; () banked
  6687  0024EE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6688  0024F0  0100               	movlb	0	; () banked
  6689  0024F2  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6690                           
  6691                           ; BSR set to: 0
  6692  0024F4  0100               	movlb	0	; () banked
  6693  0024F6  8164               	bsf	___lwdiv@quotient& (0+255),0,b
  6694  0024F8                     l3360:
  6695                           
  6696                           ; BSR set to: 0
  6697  0024F8  0100               	movlb	0	; () banked
  6698  0024FA  90D8               	bcf	status,0,c
  6699  0024FC  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6700  0024FE  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  6701                           
  6702                           ; BSR set to: 0
  6703  002500  0100               	movlb	0	; () banked
  6704  002502  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
  6705  002504  D7E1               	goto	l3352
  6706  002506                     l1105:
  6707                           
  6708                           ; BSR set to: 0
  6709  002506  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
  6710  00250A  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6711                           
  6712                           ; BSR set to: 0
  6713  00250E  0012               	return		;funcret
  6714  002510                     __end_of___lwdiv:
  6715                           	opt stack 0
  6716                           tblptru	equ	0xFF8
  6717                           tblptrh	equ	0xFF7
  6718                           tblptrl	equ	0xFF6
  6719                           tablat	equ	0xFF5
  6720                           prodh	equ	0xFF4
  6721                           prodl	equ	0xFF3
  6722                           intcon	equ	0xFF2
  6723                           intcon2	equ	0xFF1
  6724                           postinc0	equ	0xFEE
  6725                           wreg	equ	0xFE8
  6726                           postdec1	equ	0xFE5
  6727                           fsr1l	equ	0xFE1
  6728                           indf2	equ	0xFDF
  6729                           fsr2h	equ	0xFDA
  6730                           fsr2l	equ	0xFD9
  6731                           status	equ	0xFD8
  6732                           
  6733 ;; *************** function ___awdiv *****************
  6734 ;; Defined at:
  6735 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  dividend        2    0[BANK0 ] int 
  6738 ;;  divisor         2    2[BANK0 ] int 
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  quotient        2    6[BANK0 ] int 
  6741 ;;  sign            1    5[BANK0 ] unsigned char 
  6742 ;;  counter         1    4[BANK0 ] unsigned char 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  2    0[BANK0 ] int 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6752 ;;      Params:         0       4       0       0
  6753 ;;      Locals:         0       4       0       0
  6754 ;;      Temps:          0       0       0       0
  6755 ;;      Totals:         0       8       0       0
  6756 ;;Total ram usage:        8 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    3
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_main
  6763 ;;		_ADC_Read
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text15
  6768  002222                     __ptext15:
  6769                           	opt stack 0
  6770  002222                     ___awdiv:
  6771                           	opt stack 27
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;incstack = 0
  6775  002222  0E00               	movlw	0
  6776  002224  0100               	movlb	0	; () banked
  6777  002226  6F65               	movwf	___awdiv@sign& (0+255),b
  6778                           
  6779                           ; BSR set to: 0
  6780  002228  0100               	movlb	0	; () banked
  6781  00222A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6782  00222C  D008               	goto	l3306
  6783                           
  6784                           ; BSR set to: 0
  6785  00222E  0100               	movlb	0	; () banked
  6786  002230  6D62               	negf	___awdiv@divisor& (0+255),b
  6787  002232  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6788  002234  B0D8               	btfsc	status,0,c
  6789  002236  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6790                           
  6791                           ; BSR set to: 0
  6792  002238  0E01               	movlw	1
  6793  00223A  0100               	movlb	0	; () banked
  6794  00223C  6F65               	movwf	___awdiv@sign& (0+255),b
  6795  00223E                     l3306:
  6796                           
  6797                           ; BSR set to: 0
  6798  00223E  0100               	movlb	0	; () banked
  6799  002240  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6800  002242  D008               	goto	l3312
  6801                           
  6802                           ; BSR set to: 0
  6803  002244  0100               	movlb	0	; () banked
  6804  002246  6D60               	negf	___awdiv@dividend& (0+255),b
  6805  002248  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6806  00224A  B0D8               	btfsc	status,0,c
  6807  00224C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6808                           
  6809                           ; BSR set to: 0
  6810  00224E  0E01               	movlw	1
  6811  002250  0100               	movlb	0	; () banked
  6812  002252  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  6813  002254                     l3312:
  6814                           
  6815                           ; BSR set to: 0
  6816  002254  0E00               	movlw	0
  6817  002256  0100               	movlb	0	; () banked
  6818  002258  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  6819  00225A  0E00               	movlw	0
  6820  00225C  6F66               	movwf	___awdiv@quotient& (0+255),b
  6821                           
  6822                           ; BSR set to: 0
  6823  00225E  0100               	movlb	0	; () banked
  6824  002260  5162               	movf	___awdiv@divisor& (0+255),w,b
  6825  002262  0100               	movlb	0	; () banked
  6826  002264  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6827  002266  B4D8               	btfsc	status,2,c
  6828  002268  D02C               	goto	l3334
  6829                           
  6830                           ; BSR set to: 0
  6831  00226A  0E01               	movlw	1
  6832  00226C  0100               	movlb	0	; () banked
  6833  00226E  6F64               	movwf	___awdiv@counter& (0+255),b
  6834  002270  D006               	goto	l3320
  6835  002272                     l3318:
  6836                           
  6837                           ; BSR set to: 0
  6838  002272  0100               	movlb	0	; () banked
  6839  002274  90D8               	bcf	status,0,c
  6840  002276  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  6841  002278  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6842  00227A  0100               	movlb	0	; () banked
  6843  00227C  2B64               	incf	___awdiv@counter& (0+255),f,b
  6844  00227E                     l3320:
  6845                           
  6846                           ; BSR set to: 0
  6847  00227E  0100               	movlb	0	; () banked
  6848  002280  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6849  002282  D7F7               	goto	l3318
  6850  002284                     l3322:
  6851                           
  6852                           ; BSR set to: 0
  6853  002284  0100               	movlb	0	; () banked
  6854  002286  90D8               	bcf	status,0,c
  6855  002288  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  6856  00228A  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6857                           
  6858                           ; BSR set to: 0
  6859  00228C  0100               	movlb	0	; () banked
  6860  00228E  5162               	movf	___awdiv@divisor& (0+255),w,b
  6861  002290  0100               	movlb	0	; () banked
  6862  002292  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  6863  002294  0100               	movlb	0	; () banked
  6864  002296  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6865  002298  0100               	movlb	0	; () banked
  6866  00229A  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6867  00229C  A0D8               	btfss	status,0,c
  6868  00229E  D00A               	goto	l3330
  6869                           
  6870                           ; BSR set to: 0
  6871  0022A0  0100               	movlb	0	; () banked
  6872  0022A2  5162               	movf	___awdiv@divisor& (0+255),w,b
  6873  0022A4  0100               	movlb	0	; () banked
  6874  0022A6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  6875  0022A8  0100               	movlb	0	; () banked
  6876  0022AA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6877  0022AC  0100               	movlb	0	; () banked
  6878  0022AE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6879                           
  6880                           ; BSR set to: 0
  6881  0022B0  0100               	movlb	0	; () banked
  6882  0022B2  8166               	bsf	___awdiv@quotient& (0+255),0,b
  6883  0022B4                     l3330:
  6884                           
  6885                           ; BSR set to: 0
  6886  0022B4  0100               	movlb	0	; () banked
  6887  0022B6  90D8               	bcf	status,0,c
  6888  0022B8  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6889  0022BA  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  6890                           
  6891                           ; BSR set to: 0
  6892  0022BC  0100               	movlb	0	; () banked
  6893  0022BE  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  6894  0022C0  D7E1               	goto	l3322
  6895  0022C2                     l3334:
  6896                           
  6897                           ; BSR set to: 0
  6898  0022C2  0100               	movlb	0	; () banked
  6899  0022C4  5165               	movf	___awdiv@sign& (0+255),w,b
  6900  0022C6  0100               	movlb	0	; () banked
  6901  0022C8  B4D8               	btfsc	status,2,c
  6902  0022CA  D005               	goto	l3338
  6903                           
  6904                           ; BSR set to: 0
  6905  0022CC  0100               	movlb	0	; () banked
  6906  0022CE  6D66               	negf	___awdiv@quotient& (0+255),b
  6907  0022D0  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6908  0022D2  B0D8               	btfsc	status,0,c
  6909  0022D4  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6910  0022D6                     l3338:
  6911                           
  6912                           ; BSR set to: 0
  6913  0022D6  C066  F060         	movff	___awdiv@quotient,?___awdiv
  6914  0022DA  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  6915  0022DE  0012               	return	
  6916  0022E0                     __end_of___awdiv:
  6917                           	opt stack 0
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           prodh	equ	0xFF4
  6923                           prodl	equ	0xFF3
  6924                           intcon	equ	0xFF2
  6925                           intcon2	equ	0xFF1
  6926                           postinc0	equ	0xFEE
  6927                           wreg	equ	0xFE8
  6928                           postdec1	equ	0xFE5
  6929                           fsr1l	equ	0xFE1
  6930                           indf2	equ	0xFDF
  6931                           fsr2h	equ	0xFDA
  6932                           fsr2l	equ	0xFD9
  6933                           status	equ	0xFD8
  6934                           
  6935 ;; *************** function _ISR_Bassa *****************
  6936 ;; Defined at:
  6937 ;;		line 131 in file "ABS_Code.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;		None               void
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6951 ;;      Params:         0       0       0       0
  6952 ;;      Locals:         0       0       0       0
  6953 ;;      Temps:         17       0       0       0
  6954 ;;      Totals:        17       0       0       0
  6955 ;;Total ram usage:       17 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    2
  6958 ;; This function calls:
  6959 ;;		Nothing
  6960 ;; This function is called by:
  6961 ;;		Interrupt level 1
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	intcodelo
  6966  000018                     __pintcodelo:
  6967                           	opt stack 0
  6968  000018                     _ISR_Bassa:
  6969                           	opt stack 25
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;incstack = 0
  6973  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6974  00001A  CFD8 F001          	movff	status,??_ISR_Bassa
  6975  00001E  CFE8 F002          	movff	wreg,??_ISR_Bassa+1
  6976  000022  CFE0 F003          	movff	bsr,??_ISR_Bassa+2
  6977  000026  CFFA F004          	movff	pclath,??_ISR_Bassa+3
  6978  00002A  CFFB F005          	movff	pclatu,??_ISR_Bassa+4
  6979  00002E  CFE9 F006          	movff	fsr0l,??_ISR_Bassa+5
  6980  000032  CFEA F007          	movff	fsr0h,??_ISR_Bassa+6
  6981  000036  CFE1 F008          	movff	fsr1l,??_ISR_Bassa+7
  6982  00003A  CFE2 F009          	movff	fsr1h,??_ISR_Bassa+8
  6983  00003E  CFD9 F00A          	movff	fsr2l,??_ISR_Bassa+9
  6984  000042  CFDA F00B          	movff	fsr2h,??_ISR_Bassa+10
  6985  000046  CFF3 F00C          	movff	prodl,??_ISR_Bassa+11
  6986  00004A  CFF4 F00D          	movff	prodh,??_ISR_Bassa+12
  6987  00004E  CFF6 F00E          	movff	tblptrl,??_ISR_Bassa+13
  6988  000052  CFF7 F00F          	movff	tblptrh,??_ISR_Bassa+14
  6989  000056  CFF8 F010          	movff	tblptru,??_ISR_Bassa+15
  6990  00005A  CFF5 F011          	movff	tablat,??_ISR_Bassa+16
  6991                           
  6992                           ;ABS_Code.c: 132: if (PIR2bits.TMR3IF == 1) {
  6993  00005E  A2A1               	btfss	4001,1,c	;volatile
  6994  000060  D00C               	goto	i1l647
  6995                           
  6996                           ;ABS_Code.c: 133: TMR3_counter++;
  6997  000062  0E01               	movlw	1
  6998  000064  0100               	movlb	0	; () banked
  6999  000066  2786               	addwf	_TMR3_counter& (0+255),f,b
  7000  000068  0E00               	movlw	0
  7001  00006A  2387               	addwfc	(_TMR3_counter+1)& (0+255),f,b
  7002  00006C  2388               	addwfc	(_TMR3_counter+2)& (0+255),f,b
  7003  00006E  2389               	addwfc	(_TMR3_counter+3)& (0+255),f,b
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;ABS_Code.c: 134: TMR3H = 0x63;
  7007  000070  0E63               	movlw	99
  7008  000072  6EB3               	movwf	4019,c	;volatile
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;ABS_Code.c: 135: TMR3L = 0xC0;
  7012  000074  0EC0               	movlw	192
  7013  000076  6EB2               	movwf	4018,c	;volatile
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;ABS_Code.c: 136: PIR2bits.TMR3IF = 0;
  7017  000078  92A1               	bcf	4001,1,c	;volatile
  7018  00007A                     i1l647:
  7019  00007A  C011  FFF5         	movff	??_ISR_Bassa+16,tablat
  7020  00007E  C010  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7021  000082  C00F  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7022  000086  C00E  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7023  00008A  C00D  FFF4         	movff	??_ISR_Bassa+12,prodh
  7024  00008E  C00C  FFF3         	movff	??_ISR_Bassa+11,prodl
  7025  000092  C00B  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7026  000096  C00A  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7027  00009A  C009  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7028  00009E  C008  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7029  0000A2  C007  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7030  0000A6  C006  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7031  0000AA  C005  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7032  0000AE  C004  FFFA         	movff	??_ISR_Bassa+3,pclath
  7033  0000B2  C003  FFE0         	movff	??_ISR_Bassa+2,bsr
  7034  0000B6  C002  FFE8         	movff	??_ISR_Bassa+1,wreg
  7035  0000BA  C001  FFD8         	movff	??_ISR_Bassa,status
  7036  0000BE  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7037  0000C0  0010               	retfie	
  7038  0000C2                     __end_of_ISR_Bassa:
  7039                           	opt stack 0
  7040                           pclatu	equ	0xFFB
  7041                           pclath	equ	0xFFA
  7042                           tblptru	equ	0xFF8
  7043                           tblptrh	equ	0xFF7
  7044                           tblptrl	equ	0xFF6
  7045                           tablat	equ	0xFF5
  7046                           prodh	equ	0xFF4
  7047                           prodl	equ	0xFF3
  7048                           intcon	equ	0xFF2
  7049                           intcon2	equ	0xFF1
  7050                           postinc0	equ	0xFEE
  7051                           fsr0h	equ	0xFEA
  7052                           fsr0l	equ	0xFE9
  7053                           wreg	equ	0xFE8
  7054                           postdec1	equ	0xFE5
  7055                           fsr1h	equ	0xFE2
  7056                           fsr1l	equ	0xFE1
  7057                           bsr	equ	0xFE0
  7058                           indf2	equ	0xFDF
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8
  7062                           
  7063 ;; *************** function _ISR_Alta *****************
  7064 ;; Defined at:
  7065 ;;		line 97 in file "ABS_Code.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;		None               void
  7072 ;; Registers used:
  7073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7079 ;;      Params:         0       0       0       0
  7080 ;;      Locals:         0       0       0       0
  7081 ;;      Temps:         18       0       0       0
  7082 ;;      Totals:        18       0       0       0
  7083 ;;Total ram usage:       18 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    1
  7086 ;; This function calls:
  7087 ;;		_CANisRxReady
  7088 ;;		_CANreceiveMessage
  7089 ;;		_WriteTimer0
  7090 ;;		i2___awdiv
  7091 ;;		i2___wmul
  7092 ;; This function is called by:
  7093 ;;		Interrupt level 2
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	intcode
  7098  000008                     __pintcode:
  7099                           	opt stack 0
  7100  000008                     _ISR_Alta:
  7101                           	opt stack 25
  7102                           
  7103                           ;incstack = 0
  7104  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7105  00000A  CFFA F024          	movff	pclath,??_ISR_Alta+4
  7106  00000E  CFFB F025          	movff	pclatu,??_ISR_Alta+5
  7107  000012  ED36  F010         	call	int_func,f	;refresh shadow registers
  7108                           pclatu	equ	0xFFB
  7109                           pclath	equ	0xFFA
  7110                           tblptru	equ	0xFF8
  7111                           tblptrh	equ	0xFF7
  7112                           tblptrl	equ	0xFF6
  7113                           tablat	equ	0xFF5
  7114                           prodh	equ	0xFF4
  7115                           prodl	equ	0xFF3
  7116                           intcon	equ	0xFF2
  7117                           intcon2	equ	0xFF1
  7118                           postinc0	equ	0xFEE
  7119                           fsr0h	equ	0xFEA
  7120                           fsr0l	equ	0xFE9
  7121                           wreg	equ	0xFE8
  7122                           postdec1	equ	0xFE5
  7123                           fsr1h	equ	0xFE2
  7124                           fsr1l	equ	0xFE1
  7125                           bsr	equ	0xFE0
  7126                           indf2	equ	0xFDF
  7127                           fsr2h	equ	0xFDA
  7128                           fsr2l	equ	0xFD9
  7129                           status	equ	0xFD8
  7130                           
  7131                           	psect	intcode_body
  7132  00206C                     __pintcode_body:
  7133                           	opt stack 25
  7134  00206C                     int_func:
  7135                           	opt stack 25
  7136  00206C  0006               	pop		; remove dummy address from shadow register refresh
  7137  00206E  CFE9 F026          	movff	fsr0l,??_ISR_Alta+6
  7138  002072  CFEA F027          	movff	fsr0h,??_ISR_Alta+7
  7139  002076  CFE1 F028          	movff	fsr1l,??_ISR_Alta+8
  7140  00207A  CFE2 F029          	movff	fsr1h,??_ISR_Alta+9
  7141  00207E  CFD9 F02A          	movff	fsr2l,??_ISR_Alta+10
  7142  002082  CFDA F02B          	movff	fsr2h,??_ISR_Alta+11
  7143  002086  CFF3 F02C          	movff	prodl,??_ISR_Alta+12
  7144  00208A  CFF4 F02D          	movff	prodh,??_ISR_Alta+13
  7145  00208E  CFF6 F02E          	movff	tblptrl,??_ISR_Alta+14
  7146  002092  CFF7 F02F          	movff	tblptrh,??_ISR_Alta+15
  7147  002096  CFF8 F030          	movff	tblptru,??_ISR_Alta+16
  7148  00209A  CFF5 F031          	movff	tablat,??_ISR_Alta+17
  7149                           
  7150                           ;ABS_Code.c: 98: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7151  00209E  A0A4               	btfss	4004,0,c	;volatile
  7152  0020A0  B2A4               	btfsc	4004,1,c	;volatile
  7153  0020A2  D001               	goto	i2l3686
  7154  0020A4  D021               	goto	i2l634
  7155  0020A6                     i2l3686:
  7156                           
  7157                           ;ABS_Code.c: 99: if (CANisRxReady()) {
  7158  0020A6  EC45  F013         	call	_CANisRxReady	;wreg free
  7159  0020AA  0900               	iorlw	0
  7160  0020AC  B4D8               	btfsc	status,2,c
  7161  0020AE  D01A               	goto	i2l637
  7162                           
  7163                           ;ABS_Code.c: 100: CANreceiveMessage(&msg);
  7164  0020B0  0E3A               	movlw	low _msg
  7165  0020B2  6E12               	movwf	CANreceiveMessage@msg,c
  7166  0020B4  0E00               	movlw	high _msg
  7167  0020B6  6E13               	movwf	CANreceiveMessage@msg+1,c
  7168  0020B8  ECAC  F009         	call	_CANreceiveMessage	;wreg free
  7169                           
  7170                           ;ABS_Code.c: 101: if (msg.RTR == 1) {
  7171  0020BC  0448               	decf	_msg+14,w,c
  7172  0020BE  A4D8               	btfss	status,2,c
  7173  0020C0  D009               	goto	i2l3694
  7174                           
  7175                           ;ABS_Code.c: 102: remote_frame_id = msg.identifier;
  7176  0020C2  C03A  F08E         	movff	_msg,_remote_frame_id
  7177  0020C6  C03B  F08F         	movff	_msg+1,_remote_frame_id+1
  7178  0020CA  C03C  F090         	movff	_msg+2,_remote_frame_id+2
  7179  0020CE  C03D  F091         	movff	_msg+3,_remote_frame_id+3
  7180                           
  7181                           ;ABS_Code.c: 103: remote_frame = 1;
  7182  0020D2  824A               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7183  0020D4                     i2l3694:
  7184                           
  7185                           ;ABS_Code.c: 104: }
  7186                           ;ABS_Code.c: 105: if (msg.identifier == 0b00000000000000000000000000110) {
  7187  0020D4  0E06               	movlw	6
  7188  0020D6  183A               	xorwf	_msg,w,c
  7189  0020D8  103B               	iorwf	_msg+1,w,c
  7190  0020DA  103C               	iorwf	_msg+2,w,c
  7191  0020DC  103D               	iorwf	_msg+3,w,c
  7192  0020DE  B4D8               	btfsc	status,2,c
  7193                           
  7194                           ;ABS_Code.c: 106: brake_signal_CAN = msg.data[0];
  7195  0020E0  C03E  F09B         	movff	_msg+4,_brake_signal_CAN
  7196  0020E4                     i2l637:
  7197                           
  7198                           ;ABS_Code.c: 107: }
  7199                           ;ABS_Code.c: 108: }
  7200                           ;ABS_Code.c: 109: PIR3bits.RXB0IF = 0;
  7201  0020E4  90A4               	bcf	4004,0,c	;volatile
  7202                           
  7203                           ;ABS_Code.c: 110: PIR3bits.RXB1IF = 0;
  7204  0020E6  92A4               	bcf	4004,1,c	;volatile
  7205  0020E8                     i2l634:
  7206                           
  7207                           ;ABS_Code.c: 111: }
  7208                           ;ABS_Code.c: 112: if (INTCONbits.TMR0IF == 1) {
  7209  0020E8  A4F2               	btfss	intcon,2,c	;volatile
  7210  0020EA  D07D               	goto	i2l643
  7211                           
  7212                           ;ABS_Code.c: 113: PORTCbits.RC0 = ~PORTCbits.RC0;
  7213  0020EC  A082               	btfss	3970,0,c	;volatile
  7214  0020EE  D002               	goto	i2u421_40
  7215  0020F0  0E01               	movlw	1
  7216  0020F2  D001               	goto	i2u421_46
  7217  0020F4                     i2u421_40:
  7218  0020F4  0E00               	movlw	0
  7219  0020F6                     i2u421_46:
  7220  0020F6  0AFF               	xorlw	255
  7221  0020F8  6E20               	movwf	??_ISR_Alta& (0+255),c
  7222  0020FA  5082               	movf	3970,w,c	;volatile
  7223  0020FC  1820               	xorwf	??_ISR_Alta,w,c
  7224  0020FE  0BFE               	andlw	-2
  7225  002100  1820               	xorwf	??_ISR_Alta,w,c
  7226  002102  6E82               	movwf	3970,c	;volatile
  7227                           
  7228                           ;ABS_Code.c: 114: if (PORTCbits.RC0 == 1) {
  7229  002104  A082               	btfss	3970,0,c	;volatile
  7230  002106  D068               	goto	i2l3710
  7231                           
  7232                           ;ABS_Code.c: 115: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  7233  002108  0E40               	movlw	64
  7234  00210A  6E20               	movwf	??_ISR_Alta& (0+255),c
  7235  00210C  0E06               	movlw	6
  7236  00210E  6E21               	movwf	(??_ISR_Alta+1)& (0+255),c
  7237  002110  C049  F012         	movff	_brake_value_degree,i2___wmul@multiplier
  7238  002114  6A13               	clrf	i2___wmul@multiplier+1,c
  7239  002116  0E05               	movlw	5
  7240  002118  6E15               	movwf	i2___wmul@multiplicand+1,c
  7241  00211A  0E78               	movlw	120
  7242  00211C  6E14               	movwf	i2___wmul@multiplicand,c
  7243  00211E  EC15  F013         	call	i2___wmul	;wreg free
  7244  002122  C012  F018         	movff	?i2___wmul,i2___awdiv@dividend
  7245  002126  C013  F019         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  7246  00212A  0E00               	movlw	0
  7247  00212C  6E1B               	movwf	i2___awdiv@divisor+1,c
  7248  00212E  0EB4               	movlw	180
  7249  002130  6E1A               	movwf	i2___awdiv@divisor,c
  7250  002132  ECC9  F011         	call	i2___awdiv	;wreg free
  7251  002136  90D8               	bcf	status,0,c
  7252  002138  3618               	rlcf	?i2___awdiv,f,c
  7253  00213A  3619               	rlcf	?i2___awdiv+1,f,c
  7254  00213C  5020               	movf	??_ISR_Alta,w,c
  7255  00213E  2618               	addwf	?i2___awdiv,f,c
  7256  002140  5021               	movf	??_ISR_Alta+1,w,c
  7257  002142  2219               	addwfc	?i2___awdiv+1,f,c
  7258  002144  C018  F036         	movff	?i2___awdiv,_timer_on
  7259  002148  C019  F037         	movff	?i2___awdiv+1,_timer_on+1
  7260  00214C  0E00               	movlw	0
  7261  00214E  BE37               	btfsc	_timer_on+1,7,c
  7262  002150  0EFF               	movlw	-1
  7263  002152  6E38               	movwf	_timer_on+2,c
  7264  002154  6E39               	movwf	_timer_on+3,c
  7265                           
  7266                           ;ABS_Code.c: 116: timer_on = 65536 - timer_on;
  7267  002156  C036  F020         	movff	_timer_on,??_ISR_Alta
  7268  00215A  C037  F021         	movff	_timer_on+1,??_ISR_Alta+1
  7269  00215E  C038  F022         	movff	_timer_on+2,??_ISR_Alta+2
  7270  002162  C039  F023         	movff	_timer_on+3,??_ISR_Alta+3
  7271  002166  1E20               	comf	??_ISR_Alta,f,c
  7272  002168  1E21               	comf	??_ISR_Alta+1,f,c
  7273  00216A  1E22               	comf	??_ISR_Alta+2,f,c
  7274  00216C  1E23               	comf	??_ISR_Alta+3,f,c
  7275  00216E  2A20               	incf	??_ISR_Alta,f,c
  7276  002170  0E00               	movlw	0
  7277  002172  2221               	addwfc	??_ISR_Alta+1,f,c
  7278  002174  2222               	addwfc	??_ISR_Alta+2,f,c
  7279  002176  2223               	addwfc	??_ISR_Alta+3,f,c
  7280  002178  0E00               	movlw	0
  7281  00217A  2420               	addwf	??_ISR_Alta,w,c
  7282  00217C  6E36               	movwf	_timer_on,c
  7283  00217E  0E00               	movlw	0
  7284  002180  2021               	addwfc	??_ISR_Alta+1,w,c
  7285  002182  6E37               	movwf	_timer_on+1,c
  7286  002184  0E01               	movlw	1
  7287  002186  2022               	addwfc	??_ISR_Alta+2,w,c
  7288  002188  6E38               	movwf	_timer_on+2,c
  7289  00218A  0E00               	movlw	0
  7290  00218C  2023               	addwfc	??_ISR_Alta+3,w,c
  7291  00218E  6E39               	movwf	_timer_on+3,c
  7292                           
  7293                           ;ABS_Code.c: 117: timer_off = 40000 - timer_on;
  7294  002190  C036  F020         	movff	_timer_on,??_ISR_Alta
  7295  002194  C037  F021         	movff	_timer_on+1,??_ISR_Alta+1
  7296  002198  C038  F022         	movff	_timer_on+2,??_ISR_Alta+2
  7297  00219C  C039  F023         	movff	_timer_on+3,??_ISR_Alta+3
  7298  0021A0  1E20               	comf	??_ISR_Alta,f,c
  7299  0021A2  1E21               	comf	??_ISR_Alta+1,f,c
  7300  0021A4  1E22               	comf	??_ISR_Alta+2,f,c
  7301  0021A6  1E23               	comf	??_ISR_Alta+3,f,c
  7302  0021A8  2A20               	incf	??_ISR_Alta,f,c
  7303  0021AA  0E00               	movlw	0
  7304  0021AC  2221               	addwfc	??_ISR_Alta+1,f,c
  7305  0021AE  2222               	addwfc	??_ISR_Alta+2,f,c
  7306  0021B0  2223               	addwfc	??_ISR_Alta+3,f,c
  7307  0021B2  0E40               	movlw	64
  7308  0021B4  2420               	addwf	??_ISR_Alta,w,c
  7309  0021B6  6E32               	movwf	_timer_off,c
  7310  0021B8  0E9C               	movlw	156
  7311  0021BA  2021               	addwfc	??_ISR_Alta+1,w,c
  7312  0021BC  6E33               	movwf	_timer_off+1,c
  7313  0021BE  0E00               	movlw	0
  7314  0021C0  2022               	addwfc	??_ISR_Alta+2,w,c
  7315  0021C2  6E34               	movwf	_timer_off+2,c
  7316  0021C4  0E00               	movlw	0
  7317  0021C6  2023               	addwfc	??_ISR_Alta+3,w,c
  7318  0021C8  6E35               	movwf	_timer_off+3,c
  7319                           
  7320                           ;ABS_Code.c: 118: WriteTimer0(timer_on);
  7321  0021CA  C036  F012         	movff	_timer_on,WriteTimer0@timer0
  7322  0021CE  C037  F013         	movff	_timer_on+1,WriteTimer0@timer0+1
  7323  0021D2  EC50  F013         	call	_WriteTimer0	;wreg free
  7324                           
  7325                           ;ABS_Code.c: 119: } else {
  7326  0021D6  D006               	goto	i2l3712
  7327  0021D8                     i2l3710:
  7328                           
  7329                           ;ABS_Code.c: 120: WriteTimer0(timer_off);
  7330  0021D8  C032  F012         	movff	_timer_off,WriteTimer0@timer0
  7331  0021DC  C033  F013         	movff	_timer_off+1,WriteTimer0@timer0+1
  7332  0021E0  EC50  F013         	call	_WriteTimer0	;wreg free
  7333  0021E4                     i2l3712:
  7334                           
  7335                           ;ABS_Code.c: 121: }
  7336                           ;ABS_Code.c: 122: INTCONbits.TMR0IF = 0;
  7337  0021E4  94F2               	bcf	intcon,2,c	;volatile
  7338  0021E6                     i2l643:
  7339  0021E6  C031  FFF5         	movff	??_ISR_Alta+17,tablat
  7340  0021EA  C030  FFF8         	movff	??_ISR_Alta+16,tblptru
  7341  0021EE  C02F  FFF7         	movff	??_ISR_Alta+15,tblptrh
  7342  0021F2  C02E  FFF6         	movff	??_ISR_Alta+14,tblptrl
  7343  0021F6  C02D  FFF4         	movff	??_ISR_Alta+13,prodh
  7344  0021FA  C02C  FFF3         	movff	??_ISR_Alta+12,prodl
  7345  0021FE  C02B  FFDA         	movff	??_ISR_Alta+11,fsr2h
  7346  002202  C02A  FFD9         	movff	??_ISR_Alta+10,fsr2l
  7347  002206  C029  FFE2         	movff	??_ISR_Alta+9,fsr1h
  7348  00220A  C028  FFE1         	movff	??_ISR_Alta+8,fsr1l
  7349  00220E  C027  FFEA         	movff	??_ISR_Alta+7,fsr0h
  7350  002212  C026  FFE9         	movff	??_ISR_Alta+6,fsr0l
  7351  002216  C025  FFFB         	movff	??_ISR_Alta+5,pclatu
  7352  00221A  C024  FFFA         	movff	??_ISR_Alta+4,pclath
  7353  00221E  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7354  002220  0011               	retfie		f
  7355  002222                     __end_of_ISR_Alta:
  7356                           	opt stack 0
  7357                           pclatu	equ	0xFFB
  7358                           pclath	equ	0xFFA
  7359                           tblptru	equ	0xFF8
  7360                           tblptrh	equ	0xFF7
  7361                           tblptrl	equ	0xFF6
  7362                           tablat	equ	0xFF5
  7363                           prodh	equ	0xFF4
  7364                           prodl	equ	0xFF3
  7365                           intcon	equ	0xFF2
  7366                           intcon2	equ	0xFF1
  7367                           postinc0	equ	0xFEE
  7368                           fsr0h	equ	0xFEA
  7369                           fsr0l	equ	0xFE9
  7370                           wreg	equ	0xFE8
  7371                           postdec1	equ	0xFE5
  7372                           fsr1h	equ	0xFE2
  7373                           fsr1l	equ	0xFE1
  7374                           bsr	equ	0xFE0
  7375                           indf2	equ	0xFDF
  7376                           fsr2h	equ	0xFDA
  7377                           fsr2l	equ	0xFD9
  7378                           status	equ	0xFD8
  7379                           
  7380 ;; *************** function i2___wmul *****************
  7381 ;; Defined at:
  7382 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  multiplier      2   17[COMRAM] unsigned int 
  7385 ;;  multiplicand    2   19[COMRAM] unsigned int 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  __wmul          2   21[COMRAM] unsigned int 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  2   17[COMRAM] unsigned int 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0, prodl, prodh
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7397 ;;      Params:         4       0       0       0
  7398 ;;      Locals:         2       0       0       0
  7399 ;;      Temps:          0       0       0       0
  7400 ;;      Totals:         6       0       0       0
  7401 ;;Total ram usage:        6 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_ISR_Alta
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text18
  7411  00262A                     __ptext18:
  7412                           	opt stack 0
  7413  00262A                     i2___wmul:
  7414                           	opt stack 25
  7415                           
  7416                           ;incstack = 0
  7417  00262A  5012               	movf	i2___wmul@multiplier,w,c
  7418  00262C  0214               	mulwf	i2___wmul@multiplicand,c
  7419  00262E  CFF3 F016          	movff	prodl,i2___wmul@product
  7420  002632  CFF4 F017          	movff	prodh,i2___wmul@product+1
  7421  002636  5012               	movf	i2___wmul@multiplier,w,c
  7422  002638  0215               	mulwf	i2___wmul@multiplicand+1,c
  7423  00263A  50F3               	movf	prodl,w,c
  7424  00263C  2617               	addwf	i2___wmul@product+1,f,c
  7425  00263E  5013               	movf	i2___wmul@multiplier+1,w,c
  7426  002640  0214               	mulwf	i2___wmul@multiplicand,c
  7427  002642  50F3               	movf	prodl,w,c
  7428  002644  2617               	addwf	i2___wmul@product+1,f,c
  7429  002646  C016  F012         	movff	i2___wmul@product,?i2___wmul
  7430  00264A  C017  F013         	movff	i2___wmul@product+1,?i2___wmul+1
  7431  00264E  0012               	return	
  7432  002650                     __end_ofi2___wmul:
  7433                           	opt stack 0
  7434                           pclatu	equ	0xFFB
  7435                           pclath	equ	0xFFA
  7436                           tblptru	equ	0xFF8
  7437                           tblptrh	equ	0xFF7
  7438                           tblptrl	equ	0xFF6
  7439                           tablat	equ	0xFF5
  7440                           prodh	equ	0xFF4
  7441                           prodl	equ	0xFF3
  7442                           intcon	equ	0xFF2
  7443                           intcon2	equ	0xFF1
  7444                           postinc0	equ	0xFEE
  7445                           fsr0h	equ	0xFEA
  7446                           fsr0l	equ	0xFE9
  7447                           wreg	equ	0xFE8
  7448                           postdec1	equ	0xFE5
  7449                           fsr1h	equ	0xFE2
  7450                           fsr1l	equ	0xFE1
  7451                           bsr	equ	0xFE0
  7452                           indf2	equ	0xFDF
  7453                           fsr2h	equ	0xFDA
  7454                           fsr2l	equ	0xFD9
  7455                           status	equ	0xFD8
  7456                           
  7457 ;; *************** function i2___awdiv *****************
  7458 ;; Defined at:
  7459 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  dividend        2   23[COMRAM] int 
  7462 ;;  divisor         2   25[COMRAM] int 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  __awdiv         2   29[COMRAM] int 
  7465 ;;  __awdiv         1   28[COMRAM] unsigned char 
  7466 ;;  __awdiv         1   27[COMRAM] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  2   23[COMRAM] int 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7476 ;;      Params:         4       0       0       0
  7477 ;;      Locals:         4       0       0       0
  7478 ;;      Temps:          0       0       0       0
  7479 ;;      Totals:         8       0       0       0
  7480 ;;Total ram usage:        8 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_ISR_Alta
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text19
  7490  002392                     __ptext19:
  7491                           	opt stack 0
  7492  002392                     i2___awdiv:
  7493                           	opt stack 25
  7494                           
  7495                           ;incstack = 0
  7496  002392  0E00               	movlw	0
  7497  002394  6E1D               	movwf	i2___awdiv@sign,c
  7498  002396  AE1B               	btfss	i2___awdiv@divisor+1,7,c
  7499  002398  D006               	goto	i2l3636
  7500  00239A  6C1A               	negf	i2___awdiv@divisor,c
  7501  00239C  1E1B               	comf	i2___awdiv@divisor+1,f,c
  7502  00239E  B0D8               	btfsc	status,0,c
  7503  0023A0  2A1B               	incf	i2___awdiv@divisor+1,f,c
  7504  0023A2  0E01               	movlw	1
  7505  0023A4  6E1D               	movwf	i2___awdiv@sign,c
  7506  0023A6                     i2l3636:
  7507  0023A6  AE19               	btfss	i2___awdiv@dividend+1,7,c
  7508  0023A8  D006               	goto	i2l3642
  7509  0023AA  6C18               	negf	i2___awdiv@dividend,c
  7510  0023AC  1E19               	comf	i2___awdiv@dividend+1,f,c
  7511  0023AE  B0D8               	btfsc	status,0,c
  7512  0023B0  2A19               	incf	i2___awdiv@dividend+1,f,c
  7513  0023B2  0E01               	movlw	1
  7514  0023B4  1A1D               	xorwf	i2___awdiv@sign,f,c
  7515  0023B6                     i2l3642:
  7516  0023B6  0E00               	movlw	0
  7517  0023B8  6E1F               	movwf	i2___awdiv@quotient+1,c
  7518  0023BA  0E00               	movlw	0
  7519  0023BC  6E1E               	movwf	i2___awdiv@quotient,c
  7520  0023BE  501A               	movf	i2___awdiv@divisor,w,c
  7521  0023C0  101B               	iorwf	i2___awdiv@divisor+1,w,c
  7522  0023C2  B4D8               	btfsc	status,2,c
  7523  0023C4  D01C               	goto	i2l3664
  7524  0023C6  0E01               	movlw	1
  7525  0023C8  6E1C               	movwf	i2___awdiv@counter,c
  7526  0023CA  D004               	goto	i2l3650
  7527  0023CC                     i2l3648:
  7528  0023CC  90D8               	bcf	status,0,c
  7529  0023CE  361A               	rlcf	i2___awdiv@divisor,f,c
  7530  0023D0  361B               	rlcf	i2___awdiv@divisor+1,f,c
  7531  0023D2  2A1C               	incf	i2___awdiv@counter,f,c
  7532  0023D4                     i2l3650:
  7533  0023D4  AE1B               	btfss	i2___awdiv@divisor+1,7,c
  7534  0023D6  D7FA               	goto	i2l3648
  7535  0023D8                     i2l3652:
  7536  0023D8  90D8               	bcf	status,0,c
  7537  0023DA  361E               	rlcf	i2___awdiv@quotient,f,c
  7538  0023DC  361F               	rlcf	i2___awdiv@quotient+1,f,c
  7539  0023DE  501A               	movf	i2___awdiv@divisor,w,c
  7540  0023E0  5C18               	subwf	i2___awdiv@dividend,w,c
  7541  0023E2  501B               	movf	i2___awdiv@divisor+1,w,c
  7542  0023E4  5819               	subwfb	i2___awdiv@dividend+1,w,c
  7543  0023E6  A0D8               	btfss	status,0,c
  7544  0023E8  D005               	goto	i2l3660
  7545  0023EA  501A               	movf	i2___awdiv@divisor,w,c
  7546  0023EC  5E18               	subwf	i2___awdiv@dividend,f,c
  7547  0023EE  501B               	movf	i2___awdiv@divisor+1,w,c
  7548  0023F0  5A19               	subwfb	i2___awdiv@dividend+1,f,c
  7549  0023F2  801E               	bsf	i2___awdiv@quotient,0,c
  7550  0023F4                     i2l3660:
  7551  0023F4  90D8               	bcf	status,0,c
  7552  0023F6  321B               	rrcf	i2___awdiv@divisor+1,f,c
  7553  0023F8  321A               	rrcf	i2___awdiv@divisor,f,c
  7554  0023FA  2E1C               	decfsz	i2___awdiv@counter,f,c
  7555  0023FC  D7ED               	goto	i2l3652
  7556  0023FE                     i2l3664:
  7557  0023FE  501D               	movf	i2___awdiv@sign,w,c
  7558  002400  B4D8               	btfsc	status,2,c
  7559  002402  D004               	goto	i2l3668
  7560  002404  6C1E               	negf	i2___awdiv@quotient,c
  7561  002406  1E1F               	comf	i2___awdiv@quotient+1,f,c
  7562  002408  B0D8               	btfsc	status,0,c
  7563  00240A  2A1F               	incf	i2___awdiv@quotient+1,f,c
  7564  00240C                     i2l3668:
  7565  00240C  C01E  F018         	movff	i2___awdiv@quotient,?i2___awdiv
  7566  002410  C01F  F019         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  7567  002414  0012               	return	
  7568  002416                     __end_ofi2___awdiv:
  7569                           	opt stack 0
  7570                           pclatu	equ	0xFFB
  7571                           pclath	equ	0xFFA
  7572                           tblptru	equ	0xFF8
  7573                           tblptrh	equ	0xFF7
  7574                           tblptrl	equ	0xFF6
  7575                           tablat	equ	0xFF5
  7576                           prodh	equ	0xFF4
  7577                           prodl	equ	0xFF3
  7578                           intcon	equ	0xFF2
  7579                           intcon2	equ	0xFF1
  7580                           postinc0	equ	0xFEE
  7581                           fsr0h	equ	0xFEA
  7582                           fsr0l	equ	0xFE9
  7583                           wreg	equ	0xFE8
  7584                           postdec1	equ	0xFE5
  7585                           fsr1h	equ	0xFE2
  7586                           fsr1l	equ	0xFE1
  7587                           bsr	equ	0xFE0
  7588                           indf2	equ	0xFDF
  7589                           fsr2h	equ	0xFDA
  7590                           fsr2l	equ	0xFD9
  7591                           status	equ	0xFD8
  7592                           
  7593 ;; *************** function _WriteTimer0 *****************
  7594 ;; Defined at:
  7595 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  timer0          2   17[COMRAM] unsigned int 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  timer           2   19[COMRAM] struct Timers
  7600 ;; Return value:  Size  Location     Type
  7601 ;;		None               void
  7602 ;; Registers used:
  7603 ;;		None
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7609 ;;      Params:         2       0       0       0
  7610 ;;      Locals:         2       0       0       0
  7611 ;;      Temps:          0       0       0       0
  7612 ;;      Totals:         4       0       0       0
  7613 ;;Total ram usage:        4 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_ISR_Alta
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text20
  7623  0026A0                     __ptext20:
  7624                           	opt stack 0
  7625  0026A0                     _WriteTimer0:
  7626                           	opt stack 25
  7627                           
  7628                           ;incstack = 0
  7629  0026A0  C012  F014         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7630  0026A4  C013  F015         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7631  0026A8  C015  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7632  0026AC  C014  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7633  0026B0  0012               	return		;funcret
  7634  0026B2                     __end_of_WriteTimer0:
  7635                           	opt stack 0
  7636                           pclatu	equ	0xFFB
  7637                           pclath	equ	0xFFA
  7638                           tblptru	equ	0xFF8
  7639                           tblptrh	equ	0xFF7
  7640                           tblptrl	equ	0xFF6
  7641                           tablat	equ	0xFF5
  7642                           prodh	equ	0xFF4
  7643                           prodl	equ	0xFF3
  7644                           intcon	equ	0xFF2
  7645                           intcon2	equ	0xFF1
  7646                           postinc0	equ	0xFEE
  7647                           fsr0h	equ	0xFEA
  7648                           fsr0l	equ	0xFE9
  7649                           wreg	equ	0xFE8
  7650                           postdec1	equ	0xFE5
  7651                           fsr1h	equ	0xFE2
  7652                           fsr1l	equ	0xFE1
  7653                           bsr	equ	0xFE0
  7654                           indf2	equ	0xFDF
  7655                           fsr2h	equ	0xFDA
  7656                           fsr2l	equ	0xFD9
  7657                           status	equ	0xFD8
  7658                           
  7659 ;; *************** function _CANreceiveMessage *****************
  7660 ;; Defined at:
  7661 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  msg             2   17[COMRAM] PTR struct .
  7664 ;;		 -> msg(15), 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  tamp            1   28[COMRAM] unsigned char 
  7667 ;;  error           1   27[COMRAM] unsigned char 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      unsigned char 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7677 ;;      Params:         2       0       0       0
  7678 ;;      Locals:         2       0       0       0
  7679 ;;      Temps:          8       0       0       0
  7680 ;;      Totals:        12       0       0       0
  7681 ;;Total ram usage:       12 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_ISR_Alta
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text21
  7691  001358                     __ptext21:
  7692                           	opt stack 0
  7693  001358                     _CANreceiveMessage:
  7694                           	opt stack 25
  7695                           
  7696                           ;inc\CANlib.h: 530: BYTE tamp;
  7697                           ;inc\CANlib.h: 531: BYTE error = 0;
  7698                           
  7699                           ;incstack = 0
  7700  001358  0E00               	movlw	0
  7701  00135A  6E1C               	movwf	CANreceiveMessage@error,c
  7702                           
  7703                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7704  00135C  BE74               	btfsc	3956,7,c	;volatile
  7705                           
  7706                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7707  00135E  801C               	bsf	CANreceiveMessage@error,0,c
  7708                           
  7709                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7710  001360  BC74               	btfsc	3956,6,c	;volatile
  7711                           
  7712                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7713  001362  821C               	bsf	CANreceiveMessage@error,1,c
  7714                           
  7715                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7716  001364  010F               	movlb	15	; () banked
  7717  001366  AF50               	btfss	80,7,b	;volatile
  7718  001368  D143               	goto	i2l412
  7719                           
  7720                           ; BSR set to: 15
  7721                           ;inc\CANlib.h: 541: {
  7722                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7723  00136A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7724  00136E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7725  001372  6ADE               	clrf	postinc2,c
  7726  001374  6ADE               	clrf	postinc2,c
  7727  001376  6ADE               	clrf	postinc2,c
  7728  001378  6ADD               	clrf	postdec2,c
  7729                           
  7730                           ; BSR set to: 15
  7731                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7732  00137A  EE20 F004          	lfsr	2,4
  7733  00137E  5012               	movf	CANreceiveMessage@msg,w,c
  7734  001380  26D9               	addwf	fsr2l,f,c
  7735  001382  5013               	movf	CANreceiveMessage@msg+1,w,c
  7736  001384  22DA               	addwfc	fsr2h,f,c
  7737  001386  CF56 FFDF          	movff	3926,indf2	;volatile
  7738                           
  7739                           ; BSR set to: 15
  7740                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7741  00138A  EE20 F005          	lfsr	2,5
  7742  00138E  5012               	movf	CANreceiveMessage@msg,w,c
  7743  001390  26D9               	addwf	fsr2l,f,c
  7744  001392  5013               	movf	CANreceiveMessage@msg+1,w,c
  7745  001394  22DA               	addwfc	fsr2h,f,c
  7746  001396  CF57 FFDF          	movff	3927,indf2	;volatile
  7747                           
  7748                           ; BSR set to: 15
  7749                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7750  00139A  EE20 F006          	lfsr	2,6
  7751  00139E  5012               	movf	CANreceiveMessage@msg,w,c
  7752  0013A0  26D9               	addwf	fsr2l,f,c
  7753  0013A2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7754  0013A4  22DA               	addwfc	fsr2h,f,c
  7755  0013A6  CF58 FFDF          	movff	3928,indf2	;volatile
  7756                           
  7757                           ; BSR set to: 15
  7758                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7759  0013AA  EE20 F007          	lfsr	2,7
  7760  0013AE  5012               	movf	CANreceiveMessage@msg,w,c
  7761  0013B0  26D9               	addwf	fsr2l,f,c
  7762  0013B2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7763  0013B4  22DA               	addwfc	fsr2h,f,c
  7764  0013B6  CF59 FFDF          	movff	3929,indf2	;volatile
  7765                           
  7766                           ; BSR set to: 15
  7767                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7768  0013BA  EE20 F008          	lfsr	2,8
  7769  0013BE  5012               	movf	CANreceiveMessage@msg,w,c
  7770  0013C0  26D9               	addwf	fsr2l,f,c
  7771  0013C2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7772  0013C4  22DA               	addwfc	fsr2h,f,c
  7773  0013C6  CF5A FFDF          	movff	3930,indf2	;volatile
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7777  0013CA  EE20 F009          	lfsr	2,9
  7778  0013CE  5012               	movf	CANreceiveMessage@msg,w,c
  7779  0013D0  26D9               	addwf	fsr2l,f,c
  7780  0013D2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7781  0013D4  22DA               	addwfc	fsr2h,f,c
  7782  0013D6  CF5B FFDF          	movff	3931,indf2	;volatile
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7786  0013DA  EE20 F00A          	lfsr	2,10
  7787  0013DE  5012               	movf	CANreceiveMessage@msg,w,c
  7788  0013E0  26D9               	addwf	fsr2l,f,c
  7789  0013E2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7790  0013E4  22DA               	addwfc	fsr2h,f,c
  7791  0013E6  CF5C FFDF          	movff	3932,indf2	;volatile
  7792                           
  7793                           ; BSR set to: 15
  7794                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7795  0013EA  EE20 F00B          	lfsr	2,11
  7796  0013EE  5012               	movf	CANreceiveMessage@msg,w,c
  7797  0013F0  26D9               	addwf	fsr2l,f,c
  7798  0013F2  5013               	movf	CANreceiveMessage@msg+1,w,c
  7799  0013F4  22DA               	addwfc	fsr2h,f,c
  7800  0013F6  CF5D FFDF          	movff	3933,indf2	;volatile
  7801                           
  7802                           ; BSR set to: 15
  7803                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7804  0013FA  EE20 F00E          	lfsr	2,14
  7805  0013FE  5012               	movf	CANreceiveMessage@msg,w,c
  7806  001400  26D9               	addwf	fsr2l,f,c
  7807  001402  5013               	movf	CANreceiveMessage@msg+1,w,c
  7808  001404  22DA               	addwfc	fsr2h,f,c
  7809  001406  010F               	movlb	15	; () banked
  7810  001408  AD55               	btfss	85,6,b	;volatile
  7811  00140A  D002               	goto	i2u377_40
  7812  00140C  0E01               	movlw	1
  7813  00140E  D001               	goto	i2u377_46
  7814  001410                     i2u377_40:
  7815  001410  0E00               	movlw	0
  7816  001412                     i2u377_46:
  7817  001412  6EDF               	movwf	indf2,c
  7818                           
  7819                           ; BSR set to: 15
  7820                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7821  001414  EE20 F00D          	lfsr	2,13
  7822  001418  5012               	movf	CANreceiveMessage@msg,w,c
  7823  00141A  26D9               	addwf	fsr2l,f,c
  7824  00141C  5013               	movf	CANreceiveMessage@msg+1,w,c
  7825  00141E  22DA               	addwfc	fsr2h,f,c
  7826  001420  010F               	movlb	15	; () banked
  7827  001422  5155               	movf	85,w,b	;volatile
  7828  001424  0B0F               	andlw	15
  7829  001426  6EDF               	movwf	indf2,c
  7830                           
  7831                           ; BSR set to: 15
  7832                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7833  001428  EE20 F00C          	lfsr	2,12
  7834  00142C  5012               	movf	CANreceiveMessage@msg,w,c
  7835  00142E  26D9               	addwf	fsr2l,f,c
  7836  001430  5013               	movf	CANreceiveMessage@msg+1,w,c
  7837  001432  22DA               	addwfc	fsr2h,f,c
  7838  001434  010F               	movlb	15	; () banked
  7839  001436  A752               	btfss	82,3,b	;volatile
  7840  001438  D002               	goto	i2u378_40
  7841  00143A  0E01               	movlw	1
  7842  00143C  D001               	goto	i2u378_46
  7843  00143E                     i2u378_40:
  7844  00143E  0E00               	movlw	0
  7845  001440                     i2u378_46:
  7846  001440  6EDF               	movwf	indf2,c
  7847                           
  7848                           ; BSR set to: 15
  7849                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7850  001442  010F               	movlb	15	; () banked
  7851  001444  B752               	btfsc	82,3,b	;volatile
  7852  001446  D044               	goto	i2l3408
  7853                           
  7854                           ; BSR set to: 15
  7855                           ;inc\CANlib.h: 559: {
  7856                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7857  001448  CF51 F014          	movff	3921,??_CANreceiveMessage	;volatile
  7858  00144C  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7859  00144E  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7860  001450  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7861  001452  0E03               	movlw	3
  7862  001454                     i2u380_45:
  7863  001454  90D8               	bcf	status,0,c
  7864  001456  3614               	rlcf	??_CANreceiveMessage,f,c
  7865  001458  3615               	rlcf	??_CANreceiveMessage+1,f,c
  7866  00145A  3616               	rlcf	??_CANreceiveMessage+2,f,c
  7867  00145C  3617               	rlcf	??_CANreceiveMessage+3,f,c
  7868  00145E  2EE8               	decfsz	wreg,f,c
  7869  001460  D7F9               	goto	i2u380_45
  7870  001462  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7871  001466  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7872  00146A  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  7873  00146E  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7874  001472  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7875  001476  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7876                           
  7877                           ; BSR set to: 15
  7878                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7879  00147A  010F               	movlb	15	; () banked
  7880  00147C  3952               	swapf	82,w,b	;volatile
  7881  00147E  42E8               	rrncf	wreg,f,c
  7882  001480  0B07               	andlw	7
  7883  001482  0B07               	andlw	7
  7884  001484  6E1D               	movwf	CANreceiveMessage@tamp,c
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7888  001486  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7889  00148A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7890  00148E  CFDE F014          	movff	postinc2,??_CANreceiveMessage
  7891  001492  CFDE F015          	movff	postinc2,??_CANreceiveMessage+1
  7892  001496  CFDE F016          	movff	postinc2,??_CANreceiveMessage+2
  7893  00149A  CFDE F017          	movff	postinc2,??_CANreceiveMessage+3
  7894  00149E  501D               	movf	CANreceiveMessage@tamp,w,c
  7895  0014A0  2414               	addwf	??_CANreceiveMessage,w,c
  7896  0014A2  6E18               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7897  0014A4  0E00               	movlw	0
  7898  0014A6  2015               	addwfc	??_CANreceiveMessage+1,w,c
  7899  0014A8  6E19               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7900  0014AA  0E00               	movlw	0
  7901  0014AC  2016               	addwfc	??_CANreceiveMessage+2,w,c
  7902  0014AE  6E1A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7903  0014B0  0E00               	movlw	0
  7904  0014B2  2017               	addwfc	??_CANreceiveMessage+3,w,c
  7905  0014B4  6E1B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7906  0014B6  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7907  0014BA  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7908  0014BE  C018  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7909  0014C2  C019  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7910  0014C6  C01A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7911  0014CA  C01B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7912                           
  7913                           ;inc\CANlib.h: 563: }
  7914  0014CE  D08D               	goto	i2l3434
  7915  0014D0                     i2l3408:
  7916                           
  7917                           ; BSR set to: 15
  7918                           ;inc\CANlib.h: 564: else
  7919                           ;inc\CANlib.h: 565: {
  7920                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7921  0014D0  CF54 F014          	movff	3924,??_CANreceiveMessage	;volatile
  7922  0014D4  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7923  0014D6  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7924  0014D8  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7925  0014DA  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7926  0014DE  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7927  0014E2  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  7928  0014E6  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7929  0014EA  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7930  0014EE  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7931                           
  7932                           ; BSR set to: 15
  7933                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7934  0014F2  CF53 F014          	movff	3923,??_CANreceiveMessage	;volatile
  7935  0014F6  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7936  0014F8  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7937  0014FA  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7938  0014FC  C016  F017         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7939  001500  C015  F016         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7940  001504  C014  F015         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7941  001508  6A14               	clrf	??_CANreceiveMessage,c
  7942  00150A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7943  00150E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7944  001512  5014               	movf	??_CANreceiveMessage,w,c
  7945  001514  26DE               	addwf	postinc2,f,c
  7946  001516  5015               	movf	??_CANreceiveMessage+1,w,c
  7947  001518  22DE               	addwfc	postinc2,f,c
  7948  00151A  5016               	movf	??_CANreceiveMessage+2,w,c
  7949  00151C  22DE               	addwfc	postinc2,f,c
  7950  00151E  5017               	movf	??_CANreceiveMessage+3,w,c
  7951  001520  22DE               	addwfc	postinc2,f,c
  7952                           
  7953                           ; BSR set to: 15
  7954                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7955  001522  010F               	movlb	15	; () banked
  7956  001524  A152               	btfss	82,0,b	;volatile
  7957  001526  D00C               	goto	i2l3416
  7958                           
  7959                           ; BSR set to: 15
  7960                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7961  001528  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7962  00152C  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7963  001530  0E00               	movlw	0
  7964  001532  12DE               	iorwf	postinc2,f,c
  7965  001534  0E00               	movlw	0
  7966  001536  12DE               	iorwf	postinc2,f,c
  7967  001538  0E01               	movlw	1
  7968  00153A  12DE               	iorwf	postinc2,f,c
  7969  00153C  0E00               	movlw	0
  7970  00153E  12DE               	iorwf	postinc2,f,c
  7971  001540                     i2l3416:
  7972                           
  7973                           ; BSR set to: 15
  7974                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7975  001540  010F               	movlb	15	; () banked
  7976  001542  A352               	btfss	82,1,b	;volatile
  7977  001544  D00C               	goto	i2l3420
  7978                           
  7979                           ; BSR set to: 15
  7980                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7981  001546  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7982  00154A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7983  00154E  0E00               	movlw	0
  7984  001550  12DE               	iorwf	postinc2,f,c
  7985  001552  0E00               	movlw	0
  7986  001554  12DE               	iorwf	postinc2,f,c
  7987  001556  0E02               	movlw	2
  7988  001558  12DE               	iorwf	postinc2,f,c
  7989  00155A  0E00               	movlw	0
  7990  00155C  12DE               	iorwf	postinc2,f,c
  7991  00155E                     i2l3420:
  7992                           
  7993                           ; BSR set to: 15
  7994                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7995  00155E  010F               	movlb	15	; () banked
  7996  001560  AB52               	btfss	82,5,b	;volatile
  7997  001562  D00C               	goto	i2l3424
  7998                           
  7999                           ; BSR set to: 15
  8000                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8001  001564  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8002  001568  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8003  00156C  0E00               	movlw	0
  8004  00156E  12DE               	iorwf	postinc2,f,c
  8005  001570  0E00               	movlw	0
  8006  001572  12DE               	iorwf	postinc2,f,c
  8007  001574  0E04               	movlw	4
  8008  001576  12DE               	iorwf	postinc2,f,c
  8009  001578  0E00               	movlw	0
  8010  00157A  12DE               	iorwf	postinc2,f,c
  8011  00157C                     i2l3424:
  8012                           
  8013                           ; BSR set to: 15
  8014                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8015  00157C  010F               	movlb	15	; () banked
  8016  00157E  AD52               	btfss	82,6,b	;volatile
  8017  001580  D00C               	goto	i2l3428
  8018                           
  8019                           ; BSR set to: 15
  8020                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8021  001582  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8022  001586  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8023  00158A  0E00               	movlw	0
  8024  00158C  12DE               	iorwf	postinc2,f,c
  8025  00158E  0E00               	movlw	0
  8026  001590  12DE               	iorwf	postinc2,f,c
  8027  001592  0E08               	movlw	8
  8028  001594  12DE               	iorwf	postinc2,f,c
  8029  001596  0E00               	movlw	0
  8030  001598  12DE               	iorwf	postinc2,f,c
  8031  00159A                     i2l3428:
  8032                           
  8033                           ; BSR set to: 15
  8034                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8035  00159A  010F               	movlb	15	; () banked
  8036  00159C  AF52               	btfss	82,7,b	;volatile
  8037  00159E  D00C               	goto	i2l3432
  8038                           
  8039                           ; BSR set to: 15
  8040                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8041  0015A0  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8042  0015A4  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8043  0015A8  0E00               	movlw	0
  8044  0015AA  12DE               	iorwf	postinc2,f,c
  8045  0015AC  0E00               	movlw	0
  8046  0015AE  12DE               	iorwf	postinc2,f,c
  8047  0015B0  0E10               	movlw	16
  8048  0015B2  12DE               	iorwf	postinc2,f,c
  8049  0015B4  0E00               	movlw	0
  8050  0015B6  12DE               	iorwf	postinc2,f,c
  8051  0015B8                     i2l3432:
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8055  0015B8  CF51 F014          	movff	3921,??_CANreceiveMessage	;volatile
  8056  0015BC  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8057  0015BE  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8058  0015C0  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8059  0015C2  0E15               	movlw	21
  8060  0015C4                     i2u386_45:
  8061  0015C4  90D8               	bcf	status,0,c
  8062  0015C6  3614               	rlcf	??_CANreceiveMessage,f,c
  8063  0015C8  3615               	rlcf	??_CANreceiveMessage+1,f,c
  8064  0015CA  3616               	rlcf	??_CANreceiveMessage+2,f,c
  8065  0015CC  3617               	rlcf	??_CANreceiveMessage+3,f,c
  8066  0015CE  2EE8               	decfsz	wreg,f,c
  8067  0015D0  D7F9               	goto	i2u386_45
  8068  0015D2  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8069  0015D6  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8070  0015DA  5014               	movf	??_CANreceiveMessage,w,c
  8071  0015DC  12DE               	iorwf	postinc2,f,c
  8072  0015DE  5015               	movf	??_CANreceiveMessage+1,w,c
  8073  0015E0  12DE               	iorwf	postinc2,f,c
  8074  0015E2  5016               	movf	??_CANreceiveMessage+2,w,c
  8075  0015E4  12DE               	iorwf	postinc2,f,c
  8076  0015E6  5017               	movf	??_CANreceiveMessage+3,w,c
  8077  0015E8  12DE               	iorwf	postinc2,f,c
  8078  0015EA                     i2l3434:
  8079                           
  8080                           ; BSR set to: 15
  8081                           ;inc\CANlib.h: 581: }
  8082                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8083  0015EA  010F               	movlb	15	; () banked
  8084  0015EC  9F50               	bcf	80,7,b	;volatile
  8085                           
  8086                           ; BSR set to: 15
  8087                           ;inc\CANlib.h: 584: return (error);
  8088                           ;	Return value of _CANreceiveMessage is never used
  8089  0015EE  0012               	return	
  8090  0015F0                     i2l412:
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;inc\CANlib.h: 585: }
  8094                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8095  0015F0  AE60               	btfss	3936,7,c	;volatile
  8096  0015F2  0012               	return	
  8097                           
  8098                           ; BSR set to: 15
  8099                           ;inc\CANlib.h: 588: {
  8100                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8101  0015F4  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8102  0015F8  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8103  0015FC  6ADE               	clrf	postinc2,c
  8104  0015FE  6ADE               	clrf	postinc2,c
  8105  001600  6ADE               	clrf	postinc2,c
  8106  001602  6ADD               	clrf	postdec2,c
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8110  001604  EE20 F004          	lfsr	2,4
  8111  001608  5012               	movf	CANreceiveMessage@msg,w,c
  8112  00160A  26D9               	addwf	fsr2l,f,c
  8113  00160C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8114  00160E  22DA               	addwfc	fsr2h,f,c
  8115  001610  CF66 FFDF          	movff	3942,indf2	;volatile
  8116                           
  8117                           ; BSR set to: 15
  8118                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8119  001614  EE20 F005          	lfsr	2,5
  8120  001618  5012               	movf	CANreceiveMessage@msg,w,c
  8121  00161A  26D9               	addwf	fsr2l,f,c
  8122  00161C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8123  00161E  22DA               	addwfc	fsr2h,f,c
  8124  001620  CF67 FFDF          	movff	3943,indf2	;volatile
  8125                           
  8126                           ; BSR set to: 15
  8127                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8128  001624  EE20 F006          	lfsr	2,6
  8129  001628  5012               	movf	CANreceiveMessage@msg,w,c
  8130  00162A  26D9               	addwf	fsr2l,f,c
  8131  00162C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8132  00162E  22DA               	addwfc	fsr2h,f,c
  8133  001630  CF68 FFDF          	movff	3944,indf2	;volatile
  8134                           
  8135                           ; BSR set to: 15
  8136                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8137  001634  EE20 F007          	lfsr	2,7
  8138  001638  5012               	movf	CANreceiveMessage@msg,w,c
  8139  00163A  26D9               	addwf	fsr2l,f,c
  8140  00163C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8141  00163E  22DA               	addwfc	fsr2h,f,c
  8142  001640  CF69 FFDF          	movff	3945,indf2	;volatile
  8143                           
  8144                           ; BSR set to: 15
  8145                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8146  001644  EE20 F008          	lfsr	2,8
  8147  001648  5012               	movf	CANreceiveMessage@msg,w,c
  8148  00164A  26D9               	addwf	fsr2l,f,c
  8149  00164C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8150  00164E  22DA               	addwfc	fsr2h,f,c
  8151  001650  CF6A FFDF          	movff	3946,indf2	;volatile
  8152                           
  8153                           ; BSR set to: 15
  8154                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8155  001654  EE20 F009          	lfsr	2,9
  8156  001658  5012               	movf	CANreceiveMessage@msg,w,c
  8157  00165A  26D9               	addwf	fsr2l,f,c
  8158  00165C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8159  00165E  22DA               	addwfc	fsr2h,f,c
  8160  001660  CF6B FFDF          	movff	3947,indf2	;volatile
  8161                           
  8162                           ; BSR set to: 15
  8163                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8164  001664  EE20 F00A          	lfsr	2,10
  8165  001668  5012               	movf	CANreceiveMessage@msg,w,c
  8166  00166A  26D9               	addwf	fsr2l,f,c
  8167  00166C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8168  00166E  22DA               	addwfc	fsr2h,f,c
  8169  001670  CF6C FFDF          	movff	3948,indf2	;volatile
  8170                           
  8171                           ; BSR set to: 15
  8172                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8173  001674  EE20 F00B          	lfsr	2,11
  8174  001678  5012               	movf	CANreceiveMessage@msg,w,c
  8175  00167A  26D9               	addwf	fsr2l,f,c
  8176  00167C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8177  00167E  22DA               	addwfc	fsr2h,f,c
  8178  001680  CF6D FFDF          	movff	3949,indf2	;volatile
  8179                           
  8180                           ; BSR set to: 15
  8181                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8182  001684  EE20 F00E          	lfsr	2,14
  8183  001688  5012               	movf	CANreceiveMessage@msg,w,c
  8184  00168A  26D9               	addwf	fsr2l,f,c
  8185  00168C  5013               	movf	CANreceiveMessage@msg+1,w,c
  8186  00168E  22DA               	addwfc	fsr2h,f,c
  8187  001690  AC65               	btfss	3941,6,c	;volatile
  8188  001692  D002               	goto	i2u388_40
  8189  001694  0E01               	movlw	1
  8190  001696  D001               	goto	i2u388_46
  8191  001698                     i2u388_40:
  8192  001698  0E00               	movlw	0
  8193  00169A                     i2u388_46:
  8194  00169A  6EDF               	movwf	indf2,c
  8195                           
  8196                           ; BSR set to: 15
  8197                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8198  00169C  EE20 F00D          	lfsr	2,13
  8199  0016A0  5012               	movf	CANreceiveMessage@msg,w,c
  8200  0016A2  26D9               	addwf	fsr2l,f,c
  8201  0016A4  5013               	movf	CANreceiveMessage@msg+1,w,c
  8202  0016A6  22DA               	addwfc	fsr2h,f,c
  8203  0016A8  5065               	movf	3941,w,c	;volatile
  8204  0016AA  0B0F               	andlw	15
  8205  0016AC  6EDF               	movwf	indf2,c
  8206                           
  8207                           ; BSR set to: 15
  8208                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8209  0016AE  EE20 F00C          	lfsr	2,12
  8210  0016B2  5012               	movf	CANreceiveMessage@msg,w,c
  8211  0016B4  26D9               	addwf	fsr2l,f,c
  8212  0016B6  5013               	movf	CANreceiveMessage@msg+1,w,c
  8213  0016B8  22DA               	addwfc	fsr2h,f,c
  8214  0016BA  A662               	btfss	3938,3,c	;volatile
  8215  0016BC  D002               	goto	i2u389_40
  8216  0016BE  0E01               	movlw	1
  8217  0016C0  D001               	goto	i2u389_46
  8218  0016C2                     i2u389_40:
  8219  0016C2  0E00               	movlw	0
  8220  0016C4                     i2u389_46:
  8221  0016C4  6EDF               	movwf	indf2,c
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8225  0016C6  B662               	btfsc	3938,3,c	;volatile
  8226  0016C8  D043               	goto	i2l3470
  8227                           
  8228                           ; BSR set to: 15
  8229                           ;inc\CANlib.h: 606: {
  8230                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8231  0016CA  CF61 F014          	movff	3937,??_CANreceiveMessage	;volatile
  8232  0016CE  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8233  0016D0  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8234  0016D2  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8235  0016D4  0E03               	movlw	3
  8236  0016D6                     i2u391_45:
  8237  0016D6  90D8               	bcf	status,0,c
  8238  0016D8  3614               	rlcf	??_CANreceiveMessage,f,c
  8239  0016DA  3615               	rlcf	??_CANreceiveMessage+1,f,c
  8240  0016DC  3616               	rlcf	??_CANreceiveMessage+2,f,c
  8241  0016DE  3617               	rlcf	??_CANreceiveMessage+3,f,c
  8242  0016E0  2EE8               	decfsz	wreg,f,c
  8243  0016E2  D7F9               	goto	i2u391_45
  8244  0016E4  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8245  0016E8  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8246  0016EC  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  8247  0016F0  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8248  0016F4  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8249  0016F8  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8250                           
  8251                           ; BSR set to: 15
  8252                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8253  0016FC  3862               	swapf	3938,w,c	;volatile
  8254  0016FE  42E8               	rrncf	wreg,f,c
  8255  001700  0B07               	andlw	7
  8256  001702  0B07               	andlw	7
  8257  001704  6E1D               	movwf	CANreceiveMessage@tamp,c
  8258                           
  8259                           ; BSR set to: 15
  8260                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8261  001706  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8262  00170A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8263  00170E  CFDE F014          	movff	postinc2,??_CANreceiveMessage
  8264  001712  CFDE F015          	movff	postinc2,??_CANreceiveMessage+1
  8265  001716  CFDE F016          	movff	postinc2,??_CANreceiveMessage+2
  8266  00171A  CFDE F017          	movff	postinc2,??_CANreceiveMessage+3
  8267  00171E  501D               	movf	CANreceiveMessage@tamp,w,c
  8268  001720  2414               	addwf	??_CANreceiveMessage,w,c
  8269  001722  6E18               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8270  001724  0E00               	movlw	0
  8271  001726  2015               	addwfc	??_CANreceiveMessage+1,w,c
  8272  001728  6E19               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8273  00172A  0E00               	movlw	0
  8274  00172C  2016               	addwfc	??_CANreceiveMessage+2,w,c
  8275  00172E  6E1A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8276  001730  0E00               	movlw	0
  8277  001732  2017               	addwfc	??_CANreceiveMessage+3,w,c
  8278  001734  6E1B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8279  001736  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8280  00173A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8281  00173E  C018  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8282  001742  C019  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8283  001746  C01A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8284  00174A  C01B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8285                           
  8286                           ;inc\CANlib.h: 610: }
  8287  00174E  D088               	goto	i2l3496
  8288  001750                     i2l3470:
  8289                           
  8290                           ; BSR set to: 15
  8291                           ;inc\CANlib.h: 611: else
  8292                           ;inc\CANlib.h: 612: {
  8293                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8294  001750  CF64 F014          	movff	3940,??_CANreceiveMessage	;volatile
  8295  001754  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8296  001756  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8297  001758  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8298  00175A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8299  00175E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8300  001762  C014  FFDE         	movff	??_CANreceiveMessage,postinc2
  8301  001766  C015  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8302  00176A  C016  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8303  00176E  C017  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8304                           
  8305                           ; BSR set to: 15
  8306                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8307  001772  CF63 F014          	movff	3939,??_CANreceiveMessage	;volatile
  8308  001776  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8309  001778  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8310  00177A  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8311  00177C  C016  F017         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8312  001780  C015  F016         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8313  001784  C014  F015         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8314  001788  6A14               	clrf	??_CANreceiveMessage,c
  8315  00178A  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8316  00178E  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8317  001792  5014               	movf	??_CANreceiveMessage,w,c
  8318  001794  26DE               	addwf	postinc2,f,c
  8319  001796  5015               	movf	??_CANreceiveMessage+1,w,c
  8320  001798  22DE               	addwfc	postinc2,f,c
  8321  00179A  5016               	movf	??_CANreceiveMessage+2,w,c
  8322  00179C  22DE               	addwfc	postinc2,f,c
  8323  00179E  5017               	movf	??_CANreceiveMessage+3,w,c
  8324  0017A0  22DE               	addwfc	postinc2,f,c
  8325                           
  8326                           ; BSR set to: 15
  8327                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8328  0017A2  A062               	btfss	3938,0,c	;volatile
  8329  0017A4  D00C               	goto	i2l3478
  8330                           
  8331                           ; BSR set to: 15
  8332                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8333  0017A6  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8334  0017AA  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8335  0017AE  0E00               	movlw	0
  8336  0017B0  12DE               	iorwf	postinc2,f,c
  8337  0017B2  0E00               	movlw	0
  8338  0017B4  12DE               	iorwf	postinc2,f,c
  8339  0017B6  0E01               	movlw	1
  8340  0017B8  12DE               	iorwf	postinc2,f,c
  8341  0017BA  0E00               	movlw	0
  8342  0017BC  12DE               	iorwf	postinc2,f,c
  8343  0017BE                     i2l3478:
  8344                           
  8345                           ; BSR set to: 15
  8346                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8347  0017BE  A262               	btfss	3938,1,c	;volatile
  8348  0017C0  D00C               	goto	i2l3482
  8349                           
  8350                           ; BSR set to: 15
  8351                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8352  0017C2  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8353  0017C6  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8354  0017CA  0E00               	movlw	0
  8355  0017CC  12DE               	iorwf	postinc2,f,c
  8356  0017CE  0E00               	movlw	0
  8357  0017D0  12DE               	iorwf	postinc2,f,c
  8358  0017D2  0E02               	movlw	2
  8359  0017D4  12DE               	iorwf	postinc2,f,c
  8360  0017D6  0E00               	movlw	0
  8361  0017D8  12DE               	iorwf	postinc2,f,c
  8362  0017DA                     i2l3482:
  8363                           
  8364                           ; BSR set to: 15
  8365                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8366  0017DA  AA62               	btfss	3938,5,c	;volatile
  8367  0017DC  D00C               	goto	i2l3486
  8368                           
  8369                           ; BSR set to: 15
  8370                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8371  0017DE  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8372  0017E2  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8373  0017E6  0E00               	movlw	0
  8374  0017E8  12DE               	iorwf	postinc2,f,c
  8375  0017EA  0E00               	movlw	0
  8376  0017EC  12DE               	iorwf	postinc2,f,c
  8377  0017EE  0E04               	movlw	4
  8378  0017F0  12DE               	iorwf	postinc2,f,c
  8379  0017F2  0E00               	movlw	0
  8380  0017F4  12DE               	iorwf	postinc2,f,c
  8381  0017F6                     i2l3486:
  8382                           
  8383                           ; BSR set to: 15
  8384                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8385  0017F6  AC62               	btfss	3938,6,c	;volatile
  8386  0017F8  D00C               	goto	i2l3490
  8387                           
  8388                           ; BSR set to: 15
  8389                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8390  0017FA  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8391  0017FE  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8392  001802  0E00               	movlw	0
  8393  001804  12DE               	iorwf	postinc2,f,c
  8394  001806  0E00               	movlw	0
  8395  001808  12DE               	iorwf	postinc2,f,c
  8396  00180A  0E08               	movlw	8
  8397  00180C  12DE               	iorwf	postinc2,f,c
  8398  00180E  0E00               	movlw	0
  8399  001810  12DE               	iorwf	postinc2,f,c
  8400  001812                     i2l3490:
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8404  001812  AE62               	btfss	3938,7,c	;volatile
  8405  001814  D00C               	goto	i2l3494
  8406                           
  8407                           ; BSR set to: 15
  8408                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8409  001816  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8410  00181A  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8411  00181E  0E00               	movlw	0
  8412  001820  12DE               	iorwf	postinc2,f,c
  8413  001822  0E00               	movlw	0
  8414  001824  12DE               	iorwf	postinc2,f,c
  8415  001826  0E10               	movlw	16
  8416  001828  12DE               	iorwf	postinc2,f,c
  8417  00182A  0E00               	movlw	0
  8418  00182C  12DE               	iorwf	postinc2,f,c
  8419  00182E                     i2l3494:
  8420                           
  8421                           ; BSR set to: 15
  8422                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8423  00182E  CF61 F014          	movff	3937,??_CANreceiveMessage	;volatile
  8424  001832  6A15               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8425  001834  6A16               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8426  001836  6A17               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8427  001838  0E15               	movlw	21
  8428  00183A                     i2u397_45:
  8429  00183A  90D8               	bcf	status,0,c
  8430  00183C  3614               	rlcf	??_CANreceiveMessage,f,c
  8431  00183E  3615               	rlcf	??_CANreceiveMessage+1,f,c
  8432  001840  3616               	rlcf	??_CANreceiveMessage+2,f,c
  8433  001842  3617               	rlcf	??_CANreceiveMessage+3,f,c
  8434  001844  2EE8               	decfsz	wreg,f,c
  8435  001846  D7F9               	goto	i2u397_45
  8436  001848  C012  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8437  00184C  C013  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8438  001850  5014               	movf	??_CANreceiveMessage,w,c
  8439  001852  12DE               	iorwf	postinc2,f,c
  8440  001854  5015               	movf	??_CANreceiveMessage+1,w,c
  8441  001856  12DE               	iorwf	postinc2,f,c
  8442  001858  5016               	movf	??_CANreceiveMessage+2,w,c
  8443  00185A  12DE               	iorwf	postinc2,f,c
  8444  00185C  5017               	movf	??_CANreceiveMessage+3,w,c
  8445  00185E  12DE               	iorwf	postinc2,f,c
  8446  001860                     i2l3496:
  8447                           
  8448                           ; BSR set to: 15
  8449                           ;inc\CANlib.h: 629: }
  8450                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8451  001860  9E60               	bcf	3936,7,c	;volatile
  8452                           
  8453                           ; BSR set to: 15
  8454                           ;inc\CANlib.h: 632: return (error);
  8455                           ;	Return value of _CANreceiveMessage is never used
  8456  001862  0012               	return	
  8457  001864                     __end_of_CANreceiveMessage:
  8458                           	opt stack 0
  8459                           pclatu	equ	0xFFB
  8460                           pclath	equ	0xFFA
  8461                           tblptru	equ	0xFF8
  8462                           tblptrh	equ	0xFF7
  8463                           tblptrl	equ	0xFF6
  8464                           tablat	equ	0xFF5
  8465                           prodh	equ	0xFF4
  8466                           prodl	equ	0xFF3
  8467                           intcon	equ	0xFF2
  8468                           intcon2	equ	0xFF1
  8469                           postinc0	equ	0xFEE
  8470                           fsr0h	equ	0xFEA
  8471                           fsr0l	equ	0xFE9
  8472                           wreg	equ	0xFE8
  8473                           postdec1	equ	0xFE5
  8474                           fsr1h	equ	0xFE2
  8475                           fsr1l	equ	0xFE1
  8476                           bsr	equ	0xFE0
  8477                           indf2	equ	0xFDF
  8478                           postinc2	equ	0xFDE
  8479                           postdec2	equ	0xFDD
  8480                           fsr2h	equ	0xFDA
  8481                           fsr2l	equ	0xFD9
  8482                           status	equ	0xFD8
  8483                           
  8484 ;; *************** function _CANisRxReady *****************
  8485 ;; Defined at:
  8486 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      unsigned char 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8500 ;;      Params:         0       0       0       0
  8501 ;;      Locals:         1       0       0       0
  8502 ;;      Temps:          0       0       0       0
  8503 ;;      Totals:         1       0       0       0
  8504 ;;Total ram usage:        1 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; This function calls:
  8507 ;;		Nothing
  8508 ;; This function is called by:
  8509 ;;		_ISR_Alta
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text22
  8514  00268A                     __ptext22:
  8515                           	opt stack 0
  8516  00268A                     _CANisRxReady:
  8517                           	opt stack 25
  8518                           
  8519                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8520                           
  8521                           ; BSR set to: 15
  8522                           ;incstack = 0
  8523  00268A  0E01               	movlw	1
  8524  00268C  6E12               	movwf	_CANisRxReady$2970,c
  8525  00268E  BE60               	btfsc	3936,7,c	;volatile
  8526  002690  D005               	goto	i2l563
  8527  002692  010F               	movlb	15	; () banked
  8528  002694  BF50               	btfsc	80,7,b	;volatile
  8529  002696  D002               	goto	i2l563
  8530                           
  8531                           ; BSR set to: 15
  8532  002698  0E00               	movlw	0
  8533  00269A  6E12               	movwf	_CANisRxReady$2970,c
  8534  00269C                     i2l563:
  8535  00269C  5012               	movf	_CANisRxReady$2970,w,c
  8536  00269E  0012               	return	
  8537  0026A0                     __end_of_CANisRxReady:
  8538                           	opt stack 0
  8539  0000                     pclatu	equ	0xFFB
  8540                           pclath	equ	0xFFA
  8541                           tblptru	equ	0xFF8
  8542                           tblptrh	equ	0xFF7
  8543                           tblptrl	equ	0xFF6
  8544                           tablat	equ	0xFF5
  8545                           prodh	equ	0xFF4
  8546                           prodl	equ	0xFF3
  8547                           intcon	equ	0xFF2
  8548                           intcon2	equ	0xFF1
  8549                           postinc0	equ	0xFEE
  8550                           fsr0h	equ	0xFEA
  8551                           fsr0l	equ	0xFE9
  8552                           wreg	equ	0xFE8
  8553                           postdec1	equ	0xFE5
  8554                           fsr1h	equ	0xFE2
  8555                           fsr1l	equ	0xFE1
  8556                           bsr	equ	0xFE0
  8557                           indf2	equ	0xFDF
  8558                           postinc2	equ	0xFDE
  8559                           postdec2	equ	0xFDD
  8560                           fsr2h	equ	0xFDA
  8561                           fsr2l	equ	0xFD9
  8562                           status	equ	0xFD8
  8563                           pclatu	equ	0xFFB
  8564                           pclath	equ	0xFFA
  8565                           tblptru	equ	0xFF8
  8566                           tblptrh	equ	0xFF7
  8567                           tblptrl	equ	0xFF6
  8568                           tablat	equ	0xFF5
  8569                           prodh	equ	0xFF4
  8570                           prodl	equ	0xFF3
  8571                           intcon	equ	0xFF2
  8572                           intcon2	equ	0xFF1
  8573                           postinc0	equ	0xFEE
  8574                           fsr0h	equ	0xFEA
  8575                           fsr0l	equ	0xFE9
  8576                           wreg	equ	0xFE8
  8577                           postdec1	equ	0xFE5
  8578                           fsr1h	equ	0xFE2
  8579                           fsr1l	equ	0xFE1
  8580                           bsr	equ	0xFE0
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588                           	psect	rparam
  8589  0000                     pclatu	equ	0xFFB
  8590                           pclath	equ	0xFFA
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           intcon	equ	0xFF2
  8598                           intcon2	equ	0xFF1
  8599                           postinc0	equ	0xFEE
  8600                           fsr0h	equ	0xFEA
  8601                           fsr0l	equ	0xFE9
  8602                           wreg	equ	0xFE8
  8603                           postdec1	equ	0xFE5
  8604                           fsr1h	equ	0xFE2
  8605                           fsr1l	equ	0xFE1
  8606                           bsr	equ	0xFE0
  8607                           indf2	equ	0xFDF
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           
  8614                           	psect	temp
  8615  00004B                     btemp:
  8616                           	opt stack 0
  8617  00004B                     	ds	1
  8618  0000                     int$flags	set	btemp
  8619                           pclatu	equ	0xFFB
  8620                           pclath	equ	0xFFA
  8621                           tblptru	equ	0xFF8
  8622                           tblptrh	equ	0xFF7
  8623                           tblptrl	equ	0xFF6
  8624                           tablat	equ	0xFF5
  8625                           prodh	equ	0xFF4
  8626                           prodl	equ	0xFF3
  8627                           intcon	equ	0xFF2
  8628                           intcon2	equ	0xFF1
  8629                           postinc0	equ	0xFEE
  8630                           fsr0h	equ	0xFEA
  8631                           fsr0l	equ	0xFE9
  8632                           wreg	equ	0xFE8
  8633                           postdec1	equ	0xFE5
  8634                           fsr1h	equ	0xFE2
  8635                           fsr1l	equ	0xFE1
  8636                           bsr	equ	0xFE0
  8637                           indf2	equ	0xFDF
  8638                           postinc2	equ	0xFDE
  8639                           postdec2	equ	0xFDD
  8640                           fsr2h	equ	0xFDA
  8641                           fsr2l	equ	0xFD9
  8642                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      74
    BANK0           160     38      78
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> status_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _status_ok->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   11958
                                             26 BANK0     12    12      0
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
               _board_initialization
                          _status_ok
 ---------------------------------------------------------------------------------
 (1) _status_ok                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6449
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     515
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     365
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0    1690
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1400
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR_Alta                                            18    18      0    1918
                                             31 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                        _WriteTimer0
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4     209
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) i2___awdiv                                            8     4      4     352
                                             23 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _WriteTimer0                                          4     2      2     196
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _CANreceiveMessage                                   12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (6) _CANisRxReady                                         1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
     ___lwdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _status_ok
     _CANisTxReady
     _CANsendMessage

 _ISR_Bassa (ROOT)

 _ISR_Alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     26      4E       4       48.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     31      4A       1       78.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      98       9        0.0%
DATA                 0      0      98      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 10 13:35:11 2015

           ??_CANisTXwarningON 0060                              _i 009F           __end_of_CANSetFilter 0BCC  
                 ___awdiv@sign 0065                             bsr 000FE0            ___wmul@multiplicand 0062  
                  __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                  __CFG_OSC$HS 000000                    __CFG_LVP$ON 000000                            l400 118A  
                          l401 1194                            l500 0918                            l404 12A4  
                          l501 091C                            l405 12A8                            l510 0A28  
                          l502 0928                            l406 12B4                            l511 0A34  
                          l503 092C                            l520 0B40                            l512 0A38  
                          l504 0938                            l440 1A8E                            l360 1F62  
                          l521 0B44                            l513 0A44                            l505 093C  
                          l441 1A92                            l361 1F6C                            l522 0B50  
                          l514 0A48                            l506 0948                            l450 1B9A  
                          l442 1A9E                            l434 1A5E                            l370 0C78  
                          l523 0B54                            l515 0A54                            l451 1BA6  
                          l435 1A62                            l371 0C82                            l524 0B60  
                          l516 0A58                            l452 1BAA                            l436 1A6E  
                          l380 10D4                            l372 0C8C                            l525 0B64  
                          l517 0A64                            l509 0A24                            l453 1BB6  
                          l445 1B76                            l437 1A72                            l381 0E66  
                          l365 0E50                            l526 0B70                            l470 05DA  
                          l446 1B7A                            l438 1A7E                            l390 1020  
                          l382 0E6A                            l366 0BE2                            l527 0B74  
                          l471 05E6                            l447 1B86                            l439 1A82  
                          l391 1024                            l383 0F62                            l375 0D9C  
                          l367 0BE6                            l528 0B80                            l480 06F0  
                          l472 05EA                            l448 1B8A                            l392 1030  
                          l384 0EF2                            l376 0DA0                            l368 0CDE  
                          l481 06F4                            l473 05F6                            l465 05B6  
                          l449 1B96                            l385 0EFC                            l377 0DAC  
                          l369 0C6E                            l490 0800                            l482 0700  
                          l466 05BA                            l386 0F06                            l491 080C  
                          l483 0704                            l467 05C6                            l571 25E6  
                          l395 10EA                            l387 0F10                            l492 0810  
                          l484 0710                            l476 06D0                            l468 05CA  
                          l396 10EE                            l493 081C                            l477 06D4  
                          l469 05D6                            l397 11E6                            l494 0820  
                          l478 06E0                            l558 266E                            l398 1176  
                          l495 082C                            l487 07EC                            l479 06E4  
                          l399 1180                            l488 07F0                            l656 1C28  
                          l489 07FC                            l498 0908                            l682 256E  
                          l499 090C                            l659 1D3A                            l676 256C  
                          l687 241E                            l688 2420                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012                            _gap 0096  
                          _inc 00A0                            _msg 003A                            wreg 000FE8  
                 __CFG_WDT$OFF 000000                           l1105 2506                           l3102 0D90  
                         l3042 1F78                           l3044 1FBC                           l3036 1F5A  
                         l3108 0DB0                           l3038 1F70                           l3320 227E  
                         l3312 2254                           l2600 191C                           l3330 22B4  
                         l3322 2284                           l3306 223E                           l3234 119E  
                         l3082 0C96                           l3260 12B8                           l3318 2272  
                         l3334 22C2                           l3350 24C2                           l3254 1298  
                         l3158 0F1A                           l3360 24F8                           l3352 24C8  
                         l2616 19D2                           l3184 1034                           l3338 22D6  
                         l2642 1AA2                           l3178 1014                           l3348 24B6  
                         l2716 023C                           l2582 267C                           l2822 0640  
                         l2734 02F6                           l3294 25D8                           l3608 2442  
                         l2816 05FA                           l2752 03B0                           l2648 1AE8  
                         l2850 0714                           l2770 046A                           l2674 1BBA  
                         l2924 0992                           l3732 1C12                           l2918 094C  
                         l2952 0A68                           l2856 075A                           l3752 1D34  
                         l3744 1C3E                           l3728 1C0A                           l2890 0876  
                         l2698 0184                           l3762 1D60                           l2884 0830  
                         l2788 0524                           l3780 1E3E                           l2958 0AAE  
                         l3766 1D6E                           l3758 1D50                           l3782 1E4C  
                         l3776 1E20                           l2986 0B84                           l3788 1EA0  
                         u3010 096C                           _LATA 000F89                           _LATB 000F8A  
                         u3015 0960                           _LATC 000F8B                           u2240 1898  
                         _LATD 000F8C                           _LATE 000F8D                           u3300 0CB6  
                         u2245 188C                           u3310 0D02                           u2255 18F8  
                         u2600 032C                           u2520 01B8                           u2280 194E  
                         u3305 0CAA                           u3170 0BA4                           u3090 0A88  
                         u2450 1BDA                           u2370 1AC2                           u3315 0CF6  
                         u2605 0320                           u2525 01AC                           u2285 1942  
                         u3325 0D62                           u3430 0F3A                           u4310 1D18  
                         u3175 0B98                           u3095 0A7C                           u2615 038C  
                         u2535 0218                           u2455 1BCE                           u2375 1AB6  
                         u2295 19AE                           u2640 03E6                           u2560 0272  
                         u2480 0100                           u3440 0F86                           u3435 0F2E  
                         u2645 03DA                           u2565 0266                           u2485 00F4  
                         u3445 0F7A                           u2655 0446                           u2575 02D2  
                         u2495 0160                           u3455 0FE6                           u2680 04A0  
                         u3560 11BE                           u4417 25DA                           u2930 0850  
                         u2850 0734                           u2770 061A                           u3570 120A  
                         u4380 1E34                           u2685 0494                           u3565 11B2  
                         u2935 0844                           u2855 0728                           u2775 060E  
                         u2695 0500                           u3575 11FE                           u3585 126A  
                         u3980 26BA                           u3990 26C6            __size_of_CANSetMask 039E  
                         _main 1C02                           _read 00A1                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         btemp 004B               __end_of_ADC_Read 2498                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 00C2  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
             _CANOperationMode 2674                   _status_array 00A6                _brake_value_inc 009C  
   __size_of_CANreceiveMessage 050C                          ?_main 0001                __end_of___awdiv 22E0  
                        _T0CON 000FD5                ___awdiv@divisor 0062                          _T3CON 000FB1  
           __size_of_ISR_Bassa 00AA                __end_of___lwdiv 2510                          i2l412 15F0  
                        i1l647 007A                          i2l634 20E8                          i2l563 269C  
                        i2l643 21E6                          i2l637 20E4                ___awdiv@counter 0064  
                        _TMR0H 000FD7                          _TMR0L 000FD6                          _TMR3H 000FB3  
                        _TMR3L 000FB2                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
            _CANisRxReady$2970 0012                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 2222  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 0072  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0250           __end_of_CANisRxReady 26A0  
                        tablat 000FF5           __end_of_CANisTxReady 2674               __end_ofi2___wmul 2650  
                        status 000FD8             __size_ofi2___awdiv 0084                 __CFG_PBADEN$ON 000000  
              __initialization 2572                   __end_of_main 1EA6  __size_of_board_initialization 00B2  
             _brake_signal_CAN 009B                         ??_main 007A                  __activetblptr 000002  
            _CANisTxReady$2968 0060                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 0060                __CFG_BBSIZ$1024 000000  
                       i2l3420 155E                         i2l3432 15B8                         i2l3424 157C  
                       i2l3416 1540                         i2l3408 14D0                         i2l3434 15EA  
                       i2l3428 159A                         i2l3470 1750                         i2l3710 21D8  
                       i2l3712 21E4                         i2l3490 1812                         i2l3482 17DA  
                       i2l3650 23D4                         i2l3642 23B6                         i2l3660 23F4  
                       i2l3652 23D8                         i2l3636 23A6                         i2l3494 182E  
                       i2l3486 17F6                         i2l3478 17BE                         i2l3496 1860  
                       i2l3648 23CC                         i2l3664 23FE                         i2l3668 240C  
                       i2l3694 20D4                         i2l3686 20A6                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 0064             CANsendMessage@tamp 006C              __end_of_ISR_Bassa 00C2  
             __end_of_delay_ms 25F4          __size_of_CANSetFilter 0B06                 __CFG_XINST$OFF 000000  
                       ___wmul 25F4                      ??___awdiv 0064                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 0064                   ??_CANSetMask 0065                         clear_0 2578  
                       clear_1 2586               ___awdiv@quotient 0066                 i2___awdiv@sign 001D  
              __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 2416                      ?_ADC_Read 0001  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                _home_position 009E                   _CANSetFilter 00C6                     __accesstop 0060  
      __end_of__initialization 25AC             __end_of_CANSetMask 1C02                  ___rparam_used 000001  
    __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001                      ?_ISR_Alta 0001  
                 __pidataBANK0 26CA          CANSetFilter@numBuffer 0069                      ?i2___wmul 0012  
    __size_of_CANisTXwarningON 000C                     ??_ADC_Read 0068          __size_of_CANisRxReady 0016  
        __size_of_CANisTxReady 0024       __end_of_CANOperationMode 268A                     __pbssBANK0 0086  
      __size_of_CANsendMessage 078C                     ??_ISR_Alta 0020                        ?___wmul 0060  
             WriteTimer0@timer 0014                  ??_WriteTimer0 0014                   _CANisRxReady 268A  
                      _CANSTAT 000F6E                   _CANisTxReady 2650                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72                     ??i2___wmul 0016  
       __size_of_CANInitialize 01C6                      ?_delay_ms 0066                        _RXB0DLC 000F65  
                      _RXB1DLC 000F55                        _RXB0CON 000F60                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
          CANsendMessage@flags 0067             __size_of_status_ok 0062                        __Hparam 0000  
                      __Lparam 0000               delay_ms@value_ms 0066                        ___awdiv 2222  
              __size_of___wmul 0036                        ___lwdiv 2498           CANInitialize@propSeg 0077  
                      __pcinit 2572                        __ramtop 0300                        __ptext0 1C02  
                      __ptext1 2510                        __ptext2 0BCC                        __ptext3 2650  
                      __ptext4 22E0                        __ptext5 25BA                        __ptext6 25F4  
                      __ptext7 1EA6                        __ptext8 1864                        __ptext9 00C6  
                    _T0CONbits 000FD5            __end_of_WriteTimer0 26B2                     ??_delay_ms 0068  
       CANreceiveMessage@error 001C   __end_of_board_initialization 2392                 __pintcode_body 206C  
         end_of_initialization 25AC                  __Lmediumconst 0000                        int_func 206C  
          i2___wmul@multiplier 0012               _CANisRXwarningON 26BE                  _CANInitialize 1EA6  
                    _ISR_Bassa 0018                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE              __end_of_status_ok 2572  
                    _PORTBbits 000F81                 CANSetMask@mask 0060                      _PORTCbits 000F82  
            _correction_factor 0094                 CANSetMask@tamp 006A                 CANSetMask@type 0064  
             _CANisTXwarningON 26B2              __size_of_ADC_Read 0082                      i2___awdiv 2392  
      _clock_counter_reference 0092                 _CANsendMessage 0BCC               CANInitialize@BRP 0071  
             CANInitialize@SJW 0070                 ?_CANInitialize 006E             i2___awdiv@dividend 0018  
             _ADC_wait_counter 009A                     ?_ISR_Bassa 0001              __size_of_ISR_Alta 221A  
               __end_of___wmul 262A                    _WriteTimer0 26A0               i2___wmul@product 0016  
          start_initialization 2572             _number_of_measures 00A5             i2___awdiv@quotient 001E  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 0069                     ?i2___awdiv 0018  
       __end_of_CANsendMessage 1358              ?_CANOperationMode 0001             ??_CANOperationMode 0060  
   CANInitialize@FilterConfig1 0078     CANInitialize@FilterConfig2 0079           _board_initialization 22E0  
                     ??___wmul 0064                    __pdataBANK0 00A4               __CFG_LPT1OSC$OFF 000000  
           _brake_value_degree 0049         CANInitialize@phaseSeg1 006E         CANInitialize@phaseSeg2 006F  
                  __pbssCOMRAM 0032                  __pcstackBANK0 0060                    _BRGCON2bits 000F71  
                  _BRGCON3bits 000F72              __size_of_delay_ms 003A                ?_CANsendMessage 0060  
              ??_CANInitialize 0073             CANSetFilter@filter 0060               ___lwdiv@dividend 0060  
        ?_board_initialization 0001                    ??_ISR_Bassa 0001                      __pintcode 0008  
                     ?___awdiv 0060                       ?___lwdiv 0060                    __pintcodelo 0018  
            WriteTimer0@timer0 0012       __end_of_CANisRXwarningON 26CA                    _brake_value 00A3  
                  _COMSTATbits 000F74                       _ADC_Read 2416               ___lwdiv@quotient 0064  
                  ??i2___awdiv 001C          CANreceiveMessage@tamp 001D                 ___wmul@product 0064  
                     _IPR2bits 000FA2                    _final_value 009D   _delay_quartz_frequency_value 00A4  
                     _IPR3bits 000FA5                       _PIE2bits 000FA0                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 26BE                       i2u421_40 20F4                       i2u421_46 20F6  
                     _PIR2bits 000FA1                       i2u380_45 1454                       _PIR3bits 000FA4  
                     i2u391_45 16D6                       i2u377_40 1410                       i2u377_46 1412  
                     i2u378_40 143E                       i2u386_45 15C4                       i2u378_46 1440  
                     i2u388_40 1698                       i2u388_46 169A                       i2u389_40 16C2  
                     i2u397_45 183A                       i2u389_46 16C4                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                      _wait_time 00A2                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 0032                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0060                       i2___wmul 262A                      _status_ok 2510  
            i2___awdiv@divisor 001A              i2___awdiv@counter 001C                  ?_CANSetFilter 0060  
                  _INTCON2bits 000FF1                      copy_data0 25A0                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 007A  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52                     _CANSetMask 1864  
             __size_of___awdiv 00BE          i2___wmul@multiplicand 0014               __size_of___lwdiv 0078  
              _remote_frame_id 008E                       _Tx_retry 0250                   ?_WriteTimer0 0012  
                   ?_status_ok 0001                   _RXF0SIDLbits 000F01                       _delay_ms 25BA  
              ___lwdiv@divisor 0062                   _RXF1SIDLbits 000F05                ___lwdiv@counter 0066  
               ??_CANSetFilter 0065                       __ptext10 2674                       __ptext11 26B2  
                     __ptext20 26A0                       __ptext12 26BE                       __ptext21 1358  
                     __ptext13 2416                       __ptext22 268A                       __ptext14 2498  
                     __ptext15 2222                       __ptext18 262A                       __ptext19 2392  
                 _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11  
                 _RXF5SIDLbits 000F15       CANsendMessage@dataLength 0066                   _remote_frame 0251  
                __size_of_main 02A4           CANreceiveMessage@msg 0012                   _TXB0SIDLbits 000F42  
                 _TXB1SIDLbits 000F32                       _timer_on 0036                   _TXB2SIDLbits 000F22  
                     int$flags 004B      __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001  
                  _partial_sum 0098                  ?_CANisTxReady 0001                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 1358                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 0068             ?_CANreceiveMessage 0012  
     CANsendMessage@identifier 0060                       intlevel1 0000                       intlevel2 0000  
                 _TMR3_counter 0086               CANSetFilter@tamp 006A               CANSetFilter@type 0064  
          ??_CANreceiveMessage 0014                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 0060                 ??_CANisRxReady 0012  
                  ?_CANSetMask 0060                 ??_CANisTxReady 0060      __end_of_CANreceiveMessage 1864  
                  ??_status_ok 0070              ?_CANisRXwarningON 0001                    _TMR3_stored 008A  
           ??_CANisRXwarningON 0060          __end_of_CANInitialize 206C              ?_CANisTXwarningON 0001  
