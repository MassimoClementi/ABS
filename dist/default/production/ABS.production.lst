

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jan 11 17:32:41 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataBANK0
    43  00287C                     __pidataBANK0:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _delay_quartz_frequency_value
    47  00287C  10                 	db	16
    48                           
    49                           ;initializer for _status_array
    50  00287D  AA                 	db	170
    51  00287E  AA                 	db	170
    52  00287F  AA                 	db	170
    53  002880  AA                 	db	170
    54  002881  AA                 	db	170
    55  002882  AA                 	db	170
    56  002883  AA                 	db	170
    57  002884  AA                 	db	170
    58  0000                     _RXB1CON	set	3920
    59  0000                     _RXB1CONbits	set	3920
    60  0000                     _RXB1D0	set	3926
    61  0000                     _RXB1D1	set	3927
    62  0000                     _RXB1D2	set	3928
    63  0000                     _RXB1D3	set	3929
    64  0000                     _RXB1D4	set	3930
    65  0000                     _RXB1D5	set	3931
    66  0000                     _RXB1D6	set	3932
    67  0000                     _RXB1D7	set	3933
    68  0000                     _RXB1DLC	set	3925
    69  0000                     _RXB1DLCbits	set	3925
    70  0000                     _RXB1EIDH	set	3923
    71  0000                     _RXB1EIDL	set	3924
    72  0000                     _RXB1SIDH	set	3921
    73  0000                     _RXB1SIDL	set	3922
    74  0000                     _RXB1SIDLbits	set	3922
    75  0000                     _RXF0EIDH	set	3842
    76  0000                     _RXF0EIDL	set	3843
    77  0000                     _RXF0SIDH	set	3840
    78  0000                     _RXF0SIDL	set	3841
    79  0000                     _RXF0SIDLbits	set	3841
    80  0000                     _RXF1EIDH	set	3846
    81  0000                     _RXF1EIDL	set	3847
    82  0000                     _RXF1SIDH	set	3844
    83  0000                     _RXF1SIDL	set	3845
    84  0000                     _RXF1SIDLbits	set	3845
    85  0000                     _RXF2EIDH	set	3850
    86  0000                     _RXF2EIDL	set	3851
    87  0000                     _RXF2SIDH	set	3848
    88  0000                     _RXF2SIDL	set	3849
    89  0000                     _RXF2SIDLbits	set	3849
    90  0000                     _RXF3EIDH	set	3854
    91  0000                     _RXF3EIDL	set	3855
    92  0000                     _RXF3SIDH	set	3852
    93  0000                     _RXF3SIDL	set	3853
    94  0000                     _RXF3SIDLbits	set	3853
    95  0000                     _RXF4EIDH	set	3858
    96  0000                     _RXF4EIDL	set	3859
    97  0000                     _RXF4SIDH	set	3856
    98  0000                     _RXF4SIDL	set	3857
    99  0000                     _RXF4SIDLbits	set	3857
   100  0000                     _RXF5EIDH	set	3862
   101  0000                     _RXF5EIDL	set	3863
   102  0000                     _RXF5SIDH	set	3860
   103  0000                     _RXF5SIDL	set	3861
   104  0000                     _RXF5SIDLbits	set	3861
   105  0000                     _RXM0EIDH	set	3866
   106  0000                     _RXM0EIDL	set	3867
   107  0000                     _RXM0SIDH	set	3864
   108  0000                     _RXM0SIDL	set	3865
   109  0000                     _RXM0SIDLbits	set	3865
   110  0000                     _RXM1EIDH	set	3870
   111  0000                     _RXM1EIDL	set	3871
   112  0000                     _RXM1SIDH	set	3868
   113  0000                     _RXM1SIDL	set	3869
   114  0000                     _RXM1SIDLbits	set	3869
   115  0000                     _TXB0CONbits	set	3904
   116  0000                     _TXB0D0	set	3910
   117  0000                     _TXB0D1	set	3911
   118  0000                     _TXB0D2	set	3912
   119  0000                     _TXB0D3	set	3913
   120  0000                     _TXB0D4	set	3914
   121  0000                     _TXB0D5	set	3915
   122  0000                     _TXB0D6	set	3916
   123  0000                     _TXB0D7	set	3917
   124  0000                     _TXB0DLC	set	3909
   125  0000                     _TXB0DLCbits	set	3909
   126  0000                     _TXB0EIDH	set	3907
   127  0000                     _TXB0EIDL	set	3908
   128  0000                     _TXB0SIDH	set	3905
   129  0000                     _TXB0SIDL	set	3906
   130  0000                     _TXB0SIDLbits	set	3906
   131  0000                     _TXB1CONbits	set	3888
   132  0000                     _TXB1D0	set	3894
   133  0000                     _TXB1D1	set	3895
   134  0000                     _TXB1D2	set	3896
   135  0000                     _TXB1D3	set	3897
   136  0000                     _TXB1D4	set	3898
   137  0000                     _TXB1D5	set	3899
   138  0000                     _TXB1D6	set	3900
   139  0000                     _TXB1D7	set	3901
   140  0000                     _TXB1DLC	set	3893
   141  0000                     _TXB1DLCbits	set	3893
   142  0000                     _TXB1EIDH	set	3891
   143  0000                     _TXB1EIDL	set	3892
   144  0000                     _TXB1SIDH	set	3889
   145  0000                     _TXB1SIDL	set	3890
   146  0000                     _TXB1SIDLbits	set	3890
   147  0000                     _TXB2CONbits	set	3872
   148  0000                     _TXB2D0	set	3878
   149  0000                     _TXB2D1	set	3879
   150  0000                     _TXB2D2	set	3880
   151  0000                     _TXB2D3	set	3881
   152  0000                     _TXB2D4	set	3882
   153  0000                     _TXB2D5	set	3883
   154  0000                     _TXB2D6	set	3884
   155  0000                     _TXB2D7	set	3885
   156  0000                     _TXB2DLC	set	3877
   157  0000                     _TXB2DLCbits	set	3877
   158  0000                     _TXB2EIDH	set	3875
   159  0000                     _TXB2EIDL	set	3876
   160  0000                     _TXB2SIDH	set	3873
   161  0000                     _TXB2SIDL	set	3874
   162  0000                     _TXB2SIDLbits	set	3874
   163  0000                     _ADCON0bits	set	4034
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON2bits	set	4032
   166  0000                     _ADRESH	set	4036
   167  0000                     _BRGCON1	set	3952
   168  0000                     _BRGCON2	set	3953
   169  0000                     _BRGCON2bits	set	3953
   170  0000                     _BRGCON3	set	3954
   171  0000                     _BRGCON3bits	set	3954
   172  0000                     _CANCON	set	3951
   173  0000                     _CANCONbits	set	3951
   174  0000                     _CANSTAT	set	3950
   175  0000                     _COMSTATbits	set	3956
   176  0000                     _INTCON2bits	set	4081
   177  0000                     _INTCON3bits	set	4080
   178  0000                     _INTCONbits	set	4082
   179  0000                     _IPR3bits	set	4005
   180  0000                     _LATA	set	3977
   181  0000                     _LATB	set	3978
   182  0000                     _LATC	set	3979
   183  0000                     _LATD	set	3980
   184  0000                     _LATE	set	3981
   185  0000                     _PIE3bits	set	4003
   186  0000                     _PIR2bits	set	4001
   187  0000                     _PIR3bits	set	4004
   188  0000                     _PORTBbits	set	3969
   189  0000                     _PORTCbits	set	3970
   190  0000                     _RCONbits	set	4048
   191  0000                     _RXB0CON	set	3936
   192  0000                     _RXB0CONbits	set	3936
   193  0000                     _RXB0D0	set	3942
   194  0000                     _RXB0D1	set	3943
   195  0000                     _RXB0D2	set	3944
   196  0000                     _RXB0D3	set	3945
   197  0000                     _RXB0D4	set	3946
   198  0000                     _RXB0D5	set	3947
   199  0000                     _RXB0D6	set	3948
   200  0000                     _RXB0D7	set	3949
   201  0000                     _RXB0DLC	set	3941
   202  0000                     _RXB0DLCbits	set	3941
   203  0000                     _RXB0EIDH	set	3939
   204  0000                     _RXB0EIDL	set	3940
   205  0000                     _RXB0SIDH	set	3937
   206  0000                     _RXB0SIDL	set	3938
   207  0000                     _RXB0SIDLbits	set	3938
   208  0000                     _RXERRCNT	set	3957
   209  0000                     _T0CON	set	4053
   210  0000                     _T0CONbits	set	4053
   211  0000                     _T1CON	set	4045
   212  0000                     _T1CONbits	set	4045
   213  0000                     _T3CON	set	4017
   214  0000                     _T3CONbits	set	4017
   215  0000                     _TMR0H	set	4055
   216  0000                     _TMR0L	set	4054
   217  0000                     _TMR1H	set	4047
   218  0000                     _TMR1L	set	4046
   219  0000                     _TMR3H	set	4019
   220  0000                     _TMR3L	set	4018
   221  0000                     _TRISA	set	3986
   222  0000                     _TRISB	set	3987
   223  0000                     _TRISC	set	3988
   224  0000                     _TRISD	set	3989
   225  0000                     _TRISE	set	3990
   226  0000                     _TXERRCNT	set	3958
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  0026E6                     __pcinit:
   232                           	opt stack 0
   233  0026E6                     start_initialization:
   234                           	opt stack 0
   235  0026E6                     __initialization:
   236                           	opt stack 0
   237                           
   238                           ; Clear objects allocated to BANK0 (60 bytes)
   239  0026E6  EE00  F060         	lfsr	0,__pbssBANK0
   240  0026EA  0E3C               	movlw	60
   241  0026EC                     clear_0:
   242  0026EC  6AEE               	clrf	postinc0,c
   243  0026EE  06E8               	decf	wreg,f,c
   244  0026F0  E1FD               	bnz	clear_0
   245                           
   246                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   247  0026F2  6A3D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   248                           
   249                           ; Clear objects allocated to COMRAM (17 bytes)
   250  0026F4  EE00  F02C         	lfsr	0,__pbssCOMRAM
   251  0026F8  0E11               	movlw	17
   252  0026FA                     clear_1:
   253  0026FA  6AEE               	clrf	postinc0,c
   254  0026FC  06E8               	decf	wreg,f,c
   255  0026FE  E1FD               	bnz	clear_1
   256                           
   257                           ; Initialize objects allocated to BANK0 (9 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259  002700  0E7C               	movlw	low __pidataBANK0
   260  002702  6EF6               	movwf	tblptrl,c
   261  002704  0E28               	movlw	high __pidataBANK0
   262  002706  6EF7               	movwf	tblptrh,c
   263  002708  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264  00270A  6EF8               	movwf	tblptru,c
   265  00270C  EE00  F0CC         	lfsr	0,__pdataBANK0
   266  002710  EE10 F009          	lfsr	1,9
   267  002714                     copy_data0:
   268  002714  0009               	tblrd		*+
   269  002716  CFF5 FFEE          	movff	tablat,postinc0
   270  00271A  50E5               	movf	postdec1,w,c
   271  00271C  50E1               	movf	fsr1l,w,c
   272  00271E  E1FA               	bnz	copy_data0
   273  002720                     end_of_initialization:
   274                           	opt stack 0
   275  002720                     __end_of__initialization:
   276                           	opt stack 0
   277  002720  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   278  002722  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   279  002724  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  002726  6EF8               	movwf	tblptru,c
   281  002728  0100               	movlb	0
   282  00272A  EF34  F011         	goto	_main	;jump to C main() function
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bitbssCOMRAM
   293  0001E8                     __pbitbssCOMRAM:
   294                           	opt stack 0
   295  0001E8                     _ENC1_measure:
   296                           	opt stack 0
   297  0001E8                     	ds	1
   298  0001E9                     _ENC2_measure:
   299                           	opt stack 0
   300  0001E9                     	ds	1
   301  0001EA                     _Tx_retry:
   302                           	opt stack 0
   303  0001EA                     	ds	1
   304  0001EB                     _count_flag:
   305                           	opt stack 0
   306  0001EB                     	ds	1
   307  0001EC                     _remote_frame:
   308                           	opt stack 0
   309  0001EC                     	ds	1
   310  0001ED                     _x:
   311                           	opt stack 0
   312  0001ED                     	ds	1
   313  0001EE                     _y:
   314                           	opt stack 0
   315  0001EE                     	ds	1
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	bssCOMRAM
   326  00002C                     __pbssCOMRAM:
   327                           	opt stack 0
   328  00002C                     _gap_time_1:
   329                           	opt stack 0
   330  00002C                     	ds	4
   331  000030                     _gap_time_2:
   332                           	opt stack 0
   333  000030                     	ds	4
   334  000034                     _timer_off:
   335                           	opt stack 0
   336  000034                     	ds	4
   337  000038                     _timer_on:
   338                           	opt stack 0
   339  000038                     	ds	4
   340  00003C                     _brake_value_degree:
   341                           	opt stack 0
   342  00003C                     	ds	1
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssBANK0
   353  000060                     __pbssBANK0:
   354                           	opt stack 0
   355  000060                     _int_counter_1:
   356                           	opt stack 0
   357  000060                     	ds	4
   358  000064                     _int_counter_2:
   359                           	opt stack 0
   360  000064                     	ds	4
   361  000068                     _remote_frame_id:
   362                           	opt stack 0
   363  000068                     	ds	4
   364  00006C                     _clock_counter_reference:
   365                           	opt stack 0
   366  00006C                     	ds	2
   367  00006E                     _correction_factor:
   368                           	opt stack 0
   369  00006E                     	ds	2
   370  000070                     _distance_1:
   371                           	opt stack 0
   372  000070                     	ds	2
   373  000072                     _distance_2:
   374                           	opt stack 0
   375  000072                     	ds	2
   376  000074                     _Analogic_Mode:
   377                           	opt stack 0
   378  000074                     	ds	1
   379  000075                     _brake_signal_CAN:
   380                           	opt stack 0
   381  000075                     	ds	1
   382  000076                     _brake_value_inc:
   383                           	opt stack 0
   384  000076                     	ds	1
   385  000077                     _home_position:
   386                           	opt stack 0
   387  000077                     	ds	1
   388  000078                     _read:
   389                           	opt stack 0
   390  000078                     	ds	1
   391  000079                     _step:
   392                           	opt stack 0
   393  000079                     	ds	1
   394  00007A                     _wheel_speed_1:
   395                           	opt stack 0
   396  00007A                     	ds	1
   397  00007B                     _wheel_speed_2:
   398                           	opt stack 0
   399  00007B                     	ds	1
   400  00007C                     _msg:
   401                           	opt stack 0
   402  00007C                     	ds	15
   403  00008B                     _distance_array:
   404                           	opt stack 0
   405  00008B                     	ds	8
   406  000093                     _speed_array:
   407                           	opt stack 0
   408  000093                     	ds	8
   409  00009B                     _brake_value:
   410                           	opt stack 0
   411  00009B                     	ds	1
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	dataBANK0
   422  0000CC                     __pdataBANK0:
   423                           	opt stack 0
   424  0000CC                     _delay_quartz_frequency_value:
   425                           	opt stack 0
   426  0000CC                     	ds	1
   427  0000CD                     _status_array:
   428                           	opt stack 0
   429  0000CD                     	ds	8
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	cstackBANK0
   440  00009C                     __pcstackBANK0:
   441                           	opt stack 0
   442  00009C                     ??_ISR_Alta:
   443                           
   444                           ; 0 bytes @ 0x0
   445  00009C                     	ds	22
   446  0000B2                     ?___wmul:
   447                           	opt stack 0
   448  0000B2                     ?___awdiv:
   449                           	opt stack 0
   450  0000B2                     ?___lldiv:
   451                           	opt stack 0
   452  0000B2                     CANOperationMode@mode:
   453                           	opt stack 0
   454  0000B2                     _CANisTxReady$3084:
   455                           	opt stack 0
   456  0000B2                     ___wmul@multiplier:
   457                           	opt stack 0
   458  0000B2                     ___awdiv@dividend:
   459                           	opt stack 0
   460  0000B2                     CANsendMessage@identifier:
   461                           	opt stack 0
   462  0000B2                     CANSetMask@mask:
   463                           	opt stack 0
   464  0000B2                     CANSetFilter@filter:
   465                           	opt stack 0
   466  0000B2                     ___lldiv@dividend:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x16
   470  0000B2                     	ds	2
   471  0000B4                     ___wmul@multiplicand:
   472                           	opt stack 0
   473  0000B4                     ___awdiv@divisor:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x18
   477  0000B4                     	ds	2
   478  0000B6                     CANSetMask@type:
   479                           	opt stack 0
   480  0000B6                     CANSetFilter@type:
   481                           	opt stack 0
   482  0000B6                     ___awdiv@counter:
   483                           	opt stack 0
   484  0000B6                     CANsendMessage@data:
   485                           	opt stack 0
   486  0000B6                     ___wmul@product:
   487                           	opt stack 0
   488  0000B6                     ___lldiv@divisor:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x1A
   492  0000B6                     	ds	1
   493  0000B7                     ??_CANSetMask:
   494  0000B7                     ??_CANSetFilter:
   495  0000B7                     ___awdiv@sign:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x1B
   499  0000B7                     	ds	1
   500  0000B8                     CANsendMessage@dataLength:
   501                           	opt stack 0
   502  0000B8                     delay_ms@value_ms:
   503                           	opt stack 0
   504  0000B8                     ___awdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1C
   508  0000B8                     	ds	1
   509  0000B9                     CANsendMessage@flags:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1D
   513  0000B9                     	ds	1
   514  0000BA                     ??_CANsendMessage:
   515  0000BA                     ___lldiv@quotient:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0x1E
   519  0000BA                     	ds	1
   520  0000BB                     CANSetMask@numBuffer:
   521                           	opt stack 0
   522  0000BB                     CANSetFilter@numBuffer:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x1F
   526  0000BB                     	ds	1
   527  0000BC                     CANSetMask@tamp:
   528                           	opt stack 0
   529  0000BC                     CANSetFilter@tamp:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x20
   533  0000BC                     	ds	2
   534  0000BE                     ___lldiv@counter:
   535                           	opt stack 0
   536  0000BE                     CANsendMessage@tamp:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x22
   540  0000BE                     	ds	2
   541  0000C0                     CANInitialize@phaseSeg1:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x24
   545  0000C0                     	ds	1
   546  0000C1                     CANInitialize@phaseSeg2:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x25
   550  0000C1                     	ds	1
   551  0000C2                     CANInitialize@SJW:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x26
   555  0000C2                     	ds	1
   556  0000C3                     CANInitialize@BRP:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x27
   560  0000C3                     	ds	1
   561  0000C4                     CANInitialize@flags:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x28
   565  0000C4                     	ds	1
   566  0000C5                     ??_CANInitialize:
   567                           
   568                           ; 0 bytes @ 0x29
   569  0000C5                     	ds	4
   570  0000C9                     CANInitialize@propSeg:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x2D
   574  0000C9                     	ds	1
   575  0000CA                     CANInitialize@FilterConfig1:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x2E
   579  0000CA                     	ds	1
   580  0000CB                     CANInitialize@FilterConfig2:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x2F
   584  0000CB                     	ds	1
   585  0000CC                     tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           postdec1	equ	0xFE5
   592                           fsr1l	equ	0xFE1
   593                           
   594                           ; 0 bytes @ 0x30
   595                           
   596                           	psect	cstackCOMRAM
   597  000001                     __pcstackCOMRAM:
   598                           	opt stack 0
   599  000001                     _CANisRxReady$3086:
   600                           	opt stack 0
   601  000001                     CANreceiveMessage@msg:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x0
   605  000001                     	ds	2
   606  000003                     ??_CANreceiveMessage:
   607                           
   608                           ; 0 bytes @ 0x2
   609  000003                     	ds	8
   610  00000B                     CANreceiveMessage@error:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xA
   614  00000B                     	ds	1
   615  00000C                     CANreceiveMessage@tamp:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0xB
   619  00000C                     	ds	1
   620  00000D                     ??_ISR_Bassa:
   621                           
   622                           ; 0 bytes @ 0xC
   623  00000D                     	ds	17
   624  00001E                     ?i2___wmul:
   625                           	opt stack 0
   626  00001E                     ?i2___lldiv:
   627                           	opt stack 0
   628  00001E                     WriteTimer0@timer0:
   629                           	opt stack 0
   630  00001E                     i2___wmul@multiplier:
   631                           	opt stack 0
   632  00001E                     i2___lldiv@dividend:
   633                           	opt stack 0
   634                           
   635                           ; 4 bytes @ 0x1D
   636  00001E                     	ds	2
   637  000020                     WriteTimer0@timer:
   638                           	opt stack 0
   639  000020                     i2___wmul@multiplicand:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x1F
   643  000020                     	ds	2
   644  000022                     i2___wmul@product:
   645                           	opt stack 0
   646  000022                     i2___lldiv@divisor:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0x21
   650  000022                     	ds	2
   651  000024                     ?i2___awdiv:
   652                           	opt stack 0
   653  000024                     i2___awdiv@dividend:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x23
   657  000024                     	ds	2
   658  000026                     i2___awdiv@divisor:
   659                           	opt stack 0
   660  000026                     i2___lldiv@quotient:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x25
   664  000026                     	ds	2
   665  000028                     i2___awdiv@counter:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x27
   669  000028                     	ds	1
   670  000029                     i2___awdiv@sign:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x28
   674  000029                     	ds	1
   675  00002A                     i2___lldiv@counter:
   676                           	opt stack 0
   677  00002A                     i2___awdiv@quotient:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x29
   681  00002A                     	ds	2
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           postdec1	equ	0xFE5
   689                           fsr1l	equ	0xFE1
   690                           
   691 ;;
   692 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   693 ;;
   694 ;; *************** function _main *****************
   695 ;; Defined at:
   696 ;;		line 213 in file "ABS_Code.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2  678[None  ] int 
   703 ;; Registers used:
   704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   710 ;;      Params:         0       0       0       0
   711 ;;      Locals:         0       0       0       0
   712 ;;      Temps:          0       0       0       0
   713 ;;      Totals:         0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels required when called:    7
   716 ;; This function calls:
   717 ;;		_ADC_Read
   718 ;;		_CANisRXwarningON
   719 ;;		_CANisTXwarningON
   720 ;;		___awdiv
   721 ;;		___lldiv
   722 ;;		_board_initialization
   723 ;;		_remote_frame_handler
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text0
   730  002268                     __ptext0:
   731                           	opt stack 0
   732  002268                     _main:
   733                           	opt stack 24
   734                           
   735                           ;ABS_Code.c: 214: board_initialization();
   736                           
   737                           ;incstack = 0
   738  002268  EC34  F012         	call	_board_initialization	;wreg free
   739                           
   740                           ;ABS_Code.c: 215: step = (11 * (3,1415)) / 16;
   741  00226C  0ECC               	movlw	204
   742  00226E  0100               	movlb	0	; () banked
   743  002270  6F79               	movwf	_step& (0+255),b
   744  002272                     l3926:
   745                           
   746                           ; BSR set to: 0
   747                           ;ABS_Code.c: 217: ADC_Read();
   748  002272  EC97  F013         	call	_ADC_Read	;wreg free
   749                           
   750                           ;ABS_Code.c: 219: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   751  002276  EC32  F014         	call	_CANisTXwarningON	;wreg free
   752  00227A  06E8               	decf	wreg,f,c
   753  00227C  B4D8               	btfsc	status,2,c
   754  00227E  D005               	goto	l682
   755  002280  EC38  F014         	call	_CANisRXwarningON	;wreg free
   756  002284  06E8               	decf	wreg,f,c
   757  002286  A4D8               	btfss	status,2,c
   758  002288  D002               	goto	l680
   759  00228A                     l682:
   760                           
   761                           ;ABS_Code.c: 220: PORTBbits.RB0 = 1;
   762  00228A  8081               	bsf	3969,0,c	;volatile
   763                           
   764                           ;ABS_Code.c: 221: } else {
   765  00228C  D001               	goto	l683
   766  00228E                     l680:
   767                           
   768                           ;ABS_Code.c: 222: PORTBbits.RB0 = 0;
   769  00228E  9081               	bcf	3969,0,c	;volatile
   770  002290                     l683:
   771                           
   772                           ;ABS_Code.c: 223: }
   773                           ;ABS_Code.c: 225: if ((remote_frame == 1) || (Tx_retry == 1)) {
   774  002290  B83D               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
   775  002292  D002               	goto	l686
   776  002294  A43D               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   777  002296  D003               	goto	l3936
   778  002298                     l686:
   779                           
   780                           ;ABS_Code.c: 226: remote_frame = 0;
   781  002298  983D               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   782                           
   783                           ;ABS_Code.c: 227: remote_frame_handler();
   784  00229A  EC79  F010         	call	_remote_frame_handler	;wreg free
   785  00229E                     l3936:
   786                           
   787                           ;ABS_Code.c: 228: }
   788                           ;ABS_Code.c: 230: if (Analogic_Mode == 0) {
   789  00229E  0100               	movlb	0	; () banked
   790  0022A0  5174               	movf	_Analogic_Mode& (0+255),w,b
   791  0022A2  A4D8               	btfss	status,2,c
   792  0022A4  D01E               	goto	l687
   793                           
   794                           ; BSR set to: 0
   795                           ;ABS_Code.c: 231: if (brake_signal_CAN == 00) {
   796  0022A6  0100               	movlb	0	; () banked
   797  0022A8  5175               	movf	_brake_signal_CAN& (0+255),w,b
   798  0022AA  A4D8               	btfss	status,2,c
   799  0022AC  D003               	goto	l3942
   800                           
   801                           ; BSR set to: 0
   802                           ;ABS_Code.c: 232: brake_value_inc = 0;
   803  0022AE  0E00               	movlw	0
   804  0022B0  0100               	movlb	0	; () banked
   805  0022B2  6F76               	movwf	_brake_value_inc& (0+255),b
   806  0022B4                     l3942:
   807                           
   808                           ; BSR set to: 0
   809                           ;ABS_Code.c: 233: }
   810                           ;ABS_Code.c: 234: if (brake_signal_CAN == 01) {
   811  0022B4  0100               	movlb	0	; () banked
   812  0022B6  0575               	decf	_brake_signal_CAN& (0+255),w,b
   813  0022B8  A4D8               	btfss	status,2,c
   814  0022BA  D003               	goto	l3946
   815                           
   816                           ; BSR set to: 0
   817                           ;ABS_Code.c: 235: brake_value_inc = 150;
   818  0022BC  0E96               	movlw	150
   819  0022BE  0100               	movlb	0	; () banked
   820  0022C0  6F76               	movwf	_brake_value_inc& (0+255),b
   821  0022C2                     l3946:
   822                           
   823                           ; BSR set to: 0
   824                           ;ABS_Code.c: 236: }
   825                           ;ABS_Code.c: 237: if (brake_signal_CAN == 10) {
   826  0022C2  0E0A               	movlw	10
   827  0022C4  0100               	movlb	0	; () banked
   828  0022C6  1975               	xorwf	_brake_signal_CAN& (0+255),w,b
   829  0022C8  A4D8               	btfss	status,2,c
   830  0022CA  D003               	goto	l3950
   831                           
   832                           ; BSR set to: 0
   833                           ;ABS_Code.c: 238: brake_value_inc = 200;
   834  0022CC  0EC8               	movlw	200
   835  0022CE  0100               	movlb	0	; () banked
   836  0022D0  6F76               	movwf	_brake_value_inc& (0+255),b
   837  0022D2                     l3950:
   838                           
   839                           ; BSR set to: 0
   840                           ;ABS_Code.c: 239: }
   841                           ;ABS_Code.c: 240: if (brake_signal_CAN == 11) {
   842  0022D2  0E0B               	movlw	11
   843  0022D4  0100               	movlb	0	; () banked
   844  0022D6  1975               	xorwf	_brake_signal_CAN& (0+255),w,b
   845  0022D8  A4D8               	btfss	status,2,c
   846  0022DA  D005               	goto	l3954
   847                           
   848                           ; BSR set to: 0
   849                           ;ABS_Code.c: 241: brake_value_inc = 255;
   850  0022DC  0100               	movlb	0	; () banked
   851  0022DE  6976               	setf	_brake_value_inc& (0+255),b
   852                           
   853                           ; BSR set to: 0
   854                           ;ABS_Code.c: 242: }
   855                           ;ABS_Code.c: 243: } else {
   856  0022E0  D002               	goto	l3954
   857  0022E2                     l687:
   858                           
   859                           ; BSR set to: 0
   860                           ;ABS_Code.c: 244: brake_value_inc = brake_signal_CAN;
   861  0022E2  C075  F076         	movff	_brake_signal_CAN,_brake_value_inc
   862  0022E6                     l3954:
   863                           
   864                           ; BSR set to: 0
   865                           ;ABS_Code.c: 245: }
   866                           ;ABS_Code.c: 247: brake_value = (brake_value_inc / 17) + home_position;
   867  0022E6  C076  F0B2         	movff	_brake_value_inc,___awdiv@dividend
   868  0022EA  0100               	movlb	0	; () banked
   869  0022EC  6BB3               	clrf	(___awdiv@dividend+1)& (0+255),b
   870  0022EE  0E00               	movlw	0
   871  0022F0  0100               	movlb	0	; () banked
   872  0022F2  6FB5               	movwf	(___awdiv@divisor+1)& (0+255),b
   873  0022F4  0E11               	movlw	17
   874  0022F6  6FB4               	movwf	___awdiv@divisor& (0+255),b
   875  0022F8  ECD5  F011         	call	___awdiv	;wreg free
   876  0022FC  0100               	movlb	0	; () banked
   877  0022FE  51B2               	movf	?___awdiv& (0+255),w,b
   878  002300  0100               	movlb	0	; () banked
   879  002302  2577               	addwf	_home_position& (0+255),w,b
   880  002304  0100               	movlb	0	; () banked
   881  002306  6F9B               	movwf	_brake_value& (0+255),b
   882                           
   883                           ; BSR set to: 0
   884                           ;ABS_Code.c: 248: brake_value_degree = (180 * brake_value) / 255;
   885  002308  0100               	movlb	0	; () banked
   886  00230A  519B               	movf	_brake_value& (0+255),w,b
   887  00230C  0DB4               	mullw	180
   888  00230E  CFF3 F0B2          	movff	prodl,___awdiv@dividend
   889  002312  CFF4 F0B3          	movff	prodh,___awdiv@dividend+1
   890  002316  0E00               	movlw	0
   891  002318  0100               	movlb	0	; () banked
   892  00231A  6FB5               	movwf	(___awdiv@divisor+1)& (0+255),b
   893  00231C  69B4               	setf	___awdiv@divisor& (0+255),b
   894  00231E  ECD5  F011         	call	___awdiv	;wreg free
   895  002322  0100               	movlb	0	; () banked
   896  002324  51B2               	movf	?___awdiv& (0+255),w,b
   897  002326  6E3C               	movwf	_brake_value_degree,c
   898                           
   899                           ; BSR set to: 0
   900                           ;ABS_Code.c: 250: if (ENC1_measure == 1) {
   901  002328  A03D               	btfss	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   902  00232A  D01E               	goto	l3966
   903                           
   904                           ; BSR set to: 0
   905                           ;ABS_Code.c: 251: wheel_speed_1 = (step * 36) / gap_time_1;
   906  00232C  0100               	movlb	0	; () banked
   907  00232E  5179               	movf	_step& (0+255),w,b
   908  002330  0D24               	mullw	36
   909  002332  CFF3 F0B2          	movff	prodl,___lldiv@dividend
   910  002336  CFF4 F0B3          	movff	prodh,___lldiv@dividend+1
   911  00233A  0100               	movlb	0	; () banked
   912  00233C  0E00               	movlw	0
   913  00233E  BFB3               	btfsc	(___lldiv@dividend+1)& (0+255),7,b
   914  002340  0EFF               	movlw	-1
   915  002342  6FB4               	movwf	(___lldiv@dividend+2)& (0+255),b
   916  002344  6FB5               	movwf	(___lldiv@dividend+3)& (0+255),b
   917  002346  C02C  F0B6         	movff	_gap_time_1,___lldiv@divisor
   918  00234A  C02D  F0B7         	movff	_gap_time_1+1,___lldiv@divisor+1
   919  00234E  C02E  F0B8         	movff	_gap_time_1+2,___lldiv@divisor+2
   920  002352  C02F  F0B9         	movff	_gap_time_1+3,___lldiv@divisor+3
   921  002356  EC92  F012         	call	___lldiv	;wreg free
   922  00235A  0100               	movlb	0	; () banked
   923  00235C  51B2               	movf	?___lldiv& (0+255),w,b
   924  00235E  0100               	movlb	0	; () banked
   925  002360  6F7A               	movwf	_wheel_speed_1& (0+255),b
   926                           
   927                           ; BSR set to: 0
   928                           ;ABS_Code.c: 252: speed_array[1] = wheel_speed_1;
   929  002362  C07A  F094         	movff	_wheel_speed_1,_speed_array+1
   930                           
   931                           ; BSR set to: 0
   932                           ;ABS_Code.c: 253: ENC1_measure = 0;
   933  002366  903D               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   934  002368                     l3966:
   935                           
   936                           ; BSR set to: 0
   937                           ;ABS_Code.c: 254: }
   938                           ;ABS_Code.c: 256: if (ENC2_measure == 1) {
   939  002368  A23D               	btfss	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
   940  00236A  D783               	goto	l3926
   941                           
   942                           ; BSR set to: 0
   943                           ;ABS_Code.c: 257: wheel_speed_2 = (step * 36) / gap_time_2;
   944  00236C  0100               	movlb	0	; () banked
   945  00236E  5179               	movf	_step& (0+255),w,b
   946  002370  0D24               	mullw	36
   947  002372  CFF3 F0B2          	movff	prodl,___lldiv@dividend
   948  002376  CFF4 F0B3          	movff	prodh,___lldiv@dividend+1
   949  00237A  0100               	movlb	0	; () banked
   950  00237C  0E00               	movlw	0
   951  00237E  BFB3               	btfsc	(___lldiv@dividend+1)& (0+255),7,b
   952  002380  0EFF               	movlw	-1
   953  002382  6FB4               	movwf	(___lldiv@dividend+2)& (0+255),b
   954  002384  6FB5               	movwf	(___lldiv@dividend+3)& (0+255),b
   955  002386  C030  F0B6         	movff	_gap_time_2,___lldiv@divisor
   956  00238A  C031  F0B7         	movff	_gap_time_2+1,___lldiv@divisor+1
   957  00238E  C032  F0B8         	movff	_gap_time_2+2,___lldiv@divisor+2
   958  002392  C033  F0B9         	movff	_gap_time_2+3,___lldiv@divisor+3
   959  002396  EC92  F012         	call	___lldiv	;wreg free
   960  00239A  0100               	movlb	0	; () banked
   961  00239C  51B2               	movf	?___lldiv& (0+255),w,b
   962  00239E  0100               	movlb	0	; () banked
   963  0023A0  6F7B               	movwf	_wheel_speed_2& (0+255),b
   964                           
   965                           ; BSR set to: 0
   966                           ;ABS_Code.c: 258: speed_array[0] = wheel_speed_2;
   967  0023A2  C07B  F093         	movff	_wheel_speed_2,_speed_array
   968                           
   969                           ; BSR set to: 0
   970                           ;ABS_Code.c: 259: ENC2_measure = 0;
   971  0023A6  923D               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
   972                           
   973                           ; BSR set to: 0
   974                           
   975                           ; BSR set to: 0
   976  0023A8  D764               	goto	l3926
   977  0023AA                     __end_of_main:
   978                           	opt stack 0
   979                           tblptru	equ	0xFF8
   980                           tblptrh	equ	0xFF7
   981                           tblptrl	equ	0xFF6
   982                           tablat	equ	0xFF5
   983                           prodh	equ	0xFF4
   984                           prodl	equ	0xFF3
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           postdec1	equ	0xFE5
   988                           fsr1l	equ	0xFE1
   989                           status	equ	0xFD8
   990                           
   991 ;; *************** function _remote_frame_handler *****************
   992 ;; Defined at:
   993 ;;		line 269 in file "ABS_Code.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;		None               void
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1007 ;;      Params:         0       0       0       0
  1008 ;;      Locals:         0       0       0       0
  1009 ;;      Temps:          0       0       0       0
  1010 ;;      Totals:         0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    5
  1014 ;; This function calls:
  1015 ;;		_CANisTxReady
  1016 ;;		_CANsendMessage
  1017 ;;		___wmul
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text1
  1024  0020F2                     __ptext1:
  1025                           	opt stack 0
  1026  0020F2                     _remote_frame_handler:
  1027                           	opt stack 25
  1028                           
  1029                           ;ABS_Code.c: 270: if (CANisTxReady()) {
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;incstack = 0
  1033  0020F2  EC01  F014         	call	_CANisTxReady	;wreg free
  1034  0020F6  0900               	iorlw	0
  1035  0020F8  B4D8               	btfsc	status,2,c
  1036  0020FA  D0B4               	goto	l700
  1037                           
  1038                           ;ABS_Code.c: 271: if (remote_frame_id == 0b00000000000000000000000000100) {
  1039  0020FC  0E04               	movlw	4
  1040  0020FE  0100               	movlb	0	; () banked
  1041  002100  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1042  002102  0100               	movlb	0	; () banked
  1043  002104  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1044  002106  0100               	movlb	0	; () banked
  1045  002108  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1046  00210A  0100               	movlb	0	; () banked
  1047  00210C  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1048  00210E  A4D8               	btfss	status,2,c
  1049  002110  D016               	goto	l3706
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;ABS_Code.c: 272: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1053  002112  C068  F0B2         	movff	_remote_frame_id,CANsendMessage@identifier
  1054  002116  C069  F0B3         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1055  00211A  C06A  F0B4         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1056  00211E  C06B  F0B5         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1057  002122  0ECD               	movlw	low _status_array
  1058  002124  0100               	movlb	0	; () banked
  1059  002126  6FB6               	movwf	CANsendMessage@data& (0+255),b
  1060  002128  0E00               	movlw	high _status_array
  1061  00212A  0100               	movlb	0	; () banked
  1062  00212C  6FB7               	movwf	(CANsendMessage@data+1)& (0+255),b
  1063  00212E  0E08               	movlw	8
  1064  002130  0100               	movlb	0	; () banked
  1065  002132  6FB8               	movwf	CANsendMessage@dataLength& (0+255),b
  1066  002134  0EBC               	movlw	188
  1067  002136  0100               	movlb	0	; () banked
  1068  002138  6FB9               	movwf	CANsendMessage@flags& (0+255),b
  1069  00213A  EC05  F006         	call	_CANsendMessage	;wreg free
  1070  00213E                     l3706:
  1071                           
  1072                           ;ABS_Code.c: 273: }
  1073                           ;ABS_Code.c: 274: if (remote_frame_id == 0b00000000000000000000000001000) {
  1074  00213E  0E08               	movlw	8
  1075  002140  0100               	movlb	0	; () banked
  1076  002142  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1077  002144  0100               	movlb	0	; () banked
  1078  002146  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1079  002148  0100               	movlb	0	; () banked
  1080  00214A  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1081  00214C  0100               	movlb	0	; () banked
  1082  00214E  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1083  002150  A4D8               	btfss	status,2,c
  1084  002152  D016               	goto	l3710
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;ABS_Code.c: 275: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1088  002154  C068  F0B2         	movff	_remote_frame_id,CANsendMessage@identifier
  1089  002158  C069  F0B3         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1090  00215C  C06A  F0B4         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1091  002160  C06B  F0B5         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1092  002164  0E93               	movlw	low _speed_array
  1093  002166  0100               	movlb	0	; () banked
  1094  002168  6FB6               	movwf	CANsendMessage@data& (0+255),b
  1095  00216A  0E00               	movlw	high _speed_array
  1096  00216C  0100               	movlb	0	; () banked
  1097  00216E  6FB7               	movwf	(CANsendMessage@data+1)& (0+255),b
  1098  002170  0E08               	movlw	8
  1099  002172  0100               	movlb	0	; () banked
  1100  002174  6FB8               	movwf	CANsendMessage@dataLength& (0+255),b
  1101  002176  0EBC               	movlw	188
  1102  002178  0100               	movlb	0	; () banked
  1103  00217A  6FB9               	movwf	CANsendMessage@flags& (0+255),b
  1104  00217C  EC05  F006         	call	_CANsendMessage	;wreg free
  1105  002180                     l3710:
  1106                           
  1107                           ;ABS_Code.c: 276: }
  1108                           ;ABS_Code.c: 277: if (remote_frame_id == 0b00000000000000000000000001010) {
  1109  002180  0E0A               	movlw	10
  1110  002182  0100               	movlb	0	; () banked
  1111  002184  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1112  002186  0100               	movlb	0	; () banked
  1113  002188  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1114  00218A  0100               	movlb	0	; () banked
  1115  00218C  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1116  00218E  0100               	movlb	0	; () banked
  1117  002190  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1118  002192  A4D8               	btfss	status,2,c
  1119  002194  D013               	goto	l3716
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;ABS_Code.c: 278: int_counter_1 = 0;
  1123  002196  0E00               	movlw	0
  1124  002198  0100               	movlb	0	; () banked
  1125  00219A  6F60               	movwf	_int_counter_1& (0+255),b
  1126  00219C  0E00               	movlw	0
  1127  00219E  6F61               	movwf	(_int_counter_1+1)& (0+255),b
  1128  0021A0  0E00               	movlw	0
  1129  0021A2  6F62               	movwf	(_int_counter_1+2)& (0+255),b
  1130  0021A4  0E00               	movlw	0
  1131  0021A6  6F63               	movwf	(_int_counter_1+3)& (0+255),b
  1132                           
  1133                           ;ABS_Code.c: 279: int_counter_2 = 0;
  1134  0021A8  0E00               	movlw	0
  1135  0021AA  0100               	movlb	0	; () banked
  1136  0021AC  6F64               	movwf	_int_counter_2& (0+255),b
  1137  0021AE  0E00               	movlw	0
  1138  0021B0  6F65               	movwf	(_int_counter_2+1)& (0+255),b
  1139  0021B2  0E00               	movlw	0
  1140  0021B4  6F66               	movwf	(_int_counter_2+2)& (0+255),b
  1141  0021B6  0E00               	movlw	0
  1142  0021B8  6F67               	movwf	(_int_counter_2+3)& (0+255),b
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;ABS_Code.c: 280: count_flag = 1;
  1146  0021BA  863D               	bsf	_count_flag/(0+8),_count_flag& (0+7),c
  1147  0021BC                     l3716:
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;ABS_Code.c: 281: }
  1151                           ;ABS_Code.c: 282: if (remote_frame_id == 0b00000000000000000000000001011) {
  1152  0021BC  0E0B               	movlw	11
  1153  0021BE  0100               	movlb	0	; () banked
  1154  0021C0  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1155  0021C2  0100               	movlb	0	; () banked
  1156  0021C4  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1157  0021C6  0100               	movlb	0	; () banked
  1158  0021C8  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1159  0021CA  0100               	movlb	0	; () banked
  1160  0021CC  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1161  0021CE  A4D8               	btfss	status,2,c
  1162  0021D0  D03F               	goto	l3732
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;ABS_Code.c: 283: distance_1 = step * (int_counter_1);
  1166  0021D2  C079  F0B2         	movff	_step,___wmul@multiplier
  1167  0021D6  0100               	movlb	0	; () banked
  1168  0021D8  6BB3               	clrf	(___wmul@multiplier+1)& (0+255),b
  1169  0021DA  C060  F0B4         	movff	_int_counter_1,___wmul@multiplicand
  1170  0021DE  C061  F0B5         	movff	_int_counter_1+1,___wmul@multiplicand+1
  1171  0021E2  ECD3  F013         	call	___wmul	;wreg free
  1172  0021E6  C0B2  F070         	movff	?___wmul,_distance_1
  1173  0021EA  C0B3  F071         	movff	?___wmul+1,_distance_1+1
  1174                           
  1175                           ;ABS_Code.c: 284: distance_2 = step * (int_counter_2);
  1176  0021EE  C079  F0B2         	movff	_step,___wmul@multiplier
  1177  0021F2  0100               	movlb	0	; () banked
  1178  0021F4  6BB3               	clrf	(___wmul@multiplier+1)& (0+255),b
  1179  0021F6  C064  F0B4         	movff	_int_counter_2,___wmul@multiplicand
  1180  0021FA  C065  F0B5         	movff	_int_counter_2+1,___wmul@multiplicand+1
  1181  0021FE  ECD3  F013         	call	___wmul	;wreg free
  1182  002202  C0B2  F072         	movff	?___wmul,_distance_2
  1183  002206  C0B3  F073         	movff	?___wmul+1,_distance_2+1
  1184                           
  1185                           ;ABS_Code.c: 285: count_flag = 0;
  1186  00220A  963D               	bcf	_count_flag/(0+8),_count_flag& (0+7),c
  1187                           
  1188                           ;ABS_Code.c: 286: distance_array[0] = distance_1;
  1189  00220C  C070  F08B         	movff	_distance_1,_distance_array
  1190                           
  1191                           ;ABS_Code.c: 287: distance_array[1] = distance_1 >> 8;
  1192  002210  0100               	movlb	0	; () banked
  1193  002212  5171               	movf	(_distance_1+1)& (0+255),w,b
  1194  002214  0100               	movlb	0	; () banked
  1195  002216  6F8C               	movwf	(_distance_array+1)& (0+255),b
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;ABS_Code.c: 288: distance_array[2] = distance_2;
  1199  002218  C072  F08D         	movff	_distance_2,_distance_array+2
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;ABS_Code.c: 289: distance_array[3] = distance_2 >> 8;
  1203  00221C  0100               	movlb	0	; () banked
  1204  00221E  5173               	movf	(_distance_2+1)& (0+255),w,b
  1205  002220  0100               	movlb	0	; () banked
  1206  002222  6F8E               	movwf	(_distance_array+3)& (0+255),b
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;ABS_Code.c: 290: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1210  002224  C068  F0B2         	movff	_remote_frame_id,CANsendMessage@identifier
  1211  002228  C069  F0B3         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1212  00222C  C06A  F0B4         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1213  002230  C06B  F0B5         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1214  002234  0E8B               	movlw	low _distance_array
  1215  002236  0100               	movlb	0	; () banked
  1216  002238  6FB6               	movwf	CANsendMessage@data& (0+255),b
  1217  00223A  0E00               	movlw	high _distance_array
  1218  00223C  0100               	movlb	0	; () banked
  1219  00223E  6FB7               	movwf	(CANsendMessage@data+1)& (0+255),b
  1220  002240  0E08               	movlw	8
  1221  002242  0100               	movlb	0	; () banked
  1222  002244  6FB8               	movwf	CANsendMessage@dataLength& (0+255),b
  1223  002246  0EBC               	movlw	188
  1224  002248  0100               	movlb	0	; () banked
  1225  00224A  6FB9               	movwf	CANsendMessage@flags& (0+255),b
  1226  00224C  EC05  F006         	call	_CANsendMessage	;wreg free
  1227  002250                     l3732:
  1228                           
  1229                           ;ABS_Code.c: 291: }
  1230                           ;ABS_Code.c: 292: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1231  002250  010F               	movlb	15	; () banked
  1232  002252  BD40               	btfsc	64,6,b	;volatile
  1233  002254  D003               	goto	l707
  1234                           
  1235                           ; BSR set to: 15
  1236  002256  010F               	movlb	15	; () banked
  1237  002258  AD30               	btfss	48,6,b	;volatile
  1238  00225A  D002               	goto	l705
  1239  00225C                     l707:
  1240                           
  1241                           ; BSR set to: 15
  1242                           ;ABS_Code.c: 293: Tx_retry = 1;
  1243  00225C  843D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1244                           
  1245                           ;ABS_Code.c: 294: } else {
  1246  00225E  0012               	return	
  1247  002260                     l705:
  1248                           
  1249                           ; BSR set to: 15
  1250                           ;ABS_Code.c: 295: Tx_retry = 0;
  1251  002260  943D               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1252                           
  1253                           ; BSR set to: 15
  1254                           ;ABS_Code.c: 296: }
  1255                           ;ABS_Code.c: 297: } else {
  1256  002262  0012               	return	
  1257  002264                     l700:
  1258                           
  1259                           ;ABS_Code.c: 298: Tx_retry = 1;
  1260  002264  843D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1261  002266  0012               	return	
  1262  002268                     __end_of_remote_frame_handler:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           prodh	equ	0xFF4
  1269                           prodl	equ	0xFF3
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _CANsendMessage *****************
  1277 ;; Defined at:
  1278 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  identifier      4   22[BANK0 ] unsigned long 
  1281 ;;  data            2   26[BANK0 ] PTR unsigned char 
  1282 ;;		 -> distance_array(8), status_array(8), speed_array(8), 
  1283 ;;  dataLength      1   28[BANK0 ] unsigned char 
  1284 ;;  flags           1   29[BANK0 ] enum E16866
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  tamp            4   34[BANK0 ] unsigned long 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1296 ;;      Params:         0       8       0       0
  1297 ;;      Locals:         0       4       0       0
  1298 ;;      Temps:          0       4       0       0
  1299 ;;      Totals:         0      16       0       0
  1300 ;;Total ram usage:       16 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    4
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_remote_frame_handler
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text2
  1311  000C0A                     __ptext2:
  1312                           	opt stack 0
  1313  000C0A                     _CANsendMessage:
  1314                           	opt stack 25
  1315                           
  1316                           ;inc\CANlib.h: 296: unsigned long tamp;
  1317                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1318                           
  1319                           ;incstack = 0
  1320  000C0A  010F               	movlb	15	; () banked
  1321  000C0C  B740               	btfsc	64,3,b	;volatile
  1322  000C0E  D13F               	goto	l373
  1323                           
  1324                           ; BSR set to: 15
  1325                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1326  000C10  C0B8  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1327                           
  1328                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1329  000C14  0100               	movlb	0	; () banked
  1330  000C16  ADB9               	btfss	CANsendMessage@flags& (0+255),6,b
  1331  000C18  D003               	goto	l374
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1335  000C1A  010F               	movlb	15	; () banked
  1336  000C1C  8D45               	bsf	69,6,b	;volatile
  1337  000C1E  D002               	goto	l375
  1338  000C20                     l374:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;inc\CANlib.h: 302: else
  1342                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1343  000C20  010F               	movlb	15	; () banked
  1344  000C22  9D45               	bcf	69,6,b	;volatile
  1345  000C24                     l375:
  1346                           
  1347                           ; BSR set to: 15
  1348                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1349  000C24  0100               	movlb	0	; () banked
  1350  000C26  A7B9               	btfss	CANsendMessage@flags& (0+255),3,b
  1351  000C28  D079               	goto	l376
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;inc\CANlib.h: 306: {
  1355                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1356  000C2A  0100               	movlb	0	; () banked
  1357  000C2C  51B2               	movf	CANsendMessage@identifier& (0+255),w,b
  1358  000C2E  0100               	movlb	0	; () banked
  1359  000C30  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1360  000C32  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1361  000C34  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1362  000C36  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1366  000C38  C0BE  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1370  000C3C  0E00               	movlw	0
  1371  000C3E  0100               	movlb	0	; () banked
  1372  000C40  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  1373  000C42  0100               	movlb	0	; () banked
  1374  000C44  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1375  000C46  0EFF               	movlw	255
  1376  000C48  0100               	movlb	0	; () banked
  1377  000C4A  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1378  000C4C  0100               	movlb	0	; () banked
  1379  000C4E  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1380  000C50  0E00               	movlw	0
  1381  000C52  0100               	movlb	0	; () banked
  1382  000C54  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1383  000C56  0100               	movlb	0	; () banked
  1384  000C58  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1385  000C5A  0E00               	movlw	0
  1386  000C5C  0100               	movlb	0	; () banked
  1387  000C5E  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1388  000C60  0100               	movlb	0	; () banked
  1389  000C62  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1393  000C64  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  1394  000C68  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1395  000C6C  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1396  000C70  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1397  000C74  C0BB  F0BA         	movff	??_CANsendMessage+1,??_CANsendMessage
  1398  000C78  C0BC  F0BB         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1399  000C7C  C0BD  F0BC         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1400  000C80  0100               	movlb	0	; () banked
  1401  000C82  6BBD               	clrf	(??_CANsendMessage+3)& (0+255),b
  1402  000C84  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1403  000C88  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1404  000C8C  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1405  000C90  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1409  000C94  C0BE  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1413  000C98  0E00               	movlw	0
  1414  000C9A  010F               	movlb	15	; () banked
  1415  000C9C  6F42               	movwf	66,b	;volatile
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1419  000C9E  010F               	movlb	15	; () banked
  1420  000CA0  8742               	bsf	66,3,b	;volatile
  1421                           
  1422                           ; BSR set to: 15
  1423                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1424  000CA2  0100               	movlb	0	; () banked
  1425  000CA4  A1B4               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1426  000CA6  D002               	goto	l377
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1430  000CA8  010F               	movlb	15	; () banked
  1431  000CAA  8142               	bsf	66,0,b	;volatile
  1432  000CAC                     l377:
  1433                           
  1434                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1435  000CAC  0100               	movlb	0	; () banked
  1436  000CAE  A3B4               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1437  000CB0  D002               	goto	l378
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1441  000CB2  010F               	movlb	15	; () banked
  1442  000CB4  8342               	bsf	66,1,b	;volatile
  1443  000CB6                     l378:
  1444                           
  1445                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1446  000CB6  0100               	movlb	0	; () banked
  1447  000CB8  A5B4               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1448  000CBA  D002               	goto	l379
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1452  000CBC  010F               	movlb	15	; () banked
  1453  000CBE  8B42               	bsf	66,5,b	;volatile
  1454  000CC0                     l379:
  1455                           
  1456                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1457  000CC0  0100               	movlb	0	; () banked
  1458  000CC2  A7B4               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1459  000CC4  D002               	goto	l380
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1463  000CC6  010F               	movlb	15	; () banked
  1464  000CC8  8D42               	bsf	66,6,b	;volatile
  1465  000CCA                     l380:
  1466                           
  1467                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1468  000CCA  0100               	movlb	0	; () banked
  1469  000CCC  A9B4               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1470  000CCE  D002               	goto	l3180
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1474  000CD0  010F               	movlb	15	; () banked
  1475  000CD2  8F42               	bsf	66,7,b	;volatile
  1476  000CD4                     l3180:
  1477                           
  1478                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1479  000CD4  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1480  000CD8  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1481  000CDC  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1482  000CE0  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1483  000CE4  0E16               	movlw	22
  1484  000CE6  D006               	goto	u3340
  1485  000CE8                     u3345:
  1486  000CE8  0100               	movlb	0	; () banked
  1487  000CEA  90D8               	bcf	status,0,c
  1488  000CEC  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1489  000CEE  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1490  000CF0  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1491  000CF2  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1492  000CF4                     u3340:
  1493  000CF4  2EE8               	decfsz	wreg,f,c
  1494  000CF6  D7F8               	goto	u3345
  1495  000CF8  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1496  000CFC  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1497  000D00  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1498  000D04  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1502  000D08  0100               	movlb	0	; () banked
  1503  000D0A  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1504  000D0C  0100               	movlb	0	; () banked
  1505  000D0E  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1506  000D10  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1507  000D12  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1508  000D14  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1512  000D16  C0BE  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1513                           
  1514                           ;inc\CANlib.h: 332: }
  1515  000D1A  D059               	goto	l3200
  1516  000D1C                     l376:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;inc\CANlib.h: 334: else
  1520                           ;inc\CANlib.h: 336: {
  1521                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1522  000D1C  010F               	movlb	15	; () banked
  1523  000D1E  9742               	bcf	66,3,b	;volatile
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1527  000D20  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1528  000D24  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1529  000D28  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1530  000D2C  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1531  000D30  0E04               	movlw	4
  1532  000D32  D006               	goto	u3350
  1533  000D34                     u3355:
  1534  000D34  0100               	movlb	0	; () banked
  1535  000D36  90D8               	bcf	status,0,c
  1536  000D38  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1537  000D3A  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1538  000D3C  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1539  000D3E  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1540  000D40                     u3350:
  1541  000D40  2EE8               	decfsz	wreg,f,c
  1542  000D42  D7F8               	goto	u3355
  1543  000D44  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1544  000D48  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1545  000D4C  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1546  000D50  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1550  000D54  0100               	movlb	0	; () banked
  1551  000D56  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1552  000D58  0100               	movlb	0	; () banked
  1553  000D5A  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1554  000D5C  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1555  000D5E  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1556  000D60  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1560  000D62  C0BE  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1564  000D66  0E07               	movlw	7
  1565  000D68  0100               	movlb	0	; () banked
  1566  000D6A  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  1567  000D6C  0100               	movlb	0	; () banked
  1568  000D6E  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1569  000D70  0E00               	movlw	0
  1570  000D72  0100               	movlb	0	; () banked
  1571  000D74  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1572  000D76  0100               	movlb	0	; () banked
  1573  000D78  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1574  000D7A  0E00               	movlw	0
  1575  000D7C  0100               	movlb	0	; () banked
  1576  000D7E  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1577  000D80  0100               	movlb	0	; () banked
  1578  000D82  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1579  000D84  0E00               	movlw	0
  1580  000D86  0100               	movlb	0	; () banked
  1581  000D88  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1582  000D8A  0100               	movlb	0	; () banked
  1583  000D8C  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1587  000D8E  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  1588  000D92  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1589  000D96  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1590  000D9A  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1591  000D9E  0E05               	movlw	5
  1592  000DA0                     u3365:
  1593  000DA0  90D8               	bcf	status,0,c
  1594  000DA2  0100               	movlb	0	; () banked
  1595  000DA4  37BA               	rlcf	??_CANsendMessage& (0+255),f,b
  1596  000DA6  37BB               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1597  000DA8  37BC               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1598  000DAA  37BD               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1599  000DAC  2EE8               	decfsz	wreg,f,c
  1600  000DAE  D7F8               	goto	u3365
  1601  000DB0  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1602  000DB4  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1603  000DB8  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1604  000DBC  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1608  000DC0  010F               	movlb	15	; () banked
  1609  000DC2  5142               	movf	66,w,b	;volatile
  1610  000DC4  0B1F               	andlw	31
  1611  000DC6  010F               	movlb	15	; () banked
  1612  000DC8  6F42               	movwf	66,b	;volatile
  1613                           
  1614                           ; BSR set to: 15
  1615                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1616  000DCA  C0BE  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1617  000DCE                     l3200:
  1618                           
  1619                           ;inc\CANlib.h: 347: }
  1620                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1621  000DCE  0100               	movlb	0	; () banked
  1622  000DD0  A1B9               	btfss	CANsendMessage@flags& (0+255),0,b
  1623  000DD2  D003               	goto	l383
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1627  000DD4  010F               	movlb	15	; () banked
  1628  000DD6  8140               	bsf	64,0,b	;volatile
  1629  000DD8  D002               	goto	l384
  1630  000DDA                     l383:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;inc\CANlib.h: 351: else
  1634                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1635  000DDA  010F               	movlb	15	; () banked
  1636  000DDC  9140               	bcf	64,0,b	;volatile
  1637  000DDE                     l384:
  1638                           
  1639                           ; BSR set to: 15
  1640                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1641  000DDE  0100               	movlb	0	; () banked
  1642  000DE0  A3B9               	btfss	CANsendMessage@flags& (0+255),1,b
  1643  000DE2  D003               	goto	l385
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1647  000DE4  010F               	movlb	15	; () banked
  1648  000DE6  8340               	bsf	64,1,b	;volatile
  1649  000DE8  D002               	goto	l3206
  1650  000DEA                     l385:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;inc\CANlib.h: 355: else
  1654                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1655  000DEA  010F               	movlb	15	; () banked
  1656  000DEC  9340               	bcf	64,1,b	;volatile
  1657  000DEE                     l3206:
  1658                           
  1659                           ; BSR set to: 15
  1660                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1661  000DEE  C0B6  FFD9         	movff	CANsendMessage@data,fsr2l
  1662  000DF2  C0B7  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1663  000DF6  50DF               	movf	indf2,w,c
  1664  000DF8  010F               	movlb	15	; () banked
  1665  000DFA  6F46               	movwf	70,b	;volatile
  1666                           
  1667                           ; BSR set to: 15
  1668                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1669  000DFC  0100               	movlb	0	; () banked
  1670  000DFE  EE20 F001          	lfsr	2,1
  1671  000E02  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1672  000E04  26D9               	addwf	fsr2l,f,c
  1673  000E06  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1674  000E08  22DA               	addwfc	fsr2h,f,c
  1675  000E0A  50DF               	movf	indf2,w,c
  1676  000E0C  010F               	movlb	15	; () banked
  1677  000E0E  6F47               	movwf	71,b	;volatile
  1678                           
  1679                           ; BSR set to: 15
  1680                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1681  000E10  0100               	movlb	0	; () banked
  1682  000E12  EE20 F002          	lfsr	2,2
  1683  000E16  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1684  000E18  26D9               	addwf	fsr2l,f,c
  1685  000E1A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1686  000E1C  22DA               	addwfc	fsr2h,f,c
  1687  000E1E  50DF               	movf	indf2,w,c
  1688  000E20  010F               	movlb	15	; () banked
  1689  000E22  6F48               	movwf	72,b	;volatile
  1690                           
  1691                           ; BSR set to: 15
  1692                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1693  000E24  0100               	movlb	0	; () banked
  1694  000E26  EE20 F003          	lfsr	2,3
  1695  000E2A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1696  000E2C  26D9               	addwf	fsr2l,f,c
  1697  000E2E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1698  000E30  22DA               	addwfc	fsr2h,f,c
  1699  000E32  50DF               	movf	indf2,w,c
  1700  000E34  010F               	movlb	15	; () banked
  1701  000E36  6F49               	movwf	73,b	;volatile
  1702                           
  1703                           ; BSR set to: 15
  1704                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1705  000E38  0100               	movlb	0	; () banked
  1706  000E3A  EE20 F004          	lfsr	2,4
  1707  000E3E  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1708  000E40  26D9               	addwf	fsr2l,f,c
  1709  000E42  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1710  000E44  22DA               	addwfc	fsr2h,f,c
  1711  000E46  50DF               	movf	indf2,w,c
  1712  000E48  010F               	movlb	15	; () banked
  1713  000E4A  6F4A               	movwf	74,b	;volatile
  1714                           
  1715                           ; BSR set to: 15
  1716                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1717  000E4C  0100               	movlb	0	; () banked
  1718  000E4E  EE20 F005          	lfsr	2,5
  1719  000E52  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1720  000E54  26D9               	addwf	fsr2l,f,c
  1721  000E56  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1722  000E58  22DA               	addwfc	fsr2h,f,c
  1723  000E5A  50DF               	movf	indf2,w,c
  1724  000E5C  010F               	movlb	15	; () banked
  1725  000E5E  6F4B               	movwf	75,b	;volatile
  1726                           
  1727                           ; BSR set to: 15
  1728                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1729  000E60  0100               	movlb	0	; () banked
  1730  000E62  EE20 F006          	lfsr	2,6
  1731  000E66  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1732  000E68  26D9               	addwf	fsr2l,f,c
  1733  000E6A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1734  000E6C  22DA               	addwfc	fsr2h,f,c
  1735  000E6E  50DF               	movf	indf2,w,c
  1736  000E70  010F               	movlb	15	; () banked
  1737  000E72  6F4C               	movwf	76,b	;volatile
  1738                           
  1739                           ; BSR set to: 15
  1740                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1741  000E74  0100               	movlb	0	; () banked
  1742  000E76  EE20 F007          	lfsr	2,7
  1743  000E7A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1744  000E7C  26D9               	addwf	fsr2l,f,c
  1745  000E7E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1746  000E80  22DA               	addwfc	fsr2h,f,c
  1747  000E82  50DF               	movf	indf2,w,c
  1748  000E84  010F               	movlb	15	; () banked
  1749  000E86  6F4D               	movwf	77,b	;volatile
  1750                           
  1751                           ; BSR set to: 15
  1752                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1753  000E88  010F               	movlb	15	; () banked
  1754  000E8A  8740               	bsf	64,3,b	;volatile
  1755                           
  1756                           ; BSR set to: 15
  1757                           ;inc\CANlib.h: 368: return;
  1758  000E8C  0012               	return	
  1759  000E8E                     l373:
  1760                           
  1761                           ; BSR set to: 15
  1762                           ;inc\CANlib.h: 369: }
  1763                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1764  000E8E  010F               	movlb	15	; () banked
  1765  000E90  B730               	btfsc	48,3,b	;volatile
  1766  000E92  D13F               	goto	l388
  1767                           
  1768                           ; BSR set to: 15
  1769                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1770  000E94  C0B8  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1771                           
  1772                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1773  000E98  0100               	movlb	0	; () banked
  1774  000E9A  ADB9               	btfss	CANsendMessage@flags& (0+255),6,b
  1775  000E9C  D003               	goto	l389
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1779  000E9E  010F               	movlb	15	; () banked
  1780  000EA0  8D35               	bsf	53,6,b	;volatile
  1781  000EA2  D002               	goto	l390
  1782  000EA4                     l389:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;inc\CANlib.h: 378: else
  1786                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1787  000EA4  010F               	movlb	15	; () banked
  1788  000EA6  9D35               	bcf	53,6,b	;volatile
  1789  000EA8                     l390:
  1790                           
  1791                           ; BSR set to: 15
  1792                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1793  000EA8  0100               	movlb	0	; () banked
  1794  000EAA  A7B9               	btfss	CANsendMessage@flags& (0+255),3,b
  1795  000EAC  D079               	goto	l391
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;inc\CANlib.h: 382: {
  1799                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1800  000EAE  0100               	movlb	0	; () banked
  1801  000EB0  51B2               	movf	CANsendMessage@identifier& (0+255),w,b
  1802  000EB2  0100               	movlb	0	; () banked
  1803  000EB4  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1804  000EB6  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1805  000EB8  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1806  000EBA  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1810  000EBC  C0BE  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1814  000EC0  0E00               	movlw	0
  1815  000EC2  0100               	movlb	0	; () banked
  1816  000EC4  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  1817  000EC6  0100               	movlb	0	; () banked
  1818  000EC8  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1819  000ECA  0EFF               	movlw	255
  1820  000ECC  0100               	movlb	0	; () banked
  1821  000ECE  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1822  000ED0  0100               	movlb	0	; () banked
  1823  000ED2  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1824  000ED4  0E00               	movlw	0
  1825  000ED6  0100               	movlb	0	; () banked
  1826  000ED8  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1827  000EDA  0100               	movlb	0	; () banked
  1828  000EDC  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1829  000EDE  0E00               	movlw	0
  1830  000EE0  0100               	movlb	0	; () banked
  1831  000EE2  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1832  000EE4  0100               	movlb	0	; () banked
  1833  000EE6  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1837  000EE8  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  1838  000EEC  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1839  000EF0  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1840  000EF4  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1841  000EF8  C0BB  F0BA         	movff	??_CANsendMessage+1,??_CANsendMessage
  1842  000EFC  C0BC  F0BB         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1843  000F00  C0BD  F0BC         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1844  000F04  0100               	movlb	0	; () banked
  1845  000F06  6BBD               	clrf	(??_CANsendMessage+3)& (0+255),b
  1846  000F08  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1847  000F0C  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1848  000F10  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1849  000F14  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1853  000F18  C0BE  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1857  000F1C  0E00               	movlw	0
  1858  000F1E  010F               	movlb	15	; () banked
  1859  000F20  6F32               	movwf	50,b	;volatile
  1860                           
  1861                           ; BSR set to: 15
  1862                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1863  000F22  010F               	movlb	15	; () banked
  1864  000F24  8732               	bsf	50,3,b	;volatile
  1865                           
  1866                           ; BSR set to: 15
  1867                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1868  000F26  0100               	movlb	0	; () banked
  1869  000F28  A1B4               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1870  000F2A  D002               	goto	l392
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1874  000F2C  010F               	movlb	15	; () banked
  1875  000F2E  8132               	bsf	50,0,b	;volatile
  1876  000F30                     l392:
  1877                           
  1878                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1879  000F30  0100               	movlb	0	; () banked
  1880  000F32  A3B4               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1881  000F34  D002               	goto	l393
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1885  000F36  010F               	movlb	15	; () banked
  1886  000F38  8332               	bsf	50,1,b	;volatile
  1887  000F3A                     l393:
  1888                           
  1889                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1890  000F3A  0100               	movlb	0	; () banked
  1891  000F3C  A5B4               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1892  000F3E  D002               	goto	l394
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1896  000F40  010F               	movlb	15	; () banked
  1897  000F42  8B32               	bsf	50,5,b	;volatile
  1898  000F44                     l394:
  1899                           
  1900                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1901  000F44  0100               	movlb	0	; () banked
  1902  000F46  A7B4               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1903  000F48  D002               	goto	l395
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1907  000F4A  010F               	movlb	15	; () banked
  1908  000F4C  8D32               	bsf	50,6,b	;volatile
  1909  000F4E                     l395:
  1910                           
  1911                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1912  000F4E  0100               	movlb	0	; () banked
  1913  000F50  A9B4               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1914  000F52  D002               	goto	l3256
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1918  000F54  010F               	movlb	15	; () banked
  1919  000F56  8F32               	bsf	50,7,b	;volatile
  1920  000F58                     l3256:
  1921                           
  1922                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1923  000F58  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1924  000F5C  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1925  000F60  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1926  000F64  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1927  000F68  0E16               	movlw	22
  1928  000F6A  D006               	goto	u3470
  1929  000F6C                     u3475:
  1930  000F6C  0100               	movlb	0	; () banked
  1931  000F6E  90D8               	bcf	status,0,c
  1932  000F70  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1933  000F72  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1934  000F74  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1935  000F76  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1936  000F78                     u3470:
  1937  000F78  2EE8               	decfsz	wreg,f,c
  1938  000F7A  D7F8               	goto	u3475
  1939  000F7C  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1940  000F80  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1941  000F84  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1942  000F88  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1946  000F8C  0100               	movlb	0	; () banked
  1947  000F8E  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1948  000F90  0100               	movlb	0	; () banked
  1949  000F92  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1950  000F94  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1951  000F96  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1952  000F98  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1956  000F9A  C0BE  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1957                           
  1958                           ;inc\CANlib.h: 407: }
  1959  000F9E  D059               	goto	l3276
  1960  000FA0                     l391:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;inc\CANlib.h: 409: else
  1964                           ;inc\CANlib.h: 411: {
  1965                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1966  000FA0  010F               	movlb	15	; () banked
  1967  000FA2  9732               	bcf	50,3,b	;volatile
  1968                           
  1969                           ; BSR set to: 15
  1970                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1971  000FA4  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1972  000FA8  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1973  000FAC  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1974  000FB0  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1975  000FB4  0E04               	movlw	4
  1976  000FB6  D006               	goto	u3480
  1977  000FB8                     u3485:
  1978  000FB8  0100               	movlb	0	; () banked
  1979  000FBA  90D8               	bcf	status,0,c
  1980  000FBC  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1981  000FBE  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1982  000FC0  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1983  000FC2  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1984  000FC4                     u3480:
  1985  000FC4  2EE8               	decfsz	wreg,f,c
  1986  000FC6  D7F8               	goto	u3485
  1987  000FC8  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1988  000FCC  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1989  000FD0  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1990  000FD4  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1994  000FD8  0100               	movlb	0	; () banked
  1995  000FDA  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1996  000FDC  0100               	movlb	0	; () banked
  1997  000FDE  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1998  000FE0  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1999  000FE2  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2000  000FE4  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2004  000FE6  C0BE  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2008  000FEA  0E07               	movlw	7
  2009  000FEC  0100               	movlb	0	; () banked
  2010  000FEE  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  2011  000FF0  0100               	movlb	0	; () banked
  2012  000FF2  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2013  000FF4  0E00               	movlw	0
  2014  000FF6  0100               	movlb	0	; () banked
  2015  000FF8  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2016  000FFA  0100               	movlb	0	; () banked
  2017  000FFC  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2018  000FFE  0E00               	movlw	0
  2019  001000  0100               	movlb	0	; () banked
  2020  001002  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2021  001004  0100               	movlb	0	; () banked
  2022  001006  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2023  001008  0E00               	movlw	0
  2024  00100A  0100               	movlb	0	; () banked
  2025  00100C  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2026  00100E  0100               	movlb	0	; () banked
  2027  001010  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2031  001012  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  2032  001016  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2033  00101A  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2034  00101E  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2035  001022  0E05               	movlw	5
  2036  001024                     u3495:
  2037  001024  90D8               	bcf	status,0,c
  2038  001026  0100               	movlb	0	; () banked
  2039  001028  37BA               	rlcf	??_CANsendMessage& (0+255),f,b
  2040  00102A  37BB               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2041  00102C  37BC               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2042  00102E  37BD               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2043  001030  2EE8               	decfsz	wreg,f,c
  2044  001032  D7F8               	goto	u3495
  2045  001034  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2046  001038  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2047  00103C  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2048  001040  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2052  001044  010F               	movlb	15	; () banked
  2053  001046  5132               	movf	50,w,b	;volatile
  2054  001048  0B1F               	andlw	31
  2055  00104A  010F               	movlb	15	; () banked
  2056  00104C  6F32               	movwf	50,b	;volatile
  2057                           
  2058                           ; BSR set to: 15
  2059                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2060  00104E  C0BE  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2061  001052                     l3276:
  2062                           
  2063                           ;inc\CANlib.h: 422: }
  2064                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2065  001052  0100               	movlb	0	; () banked
  2066  001054  A1B9               	btfss	CANsendMessage@flags& (0+255),0,b
  2067  001056  D003               	goto	l398
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2071  001058  010F               	movlb	15	; () banked
  2072  00105A  8130               	bsf	48,0,b	;volatile
  2073  00105C  D002               	goto	l399
  2074  00105E                     l398:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;inc\CANlib.h: 426: else
  2078                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2079  00105E  010F               	movlb	15	; () banked
  2080  001060  9130               	bcf	48,0,b	;volatile
  2081  001062                     l399:
  2082                           
  2083                           ; BSR set to: 15
  2084                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2085  001062  0100               	movlb	0	; () banked
  2086  001064  A3B9               	btfss	CANsendMessage@flags& (0+255),1,b
  2087  001066  D003               	goto	l400
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2091  001068  010F               	movlb	15	; () banked
  2092  00106A  8330               	bsf	48,1,b	;volatile
  2093  00106C  D002               	goto	l3282
  2094  00106E                     l400:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;inc\CANlib.h: 430: else
  2098                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2099  00106E  010F               	movlb	15	; () banked
  2100  001070  9330               	bcf	48,1,b	;volatile
  2101  001072                     l3282:
  2102                           
  2103                           ; BSR set to: 15
  2104                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2105  001072  C0B6  FFD9         	movff	CANsendMessage@data,fsr2l
  2106  001076  C0B7  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2107  00107A  50DF               	movf	indf2,w,c
  2108  00107C  010F               	movlb	15	; () banked
  2109  00107E  6F36               	movwf	54,b	;volatile
  2110                           
  2111                           ; BSR set to: 15
  2112                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2113  001080  0100               	movlb	0	; () banked
  2114  001082  EE20 F001          	lfsr	2,1
  2115  001086  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2116  001088  26D9               	addwf	fsr2l,f,c
  2117  00108A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2118  00108C  22DA               	addwfc	fsr2h,f,c
  2119  00108E  50DF               	movf	indf2,w,c
  2120  001090  010F               	movlb	15	; () banked
  2121  001092  6F37               	movwf	55,b	;volatile
  2122                           
  2123                           ; BSR set to: 15
  2124                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2125  001094  0100               	movlb	0	; () banked
  2126  001096  EE20 F002          	lfsr	2,2
  2127  00109A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2128  00109C  26D9               	addwf	fsr2l,f,c
  2129  00109E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2130  0010A0  22DA               	addwfc	fsr2h,f,c
  2131  0010A2  50DF               	movf	indf2,w,c
  2132  0010A4  010F               	movlb	15	; () banked
  2133  0010A6  6F38               	movwf	56,b	;volatile
  2134                           
  2135                           ; BSR set to: 15
  2136                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2137  0010A8  0100               	movlb	0	; () banked
  2138  0010AA  EE20 F003          	lfsr	2,3
  2139  0010AE  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2140  0010B0  26D9               	addwf	fsr2l,f,c
  2141  0010B2  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2142  0010B4  22DA               	addwfc	fsr2h,f,c
  2143  0010B6  50DF               	movf	indf2,w,c
  2144  0010B8  010F               	movlb	15	; () banked
  2145  0010BA  6F39               	movwf	57,b	;volatile
  2146                           
  2147                           ; BSR set to: 15
  2148                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2149  0010BC  0100               	movlb	0	; () banked
  2150  0010BE  EE20 F004          	lfsr	2,4
  2151  0010C2  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2152  0010C4  26D9               	addwf	fsr2l,f,c
  2153  0010C6  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2154  0010C8  22DA               	addwfc	fsr2h,f,c
  2155  0010CA  50DF               	movf	indf2,w,c
  2156  0010CC  010F               	movlb	15	; () banked
  2157  0010CE  6F3A               	movwf	58,b	;volatile
  2158                           
  2159                           ; BSR set to: 15
  2160                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2161  0010D0  0100               	movlb	0	; () banked
  2162  0010D2  EE20 F005          	lfsr	2,5
  2163  0010D6  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2164  0010D8  26D9               	addwf	fsr2l,f,c
  2165  0010DA  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2166  0010DC  22DA               	addwfc	fsr2h,f,c
  2167  0010DE  50DF               	movf	indf2,w,c
  2168  0010E0  010F               	movlb	15	; () banked
  2169  0010E2  6F3B               	movwf	59,b	;volatile
  2170                           
  2171                           ; BSR set to: 15
  2172                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2173  0010E4  0100               	movlb	0	; () banked
  2174  0010E6  EE20 F006          	lfsr	2,6
  2175  0010EA  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2176  0010EC  26D9               	addwf	fsr2l,f,c
  2177  0010EE  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2178  0010F0  22DA               	addwfc	fsr2h,f,c
  2179  0010F2  50DF               	movf	indf2,w,c
  2180  0010F4  010F               	movlb	15	; () banked
  2181  0010F6  6F3C               	movwf	60,b	;volatile
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2185  0010F8  0100               	movlb	0	; () banked
  2186  0010FA  EE20 F007          	lfsr	2,7
  2187  0010FE  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2188  001100  26D9               	addwf	fsr2l,f,c
  2189  001102  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2190  001104  22DA               	addwfc	fsr2h,f,c
  2191  001106  50DF               	movf	indf2,w,c
  2192  001108  010F               	movlb	15	; () banked
  2193  00110A  6F3D               	movwf	61,b	;volatile
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2197  00110C  010F               	movlb	15	; () banked
  2198  00110E  8730               	bsf	48,3,b	;volatile
  2199                           
  2200                           ; BSR set to: 15
  2201                           ;inc\CANlib.h: 444: return;
  2202  001110  0012               	return	
  2203  001112                     l388:
  2204                           
  2205                           ; BSR set to: 15
  2206                           ;inc\CANlib.h: 445: }
  2207                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2208  001112  010F               	movlb	15	; () banked
  2209  001114  B720               	btfsc	32,3,b	;volatile
  2210  001116  0012               	return	
  2211                           
  2212                           ; BSR set to: 15
  2213                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2214  001118  C0B8  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2215                           
  2216                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2217  00111C  0100               	movlb	0	; () banked
  2218  00111E  ADB9               	btfss	CANsendMessage@flags& (0+255),6,b
  2219  001120  D003               	goto	l403
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2223  001122  010F               	movlb	15	; () banked
  2224  001124  8D25               	bsf	37,6,b	;volatile
  2225  001126  D002               	goto	l404
  2226  001128                     l403:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;inc\CANlib.h: 454: else
  2230                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2231  001128  010F               	movlb	15	; () banked
  2232  00112A  9D25               	bcf	37,6,b	;volatile
  2233  00112C                     l404:
  2234                           
  2235                           ; BSR set to: 15
  2236                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2237  00112C  0100               	movlb	0	; () banked
  2238  00112E  A7B9               	btfss	CANsendMessage@flags& (0+255),3,b
  2239  001130  D079               	goto	l405
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;inc\CANlib.h: 458: {
  2243                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2244  001132  0100               	movlb	0	; () banked
  2245  001134  51B2               	movf	CANsendMessage@identifier& (0+255),w,b
  2246  001136  0100               	movlb	0	; () banked
  2247  001138  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2248  00113A  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2249  00113C  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2250  00113E  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2254  001140  C0BE  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2258  001144  0E00               	movlw	0
  2259  001146  0100               	movlb	0	; () banked
  2260  001148  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  2261  00114A  0100               	movlb	0	; () banked
  2262  00114C  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2263  00114E  0EFF               	movlw	255
  2264  001150  0100               	movlb	0	; () banked
  2265  001152  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2266  001154  0100               	movlb	0	; () banked
  2267  001156  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2268  001158  0E00               	movlw	0
  2269  00115A  0100               	movlb	0	; () banked
  2270  00115C  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2271  00115E  0100               	movlb	0	; () banked
  2272  001160  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2273  001162  0E00               	movlw	0
  2274  001164  0100               	movlb	0	; () banked
  2275  001166  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2276  001168  0100               	movlb	0	; () banked
  2277  00116A  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2281  00116C  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  2282  001170  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2283  001174  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2284  001178  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2285  00117C  C0BB  F0BA         	movff	??_CANsendMessage+1,??_CANsendMessage
  2286  001180  C0BC  F0BB         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2287  001184  C0BD  F0BC         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2288  001188  0100               	movlb	0	; () banked
  2289  00118A  6BBD               	clrf	(??_CANsendMessage+3)& (0+255),b
  2290  00118C  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2291  001190  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2292  001194  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2293  001198  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2297  00119C  C0BE  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2301  0011A0  0E00               	movlw	0
  2302  0011A2  010F               	movlb	15	; () banked
  2303  0011A4  6F22               	movwf	34,b	;volatile
  2304                           
  2305                           ; BSR set to: 15
  2306                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2307  0011A6  010F               	movlb	15	; () banked
  2308  0011A8  8722               	bsf	34,3,b	;volatile
  2309                           
  2310                           ; BSR set to: 15
  2311                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2312  0011AA  0100               	movlb	0	; () banked
  2313  0011AC  A1B4               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2314  0011AE  D002               	goto	l406
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2318  0011B0  010F               	movlb	15	; () banked
  2319  0011B2  8122               	bsf	34,0,b	;volatile
  2320  0011B4                     l406:
  2321                           
  2322                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2323  0011B4  0100               	movlb	0	; () banked
  2324  0011B6  A3B4               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2325  0011B8  D002               	goto	l407
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2329  0011BA  010F               	movlb	15	; () banked
  2330  0011BC  8322               	bsf	34,1,b	;volatile
  2331  0011BE                     l407:
  2332                           
  2333                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2334  0011BE  0100               	movlb	0	; () banked
  2335  0011C0  A5B4               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2336  0011C2  D002               	goto	l408
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2340  0011C4  010F               	movlb	15	; () banked
  2341  0011C6  8B22               	bsf	34,5,b	;volatile
  2342  0011C8                     l408:
  2343                           
  2344                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2345  0011C8  0100               	movlb	0	; () banked
  2346  0011CA  A7B4               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2347  0011CC  D002               	goto	l409
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2351  0011CE  010F               	movlb	15	; () banked
  2352  0011D0  8D22               	bsf	34,6,b	;volatile
  2353  0011D2                     l409:
  2354                           
  2355                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2356  0011D2  0100               	movlb	0	; () banked
  2357  0011D4  A9B4               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2358  0011D6  D002               	goto	l3332
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2362  0011D8  010F               	movlb	15	; () banked
  2363  0011DA  8F22               	bsf	34,7,b	;volatile
  2364  0011DC                     l3332:
  2365                           
  2366                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2367  0011DC  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  2368  0011E0  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2369  0011E4  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2370  0011E8  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2371  0011EC  0E16               	movlw	22
  2372  0011EE  D006               	goto	u3600
  2373  0011F0                     u3605:
  2374  0011F0  0100               	movlb	0	; () banked
  2375  0011F2  90D8               	bcf	status,0,c
  2376  0011F4  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2377  0011F6  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2378  0011F8  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2379  0011FA  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  2380  0011FC                     u3600:
  2381  0011FC  2EE8               	decfsz	wreg,f,c
  2382  0011FE  D7F8               	goto	u3605
  2383  001200  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2384  001204  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2385  001208  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2386  00120C  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2390  001210  0100               	movlb	0	; () banked
  2391  001212  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  2392  001214  0100               	movlb	0	; () banked
  2393  001216  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2394  001218  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2395  00121A  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2396  00121C  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2400  00121E  C0BE  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2401                           
  2402                           ;inc\CANlib.h: 483: }
  2403  001222  D059               	goto	l3352
  2404  001224                     l405:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;inc\CANlib.h: 485: else
  2408                           ;inc\CANlib.h: 487: {
  2409                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2410  001224  010F               	movlb	15	; () banked
  2411  001226  9722               	bcf	34,3,b	;volatile
  2412                           
  2413                           ; BSR set to: 15
  2414                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2415  001228  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  2416  00122C  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2417  001230  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2418  001234  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2419  001238  0E04               	movlw	4
  2420  00123A  D006               	goto	u3610
  2421  00123C                     u3615:
  2422  00123C  0100               	movlb	0	; () banked
  2423  00123E  90D8               	bcf	status,0,c
  2424  001240  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2425  001242  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2426  001244  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2427  001246  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  2428  001248                     u3610:
  2429  001248  2EE8               	decfsz	wreg,f,c
  2430  00124A  D7F8               	goto	u3615
  2431  00124C  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2432  001250  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2433  001254  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2434  001258  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2438  00125C  0100               	movlb	0	; () banked
  2439  00125E  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  2440  001260  0100               	movlb	0	; () banked
  2441  001262  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2442  001264  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2443  001266  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2444  001268  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2448  00126A  C0BE  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2452  00126E  0E07               	movlw	7
  2453  001270  0100               	movlb	0	; () banked
  2454  001272  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  2455  001274  0100               	movlb	0	; () banked
  2456  001276  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2457  001278  0E00               	movlw	0
  2458  00127A  0100               	movlb	0	; () banked
  2459  00127C  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2460  00127E  0100               	movlb	0	; () banked
  2461  001280  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2462  001282  0E00               	movlw	0
  2463  001284  0100               	movlb	0	; () banked
  2464  001286  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2465  001288  0100               	movlb	0	; () banked
  2466  00128A  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2467  00128C  0E00               	movlw	0
  2468  00128E  0100               	movlb	0	; () banked
  2469  001290  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2470  001292  0100               	movlb	0	; () banked
  2471  001294  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2475  001296  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  2476  00129A  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2477  00129E  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2478  0012A2  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2479  0012A6  0E05               	movlw	5
  2480  0012A8                     u3625:
  2481  0012A8  90D8               	bcf	status,0,c
  2482  0012AA  0100               	movlb	0	; () banked
  2483  0012AC  37BA               	rlcf	??_CANsendMessage& (0+255),f,b
  2484  0012AE  37BB               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2485  0012B0  37BC               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2486  0012B2  37BD               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2487  0012B4  2EE8               	decfsz	wreg,f,c
  2488  0012B6  D7F8               	goto	u3625
  2489  0012B8  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2490  0012BC  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2491  0012C0  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2492  0012C4  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2496  0012C8  010F               	movlb	15	; () banked
  2497  0012CA  5122               	movf	34,w,b	;volatile
  2498  0012CC  0B1F               	andlw	31
  2499  0012CE  010F               	movlb	15	; () banked
  2500  0012D0  6F22               	movwf	34,b	;volatile
  2501                           
  2502                           ; BSR set to: 15
  2503                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2504  0012D2  C0BE  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2505  0012D6                     l3352:
  2506                           
  2507                           ;inc\CANlib.h: 498: }
  2508                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2509  0012D6  0100               	movlb	0	; () banked
  2510  0012D8  A1B9               	btfss	CANsendMessage@flags& (0+255),0,b
  2511  0012DA  D003               	goto	l412
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2515  0012DC  010F               	movlb	15	; () banked
  2516  0012DE  8120               	bsf	32,0,b	;volatile
  2517  0012E0  D002               	goto	l413
  2518  0012E2                     l412:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;inc\CANlib.h: 502: else
  2522                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2523  0012E2  010F               	movlb	15	; () banked
  2524  0012E4  9120               	bcf	32,0,b	;volatile
  2525  0012E6                     l413:
  2526                           
  2527                           ; BSR set to: 15
  2528                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2529  0012E6  0100               	movlb	0	; () banked
  2530  0012E8  A3B9               	btfss	CANsendMessage@flags& (0+255),1,b
  2531  0012EA  D003               	goto	l414
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2535  0012EC  010F               	movlb	15	; () banked
  2536  0012EE  8320               	bsf	32,1,b	;volatile
  2537  0012F0  D002               	goto	l3358
  2538  0012F2                     l414:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;inc\CANlib.h: 506: else
  2542                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2543  0012F2  010F               	movlb	15	; () banked
  2544  0012F4  9320               	bcf	32,1,b	;volatile
  2545  0012F6                     l3358:
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2549  0012F6  C0B6  FFD9         	movff	CANsendMessage@data,fsr2l
  2550  0012FA  C0B7  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2551  0012FE  50DF               	movf	indf2,w,c
  2552  001300  010F               	movlb	15	; () banked
  2553  001302  6F26               	movwf	38,b	;volatile
  2554                           
  2555                           ; BSR set to: 15
  2556                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2557  001304  0100               	movlb	0	; () banked
  2558  001306  EE20 F001          	lfsr	2,1
  2559  00130A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2560  00130C  26D9               	addwf	fsr2l,f,c
  2561  00130E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2562  001310  22DA               	addwfc	fsr2h,f,c
  2563  001312  50DF               	movf	indf2,w,c
  2564  001314  010F               	movlb	15	; () banked
  2565  001316  6F27               	movwf	39,b	;volatile
  2566                           
  2567                           ; BSR set to: 15
  2568                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2569  001318  0100               	movlb	0	; () banked
  2570  00131A  EE20 F002          	lfsr	2,2
  2571  00131E  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2572  001320  26D9               	addwf	fsr2l,f,c
  2573  001322  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2574  001324  22DA               	addwfc	fsr2h,f,c
  2575  001326  50DF               	movf	indf2,w,c
  2576  001328  010F               	movlb	15	; () banked
  2577  00132A  6F28               	movwf	40,b	;volatile
  2578                           
  2579                           ; BSR set to: 15
  2580                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2581  00132C  0100               	movlb	0	; () banked
  2582  00132E  EE20 F003          	lfsr	2,3
  2583  001332  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2584  001334  26D9               	addwf	fsr2l,f,c
  2585  001336  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2586  001338  22DA               	addwfc	fsr2h,f,c
  2587  00133A  50DF               	movf	indf2,w,c
  2588  00133C  010F               	movlb	15	; () banked
  2589  00133E  6F29               	movwf	41,b	;volatile
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2593  001340  0100               	movlb	0	; () banked
  2594  001342  EE20 F004          	lfsr	2,4
  2595  001346  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2596  001348  26D9               	addwf	fsr2l,f,c
  2597  00134A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2598  00134C  22DA               	addwfc	fsr2h,f,c
  2599  00134E  50DF               	movf	indf2,w,c
  2600  001350  010F               	movlb	15	; () banked
  2601  001352  6F2A               	movwf	42,b	;volatile
  2602                           
  2603                           ; BSR set to: 15
  2604                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2605  001354  0100               	movlb	0	; () banked
  2606  001356  EE20 F005          	lfsr	2,5
  2607  00135A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2608  00135C  26D9               	addwf	fsr2l,f,c
  2609  00135E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2610  001360  22DA               	addwfc	fsr2h,f,c
  2611  001362  50DF               	movf	indf2,w,c
  2612  001364  010F               	movlb	15	; () banked
  2613  001366  6F2B               	movwf	43,b	;volatile
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2617  001368  0100               	movlb	0	; () banked
  2618  00136A  EE20 F006          	lfsr	2,6
  2619  00136E  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2620  001370  26D9               	addwf	fsr2l,f,c
  2621  001372  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2622  001374  22DA               	addwfc	fsr2h,f,c
  2623  001376  50DF               	movf	indf2,w,c
  2624  001378  010F               	movlb	15	; () banked
  2625  00137A  6F2C               	movwf	44,b	;volatile
  2626                           
  2627                           ; BSR set to: 15
  2628                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2629  00137C  0100               	movlb	0	; () banked
  2630  00137E  EE20 F007          	lfsr	2,7
  2631  001382  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2632  001384  26D9               	addwf	fsr2l,f,c
  2633  001386  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2634  001388  22DA               	addwfc	fsr2h,f,c
  2635  00138A  50DF               	movf	indf2,w,c
  2636  00138C  010F               	movlb	15	; () banked
  2637  00138E  6F2D               	movwf	45,b	;volatile
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2641  001390  010F               	movlb	15	; () banked
  2642  001392  8720               	bsf	32,3,b	;volatile
  2643                           
  2644                           ; BSR set to: 15
  2645                           ;inc\CANlib.h: 520: return;
  2646  001394  0012               	return	
  2647  001396                     __end_of_CANsendMessage:
  2648                           	opt stack 0
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           prodh	equ	0xFF4
  2654                           prodl	equ	0xFF3
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postdec1	equ	0xFE5
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function _CANisTxReady *****************
  2665 ;; Defined at:
  2666 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2680 ;;      Params:         0       0       0       0
  2681 ;;      Locals:         0       1       0       0
  2682 ;;      Temps:          0       0       0       0
  2683 ;;      Totals:         0       1       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    4
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_remote_frame_handler
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text3
  2695  002802                     __ptext3:
  2696                           	opt stack 0
  2697  002802                     _CANisTxReady:
  2698                           	opt stack 25
  2699                           
  2700                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2701                           
  2702                           ; BSR set to: 15
  2703                           ;incstack = 0
  2704  002802  0E01               	movlw	1
  2705  002804  0100               	movlb	0	; () banked
  2706  002806  6FB2               	movwf	_CANisTxReady$3084& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709  002808  010F               	movlb	15	; () banked
  2710  00280A  A740               	btfss	64,3,b	;volatile
  2711  00280C  D009               	goto	l566
  2712                           
  2713                           ; BSR set to: 15
  2714  00280E  010F               	movlb	15	; () banked
  2715  002810  A730               	btfss	48,3,b	;volatile
  2716  002812  D006               	goto	l566
  2717                           
  2718                           ; BSR set to: 15
  2719  002814  010F               	movlb	15	; () banked
  2720  002816  A720               	btfss	32,3,b	;volatile
  2721  002818  D003               	goto	l566
  2722                           
  2723                           ; BSR set to: 15
  2724  00281A  0E00               	movlw	0
  2725  00281C  0100               	movlb	0	; () banked
  2726  00281E  6FB2               	movwf	_CANisTxReady$3084& (0+255),b
  2727  002820                     l566:
  2728  002820  0100               	movlb	0	; () banked
  2729  002822  51B2               	movf	_CANisTxReady$3084& (0+255),w,b
  2730  002824  0012               	return	
  2731  002826                     __end_of_CANisTxReady:
  2732                           	opt stack 0
  2733                           tblptru	equ	0xFF8
  2734                           tblptrh	equ	0xFF7
  2735                           tblptrl	equ	0xFF6
  2736                           tablat	equ	0xFF5
  2737                           prodh	equ	0xFF4
  2738                           prodl	equ	0xFF3
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec1	equ	0xFE5
  2742                           fsr1l	equ	0xFE1
  2743                           indf2	equ	0xFDF
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _board_initialization *****************
  2749 ;; Defined at:
  2750 ;;		line 310 in file "ABS_Code.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;		None               void
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2764 ;;      Params:         0       0       0       0
  2765 ;;      Locals:         0       0       0       0
  2766 ;;      Temps:          0       0       0       0
  2767 ;;      Totals:         0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    6
  2771 ;; This function calls:
  2772 ;;		_CANInitialize
  2773 ;;		_delay_ms
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text4
  2780  002468                     __ptext4:
  2781                           	opt stack 0
  2782  002468                     _board_initialization:
  2783                           	opt stack 24
  2784                           
  2785                           ;ABS_Code.c: 312: LATA = 0x00;
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;incstack = 0
  2789  002468  0E00               	movlw	0
  2790  00246A  6E89               	movwf	3977,c	;volatile
  2791                           
  2792                           ;ABS_Code.c: 313: TRISA = 0xFF;
  2793  00246C  6892               	setf	3986,c	;volatile
  2794                           
  2795                           ;ABS_Code.c: 314: LATB = 0x00;
  2796  00246E  0E00               	movlw	0
  2797  002470  6E8A               	movwf	3978,c	;volatile
  2798                           
  2799                           ;ABS_Code.c: 315: TRISB = 0b11111110;
  2800  002472  0EFE               	movlw	254
  2801  002474  6E93               	movwf	3987,c	;volatile
  2802                           
  2803                           ;ABS_Code.c: 316: LATC = 0x00;
  2804  002476  0E00               	movlw	0
  2805  002478  6E8B               	movwf	3979,c	;volatile
  2806                           
  2807                           ;ABS_Code.c: 317: TRISC = 0b11111110;
  2808  00247A  0EFE               	movlw	254
  2809  00247C  6E94               	movwf	3988,c	;volatile
  2810                           
  2811                           ;ABS_Code.c: 318: LATD = 0x00;
  2812  00247E  0E00               	movlw	0
  2813  002480  6E8C               	movwf	3980,c	;volatile
  2814                           
  2815                           ;ABS_Code.c: 319: TRISD = 0xFF;
  2816  002482  6895               	setf	3989,c	;volatile
  2817                           
  2818                           ;ABS_Code.c: 320: LATE = 0x00;
  2819  002484  0E00               	movlw	0
  2820  002486  6E8D               	movwf	3981,c	;volatile
  2821                           
  2822                           ;ABS_Code.c: 321: TRISE = 0xFF;
  2823  002488  6896               	setf	3990,c	;volatile
  2824                           
  2825                           ;ABS_Code.c: 323: ADCON1 = 0x11111110;
  2826  00248A  0E10               	movlw	16
  2827  00248C  6EC1               	movwf	4033,c	;volatile
  2828                           
  2829                           ;ABS_Code.c: 326: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2830  00248E  0E06               	movlw	6
  2831  002490  0100               	movlb	0	; () banked
  2832  002492  6FC0               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2833  002494  0E05               	movlw	5
  2834  002496  0100               	movlb	0	; () banked
  2835  002498  6FC1               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2836  00249A  0E01               	movlw	1
  2837  00249C  0100               	movlb	0	; () banked
  2838  00249E  6FC2               	movwf	CANInitialize@SJW& (0+255),b
  2839  0024A0  0E03               	movlw	3
  2840  0024A2  0100               	movlb	0	; () banked
  2841  0024A4  6FC3               	movwf	CANInitialize@BRP& (0+255),b
  2842  0024A6  0E9D               	movlw	157
  2843  0024A8  0100               	movlb	0	; () banked
  2844  0024AA  6FC4               	movwf	CANInitialize@flags& (0+255),b
  2845  0024AC  0E04               	movlw	4
  2846  0024AE  EC96  F00F         	call	_CANInitialize
  2847                           
  2848                           ;ABS_Code.c: 329: PIR3bits.RXB1IF = 0;
  2849  0024B2  92A4               	bcf	4004,1,c	;volatile
  2850                           
  2851                           ;ABS_Code.c: 330: PIR3bits.RXB0IF = 0;
  2852  0024B4  90A4               	bcf	4004,0,c	;volatile
  2853                           
  2854                           ;ABS_Code.c: 331: INTCONbits.TMR0IF = 0;
  2855  0024B6  94F2               	bcf	intcon,2,c	;volatile
  2856                           
  2857                           ;ABS_Code.c: 332: INTCON3bits.INT1IF = 0;
  2858  0024B8  90F0               	bcf	intcon3,0,c	;volatile
  2859                           
  2860                           ;ABS_Code.c: 333: INTCON3bits.INT2IF = 0;
  2861  0024BA  92F0               	bcf	intcon3,1,c	;volatile
  2862                           
  2863                           ;ABS_Code.c: 334: PIR2bits.TMR3IF = 0;
  2864  0024BC  92A1               	bcf	4001,1,c	;volatile
  2865                           
  2866                           ;ABS_Code.c: 337: RCONbits.IPEN = 1;
  2867  0024BE  8ED0               	bsf	4048,7,c	;volatile
  2868                           
  2869                           ;ABS_Code.c: 338: IPR3bits.RXB1IP = 0;
  2870  0024C0  92A5               	bcf	4005,1,c	;volatile
  2871                           
  2872                           ;ABS_Code.c: 339: IPR3bits.RXB0IP = 0;
  2873  0024C2  90A5               	bcf	4005,0,c	;volatile
  2874                           
  2875                           ;ABS_Code.c: 340: INTCON2bits.TMR0IP = 1;
  2876  0024C4  84F1               	bsf	intcon2,2,c	;volatile
  2877                           
  2878                           ;ABS_Code.c: 341: INTCON3bits.INT1IP = 1;
  2879  0024C6  8CF0               	bsf	intcon3,6,c	;volatile
  2880                           
  2881                           ;ABS_Code.c: 342: INTCON3bits.INT2IP = 1;
  2882  0024C8  8EF0               	bsf	intcon3,7,c	;volatile
  2883                           
  2884                           ;ABS_Code.c: 345: T0CON = 0x80;
  2885  0024CA  0E80               	movlw	128
  2886  0024CC  6ED5               	movwf	4053,c	;volatile
  2887                           
  2888                           ;ABS_Code.c: 352: TMR0H = 0xFF;
  2889  0024CE  68D7               	setf	4055,c	;volatile
  2890                           
  2891                           ;ABS_Code.c: 353: TMR0L = 0xFE;
  2892  0024D0  0EFE               	movlw	254
  2893  0024D2  6ED6               	movwf	4054,c	;volatile
  2894                           
  2895                           ;ABS_Code.c: 354: PORTCbits.RC0 = 0;
  2896  0024D4  9082               	bcf	3970,0,c	;volatile
  2897                           
  2898                           ;ABS_Code.c: 355: brake_value_degree = 90;
  2899  0024D6  0E5A               	movlw	90
  2900  0024D8  6E3C               	movwf	_brake_value_degree,c
  2901                           
  2902                           ;ABS_Code.c: 356: T1CON = 10010000;
  2903  0024DA  0E90               	movlw	144
  2904  0024DC  6ECD               	movwf	4045,c	;volatile
  2905                           
  2906                           ;ABS_Code.c: 357: T3CON = 11010000;
  2907  0024DE  0ED0               	movlw	208
  2908  0024E0  6EB1               	movwf	4017,c	;volatile
  2909                           
  2910                           ;ABS_Code.c: 358: INTCON2bits.INTEDG1 = 1;
  2911  0024E2  8AF1               	bsf	intcon2,5,c	;volatile
  2912                           
  2913                           ;ABS_Code.c: 359: INTCON2bits.INTEDG2 = 1;
  2914  0024E4  88F1               	bsf	intcon2,4,c	;volatile
  2915                           
  2916                           ;ABS_Code.c: 362: ADCON1 = 0b01110111;
  2917  0024E6  0E77               	movlw	119
  2918  0024E8  6EC1               	movwf	4033,c	;volatile
  2919                           
  2920                           ;ABS_Code.c: 363: ADCON0bits.CHS2 = 0;
  2921  0024EA  98C2               	bcf	4034,4,c	;volatile
  2922                           
  2923                           ;ABS_Code.c: 364: ADCON0bits.CHS1 = 0;
  2924  0024EC  96C2               	bcf	4034,3,c	;volatile
  2925                           
  2926                           ;ABS_Code.c: 365: ADCON0bits.CHS0 = 0;
  2927  0024EE  94C2               	bcf	4034,2,c	;volatile
  2928                           
  2929                           ;ABS_Code.c: 366: ADCON2bits.ACQT2 = 1;
  2930  0024F0  8AC0               	bsf	4032,5,c	;volatile
  2931                           
  2932                           ;ABS_Code.c: 367: ADCON2bits.ACQT1 = 1;
  2933  0024F2  88C0               	bsf	4032,4,c	;volatile
  2934                           
  2935                           ;ABS_Code.c: 368: ADCON2bits.ACQT0 = 0;
  2936  0024F4  96C0               	bcf	4032,3,c	;volatile
  2937                           
  2938                           ;ABS_Code.c: 369: ADCON2bits.ADCS2 = 1;
  2939  0024F6  84C0               	bsf	4032,2,c	;volatile
  2940                           
  2941                           ;ABS_Code.c: 370: ADCON2bits.ADCS1 = 0;
  2942  0024F8  92C0               	bcf	4032,1,c	;volatile
  2943                           
  2944                           ;ABS_Code.c: 371: ADCON2bits.ADCS0 = 1;
  2945  0024FA  80C0               	bsf	4032,0,c	;volatile
  2946                           
  2947                           ;ABS_Code.c: 372: ADCON2bits.ADFM = 0;
  2948  0024FC  9EC0               	bcf	4032,7,c	;volatile
  2949                           
  2950                           ;ABS_Code.c: 373: ADCON0bits.ADON = 1;
  2951  0024FE  80C2               	bsf	4034,0,c	;volatile
  2952                           
  2953                           ;ABS_Code.c: 376: PIE3bits.RXB1IE = 1;
  2954  002500  82A3               	bsf	4003,1,c	;volatile
  2955                           
  2956                           ;ABS_Code.c: 377: PIE3bits.RXB0IE = 1;
  2957  002502  80A3               	bsf	4003,0,c	;volatile
  2958                           
  2959                           ;ABS_Code.c: 378: INTCONbits.TMR0IE = 1;
  2960  002504  8AF2               	bsf	intcon,5,c	;volatile
  2961                           
  2962                           ;ABS_Code.c: 379: INTCON3bits.INT1IE = 1;
  2963  002506  86F0               	bsf	intcon3,3,c	;volatile
  2964                           
  2965                           ;ABS_Code.c: 380: INTCON3bits.INT2IE = 1;
  2966  002508  88F0               	bsf	intcon3,4,c	;volatile
  2967                           
  2968                           ;ABS_Code.c: 381: INTCONbits.GIEH = 1;
  2969  00250A  8EF2               	bsf	intcon,7,c	;volatile
  2970                           
  2971                           ;ABS_Code.c: 382: INTCONbits.GIEL = 1;
  2972  00250C  8CF2               	bsf	intcon,6,c	;volatile
  2973                           
  2974                           ;ABS_Code.c: 385: T1CONbits.TMR1ON = 1;
  2975  00250E  80CD               	bsf	4045,0,c	;volatile
  2976                           
  2977                           ;ABS_Code.c: 386: T3CONbits.TMR3ON = 1;
  2978  002510  80B1               	bsf	4017,0,c	;volatile
  2979                           
  2980                           ;ABS_Code.c: 387: T0CONbits.TMR0ON = 1;
  2981  002512  8ED5               	bsf	4053,7,c	;volatile
  2982                           
  2983                           ;ABS_Code.c: 388: delay_ms(2);
  2984  002514  0E00               	movlw	0
  2985  002516  0100               	movlb	0	; () banked
  2986  002518  6FB9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2987  00251A  0E02               	movlw	2
  2988  00251C  6FB8               	movwf	delay_ms@value_ms& (0+255),b
  2989  00251E  ECB6  F013         	call	_delay_ms	;wreg free
  2990  002522  0012               	return		;funcret
  2991  002524                     __end_of_board_initialization:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           prodh	equ	0xFF4
  2998                           prodl	equ	0xFF3
  2999                           intcon	equ	0xFF2
  3000                           intcon2	equ	0xFF1
  3001                           intcon3	equ	0xFF0
  3002                           postinc0	equ	0xFEE
  3003                           wreg	equ	0xFE8
  3004                           postdec1	equ	0xFE5
  3005                           fsr1l	equ	0xFE1
  3006                           indf2	equ	0xFDF
  3007                           fsr2h	equ	0xFDA
  3008                           fsr2l	equ	0xFD9
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _delay_ms *****************
  3012 ;; Defined at:
  3013 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  value_ms        2   28[BANK0 ] unsigned int 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;		None               void
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3027 ;;      Params:         0       2       0       0
  3028 ;;      Locals:         0       0       0       0
  3029 ;;      Temps:          0       0       0       0
  3030 ;;      Totals:         0       2       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    5
  3034 ;; This function calls:
  3035 ;;		___wmul
  3036 ;; This function is called by:
  3037 ;;		_board_initialization
  3038 ;;		_delay_s
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text5
  3043  00276C                     __ptext5:
  3044                           	opt stack 0
  3045  00276C                     _delay_ms:
  3046                           	opt stack 24
  3047                           
  3048                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3049                           
  3050                           ;incstack = 0
  3051  00276C  C0CC  F0B2         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3052  002770  0100               	movlb	0	; () banked
  3053  002772  6BB3               	clrf	(___wmul@multiplier+1)& (0+255),b
  3054  002774  C0B8  F0B4         	movff	delay_ms@value_ms,___wmul@multiplicand
  3055  002778  C0B9  F0B5         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3056  00277C  ECD3  F013         	call	___wmul	;wreg free
  3057  002780  C0B2  F06C         	movff	?___wmul,_clock_counter_reference	;volatile
  3058  002784  C0B3  F06D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3059                           
  3060                           ;src\delay.c: 75: while (clock_counter_reference) {
  3061  002788  D007               	goto	l579
  3062  00278A                     l3392:
  3063                           
  3064                           ;src\delay.c: 85: _delay(240);
  3065  00278A  0E50               	movlw	80
  3066  00278C                     u4587:
  3067  00278C  2EE8               	decfsz	wreg,f,c
  3068  00278E  D7FE               	goto	u4587
  3069                           
  3070                           ;src\delay.c: 88: clock_counter_reference--;
  3071  002790  0100               	movlb	0	; () banked
  3072  002792  076C               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3073  002794  A0D8               	btfss	status,0,c
  3074  002796  076D               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3075  002798                     l579:
  3076  002798  0100               	movlb	0	; () banked
  3077  00279A  516C               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3078  00279C  0100               	movlb	0	; () banked
  3079  00279E  116D               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3080  0027A0  B4D8               	btfsc	status,2,c
  3081  0027A2  0012               	return	
  3082  0027A4  D7F2               	goto	l3392
  3083  0027A6                     __end_of_delay_ms:
  3084                           	opt stack 0
  3085                           tblptru	equ	0xFF8
  3086                           tblptrh	equ	0xFF7
  3087                           tblptrl	equ	0xFF6
  3088                           tablat	equ	0xFF5
  3089                           prodh	equ	0xFF4
  3090                           prodl	equ	0xFF3
  3091                           intcon	equ	0xFF2
  3092                           intcon2	equ	0xFF1
  3093                           intcon3	equ	0xFF0
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           postdec1	equ	0xFE5
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           fsr2h	equ	0xFDA
  3100                           fsr2l	equ	0xFD9
  3101                           status	equ	0xFD8
  3102                           
  3103 ;; *************** function ___wmul *****************
  3104 ;; Defined at:
  3105 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  multiplier      2   22[BANK0 ] unsigned int 
  3108 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  product         2   26[BANK0 ] unsigned int 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  2   22[BANK0 ] unsigned int 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, prodl, prodh
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3120 ;;      Params:         0       4       0       0
  3121 ;;      Locals:         0       2       0       0
  3122 ;;      Temps:          0       0       0       0
  3123 ;;      Totals:         0       6       0       0
  3124 ;;Total ram usage:        6 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    4
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_delay_ms
  3131 ;;		_remote_frame_handler
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text6
  3136  0027A6                     __ptext6:
  3137                           	opt stack 0
  3138  0027A6                     ___wmul:
  3139                           	opt stack 25
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;incstack = 0
  3143  0027A6  0100               	movlb	0	; () banked
  3144  0027A8  51B2               	movf	___wmul@multiplier& (0+255),w,b
  3145  0027AA  0100               	movlb	0	; () banked
  3146  0027AC  03B4               	mulwf	___wmul@multiplicand& (0+255),b
  3147  0027AE  CFF3 F0B6          	movff	prodl,___wmul@product
  3148  0027B2  CFF4 F0B7          	movff	prodh,___wmul@product+1
  3149  0027B6  0100               	movlb	0	; () banked
  3150  0027B8  51B2               	movf	___wmul@multiplier& (0+255),w,b
  3151  0027BA  0100               	movlb	0	; () banked
  3152  0027BC  03B5               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3153  0027BE  50F3               	movf	prodl,w,c
  3154  0027C0  0100               	movlb	0	; () banked
  3155  0027C2  27B7               	addwf	(___wmul@product+1)& (0+255),f,b
  3156  0027C4  0100               	movlb	0	; () banked
  3157  0027C6  51B3               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3158  0027C8  0100               	movlb	0	; () banked
  3159  0027CA  03B4               	mulwf	___wmul@multiplicand& (0+255),b
  3160  0027CC  50F3               	movf	prodl,w,c
  3161  0027CE  0100               	movlb	0	; () banked
  3162  0027D0  27B7               	addwf	(___wmul@product+1)& (0+255),f,b
  3163                           
  3164                           ; BSR set to: 0
  3165  0027D2  C0B6  F0B2         	movff	___wmul@product,?___wmul
  3166  0027D6  C0B7  F0B3         	movff	___wmul@product+1,?___wmul+1
  3167  0027DA  0012               	return	
  3168  0027DC                     __end_of___wmul:
  3169                           	opt stack 0
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           intcon2	equ	0xFF1
  3178                           intcon3	equ	0xFF0
  3179                           postinc0	equ	0xFEE
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           fsr1l	equ	0xFE1
  3183                           indf2	equ	0xFDF
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _CANInitialize *****************
  3189 ;; Defined at:
  3190 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  propSeg         1    wreg     unsigned char 
  3193 ;;  phaseSeg1       1   36[BANK0 ] unsigned char 
  3194 ;;  phaseSeg2       1   37[BANK0 ] unsigned char 
  3195 ;;  SJW             1   38[BANK0 ] unsigned char 
  3196 ;;  BRP             1   39[BANK0 ] unsigned char 
  3197 ;;  flags           1   40[BANK0 ] enum E16844
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  propSeg         1   45[BANK0 ] unsigned char 
  3200 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  3201 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;		None               void
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3211 ;;      Params:         0       5       0       0
  3212 ;;      Locals:         0       3       0       0
  3213 ;;      Temps:          0       4       0       0
  3214 ;;      Totals:         0      12       0       0
  3215 ;;Total ram usage:       12 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    5
  3218 ;; This function calls:
  3219 ;;		_CANOperationMode
  3220 ;;		_CANSetFilter
  3221 ;;		_CANSetMask
  3222 ;; This function is called by:
  3223 ;;		_board_initialization
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text7
  3228  001F2C                     __ptext7:
  3229                           	opt stack 0
  3230  001F2C                     _CANInitialize:
  3231                           	opt stack 24
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;incstack = 0
  3235                           ;CANInitialize@propSeg stored from wreg
  3236  001F2C  0100               	movlb	0	; () banked
  3237  001F2E  6FC9               	movwf	CANInitialize@propSeg& (0+255),b
  3238                           
  3239                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3240                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3241                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3242  001F30  0E80               	movlw	128
  3243  001F32  EC13  F014         	call	_CANOperationMode
  3244                           
  3245                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3246  001F36  0E00               	movlw	0
  3247  001F38  6E70               	movwf	3952,c	;volatile
  3248                           
  3249                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3250  001F3A  0E00               	movlw	0
  3251  001F3C  6E71               	movwf	3953,c	;volatile
  3252                           
  3253                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3254  001F3E  0E00               	movlw	0
  3255  001F40  6E72               	movwf	3954,c	;volatile
  3256                           
  3257                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3258  001F42  0100               	movlb	0	; () banked
  3259  001F44  41C2               	rrncf	CANInitialize@SJW& (0+255),w,b
  3260  001F46  42E8               	rrncf	wreg,f,c
  3261  001F48  0BC0               	andlw	192
  3262  001F4A  0100               	movlb	0	; () banked
  3263  001F4C  6FC2               	movwf	CANInitialize@SJW& (0+255),b
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3267  001F4E  0100               	movlb	0	; () banked
  3268  001F50  51C2               	movf	CANInitialize@SJW& (0+255),w,b
  3269  001F52  1270               	iorwf	3952,f,c	;volatile
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3273  001F54  0100               	movlb	0	; () banked
  3274  001F56  51C3               	movf	CANInitialize@BRP& (0+255),w,b
  3275  001F58  1270               	iorwf	3952,f,c	;volatile
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3279  001F5A  0100               	movlb	0	; () banked
  3280  001F5C  51C9               	movf	CANInitialize@propSeg& (0+255),w,b
  3281  001F5E  1271               	iorwf	3953,f,c	;volatile
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3285  001F60  0100               	movlb	0	; () banked
  3286  001F62  39C0               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3287  001F64  42E8               	rrncf	wreg,f,c
  3288  001F66  0BF8               	andlw	248
  3289  001F68  0100               	movlb	0	; () banked
  3290  001F6A  6FC0               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3294  001F6C  0100               	movlb	0	; () banked
  3295  001F6E  51C0               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3296  001F70  1271               	iorwf	3953,f,c	;volatile
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3300  001F72  0100               	movlb	0	; () banked
  3301  001F74  A5C4               	btfss	CANInitialize@flags& (0+255),2,b
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3305  001F76  8C71               	bsf	3953,6,c	;volatile
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3309  001F78  0100               	movlb	0	; () banked
  3310  001F7A  B1C4               	btfsc	CANInitialize@flags& (0+255),0,b
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3314  001F7C  8E71               	bsf	3953,7,c	;volatile
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3318                           
  3319                           ; BSR set to: 0
  3320  001F7E  0100               	movlb	0	; () banked
  3321  001F80  51C1               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3322  001F82  1272               	iorwf	3954,f,c	;volatile
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3326  001F84  0100               	movlb	0	; () banked
  3327  001F86  B3C4               	btfsc	CANInitialize@flags& (0+255),1,b
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3331  001F88  8C72               	bsf	3954,6,c	;volatile
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3335                           
  3336                           ; BSR set to: 0
  3337  001F8A  0100               	movlb	0	; () banked
  3338  001F8C  51C4               	movf	CANInitialize@flags& (0+255),w,b
  3339  001F8E  0B60               	andlw	96
  3340  001F90  6E60               	movwf	3936,c	;volatile
  3341                           
  3342                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3343  001F92  0100               	movlb	0	; () banked
  3344  001F94  51C4               	movf	CANInitialize@flags& (0+255),w,b
  3345  001F96  0B10               	andlw	16
  3346  001F98  0AFF               	xorlw	255
  3347  001F9A  B4D8               	btfsc	status,2,c
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3351  001F9C  8460               	bsf	3936,2,c	;volatile
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3355  001F9E  CF60 FF50          	movff	3936,3920	;volatile
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3359  001FA2  0E00               	movlw	0
  3360  001FA4  0100               	movlb	0	; () banked
  3361  001FA6  6FB2               	movwf	CANSetMask@mask& (0+255),b
  3362  001FA8  0E00               	movlw	0
  3363  001FAA  6FB3               	movwf	(CANSetMask@mask+1)& (0+255),b
  3364  001FAC  0E00               	movlw	0
  3365  001FAE  6FB4               	movwf	(CANSetMask@mask+2)& (0+255),b
  3366  001FB0  0E00               	movlw	0
  3367  001FB2  6FB5               	movwf	(CANSetMask@mask+3)& (0+255),b
  3368  001FB4  0EF7               	movlw	247
  3369  001FB6  0100               	movlb	0	; () banked
  3370  001FB8  6FB6               	movwf	CANSetMask@type& (0+255),b
  3371  001FBA  0E01               	movlw	1
  3372  001FBC  EC51  F00C         	call	_CANSetMask
  3373                           
  3374                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3375  001FC0  0E00               	movlw	0
  3376  001FC2  0100               	movlb	0	; () banked
  3377  001FC4  6FB2               	movwf	CANSetMask@mask& (0+255),b
  3378  001FC6  0E00               	movlw	0
  3379  001FC8  6FB3               	movwf	(CANSetMask@mask+1)& (0+255),b
  3380  001FCA  0E00               	movlw	0
  3381  001FCC  6FB4               	movwf	(CANSetMask@mask+2)& (0+255),b
  3382  001FCE  0E00               	movlw	0
  3383  001FD0  6FB5               	movwf	(CANSetMask@mask+3)& (0+255),b
  3384  001FD2  0EF7               	movlw	247
  3385  001FD4  0100               	movlb	0	; () banked
  3386  001FD6  6FB6               	movwf	CANSetMask@type& (0+255),b
  3387  001FD8  0E02               	movlw	2
  3388  001FDA  EC51  F00C         	call	_CANSetMask
  3389                           
  3390                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3391  001FDE  D00F               	goto	l3140
  3392  001FE0                     l3134:
  3393                           
  3394                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3395  001FE0  0EF7               	movlw	247
  3396  001FE2  0100               	movlb	0	; () banked
  3397  001FE4  6FCA               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3398  001FE6  D007               	goto	l3136
  3399  001FE8                     l368:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3403  001FE8  0100               	movlb	0	; () banked
  3404  001FEA  69CA               	setf	CANInitialize@FilterConfig1& (0+255),b
  3405                           
  3406                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3407  001FEC  0100               	movlb	0	; () banked
  3408  001FEE  69CB               	setf	CANInitialize@FilterConfig2& (0+255),b
  3409                           
  3410                           ;inc\CANlib.h: 273: break;
  3411  001FF0  D028               	goto	l3142
  3412  001FF2                     l369:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3416  001FF2  0100               	movlb	0	; () banked
  3417  001FF4  69CA               	setf	CANInitialize@FilterConfig1& (0+255),b
  3418  001FF6                     l3136:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3422  001FF6  0EF7               	movlw	247
  3423  001FF8  0100               	movlb	0	; () banked
  3424  001FFA  6FCB               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;inc\CANlib.h: 278: }
  3428                           
  3429                           ;inc\CANlib.h: 277: break;
  3430  001FFC  D022               	goto	l3142
  3431  001FFE                     l3140:
  3432  001FFE  0E9F               	movlw	159
  3433  002000  0100               	movlb	0	; () banked
  3434  002002  6FC5               	movwf	??_CANInitialize& (0+255),b
  3435  002004  0EFF               	movlw	255
  3436  002006  0100               	movlb	0	; () banked
  3437  002008  6FC6               	movwf	(??_CANInitialize+1)& (0+255),b
  3438  00200A  0100               	movlb	0	; () banked
  3439  00200C  51C4               	movf	CANInitialize@flags& (0+255),w,b
  3440  00200E  0B60               	andlw	96
  3441  002010  0100               	movlb	0	; () banked
  3442  002012  6FC7               	movwf	(??_CANInitialize+2)& (0+255),b
  3443  002014  6BC8               	clrf	(??_CANInitialize+3)& (0+255),b
  3444  002016  0100               	movlb	0	; () banked
  3445  002018  51C5               	movf	??_CANInitialize& (0+255),w,b
  3446  00201A  0100               	movlb	0	; () banked
  3447  00201C  13C7               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3448  00201E  0100               	movlb	0	; () banked
  3449  002020  51C6               	movf	(??_CANInitialize+1)& (0+255),w,b
  3450  002022  0100               	movlb	0	; () banked
  3451  002024  13C8               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3452                           
  3453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3454                           ; Switch size 1, requested type "space"
  3455                           ; Number of cases is 1, Range of values is 0 to 0
  3456                           ; switch strategies available:
  3457                           ; Name         Instructions Cycles
  3458                           ; simple_byte            4     3 (average)
  3459                           ;	Chosen strategy is simple_byte
  3460  002026  0100               	movlb	0	; () banked
  3461  002028  51C8               	movf	(??_CANInitialize+3)& (0+255),w,b
  3462  00202A  0A00               	xorlw	0	; case 0
  3463  00202C  A4D8               	btfss	status,2,c
  3464  00202E  D7E1               	goto	l369
  3465                           
  3466                           ; BSR set to: 0
  3467                           ; Switch size 1, requested type "space"
  3468                           ; Number of cases is 2, Range of values is 191 to 223
  3469                           ; switch strategies available:
  3470                           ; Name         Instructions Cycles
  3471                           ; simple_byte            7     4 (average)
  3472                           ;	Chosen strategy is simple_byte
  3473  002030  0100               	movlb	0	; () banked
  3474  002032  51C7               	movf	(??_CANInitialize+2)& (0+255),w,b
  3475  002034  0ABF               	xorlw	191	; case 191
  3476  002036  B4D8               	btfsc	status,2,c
  3477  002038  D7D7               	goto	l368
  3478  00203A  0A60               	xorlw	96	; case 223
  3479  00203C  B4D8               	btfsc	status,2,c
  3480  00203E  D7D0               	goto	l3134
  3481  002040  D7D8               	goto	l369
  3482  002042                     l3142:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3486  002042  0E00               	movlw	0
  3487  002044  0100               	movlb	0	; () banked
  3488  002046  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3489  002048  0E00               	movlw	0
  3490  00204A  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3491  00204C  0E00               	movlw	0
  3492  00204E  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3493  002050  0E00               	movlw	0
  3494  002052  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3495  002054  C0CA  F0B6         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3496  002058  0E00               	movlw	0
  3497  00205A  EC82  F000         	call	_CANSetFilter
  3498                           
  3499                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3500  00205E  0E00               	movlw	0
  3501  002060  0100               	movlb	0	; () banked
  3502  002062  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3503  002064  0E00               	movlw	0
  3504  002066  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3505  002068  0E00               	movlw	0
  3506  00206A  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3507  00206C  0E00               	movlw	0
  3508  00206E  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3509  002070  C0CA  F0B6         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3510  002074  0E01               	movlw	1
  3511  002076  EC82  F000         	call	_CANSetFilter
  3512                           
  3513                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3514  00207A  0E00               	movlw	0
  3515  00207C  0100               	movlb	0	; () banked
  3516  00207E  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3517  002080  0E00               	movlw	0
  3518  002082  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3519  002084  0E00               	movlw	0
  3520  002086  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3521  002088  0E00               	movlw	0
  3522  00208A  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3523  00208C  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3524  002090  0E02               	movlw	2
  3525  002092  EC82  F000         	call	_CANSetFilter
  3526                           
  3527                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3528  002096  0E00               	movlw	0
  3529  002098  0100               	movlb	0	; () banked
  3530  00209A  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3531  00209C  0E00               	movlw	0
  3532  00209E  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3533  0020A0  0E00               	movlw	0
  3534  0020A2  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3535  0020A4  0E00               	movlw	0
  3536  0020A6  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3537  0020A8  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3538  0020AC  0E03               	movlw	3
  3539  0020AE  EC82  F000         	call	_CANSetFilter
  3540                           
  3541                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3542  0020B2  0E00               	movlw	0
  3543  0020B4  0100               	movlb	0	; () banked
  3544  0020B6  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3545  0020B8  0E00               	movlw	0
  3546  0020BA  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3547  0020BC  0E00               	movlw	0
  3548  0020BE  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3549  0020C0  0E00               	movlw	0
  3550  0020C2  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3551  0020C4  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3552  0020C8  0E04               	movlw	4
  3553  0020CA  EC82  F000         	call	_CANSetFilter
  3554                           
  3555                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3556  0020CE  0E00               	movlw	0
  3557  0020D0  0100               	movlb	0	; () banked
  3558  0020D2  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3559  0020D4  0E00               	movlw	0
  3560  0020D6  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3561  0020D8  0E00               	movlw	0
  3562  0020DA  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3563  0020DC  0E00               	movlw	0
  3564  0020DE  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3565  0020E0  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3566  0020E4  0E05               	movlw	5
  3567  0020E6  EC82  F000         	call	_CANSetFilter
  3568                           
  3569                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3570  0020EA  0E00               	movlw	0
  3571  0020EC  EC13  F014         	call	_CANOperationMode
  3572  0020F0  0012               	return		;funcret
  3573  0020F2                     __end_of_CANInitialize:
  3574                           	opt stack 0
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           intcon2	equ	0xFF1
  3583                           intcon3	equ	0xFF0
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postdec1	equ	0xFE5
  3587                           fsr1l	equ	0xFE1
  3588                           indf2	equ	0xFDF
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _CANSetMask *****************
  3594 ;; Defined at:
  3595 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  numBuffer       1    wreg     enum E16878
  3598 ;;  mask            4   22[BANK0 ] unsigned long 
  3599 ;;  type            1   26[BANK0 ] enum E16844
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  numBuffer       1   31[BANK0 ] enum E16878
  3602 ;;  tamp            4   32[BANK0 ] unsigned long 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;		None               void
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3612 ;;      Params:         0       5       0       0
  3613 ;;      Locals:         0       5       0       0
  3614 ;;      Temps:          0       4       0       0
  3615 ;;      Totals:         0      14       0       0
  3616 ;;Total ram usage:       14 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    4
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_CANInitialize
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text8
  3627  0018A2                     __ptext8:
  3628                           	opt stack 0
  3629  0018A2                     _CANSetMask:
  3630                           	opt stack 24
  3631                           
  3632                           ;incstack = 0
  3633                           ;CANSetMask@numBuffer stored from wreg
  3634  0018A2  0100               	movlb	0	; () banked
  3635  0018A4  6FBB               	movwf	CANSetMask@numBuffer& (0+255),b
  3636                           
  3637                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3638  0018A6  0100               	movlb	0	; () banked
  3639  0018A8  05BB               	decf	CANSetMask@numBuffer& (0+255),w,b
  3640  0018AA  A4D8               	btfss	status,2,c
  3641  0018AC  D056               	goto	l2698
  3642                           
  3643                           ; BSR set to: 0
  3644  0018AE  0100               	movlb	0	; () banked
  3645  0018B0  29B6               	incf	CANSetMask@type& (0+255),w,b
  3646  0018B2  A4D8               	btfss	status,2,c
  3647  0018B4  D052               	goto	l2698
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 644: {
  3651                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3652  0018B6  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  3653  0018BA  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3654  0018BE  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3655  0018C2  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3656  0018C6  0E04               	movlw	4
  3657  0018C8  D006               	goto	u2280
  3658  0018CA                     u2285:
  3659  0018CA  0100               	movlb	0	; () banked
  3660  0018CC  90D8               	bcf	status,0,c
  3661  0018CE  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3662  0018D0  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3663  0018D2  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3664  0018D4  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  3665  0018D6                     u2280:
  3666  0018D6  2EE8               	decfsz	wreg,f,c
  3667  0018D8  D7F8               	goto	u2285
  3668  0018DA  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3669  0018DE  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3670  0018E2  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3671  0018E6  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3675  0018EA  0100               	movlb	0	; () banked
  3676  0018EC  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  3677  0018EE  0100               	movlb	0	; () banked
  3678  0018F0  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3679  0018F2  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3680  0018F4  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3681  0018F6  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3685  0018F8  C0BC  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3689  0018FC  0E07               	movlw	7
  3690  0018FE  0100               	movlb	0	; () banked
  3691  001900  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  3692  001902  0100               	movlb	0	; () banked
  3693  001904  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3694  001906  0E00               	movlw	0
  3695  001908  0100               	movlb	0	; () banked
  3696  00190A  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3697  00190C  0100               	movlb	0	; () banked
  3698  00190E  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3699  001910  0E00               	movlw	0
  3700  001912  0100               	movlb	0	; () banked
  3701  001914  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3702  001916  0100               	movlb	0	; () banked
  3703  001918  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3704  00191A  0E00               	movlw	0
  3705  00191C  0100               	movlb	0	; () banked
  3706  00191E  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3707  001920  0100               	movlb	0	; () banked
  3708  001922  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3712  001924  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  3713  001928  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3714  00192C  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3715  001930  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3716  001934  0E05               	movlw	5
  3717  001936                     u2295:
  3718  001936  90D8               	bcf	status,0,c
  3719  001938  0100               	movlb	0	; () banked
  3720  00193A  37B7               	rlcf	??_CANSetMask& (0+255),f,b
  3721  00193C  37B8               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3722  00193E  37B9               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3723  001940  37BA               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3724  001942  2EE8               	decfsz	wreg,f,c
  3725  001944  D7F8               	goto	u2295
  3726  001946  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3727  00194A  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3728  00194E  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3729  001952  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3733  001956  C0BC  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3734  00195A                     l2698:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;inc\CANlib.h: 652: }
  3738                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3739  00195A  0E02               	movlw	2
  3740  00195C  0100               	movlb	0	; () banked
  3741  00195E  19BB               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3742  001960  A4D8               	btfss	status,2,c
  3743  001962  D056               	goto	l2714
  3744                           
  3745                           ; BSR set to: 0
  3746  001964  0100               	movlb	0	; () banked
  3747  001966  29B6               	incf	CANSetMask@type& (0+255),w,b
  3748  001968  A4D8               	btfss	status,2,c
  3749  00196A  D052               	goto	l2714
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 655: {
  3753                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3754  00196C  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  3755  001970  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3756  001974  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3757  001978  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3758  00197C  0E04               	movlw	4
  3759  00197E  D006               	goto	u2320
  3760  001980                     u2325:
  3761  001980  0100               	movlb	0	; () banked
  3762  001982  90D8               	bcf	status,0,c
  3763  001984  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3764  001986  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3765  001988  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3766  00198A  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  3767  00198C                     u2320:
  3768  00198C  2EE8               	decfsz	wreg,f,c
  3769  00198E  D7F8               	goto	u2325
  3770  001990  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3771  001994  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3772  001998  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3773  00199C  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3777  0019A0  0100               	movlb	0	; () banked
  3778  0019A2  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  3779  0019A4  0100               	movlb	0	; () banked
  3780  0019A6  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3781  0019A8  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3782  0019AA  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3783  0019AC  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3787  0019AE  C0BC  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3791  0019B2  0E07               	movlw	7
  3792  0019B4  0100               	movlb	0	; () banked
  3793  0019B6  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  3794  0019B8  0100               	movlb	0	; () banked
  3795  0019BA  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3796  0019BC  0E00               	movlw	0
  3797  0019BE  0100               	movlb	0	; () banked
  3798  0019C0  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3799  0019C2  0100               	movlb	0	; () banked
  3800  0019C4  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3801  0019C6  0E00               	movlw	0
  3802  0019C8  0100               	movlb	0	; () banked
  3803  0019CA  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3804  0019CC  0100               	movlb	0	; () banked
  3805  0019CE  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3806  0019D0  0E00               	movlw	0
  3807  0019D2  0100               	movlb	0	; () banked
  3808  0019D4  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3809  0019D6  0100               	movlb	0	; () banked
  3810  0019D8  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3814  0019DA  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  3815  0019DE  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3816  0019E2  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3817  0019E6  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3818  0019EA  0E05               	movlw	5
  3819  0019EC                     u2335:
  3820  0019EC  90D8               	bcf	status,0,c
  3821  0019EE  0100               	movlb	0	; () banked
  3822  0019F0  37B7               	rlcf	??_CANSetMask& (0+255),f,b
  3823  0019F2  37B8               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3824  0019F4  37B9               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3825  0019F6  37BA               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3826  0019F8  2EE8               	decfsz	wreg,f,c
  3827  0019FA  D7F8               	goto	u2335
  3828  0019FC  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3829  001A00  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3830  001A04  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3831  001A08  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3835  001A0C  C0BC  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3836  001A10                     l2714:
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;inc\CANlib.h: 663: }
  3840                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3841  001A10  0100               	movlb	0	; () banked
  3842  001A12  05BB               	decf	CANSetMask@numBuffer& (0+255),w,b
  3843  001A14  A4D8               	btfss	status,2,c
  3844  001A16  D087               	goto	l2746
  3845                           
  3846                           ; BSR set to: 0
  3847  001A18  0EF7               	movlw	247
  3848  001A1A  0100               	movlb	0	; () banked
  3849  001A1C  19B6               	xorwf	CANSetMask@type& (0+255),w,b
  3850  001A1E  A4D8               	btfss	status,2,c
  3851  001A20  D082               	goto	l2746
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;inc\CANlib.h: 666: {
  3855                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3856  001A22  0100               	movlb	0	; () banked
  3857  001A24  51B2               	movf	CANSetMask@mask& (0+255),w,b
  3858  001A26  0100               	movlb	0	; () banked
  3859  001A28  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3860  001A2A  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3861  001A2C  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3862  001A2E  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3866  001A30  C0BC  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3870  001A34  0E00               	movlw	0
  3871  001A36  0100               	movlb	0	; () banked
  3872  001A38  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  3873  001A3A  0100               	movlb	0	; () banked
  3874  001A3C  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3875  001A3E  0EFF               	movlw	255
  3876  001A40  0100               	movlb	0	; () banked
  3877  001A42  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3878  001A44  0100               	movlb	0	; () banked
  3879  001A46  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3880  001A48  0E00               	movlw	0
  3881  001A4A  0100               	movlb	0	; () banked
  3882  001A4C  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3883  001A4E  0100               	movlb	0	; () banked
  3884  001A50  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3885  001A52  0E00               	movlw	0
  3886  001A54  0100               	movlb	0	; () banked
  3887  001A56  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3888  001A58  0100               	movlb	0	; () banked
  3889  001A5A  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3893  001A5C  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  3894  001A60  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3895  001A64  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3896  001A68  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3897  001A6C  C0B8  F0B7         	movff	??_CANSetMask+1,??_CANSetMask
  3898  001A70  C0B9  F0B8         	movff	??_CANSetMask+2,??_CANSetMask+1
  3899  001A74  C0BA  F0B9         	movff	??_CANSetMask+3,??_CANSetMask+2
  3900  001A78  0100               	movlb	0	; () banked
  3901  001A7A  6BBA               	clrf	(??_CANSetMask+3)& (0+255),b
  3902  001A7C  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3903  001A80  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3904  001A84  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3905  001A88  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3909  001A8C  C0BC  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3913  001A90  0100               	movlb	0	; () banked
  3914  001A92  A1B4               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3915  001A94  D003               	goto	l442
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3919  001A96  010F               	movlb	15	; () banked
  3920  001A98  8119               	bsf	25,0,b	;volatile
  3921  001A9A  D002               	goto	l443
  3922  001A9C                     l442:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;inc\CANlib.h: 676: else
  3926                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3927  001A9C  010F               	movlb	15	; () banked
  3928  001A9E  9119               	bcf	25,0,b	;volatile
  3929  001AA0                     l443:
  3930                           
  3931                           ; BSR set to: 15
  3932                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3933  001AA0  0100               	movlb	0	; () banked
  3934  001AA2  A3B4               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3935  001AA4  D003               	goto	l444
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3939  001AA6  010F               	movlb	15	; () banked
  3940  001AA8  8319               	bsf	25,1,b	;volatile
  3941  001AAA  D002               	goto	l445
  3942  001AAC                     l444:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;inc\CANlib.h: 681: else
  3946                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3947  001AAC  010F               	movlb	15	; () banked
  3948  001AAE  9319               	bcf	25,1,b	;volatile
  3949  001AB0                     l445:
  3950                           
  3951                           ; BSR set to: 15
  3952                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3953  001AB0  0100               	movlb	0	; () banked
  3954  001AB2  A5B4               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3955  001AB4  D003               	goto	l446
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3959  001AB6  010F               	movlb	15	; () banked
  3960  001AB8  8B19               	bsf	25,5,b	;volatile
  3961  001ABA  D002               	goto	l447
  3962  001ABC                     l446:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;inc\CANlib.h: 686: else
  3966                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3967  001ABC  010F               	movlb	15	; () banked
  3968  001ABE  9B19               	bcf	25,5,b	;volatile
  3969  001AC0                     l447:
  3970                           
  3971                           ; BSR set to: 15
  3972                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3973  001AC0  0100               	movlb	0	; () banked
  3974  001AC2  A7B4               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3975  001AC4  D003               	goto	l448
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3979  001AC6  010F               	movlb	15	; () banked
  3980  001AC8  8D19               	bsf	25,6,b	;volatile
  3981  001ACA  D002               	goto	l449
  3982  001ACC                     l448:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 691: else
  3986                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3987  001ACC  010F               	movlb	15	; () banked
  3988  001ACE  9D19               	bcf	25,6,b	;volatile
  3989  001AD0                     l449:
  3990                           
  3991                           ; BSR set to: 15
  3992                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3993  001AD0  0100               	movlb	0	; () banked
  3994  001AD2  A9B4               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3995  001AD4  D003               	goto	l450
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3999  001AD6  010F               	movlb	15	; () banked
  4000  001AD8  8F19               	bsf	25,7,b	;volatile
  4001  001ADA  D002               	goto	l2740
  4002  001ADC                     l450:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;inc\CANlib.h: 696: else
  4006                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4007  001ADC  010F               	movlb	15	; () banked
  4008  001ADE  9F19               	bcf	25,7,b	;volatile
  4009  001AE0                     l2740:
  4010                           
  4011                           ; BSR set to: 15
  4012                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4013  001AE0  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  4014  001AE4  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4015  001AE8  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4016  001AEC  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4017  001AF0  0E16               	movlw	22
  4018  001AF2  D006               	goto	u2410
  4019  001AF4                     u2415:
  4020  001AF4  0100               	movlb	0	; () banked
  4021  001AF6  90D8               	bcf	status,0,c
  4022  001AF8  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4023  001AFA  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4024  001AFC  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4025  001AFE  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  4026  001B00                     u2410:
  4027  001B00  2EE8               	decfsz	wreg,f,c
  4028  001B02  D7F8               	goto	u2415
  4029  001B04  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  4030  001B08  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4031  001B0C  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4032  001B10  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4036  001B14  0100               	movlb	0	; () banked
  4037  001B16  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  4038  001B18  0100               	movlb	0	; () banked
  4039  001B1A  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4040  001B1C  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4041  001B1E  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4042  001B20  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4046  001B22  C0BC  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4047  001B26                     l2746:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 702: }
  4051                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4052  001B26  0E02               	movlw	2
  4053  001B28  0100               	movlb	0	; () banked
  4054  001B2A  19BB               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4055  001B2C  A4D8               	btfss	status,2,c
  4056  001B2E  0012               	return	
  4057                           
  4058                           ; BSR set to: 0
  4059  001B30  0EF7               	movlw	247
  4060  001B32  0100               	movlb	0	; () banked
  4061  001B34  19B6               	xorwf	CANSetMask@type& (0+255),w,b
  4062  001B36  A4D8               	btfss	status,2,c
  4063  001B38  0012               	return	
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 705: {
  4067                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4068  001B3A  0100               	movlb	0	; () banked
  4069  001B3C  51B2               	movf	CANSetMask@mask& (0+255),w,b
  4070  001B3E  0100               	movlb	0	; () banked
  4071  001B40  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4072  001B42  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4073  001B44  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4074  001B46  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4078  001B48  C0BC  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4082  001B4C  0E00               	movlw	0
  4083  001B4E  0100               	movlb	0	; () banked
  4084  001B50  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  4085  001B52  0100               	movlb	0	; () banked
  4086  001B54  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4087  001B56  0EFF               	movlw	255
  4088  001B58  0100               	movlb	0	; () banked
  4089  001B5A  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4090  001B5C  0100               	movlb	0	; () banked
  4091  001B5E  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4092  001B60  0E00               	movlw	0
  4093  001B62  0100               	movlb	0	; () banked
  4094  001B64  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4095  001B66  0100               	movlb	0	; () banked
  4096  001B68  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4097  001B6A  0E00               	movlw	0
  4098  001B6C  0100               	movlb	0	; () banked
  4099  001B6E  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4100  001B70  0100               	movlb	0	; () banked
  4101  001B72  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4105  001B74  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  4106  001B78  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4107  001B7C  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4108  001B80  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4109  001B84  C0B8  F0B7         	movff	??_CANSetMask+1,??_CANSetMask
  4110  001B88  C0B9  F0B8         	movff	??_CANSetMask+2,??_CANSetMask+1
  4111  001B8C  C0BA  F0B9         	movff	??_CANSetMask+3,??_CANSetMask+2
  4112  001B90  0100               	movlb	0	; () banked
  4113  001B92  6BBA               	clrf	(??_CANSetMask+3)& (0+255),b
  4114  001B94  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  4115  001B98  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4116  001B9C  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4117  001BA0  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4121  001BA4  C0BC  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4125  001BA8  0100               	movlb	0	; () banked
  4126  001BAA  A1B4               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4127  001BAC  D003               	goto	l453
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4131  001BAE  010F               	movlb	15	; () banked
  4132  001BB0  811D               	bsf	29,0,b	;volatile
  4133  001BB2  D002               	goto	l454
  4134  001BB4                     l453:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;inc\CANlib.h: 715: else
  4138                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4139  001BB4  010F               	movlb	15	; () banked
  4140  001BB6  911D               	bcf	29,0,b	;volatile
  4141  001BB8                     l454:
  4142                           
  4143                           ; BSR set to: 15
  4144                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4145  001BB8  0100               	movlb	0	; () banked
  4146  001BBA  A3B4               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4147  001BBC  D003               	goto	l455
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4151  001BBE  010F               	movlb	15	; () banked
  4152  001BC0  831D               	bsf	29,1,b	;volatile
  4153  001BC2  D002               	goto	l456
  4154  001BC4                     l455:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;inc\CANlib.h: 720: else
  4158                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4159  001BC4  010F               	movlb	15	; () banked
  4160  001BC6  931D               	bcf	29,1,b	;volatile
  4161  001BC8                     l456:
  4162                           
  4163                           ; BSR set to: 15
  4164                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4165  001BC8  0100               	movlb	0	; () banked
  4166  001BCA  A5B4               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4167  001BCC  D003               	goto	l457
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4171  001BCE  010F               	movlb	15	; () banked
  4172  001BD0  8B1D               	bsf	29,5,b	;volatile
  4173  001BD2  D002               	goto	l458
  4174  001BD4                     l457:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 725: else
  4178                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4179  001BD4  010F               	movlb	15	; () banked
  4180  001BD6  9B1D               	bcf	29,5,b	;volatile
  4181  001BD8                     l458:
  4182                           
  4183                           ; BSR set to: 15
  4184                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4185  001BD8  0100               	movlb	0	; () banked
  4186  001BDA  A7B4               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4187  001BDC  D003               	goto	l459
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4191  001BDE  010F               	movlb	15	; () banked
  4192  001BE0  8D1D               	bsf	29,6,b	;volatile
  4193  001BE2  D002               	goto	l460
  4194  001BE4                     l459:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 730: else
  4198                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4199  001BE4  010F               	movlb	15	; () banked
  4200  001BE6  9D1D               	bcf	29,6,b	;volatile
  4201  001BE8                     l460:
  4202                           
  4203                           ; BSR set to: 15
  4204                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4205  001BE8  0100               	movlb	0	; () banked
  4206  001BEA  A9B4               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4207  001BEC  D003               	goto	l461
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4211  001BEE  010F               	movlb	15	; () banked
  4212  001BF0  8F1D               	bsf	29,7,b	;volatile
  4213  001BF2  D002               	goto	l2772
  4214  001BF4                     l461:
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 735: else
  4218                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4219  001BF4  010F               	movlb	15	; () banked
  4220  001BF6  9F1D               	bcf	29,7,b	;volatile
  4221  001BF8                     l2772:
  4222                           
  4223                           ; BSR set to: 15
  4224                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4225  001BF8  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  4226  001BFC  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4227  001C00  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4228  001C04  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4229  001C08  0E16               	movlw	22
  4230  001C0A  D006               	goto	u2490
  4231  001C0C                     u2495:
  4232  001C0C  0100               	movlb	0	; () banked
  4233  001C0E  90D8               	bcf	status,0,c
  4234  001C10  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4235  001C12  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4236  001C14  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4237  001C16  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  4238  001C18                     u2490:
  4239  001C18  2EE8               	decfsz	wreg,f,c
  4240  001C1A  D7F8               	goto	u2495
  4241  001C1C  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  4242  001C20  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4243  001C24  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4244  001C28  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4248  001C2C  0100               	movlb	0	; () banked
  4249  001C2E  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  4250  001C30  0100               	movlb	0	; () banked
  4251  001C32  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4252  001C34  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4253  001C36  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4254  001C38  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4258  001C3A  C0BC  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4259  001C3E  0012               	return	
  4260  001C40                     __end_of_CANSetMask:
  4261                           	opt stack 0
  4262                           tblptru	equ	0xFF8
  4263                           tblptrh	equ	0xFF7
  4264                           tblptrl	equ	0xFF6
  4265                           tablat	equ	0xFF5
  4266                           prodh	equ	0xFF4
  4267                           prodl	equ	0xFF3
  4268                           intcon	equ	0xFF2
  4269                           intcon2	equ	0xFF1
  4270                           intcon3	equ	0xFF0
  4271                           postinc0	equ	0xFEE
  4272                           wreg	equ	0xFE8
  4273                           postdec1	equ	0xFE5
  4274                           fsr1l	equ	0xFE1
  4275                           indf2	equ	0xFDF
  4276                           fsr2h	equ	0xFDA
  4277                           fsr2l	equ	0xFD9
  4278                           status	equ	0xFD8
  4279                           
  4280 ;; *************** function _CANSetFilter *****************
  4281 ;; Defined at:
  4282 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  numBuffer       1    wreg     enum E16881
  4285 ;;  filter          4   22[BANK0 ] unsigned long 
  4286 ;;  type            1   26[BANK0 ] enum E16844
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  numBuffer       1   31[BANK0 ] enum E16881
  4289 ;;  tamp            4   32[BANK0 ] unsigned long 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;		None               void
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4299 ;;      Params:         0       5       0       0
  4300 ;;      Locals:         0       5       0       0
  4301 ;;      Temps:          0       4       0       0
  4302 ;;      Totals:         0      14       0       0
  4303 ;;Total ram usage:       14 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    4
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_CANInitialize
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text9
  4314  000104                     __ptext9:
  4315                           	opt stack 0
  4316  000104                     _CANSetFilter:
  4317                           	opt stack 24
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;incstack = 0
  4321                           ;CANSetFilter@numBuffer stored from wreg
  4322  000104  0100               	movlb	0	; () banked
  4323  000106  6FBB               	movwf	CANSetFilter@numBuffer& (0+255),b
  4324                           
  4325                           ;inc\CANlib.h: 750: unsigned long tamp;
  4326                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4327  000108  0100               	movlb	0	; () banked
  4328  00010A  51BB               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4329  00010C  0100               	movlb	0	; () banked
  4330  00010E  A4D8               	btfss	status,2,c
  4331  000110  D058               	goto	l2796
  4332                           
  4333                           ; BSR set to: 0
  4334  000112  0100               	movlb	0	; () banked
  4335  000114  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4336  000116  A4D8               	btfss	status,2,c
  4337  000118  D054               	goto	l2796
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;inc\CANlib.h: 753: {
  4341                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4342  00011A  010F               	movlb	15	; () banked
  4343  00011C  9701               	bcf	1,3,b	;volatile
  4344                           
  4345                           ; BSR set to: 15
  4346                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4347  00011E  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4348  000122  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4349  000126  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4350  00012A  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4351  00012E  0E04               	movlw	4
  4352  000130  D006               	goto	u2520
  4353  000132                     u2525:
  4354  000132  0100               	movlb	0	; () banked
  4355  000134  90D8               	bcf	status,0,c
  4356  000136  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4357  000138  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4358  00013A  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4359  00013C  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4360  00013E                     u2520:
  4361  00013E  2EE8               	decfsz	wreg,f,c
  4362  000140  D7F8               	goto	u2525
  4363  000142  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4364  000146  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4365  00014A  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4366  00014E  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4370  000152  0100               	movlb	0	; () banked
  4371  000154  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4372  000156  0100               	movlb	0	; () banked
  4373  000158  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4374  00015A  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4375  00015C  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4376  00015E  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4380  000160  C0BC  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4384  000164  0E07               	movlw	7
  4385  000166  0100               	movlb	0	; () banked
  4386  000168  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4387  00016A  0100               	movlb	0	; () banked
  4388  00016C  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4389  00016E  0E00               	movlw	0
  4390  000170  0100               	movlb	0	; () banked
  4391  000172  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4392  000174  0100               	movlb	0	; () banked
  4393  000176  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4394  000178  0E00               	movlw	0
  4395  00017A  0100               	movlb	0	; () banked
  4396  00017C  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4397  00017E  0100               	movlb	0	; () banked
  4398  000180  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4399  000182  0E00               	movlw	0
  4400  000184  0100               	movlb	0	; () banked
  4401  000186  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4402  000188  0100               	movlb	0	; () banked
  4403  00018A  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4407  00018C  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4408  000190  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4409  000194  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4410  000198  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4411  00019C  0E05               	movlw	5
  4412  00019E                     u2535:
  4413  00019E  90D8               	bcf	status,0,c
  4414  0001A0  0100               	movlb	0	; () banked
  4415  0001A2  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4416  0001A4  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4417  0001A6  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4418  0001A8  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4419  0001AA  2EE8               	decfsz	wreg,f,c
  4420  0001AC  D7F8               	goto	u2535
  4421  0001AE  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4422  0001B2  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4423  0001B6  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4424  0001BA  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4428  0001BE  C0BC  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4429  0001C2                     l2796:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 763: }
  4433                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4434  0001C2  0100               	movlb	0	; () banked
  4435  0001C4  05BB               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4436  0001C6  A4D8               	btfss	status,2,c
  4437  0001C8  D058               	goto	l2814
  4438                           
  4439                           ; BSR set to: 0
  4440  0001CA  0100               	movlb	0	; () banked
  4441  0001CC  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4442  0001CE  A4D8               	btfss	status,2,c
  4443  0001D0  D054               	goto	l2814
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 766: {
  4447                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4448  0001D2  010F               	movlb	15	; () banked
  4449  0001D4  9705               	bcf	5,3,b	;volatile
  4450                           
  4451                           ; BSR set to: 15
  4452                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4453  0001D6  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4454  0001DA  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4455  0001DE  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4456  0001E2  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4457  0001E6  0E04               	movlw	4
  4458  0001E8  D006               	goto	u2560
  4459  0001EA                     u2565:
  4460  0001EA  0100               	movlb	0	; () banked
  4461  0001EC  90D8               	bcf	status,0,c
  4462  0001EE  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4463  0001F0  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4464  0001F2  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4465  0001F4  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4466  0001F6                     u2560:
  4467  0001F6  2EE8               	decfsz	wreg,f,c
  4468  0001F8  D7F8               	goto	u2565
  4469  0001FA  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4470  0001FE  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4471  000202  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4472  000206  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4476  00020A  0100               	movlb	0	; () banked
  4477  00020C  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4478  00020E  0100               	movlb	0	; () banked
  4479  000210  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4480  000212  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4481  000214  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4482  000216  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4486  000218  C0BC  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4490  00021C  0E07               	movlw	7
  4491  00021E  0100               	movlb	0	; () banked
  4492  000220  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4493  000222  0100               	movlb	0	; () banked
  4494  000224  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4495  000226  0E00               	movlw	0
  4496  000228  0100               	movlb	0	; () banked
  4497  00022A  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4498  00022C  0100               	movlb	0	; () banked
  4499  00022E  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4500  000230  0E00               	movlw	0
  4501  000232  0100               	movlb	0	; () banked
  4502  000234  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4503  000236  0100               	movlb	0	; () banked
  4504  000238  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4505  00023A  0E00               	movlw	0
  4506  00023C  0100               	movlb	0	; () banked
  4507  00023E  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4508  000240  0100               	movlb	0	; () banked
  4509  000242  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4513  000244  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4514  000248  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4515  00024C  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4516  000250  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4517  000254  0E05               	movlw	5
  4518  000256                     u2575:
  4519  000256  90D8               	bcf	status,0,c
  4520  000258  0100               	movlb	0	; () banked
  4521  00025A  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4522  00025C  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4523  00025E  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4524  000260  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4525  000262  2EE8               	decfsz	wreg,f,c
  4526  000264  D7F8               	goto	u2575
  4527  000266  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4528  00026A  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4529  00026E  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4530  000272  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4534  000276  C0BC  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4535  00027A                     l2814:
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;inc\CANlib.h: 776: }
  4539                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4540  00027A  0E02               	movlw	2
  4541  00027C  0100               	movlb	0	; () banked
  4542  00027E  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4543  000280  A4D8               	btfss	status,2,c
  4544  000282  D058               	goto	l2832
  4545                           
  4546                           ; BSR set to: 0
  4547  000284  0100               	movlb	0	; () banked
  4548  000286  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4549  000288  A4D8               	btfss	status,2,c
  4550  00028A  D054               	goto	l2832
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 779: {
  4554                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4555  00028C  010F               	movlb	15	; () banked
  4556  00028E  9709               	bcf	9,3,b	;volatile
  4557                           
  4558                           ; BSR set to: 15
  4559                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4560  000290  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4561  000294  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4562  000298  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4563  00029C  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4564  0002A0  0E04               	movlw	4
  4565  0002A2  D006               	goto	u2600
  4566  0002A4                     u2605:
  4567  0002A4  0100               	movlb	0	; () banked
  4568  0002A6  90D8               	bcf	status,0,c
  4569  0002A8  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4570  0002AA  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4571  0002AC  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4572  0002AE  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4573  0002B0                     u2600:
  4574  0002B0  2EE8               	decfsz	wreg,f,c
  4575  0002B2  D7F8               	goto	u2605
  4576  0002B4  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4577  0002B8  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4578  0002BC  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4579  0002C0  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4583  0002C4  0100               	movlb	0	; () banked
  4584  0002C6  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4585  0002C8  0100               	movlb	0	; () banked
  4586  0002CA  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4587  0002CC  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4588  0002CE  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4589  0002D0  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4593  0002D2  C0BC  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4597  0002D6  0E07               	movlw	7
  4598  0002D8  0100               	movlb	0	; () banked
  4599  0002DA  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4600  0002DC  0100               	movlb	0	; () banked
  4601  0002DE  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4602  0002E0  0E00               	movlw	0
  4603  0002E2  0100               	movlb	0	; () banked
  4604  0002E4  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4605  0002E6  0100               	movlb	0	; () banked
  4606  0002E8  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4607  0002EA  0E00               	movlw	0
  4608  0002EC  0100               	movlb	0	; () banked
  4609  0002EE  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4610  0002F0  0100               	movlb	0	; () banked
  4611  0002F2  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4612  0002F4  0E00               	movlw	0
  4613  0002F6  0100               	movlb	0	; () banked
  4614  0002F8  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4615  0002FA  0100               	movlb	0	; () banked
  4616  0002FC  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4620  0002FE  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4621  000302  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4622  000306  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4623  00030A  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4624  00030E  0E05               	movlw	5
  4625  000310                     u2615:
  4626  000310  90D8               	bcf	status,0,c
  4627  000312  0100               	movlb	0	; () banked
  4628  000314  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4629  000316  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4630  000318  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4631  00031A  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4632  00031C  2EE8               	decfsz	wreg,f,c
  4633  00031E  D7F8               	goto	u2615
  4634  000320  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4635  000324  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4636  000328  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4637  00032C  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4641  000330  C0BC  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4642  000334                     l2832:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;inc\CANlib.h: 789: }
  4646                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4647  000334  0E03               	movlw	3
  4648  000336  0100               	movlb	0	; () banked
  4649  000338  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4650  00033A  A4D8               	btfss	status,2,c
  4651  00033C  D058               	goto	l2850
  4652                           
  4653                           ; BSR set to: 0
  4654  00033E  0100               	movlb	0	; () banked
  4655  000340  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4656  000342  A4D8               	btfss	status,2,c
  4657  000344  D054               	goto	l2850
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;inc\CANlib.h: 792: {
  4661                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4662  000346  010F               	movlb	15	; () banked
  4663  000348  970D               	bcf	13,3,b	;volatile
  4664                           
  4665                           ; BSR set to: 15
  4666                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4667  00034A  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4668  00034E  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4669  000352  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4670  000356  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4671  00035A  0E04               	movlw	4
  4672  00035C  D006               	goto	u2640
  4673  00035E                     u2645:
  4674  00035E  0100               	movlb	0	; () banked
  4675  000360  90D8               	bcf	status,0,c
  4676  000362  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4677  000364  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4678  000366  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4679  000368  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4680  00036A                     u2640:
  4681  00036A  2EE8               	decfsz	wreg,f,c
  4682  00036C  D7F8               	goto	u2645
  4683  00036E  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4684  000372  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4685  000376  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4686  00037A  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4690  00037E  0100               	movlb	0	; () banked
  4691  000380  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4692  000382  0100               	movlb	0	; () banked
  4693  000384  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4694  000386  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4695  000388  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4696  00038A  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4700  00038C  C0BC  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4704  000390  0E07               	movlw	7
  4705  000392  0100               	movlb	0	; () banked
  4706  000394  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4707  000396  0100               	movlb	0	; () banked
  4708  000398  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4709  00039A  0E00               	movlw	0
  4710  00039C  0100               	movlb	0	; () banked
  4711  00039E  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4712  0003A0  0100               	movlb	0	; () banked
  4713  0003A2  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4714  0003A4  0E00               	movlw	0
  4715  0003A6  0100               	movlb	0	; () banked
  4716  0003A8  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4717  0003AA  0100               	movlb	0	; () banked
  4718  0003AC  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4719  0003AE  0E00               	movlw	0
  4720  0003B0  0100               	movlb	0	; () banked
  4721  0003B2  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4722  0003B4  0100               	movlb	0	; () banked
  4723  0003B6  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4727  0003B8  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4728  0003BC  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4729  0003C0  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4730  0003C4  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4731  0003C8  0E05               	movlw	5
  4732  0003CA                     u2655:
  4733  0003CA  90D8               	bcf	status,0,c
  4734  0003CC  0100               	movlb	0	; () banked
  4735  0003CE  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4736  0003D0  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4737  0003D2  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4738  0003D4  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4739  0003D6  2EE8               	decfsz	wreg,f,c
  4740  0003D8  D7F8               	goto	u2655
  4741  0003DA  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4742  0003DE  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4743  0003E2  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4744  0003E6  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4748  0003EA  C0BC  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4749  0003EE                     l2850:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;inc\CANlib.h: 802: }
  4753                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4754  0003EE  0E04               	movlw	4
  4755  0003F0  0100               	movlb	0	; () banked
  4756  0003F2  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4757  0003F4  A4D8               	btfss	status,2,c
  4758  0003F6  D058               	goto	l2868
  4759                           
  4760                           ; BSR set to: 0
  4761  0003F8  0100               	movlb	0	; () banked
  4762  0003FA  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4763  0003FC  A4D8               	btfss	status,2,c
  4764  0003FE  D054               	goto	l2868
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;inc\CANlib.h: 805: {
  4768                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4769  000400  010F               	movlb	15	; () banked
  4770  000402  9711               	bcf	17,3,b	;volatile
  4771                           
  4772                           ; BSR set to: 15
  4773                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4774  000404  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4775  000408  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4776  00040C  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4777  000410  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4778  000414  0E04               	movlw	4
  4779  000416  D006               	goto	u2680
  4780  000418                     u2685:
  4781  000418  0100               	movlb	0	; () banked
  4782  00041A  90D8               	bcf	status,0,c
  4783  00041C  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4784  00041E  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4785  000420  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4786  000422  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4787  000424                     u2680:
  4788  000424  2EE8               	decfsz	wreg,f,c
  4789  000426  D7F8               	goto	u2685
  4790  000428  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4791  00042C  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4792  000430  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4793  000434  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4797  000438  0100               	movlb	0	; () banked
  4798  00043A  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4799  00043C  0100               	movlb	0	; () banked
  4800  00043E  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4801  000440  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4802  000442  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4803  000444  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4807  000446  C0BC  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4811  00044A  0E07               	movlw	7
  4812  00044C  0100               	movlb	0	; () banked
  4813  00044E  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4814  000450  0100               	movlb	0	; () banked
  4815  000452  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4816  000454  0E00               	movlw	0
  4817  000456  0100               	movlb	0	; () banked
  4818  000458  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4819  00045A  0100               	movlb	0	; () banked
  4820  00045C  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4821  00045E  0E00               	movlw	0
  4822  000460  0100               	movlb	0	; () banked
  4823  000462  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4824  000464  0100               	movlb	0	; () banked
  4825  000466  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4826  000468  0E00               	movlw	0
  4827  00046A  0100               	movlb	0	; () banked
  4828  00046C  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4829  00046E  0100               	movlb	0	; () banked
  4830  000470  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4834  000472  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4835  000476  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4836  00047A  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4837  00047E  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4838  000482  0E05               	movlw	5
  4839  000484                     u2695:
  4840  000484  90D8               	bcf	status,0,c
  4841  000486  0100               	movlb	0	; () banked
  4842  000488  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4843  00048A  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4844  00048C  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4845  00048E  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4846  000490  2EE8               	decfsz	wreg,f,c
  4847  000492  D7F8               	goto	u2695
  4848  000494  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4849  000498  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4850  00049C  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4851  0004A0  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4855  0004A4  C0BC  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4856  0004A8                     l2868:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;inc\CANlib.h: 815: }
  4860                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4861  0004A8  0E05               	movlw	5
  4862  0004AA  0100               	movlb	0	; () banked
  4863  0004AC  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4864  0004AE  A4D8               	btfss	status,2,c
  4865  0004B0  D058               	goto	l2886
  4866                           
  4867                           ; BSR set to: 0
  4868  0004B2  0100               	movlb	0	; () banked
  4869  0004B4  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4870  0004B6  A4D8               	btfss	status,2,c
  4871  0004B8  D054               	goto	l2886
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;inc\CANlib.h: 818: {
  4875                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4876  0004BA  010F               	movlb	15	; () banked
  4877  0004BC  9715               	bcf	21,3,b	;volatile
  4878                           
  4879                           ; BSR set to: 15
  4880                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4881  0004BE  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4882  0004C2  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4883  0004C6  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4884  0004CA  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4885  0004CE  0E04               	movlw	4
  4886  0004D0  D006               	goto	u2720
  4887  0004D2                     u2725:
  4888  0004D2  0100               	movlb	0	; () banked
  4889  0004D4  90D8               	bcf	status,0,c
  4890  0004D6  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4891  0004D8  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4892  0004DA  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4893  0004DC  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4894  0004DE                     u2720:
  4895  0004DE  2EE8               	decfsz	wreg,f,c
  4896  0004E0  D7F8               	goto	u2725
  4897  0004E2  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4898  0004E6  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4899  0004EA  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4900  0004EE  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4904  0004F2  0100               	movlb	0	; () banked
  4905  0004F4  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4906  0004F6  0100               	movlb	0	; () banked
  4907  0004F8  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4908  0004FA  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4909  0004FC  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4910  0004FE  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4914  000500  C0BC  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4918  000504  0E07               	movlw	7
  4919  000506  0100               	movlb	0	; () banked
  4920  000508  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4921  00050A  0100               	movlb	0	; () banked
  4922  00050C  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4923  00050E  0E00               	movlw	0
  4924  000510  0100               	movlb	0	; () banked
  4925  000512  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4926  000514  0100               	movlb	0	; () banked
  4927  000516  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4928  000518  0E00               	movlw	0
  4929  00051A  0100               	movlb	0	; () banked
  4930  00051C  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4931  00051E  0100               	movlb	0	; () banked
  4932  000520  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4933  000522  0E00               	movlw	0
  4934  000524  0100               	movlb	0	; () banked
  4935  000526  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4936  000528  0100               	movlb	0	; () banked
  4937  00052A  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4941  00052C  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4942  000530  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4943  000534  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4944  000538  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4945  00053C  0E05               	movlw	5
  4946  00053E                     u2735:
  4947  00053E  90D8               	bcf	status,0,c
  4948  000540  0100               	movlb	0	; () banked
  4949  000542  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4950  000544  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4951  000546  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4952  000548  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4953  00054A  2EE8               	decfsz	wreg,f,c
  4954  00054C  D7F8               	goto	u2735
  4955  00054E  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4956  000552  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4957  000556  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4958  00055A  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4962  00055E  C0BC  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4963  000562                     l2886:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;inc\CANlib.h: 828: }
  4967                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4968  000562  0100               	movlb	0	; () banked
  4969  000564  51BB               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4970  000566  0100               	movlb	0	; () banked
  4971  000568  A4D8               	btfss	status,2,c
  4972  00056A  D089               	goto	l2920
  4973                           
  4974                           ; BSR set to: 0
  4975  00056C  0EF7               	movlw	247
  4976  00056E  0100               	movlb	0	; () banked
  4977  000570  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  4978  000572  A4D8               	btfss	status,2,c
  4979  000574  D084               	goto	l2920
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 832: {
  4983                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4984  000576  010F               	movlb	15	; () banked
  4985  000578  8701               	bsf	1,3,b	;volatile
  4986                           
  4987                           ; BSR set to: 15
  4988                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4989  00057A  0100               	movlb	0	; () banked
  4990  00057C  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  4991  00057E  0100               	movlb	0	; () banked
  4992  000580  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4993  000582  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4994  000584  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4995  000586  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4999  000588  C0BC  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5003  00058C  0E00               	movlw	0
  5004  00058E  0100               	movlb	0	; () banked
  5005  000590  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5006  000592  0100               	movlb	0	; () banked
  5007  000594  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5008  000596  0EFF               	movlw	255
  5009  000598  0100               	movlb	0	; () banked
  5010  00059A  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5011  00059C  0100               	movlb	0	; () banked
  5012  00059E  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5013  0005A0  0E00               	movlw	0
  5014  0005A2  0100               	movlb	0	; () banked
  5015  0005A4  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5016  0005A6  0100               	movlb	0	; () banked
  5017  0005A8  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5018  0005AA  0E00               	movlw	0
  5019  0005AC  0100               	movlb	0	; () banked
  5020  0005AE  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5021  0005B0  0100               	movlb	0	; () banked
  5022  0005B2  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5026  0005B4  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5027  0005B8  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5028  0005BC  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5029  0005C0  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5030  0005C4  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5031  0005C8  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5032  0005CC  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5033  0005D0  0100               	movlb	0	; () banked
  5034  0005D2  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5035  0005D4  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5036  0005D8  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5037  0005DC  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5038  0005E0  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5042  0005E4  C0BC  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5046  0005E8  0100               	movlb	0	; () banked
  5047  0005EA  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5048  0005EC  D003               	goto	l473
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5052  0005EE  010F               	movlb	15	; () banked
  5053  0005F0  8101               	bsf	1,0,b	;volatile
  5054  0005F2  D002               	goto	l474
  5055  0005F4                     l473:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;inc\CANlib.h: 844: else
  5059                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5060  0005F4  010F               	movlb	15	; () banked
  5061  0005F6  9101               	bcf	1,0,b	;volatile
  5062  0005F8                     l474:
  5063                           
  5064                           ; BSR set to: 15
  5065                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5066  0005F8  0100               	movlb	0	; () banked
  5067  0005FA  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5068  0005FC  D003               	goto	l475
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5072  0005FE  010F               	movlb	15	; () banked
  5073  000600  8301               	bsf	1,1,b	;volatile
  5074  000602  D002               	goto	l476
  5075  000604                     l475:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;inc\CANlib.h: 849: else
  5079                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5080  000604  010F               	movlb	15	; () banked
  5081  000606  9301               	bcf	1,1,b	;volatile
  5082  000608                     l476:
  5083                           
  5084                           ; BSR set to: 15
  5085                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5086  000608  0100               	movlb	0	; () banked
  5087  00060A  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5088  00060C  D003               	goto	l477
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5092  00060E  010F               	movlb	15	; () banked
  5093  000610  8B01               	bsf	1,5,b	;volatile
  5094  000612  D002               	goto	l478
  5095  000614                     l477:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;inc\CANlib.h: 854: else
  5099                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5100  000614  010F               	movlb	15	; () banked
  5101  000616  9B01               	bcf	1,5,b	;volatile
  5102  000618                     l478:
  5103                           
  5104                           ; BSR set to: 15
  5105                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5106  000618  0100               	movlb	0	; () banked
  5107  00061A  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5108  00061C  D003               	goto	l479
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5112  00061E  010F               	movlb	15	; () banked
  5113  000620  8D01               	bsf	1,6,b	;volatile
  5114  000622  D002               	goto	l480
  5115  000624                     l479:
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;inc\CANlib.h: 859: else
  5119                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5120  000624  010F               	movlb	15	; () banked
  5121  000626  9D01               	bcf	1,6,b	;volatile
  5122  000628                     l480:
  5123                           
  5124                           ; BSR set to: 15
  5125                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5126  000628  0100               	movlb	0	; () banked
  5127  00062A  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5128  00062C  D003               	goto	l481
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5132  00062E  010F               	movlb	15	; () banked
  5133  000630  8F01               	bsf	1,7,b	;volatile
  5134  000632  D002               	goto	l2914
  5135  000634                     l481:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;inc\CANlib.h: 864: else
  5139                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5140  000634  010F               	movlb	15	; () banked
  5141  000636  9F01               	bcf	1,7,b	;volatile
  5142  000638                     l2914:
  5143                           
  5144                           ; BSR set to: 15
  5145                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5146  000638  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5147  00063C  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5148  000640  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5149  000644  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5150  000648  0E16               	movlw	22
  5151  00064A  D006               	goto	u2810
  5152  00064C                     u2815:
  5153  00064C  0100               	movlb	0	; () banked
  5154  00064E  90D8               	bcf	status,0,c
  5155  000650  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5156  000652  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5157  000654  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5158  000656  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5159  000658                     u2810:
  5160  000658  2EE8               	decfsz	wreg,f,c
  5161  00065A  D7F8               	goto	u2815
  5162  00065C  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5163  000660  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5164  000664  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5165  000668  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5169  00066C  0100               	movlb	0	; () banked
  5170  00066E  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5171  000670  0100               	movlb	0	; () banked
  5172  000672  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5173  000674  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5174  000676  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5175  000678  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5179  00067A  C0BC  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5180  00067E                     l2920:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;inc\CANlib.h: 870: }
  5184                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5185  00067E  0100               	movlb	0	; () banked
  5186  000680  05BB               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5187  000682  A4D8               	btfss	status,2,c
  5188  000684  D089               	goto	l2954
  5189                           
  5190                           ; BSR set to: 0
  5191  000686  0EF7               	movlw	247
  5192  000688  0100               	movlb	0	; () banked
  5193  00068A  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5194  00068C  A4D8               	btfss	status,2,c
  5195  00068E  D084               	goto	l2954
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;inc\CANlib.h: 873: {
  5199                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5200  000690  010F               	movlb	15	; () banked
  5201  000692  8705               	bsf	5,3,b	;volatile
  5202                           
  5203                           ; BSR set to: 15
  5204                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5205  000694  0100               	movlb	0	; () banked
  5206  000696  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5207  000698  0100               	movlb	0	; () banked
  5208  00069A  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5209  00069C  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5210  00069E  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5211  0006A0  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5215  0006A2  C0BC  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5219  0006A6  0E00               	movlw	0
  5220  0006A8  0100               	movlb	0	; () banked
  5221  0006AA  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5222  0006AC  0100               	movlb	0	; () banked
  5223  0006AE  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5224  0006B0  0EFF               	movlw	255
  5225  0006B2  0100               	movlb	0	; () banked
  5226  0006B4  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5227  0006B6  0100               	movlb	0	; () banked
  5228  0006B8  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5229  0006BA  0E00               	movlw	0
  5230  0006BC  0100               	movlb	0	; () banked
  5231  0006BE  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5232  0006C0  0100               	movlb	0	; () banked
  5233  0006C2  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5234  0006C4  0E00               	movlw	0
  5235  0006C6  0100               	movlb	0	; () banked
  5236  0006C8  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5237  0006CA  0100               	movlb	0	; () banked
  5238  0006CC  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5242  0006CE  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5243  0006D2  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5244  0006D6  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5245  0006DA  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5246  0006DE  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5247  0006E2  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5248  0006E6  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5249  0006EA  0100               	movlb	0	; () banked
  5250  0006EC  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5251  0006EE  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5252  0006F2  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5253  0006F6  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5254  0006FA  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5258  0006FE  C0BC  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5262  000702  0100               	movlb	0	; () banked
  5263  000704  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5264  000706  D003               	goto	l484
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5268  000708  010F               	movlb	15	; () banked
  5269  00070A  8105               	bsf	5,0,b	;volatile
  5270  00070C  D002               	goto	l485
  5271  00070E                     l484:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;inc\CANlib.h: 885: else
  5275                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5276  00070E  010F               	movlb	15	; () banked
  5277  000710  9105               	bcf	5,0,b	;volatile
  5278  000712                     l485:
  5279                           
  5280                           ; BSR set to: 15
  5281                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5282  000712  0100               	movlb	0	; () banked
  5283  000714  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5284  000716  D003               	goto	l486
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5288  000718  010F               	movlb	15	; () banked
  5289  00071A  8305               	bsf	5,1,b	;volatile
  5290  00071C  D002               	goto	l487
  5291  00071E                     l486:
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;inc\CANlib.h: 890: else
  5295                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5296  00071E  010F               	movlb	15	; () banked
  5297  000720  9305               	bcf	5,1,b	;volatile
  5298  000722                     l487:
  5299                           
  5300                           ; BSR set to: 15
  5301                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5302  000722  0100               	movlb	0	; () banked
  5303  000724  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5304  000726  D003               	goto	l488
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5308  000728  010F               	movlb	15	; () banked
  5309  00072A  8B05               	bsf	5,5,b	;volatile
  5310  00072C  D002               	goto	l489
  5311  00072E                     l488:
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;inc\CANlib.h: 895: else
  5315                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5316  00072E  010F               	movlb	15	; () banked
  5317  000730  9B05               	bcf	5,5,b	;volatile
  5318  000732                     l489:
  5319                           
  5320                           ; BSR set to: 15
  5321                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5322  000732  0100               	movlb	0	; () banked
  5323  000734  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5324  000736  D003               	goto	l490
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5328  000738  010F               	movlb	15	; () banked
  5329  00073A  8D05               	bsf	5,6,b	;volatile
  5330  00073C  D002               	goto	l491
  5331  00073E                     l490:
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;inc\CANlib.h: 900: else
  5335                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5336  00073E  010F               	movlb	15	; () banked
  5337  000740  9D05               	bcf	5,6,b	;volatile
  5338  000742                     l491:
  5339                           
  5340                           ; BSR set to: 15
  5341                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5342  000742  0100               	movlb	0	; () banked
  5343  000744  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5344  000746  D003               	goto	l492
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5348  000748  010F               	movlb	15	; () banked
  5349  00074A  8F05               	bsf	5,7,b	;volatile
  5350  00074C  D002               	goto	l2948
  5351  00074E                     l492:
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;inc\CANlib.h: 905: else
  5355                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5356  00074E  010F               	movlb	15	; () banked
  5357  000750  9F05               	bcf	5,7,b	;volatile
  5358  000752                     l2948:
  5359                           
  5360                           ; BSR set to: 15
  5361                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5362  000752  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5363  000756  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5364  00075A  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5365  00075E  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5366  000762  0E16               	movlw	22
  5367  000764  D006               	goto	u2890
  5368  000766                     u2895:
  5369  000766  0100               	movlb	0	; () banked
  5370  000768  90D8               	bcf	status,0,c
  5371  00076A  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5372  00076C  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5373  00076E  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5374  000770  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5375  000772                     u2890:
  5376  000772  2EE8               	decfsz	wreg,f,c
  5377  000774  D7F8               	goto	u2895
  5378  000776  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5379  00077A  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5380  00077E  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5381  000782  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5385  000786  0100               	movlb	0	; () banked
  5386  000788  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5387  00078A  0100               	movlb	0	; () banked
  5388  00078C  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5389  00078E  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5390  000790  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5391  000792  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5395  000794  C0BC  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5396  000798                     l2954:
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;inc\CANlib.h: 911: }
  5400                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5401  000798  0E02               	movlw	2
  5402  00079A  0100               	movlb	0	; () banked
  5403  00079C  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5404  00079E  A4D8               	btfss	status,2,c
  5405  0007A0  D089               	goto	l2988
  5406                           
  5407                           ; BSR set to: 0
  5408  0007A2  0EF7               	movlw	247
  5409  0007A4  0100               	movlb	0	; () banked
  5410  0007A6  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5411  0007A8  A4D8               	btfss	status,2,c
  5412  0007AA  D084               	goto	l2988
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;inc\CANlib.h: 915: {
  5416                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5417  0007AC  010F               	movlb	15	; () banked
  5418  0007AE  8709               	bsf	9,3,b	;volatile
  5419                           
  5420                           ; BSR set to: 15
  5421                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5422  0007B0  0100               	movlb	0	; () banked
  5423  0007B2  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5424  0007B4  0100               	movlb	0	; () banked
  5425  0007B6  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5426  0007B8  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5427  0007BA  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5428  0007BC  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5432  0007BE  C0BC  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5436  0007C2  0E00               	movlw	0
  5437  0007C4  0100               	movlb	0	; () banked
  5438  0007C6  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5439  0007C8  0100               	movlb	0	; () banked
  5440  0007CA  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5441  0007CC  0EFF               	movlw	255
  5442  0007CE  0100               	movlb	0	; () banked
  5443  0007D0  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5444  0007D2  0100               	movlb	0	; () banked
  5445  0007D4  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5446  0007D6  0E00               	movlw	0
  5447  0007D8  0100               	movlb	0	; () banked
  5448  0007DA  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5449  0007DC  0100               	movlb	0	; () banked
  5450  0007DE  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5451  0007E0  0E00               	movlw	0
  5452  0007E2  0100               	movlb	0	; () banked
  5453  0007E4  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5454  0007E6  0100               	movlb	0	; () banked
  5455  0007E8  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5459  0007EA  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5460  0007EE  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5461  0007F2  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5462  0007F6  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5463  0007FA  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5464  0007FE  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5465  000802  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5466  000806  0100               	movlb	0	; () banked
  5467  000808  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5468  00080A  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5469  00080E  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5470  000812  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5471  000816  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5475  00081A  C0BC  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5479  00081E  0100               	movlb	0	; () banked
  5480  000820  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5481  000822  D003               	goto	l495
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5485  000824  010F               	movlb	15	; () banked
  5486  000826  8109               	bsf	9,0,b	;volatile
  5487  000828  D002               	goto	l496
  5488  00082A                     l495:
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;inc\CANlib.h: 927: else
  5492                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5493  00082A  010F               	movlb	15	; () banked
  5494  00082C  9109               	bcf	9,0,b	;volatile
  5495  00082E                     l496:
  5496                           
  5497                           ; BSR set to: 15
  5498                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5499  00082E  0100               	movlb	0	; () banked
  5500  000830  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5501  000832  D003               	goto	l497
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5505  000834  010F               	movlb	15	; () banked
  5506  000836  8309               	bsf	9,1,b	;volatile
  5507  000838  D002               	goto	l498
  5508  00083A                     l497:
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;inc\CANlib.h: 932: else
  5512                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5513  00083A  010F               	movlb	15	; () banked
  5514  00083C  9309               	bcf	9,1,b	;volatile
  5515  00083E                     l498:
  5516                           
  5517                           ; BSR set to: 15
  5518                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5519  00083E  0100               	movlb	0	; () banked
  5520  000840  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5521  000842  D003               	goto	l499
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5525  000844  010F               	movlb	15	; () banked
  5526  000846  8B09               	bsf	9,5,b	;volatile
  5527  000848  D002               	goto	l500
  5528  00084A                     l499:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;inc\CANlib.h: 937: else
  5532                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5533  00084A  010F               	movlb	15	; () banked
  5534  00084C  9B09               	bcf	9,5,b	;volatile
  5535  00084E                     l500:
  5536                           
  5537                           ; BSR set to: 15
  5538                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5539  00084E  0100               	movlb	0	; () banked
  5540  000850  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5541  000852  D003               	goto	l501
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5545  000854  010F               	movlb	15	; () banked
  5546  000856  8D09               	bsf	9,6,b	;volatile
  5547  000858  D002               	goto	l502
  5548  00085A                     l501:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;inc\CANlib.h: 942: else
  5552                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5553  00085A  010F               	movlb	15	; () banked
  5554  00085C  9D09               	bcf	9,6,b	;volatile
  5555  00085E                     l502:
  5556                           
  5557                           ; BSR set to: 15
  5558                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5559  00085E  0100               	movlb	0	; () banked
  5560  000860  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5561  000862  D003               	goto	l503
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5565  000864  010F               	movlb	15	; () banked
  5566  000866  8F09               	bsf	9,7,b	;volatile
  5567  000868  D002               	goto	l2982
  5568  00086A                     l503:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;inc\CANlib.h: 947: else
  5572                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5573  00086A  010F               	movlb	15	; () banked
  5574  00086C  9F09               	bcf	9,7,b	;volatile
  5575  00086E                     l2982:
  5576                           
  5577                           ; BSR set to: 15
  5578                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5579  00086E  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5580  000872  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5581  000876  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5582  00087A  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5583  00087E  0E16               	movlw	22
  5584  000880  D006               	goto	u2970
  5585  000882                     u2975:
  5586  000882  0100               	movlb	0	; () banked
  5587  000884  90D8               	bcf	status,0,c
  5588  000886  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5589  000888  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5590  00088A  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5591  00088C  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5592  00088E                     u2970:
  5593  00088E  2EE8               	decfsz	wreg,f,c
  5594  000890  D7F8               	goto	u2975
  5595  000892  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5596  000896  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5597  00089A  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5598  00089E  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5602  0008A2  0100               	movlb	0	; () banked
  5603  0008A4  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5604  0008A6  0100               	movlb	0	; () banked
  5605  0008A8  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5606  0008AA  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5607  0008AC  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5608  0008AE  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5612  0008B0  C0BC  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5613  0008B4                     l2988:
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;inc\CANlib.h: 953: }
  5617                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5618  0008B4  0E03               	movlw	3
  5619  0008B6  0100               	movlb	0	; () banked
  5620  0008B8  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5621  0008BA  A4D8               	btfss	status,2,c
  5622  0008BC  D089               	goto	l3022
  5623                           
  5624                           ; BSR set to: 0
  5625  0008BE  0EF7               	movlw	247
  5626  0008C0  0100               	movlb	0	; () banked
  5627  0008C2  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5628  0008C4  A4D8               	btfss	status,2,c
  5629  0008C6  D084               	goto	l3022
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;inc\CANlib.h: 956: {
  5633                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5634  0008C8  010F               	movlb	15	; () banked
  5635  0008CA  870D               	bsf	13,3,b	;volatile
  5636                           
  5637                           ; BSR set to: 15
  5638                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5639  0008CC  0100               	movlb	0	; () banked
  5640  0008CE  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5641  0008D0  0100               	movlb	0	; () banked
  5642  0008D2  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5643  0008D4  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5644  0008D6  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5645  0008D8  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5649  0008DA  C0BC  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5653  0008DE  0E00               	movlw	0
  5654  0008E0  0100               	movlb	0	; () banked
  5655  0008E2  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5656  0008E4  0100               	movlb	0	; () banked
  5657  0008E6  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5658  0008E8  0EFF               	movlw	255
  5659  0008EA  0100               	movlb	0	; () banked
  5660  0008EC  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5661  0008EE  0100               	movlb	0	; () banked
  5662  0008F0  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5663  0008F2  0E00               	movlw	0
  5664  0008F4  0100               	movlb	0	; () banked
  5665  0008F6  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5666  0008F8  0100               	movlb	0	; () banked
  5667  0008FA  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5668  0008FC  0E00               	movlw	0
  5669  0008FE  0100               	movlb	0	; () banked
  5670  000900  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5671  000902  0100               	movlb	0	; () banked
  5672  000904  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5676  000906  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5677  00090A  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5678  00090E  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5679  000912  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5680  000916  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5681  00091A  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5682  00091E  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5683  000922  0100               	movlb	0	; () banked
  5684  000924  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5685  000926  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5686  00092A  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5687  00092E  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5688  000932  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5692  000936  C0BC  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5696  00093A  0100               	movlb	0	; () banked
  5697  00093C  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5698  00093E  D003               	goto	l506
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5702  000940  010F               	movlb	15	; () banked
  5703  000942  810D               	bsf	13,0,b	;volatile
  5704  000944  D002               	goto	l507
  5705  000946                     l506:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;inc\CANlib.h: 968: else
  5709                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5710  000946  010F               	movlb	15	; () banked
  5711  000948  910D               	bcf	13,0,b	;volatile
  5712  00094A                     l507:
  5713                           
  5714                           ; BSR set to: 15
  5715                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5716  00094A  0100               	movlb	0	; () banked
  5717  00094C  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5718  00094E  D003               	goto	l508
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5722  000950  010F               	movlb	15	; () banked
  5723  000952  830D               	bsf	13,1,b	;volatile
  5724  000954  D002               	goto	l509
  5725  000956                     l508:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;inc\CANlib.h: 973: else
  5729                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5730  000956  010F               	movlb	15	; () banked
  5731  000958  930D               	bcf	13,1,b	;volatile
  5732  00095A                     l509:
  5733                           
  5734                           ; BSR set to: 15
  5735                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5736  00095A  0100               	movlb	0	; () banked
  5737  00095C  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5738  00095E  D003               	goto	l510
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5742  000960  010F               	movlb	15	; () banked
  5743  000962  8B0D               	bsf	13,5,b	;volatile
  5744  000964  D002               	goto	l511
  5745  000966                     l510:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;inc\CANlib.h: 978: else
  5749                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5750  000966  010F               	movlb	15	; () banked
  5751  000968  9B0D               	bcf	13,5,b	;volatile
  5752  00096A                     l511:
  5753                           
  5754                           ; BSR set to: 15
  5755                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5756  00096A  0100               	movlb	0	; () banked
  5757  00096C  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5758  00096E  D003               	goto	l512
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5762  000970  010F               	movlb	15	; () banked
  5763  000972  8D0D               	bsf	13,6,b	;volatile
  5764  000974  D002               	goto	l513
  5765  000976                     l512:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;inc\CANlib.h: 983: else
  5769                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5770  000976  010F               	movlb	15	; () banked
  5771  000978  9D0D               	bcf	13,6,b	;volatile
  5772  00097A                     l513:
  5773                           
  5774                           ; BSR set to: 15
  5775                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5776  00097A  0100               	movlb	0	; () banked
  5777  00097C  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5778  00097E  D003               	goto	l514
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5782  000980  010F               	movlb	15	; () banked
  5783  000982  8F0D               	bsf	13,7,b	;volatile
  5784  000984  D002               	goto	l3016
  5785  000986                     l514:
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;inc\CANlib.h: 988: else
  5789                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5790  000986  010F               	movlb	15	; () banked
  5791  000988  9F0D               	bcf	13,7,b	;volatile
  5792  00098A                     l3016:
  5793                           
  5794                           ; BSR set to: 15
  5795                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5796  00098A  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5797  00098E  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5798  000992  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5799  000996  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5800  00099A  0E16               	movlw	22
  5801  00099C  D006               	goto	u3050
  5802  00099E                     u3055:
  5803  00099E  0100               	movlb	0	; () banked
  5804  0009A0  90D8               	bcf	status,0,c
  5805  0009A2  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5806  0009A4  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5807  0009A6  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5808  0009A8  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5809  0009AA                     u3050:
  5810  0009AA  2EE8               	decfsz	wreg,f,c
  5811  0009AC  D7F8               	goto	u3055
  5812  0009AE  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5813  0009B2  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5814  0009B6  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5815  0009BA  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5819  0009BE  0100               	movlb	0	; () banked
  5820  0009C0  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5821  0009C2  0100               	movlb	0	; () banked
  5822  0009C4  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5823  0009C6  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5824  0009C8  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5825  0009CA  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5829  0009CC  C0BC  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5830  0009D0                     l3022:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 994: }
  5834                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5835  0009D0  0E04               	movlw	4
  5836  0009D2  0100               	movlb	0	; () banked
  5837  0009D4  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5838  0009D6  A4D8               	btfss	status,2,c
  5839  0009D8  D089               	goto	l3056
  5840                           
  5841                           ; BSR set to: 0
  5842  0009DA  0EF7               	movlw	247
  5843  0009DC  0100               	movlb	0	; () banked
  5844  0009DE  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5845  0009E0  A4D8               	btfss	status,2,c
  5846  0009E2  D084               	goto	l3056
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;inc\CANlib.h: 997: {
  5850                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5851  0009E4  010F               	movlb	15	; () banked
  5852  0009E6  8711               	bsf	17,3,b	;volatile
  5853                           
  5854                           ; BSR set to: 15
  5855                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5856  0009E8  0100               	movlb	0	; () banked
  5857  0009EA  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5858  0009EC  0100               	movlb	0	; () banked
  5859  0009EE  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5860  0009F0  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5861  0009F2  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5862  0009F4  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5866  0009F6  C0BC  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5870  0009FA  0E00               	movlw	0
  5871  0009FC  0100               	movlb	0	; () banked
  5872  0009FE  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5873  000A00  0100               	movlb	0	; () banked
  5874  000A02  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5875  000A04  0EFF               	movlw	255
  5876  000A06  0100               	movlb	0	; () banked
  5877  000A08  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5878  000A0A  0100               	movlb	0	; () banked
  5879  000A0C  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5880  000A0E  0E00               	movlw	0
  5881  000A10  0100               	movlb	0	; () banked
  5882  000A12  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5883  000A14  0100               	movlb	0	; () banked
  5884  000A16  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5885  000A18  0E00               	movlw	0
  5886  000A1A  0100               	movlb	0	; () banked
  5887  000A1C  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5888  000A1E  0100               	movlb	0	; () banked
  5889  000A20  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5893  000A22  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5894  000A26  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5895  000A2A  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5896  000A2E  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5897  000A32  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5898  000A36  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5899  000A3A  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5900  000A3E  0100               	movlb	0	; () banked
  5901  000A40  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5902  000A42  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5903  000A46  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5904  000A4A  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5905  000A4E  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5909  000A52  C0BC  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5913  000A56  0100               	movlb	0	; () banked
  5914  000A58  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5915  000A5A  D003               	goto	l517
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5919  000A5C  010F               	movlb	15	; () banked
  5920  000A5E  8111               	bsf	17,0,b	;volatile
  5921  000A60  D002               	goto	l518
  5922  000A62                     l517:
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;inc\CANlib.h: 1009: else
  5926                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5927  000A62  010F               	movlb	15	; () banked
  5928  000A64  9111               	bcf	17,0,b	;volatile
  5929  000A66                     l518:
  5930                           
  5931                           ; BSR set to: 15
  5932                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5933  000A66  0100               	movlb	0	; () banked
  5934  000A68  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5935  000A6A  D003               	goto	l519
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5939  000A6C  010F               	movlb	15	; () banked
  5940  000A6E  8311               	bsf	17,1,b	;volatile
  5941  000A70  D002               	goto	l520
  5942  000A72                     l519:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;inc\CANlib.h: 1014: else
  5946                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5947  000A72  010F               	movlb	15	; () banked
  5948  000A74  9311               	bcf	17,1,b	;volatile
  5949  000A76                     l520:
  5950                           
  5951                           ; BSR set to: 15
  5952                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5953  000A76  0100               	movlb	0	; () banked
  5954  000A78  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5955  000A7A  D003               	goto	l521
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5959  000A7C  010F               	movlb	15	; () banked
  5960  000A7E  8B11               	bsf	17,5,b	;volatile
  5961  000A80  D002               	goto	l522
  5962  000A82                     l521:
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 1019: else
  5966                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5967  000A82  010F               	movlb	15	; () banked
  5968  000A84  9B11               	bcf	17,5,b	;volatile
  5969  000A86                     l522:
  5970                           
  5971                           ; BSR set to: 15
  5972                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5973  000A86  0100               	movlb	0	; () banked
  5974  000A88  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5975  000A8A  D003               	goto	l523
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5979  000A8C  010F               	movlb	15	; () banked
  5980  000A8E  8D11               	bsf	17,6,b	;volatile
  5981  000A90  D002               	goto	l524
  5982  000A92                     l523:
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;inc\CANlib.h: 1024: else
  5986                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5987  000A92  010F               	movlb	15	; () banked
  5988  000A94  9D11               	bcf	17,6,b	;volatile
  5989  000A96                     l524:
  5990                           
  5991                           ; BSR set to: 15
  5992                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5993  000A96  0100               	movlb	0	; () banked
  5994  000A98  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5995  000A9A  D003               	goto	l525
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5999  000A9C  010F               	movlb	15	; () banked
  6000  000A9E  8F11               	bsf	17,7,b	;volatile
  6001  000AA0  D002               	goto	l3050
  6002  000AA2                     l525:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;inc\CANlib.h: 1029: else
  6006                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6007  000AA2  010F               	movlb	15	; () banked
  6008  000AA4  9F11               	bcf	17,7,b	;volatile
  6009  000AA6                     l3050:
  6010                           
  6011                           ; BSR set to: 15
  6012                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6013  000AA6  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  6014  000AAA  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6015  000AAE  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6016  000AB2  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6017  000AB6  0E16               	movlw	22
  6018  000AB8  D006               	goto	u3130
  6019  000ABA                     u3135:
  6020  000ABA  0100               	movlb	0	; () banked
  6021  000ABC  90D8               	bcf	status,0,c
  6022  000ABE  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6023  000AC0  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6024  000AC2  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6025  000AC4  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  6026  000AC6                     u3130:
  6027  000AC6  2EE8               	decfsz	wreg,f,c
  6028  000AC8  D7F8               	goto	u3135
  6029  000ACA  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  6030  000ACE  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6031  000AD2  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6032  000AD6  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6036  000ADA  0100               	movlb	0	; () banked
  6037  000ADC  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  6038  000ADE  0100               	movlb	0	; () banked
  6039  000AE0  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6040  000AE2  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6041  000AE4  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6042  000AE6  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6046  000AE8  C0BC  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6047  000AEC                     l3056:
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;inc\CANlib.h: 1035: }
  6051                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6052  000AEC  0E05               	movlw	5
  6053  000AEE  0100               	movlb	0	; () banked
  6054  000AF0  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6055  000AF2  A4D8               	btfss	status,2,c
  6056  000AF4  0012               	return	
  6057                           
  6058                           ; BSR set to: 0
  6059  000AF6  0EF7               	movlw	247
  6060  000AF8  0100               	movlb	0	; () banked
  6061  000AFA  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  6062  000AFC  A4D8               	btfss	status,2,c
  6063  000AFE  0012               	return	
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;inc\CANlib.h: 1038: {
  6067                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6068  000B00  010F               	movlb	15	; () banked
  6069  000B02  8715               	bsf	21,3,b	;volatile
  6070                           
  6071                           ; BSR set to: 15
  6072                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6073  000B04  0100               	movlb	0	; () banked
  6074  000B06  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  6075  000B08  0100               	movlb	0	; () banked
  6076  000B0A  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6077  000B0C  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6078  000B0E  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6079  000B10  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6083  000B12  C0BC  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6087  000B16  0E00               	movlw	0
  6088  000B18  0100               	movlb	0	; () banked
  6089  000B1A  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  6090  000B1C  0100               	movlb	0	; () banked
  6091  000B1E  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6092  000B20  0EFF               	movlw	255
  6093  000B22  0100               	movlb	0	; () banked
  6094  000B24  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6095  000B26  0100               	movlb	0	; () banked
  6096  000B28  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6097  000B2A  0E00               	movlw	0
  6098  000B2C  0100               	movlb	0	; () banked
  6099  000B2E  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6100  000B30  0100               	movlb	0	; () banked
  6101  000B32  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6102  000B34  0E00               	movlw	0
  6103  000B36  0100               	movlb	0	; () banked
  6104  000B38  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6105  000B3A  0100               	movlb	0	; () banked
  6106  000B3C  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6110  000B3E  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  6111  000B42  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6112  000B46  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6113  000B4A  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6114  000B4E  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  6115  000B52  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6116  000B56  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6117  000B5A  0100               	movlb	0	; () banked
  6118  000B5C  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  6119  000B5E  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  6120  000B62  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6121  000B66  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6122  000B6A  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6126  000B6E  C0BC  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6130  000B72  0100               	movlb	0	; () banked
  6131  000B74  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6132  000B76  D003               	goto	l528
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6136  000B78  010F               	movlb	15	; () banked
  6137  000B7A  8115               	bsf	21,0,b	;volatile
  6138  000B7C  D002               	goto	l529
  6139  000B7E                     l528:
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;inc\CANlib.h: 1050: else
  6143                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6144  000B7E  010F               	movlb	15	; () banked
  6145  000B80  9115               	bcf	21,0,b	;volatile
  6146  000B82                     l529:
  6147                           
  6148                           ; BSR set to: 15
  6149                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6150  000B82  0100               	movlb	0	; () banked
  6151  000B84  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6152  000B86  D003               	goto	l530
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6156  000B88  010F               	movlb	15	; () banked
  6157  000B8A  8315               	bsf	21,1,b	;volatile
  6158  000B8C  D002               	goto	l531
  6159  000B8E                     l530:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;inc\CANlib.h: 1055: else
  6163                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6164  000B8E  010F               	movlb	15	; () banked
  6165  000B90  9315               	bcf	21,1,b	;volatile
  6166  000B92                     l531:
  6167                           
  6168                           ; BSR set to: 15
  6169                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6170  000B92  0100               	movlb	0	; () banked
  6171  000B94  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6172  000B96  D003               	goto	l532
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6176  000B98  010F               	movlb	15	; () banked
  6177  000B9A  8B15               	bsf	21,5,b	;volatile
  6178  000B9C  D002               	goto	l533
  6179  000B9E                     l532:
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;inc\CANlib.h: 1060: else
  6183                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6184  000B9E  010F               	movlb	15	; () banked
  6185  000BA0  9B15               	bcf	21,5,b	;volatile
  6186  000BA2                     l533:
  6187                           
  6188                           ; BSR set to: 15
  6189                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6190  000BA2  0100               	movlb	0	; () banked
  6191  000BA4  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6192  000BA6  D003               	goto	l534
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6196  000BA8  010F               	movlb	15	; () banked
  6197  000BAA  8D15               	bsf	21,6,b	;volatile
  6198  000BAC  D002               	goto	l535
  6199  000BAE                     l534:
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;inc\CANlib.h: 1065: else
  6203                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6204  000BAE  010F               	movlb	15	; () banked
  6205  000BB0  9D15               	bcf	21,6,b	;volatile
  6206  000BB2                     l535:
  6207                           
  6208                           ; BSR set to: 15
  6209                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6210  000BB2  0100               	movlb	0	; () banked
  6211  000BB4  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6212  000BB6  D003               	goto	l536
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6216  000BB8  010F               	movlb	15	; () banked
  6217  000BBA  8F15               	bsf	21,7,b	;volatile
  6218  000BBC  D002               	goto	l3084
  6219  000BBE                     l536:
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;inc\CANlib.h: 1070: else
  6223                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6224  000BBE  010F               	movlb	15	; () banked
  6225  000BC0  9F15               	bcf	21,7,b	;volatile
  6226  000BC2                     l3084:
  6227                           
  6228                           ; BSR set to: 15
  6229                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6230  000BC2  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  6231  000BC6  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6232  000BCA  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6233  000BCE  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6234  000BD2  0E16               	movlw	22
  6235  000BD4  D006               	goto	u3210
  6236  000BD6                     u3215:
  6237  000BD6  0100               	movlb	0	; () banked
  6238  000BD8  90D8               	bcf	status,0,c
  6239  000BDA  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6240  000BDC  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6241  000BDE  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6242  000BE0  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  6243  000BE2                     u3210:
  6244  000BE2  2EE8               	decfsz	wreg,f,c
  6245  000BE4  D7F8               	goto	u3215
  6246  000BE6  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  6247  000BEA  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6248  000BEE  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6249  000BF2  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6253  000BF6  0100               	movlb	0	; () banked
  6254  000BF8  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  6255  000BFA  0100               	movlb	0	; () banked
  6256  000BFC  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6257  000BFE  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6258  000C00  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6259  000C02  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6263  000C04  C0BC  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6264  000C08  0012               	return	
  6265  000C0A                     __end_of_CANSetFilter:
  6266                           	opt stack 0
  6267                           tblptru	equ	0xFF8
  6268                           tblptrh	equ	0xFF7
  6269                           tblptrl	equ	0xFF6
  6270                           tablat	equ	0xFF5
  6271                           prodh	equ	0xFF4
  6272                           prodl	equ	0xFF3
  6273                           intcon	equ	0xFF2
  6274                           intcon2	equ	0xFF1
  6275                           intcon3	equ	0xFF0
  6276                           postinc0	equ	0xFEE
  6277                           wreg	equ	0xFE8
  6278                           postdec1	equ	0xFE5
  6279                           fsr1l	equ	0xFE1
  6280                           indf2	equ	0xFDF
  6281                           fsr2h	equ	0xFDA
  6282                           fsr2l	equ	0xFD9
  6283                           status	equ	0xFD8
  6284                           
  6285 ;; *************** function _CANOperationMode *****************
  6286 ;; Defined at:
  6287 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  mode            1    wreg     enum E16838
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  mode            1   22[BANK0 ] enum E16838
  6292 ;; Return value:  Size  Location     Type
  6293 ;;		None               void
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6301 ;;      Params:         0       0       0       0
  6302 ;;      Locals:         0       1       0       0
  6303 ;;      Temps:          0       0       0       0
  6304 ;;      Totals:         0       1       0       0
  6305 ;;Total ram usage:        1 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    4
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_CANInitialize
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text10
  6316  002826                     __ptext10:
  6317                           	opt stack 0
  6318  002826                     _CANOperationMode:
  6319                           	opt stack 24
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;incstack = 0
  6323                           ;CANOperationMode@mode stored from wreg
  6324  002826  0100               	movlb	0	; () banked
  6325  002828  6FB2               	movwf	CANOperationMode@mode& (0+255),b
  6326                           
  6327                           ;inc\CANlib.h: 208: CANCON = mode;
  6328  00282A  C0B2  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6329  00282E                     l2680:
  6330  00282E  506E               	movf	3950,w,c	;volatile
  6331  002830  0BE0               	andlw	224
  6332  002832  0100               	movlb	0	; () banked
  6333  002834  19B2               	xorwf	CANOperationMode@mode& (0+255),w,b
  6334  002836  B4D8               	btfsc	status,2,c
  6335  002838  0012               	return	
  6336  00283A  D7F9               	goto	l2680
  6337  00283C                     __end_of_CANOperationMode:
  6338                           	opt stack 0
  6339                           tblptru	equ	0xFF8
  6340                           tblptrh	equ	0xFF7
  6341                           tblptrl	equ	0xFF6
  6342                           tablat	equ	0xFF5
  6343                           prodh	equ	0xFF4
  6344                           prodl	equ	0xFF3
  6345                           intcon	equ	0xFF2
  6346                           intcon2	equ	0xFF1
  6347                           intcon3	equ	0xFF0
  6348                           postinc0	equ	0xFEE
  6349                           wreg	equ	0xFE8
  6350                           postdec1	equ	0xFE5
  6351                           fsr1l	equ	0xFE1
  6352                           indf2	equ	0xFDF
  6353                           fsr2h	equ	0xFDA
  6354                           fsr2l	equ	0xFD9
  6355                           status	equ	0xFD8
  6356                           
  6357 ;; *************** function ___lldiv *****************
  6358 ;; Defined at:
  6359 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;  dividend        4   22[BANK0 ] unsigned long 
  6362 ;;  divisor         4   26[BANK0 ] unsigned long 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  quotient        4   30[BANK0 ] unsigned long 
  6365 ;;  counter         1   34[BANK0 ] unsigned char 
  6366 ;; Return value:  Size  Location     Type
  6367 ;;                  4   22[BANK0 ] unsigned long 
  6368 ;; Registers used:
  6369 ;;		wreg, status,2, status,0
  6370 ;; Tracked objects:
  6371 ;;		On entry : 0/0
  6372 ;;		On exit  : 0/0
  6373 ;;		Unchanged: 0/0
  6374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6375 ;;      Params:         0       8       0       0
  6376 ;;      Locals:         0       5       0       0
  6377 ;;      Temps:          0       0       0       0
  6378 ;;      Totals:         0      13       0       0
  6379 ;;Total ram usage:       13 bytes
  6380 ;; Hardware stack levels used:    1
  6381 ;; Hardware stack levels required when called:    4
  6382 ;; This function calls:
  6383 ;;		Nothing
  6384 ;; This function is called by:
  6385 ;;		_main
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text11
  6390  002524                     __ptext11:
  6391                           	opt stack 0
  6392  002524                     ___lldiv:
  6393                           	opt stack 26
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;incstack = 0
  6397  002524  0E00               	movlw	0
  6398  002526  0100               	movlb	0	; () banked
  6399  002528  6FBA               	movwf	___lldiv@quotient& (0+255),b
  6400  00252A  0E00               	movlw	0
  6401  00252C  6FBB               	movwf	(___lldiv@quotient+1)& (0+255),b
  6402  00252E  0E00               	movlw	0
  6403  002530  6FBC               	movwf	(___lldiv@quotient+2)& (0+255),b
  6404  002532  0E00               	movlw	0
  6405  002534  6FBD               	movwf	(___lldiv@quotient+3)& (0+255),b
  6406                           
  6407                           ; BSR set to: 0
  6408  002536  0100               	movlb	0	; () banked
  6409  002538  51B6               	movf	___lldiv@divisor& (0+255),w,b
  6410  00253A  0100               	movlb	0	; () banked
  6411  00253C  11B7               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6412  00253E  0100               	movlb	0	; () banked
  6413  002540  11B8               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6414  002542  0100               	movlb	0	; () banked
  6415  002544  11B9               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6416  002546  B4D8               	btfsc	status,2,c
  6417  002548  D042               	goto	l1076
  6418                           
  6419                           ; BSR set to: 0
  6420  00254A  0E01               	movlw	1
  6421  00254C  0100               	movlb	0	; () banked
  6422  00254E  6FBE               	movwf	___lldiv@counter& (0+255),b
  6423  002550  D008               	goto	l3744
  6424  002552                     l3742:
  6425                           
  6426                           ; BSR set to: 0
  6427  002552  0100               	movlb	0	; () banked
  6428  002554  90D8               	bcf	status,0,c
  6429  002556  37B6               	rlcf	___lldiv@divisor& (0+255),f,b
  6430  002558  37B7               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6431  00255A  37B8               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6432  00255C  37B9               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6433  00255E  0100               	movlb	0	; () banked
  6434  002560  2BBE               	incf	___lldiv@counter& (0+255),f,b
  6435  002562                     l3744:
  6436                           
  6437                           ; BSR set to: 0
  6438  002562  0100               	movlb	0	; () banked
  6439  002564  AFB9               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6440  002566  D7F5               	goto	l3742
  6441  002568                     l3746:
  6442                           
  6443                           ; BSR set to: 0
  6444  002568  0100               	movlb	0	; () banked
  6445  00256A  90D8               	bcf	status,0,c
  6446  00256C  37BA               	rlcf	___lldiv@quotient& (0+255),f,b
  6447  00256E  37BB               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6448  002570  37BC               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6449  002572  37BD               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6450                           
  6451                           ; BSR set to: 0
  6452  002574  0100               	movlb	0	; () banked
  6453  002576  51B6               	movf	___lldiv@divisor& (0+255),w,b
  6454  002578  0100               	movlb	0	; () banked
  6455  00257A  5DB2               	subwf	___lldiv@dividend& (0+255),w,b
  6456  00257C  0100               	movlb	0	; () banked
  6457  00257E  51B7               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6458  002580  0100               	movlb	0	; () banked
  6459  002582  59B3               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6460  002584  0100               	movlb	0	; () banked
  6461  002586  51B8               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6462  002588  0100               	movlb	0	; () banked
  6463  00258A  59B4               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6464  00258C  0100               	movlb	0	; () banked
  6465  00258E  51B9               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6466  002590  0100               	movlb	0	; () banked
  6467  002592  59B5               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6468  002594  A0D8               	btfss	status,0,c
  6469  002596  D012               	goto	l3754
  6470                           
  6471                           ; BSR set to: 0
  6472  002598  0100               	movlb	0	; () banked
  6473  00259A  51B6               	movf	___lldiv@divisor& (0+255),w,b
  6474  00259C  0100               	movlb	0	; () banked
  6475  00259E  5FB2               	subwf	___lldiv@dividend& (0+255),f,b
  6476  0025A0  0100               	movlb	0	; () banked
  6477  0025A2  51B7               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6478  0025A4  0100               	movlb	0	; () banked
  6479  0025A6  5BB3               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6480  0025A8  0100               	movlb	0	; () banked
  6481  0025AA  51B8               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6482  0025AC  0100               	movlb	0	; () banked
  6483  0025AE  5BB4               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6484  0025B0  0100               	movlb	0	; () banked
  6485  0025B2  51B9               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6486  0025B4  0100               	movlb	0	; () banked
  6487  0025B6  5BB5               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6488                           
  6489                           ; BSR set to: 0
  6490  0025B8  0100               	movlb	0	; () banked
  6491  0025BA  81BA               	bsf	___lldiv@quotient& (0+255),0,b
  6492  0025BC                     l3754:
  6493                           
  6494                           ; BSR set to: 0
  6495  0025BC  0100               	movlb	0	; () banked
  6496  0025BE  90D8               	bcf	status,0,c
  6497  0025C0  33B9               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6498  0025C2  33B8               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6499  0025C4  33B7               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6500  0025C6  33B6               	rrcf	___lldiv@divisor& (0+255),f,b
  6501                           
  6502                           ; BSR set to: 0
  6503  0025C8  0100               	movlb	0	; () banked
  6504  0025CA  2FBE               	decfsz	___lldiv@counter& (0+255),f,b
  6505  0025CC  D7CD               	goto	l3746
  6506  0025CE                     l1076:
  6507                           
  6508                           ; BSR set to: 0
  6509  0025CE  C0BA  F0B2         	movff	___lldiv@quotient,?___lldiv
  6510  0025D2  C0BB  F0B3         	movff	___lldiv@quotient+1,?___lldiv+1
  6511  0025D6  C0BC  F0B4         	movff	___lldiv@quotient+2,?___lldiv+2
  6512  0025DA  C0BD  F0B5         	movff	___lldiv@quotient+3,?___lldiv+3
  6513                           
  6514                           ; BSR set to: 0
  6515  0025DE  0012               	return		;funcret
  6516  0025E0                     __end_of___lldiv:
  6517                           	opt stack 0
  6518                           tblptru	equ	0xFF8
  6519                           tblptrh	equ	0xFF7
  6520                           tblptrl	equ	0xFF6
  6521                           tablat	equ	0xFF5
  6522                           prodh	equ	0xFF4
  6523                           prodl	equ	0xFF3
  6524                           intcon	equ	0xFF2
  6525                           intcon2	equ	0xFF1
  6526                           intcon3	equ	0xFF0
  6527                           postinc0	equ	0xFEE
  6528                           wreg	equ	0xFE8
  6529                           postdec1	equ	0xFE5
  6530                           fsr1l	equ	0xFE1
  6531                           indf2	equ	0xFDF
  6532                           fsr2h	equ	0xFDA
  6533                           fsr2l	equ	0xFD9
  6534                           status	equ	0xFD8
  6535                           
  6536 ;; *************** function _CANisTXwarningON *****************
  6537 ;; Defined at:
  6538 ;;		line 1119 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      unsigned char 
  6545 ;; Registers used:
  6546 ;;		wreg
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6552 ;;      Params:         0       0       0       0
  6553 ;;      Locals:         0       0       0       0
  6554 ;;      Temps:          0       0       0       0
  6555 ;;      Totals:         0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used:    1
  6558 ;; Hardware stack levels required when called:    4
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_main
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text12
  6567  002864                     __ptext12:
  6568                           	opt stack 0
  6569  002864                     _CANisTXwarningON:
  6570                           	opt stack 26
  6571                           
  6572                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;incstack = 0
  6576  002864  A474               	btfss	3956,2,c	;volatile
  6577  002866  D002               	goto	u3990
  6578  002868  0E01               	movlw	1
  6579  00286A  0012               	return	
  6580  00286C                     u3990:
  6581  00286C  0E00               	movlw	0
  6582  00286E  0012               	return	
  6583  002870                     __end_of_CANisTXwarningON:
  6584                           	opt stack 0
  6585                           tblptru	equ	0xFF8
  6586                           tblptrh	equ	0xFF7
  6587                           tblptrl	equ	0xFF6
  6588                           tablat	equ	0xFF5
  6589                           prodh	equ	0xFF4
  6590                           prodl	equ	0xFF3
  6591                           intcon	equ	0xFF2
  6592                           intcon2	equ	0xFF1
  6593                           intcon3	equ	0xFF0
  6594                           postinc0	equ	0xFEE
  6595                           wreg	equ	0xFE8
  6596                           postdec1	equ	0xFE5
  6597                           fsr1l	equ	0xFE1
  6598                           indf2	equ	0xFDF
  6599                           fsr2h	equ	0xFDA
  6600                           fsr2l	equ	0xFD9
  6601                           status	equ	0xFD8
  6602                           
  6603 ;; *************** function _CANisRXwarningON *****************
  6604 ;; Defined at:
  6605 ;;		line 1127 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      unsigned char 
  6612 ;; Registers used:
  6613 ;;		wreg
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6619 ;;      Params:         0       0       0       0
  6620 ;;      Locals:         0       0       0       0
  6621 ;;      Temps:          0       0       0       0
  6622 ;;      Totals:         0       0       0       0
  6623 ;;Total ram usage:        0 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; Hardware stack levels required when called:    4
  6626 ;; This function calls:
  6627 ;;		Nothing
  6628 ;; This function is called by:
  6629 ;;		_main
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text13
  6634  002870                     __ptext13:
  6635                           	opt stack 0
  6636  002870                     _CANisRXwarningON:
  6637                           	opt stack 26
  6638                           
  6639                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6640                           
  6641                           ;incstack = 0
  6642  002870  A274               	btfss	3956,1,c	;volatile
  6643  002872  D002               	goto	u4000
  6644  002874  0E01               	movlw	1
  6645  002876  0012               	return	
  6646  002878                     u4000:
  6647  002878  0E00               	movlw	0
  6648  00287A  0012               	return	
  6649  00287C                     __end_of_CANisRXwarningON:
  6650                           	opt stack 0
  6651                           tblptru	equ	0xFF8
  6652                           tblptrh	equ	0xFF7
  6653                           tblptrl	equ	0xFF6
  6654                           tablat	equ	0xFF5
  6655                           prodh	equ	0xFF4
  6656                           prodl	equ	0xFF3
  6657                           intcon	equ	0xFF2
  6658                           intcon2	equ	0xFF1
  6659                           intcon3	equ	0xFF0
  6660                           postinc0	equ	0xFEE
  6661                           wreg	equ	0xFE8
  6662                           postdec1	equ	0xFE5
  6663                           fsr1l	equ	0xFE1
  6664                           indf2	equ	0xFDF
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _ADC_Read *****************
  6670 ;; Defined at:
  6671 ;;		line 302 in file "ABS_Code.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;		None
  6676 ;; Return value:  Size  Location     Type
  6677 ;;		None               void
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6685 ;;      Params:         0       0       0       0
  6686 ;;      Locals:         0       0       0       0
  6687 ;;      Temps:          0       0       0       0
  6688 ;;      Totals:         0       0       0       0
  6689 ;;Total ram usage:        0 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    5
  6692 ;; This function calls:
  6693 ;;		___awdiv
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text14
  6700  00272E                     __ptext14:
  6701                           	opt stack 0
  6702  00272E                     _ADC_Read:
  6703                           	opt stack 25
  6704                           
  6705                           ;ABS_Code.c: 303: ADCON0bits.GO = 1;
  6706                           
  6707                           ;incstack = 0
  6708  00272E  82C2               	bsf	4034,1,c	;volatile
  6709  002730                     l713:
  6710  002730  B2C2               	btfsc	4034,1,c	;volatile
  6711  002732  D7FE               	goto	l713
  6712                           
  6713                           ;ABS_Code.c: 305: read = ADRESH;
  6714  002734  CFC4 F078          	movff	4036,_read	;volatile
  6715                           
  6716                           ;ABS_Code.c: 306: correction_factor = read - 127;
  6717  002738  0E81               	movlw	129
  6718  00273A  0100               	movlb	0	; () banked
  6719  00273C  2578               	addwf	_read& (0+255),w,b
  6720  00273E  0100               	movlb	0	; () banked
  6721  002740  6F6E               	movwf	_correction_factor& (0+255),b
  6722  002742  0100               	movlb	0	; () banked
  6723  002744  6B6F               	clrf	(_correction_factor+1)& (0+255),b
  6724  002746  0EFF               	movlw	255
  6725  002748  236F               	addwfc	(_correction_factor+1)& (0+255),f,b
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;ABS_Code.c: 307: home_position = correction_factor / 4 + 127;
  6729  00274A  C06E  F0B2         	movff	_correction_factor,___awdiv@dividend
  6730  00274E  C06F  F0B3         	movff	_correction_factor+1,___awdiv@dividend+1
  6731  002752  0E00               	movlw	0
  6732  002754  0100               	movlb	0	; () banked
  6733  002756  6FB5               	movwf	(___awdiv@divisor+1)& (0+255),b
  6734  002758  0E04               	movlw	4
  6735  00275A  6FB4               	movwf	___awdiv@divisor& (0+255),b
  6736  00275C  ECD5  F011         	call	___awdiv	;wreg free
  6737  002760  0100               	movlb	0	; () banked
  6738  002762  51B2               	movf	?___awdiv& (0+255),w,b
  6739  002764  0F7F               	addlw	127
  6740  002766  0100               	movlb	0	; () banked
  6741  002768  6F77               	movwf	_home_position& (0+255),b
  6742                           
  6743                           ; BSR set to: 0
  6744  00276A  0012               	return		;funcret
  6745  00276C                     __end_of_ADC_Read:
  6746                           	opt stack 0
  6747                           tblptru	equ	0xFF8
  6748                           tblptrh	equ	0xFF7
  6749                           tblptrl	equ	0xFF6
  6750                           tablat	equ	0xFF5
  6751                           prodh	equ	0xFF4
  6752                           prodl	equ	0xFF3
  6753                           intcon	equ	0xFF2
  6754                           intcon2	equ	0xFF1
  6755                           intcon3	equ	0xFF0
  6756                           postinc0	equ	0xFEE
  6757                           wreg	equ	0xFE8
  6758                           postdec1	equ	0xFE5
  6759                           fsr1l	equ	0xFE1
  6760                           indf2	equ	0xFDF
  6761                           fsr2h	equ	0xFDA
  6762                           fsr2l	equ	0xFD9
  6763                           status	equ	0xFD8
  6764                           
  6765 ;; *************** function ___awdiv *****************
  6766 ;; Defined at:
  6767 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  dividend        2   22[BANK0 ] int 
  6770 ;;  divisor         2   24[BANK0 ] int 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  quotient        2   28[BANK0 ] int 
  6773 ;;  sign            1   27[BANK0 ] unsigned char 
  6774 ;;  counter         1   26[BANK0 ] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  2   22[BANK0 ] int 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6784 ;;      Params:         0       4       0       0
  6785 ;;      Locals:         0       4       0       0
  6786 ;;      Temps:          0       0       0       0
  6787 ;;      Totals:         0       8       0       0
  6788 ;;Total ram usage:        8 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    4
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_main
  6795 ;;		_ADC_Read
  6796 ;; This function uses a non-reentrant model
  6797 ;;
  6798                           
  6799                           	psect	text15
  6800  0023AA                     __ptext15:
  6801                           	opt stack 0
  6802  0023AA                     ___awdiv:
  6803                           	opt stack 26
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;incstack = 0
  6807  0023AA  0E00               	movlw	0
  6808  0023AC  0100               	movlb	0	; () banked
  6809  0023AE  6FB7               	movwf	___awdiv@sign& (0+255),b
  6810                           
  6811                           ; BSR set to: 0
  6812  0023B0  0100               	movlb	0	; () banked
  6813  0023B2  AFB5               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6814  0023B4  D008               	goto	l3404
  6815                           
  6816                           ; BSR set to: 0
  6817  0023B6  0100               	movlb	0	; () banked
  6818  0023B8  6DB4               	negf	___awdiv@divisor& (0+255),b
  6819  0023BA  1FB5               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6820  0023BC  B0D8               	btfsc	status,0,c
  6821  0023BE  2BB5               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6822                           
  6823                           ; BSR set to: 0
  6824  0023C0  0E01               	movlw	1
  6825  0023C2  0100               	movlb	0	; () banked
  6826  0023C4  6FB7               	movwf	___awdiv@sign& (0+255),b
  6827  0023C6                     l3404:
  6828                           
  6829                           ; BSR set to: 0
  6830  0023C6  0100               	movlb	0	; () banked
  6831  0023C8  AFB3               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6832  0023CA  D008               	goto	l3410
  6833                           
  6834                           ; BSR set to: 0
  6835  0023CC  0100               	movlb	0	; () banked
  6836  0023CE  6DB2               	negf	___awdiv@dividend& (0+255),b
  6837  0023D0  1FB3               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6838  0023D2  B0D8               	btfsc	status,0,c
  6839  0023D4  2BB3               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6840                           
  6841                           ; BSR set to: 0
  6842  0023D6  0E01               	movlw	1
  6843  0023D8  0100               	movlb	0	; () banked
  6844  0023DA  1BB7               	xorwf	___awdiv@sign& (0+255),f,b
  6845  0023DC                     l3410:
  6846                           
  6847                           ; BSR set to: 0
  6848  0023DC  0E00               	movlw	0
  6849  0023DE  0100               	movlb	0	; () banked
  6850  0023E0  6FB9               	movwf	(___awdiv@quotient+1)& (0+255),b
  6851  0023E2  0E00               	movlw	0
  6852  0023E4  6FB8               	movwf	___awdiv@quotient& (0+255),b
  6853                           
  6854                           ; BSR set to: 0
  6855  0023E6  0100               	movlb	0	; () banked
  6856  0023E8  51B4               	movf	___awdiv@divisor& (0+255),w,b
  6857  0023EA  0100               	movlb	0	; () banked
  6858  0023EC  11B5               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6859  0023EE  B4D8               	btfsc	status,2,c
  6860  0023F0  D02C               	goto	l3432
  6861                           
  6862                           ; BSR set to: 0
  6863  0023F2  0E01               	movlw	1
  6864  0023F4  0100               	movlb	0	; () banked
  6865  0023F6  6FB6               	movwf	___awdiv@counter& (0+255),b
  6866  0023F8  D006               	goto	l3418
  6867  0023FA                     l3416:
  6868                           
  6869                           ; BSR set to: 0
  6870  0023FA  0100               	movlb	0	; () banked
  6871  0023FC  90D8               	bcf	status,0,c
  6872  0023FE  37B4               	rlcf	___awdiv@divisor& (0+255),f,b
  6873  002400  37B5               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6874  002402  0100               	movlb	0	; () banked
  6875  002404  2BB6               	incf	___awdiv@counter& (0+255),f,b
  6876  002406                     l3418:
  6877                           
  6878                           ; BSR set to: 0
  6879  002406  0100               	movlb	0	; () banked
  6880  002408  AFB5               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6881  00240A  D7F7               	goto	l3416
  6882  00240C                     l3420:
  6883                           
  6884                           ; BSR set to: 0
  6885  00240C  0100               	movlb	0	; () banked
  6886  00240E  90D8               	bcf	status,0,c
  6887  002410  37B8               	rlcf	___awdiv@quotient& (0+255),f,b
  6888  002412  37B9               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6889                           
  6890                           ; BSR set to: 0
  6891  002414  0100               	movlb	0	; () banked
  6892  002416  51B4               	movf	___awdiv@divisor& (0+255),w,b
  6893  002418  0100               	movlb	0	; () banked
  6894  00241A  5DB2               	subwf	___awdiv@dividend& (0+255),w,b
  6895  00241C  0100               	movlb	0	; () banked
  6896  00241E  51B5               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6897  002420  0100               	movlb	0	; () banked
  6898  002422  59B3               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6899  002424  A0D8               	btfss	status,0,c
  6900  002426  D00A               	goto	l3428
  6901                           
  6902                           ; BSR set to: 0
  6903  002428  0100               	movlb	0	; () banked
  6904  00242A  51B4               	movf	___awdiv@divisor& (0+255),w,b
  6905  00242C  0100               	movlb	0	; () banked
  6906  00242E  5FB2               	subwf	___awdiv@dividend& (0+255),f,b
  6907  002430  0100               	movlb	0	; () banked
  6908  002432  51B5               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6909  002434  0100               	movlb	0	; () banked
  6910  002436  5BB3               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6911                           
  6912                           ; BSR set to: 0
  6913  002438  0100               	movlb	0	; () banked
  6914  00243A  81B8               	bsf	___awdiv@quotient& (0+255),0,b
  6915  00243C                     l3428:
  6916                           
  6917                           ; BSR set to: 0
  6918  00243C  0100               	movlb	0	; () banked
  6919  00243E  90D8               	bcf	status,0,c
  6920  002440  33B5               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6921  002442  33B4               	rrcf	___awdiv@divisor& (0+255),f,b
  6922                           
  6923                           ; BSR set to: 0
  6924  002444  0100               	movlb	0	; () banked
  6925  002446  2FB6               	decfsz	___awdiv@counter& (0+255),f,b
  6926  002448  D7E1               	goto	l3420
  6927  00244A                     l3432:
  6928                           
  6929                           ; BSR set to: 0
  6930  00244A  0100               	movlb	0	; () banked
  6931  00244C  51B7               	movf	___awdiv@sign& (0+255),w,b
  6932  00244E  0100               	movlb	0	; () banked
  6933  002450  B4D8               	btfsc	status,2,c
  6934  002452  D005               	goto	l3436
  6935                           
  6936                           ; BSR set to: 0
  6937  002454  0100               	movlb	0	; () banked
  6938  002456  6DB8               	negf	___awdiv@quotient& (0+255),b
  6939  002458  1FB9               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6940  00245A  B0D8               	btfsc	status,0,c
  6941  00245C  2BB9               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6942  00245E                     l3436:
  6943                           
  6944                           ; BSR set to: 0
  6945  00245E  C0B8  F0B2         	movff	___awdiv@quotient,?___awdiv
  6946  002462  C0B9  F0B3         	movff	___awdiv@quotient+1,?___awdiv+1
  6947  002466  0012               	return	
  6948  002468                     __end_of___awdiv:
  6949                           	opt stack 0
  6950                           tblptru	equ	0xFF8
  6951                           tblptrh	equ	0xFF7
  6952                           tblptrl	equ	0xFF6
  6953                           tablat	equ	0xFF5
  6954                           prodh	equ	0xFF4
  6955                           prodl	equ	0xFF3
  6956                           intcon	equ	0xFF2
  6957                           intcon2	equ	0xFF1
  6958                           intcon3	equ	0xFF0
  6959                           postinc0	equ	0xFEE
  6960                           wreg	equ	0xFE8
  6961                           postdec1	equ	0xFE5
  6962                           fsr1l	equ	0xFE1
  6963                           indf2	equ	0xFDF
  6964                           fsr2h	equ	0xFDA
  6965                           fsr2l	equ	0xFD9
  6966                           status	equ	0xFD8
  6967                           
  6968 ;; *************** function _ISR_Bassa *****************
  6969 ;; Defined at:
  6970 ;;		line 190 in file "ABS_Code.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;		None               void
  6977 ;; Registers used:
  6978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6984 ;;      Params:         0       0       0       0
  6985 ;;      Locals:         0       0       0       0
  6986 ;;      Temps:         17       0       0       0
  6987 ;;      Totals:        17       0       0       0
  6988 ;;Total ram usage:       17 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; Hardware stack levels required when called:    3
  6991 ;; This function calls:
  6992 ;;		_CANisRxReady
  6993 ;;		_CANreceiveMessage
  6994 ;; This function is called by:
  6995 ;;		Interrupt level 1
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	intcodelo
  7000  000018                     __pintcodelo:
  7001                           	opt stack 0
  7002  000018                     _ISR_Bassa:
  7003                           	opt stack 24
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;incstack = 0
  7007  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7008  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7009  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7010  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7011  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7012  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7013  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7014  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7015  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7016  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7017  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7018  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7019  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7020  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7021  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7022  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7023  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7024  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7025                           
  7026                           ;ABS_Code.c: 192: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7027  00005E  A0A4               	btfss	4004,0,c	;volatile
  7028  000060  B2A4               	btfsc	4004,1,c	;volatile
  7029  000062  D001               	goto	i1l3910
  7030  000064  D029               	goto	i1l676
  7031  000066                     i1l3910:
  7032                           
  7033                           ;ABS_Code.c: 193: if (CANisRxReady()) {
  7034  000066  EC1E  F014         	call	_CANisRxReady	;wreg free
  7035  00006A  0900               	iorlw	0
  7036  00006C  B4D8               	btfsc	status,2,c
  7037  00006E  D022               	goto	i1l673
  7038                           
  7039                           ;ABS_Code.c: 194: CANreceiveMessage(&msg);
  7040  000070  0E7C               	movlw	low _msg
  7041  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7042  000074  0E00               	movlw	high _msg
  7043  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7044  000078  ECCB  F009         	call	_CANreceiveMessage	;wreg free
  7045                           
  7046                           ;ABS_Code.c: 195: if (msg.RTR == 1) {
  7047  00007C  0100               	movlb	0	; () banked
  7048  00007E  058A               	decf	(_msg+14)& (0+255),w,b
  7049  000080  A4D8               	btfss	status,2,c
  7050  000082  D009               	goto	i1l3918
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;ABS_Code.c: 196: remote_frame_id = msg.identifier;
  7054  000084  C07C  F068         	movff	_msg,_remote_frame_id
  7055  000088  C07D  F069         	movff	_msg+1,_remote_frame_id+1
  7056  00008C  C07E  F06A         	movff	_msg+2,_remote_frame_id+2
  7057  000090  C07F  F06B         	movff	_msg+3,_remote_frame_id+3
  7058                           
  7059                           ;ABS_Code.c: 197: remote_frame = 1;
  7060  000094  883D               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7061  000096                     i1l3918:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;ABS_Code.c: 198: }
  7065                           ;ABS_Code.c: 199: if (msg.identifier == 0b00000000000000000000000000110) {
  7066  000096  0E06               	movlw	6
  7067  000098  0100               	movlb	0	; () banked
  7068  00009A  197C               	xorwf	_msg& (0+255),w,b
  7069  00009C  0100               	movlb	0	; () banked
  7070  00009E  117D               	iorwf	(_msg+1)& (0+255),w,b
  7071  0000A0  0100               	movlb	0	; () banked
  7072  0000A2  117E               	iorwf	(_msg+2)& (0+255),w,b
  7073  0000A4  0100               	movlb	0	; () banked
  7074  0000A6  117F               	iorwf	(_msg+3)& (0+255),w,b
  7075  0000A8  A4D8               	btfss	status,2,c
  7076  0000AA  D004               	goto	i1l673
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;ABS_Code.c: 200: brake_signal_CAN = msg.data[0];
  7080  0000AC  C080  F075         	movff	_msg+4,_brake_signal_CAN
  7081                           
  7082                           ;ABS_Code.c: 201: Analogic_Mode = msg.data[1];
  7083  0000B0  C081  F074         	movff	_msg+5,_Analogic_Mode
  7084  0000B4                     i1l673:
  7085                           
  7086                           ;ABS_Code.c: 202: }
  7087                           ;ABS_Code.c: 203: }
  7088                           ;ABS_Code.c: 204: PIR3bits.RXB0IF = 0;
  7089  0000B4  90A4               	bcf	4004,0,c	;volatile
  7090                           
  7091                           ;ABS_Code.c: 205: PIR3bits.RXB1IF = 0;
  7092  0000B6  92A4               	bcf	4004,1,c	;volatile
  7093  0000B8                     i1l676:
  7094  0000B8  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7095  0000BC  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7096  0000C0  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7097  0000C4  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7098  0000C8  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7099  0000CC  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7100  0000D0  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7101  0000D4  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7102  0000D8  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7103  0000DC  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7104  0000E0  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7105  0000E4  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7106  0000E8  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7107  0000EC  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7108  0000F0  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7109  0000F4  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7110  0000F8  C00D  FFD8         	movff	??_ISR_Bassa,status
  7111  0000FC  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7112  0000FE  0010               	retfie	
  7113  000100                     __end_of_ISR_Bassa:
  7114                           	opt stack 0
  7115                           pclatu	equ	0xFFB
  7116                           pclath	equ	0xFFA
  7117                           tblptru	equ	0xFF8
  7118                           tblptrh	equ	0xFF7
  7119                           tblptrl	equ	0xFF6
  7120                           tablat	equ	0xFF5
  7121                           prodh	equ	0xFF4
  7122                           prodl	equ	0xFF3
  7123                           intcon	equ	0xFF2
  7124                           intcon2	equ	0xFF1
  7125                           intcon3	equ	0xFF0
  7126                           postinc0	equ	0xFEE
  7127                           fsr0h	equ	0xFEA
  7128                           fsr0l	equ	0xFE9
  7129                           wreg	equ	0xFE8
  7130                           postdec1	equ	0xFE5
  7131                           fsr1h	equ	0xFE2
  7132                           fsr1l	equ	0xFE1
  7133                           bsr	equ	0xFE0
  7134                           indf2	equ	0xFDF
  7135                           fsr2h	equ	0xFDA
  7136                           fsr2l	equ	0xFD9
  7137                           status	equ	0xFD8
  7138                           
  7139 ;; *************** function _CANreceiveMessage *****************
  7140 ;; Defined at:
  7141 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  msg             2    0[COMRAM] PTR struct .
  7144 ;;		 -> msg(15), 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  tamp            1   11[COMRAM] unsigned char 
  7147 ;;  error           1   10[COMRAM] unsigned char 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      unsigned char 
  7150 ;; Registers used:
  7151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7157 ;;      Params:         2       0       0       0
  7158 ;;      Locals:         2       0       0       0
  7159 ;;      Temps:          8       0       0       0
  7160 ;;      Totals:        12       0       0       0
  7161 ;;Total ram usage:       12 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    2
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_ISR_Bassa
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text17
  7172  001396                     __ptext17:
  7173                           	opt stack 0
  7174  001396                     _CANreceiveMessage:
  7175                           	opt stack 24
  7176                           
  7177                           ;inc\CANlib.h: 530: BYTE tamp;
  7178                           ;inc\CANlib.h: 531: BYTE error = 0;
  7179                           
  7180                           ;incstack = 0
  7181  001396  0E00               	movlw	0
  7182  001398  6E0B               	movwf	CANreceiveMessage@error,c
  7183                           
  7184                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7185  00139A  BE74               	btfsc	3956,7,c	;volatile
  7186                           
  7187                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7188  00139C  800B               	bsf	CANreceiveMessage@error,0,c
  7189                           
  7190                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7191  00139E  BC74               	btfsc	3956,6,c	;volatile
  7192                           
  7193                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7194  0013A0  820B               	bsf	CANreceiveMessage@error,1,c
  7195                           
  7196                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7197  0013A2  010F               	movlb	15	; () banked
  7198  0013A4  AF50               	btfss	80,7,b	;volatile
  7199  0013A6  D143               	goto	i1l420
  7200                           
  7201                           ; BSR set to: 15
  7202                           ;inc\CANlib.h: 541: {
  7203                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7204  0013A8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7205  0013AC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7206  0013B0  6ADE               	clrf	postinc2,c
  7207  0013B2  6ADE               	clrf	postinc2,c
  7208  0013B4  6ADE               	clrf	postinc2,c
  7209  0013B6  6ADD               	clrf	postdec2,c
  7210                           
  7211                           ; BSR set to: 15
  7212                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7213  0013B8  EE20 F004          	lfsr	2,4
  7214  0013BC  5001               	movf	CANreceiveMessage@msg,w,c
  7215  0013BE  26D9               	addwf	fsr2l,f,c
  7216  0013C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7217  0013C2  22DA               	addwfc	fsr2h,f,c
  7218  0013C4  CF56 FFDF          	movff	3926,indf2	;volatile
  7219                           
  7220                           ; BSR set to: 15
  7221                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7222  0013C8  EE20 F005          	lfsr	2,5
  7223  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7224  0013CE  26D9               	addwf	fsr2l,f,c
  7225  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7226  0013D2  22DA               	addwfc	fsr2h,f,c
  7227  0013D4  CF57 FFDF          	movff	3927,indf2	;volatile
  7228                           
  7229                           ; BSR set to: 15
  7230                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7231  0013D8  EE20 F006          	lfsr	2,6
  7232  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7233  0013DE  26D9               	addwf	fsr2l,f,c
  7234  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7235  0013E2  22DA               	addwfc	fsr2h,f,c
  7236  0013E4  CF58 FFDF          	movff	3928,indf2	;volatile
  7237                           
  7238                           ; BSR set to: 15
  7239                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7240  0013E8  EE20 F007          	lfsr	2,7
  7241  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7242  0013EE  26D9               	addwf	fsr2l,f,c
  7243  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7244  0013F2  22DA               	addwfc	fsr2h,f,c
  7245  0013F4  CF59 FFDF          	movff	3929,indf2	;volatile
  7246                           
  7247                           ; BSR set to: 15
  7248                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7249  0013F8  EE20 F008          	lfsr	2,8
  7250  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7251  0013FE  26D9               	addwf	fsr2l,f,c
  7252  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7253  001402  22DA               	addwfc	fsr2h,f,c
  7254  001404  CF5A FFDF          	movff	3930,indf2	;volatile
  7255                           
  7256                           ; BSR set to: 15
  7257                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7258  001408  EE20 F009          	lfsr	2,9
  7259  00140C  5001               	movf	CANreceiveMessage@msg,w,c
  7260  00140E  26D9               	addwf	fsr2l,f,c
  7261  001410  5002               	movf	CANreceiveMessage@msg+1,w,c
  7262  001412  22DA               	addwfc	fsr2h,f,c
  7263  001414  CF5B FFDF          	movff	3931,indf2	;volatile
  7264                           
  7265                           ; BSR set to: 15
  7266                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7267  001418  EE20 F00A          	lfsr	2,10
  7268  00141C  5001               	movf	CANreceiveMessage@msg,w,c
  7269  00141E  26D9               	addwf	fsr2l,f,c
  7270  001420  5002               	movf	CANreceiveMessage@msg+1,w,c
  7271  001422  22DA               	addwfc	fsr2h,f,c
  7272  001424  CF5C FFDF          	movff	3932,indf2	;volatile
  7273                           
  7274                           ; BSR set to: 15
  7275                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7276  001428  EE20 F00B          	lfsr	2,11
  7277  00142C  5001               	movf	CANreceiveMessage@msg,w,c
  7278  00142E  26D9               	addwf	fsr2l,f,c
  7279  001430  5002               	movf	CANreceiveMessage@msg+1,w,c
  7280  001432  22DA               	addwfc	fsr2h,f,c
  7281  001434  CF5D FFDF          	movff	3933,indf2	;volatile
  7282                           
  7283                           ; BSR set to: 15
  7284                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7285  001438  EE20 F00E          	lfsr	2,14
  7286  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7287  00143E  26D9               	addwf	fsr2l,f,c
  7288  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7289  001442  22DA               	addwfc	fsr2h,f,c
  7290  001444  010F               	movlb	15	; () banked
  7291  001446  AD55               	btfss	85,6,b	;volatile
  7292  001448  D002               	goto	i1u378_20
  7293  00144A  0E01               	movlw	1
  7294  00144C  D001               	goto	i1u378_26
  7295  00144E                     i1u378_20:
  7296  00144E  0E00               	movlw	0
  7297  001450                     i1u378_26:
  7298  001450  6EDF               	movwf	indf2,c
  7299                           
  7300                           ; BSR set to: 15
  7301                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7302  001452  EE20 F00D          	lfsr	2,13
  7303  001456  5001               	movf	CANreceiveMessage@msg,w,c
  7304  001458  26D9               	addwf	fsr2l,f,c
  7305  00145A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7306  00145C  22DA               	addwfc	fsr2h,f,c
  7307  00145E  010F               	movlb	15	; () banked
  7308  001460  5155               	movf	85,w,b	;volatile
  7309  001462  0B0F               	andlw	15
  7310  001464  6EDF               	movwf	indf2,c
  7311                           
  7312                           ; BSR set to: 15
  7313                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7314  001466  EE20 F00C          	lfsr	2,12
  7315  00146A  5001               	movf	CANreceiveMessage@msg,w,c
  7316  00146C  26D9               	addwf	fsr2l,f,c
  7317  00146E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7318  001470  22DA               	addwfc	fsr2h,f,c
  7319  001472  010F               	movlb	15	; () banked
  7320  001474  A752               	btfss	82,3,b	;volatile
  7321  001476  D002               	goto	i1u379_20
  7322  001478  0E01               	movlw	1
  7323  00147A  D001               	goto	i1u379_26
  7324  00147C                     i1u379_20:
  7325  00147C  0E00               	movlw	0
  7326  00147E                     i1u379_26:
  7327  00147E  6EDF               	movwf	indf2,c
  7328                           
  7329                           ; BSR set to: 15
  7330                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7331  001480  010F               	movlb	15	; () banked
  7332  001482  B752               	btfsc	82,3,b	;volatile
  7333  001484  D044               	goto	i1l3484
  7334                           
  7335                           ; BSR set to: 15
  7336                           ;inc\CANlib.h: 559: {
  7337                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7338  001486  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7339  00148A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7340  00148C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7341  00148E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7342  001490  0E03               	movlw	3
  7343  001492                     i1u381_25:
  7344  001492  90D8               	bcf	status,0,c
  7345  001494  3603               	rlcf	??_CANreceiveMessage,f,c
  7346  001496  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7347  001498  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7348  00149A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7349  00149C  2EE8               	decfsz	wreg,f,c
  7350  00149E  D7F9               	goto	i1u381_25
  7351  0014A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7352  0014A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7353  0014A8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7354  0014AC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7355  0014B0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7356  0014B4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7357                           
  7358                           ; BSR set to: 15
  7359                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7360  0014B8  010F               	movlb	15	; () banked
  7361  0014BA  3952               	swapf	82,w,b	;volatile
  7362  0014BC  42E8               	rrncf	wreg,f,c
  7363  0014BE  0B07               	andlw	7
  7364  0014C0  0B07               	andlw	7
  7365  0014C2  6E0C               	movwf	CANreceiveMessage@tamp,c
  7366                           
  7367                           ; BSR set to: 15
  7368                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7369  0014C4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7370  0014C8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7371  0014CC  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7372  0014D0  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7373  0014D4  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7374  0014D8  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7375  0014DC  500C               	movf	CANreceiveMessage@tamp,w,c
  7376  0014DE  2403               	addwf	??_CANreceiveMessage,w,c
  7377  0014E0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7378  0014E2  0E00               	movlw	0
  7379  0014E4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7380  0014E6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7381  0014E8  0E00               	movlw	0
  7382  0014EA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7383  0014EC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7384  0014EE  0E00               	movlw	0
  7385  0014F0  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7386  0014F2  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7387  0014F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7388  0014F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7389  0014FC  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7390  001500  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7391  001504  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7392  001508  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7393                           
  7394                           ;inc\CANlib.h: 563: }
  7395  00150C  D08D               	goto	i1l3510
  7396  00150E                     i1l3484:
  7397                           
  7398                           ; BSR set to: 15
  7399                           ;inc\CANlib.h: 564: else
  7400                           ;inc\CANlib.h: 565: {
  7401                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7402  00150E  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7403  001512  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7404  001514  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7405  001516  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7406  001518  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7407  00151C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7408  001520  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7409  001524  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7410  001528  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7411  00152C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7412                           
  7413                           ; BSR set to: 15
  7414                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7415  001530  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7416  001534  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7417  001536  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7418  001538  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7419  00153A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7420  00153E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7421  001542  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7422  001546  6A03               	clrf	??_CANreceiveMessage,c
  7423  001548  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7424  00154C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7425  001550  5003               	movf	??_CANreceiveMessage,w,c
  7426  001552  26DE               	addwf	postinc2,f,c
  7427  001554  5004               	movf	??_CANreceiveMessage+1,w,c
  7428  001556  22DE               	addwfc	postinc2,f,c
  7429  001558  5005               	movf	??_CANreceiveMessage+2,w,c
  7430  00155A  22DE               	addwfc	postinc2,f,c
  7431  00155C  5006               	movf	??_CANreceiveMessage+3,w,c
  7432  00155E  22DE               	addwfc	postinc2,f,c
  7433                           
  7434                           ; BSR set to: 15
  7435                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7436  001560  010F               	movlb	15	; () banked
  7437  001562  A152               	btfss	82,0,b	;volatile
  7438  001564  D00C               	goto	i1l3492
  7439                           
  7440                           ; BSR set to: 15
  7441                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7442  001566  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7443  00156A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7444  00156E  0E00               	movlw	0
  7445  001570  12DE               	iorwf	postinc2,f,c
  7446  001572  0E00               	movlw	0
  7447  001574  12DE               	iorwf	postinc2,f,c
  7448  001576  0E01               	movlw	1
  7449  001578  12DE               	iorwf	postinc2,f,c
  7450  00157A  0E00               	movlw	0
  7451  00157C  12DE               	iorwf	postinc2,f,c
  7452  00157E                     i1l3492:
  7453                           
  7454                           ; BSR set to: 15
  7455                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7456  00157E  010F               	movlb	15	; () banked
  7457  001580  A352               	btfss	82,1,b	;volatile
  7458  001582  D00C               	goto	i1l3496
  7459                           
  7460                           ; BSR set to: 15
  7461                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7462  001584  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7463  001588  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7464  00158C  0E00               	movlw	0
  7465  00158E  12DE               	iorwf	postinc2,f,c
  7466  001590  0E00               	movlw	0
  7467  001592  12DE               	iorwf	postinc2,f,c
  7468  001594  0E02               	movlw	2
  7469  001596  12DE               	iorwf	postinc2,f,c
  7470  001598  0E00               	movlw	0
  7471  00159A  12DE               	iorwf	postinc2,f,c
  7472  00159C                     i1l3496:
  7473                           
  7474                           ; BSR set to: 15
  7475                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7476  00159C  010F               	movlb	15	; () banked
  7477  00159E  AB52               	btfss	82,5,b	;volatile
  7478  0015A0  D00C               	goto	i1l3500
  7479                           
  7480                           ; BSR set to: 15
  7481                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7482  0015A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7483  0015A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7484  0015AA  0E00               	movlw	0
  7485  0015AC  12DE               	iorwf	postinc2,f,c
  7486  0015AE  0E00               	movlw	0
  7487  0015B0  12DE               	iorwf	postinc2,f,c
  7488  0015B2  0E04               	movlw	4
  7489  0015B4  12DE               	iorwf	postinc2,f,c
  7490  0015B6  0E00               	movlw	0
  7491  0015B8  12DE               	iorwf	postinc2,f,c
  7492  0015BA                     i1l3500:
  7493                           
  7494                           ; BSR set to: 15
  7495                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7496  0015BA  010F               	movlb	15	; () banked
  7497  0015BC  AD52               	btfss	82,6,b	;volatile
  7498  0015BE  D00C               	goto	i1l3504
  7499                           
  7500                           ; BSR set to: 15
  7501                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7502  0015C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7503  0015C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7504  0015C8  0E00               	movlw	0
  7505  0015CA  12DE               	iorwf	postinc2,f,c
  7506  0015CC  0E00               	movlw	0
  7507  0015CE  12DE               	iorwf	postinc2,f,c
  7508  0015D0  0E08               	movlw	8
  7509  0015D2  12DE               	iorwf	postinc2,f,c
  7510  0015D4  0E00               	movlw	0
  7511  0015D6  12DE               	iorwf	postinc2,f,c
  7512  0015D8                     i1l3504:
  7513                           
  7514                           ; BSR set to: 15
  7515                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7516  0015D8  010F               	movlb	15	; () banked
  7517  0015DA  AF52               	btfss	82,7,b	;volatile
  7518  0015DC  D00C               	goto	i1l3508
  7519                           
  7520                           ; BSR set to: 15
  7521                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7522  0015DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7523  0015E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7524  0015E6  0E00               	movlw	0
  7525  0015E8  12DE               	iorwf	postinc2,f,c
  7526  0015EA  0E00               	movlw	0
  7527  0015EC  12DE               	iorwf	postinc2,f,c
  7528  0015EE  0E10               	movlw	16
  7529  0015F0  12DE               	iorwf	postinc2,f,c
  7530  0015F2  0E00               	movlw	0
  7531  0015F4  12DE               	iorwf	postinc2,f,c
  7532  0015F6                     i1l3508:
  7533                           
  7534                           ; BSR set to: 15
  7535                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7536  0015F6  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7537  0015FA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7538  0015FC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7539  0015FE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7540  001600  0E15               	movlw	21
  7541  001602                     i1u387_25:
  7542  001602  90D8               	bcf	status,0,c
  7543  001604  3603               	rlcf	??_CANreceiveMessage,f,c
  7544  001606  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7545  001608  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7546  00160A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7547  00160C  2EE8               	decfsz	wreg,f,c
  7548  00160E  D7F9               	goto	i1u387_25
  7549  001610  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7550  001614  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7551  001618  5003               	movf	??_CANreceiveMessage,w,c
  7552  00161A  12DE               	iorwf	postinc2,f,c
  7553  00161C  5004               	movf	??_CANreceiveMessage+1,w,c
  7554  00161E  12DE               	iorwf	postinc2,f,c
  7555  001620  5005               	movf	??_CANreceiveMessage+2,w,c
  7556  001622  12DE               	iorwf	postinc2,f,c
  7557  001624  5006               	movf	??_CANreceiveMessage+3,w,c
  7558  001626  12DE               	iorwf	postinc2,f,c
  7559  001628                     i1l3510:
  7560                           
  7561                           ; BSR set to: 15
  7562                           ;inc\CANlib.h: 581: }
  7563                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7564  001628  010F               	movlb	15	; () banked
  7565  00162A  9F50               	bcf	80,7,b	;volatile
  7566                           
  7567                           ; BSR set to: 15
  7568                           ;inc\CANlib.h: 584: return (error);
  7569                           ;	Return value of _CANreceiveMessage is never used
  7570  00162C  0012               	return	
  7571  00162E                     i1l420:
  7572                           
  7573                           ; BSR set to: 15
  7574                           ;inc\CANlib.h: 585: }
  7575                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7576  00162E  AE60               	btfss	3936,7,c	;volatile
  7577  001630  0012               	return	
  7578                           
  7579                           ; BSR set to: 15
  7580                           ;inc\CANlib.h: 588: {
  7581                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7582  001632  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7583  001636  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7584  00163A  6ADE               	clrf	postinc2,c
  7585  00163C  6ADE               	clrf	postinc2,c
  7586  00163E  6ADE               	clrf	postinc2,c
  7587  001640  6ADD               	clrf	postdec2,c
  7588                           
  7589                           ; BSR set to: 15
  7590                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7591  001642  EE20 F004          	lfsr	2,4
  7592  001646  5001               	movf	CANreceiveMessage@msg,w,c
  7593  001648  26D9               	addwf	fsr2l,f,c
  7594  00164A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7595  00164C  22DA               	addwfc	fsr2h,f,c
  7596  00164E  CF66 FFDF          	movff	3942,indf2	;volatile
  7597                           
  7598                           ; BSR set to: 15
  7599                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7600  001652  EE20 F005          	lfsr	2,5
  7601  001656  5001               	movf	CANreceiveMessage@msg,w,c
  7602  001658  26D9               	addwf	fsr2l,f,c
  7603  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7604  00165C  22DA               	addwfc	fsr2h,f,c
  7605  00165E  CF67 FFDF          	movff	3943,indf2	;volatile
  7606                           
  7607                           ; BSR set to: 15
  7608                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7609  001662  EE20 F006          	lfsr	2,6
  7610  001666  5001               	movf	CANreceiveMessage@msg,w,c
  7611  001668  26D9               	addwf	fsr2l,f,c
  7612  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7613  00166C  22DA               	addwfc	fsr2h,f,c
  7614  00166E  CF68 FFDF          	movff	3944,indf2	;volatile
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7618  001672  EE20 F007          	lfsr	2,7
  7619  001676  5001               	movf	CANreceiveMessage@msg,w,c
  7620  001678  26D9               	addwf	fsr2l,f,c
  7621  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7622  00167C  22DA               	addwfc	fsr2h,f,c
  7623  00167E  CF69 FFDF          	movff	3945,indf2	;volatile
  7624                           
  7625                           ; BSR set to: 15
  7626                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7627  001682  EE20 F008          	lfsr	2,8
  7628  001686  5001               	movf	CANreceiveMessage@msg,w,c
  7629  001688  26D9               	addwf	fsr2l,f,c
  7630  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7631  00168C  22DA               	addwfc	fsr2h,f,c
  7632  00168E  CF6A FFDF          	movff	3946,indf2	;volatile
  7633                           
  7634                           ; BSR set to: 15
  7635                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7636  001692  EE20 F009          	lfsr	2,9
  7637  001696  5001               	movf	CANreceiveMessage@msg,w,c
  7638  001698  26D9               	addwf	fsr2l,f,c
  7639  00169A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7640  00169C  22DA               	addwfc	fsr2h,f,c
  7641  00169E  CF6B FFDF          	movff	3947,indf2	;volatile
  7642                           
  7643                           ; BSR set to: 15
  7644                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7645  0016A2  EE20 F00A          	lfsr	2,10
  7646  0016A6  5001               	movf	CANreceiveMessage@msg,w,c
  7647  0016A8  26D9               	addwf	fsr2l,f,c
  7648  0016AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7649  0016AC  22DA               	addwfc	fsr2h,f,c
  7650  0016AE  CF6C FFDF          	movff	3948,indf2	;volatile
  7651                           
  7652                           ; BSR set to: 15
  7653                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7654  0016B2  EE20 F00B          	lfsr	2,11
  7655  0016B6  5001               	movf	CANreceiveMessage@msg,w,c
  7656  0016B8  26D9               	addwf	fsr2l,f,c
  7657  0016BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7658  0016BC  22DA               	addwfc	fsr2h,f,c
  7659  0016BE  CF6D FFDF          	movff	3949,indf2	;volatile
  7660                           
  7661                           ; BSR set to: 15
  7662                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7663  0016C2  EE20 F00E          	lfsr	2,14
  7664  0016C6  5001               	movf	CANreceiveMessage@msg,w,c
  7665  0016C8  26D9               	addwf	fsr2l,f,c
  7666  0016CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7667  0016CC  22DA               	addwfc	fsr2h,f,c
  7668  0016CE  AC65               	btfss	3941,6,c	;volatile
  7669  0016D0  D002               	goto	i1u389_20
  7670  0016D2  0E01               	movlw	1
  7671  0016D4  D001               	goto	i1u389_26
  7672  0016D6                     i1u389_20:
  7673  0016D6  0E00               	movlw	0
  7674  0016D8                     i1u389_26:
  7675  0016D8  6EDF               	movwf	indf2,c
  7676                           
  7677                           ; BSR set to: 15
  7678                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7679  0016DA  EE20 F00D          	lfsr	2,13
  7680  0016DE  5001               	movf	CANreceiveMessage@msg,w,c
  7681  0016E0  26D9               	addwf	fsr2l,f,c
  7682  0016E2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7683  0016E4  22DA               	addwfc	fsr2h,f,c
  7684  0016E6  5065               	movf	3941,w,c	;volatile
  7685  0016E8  0B0F               	andlw	15
  7686  0016EA  6EDF               	movwf	indf2,c
  7687                           
  7688                           ; BSR set to: 15
  7689                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7690  0016EC  EE20 F00C          	lfsr	2,12
  7691  0016F0  5001               	movf	CANreceiveMessage@msg,w,c
  7692  0016F2  26D9               	addwf	fsr2l,f,c
  7693  0016F4  5002               	movf	CANreceiveMessage@msg+1,w,c
  7694  0016F6  22DA               	addwfc	fsr2h,f,c
  7695  0016F8  A662               	btfss	3938,3,c	;volatile
  7696  0016FA  D002               	goto	i1u390_20
  7697  0016FC  0E01               	movlw	1
  7698  0016FE  D001               	goto	i1u390_26
  7699  001700                     i1u390_20:
  7700  001700  0E00               	movlw	0
  7701  001702                     i1u390_26:
  7702  001702  6EDF               	movwf	indf2,c
  7703                           
  7704                           ; BSR set to: 15
  7705                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7706  001704  B662               	btfsc	3938,3,c	;volatile
  7707  001706  D043               	goto	i1l3546
  7708                           
  7709                           ; BSR set to: 15
  7710                           ;inc\CANlib.h: 606: {
  7711                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7712  001708  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7713  00170C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7714  00170E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7715  001710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7716  001712  0E03               	movlw	3
  7717  001714                     i1u392_25:
  7718  001714  90D8               	bcf	status,0,c
  7719  001716  3603               	rlcf	??_CANreceiveMessage,f,c
  7720  001718  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7721  00171A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7722  00171C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7723  00171E  2EE8               	decfsz	wreg,f,c
  7724  001720  D7F9               	goto	i1u392_25
  7725  001722  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7726  001726  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7727  00172A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7728  00172E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7729  001732  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7730  001736  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7734  00173A  3862               	swapf	3938,w,c	;volatile
  7735  00173C  42E8               	rrncf	wreg,f,c
  7736  00173E  0B07               	andlw	7
  7737  001740  0B07               	andlw	7
  7738  001742  6E0C               	movwf	CANreceiveMessage@tamp,c
  7739                           
  7740                           ; BSR set to: 15
  7741                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7742  001744  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7743  001748  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7744  00174C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7745  001750  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7746  001754  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7747  001758  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7748  00175C  500C               	movf	CANreceiveMessage@tamp,w,c
  7749  00175E  2403               	addwf	??_CANreceiveMessage,w,c
  7750  001760  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7751  001762  0E00               	movlw	0
  7752  001764  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7753  001766  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7754  001768  0E00               	movlw	0
  7755  00176A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7756  00176C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7757  00176E  0E00               	movlw	0
  7758  001770  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7759  001772  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7760  001774  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7761  001778  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7762  00177C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7763  001780  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7764  001784  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7765  001788  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7766                           
  7767                           ;inc\CANlib.h: 610: }
  7768  00178C  D088               	goto	i1l3572
  7769  00178E                     i1l3546:
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;inc\CANlib.h: 611: else
  7773                           ;inc\CANlib.h: 612: {
  7774                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7775  00178E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7776  001792  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7777  001794  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7778  001796  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7779  001798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7780  00179C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7781  0017A0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7782  0017A4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7783  0017A8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7784  0017AC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7785                           
  7786                           ; BSR set to: 15
  7787                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7788  0017B0  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7789  0017B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7790  0017B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7791  0017B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7792  0017BA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7793  0017BE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7794  0017C2  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7795  0017C6  6A03               	clrf	??_CANreceiveMessage,c
  7796  0017C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7797  0017CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7798  0017D0  5003               	movf	??_CANreceiveMessage,w,c
  7799  0017D2  26DE               	addwf	postinc2,f,c
  7800  0017D4  5004               	movf	??_CANreceiveMessage+1,w,c
  7801  0017D6  22DE               	addwfc	postinc2,f,c
  7802  0017D8  5005               	movf	??_CANreceiveMessage+2,w,c
  7803  0017DA  22DE               	addwfc	postinc2,f,c
  7804  0017DC  5006               	movf	??_CANreceiveMessage+3,w,c
  7805  0017DE  22DE               	addwfc	postinc2,f,c
  7806                           
  7807                           ; BSR set to: 15
  7808                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7809  0017E0  A062               	btfss	3938,0,c	;volatile
  7810  0017E2  D00C               	goto	i1l3554
  7811                           
  7812                           ; BSR set to: 15
  7813                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7814  0017E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7815  0017E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7816  0017EC  0E00               	movlw	0
  7817  0017EE  12DE               	iorwf	postinc2,f,c
  7818  0017F0  0E00               	movlw	0
  7819  0017F2  12DE               	iorwf	postinc2,f,c
  7820  0017F4  0E01               	movlw	1
  7821  0017F6  12DE               	iorwf	postinc2,f,c
  7822  0017F8  0E00               	movlw	0
  7823  0017FA  12DE               	iorwf	postinc2,f,c
  7824  0017FC                     i1l3554:
  7825                           
  7826                           ; BSR set to: 15
  7827                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7828  0017FC  A262               	btfss	3938,1,c	;volatile
  7829  0017FE  D00C               	goto	i1l3558
  7830                           
  7831                           ; BSR set to: 15
  7832                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7833  001800  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7834  001804  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7835  001808  0E00               	movlw	0
  7836  00180A  12DE               	iorwf	postinc2,f,c
  7837  00180C  0E00               	movlw	0
  7838  00180E  12DE               	iorwf	postinc2,f,c
  7839  001810  0E02               	movlw	2
  7840  001812  12DE               	iorwf	postinc2,f,c
  7841  001814  0E00               	movlw	0
  7842  001816  12DE               	iorwf	postinc2,f,c
  7843  001818                     i1l3558:
  7844                           
  7845                           ; BSR set to: 15
  7846                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7847  001818  AA62               	btfss	3938,5,c	;volatile
  7848  00181A  D00C               	goto	i1l3562
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  7852  00181C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7853  001820  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7854  001824  0E00               	movlw	0
  7855  001826  12DE               	iorwf	postinc2,f,c
  7856  001828  0E00               	movlw	0
  7857  00182A  12DE               	iorwf	postinc2,f,c
  7858  00182C  0E04               	movlw	4
  7859  00182E  12DE               	iorwf	postinc2,f,c
  7860  001830  0E00               	movlw	0
  7861  001832  12DE               	iorwf	postinc2,f,c
  7862  001834                     i1l3562:
  7863                           
  7864                           ; BSR set to: 15
  7865                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  7866  001834  AC62               	btfss	3938,6,c	;volatile
  7867  001836  D00C               	goto	i1l3566
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  7871  001838  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7872  00183C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7873  001840  0E00               	movlw	0
  7874  001842  12DE               	iorwf	postinc2,f,c
  7875  001844  0E00               	movlw	0
  7876  001846  12DE               	iorwf	postinc2,f,c
  7877  001848  0E08               	movlw	8
  7878  00184A  12DE               	iorwf	postinc2,f,c
  7879  00184C  0E00               	movlw	0
  7880  00184E  12DE               	iorwf	postinc2,f,c
  7881  001850                     i1l3566:
  7882                           
  7883                           ; BSR set to: 15
  7884                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  7885  001850  AE62               	btfss	3938,7,c	;volatile
  7886  001852  D00C               	goto	i1l3570
  7887                           
  7888                           ; BSR set to: 15
  7889                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  7890  001854  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7891  001858  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7892  00185C  0E00               	movlw	0
  7893  00185E  12DE               	iorwf	postinc2,f,c
  7894  001860  0E00               	movlw	0
  7895  001862  12DE               	iorwf	postinc2,f,c
  7896  001864  0E10               	movlw	16
  7897  001866  12DE               	iorwf	postinc2,f,c
  7898  001868  0E00               	movlw	0
  7899  00186A  12DE               	iorwf	postinc2,f,c
  7900  00186C                     i1l3570:
  7901                           
  7902                           ; BSR set to: 15
  7903                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7904  00186C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7905  001870  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7906  001872  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7907  001874  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7908  001876  0E15               	movlw	21
  7909  001878                     i1u398_25:
  7910  001878  90D8               	bcf	status,0,c
  7911  00187A  3603               	rlcf	??_CANreceiveMessage,f,c
  7912  00187C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7913  00187E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7914  001880  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7915  001882  2EE8               	decfsz	wreg,f,c
  7916  001884  D7F9               	goto	i1u398_25
  7917  001886  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7918  00188A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7919  00188E  5003               	movf	??_CANreceiveMessage,w,c
  7920  001890  12DE               	iorwf	postinc2,f,c
  7921  001892  5004               	movf	??_CANreceiveMessage+1,w,c
  7922  001894  12DE               	iorwf	postinc2,f,c
  7923  001896  5005               	movf	??_CANreceiveMessage+2,w,c
  7924  001898  12DE               	iorwf	postinc2,f,c
  7925  00189A  5006               	movf	??_CANreceiveMessage+3,w,c
  7926  00189C  12DE               	iorwf	postinc2,f,c
  7927  00189E                     i1l3572:
  7928                           
  7929                           ; BSR set to: 15
  7930                           ;inc\CANlib.h: 629: }
  7931                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  7932  00189E  9E60               	bcf	3936,7,c	;volatile
  7933                           
  7934                           ; BSR set to: 15
  7935                           ;inc\CANlib.h: 632: return (error);
  7936                           ;	Return value of _CANreceiveMessage is never used
  7937  0018A0  0012               	return	
  7938  0018A2                     __end_of_CANreceiveMessage:
  7939                           	opt stack 0
  7940                           pclatu	equ	0xFFB
  7941                           pclath	equ	0xFFA
  7942                           tblptru	equ	0xFF8
  7943                           tblptrh	equ	0xFF7
  7944                           tblptrl	equ	0xFF6
  7945                           tablat	equ	0xFF5
  7946                           prodh	equ	0xFF4
  7947                           prodl	equ	0xFF3
  7948                           intcon	equ	0xFF2
  7949                           intcon2	equ	0xFF1
  7950                           intcon3	equ	0xFF0
  7951                           postinc0	equ	0xFEE
  7952                           fsr0h	equ	0xFEA
  7953                           fsr0l	equ	0xFE9
  7954                           wreg	equ	0xFE8
  7955                           postdec1	equ	0xFE5
  7956                           fsr1h	equ	0xFE2
  7957                           fsr1l	equ	0xFE1
  7958                           bsr	equ	0xFE0
  7959                           indf2	equ	0xFDF
  7960                           postinc2	equ	0xFDE
  7961                           postdec2	equ	0xFDD
  7962                           fsr2h	equ	0xFDA
  7963                           fsr2l	equ	0xFD9
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function _CANisRxReady *****************
  7967 ;; Defined at:
  7968 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      unsigned char 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7982 ;;      Params:         0       0       0       0
  7983 ;;      Locals:         1       0       0       0
  7984 ;;      Temps:          0       0       0       0
  7985 ;;      Totals:         1       0       0       0
  7986 ;;Total ram usage:        1 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    2
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_ISR_Bassa
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           	psect	text18
  7997  00283C                     __ptext18:
  7998                           	opt stack 0
  7999  00283C                     _CANisRxReady:
  8000                           	opt stack 24
  8001                           
  8002                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8003                           
  8004                           ; BSR set to: 15
  8005                           ;incstack = 0
  8006  00283C  0E01               	movlw	1
  8007  00283E  6E01               	movwf	_CANisRxReady$3086,c
  8008  002840  BE60               	btfsc	3936,7,c	;volatile
  8009  002842  D005               	goto	i1l571
  8010  002844  010F               	movlb	15	; () banked
  8011  002846  BF50               	btfsc	80,7,b	;volatile
  8012  002848  D002               	goto	i1l571
  8013                           
  8014                           ; BSR set to: 15
  8015  00284A  0E00               	movlw	0
  8016  00284C  6E01               	movwf	_CANisRxReady$3086,c
  8017  00284E                     i1l571:
  8018  00284E  5001               	movf	_CANisRxReady$3086,w,c
  8019  002850  0012               	return	
  8020  002852                     __end_of_CANisRxReady:
  8021                           	opt stack 0
  8022                           pclatu	equ	0xFFB
  8023                           pclath	equ	0xFFA
  8024                           tblptru	equ	0xFF8
  8025                           tblptrh	equ	0xFF7
  8026                           tblptrl	equ	0xFF6
  8027                           tablat	equ	0xFF5
  8028                           prodh	equ	0xFF4
  8029                           prodl	equ	0xFF3
  8030                           intcon	equ	0xFF2
  8031                           intcon2	equ	0xFF1
  8032                           intcon3	equ	0xFF0
  8033                           postinc0	equ	0xFEE
  8034                           fsr0h	equ	0xFEA
  8035                           fsr0l	equ	0xFE9
  8036                           wreg	equ	0xFE8
  8037                           postdec1	equ	0xFE5
  8038                           fsr1h	equ	0xFE2
  8039                           fsr1l	equ	0xFE1
  8040                           bsr	equ	0xFE0
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           postdec2	equ	0xFDD
  8044                           fsr2h	equ	0xFDA
  8045                           fsr2l	equ	0xFD9
  8046                           status	equ	0xFD8
  8047                           
  8048 ;; *************** function _ISR_Alta *****************
  8049 ;; Defined at:
  8050 ;;		line 131 in file "ABS_Code.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;		None               void
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8064 ;;      Params:         0       0       0       0
  8065 ;;      Locals:         0       0       0       0
  8066 ;;      Temps:          0      22       0       0
  8067 ;;      Totals:         0      22       0       0
  8068 ;;Total ram usage:       22 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; Hardware stack levels required when called:    1
  8071 ;; This function calls:
  8072 ;;		_WriteTimer0
  8073 ;;		i2___awdiv
  8074 ;;		i2___lldiv
  8075 ;;		i2___wmul
  8076 ;; This function is called by:
  8077 ;;		Interrupt level 2
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	intcode
  8082  000008                     __pintcode:
  8083                           	opt stack 0
  8084  000008                     _ISR_Alta:
  8085                           	opt stack 24
  8086                           
  8087                           ;incstack = 0
  8088  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8089  00000A  CFFA F0A4          	movff	pclath,??_ISR_Alta+8
  8090  00000E  CFFB F0A5          	movff	pclatu,??_ISR_Alta+9
  8091  000012  ED20  F00E         	call	int_func,f	;refresh shadow registers
  8092                           pclatu	equ	0xFFB
  8093                           pclath	equ	0xFFA
  8094                           tblptru	equ	0xFF8
  8095                           tblptrh	equ	0xFF7
  8096                           tblptrl	equ	0xFF6
  8097                           tablat	equ	0xFF5
  8098                           prodh	equ	0xFF4
  8099                           prodl	equ	0xFF3
  8100                           intcon	equ	0xFF2
  8101                           intcon2	equ	0xFF1
  8102                           intcon3	equ	0xFF0
  8103                           postinc0	equ	0xFEE
  8104                           fsr0h	equ	0xFEA
  8105                           fsr0l	equ	0xFE9
  8106                           wreg	equ	0xFE8
  8107                           postdec1	equ	0xFE5
  8108                           fsr1h	equ	0xFE2
  8109                           fsr1l	equ	0xFE1
  8110                           bsr	equ	0xFE0
  8111                           indf2	equ	0xFDF
  8112                           postinc2	equ	0xFDE
  8113                           postdec2	equ	0xFDD
  8114                           fsr2h	equ	0xFDA
  8115                           fsr2l	equ	0xFD9
  8116                           status	equ	0xFD8
  8117                           
  8118                           	psect	intcode_body
  8119  001C40                     __pintcode_body:
  8120                           	opt stack 24
  8121  001C40                     int_func:
  8122                           	opt stack 24
  8123  001C40  0006               	pop		; remove dummy address from shadow register refresh
  8124  001C42  CFE9 F0A6          	movff	fsr0l,??_ISR_Alta+10
  8125  001C46  CFEA F0A7          	movff	fsr0h,??_ISR_Alta+11
  8126  001C4A  CFE1 F0A8          	movff	fsr1l,??_ISR_Alta+12
  8127  001C4E  CFE2 F0A9          	movff	fsr1h,??_ISR_Alta+13
  8128  001C52  CFD9 F0AA          	movff	fsr2l,??_ISR_Alta+14
  8129  001C56  CFDA F0AB          	movff	fsr2h,??_ISR_Alta+15
  8130  001C5A  CFF3 F0AC          	movff	prodl,??_ISR_Alta+16
  8131  001C5E  CFF4 F0AD          	movff	prodh,??_ISR_Alta+17
  8132  001C62  CFF6 F0AE          	movff	tblptrl,??_ISR_Alta+18
  8133  001C66  CFF7 F0AF          	movff	tblptrh,??_ISR_Alta+19
  8134  001C6A  CFF8 F0B0          	movff	tblptru,??_ISR_Alta+20
  8135  001C6E  CFF5 F0B1          	movff	tablat,??_ISR_Alta+21
  8136                           
  8137                           ;ABS_Code.c: 133: if (INTCONbits.TMR0IF == 1) {
  8138  001C72  A4F2               	btfss	intcon,2,c	;volatile
  8139  001C74  D0AB               	goto	i2l4012
  8140                           
  8141                           ;ABS_Code.c: 134: PORTCbits.RC0 = ~PORTCbits.RC0;
  8142  001C76  A082               	btfss	3970,0,c	;volatile
  8143  001C78  D002               	goto	i2u450_40
  8144  001C7A  0E01               	movlw	1
  8145  001C7C  D001               	goto	i2u450_46
  8146  001C7E                     i2u450_40:
  8147  001C7E  0E00               	movlw	0
  8148  001C80                     i2u450_46:
  8149  001C80  0AFF               	xorlw	255
  8150  001C82  0100               	movlb	0	; () banked
  8151  001C84  6F9C               	movwf	??_ISR_Alta& (0+255),b
  8152  001C86  5082               	movf	3970,w,c	;volatile
  8153  001C88  0100               	movlb	0	; () banked
  8154  001C8A  199C               	xorwf	??_ISR_Alta& (0+255),w,b
  8155  001C8C  0BFE               	andlw	-2
  8156  001C8E  199C               	xorwf	??_ISR_Alta& (0+255),w,b
  8157  001C90  6E82               	movwf	3970,c	;volatile
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;ABS_Code.c: 135: if (PORTCbits.RC0 == 1) {
  8161  001C92  A082               	btfss	3970,0,c	;volatile
  8162  001C94  D094               	goto	i2l4008
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;ABS_Code.c: 136: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8166  001C96  0E40               	movlw	64
  8167  001C98  0100               	movlb	0	; () banked
  8168  001C9A  6F9C               	movwf	??_ISR_Alta& (0+255),b
  8169  001C9C  0E06               	movlw	6
  8170  001C9E  0100               	movlb	0	; () banked
  8171  001CA0  6F9D               	movwf	(??_ISR_Alta+1)& (0+255),b
  8172  001CA2  C03C  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8173  001CA6  6A1F               	clrf	i2___wmul@multiplier+1,c
  8174  001CA8  0E05               	movlw	5
  8175  001CAA  6E21               	movwf	i2___wmul@multiplicand+1,c
  8176  001CAC  0E78               	movlw	120
  8177  001CAE  6E20               	movwf	i2___wmul@multiplicand,c
  8178  001CB0  ECEE  F013         	call	i2___wmul	;wreg free
  8179  001CB4  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8180  001CB8  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8181  001CBC  0E00               	movlw	0
  8182  001CBE  6E27               	movwf	i2___awdiv@divisor+1,c
  8183  001CC0  0EB4               	movlw	180
  8184  001CC2  6E26               	movwf	i2___awdiv@divisor,c
  8185  001CC4  ECF0  F012         	call	i2___awdiv	;wreg free
  8186  001CC8  90D8               	bcf	status,0,c
  8187  001CCA  3624               	rlcf	?i2___awdiv,f,c
  8188  001CCC  3625               	rlcf	?i2___awdiv+1,f,c
  8189  001CCE  0100               	movlb	0	; () banked
  8190  001CD0  519C               	movf	??_ISR_Alta& (0+255),w,b
  8191  001CD2  2624               	addwf	?i2___awdiv,f,c
  8192  001CD4  0100               	movlb	0	; () banked
  8193  001CD6  519D               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8194  001CD8  2225               	addwfc	?i2___awdiv+1,f,c
  8195  001CDA  C024  F038         	movff	?i2___awdiv,_timer_on
  8196  001CDE  C025  F039         	movff	?i2___awdiv+1,_timer_on+1
  8197  001CE2  0E00               	movlw	0
  8198  001CE4  BE39               	btfsc	_timer_on+1,7,c
  8199  001CE6  0EFF               	movlw	-1
  8200  001CE8  6E3A               	movwf	_timer_on+2,c
  8201  001CEA  6E3B               	movwf	_timer_on+3,c
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;ABS_Code.c: 137: timer_off = 65536 - (40000 - timer_on);
  8205  001CEC  C038  F09C         	movff	_timer_on,??_ISR_Alta
  8206  001CF0  C039  F09D         	movff	_timer_on+1,??_ISR_Alta+1
  8207  001CF4  C03A  F09E         	movff	_timer_on+2,??_ISR_Alta+2
  8208  001CF8  C03B  F09F         	movff	_timer_on+3,??_ISR_Alta+3
  8209  001CFC  0100               	movlb	0	; () banked
  8210  001CFE  1F9C               	comf	??_ISR_Alta& (0+255),f,b
  8211  001D00  1F9D               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8212  001D02  1F9E               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8213  001D04  1F9F               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8214  001D06  2B9C               	incf	??_ISR_Alta& (0+255),f,b
  8215  001D08  0E00               	movlw	0
  8216  001D0A  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8217  001D0C  239E               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8218  001D0E  239F               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8219  001D10  0E40               	movlw	64
  8220  001D12  0100               	movlb	0	; () banked
  8221  001D14  259C               	addwf	??_ISR_Alta& (0+255),w,b
  8222  001D16  0100               	movlb	0	; () banked
  8223  001D18  6FA0               	movwf	(??_ISR_Alta+4)& (0+255),b
  8224  001D1A  0E9C               	movlw	156
  8225  001D1C  0100               	movlb	0	; () banked
  8226  001D1E  219D               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8227  001D20  0100               	movlb	0	; () banked
  8228  001D22  6FA1               	movwf	(??_ISR_Alta+5)& (0+255),b
  8229  001D24  0E00               	movlw	0
  8230  001D26  0100               	movlb	0	; () banked
  8231  001D28  219E               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8232  001D2A  0100               	movlb	0	; () banked
  8233  001D2C  6FA2               	movwf	(??_ISR_Alta+6)& (0+255),b
  8234  001D2E  0E00               	movlw	0
  8235  001D30  0100               	movlb	0	; () banked
  8236  001D32  219F               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8237  001D34  0100               	movlb	0	; () banked
  8238  001D36  6FA3               	movwf	(??_ISR_Alta+7)& (0+255),b
  8239  001D38  0100               	movlb	0	; () banked
  8240  001D3A  1FA0               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8241  001D3C  1FA1               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8242  001D3E  1FA2               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8243  001D40  1FA3               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8244  001D42  2BA0               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8245  001D44  0E00               	movlw	0
  8246  001D46  23A1               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8247  001D48  23A2               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8248  001D4A  23A3               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8249  001D4C  0E00               	movlw	0
  8250  001D4E  0100               	movlb	0	; () banked
  8251  001D50  25A0               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8252  001D52  6E34               	movwf	_timer_off,c
  8253  001D54  0E00               	movlw	0
  8254  001D56  0100               	movlb	0	; () banked
  8255  001D58  21A1               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8256  001D5A  6E35               	movwf	_timer_off+1,c
  8257  001D5C  0E01               	movlw	1
  8258  001D5E  0100               	movlb	0	; () banked
  8259  001D60  21A2               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8260  001D62  6E36               	movwf	_timer_off+2,c
  8261  001D64  0E00               	movlw	0
  8262  001D66  0100               	movlb	0	; () banked
  8263  001D68  21A3               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8264  001D6A  6E37               	movwf	_timer_off+3,c
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;ABS_Code.c: 138: timer_on = 65536 - timer_on;
  8268  001D6C  C038  F09C         	movff	_timer_on,??_ISR_Alta
  8269  001D70  C039  F09D         	movff	_timer_on+1,??_ISR_Alta+1
  8270  001D74  C03A  F09E         	movff	_timer_on+2,??_ISR_Alta+2
  8271  001D78  C03B  F09F         	movff	_timer_on+3,??_ISR_Alta+3
  8272  001D7C  0100               	movlb	0	; () banked
  8273  001D7E  1F9C               	comf	??_ISR_Alta& (0+255),f,b
  8274  001D80  1F9D               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8275  001D82  1F9E               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8276  001D84  1F9F               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8277  001D86  2B9C               	incf	??_ISR_Alta& (0+255),f,b
  8278  001D88  0E00               	movlw	0
  8279  001D8A  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8280  001D8C  239E               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8281  001D8E  239F               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8282  001D90  0E00               	movlw	0
  8283  001D92  0100               	movlb	0	; () banked
  8284  001D94  259C               	addwf	??_ISR_Alta& (0+255),w,b
  8285  001D96  6E38               	movwf	_timer_on,c
  8286  001D98  0E00               	movlw	0
  8287  001D9A  0100               	movlb	0	; () banked
  8288  001D9C  219D               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8289  001D9E  6E39               	movwf	_timer_on+1,c
  8290  001DA0  0E01               	movlw	1
  8291  001DA2  0100               	movlb	0	; () banked
  8292  001DA4  219E               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8293  001DA6  6E3A               	movwf	_timer_on+2,c
  8294  001DA8  0E00               	movlw	0
  8295  001DAA  0100               	movlb	0	; () banked
  8296  001DAC  219F               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8297  001DAE  6E3B               	movwf	_timer_on+3,c
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;ABS_Code.c: 139: WriteTimer0(timer_on);
  8301  001DB0  C038  F01E         	movff	_timer_on,WriteTimer0@timer0
  8302  001DB4  C039  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1
  8303  001DB8  EC29  F014         	call	_WriteTimer0	;wreg free
  8304                           
  8305                           ;ABS_Code.c: 140: } else {
  8306  001DBC  D006               	goto	i2l4010
  8307  001DBE                     i2l4008:
  8308                           
  8309                           ;ABS_Code.c: 141: WriteTimer0(timer_off);
  8310  001DBE  C034  F01E         	movff	_timer_off,WriteTimer0@timer0
  8311  001DC2  C035  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1
  8312  001DC6  EC29  F014         	call	_WriteTimer0	;wreg free
  8313  001DCA                     i2l4010:
  8314                           
  8315                           ;ABS_Code.c: 142: }
  8316                           ;ABS_Code.c: 143: INTCONbits.TMR0IF = 0;
  8317  001DCA  94F2               	bcf	intcon,2,c	;volatile
  8318  001DCC                     i2l4012:
  8319                           
  8320                           ;ABS_Code.c: 144: }
  8321                           ;ABS_Code.c: 147: if (INTCON3bits.INT1IF == 1) {
  8322  001DCC  A0F0               	btfss	intcon3,0,c	;volatile
  8323  001DCE  D047               	goto	i2l4036
  8324                           
  8325                           ;ABS_Code.c: 148: if (x == 0) {
  8326  001DD0  BA3D               	btfsc	_x/(0+8),_x& (0+7),c
  8327  001DD2  D006               	goto	i2l4020
  8328                           
  8329                           ;ABS_Code.c: 149: TMR1H = 0x00;
  8330  001DD4  0E00               	movlw	0
  8331  001DD6  6ECF               	movwf	4047,c	;volatile
  8332                           
  8333                           ;ABS_Code.c: 150: TMR1L = 0x00;
  8334  001DD8  0E00               	movlw	0
  8335  001DDA  6ECE               	movwf	4046,c	;volatile
  8336                           
  8337                           ;ABS_Code.c: 151: x = 1;
  8338  001DDC  8A3D               	bsf	_x/(0+8),_x& (0+7),c
  8339                           
  8340                           ;ABS_Code.c: 152: } else {
  8341  001DDE  D03E               	goto	i2l4034
  8342  001DE0                     i2l4020:
  8343                           
  8344                           ;ABS_Code.c: 153: gap_time_1 = (TMR1H * 256) + TMR1L;
  8345  001DE0  50CE               	movf	4046,w,c	;volatile
  8346  001DE2  CFCF F09C          	movff	4047,??_ISR_Alta	;volatile
  8347  001DE6  0100               	movlb	0	; () banked
  8348  001DE8  6B9D               	clrf	(??_ISR_Alta+1)& (0+255),b
  8349  001DEA  C09C  F09D         	movff	??_ISR_Alta,??_ISR_Alta+1
  8350  001DEE  0100               	movlb	0	; () banked
  8351  001DF0  6B9C               	clrf	??_ISR_Alta& (0+255),b
  8352  001DF2  0100               	movlb	0	; () banked
  8353  001DF4  279C               	addwf	??_ISR_Alta& (0+255),f,b
  8354  001DF6  0E00               	movlw	0
  8355  001DF8  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8356  001DFA  C09C  F02C         	movff	??_ISR_Alta,_gap_time_1
  8357  001DFE  C09D  F02D         	movff	??_ISR_Alta+1,_gap_time_1+1
  8358  001E02  0E00               	movlw	0
  8359  001E04  BE2D               	btfsc	_gap_time_1+1,7,c
  8360  001E06  0EFF               	movlw	-1
  8361  001E08  6E2E               	movwf	_gap_time_1+2,c
  8362  001E0A  6E2F               	movwf	_gap_time_1+3,c
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;ABS_Code.c: 154: gap_time_1 = gap_time_1 / 500;
  8366  001E0C  C02C  F01E         	movff	_gap_time_1,i2___lldiv@dividend
  8367  001E10  C02D  F01F         	movff	_gap_time_1+1,i2___lldiv@dividend+1
  8368  001E14  C02E  F020         	movff	_gap_time_1+2,i2___lldiv@dividend+2
  8369  001E18  C02F  F021         	movff	_gap_time_1+3,i2___lldiv@dividend+3
  8370  001E1C  0EF4               	movlw	244
  8371  001E1E  6E22               	movwf	i2___lldiv@divisor,c
  8372  001E20  0E01               	movlw	1
  8373  001E22  6E23               	movwf	i2___lldiv@divisor+1,c
  8374  001E24  0E00               	movlw	0
  8375  001E26  6E24               	movwf	i2___lldiv@divisor+2,c
  8376  001E28  0E00               	movlw	0
  8377  001E2A  6E25               	movwf	i2___lldiv@divisor+3,c
  8378  001E2C  EC32  F013         	call	i2___lldiv	;wreg free
  8379  001E30  C01E  F02C         	movff	?i2___lldiv,_gap_time_1
  8380  001E34  C01F  F02D         	movff	?i2___lldiv+1,_gap_time_1+1
  8381  001E38  C020  F02E         	movff	?i2___lldiv+2,_gap_time_1+2
  8382  001E3C  C021  F02F         	movff	?i2___lldiv+3,_gap_time_1+3
  8383                           
  8384                           ;ABS_Code.c: 155: ENC1_measure = 1;
  8385  001E40  803D               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  8386                           
  8387                           ;ABS_Code.c: 156: TMR1H = 0x00;
  8388  001E42  0E00               	movlw	0
  8389  001E44  6ECF               	movwf	4047,c	;volatile
  8390                           
  8391                           ;ABS_Code.c: 157: TMR1H = 0x00;
  8392  001E46  0E00               	movlw	0
  8393  001E48  6ECF               	movwf	4047,c	;volatile
  8394                           
  8395                           ;ABS_Code.c: 158: if (count_flag == 1) {
  8396  001E4A  A63D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8397  001E4C  D007               	goto	i2l4034
  8398                           
  8399                           ;ABS_Code.c: 159: int_counter_1++;
  8400  001E4E  0E01               	movlw	1
  8401  001E50  0100               	movlb	0	; () banked
  8402  001E52  2760               	addwf	_int_counter_1& (0+255),f,b
  8403  001E54  0E00               	movlw	0
  8404  001E56  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b
  8405  001E58  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b
  8406  001E5A  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b
  8407  001E5C                     i2l4034:
  8408                           
  8409                           ;ABS_Code.c: 160: }
  8410                           ;ABS_Code.c: 161: }
  8411                           ;ABS_Code.c: 162: INTCON3bits.INT1IF = 0;
  8412  001E5C  90F0               	bcf	intcon3,0,c	;volatile
  8413  001E5E                     i2l4036:
  8414                           
  8415                           ;ABS_Code.c: 163: }
  8416                           ;ABS_Code.c: 166: if (INTCON3bits.INT2IF == 1) {
  8417  001E5E  A2F0               	btfss	intcon3,1,c	;volatile
  8418  001E60  D047               	goto	i2l667
  8419                           
  8420                           ;ABS_Code.c: 167: if (y == 0) {
  8421  001E62  BC3D               	btfsc	_y/(0+8),_y& (0+7),c
  8422  001E64  D006               	goto	i2l4044
  8423                           
  8424                           ;ABS_Code.c: 168: TMR3H = 0x00;
  8425  001E66  0E00               	movlw	0
  8426  001E68  6EB3               	movwf	4019,c	;volatile
  8427                           
  8428                           ;ABS_Code.c: 169: TMR3L = 0x00;
  8429  001E6A  0E00               	movlw	0
  8430  001E6C  6EB2               	movwf	4018,c	;volatile
  8431                           
  8432                           ;ABS_Code.c: 170: y = 1;
  8433  001E6E  8C3D               	bsf	_y/(0+8),_y& (0+7),c
  8434                           
  8435                           ;ABS_Code.c: 171: } else {
  8436  001E70  D03E               	goto	i2l4058
  8437  001E72                     i2l4044:
  8438                           
  8439                           ;ABS_Code.c: 172: gap_time_2 = (TMR3H * 256) + TMR3L;
  8440  001E72  50B2               	movf	4018,w,c	;volatile
  8441  001E74  CFB3 F09C          	movff	4019,??_ISR_Alta	;volatile
  8442  001E78  0100               	movlb	0	; () banked
  8443  001E7A  6B9D               	clrf	(??_ISR_Alta+1)& (0+255),b
  8444  001E7C  C09C  F09D         	movff	??_ISR_Alta,??_ISR_Alta+1
  8445  001E80  0100               	movlb	0	; () banked
  8446  001E82  6B9C               	clrf	??_ISR_Alta& (0+255),b
  8447  001E84  0100               	movlb	0	; () banked
  8448  001E86  279C               	addwf	??_ISR_Alta& (0+255),f,b
  8449  001E88  0E00               	movlw	0
  8450  001E8A  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8451  001E8C  C09C  F030         	movff	??_ISR_Alta,_gap_time_2
  8452  001E90  C09D  F031         	movff	??_ISR_Alta+1,_gap_time_2+1
  8453  001E94  0E00               	movlw	0
  8454  001E96  BE31               	btfsc	_gap_time_2+1,7,c
  8455  001E98  0EFF               	movlw	-1
  8456  001E9A  6E32               	movwf	_gap_time_2+2,c
  8457  001E9C  6E33               	movwf	_gap_time_2+3,c
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;ABS_Code.c: 173: gap_time_2 = gap_time_2 / 500;
  8461  001E9E  C030  F01E         	movff	_gap_time_2,i2___lldiv@dividend
  8462  001EA2  C031  F01F         	movff	_gap_time_2+1,i2___lldiv@dividend+1
  8463  001EA6  C032  F020         	movff	_gap_time_2+2,i2___lldiv@dividend+2
  8464  001EAA  C033  F021         	movff	_gap_time_2+3,i2___lldiv@dividend+3
  8465  001EAE  0EF4               	movlw	244
  8466  001EB0  6E22               	movwf	i2___lldiv@divisor,c
  8467  001EB2  0E01               	movlw	1
  8468  001EB4  6E23               	movwf	i2___lldiv@divisor+1,c
  8469  001EB6  0E00               	movlw	0
  8470  001EB8  6E24               	movwf	i2___lldiv@divisor+2,c
  8471  001EBA  0E00               	movlw	0
  8472  001EBC  6E25               	movwf	i2___lldiv@divisor+3,c
  8473  001EBE  EC32  F013         	call	i2___lldiv	;wreg free
  8474  001EC2  C01E  F030         	movff	?i2___lldiv,_gap_time_2
  8475  001EC6  C01F  F031         	movff	?i2___lldiv+1,_gap_time_2+1
  8476  001ECA  C020  F032         	movff	?i2___lldiv+2,_gap_time_2+2
  8477  001ECE  C021  F033         	movff	?i2___lldiv+3,_gap_time_2+3
  8478                           
  8479                           ;ABS_Code.c: 174: ENC2_measure = 1;
  8480  001ED2  823D               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  8481                           
  8482                           ;ABS_Code.c: 175: TMR3H = 0x00;
  8483  001ED4  0E00               	movlw	0
  8484  001ED6  6EB3               	movwf	4019,c	;volatile
  8485                           
  8486                           ;ABS_Code.c: 176: TMR3H = 0x00;
  8487  001ED8  0E00               	movlw	0
  8488  001EDA  6EB3               	movwf	4019,c	;volatile
  8489                           
  8490                           ;ABS_Code.c: 177: if (count_flag == 1) {
  8491  001EDC  A63D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8492  001EDE  D007               	goto	i2l4058
  8493                           
  8494                           ;ABS_Code.c: 178: int_counter_2++;
  8495  001EE0  0E01               	movlw	1
  8496  001EE2  0100               	movlb	0	; () banked
  8497  001EE4  2764               	addwf	_int_counter_2& (0+255),f,b
  8498  001EE6  0E00               	movlw	0
  8499  001EE8  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b
  8500  001EEA  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b
  8501  001EEC  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b
  8502  001EEE                     i2l4058:
  8503                           
  8504                           ;ABS_Code.c: 179: }
  8505                           ;ABS_Code.c: 180: }
  8506                           ;ABS_Code.c: 181: INTCON3bits.INT2IF = 0;
  8507  001EEE  92F0               	bcf	intcon3,1,c	;volatile
  8508  001EF0                     i2l667:
  8509  001EF0  C0B1  FFF5         	movff	??_ISR_Alta+21,tablat
  8510  001EF4  C0B0  FFF8         	movff	??_ISR_Alta+20,tblptru
  8511  001EF8  C0AF  FFF7         	movff	??_ISR_Alta+19,tblptrh
  8512  001EFC  C0AE  FFF6         	movff	??_ISR_Alta+18,tblptrl
  8513  001F00  C0AD  FFF4         	movff	??_ISR_Alta+17,prodh
  8514  001F04  C0AC  FFF3         	movff	??_ISR_Alta+16,prodl
  8515  001F08  C0AB  FFDA         	movff	??_ISR_Alta+15,fsr2h
  8516  001F0C  C0AA  FFD9         	movff	??_ISR_Alta+14,fsr2l
  8517  001F10  C0A9  FFE2         	movff	??_ISR_Alta+13,fsr1h
  8518  001F14  C0A8  FFE1         	movff	??_ISR_Alta+12,fsr1l
  8519  001F18  C0A7  FFEA         	movff	??_ISR_Alta+11,fsr0h
  8520  001F1C  C0A6  FFE9         	movff	??_ISR_Alta+10,fsr0l
  8521  001F20  C0A5  FFFB         	movff	??_ISR_Alta+9,pclatu
  8522  001F24  C0A4  FFFA         	movff	??_ISR_Alta+8,pclath
  8523  001F28  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8524  001F2A  0011               	retfie		f
  8525  001F2C                     __end_of_ISR_Alta:
  8526                           	opt stack 0
  8527                           pclatu	equ	0xFFB
  8528                           pclath	equ	0xFFA
  8529                           tblptru	equ	0xFF8
  8530                           tblptrh	equ	0xFF7
  8531                           tblptrl	equ	0xFF6
  8532                           tablat	equ	0xFF5
  8533                           prodh	equ	0xFF4
  8534                           prodl	equ	0xFF3
  8535                           intcon	equ	0xFF2
  8536                           intcon2	equ	0xFF1
  8537                           intcon3	equ	0xFF0
  8538                           postinc0	equ	0xFEE
  8539                           fsr0h	equ	0xFEA
  8540                           fsr0l	equ	0xFE9
  8541                           wreg	equ	0xFE8
  8542                           postdec1	equ	0xFE5
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           bsr	equ	0xFE0
  8546                           indf2	equ	0xFDF
  8547                           postinc2	equ	0xFDE
  8548                           postdec2	equ	0xFDD
  8549                           fsr2h	equ	0xFDA
  8550                           fsr2l	equ	0xFD9
  8551                           status	equ	0xFD8
  8552                           
  8553 ;; *************** function i2___wmul *****************
  8554 ;; Defined at:
  8555 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  multiplier      2   29[COMRAM] unsigned int 
  8558 ;;  multiplicand    2   31[COMRAM] unsigned int 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  __wmul          2   33[COMRAM] unsigned int 
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  2   29[COMRAM] unsigned int 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2, status,0, prodl, prodh
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8570 ;;      Params:         4       0       0       0
  8571 ;;      Locals:         2       0       0       0
  8572 ;;      Temps:          0       0       0       0
  8573 ;;      Totals:         6       0       0       0
  8574 ;;Total ram usage:        6 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_ISR_Alta
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text20
  8584  0027DC                     __ptext20:
  8585                           	opt stack 0
  8586  0027DC                     i2___wmul:
  8587                           	opt stack 24
  8588                           
  8589                           ;incstack = 0
  8590  0027DC  501E               	movf	i2___wmul@multiplier,w,c
  8591  0027DE  0220               	mulwf	i2___wmul@multiplicand,c
  8592  0027E0  CFF3 F022          	movff	prodl,i2___wmul@product
  8593  0027E4  CFF4 F023          	movff	prodh,i2___wmul@product+1
  8594  0027E8  501E               	movf	i2___wmul@multiplier,w,c
  8595  0027EA  0221               	mulwf	i2___wmul@multiplicand+1,c
  8596  0027EC  50F3               	movf	prodl,w,c
  8597  0027EE  2623               	addwf	i2___wmul@product+1,f,c
  8598  0027F0  501F               	movf	i2___wmul@multiplier+1,w,c
  8599  0027F2  0220               	mulwf	i2___wmul@multiplicand,c
  8600  0027F4  50F3               	movf	prodl,w,c
  8601  0027F6  2623               	addwf	i2___wmul@product+1,f,c
  8602  0027F8  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  8603  0027FC  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  8604  002800  0012               	return	
  8605  002802                     __end_ofi2___wmul:
  8606                           	opt stack 0
  8607                           pclatu	equ	0xFFB
  8608                           pclath	equ	0xFFA
  8609                           tblptru	equ	0xFF8
  8610                           tblptrh	equ	0xFF7
  8611                           tblptrl	equ	0xFF6
  8612                           tablat	equ	0xFF5
  8613                           prodh	equ	0xFF4
  8614                           prodl	equ	0xFF3
  8615                           intcon	equ	0xFF2
  8616                           intcon2	equ	0xFF1
  8617                           intcon3	equ	0xFF0
  8618                           postinc0	equ	0xFEE
  8619                           fsr0h	equ	0xFEA
  8620                           fsr0l	equ	0xFE9
  8621                           wreg	equ	0xFE8
  8622                           postdec1	equ	0xFE5
  8623                           fsr1h	equ	0xFE2
  8624                           fsr1l	equ	0xFE1
  8625                           bsr	equ	0xFE0
  8626                           indf2	equ	0xFDF
  8627                           postinc2	equ	0xFDE
  8628                           postdec2	equ	0xFDD
  8629                           fsr2h	equ	0xFDA
  8630                           fsr2l	equ	0xFD9
  8631                           status	equ	0xFD8
  8632                           
  8633 ;; *************** function i2___lldiv *****************
  8634 ;; Defined at:
  8635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  dividend        4   29[COMRAM] unsigned long 
  8638 ;;  divisor         4   33[COMRAM] unsigned long 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  __lldiv         4   37[COMRAM] unsigned long 
  8641 ;;  __lldiv         1   41[COMRAM] unsigned char 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  4   29[COMRAM] unsigned long 
  8644 ;; Registers used:
  8645 ;;		wreg, status,2, status,0
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8651 ;;      Params:         8       0       0       0
  8652 ;;      Locals:         5       0       0       0
  8653 ;;      Temps:          0       0       0       0
  8654 ;;      Totals:        13       0       0       0
  8655 ;;Total ram usage:       13 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		_ISR_Alta
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text21
  8665  002664                     __ptext21:
  8666                           	opt stack 0
  8667  002664                     i2___lldiv:
  8668                           	opt stack 24
  8669                           
  8670                           ;incstack = 0
  8671  002664  0E00               	movlw	0
  8672  002666  6E26               	movwf	i2___lldiv@quotient,c
  8673  002668  0E00               	movlw	0
  8674  00266A  6E27               	movwf	i2___lldiv@quotient+1,c
  8675  00266C  0E00               	movlw	0
  8676  00266E  6E28               	movwf	i2___lldiv@quotient+2,c
  8677  002670  0E00               	movlw	0
  8678  002672  6E29               	movwf	i2___lldiv@quotient+3,c
  8679  002674  5022               	movf	i2___lldiv@divisor,w,c
  8680  002676  1023               	iorwf	i2___lldiv@divisor+1,w,c
  8681  002678  1024               	iorwf	i2___lldiv@divisor+2,w,c
  8682  00267A  1025               	iorwf	i2___lldiv@divisor+3,w,c
  8683  00267C  B4D8               	btfsc	status,2,c
  8684  00267E  D02A               	goto	i2l1076
  8685  002680  0E01               	movlw	1
  8686  002682  6E2A               	movwf	i2___lldiv@counter,c
  8687  002684  D006               	goto	i2l3816
  8688  002686                     i2l3814:
  8689  002686  90D8               	bcf	status,0,c
  8690  002688  3622               	rlcf	i2___lldiv@divisor,f,c
  8691  00268A  3623               	rlcf	i2___lldiv@divisor+1,f,c
  8692  00268C  3624               	rlcf	i2___lldiv@divisor+2,f,c
  8693  00268E  3625               	rlcf	i2___lldiv@divisor+3,f,c
  8694  002690  2A2A               	incf	i2___lldiv@counter,f,c
  8695  002692                     i2l3816:
  8696  002692  AE25               	btfss	i2___lldiv@divisor+3,7,c
  8697  002694  D7F8               	goto	i2l3814
  8698  002696                     i2l3818:
  8699  002696  90D8               	bcf	status,0,c
  8700  002698  3626               	rlcf	i2___lldiv@quotient,f,c
  8701  00269A  3627               	rlcf	i2___lldiv@quotient+1,f,c
  8702  00269C  3628               	rlcf	i2___lldiv@quotient+2,f,c
  8703  00269E  3629               	rlcf	i2___lldiv@quotient+3,f,c
  8704  0026A0  5022               	movf	i2___lldiv@divisor,w,c
  8705  0026A2  5C1E               	subwf	i2___lldiv@dividend,w,c
  8706  0026A4  5023               	movf	i2___lldiv@divisor+1,w,c
  8707  0026A6  581F               	subwfb	i2___lldiv@dividend+1,w,c
  8708  0026A8  5024               	movf	i2___lldiv@divisor+2,w,c
  8709  0026AA  5820               	subwfb	i2___lldiv@dividend+2,w,c
  8710  0026AC  5025               	movf	i2___lldiv@divisor+3,w,c
  8711  0026AE  5821               	subwfb	i2___lldiv@dividend+3,w,c
  8712  0026B0  A0D8               	btfss	status,0,c
  8713  0026B2  D009               	goto	i2l3826
  8714  0026B4  5022               	movf	i2___lldiv@divisor,w,c
  8715  0026B6  5E1E               	subwf	i2___lldiv@dividend,f,c
  8716  0026B8  5023               	movf	i2___lldiv@divisor+1,w,c
  8717  0026BA  5A1F               	subwfb	i2___lldiv@dividend+1,f,c
  8718  0026BC  5024               	movf	i2___lldiv@divisor+2,w,c
  8719  0026BE  5A20               	subwfb	i2___lldiv@dividend+2,f,c
  8720  0026C0  5025               	movf	i2___lldiv@divisor+3,w,c
  8721  0026C2  5A21               	subwfb	i2___lldiv@dividend+3,f,c
  8722  0026C4  8026               	bsf	i2___lldiv@quotient,0,c
  8723  0026C6                     i2l3826:
  8724  0026C6  90D8               	bcf	status,0,c
  8725  0026C8  3225               	rrcf	i2___lldiv@divisor+3,f,c
  8726  0026CA  3224               	rrcf	i2___lldiv@divisor+2,f,c
  8727  0026CC  3223               	rrcf	i2___lldiv@divisor+1,f,c
  8728  0026CE  3222               	rrcf	i2___lldiv@divisor,f,c
  8729  0026D0  2E2A               	decfsz	i2___lldiv@counter,f,c
  8730  0026D2  D7E1               	goto	i2l3818
  8731  0026D4                     i2l1076:
  8732  0026D4  C026  F01E         	movff	i2___lldiv@quotient,?i2___lldiv
  8733  0026D8  C027  F01F         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  8734  0026DC  C028  F020         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  8735  0026E0  C029  F021         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  8736  0026E4  0012               	return		;funcret
  8737  0026E6                     __end_ofi2___lldiv:
  8738                           	opt stack 0
  8739                           pclatu	equ	0xFFB
  8740                           pclath	equ	0xFFA
  8741                           tblptru	equ	0xFF8
  8742                           tblptrh	equ	0xFF7
  8743                           tblptrl	equ	0xFF6
  8744                           tablat	equ	0xFF5
  8745                           prodh	equ	0xFF4
  8746                           prodl	equ	0xFF3
  8747                           intcon	equ	0xFF2
  8748                           intcon2	equ	0xFF1
  8749                           intcon3	equ	0xFF0
  8750                           postinc0	equ	0xFEE
  8751                           fsr0h	equ	0xFEA
  8752                           fsr0l	equ	0xFE9
  8753                           wreg	equ	0xFE8
  8754                           postdec1	equ	0xFE5
  8755                           fsr1h	equ	0xFE2
  8756                           fsr1l	equ	0xFE1
  8757                           bsr	equ	0xFE0
  8758                           indf2	equ	0xFDF
  8759                           postinc2	equ	0xFDE
  8760                           postdec2	equ	0xFDD
  8761                           fsr2h	equ	0xFDA
  8762                           fsr2l	equ	0xFD9
  8763                           status	equ	0xFD8
  8764                           
  8765 ;; *************** function i2___awdiv *****************
  8766 ;; Defined at:
  8767 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  dividend        2   35[COMRAM] int 
  8770 ;;  divisor         2   37[COMRAM] int 
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;  __awdiv         2   41[COMRAM] int 
  8773 ;;  __awdiv         1   40[COMRAM] unsigned char 
  8774 ;;  __awdiv         1   39[COMRAM] unsigned char 
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  2   35[COMRAM] int 
  8777 ;; Registers used:
  8778 ;;		wreg, status,2, status,0
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8784 ;;      Params:         4       0       0       0
  8785 ;;      Locals:         4       0       0       0
  8786 ;;      Temps:          0       0       0       0
  8787 ;;      Totals:         8       0       0       0
  8788 ;;Total ram usage:        8 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		_ISR_Alta
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text22
  8798  0025E0                     __ptext22:
  8799                           	opt stack 0
  8800  0025E0                     i2___awdiv:
  8801                           	opt stack 24
  8802                           
  8803                           ;incstack = 0
  8804  0025E0  0E00               	movlw	0
  8805  0025E2  6E29               	movwf	i2___awdiv@sign,c
  8806  0025E4  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8807  0025E6  D006               	goto	i2l3772
  8808  0025E8  6C26               	negf	i2___awdiv@divisor,c
  8809  0025EA  1E27               	comf	i2___awdiv@divisor+1,f,c
  8810  0025EC  B0D8               	btfsc	status,0,c
  8811  0025EE  2A27               	incf	i2___awdiv@divisor+1,f,c
  8812  0025F0  0E01               	movlw	1
  8813  0025F2  6E29               	movwf	i2___awdiv@sign,c
  8814  0025F4                     i2l3772:
  8815  0025F4  AE25               	btfss	i2___awdiv@dividend+1,7,c
  8816  0025F6  D006               	goto	i2l3778
  8817  0025F8  6C24               	negf	i2___awdiv@dividend,c
  8818  0025FA  1E25               	comf	i2___awdiv@dividend+1,f,c
  8819  0025FC  B0D8               	btfsc	status,0,c
  8820  0025FE  2A25               	incf	i2___awdiv@dividend+1,f,c
  8821  002600  0E01               	movlw	1
  8822  002602  1A29               	xorwf	i2___awdiv@sign,f,c
  8823  002604                     i2l3778:
  8824  002604  0E00               	movlw	0
  8825  002606  6E2B               	movwf	i2___awdiv@quotient+1,c
  8826  002608  0E00               	movlw	0
  8827  00260A  6E2A               	movwf	i2___awdiv@quotient,c
  8828  00260C  5026               	movf	i2___awdiv@divisor,w,c
  8829  00260E  1027               	iorwf	i2___awdiv@divisor+1,w,c
  8830  002610  B4D8               	btfsc	status,2,c
  8831  002612  D01C               	goto	i2l3800
  8832  002614  0E01               	movlw	1
  8833  002616  6E28               	movwf	i2___awdiv@counter,c
  8834  002618  D004               	goto	i2l3786
  8835  00261A                     i2l3784:
  8836  00261A  90D8               	bcf	status,0,c
  8837  00261C  3626               	rlcf	i2___awdiv@divisor,f,c
  8838  00261E  3627               	rlcf	i2___awdiv@divisor+1,f,c
  8839  002620  2A28               	incf	i2___awdiv@counter,f,c
  8840  002622                     i2l3786:
  8841  002622  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8842  002624  D7FA               	goto	i2l3784
  8843  002626                     i2l3788:
  8844  002626  90D8               	bcf	status,0,c
  8845  002628  362A               	rlcf	i2___awdiv@quotient,f,c
  8846  00262A  362B               	rlcf	i2___awdiv@quotient+1,f,c
  8847  00262C  5026               	movf	i2___awdiv@divisor,w,c
  8848  00262E  5C24               	subwf	i2___awdiv@dividend,w,c
  8849  002630  5027               	movf	i2___awdiv@divisor+1,w,c
  8850  002632  5825               	subwfb	i2___awdiv@dividend+1,w,c
  8851  002634  A0D8               	btfss	status,0,c
  8852  002636  D005               	goto	i2l3796
  8853  002638  5026               	movf	i2___awdiv@divisor,w,c
  8854  00263A  5E24               	subwf	i2___awdiv@dividend,f,c
  8855  00263C  5027               	movf	i2___awdiv@divisor+1,w,c
  8856  00263E  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  8857  002640  802A               	bsf	i2___awdiv@quotient,0,c
  8858  002642                     i2l3796:
  8859  002642  90D8               	bcf	status,0,c
  8860  002644  3227               	rrcf	i2___awdiv@divisor+1,f,c
  8861  002646  3226               	rrcf	i2___awdiv@divisor,f,c
  8862  002648  2E28               	decfsz	i2___awdiv@counter,f,c
  8863  00264A  D7ED               	goto	i2l3788
  8864  00264C                     i2l3800:
  8865  00264C  5029               	movf	i2___awdiv@sign,w,c
  8866  00264E  B4D8               	btfsc	status,2,c
  8867  002650  D004               	goto	i2l3804
  8868  002652  6C2A               	negf	i2___awdiv@quotient,c
  8869  002654  1E2B               	comf	i2___awdiv@quotient+1,f,c
  8870  002656  B0D8               	btfsc	status,0,c
  8871  002658  2A2B               	incf	i2___awdiv@quotient+1,f,c
  8872  00265A                     i2l3804:
  8873  00265A  C02A  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  8874  00265E  C02B  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8875  002662  0012               	return	
  8876  002664                     __end_ofi2___awdiv:
  8877                           	opt stack 0
  8878                           pclatu	equ	0xFFB
  8879                           pclath	equ	0xFFA
  8880                           tblptru	equ	0xFF8
  8881                           tblptrh	equ	0xFF7
  8882                           tblptrl	equ	0xFF6
  8883                           tablat	equ	0xFF5
  8884                           prodh	equ	0xFF4
  8885                           prodl	equ	0xFF3
  8886                           intcon	equ	0xFF2
  8887                           intcon2	equ	0xFF1
  8888                           intcon3	equ	0xFF0
  8889                           postinc0	equ	0xFEE
  8890                           fsr0h	equ	0xFEA
  8891                           fsr0l	equ	0xFE9
  8892                           wreg	equ	0xFE8
  8893                           postdec1	equ	0xFE5
  8894                           fsr1h	equ	0xFE2
  8895                           fsr1l	equ	0xFE1
  8896                           bsr	equ	0xFE0
  8897                           indf2	equ	0xFDF
  8898                           postinc2	equ	0xFDE
  8899                           postdec2	equ	0xFDD
  8900                           fsr2h	equ	0xFDA
  8901                           fsr2l	equ	0xFD9
  8902                           status	equ	0xFD8
  8903                           
  8904 ;; *************** function _WriteTimer0 *****************
  8905 ;; Defined at:
  8906 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;  timer0          2   29[COMRAM] unsigned int 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  timer           2   31[COMRAM] struct Timers
  8911 ;; Return value:  Size  Location     Type
  8912 ;;		None               void
  8913 ;; Registers used:
  8914 ;;		None
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8920 ;;      Params:         2       0       0       0
  8921 ;;      Locals:         2       0       0       0
  8922 ;;      Temps:          0       0       0       0
  8923 ;;      Totals:         4       0       0       0
  8924 ;;Total ram usage:        4 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; This function calls:
  8927 ;;		Nothing
  8928 ;; This function is called by:
  8929 ;;		_ISR_Alta
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text23
  8934  002852                     __ptext23:
  8935                           	opt stack 0
  8936  002852                     _WriteTimer0:
  8937                           	opt stack 24
  8938                           
  8939                           ;incstack = 0
  8940  002852  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8941  002856  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8942  00285A  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8943  00285E  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8944  002862  0012               	return		;funcret
  8945  002864                     __end_of_WriteTimer0:
  8946                           	opt stack 0
  8947  0000                     pclatu	equ	0xFFB
  8948                           pclath	equ	0xFFA
  8949                           tblptru	equ	0xFF8
  8950                           tblptrh	equ	0xFF7
  8951                           tblptrl	equ	0xFF6
  8952                           tablat	equ	0xFF5
  8953                           prodh	equ	0xFF4
  8954                           prodl	equ	0xFF3
  8955                           intcon	equ	0xFF2
  8956                           intcon2	equ	0xFF1
  8957                           intcon3	equ	0xFF0
  8958                           postinc0	equ	0xFEE
  8959                           fsr0h	equ	0xFEA
  8960                           fsr0l	equ	0xFE9
  8961                           wreg	equ	0xFE8
  8962                           postdec1	equ	0xFE5
  8963                           fsr1h	equ	0xFE2
  8964                           fsr1l	equ	0xFE1
  8965                           bsr	equ	0xFE0
  8966                           indf2	equ	0xFDF
  8967                           postinc2	equ	0xFDE
  8968                           postdec2	equ	0xFDD
  8969                           fsr2h	equ	0xFDA
  8970                           fsr2l	equ	0xFD9
  8971                           status	equ	0xFD8
  8972                           pclatu	equ	0xFFB
  8973                           pclath	equ	0xFFA
  8974                           tblptru	equ	0xFF8
  8975                           tblptrh	equ	0xFF7
  8976                           tblptrl	equ	0xFF6
  8977                           tablat	equ	0xFF5
  8978                           prodh	equ	0xFF4
  8979                           prodl	equ	0xFF3
  8980                           intcon	equ	0xFF2
  8981                           intcon2	equ	0xFF1
  8982                           intcon3	equ	0xFF0
  8983                           postinc0	equ	0xFEE
  8984                           fsr0h	equ	0xFEA
  8985                           fsr0l	equ	0xFE9
  8986                           wreg	equ	0xFE8
  8987                           postdec1	equ	0xFE5
  8988                           fsr1h	equ	0xFE2
  8989                           fsr1l	equ	0xFE1
  8990                           bsr	equ	0xFE0
  8991                           indf2	equ	0xFDF
  8992                           postinc2	equ	0xFDE
  8993                           postdec2	equ	0xFDD
  8994                           fsr2h	equ	0xFDA
  8995                           fsr2l	equ	0xFD9
  8996                           status	equ	0xFD8
  8997                           
  8998                           	psect	rparam
  8999  0000                     pclatu	equ	0xFFB
  9000                           pclath	equ	0xFFA
  9001                           tblptru	equ	0xFF8
  9002                           tblptrh	equ	0xFF7
  9003                           tblptrl	equ	0xFF6
  9004                           tablat	equ	0xFF5
  9005                           prodh	equ	0xFF4
  9006                           prodl	equ	0xFF3
  9007                           intcon	equ	0xFF2
  9008                           intcon2	equ	0xFF1
  9009                           intcon3	equ	0xFF0
  9010                           postinc0	equ	0xFEE
  9011                           fsr0h	equ	0xFEA
  9012                           fsr0l	equ	0xFE9
  9013                           wreg	equ	0xFE8
  9014                           postdec1	equ	0xFE5
  9015                           fsr1h	equ	0xFE2
  9016                           fsr1l	equ	0xFE1
  9017                           bsr	equ	0xFE0
  9018                           indf2	equ	0xFDF
  9019                           postinc2	equ	0xFDE
  9020                           postdec2	equ	0xFDD
  9021                           fsr2h	equ	0xFDA
  9022                           fsr2l	equ	0xFD9
  9023                           status	equ	0xFD8
  9024                           
  9025                           	psect	temp
  9026  00003E                     btemp:
  9027                           	opt stack 0
  9028  00003E                     	ds	1
  9029  0000                     int$flags	set	btemp
  9030                           pclatu	equ	0xFFB
  9031                           pclath	equ	0xFFA
  9032                           tblptru	equ	0xFF8
  9033                           tblptrh	equ	0xFF7
  9034                           tblptrl	equ	0xFF6
  9035                           tablat	equ	0xFF5
  9036                           prodh	equ	0xFF4
  9037                           prodl	equ	0xFF3
  9038                           intcon	equ	0xFF2
  9039                           intcon2	equ	0xFF1
  9040                           intcon3	equ	0xFF0
  9041                           postinc0	equ	0xFEE
  9042                           fsr0h	equ	0xFEA
  9043                           fsr0l	equ	0xFE9
  9044                           wreg	equ	0xFE8
  9045                           postdec1	equ	0xFE5
  9046                           fsr1h	equ	0xFE2
  9047                           fsr1l	equ	0xFE1
  9048                           bsr	equ	0xFE0
  9049                           indf2	equ	0xFDF
  9050                           postinc2	equ	0xFDE
  9051                           postdec2	equ	0xFDD
  9052                           fsr2h	equ	0xFDA
  9053                           fsr2l	equ	0xFD9
  9054                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      61
    BANK0           160     48     117
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12347
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___lldiv
               _board_initialization
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 0     0      0    3552
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             22 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6705
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     771
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     621
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             36 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     570
                                             22 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1023
                                              0 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                          i2___lldiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lldiv                                           13     5      8     266
                                             29 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     352
                                             35 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___lldiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___lldiv
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     30      75       4       73.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2B      3D       1       64.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B2       9        0.0%
DATA                 0      0      B2      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jan 11 17:32:41 2016

           ??_CANisTXwarningON 00B2                              _x 01ED                              _y 01EE  
         __end_of_CANSetFilter 0C0A                   ___awdiv@sign 00B7                             bsr 000FE0  
          ___wmul@multiplicand 00B4                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                    __CFG_LVP$ON 000000  
                          l400 106E                            l403 1128                            l500 084E  
                          l412 12E2                            l404 112C                            l501 085A  
                          l413 12E6                            l405 1224                            l510 0966  
                          l502 085E                            l414 12F2                            l406 11B4  
                          l511 096A                            l503 086A                            l407 11BE  
                          l520 0A76                            l512 0976                            l408 11C8  
                          l521 0A82                            l513 097A                            l409 11D2  
                          l530 0B8E                            l522 0A86                            l514 0986  
                          l506 0946                            l450 1ADC                            l442 1A9C  
                          l531 0B92                            l523 0A92                            l507 094A  
                          l443 1AA0                            l532 0B9E                            l524 0A96  
                          l508 0956                            l460 1BE8                            l444 1AAC  
                          l380 0CCA                            l700 2264                            l533 0BA2  
                          l525 0AA2                            l517 0A62                            l509 095A  
                          l461 1BF4                            l453 1BB4                            l445 1AB0  
                          l373 0E8E                            l534 0BAE                            l518 0A66  
                          l454 1BB8                            l446 1ABC                            l390 0EA8  
                          l374 0C20                            l535 0BB2                            l519 0A72  
                          l455 1BC4                            l447 1AC0                            l391 0FA0  
                          l383 0DDA                            l375 0C24                            l536 0BBE  
                          l528 0B7E                            l480 0628                            l456 1BC8  
                          l448 1ACC                            l368 1FE8                            l392 0F30  
                          l384 0DDE                            l376 0D1C                            l713 2730  
                          l529 0B82                            l481 0634                            l473 05F4  
                          l457 1BD4                            l449 1AD0                            l369 1FF2  
                          l393 0F3A                            l385 0DEA                            l377 0CAC  
                          l705 2260                            l490 073E                            l474 05F8  
                          l458 1BD8                            l394 0F44                            l378 0CB6  
                          l491 0742                            l475 0604                            l459 1BE4  
                          l395 0F4E                            l379 0CC0                            l707 225C  
                          l492 074E                            l484 070E                            l476 0608  
                          l388 1112                            l485 0712                            l477 0614  
                          l389 0EA4                            l486 071E                            l478 0618  
                          l566 2820                            l398 105E                            l495 082A  
                          l487 0722                            l479 0624                            l399 1062  
                          l496 082E                            l488 072E                            l680 228E  
                          l497 083A                            l489 0732                            l498 083E  
                          l682 228A                            l499 084A                            l579 2798  
                          l683 2290                            l686 2298                            l687 22E2  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 007C                            wreg 000FE8                   __CFG_WDT$OFF 000000  
                         l1076 25CE                           l3022 09D0                           l3016 098A  
                         l3200 0DCE                           l3050 0AA6                           l3140 1FFE  
                         l3142 2042                           l3134 1FE0                           l3206 0DEE  
                         l3056 0AEC                           l3136 1FF6                           l3410 23DC  
                         l3420 240C                           l3404 23C6                           l3084 0BC2  
                         l3332 11DC                           l3180 0CD4                           l3416 23FA  
                         l3432 244A                           l3352 12D6                           l3256 0F58  
                         l3418 2406                           l2714 1A10                           l3282 1072  
                         l3436 245E                           l3428 243C                           l2740 1AE0  
                         l3276 1052                           l2814 027A                           l3358 12F6  
                         l3710 2180                           l2680 282E                           l2920 067E  
                         l2832 0334                           l3392 278A                           l2914 0638  
                         l2850 03EE                           l2746 1B26                           l3706 213E  
                         l2772 1BF8                           l3732 2250                           l3716 21BC  
                         l3742 2552                           l3744 2562                           l3754 25BC  
                         l3746 2568                           l2954 0798                           l2698 195A  
                         l2948 0752                           l2868 04A8                           l2796 01C2  
                         l2982 086E                           l2886 0562                           l3950 22D2  
                         l3942 22B4                           l3926 2272                           l3936 229E  
                         l3954 22E6                           l3946 22C2                           l2988 08B4  
                         l3966 2368                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           u4000 2878                           u2320 198C  
                         _LATD 000F8C                           _LATE 000F8D                           u3210 0BE2  
                         u3130 0AC6                           u3050 09AA                           u2410 1B00  
                         u2325 1980                           u3215 0BD6                           u3135 0ABA  
                         u3055 099E                           u2415 1AF4                           u2335 19EC  
                         u2600 02B0                           u2520 013E                           u2280 18D6  
                         u3340 0CF4                           u2605 02A4                           u2525 0132  
                         u2285 18CA                           u3350 0D40                           u2615 0310  
                         u2535 019E                           u2295 1936                           u2720 04DE  
                         u2640 036A                           u2560 01F6                           u3600 11FC  
                         u3345 0CE8                           u2810 0658                           u2490 1C18  
                         u3610 1248                           u3355 0D34                           u2725 04D2  
                         u2645 035E                           u2565 01EA                           u3605 11F0  
                         u3365 0DA0                           u3470 0F78                           u2815 064C  
                         u2735 053E                           u2655 03CA                           u2575 0256  
                         u2495 1C0C                           u3615 123C                           u2680 0424  
                         u3480 0FC4                           u3625 12A8                           u3475 0F6C  
                         u2685 0418                           u3485 0FB8                           u2695 0484  
                         u3495 1024                           u2970 088E                           u2890 0772  
                         u2975 0882                           u2895 0766                           u4587 278C  
                         u3990 286C            __size_of_CANSetMask 039E                           _main 2268  
                         _read 0078                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _step 0079  
                         btemp 003E               __end_of_ADC_Read 276C                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0100  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
             _CANOperationMode 2826                   _status_array 00CD                _brake_value_inc 0076  
         _remote_frame_handler 20F2     __size_of_CANreceiveMessage 050C                          ?_main 0001  
              __end_of___awdiv 2468                __end_of___lldiv 25E0                          _T0CON 000FD5  
              ___awdiv@divisor 00B4                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 00E8                          i1l420 162E                          i1l571 284E  
                        i1l673 00B4                          i1l676 00B8                          i2l667 1EF0  
              ___awdiv@counter 00B6                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2              _CANisRxReady$3086 0001                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1F2C  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 00C4  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 01E8           __end_of_CANisRxReady 2852  
                        tablat 000FF5           __end_of_CANisTxReady 2826               __end_ofi2___wmul 2802  
                        status 000FD8             __size_ofi2___awdiv 0084                 __CFG_PBADEN$ON 000000  
           __size_ofi2___lldiv 0082                __initialization 26E6              i2___lldiv@divisor 0022  
                 __end_of_main 23AA              i2___lldiv@counter 002A  __size_of_board_initialization 00BC  
             _brake_signal_CAN 0075          ?_remote_frame_handler 0001                         ??_main 00CC  
                __activetblptr 000002              _CANisTxReady$3084 00B2                         _ADCON1 000FC1  
                       _CANCON 000F6F                         _ADRESH 000FC4               ___awdiv@dividend 00B2  
              __CFG_BBSIZ$1024 000000                         i1l3500 15BA                         i1l3510 1628  
                       i1l3504 15D8                         i1l3508 15F6                         i1l3570 186C  
                       i1l3562 1834                         i1l3554 17FC                         i1l3546 178E  
                       i2l1076 26D4                         i1l3572 189E                         i1l3492 157E  
                       i1l3484 150E                         i1l3566 1850                         i1l3558 1818  
                       i1l3910 0066                         i1l3496 159C                         i2l4010 1DCA  
                       i2l4020 1DE0                         i2l4012 1DCC                         i1l3918 0096  
                       i2l4008 1DBE                         i2l4034 1E5C                         i2l4044 1E72  
                       i2l4036 1E5E                         i2l4058 1EEE                         i2l3800 264C  
                       i2l3804 265A                         i2l3814 2686                         i2l3816 2692  
                       i2l3826 26C6                         i2l3818 2696                         i2l3772 25F4  
                       i2l3784 261A                         i2l3786 2622                         i2l3778 2604  
                       i2l3796 2642                         i2l3788 2626                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 00B6             CANsendMessage@tamp 00BE              __end_of_ISR_Bassa 0100  
             __end_of_delay_ms 27A6          __size_of_CANSetFilter 0B06                 __CFG_XINST$OFF 000000  
                       ___wmul 27A6                      ??___awdiv 00B6                 __CFG_STVREN$ON 000000  
                    ??___lldiv 00BA                   ??_CANSetMask 00B7                         clear_0 26EC  
                       clear_1 26FA               ___awdiv@quotient 00B8                 i2___awdiv@sign 0029  
              __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 2664              __end_ofi2___lldiv 26E6  
                    ?_ADC_Read 0001                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 0077                   _CANSetFilter 0104  
                   __accesstop 0060        __end_of__initialization 2720             __end_of_CANSetMask 1C40  
                ___rparam_used 000001      __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001  
                    ?_ISR_Alta 0001             i2___lldiv@dividend 001E                   __pidataBANK0 287C  
       ??_remote_frame_handler 00C2                   _ENC1_measure 01E8          CANSetFilter@numBuffer 00BB  
                    ?i2___wmul 001E      __size_of_CANisTXwarningON 000C                   _ENC2_measure 01E9  
                   ??_ADC_Read 00BA          __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024  
     __end_of_CANOperationMode 283C             i2___lldiv@quotient 0026                     __pbssBANK0 0060  
      __size_of_CANsendMessage 078C                     ??_ISR_Alta 009C                        ?___wmul 00B2  
                   _gap_time_1 002C                     _gap_time_2 0030               WriteTimer0@timer 0020  
                ??_WriteTimer0 0020                   _CANisRxReady 283C                        _CANSTAT 000F6E  
                 _CANisTxReady 2802                        _BRGCON1 000F70                        _BRGCON2 000F71  
                      _BRGCON3 000F72                     ??i2___wmul 0022                  _int_counter_1 0060  
                _int_counter_2 0064         __size_of_CANInitialize 01C6                      ?_delay_ms 00B8  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25                     _distance_1 0070                     _distance_2 0072  
          CANsendMessage@flags 00B9                     _count_flag 01EB                        __Hparam 0000  
                      __Lparam 0000               delay_ms@value_ms 00B8                        ___awdiv 23AA  
                      ___lldiv 2524                __size_of___wmul 0036           CANInitialize@propSeg 00C9  
                      __pcinit 26E6                        __ramtop 0300                        __ptext0 2268  
                      __ptext1 20F2                        __ptext2 0C0A                        __ptext3 2802  
                      __ptext4 2468                        __ptext5 276C                        __ptext6 27A6  
                      __ptext7 1F2C                        __ptext8 18A2                        __ptext9 0104  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T3CONbits 000FB1  
          __end_of_WriteTimer0 2864                     ??_delay_ms 00BA         CANreceiveMessage@error 000B  
 __end_of_board_initialization 2524                 __pintcode_body 1C40           end_of_initialization 2720  
                _Analogic_Mode 0074                  __Lmediumconst 0000                        int_func 1C40  
          i2___wmul@multiplier 001E               _CANisRXwarningON 2870                  _CANInitialize 1F2C  
              ___lldiv@divisor 00B6                ___lldiv@counter 00BE                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTBbits 000F81                 CANSetMask@mask 00B2  
                    _PORTCbits 000F82              _correction_factor 006E                 CANSetMask@tamp 00BC  
               CANSetMask@type 00B6               _CANisTXwarningON 2864              __size_of_ADC_Read 003E  
                    i2___awdiv 25E0                      i2___lldiv 2664        _clock_counter_reference 006C  
               _CANsendMessage 0C0A               CANInitialize@BRP 00C3               CANInitialize@SJW 00C2  
               ?_CANInitialize 00C0             i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001  
            __size_of_ISR_Alta 1F24                 __end_of___wmul 27DC                    _WriteTimer0 2852  
             i2___wmul@product 0022            start_initialization 26E6             i2___awdiv@quotient 002A  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 00BB                     ?i2___awdiv 0024  
                   ?i2___lldiv 001E         __end_of_CANsendMessage 1396              ?_CANOperationMode 0001  
           ??_CANOperationMode 00B2     CANInitialize@FilterConfig1 00CA     CANInitialize@FilterConfig2 00CB  
         _board_initialization 2468                       ??___wmul 00B6                    __pdataBANK0 00CC  
             __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 0176             _brake_value_degree 003C  
       CANInitialize@phaseSeg1 00C0         CANInitialize@phaseSeg2 00C1                    __pbssCOMRAM 002C  
                __pcstackBANK0 009C                    _BRGCON2bits 000F71                    _BRGCON3bits 000F72  
            __size_of_delay_ms 003A                ?_CANsendMessage 00B2                ??_CANInitialize 00C5  
           CANSetFilter@filter 00B2          ?_board_initialization 0001                    ??_ISR_Bassa 000D  
                    __pintcode 0008                       ?___awdiv 00B2                       ?___lldiv 00B2  
                  __pintcodelo 0018              WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 287C  
                  _brake_value 009B                    _COMSTATbits 000F74                       _ADC_Read 272E  
                  ??i2___awdiv 0028                    ??i2___lldiv 0026          CANreceiveMessage@tamp 000C  
               ___wmul@product 00B6   _delay_quartz_frequency_value 00CC                       _IPR3bits 000FA5  
                     _PIE3bits 000FA3       __end_of_CANisTXwarningON 2870                       i1u381_25 1492  
                     i1u390_20 1700                       i1u390_26 1702                       i1u392_25 1714  
                     i1u378_20 144E                       i1u378_26 1450                       i1u379_20 147C  
                     i1u387_25 1602                       i1u379_26 147E                       i1u389_20 16D6  
                     i1u389_26 16D8                       i1u398_25 1878                       i2u450_40 1C7E  
                     i2u450_46 1C80                       _PIR2bits 000FA1                       _PIR3bits 000FA4  
                     _RXB0EIDH 000F63                       _RXB0EIDL 000F64                       _RXB1EIDH 000F53  
                     _RXB1EIDL 000F54                       _ISR_Alta 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0EIDH 000F02                       _RXB1SIDH 000F51                       _RXF0EIDL 000F03  
                     _RXB1SIDL 000F52                       _RXF1EIDH 000F06                       _RXF1EIDL 000F07  
                     _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E  
                     _RXF3EIDL 000F0F                       _RXF4EIDH 000F12                       _RXF4EIDL 000F13  
                     _RXF5EIDH 000F16                       _RXF5EIDL 000F17                       _RXF0SIDH 000F00  
                     _RXF0SIDL 000F01                       _TXB0EIDH 000F43                       _RXF1SIDH 000F04  
                     _TXB0EIDL 000F44                       _RXF1SIDL 000F05                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 0034                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 00B2                       i2___wmul 27DC              i2___awdiv@divisor 0026  
            i2___awdiv@counter 0028                  ?_CANSetFilter 00B2                    _INTCON2bits 000FF1  
                  _INTCON3bits 000FF0                      copy_data0 2714                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00CC  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52                     _CANSetMask 18A2  
             __size_of___awdiv 00BE          i2___wmul@multiplicand 0020               __size_of___lldiv 00BC  
              _remote_frame_id 0068                       _Tx_retry 01EA                   ?_WriteTimer0 001E  
                 _RXF0SIDLbits 000F01                       _delay_ms 276C                   _RXF1SIDLbits 000F05  
               ??_CANSetFilter 00B7                       __ptext10 2826                       __ptext11 2524  
                     __ptext20 27DC                       __ptext12 2864                       __ptext21 2664  
                     __ptext13 2870                       __ptext22 25E0                       __ptext14 272E  
                     __ptext23 2852                       __ptext15 23AA                       __ptext17 1396  
                     __ptext18 283C                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00B8  
                 _remote_frame 01EC                  __size_of_main 0142           CANreceiveMessage@msg 0001  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 0038  
                 _TXB2SIDLbits 000F22                       int$flags 003E      __size_of_CANOperationMode 0016  
                ?_CANisRxReady 0001                  ?_CANisTxReady 0001                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 1396                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 00BA                  _wheel_speed_1 007A  
                _wheel_speed_2 007B             ?_CANreceiveMessage 0001       CANsendMessage@identifier 00B2  
 __end_of_remote_frame_handler 2268                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 00BC               CANSetFilter@type 00B6            ??_CANreceiveMessage 0003  
             ___lldiv@dividend 00B2                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00B2                 ??_CANisRxReady 0001  
                  ?_CANSetMask 00B2                 ??_CANisTxReady 00B2                 _distance_array 008B  
    __end_of_CANreceiveMessage 18A2               ___lldiv@quotient 00BA              ?_CANisRXwarningON 0001  
                  _speed_array 0093             ??_CANisRXwarningON 00B2          __end_of_CANInitialize 20F2  
            ?_CANisTXwarningON 0001  
