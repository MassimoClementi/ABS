

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 27 17:48:13 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataBANK0
    41  00247A                     __pidataBANK0:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _delay_quartz_frequency_value
    45  00247A  14                 	db	20
    46                           
    47                           ;initializer for _status_array
    48  00247B  AA                 	db	170
    49  00247C  AA                 	db	170
    50  00247D  AA                 	db	170
    51  00247E  AA                 	db	170
    52  00247F  AA                 	db	170
    53  002480  AA                 	db	170
    54  002481  AA                 	db	170
    55  002482  AA                 	db	170
    56  0000                     _RXB1CON	set	3920
    57  0000                     _RXB1CONbits	set	3920
    58  0000                     _RXB1D0	set	3926
    59  0000                     _RXB1D1	set	3927
    60  0000                     _RXB1D2	set	3928
    61  0000                     _RXB1D3	set	3929
    62  0000                     _RXB1D4	set	3930
    63  0000                     _RXB1D5	set	3931
    64  0000                     _RXB1D6	set	3932
    65  0000                     _RXB1D7	set	3933
    66  0000                     _RXB1DLC	set	3925
    67  0000                     _RXB1DLCbits	set	3925
    68  0000                     _RXB1EIDH	set	3923
    69  0000                     _RXB1EIDL	set	3924
    70  0000                     _RXB1SIDH	set	3921
    71  0000                     _RXB1SIDL	set	3922
    72  0000                     _RXB1SIDLbits	set	3922
    73  0000                     _RXF0EIDH	set	3842
    74  0000                     _RXF0EIDL	set	3843
    75  0000                     _RXF0SIDH	set	3840
    76  0000                     _RXF0SIDL	set	3841
    77  0000                     _RXF0SIDLbits	set	3841
    78  0000                     _RXF1EIDH	set	3846
    79  0000                     _RXF1EIDL	set	3847
    80  0000                     _RXF1SIDH	set	3844
    81  0000                     _RXF1SIDL	set	3845
    82  0000                     _RXF1SIDLbits	set	3845
    83  0000                     _RXF2EIDH	set	3850
    84  0000                     _RXF2EIDL	set	3851
    85  0000                     _RXF2SIDH	set	3848
    86  0000                     _RXF2SIDL	set	3849
    87  0000                     _RXF2SIDLbits	set	3849
    88  0000                     _RXF3EIDH	set	3854
    89  0000                     _RXF3EIDL	set	3855
    90  0000                     _RXF3SIDH	set	3852
    91  0000                     _RXF3SIDL	set	3853
    92  0000                     _RXF3SIDLbits	set	3853
    93  0000                     _RXF4EIDH	set	3858
    94  0000                     _RXF4EIDL	set	3859
    95  0000                     _RXF4SIDH	set	3856
    96  0000                     _RXF4SIDL	set	3857
    97  0000                     _RXF4SIDLbits	set	3857
    98  0000                     _RXF5EIDH	set	3862
    99  0000                     _RXF5EIDL	set	3863
   100  0000                     _RXF5SIDH	set	3860
   101  0000                     _RXF5SIDL	set	3861
   102  0000                     _RXF5SIDLbits	set	3861
   103  0000                     _RXM0EIDH	set	3866
   104  0000                     _RXM0EIDL	set	3867
   105  0000                     _RXM0SIDH	set	3864
   106  0000                     _RXM0SIDL	set	3865
   107  0000                     _RXM0SIDLbits	set	3865
   108  0000                     _RXM1EIDH	set	3870
   109  0000                     _RXM1EIDL	set	3871
   110  0000                     _RXM1SIDH	set	3868
   111  0000                     _RXM1SIDL	set	3869
   112  0000                     _RXM1SIDLbits	set	3869
   113  0000                     _TXB0CONbits	set	3904
   114  0000                     _TXB0D0	set	3910
   115  0000                     _TXB0D1	set	3911
   116  0000                     _TXB0D2	set	3912
   117  0000                     _TXB0D3	set	3913
   118  0000                     _TXB0D4	set	3914
   119  0000                     _TXB0D5	set	3915
   120  0000                     _TXB0D6	set	3916
   121  0000                     _TXB0D7	set	3917
   122  0000                     _TXB0DLC	set	3909
   123  0000                     _TXB0DLCbits	set	3909
   124  0000                     _TXB0EIDH	set	3907
   125  0000                     _TXB0EIDL	set	3908
   126  0000                     _TXB0SIDH	set	3905
   127  0000                     _TXB0SIDL	set	3906
   128  0000                     _TXB0SIDLbits	set	3906
   129  0000                     _TXB1CONbits	set	3888
   130  0000                     _TXB1D0	set	3894
   131  0000                     _TXB1D1	set	3895
   132  0000                     _TXB1D2	set	3896
   133  0000                     _TXB1D3	set	3897
   134  0000                     _TXB1D4	set	3898
   135  0000                     _TXB1D5	set	3899
   136  0000                     _TXB1D6	set	3900
   137  0000                     _TXB1D7	set	3901
   138  0000                     _TXB1DLC	set	3893
   139  0000                     _TXB1DLCbits	set	3893
   140  0000                     _TXB1EIDH	set	3891
   141  0000                     _TXB1EIDL	set	3892
   142  0000                     _TXB1SIDH	set	3889
   143  0000                     _TXB1SIDL	set	3890
   144  0000                     _TXB1SIDLbits	set	3890
   145  0000                     _TXB2CONbits	set	3872
   146  0000                     _TXB2D0	set	3878
   147  0000                     _TXB2D1	set	3879
   148  0000                     _TXB2D2	set	3880
   149  0000                     _TXB2D3	set	3881
   150  0000                     _TXB2D4	set	3882
   151  0000                     _TXB2D5	set	3883
   152  0000                     _TXB2D6	set	3884
   153  0000                     _TXB2D7	set	3885
   154  0000                     _TXB2DLC	set	3877
   155  0000                     _TXB2DLCbits	set	3877
   156  0000                     _TXB2EIDH	set	3875
   157  0000                     _TXB2EIDL	set	3876
   158  0000                     _TXB2SIDH	set	3873
   159  0000                     _TXB2SIDL	set	3874
   160  0000                     _TXB2SIDLbits	set	3874
   161  0000                     _ADCON0bits	set	4034
   162  0000                     _ADCON1	set	4033
   163  0000                     _ADCON2bits	set	4032
   164  0000                     _ADRESH	set	4036
   165  0000                     _BRGCON1	set	3952
   166  0000                     _BRGCON2	set	3953
   167  0000                     _BRGCON2bits	set	3953
   168  0000                     _BRGCON3	set	3954
   169  0000                     _BRGCON3bits	set	3954
   170  0000                     _CANCON	set	3951
   171  0000                     _CANCONbits	set	3951
   172  0000                     _CANSTAT	set	3950
   173  0000                     _COMSTATbits	set	3956
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _INTCONbits	set	4082
   176  0000                     _IPR3bits	set	4005
   177  0000                     _LATA	set	3977
   178  0000                     _LATB	set	3978
   179  0000                     _LATC	set	3979
   180  0000                     _LATD	set	3980
   181  0000                     _LATE	set	3981
   182  0000                     _PIE3bits	set	4003
   183  0000                     _PIR2bits	set	4001
   184  0000                     _PIR3bits	set	4004
   185  0000                     _PORTBbits	set	3969
   186  0000                     _PORTCbits	set	3970
   187  0000                     _RCONbits	set	4048
   188  0000                     _RXB0CON	set	3936
   189  0000                     _RXB0CONbits	set	3936
   190  0000                     _RXB0D0	set	3942
   191  0000                     _RXB0D1	set	3943
   192  0000                     _RXB0D2	set	3944
   193  0000                     _RXB0D3	set	3945
   194  0000                     _RXB0D4	set	3946
   195  0000                     _RXB0D5	set	3947
   196  0000                     _RXB0D6	set	3948
   197  0000                     _RXB0D7	set	3949
   198  0000                     _RXB0DLC	set	3941
   199  0000                     _RXB0DLCbits	set	3941
   200  0000                     _RXB0EIDH	set	3939
   201  0000                     _RXB0EIDL	set	3940
   202  0000                     _RXB0SIDH	set	3937
   203  0000                     _RXB0SIDL	set	3938
   204  0000                     _RXB0SIDLbits	set	3938
   205  0000                     _RXERRCNT	set	3957
   206  0000                     _T0CON	set	4053
   207  0000                     _T0CONbits	set	4053
   208  0000                     _T3CON	set	4017
   209  0000                     _TMR0H	set	4055
   210  0000                     _TMR0L	set	4054
   211  0000                     _TRISA	set	3986
   212  0000                     _TRISB	set	3987
   213  0000                     _TRISC	set	3988
   214  0000                     _TRISD	set	3989
   215  0000                     _TRISE	set	3990
   216  0000                     _TXERRCNT	set	3958
   217                           
   218                           ; #config settings
   219  0000                     
   220                           	psect	cinit
   221  0022E4                     __pcinit:
   222                           	opt stack 0
   223  0022E4                     start_initialization:
   224                           	opt stack 0
   225  0022E4                     __initialization:
   226                           	opt stack 0
   227                           
   228                           ; Clear objects allocated to BANK0 (14 bytes)
   229  0022E4  EE00  F094         	lfsr	0,__pbssBANK0
   230  0022E8  0E0E               	movlw	14
   231  0022EA                     clear_0:
   232  0022EA  6AEE               	clrf	postinc0,c
   233  0022EC  06E8               	decf	wreg,f,c
   234  0022EE  E1FD               	bnz	clear_0
   235                           
   236                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   237  0022F0  6A40               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   238                           
   239                           ; Clear objects allocated to COMRAM (24 bytes)
   240  0022F2  EE00  F028         	lfsr	0,__pbssCOMRAM
   241  0022F6  0E18               	movlw	24
   242  0022F8                     clear_1:
   243  0022F8  6AEE               	clrf	postinc0,c
   244  0022FA  06E8               	decf	wreg,f,c
   245  0022FC  E1FD               	bnz	clear_1
   246                           
   247                           ; Initialize objects allocated to BANK0 (9 bytes)
   248                           ; load TBLPTR registers with __pidataBANK0
   249  0022FE  0E7A               	movlw	low __pidataBANK0
   250  002300  6EF6               	movwf	tblptrl,c
   251  002302  0E24               	movlw	high __pidataBANK0
   252  002304  6EF7               	movwf	tblptrh,c
   253  002306  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   254  002308  6EF8               	movwf	tblptru,c
   255  00230A  EE00  F0A2         	lfsr	0,__pdataBANK0
   256  00230E  EE10 F009          	lfsr	1,9
   257  002312                     copy_data0:
   258  002312  0009               	tblrd		*+
   259  002314  CFF5 FFEE          	movff	tablat,postinc0
   260  002318  50E5               	movf	postdec1,w,c
   261  00231A  50E1               	movf	fsr1l,w,c
   262  00231C  E1FA               	bnz	copy_data0
   263  00231E                     end_of_initialization:
   264                           	opt stack 0
   265  00231E                     __end_of__initialization:
   266                           	opt stack 0
   267  00231E  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  002320  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  002322  0E00               	movlw	low (__Lmediumconst shr (0+16))
   270  002324  6EF8               	movwf	tblptru,c
   271  002326  0100               	movlb	0
   272  002328  EF43  F010         	goto	_main	;jump to C main() function
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bitbssCOMRAM
   283  000200                     __pbitbssCOMRAM:
   284                           	opt stack 0
   285  000200                     _Tx_retry:
   286                           	opt stack 0
   287  000200                     	ds	1
   288  000201                     _remote_frame:
   289                           	opt stack 0
   290  000201                     	ds	1
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bssCOMRAM
   301  000028                     __pbssCOMRAM:
   302                           	opt stack 0
   303  000028                     _timer_off:
   304                           	opt stack 0
   305  000028                     	ds	4
   306  00002C                     _timer_on:
   307                           	opt stack 0
   308  00002C                     	ds	4
   309  000030                     _msg:
   310                           	opt stack 0
   311  000030                     	ds	15
   312  00003F                     _brake_value_degree:
   313                           	opt stack 0
   314  00003F                     	ds	1
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1l	equ	0xFE1
   323                           
   324                           	psect	bssBANK0
   325  000094                     __pbssBANK0:
   326                           	opt stack 0
   327  000094                     _remote_frame_id:
   328                           	opt stack 0
   329  000094                     	ds	4
   330  000098                     _clock_counter_reference:
   331                           	opt stack 0
   332  000098                     	ds	2
   333  00009A                     _correction_factor:
   334                           	opt stack 0
   335  00009A                     	ds	2
   336  00009C                     _Analogic_Mode:
   337                           	opt stack 0
   338  00009C                     	ds	1
   339  00009D                     _brake_signal_CAN:
   340                           	opt stack 0
   341  00009D                     	ds	1
   342  00009E                     _brake_value_inc:
   343                           	opt stack 0
   344  00009E                     	ds	1
   345  00009F                     _home_position:
   346                           	opt stack 0
   347  00009F                     	ds	1
   348  0000A0                     _read:
   349                           	opt stack 0
   350  0000A0                     	ds	1
   351  0000A1                     _brake_value:
   352                           	opt stack 0
   353  0000A1                     	ds	1
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	dataBANK0
   364  0000A2                     __pdataBANK0:
   365                           	opt stack 0
   366  0000A2                     _delay_quartz_frequency_value:
   367                           	opt stack 0
   368  0000A2                     	ds	1
   369  0000A3                     _status_array:
   370                           	opt stack 0
   371  0000A3                     	ds	8
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	cstackBANK0
   382  000060                     __pcstackBANK0:
   383                           	opt stack 0
   384  000060                     i2___awdiv@counter:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x0
   388  000060                     	ds	1
   389  000061                     i2___awdiv@sign:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x1
   393  000061                     	ds	1
   394  000062                     i2___awdiv@quotient:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  000062                     	ds	2
   399  000064                     ??_ISR_Alta:
   400                           
   401                           ; 0 bytes @ 0x4
   402  000064                     	ds	22
   403  00007A                     ?___wmul:
   404                           	opt stack 0
   405  00007A                     ?___awdiv:
   406                           	opt stack 0
   407  00007A                     CANOperationMode@mode:
   408                           	opt stack 0
   409  00007A                     _CANisTxReady$2910:
   410                           	opt stack 0
   411  00007A                     ___wmul@multiplier:
   412                           	opt stack 0
   413  00007A                     ___awdiv@dividend:
   414                           	opt stack 0
   415  00007A                     CANsendMessage@identifier:
   416                           	opt stack 0
   417  00007A                     CANSetMask@mask:
   418                           	opt stack 0
   419  00007A                     CANSetFilter@filter:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x1A
   423  00007A                     	ds	2
   424  00007C                     ___wmul@multiplicand:
   425                           	opt stack 0
   426  00007C                     ___awdiv@divisor:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x1C
   430  00007C                     	ds	2
   431  00007E                     CANSetMask@type:
   432                           	opt stack 0
   433  00007E                     CANSetFilter@type:
   434                           	opt stack 0
   435  00007E                     ___awdiv@counter:
   436                           	opt stack 0
   437  00007E                     CANsendMessage@data:
   438                           	opt stack 0
   439  00007E                     ___wmul@product:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1E
   443  00007E                     	ds	1
   444  00007F                     ??_CANSetMask:
   445  00007F                     ??_CANSetFilter:
   446  00007F                     ___awdiv@sign:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x1F
   450  00007F                     	ds	1
   451  000080                     CANsendMessage@dataLength:
   452                           	opt stack 0
   453  000080                     delay_ms@value_ms:
   454                           	opt stack 0
   455  000080                     ___awdiv@quotient:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x20
   459  000080                     	ds	1
   460  000081                     CANsendMessage@flags:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x21
   464  000081                     	ds	1
   465  000082                     ??_CANsendMessage:
   466  000082                     
   467                           ; 0 bytes @ 0x22
   468  000082                     	ds	1
   469  000083                     CANSetMask@numBuffer:
   470                           	opt stack 0
   471  000083                     CANSetFilter@numBuffer:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0x23
   475  000083                     	ds	1
   476  000084                     CANSetMask@tamp:
   477                           	opt stack 0
   478  000084                     CANSetFilter@tamp:
   479                           	opt stack 0
   480                           
   481                           ; 4 bytes @ 0x24
   482  000084                     	ds	2
   483  000086                     CANsendMessage@tamp:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x26
   487  000086                     	ds	2
   488  000088                     CANInitialize@phaseSeg1:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x28
   492  000088                     	ds	1
   493  000089                     CANInitialize@phaseSeg2:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x29
   497  000089                     	ds	1
   498  00008A                     CANInitialize@SJW:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x2A
   502  00008A                     	ds	1
   503  00008B                     CANInitialize@BRP:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x2B
   507  00008B                     	ds	1
   508  00008C                     CANInitialize@flags:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x2C
   512  00008C                     	ds	1
   513  00008D                     ??_CANInitialize:
   514                           
   515                           ; 0 bytes @ 0x2D
   516  00008D                     	ds	4
   517  000091                     CANInitialize@propSeg:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x31
   521  000091                     	ds	1
   522  000092                     CANInitialize@FilterConfig1:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x32
   526  000092                     	ds	1
   527  000093                     CANInitialize@FilterConfig2:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x33
   531  000093                     	ds	1
   532  000094                     tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           
   541                           ; 0 bytes @ 0x34
   542                           
   543                           	psect	cstackCOMRAM
   544  000001                     __pcstackCOMRAM:
   545                           	opt stack 0
   546  000001                     _CANisRxReady$2912:
   547                           	opt stack 0
   548  000001                     CANreceiveMessage@msg:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x0
   552  000001                     	ds	2
   553  000003                     ??_CANreceiveMessage:
   554                           
   555                           ; 0 bytes @ 0x2
   556  000003                     	ds	8
   557  00000B                     CANreceiveMessage@error:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0xA
   561  00000B                     	ds	1
   562  00000C                     CANreceiveMessage@tamp:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0xB
   566  00000C                     	ds	1
   567  00000D                     ??_ISR_Bassa:
   568                           
   569                           ; 0 bytes @ 0xC
   570  00000D                     	ds	17
   571  00001E                     ?i2___wmul:
   572                           	opt stack 0
   573  00001E                     WriteTimer0@timer0:
   574                           	opt stack 0
   575  00001E                     i2___wmul@multiplier:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x1D
   579  00001E                     	ds	2
   580  000020                     WriteTimer0@timer:
   581                           	opt stack 0
   582  000020                     i2___wmul@multiplicand:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x1F
   586  000020                     	ds	2
   587  000022                     i2___wmul@product:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x21
   591  000022                     	ds	2
   592  000024                     ?i2___awdiv:
   593                           	opt stack 0
   594  000024                     i2___awdiv@dividend:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x23
   598  000024                     	ds	2
   599  000026                     i2___awdiv@divisor:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x25
   603  000026                     	ds	2
   604  000028                     tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           postdec1	equ	0xFE5
   611                           fsr1l	equ	0xFE1
   612                           
   613                           ; 0 bytes @ 0x27
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 139 in file "ABS_Code.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  2  622[None  ] int 
   626 ;; Registers used:
   627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   633 ;;      Params:         0       0       0       0
   634 ;;      Locals:         0       0       0       0
   635 ;;      Temps:          0       0       0       0
   636 ;;      Totals:         0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels required when called:    7
   639 ;; This function calls:
   640 ;;		_ADC_Read
   641 ;;		_CANisRXwarningON
   642 ;;		_CANisTXwarningON
   643 ;;		___awdiv
   644 ;;		_board_initialization
   645 ;;		_status_ok
   646 ;; This function is called by:
   647 ;;		Startup code after reset
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text0
   652  002086                     __ptext0:
   653                           	opt stack 0
   654  002086                     _main:
   655                           	opt stack 24
   656                           
   657                           ;ABS_Code.c: 140: board_initialization();
   658                           
   659                           ;incstack = 0
   660  002086  ECA0  F010         	call	_board_initialization	;wreg free
   661  00208A                     l3581:
   662                           
   663                           ;ABS_Code.c: 144: ADC_Read();
   664  00208A  EC96  F011         	call	_ADC_Read	;wreg free
   665                           
   666                           ;ABS_Code.c: 146: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   667  00208E  EC31  F012         	call	_CANisTXwarningON	;wreg free
   668  002092  06E8               	decf	wreg,f,c
   669  002094  B4D8               	btfsc	status,2,c
   670  002096  D005               	goto	l626
   671  002098  EC37  F012         	call	_CANisRXwarningON	;wreg free
   672  00209C  06E8               	decf	wreg,f,c
   673  00209E  A4D8               	btfss	status,2,c
   674  0020A0  D002               	goto	l624
   675  0020A2                     l626:
   676                           
   677                           ;ABS_Code.c: 147: PORTBbits.RB0 = 1;
   678  0020A2  8081               	bsf	3969,0,c	;volatile
   679                           
   680                           ;ABS_Code.c: 148: } else {
   681  0020A4  D001               	goto	l627
   682  0020A6                     l624:
   683                           
   684                           ;ABS_Code.c: 149: PORTBbits.RB0 = 0;
   685  0020A6  9081               	bcf	3969,0,c	;volatile
   686  0020A8                     l627:
   687                           
   688                           ;ABS_Code.c: 150: }
   689                           ;ABS_Code.c: 152: if ((remote_frame == 1) || (Tx_retry == 1)) {
   690  0020A8  A240               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   691  0020AA  B040               	btfsc	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   692  0020AC  D001               	goto	l3589
   693  0020AE  D002               	goto	l3591
   694  0020B0                     l3589:
   695                           
   696                           ;ABS_Code.c: 153: status_ok();
   697  0020B0  EC41  F011         	call	_status_ok	;wreg free
   698  0020B4                     l3591:
   699                           
   700                           ;ABS_Code.c: 154: }
   701                           ;ABS_Code.c: 156: if (Analogic_Mode == 0) {
   702  0020B4  0100               	movlb	0	; () banked
   703  0020B6  519C               	movf	_Analogic_Mode& (0+255),w,b
   704  0020B8  A4D8               	btfss	status,2,c
   705  0020BA  D01E               	goto	l631
   706                           
   707                           ; BSR set to: 0
   708                           ;ABS_Code.c: 157: if (brake_signal_CAN == 00) {
   709  0020BC  0100               	movlb	0	; () banked
   710  0020BE  519D               	movf	_brake_signal_CAN& (0+255),w,b
   711  0020C0  A4D8               	btfss	status,2,c
   712  0020C2  D003               	goto	l3597
   713                           
   714                           ; BSR set to: 0
   715                           ;ABS_Code.c: 158: brake_value_inc = 0;
   716  0020C4  0E00               	movlw	0
   717  0020C6  0100               	movlb	0	; () banked
   718  0020C8  6F9E               	movwf	_brake_value_inc& (0+255),b
   719  0020CA                     l3597:
   720                           
   721                           ; BSR set to: 0
   722                           ;ABS_Code.c: 159: }
   723                           ;ABS_Code.c: 160: if (brake_signal_CAN == 01) {
   724  0020CA  0100               	movlb	0	; () banked
   725  0020CC  059D               	decf	_brake_signal_CAN& (0+255),w,b
   726  0020CE  A4D8               	btfss	status,2,c
   727  0020D0  D003               	goto	l3601
   728                           
   729                           ; BSR set to: 0
   730                           ;ABS_Code.c: 161: brake_value_inc = 150;
   731  0020D2  0E96               	movlw	150
   732  0020D4  0100               	movlb	0	; () banked
   733  0020D6  6F9E               	movwf	_brake_value_inc& (0+255),b
   734  0020D8                     l3601:
   735                           
   736                           ; BSR set to: 0
   737                           ;ABS_Code.c: 162: }
   738                           ;ABS_Code.c: 163: if (brake_signal_CAN == 10) {
   739  0020D8  0E0A               	movlw	10
   740  0020DA  0100               	movlb	0	; () banked
   741  0020DC  199D               	xorwf	_brake_signal_CAN& (0+255),w,b
   742  0020DE  A4D8               	btfss	status,2,c
   743  0020E0  D003               	goto	l3605
   744                           
   745                           ; BSR set to: 0
   746                           ;ABS_Code.c: 164: brake_value_inc = 200;
   747  0020E2  0EC8               	movlw	200
   748  0020E4  0100               	movlb	0	; () banked
   749  0020E6  6F9E               	movwf	_brake_value_inc& (0+255),b
   750  0020E8                     l3605:
   751                           
   752                           ; BSR set to: 0
   753                           ;ABS_Code.c: 165: }
   754                           ;ABS_Code.c: 166: if (brake_signal_CAN == 11) {
   755  0020E8  0E0B               	movlw	11
   756  0020EA  0100               	movlb	0	; () banked
   757  0020EC  199D               	xorwf	_brake_signal_CAN& (0+255),w,b
   758  0020EE  A4D8               	btfss	status,2,c
   759  0020F0  D005               	goto	l3609
   760                           
   761                           ; BSR set to: 0
   762                           ;ABS_Code.c: 167: brake_value_inc = 255;
   763  0020F2  0100               	movlb	0	; () banked
   764  0020F4  699E               	setf	_brake_value_inc& (0+255),b
   765                           
   766                           ; BSR set to: 0
   767                           ;ABS_Code.c: 168: }
   768                           ;ABS_Code.c: 169: } else {
   769  0020F6  D002               	goto	l3609
   770  0020F8                     l631:
   771                           
   772                           ; BSR set to: 0
   773                           ;ABS_Code.c: 170: brake_value_inc = brake_signal_CAN;
   774  0020F8  C09D  F09E         	movff	_brake_signal_CAN,_brake_value_inc
   775  0020FC                     l3609:
   776                           
   777                           ; BSR set to: 0
   778                           ;ABS_Code.c: 171: }
   779                           ;ABS_Code.c: 173: brake_value = (brake_value_inc / 17) + home_position;
   780  0020FC  C09E  F07A         	movff	_brake_value_inc,___awdiv@dividend
   781  002100  0100               	movlb	0	; () banked
   782  002102  6B7B               	clrf	(___awdiv@dividend+1)& (0+255),b
   783  002104  0E00               	movlw	0
   784  002106  0100               	movlb	0	; () banked
   785  002108  6F7D               	movwf	(___awdiv@divisor+1)& (0+255),b
   786  00210A  0E11               	movlw	17
   787  00210C  6F7C               	movwf	___awdiv@divisor& (0+255),b
   788  00210E  ECE4  F00F         	call	___awdiv	;wreg free
   789  002112  0100               	movlb	0	; () banked
   790  002114  517A               	movf	?___awdiv& (0+255),w,b
   791  002116  0100               	movlb	0	; () banked
   792  002118  259F               	addwf	_home_position& (0+255),w,b
   793  00211A  0100               	movlb	0	; () banked
   794  00211C  6FA1               	movwf	_brake_value& (0+255),b
   795                           
   796                           ; BSR set to: 0
   797                           ;ABS_Code.c: 174: brake_value_degree = (180 * brake_value) / 255;
   798  00211E  0100               	movlb	0	; () banked
   799  002120  51A1               	movf	_brake_value& (0+255),w,b
   800  002122  0DB4               	mullw	180
   801  002124  CFF3 F07A          	movff	prodl,___awdiv@dividend
   802  002128  CFF4 F07B          	movff	prodh,___awdiv@dividend+1
   803  00212C  0E00               	movlw	0
   804  00212E  0100               	movlb	0	; () banked
   805  002130  6F7D               	movwf	(___awdiv@divisor+1)& (0+255),b
   806  002132  697C               	setf	___awdiv@divisor& (0+255),b
   807  002134  ECE4  F00F         	call	___awdiv	;wreg free
   808  002138  0100               	movlb	0	; () banked
   809  00213A  517A               	movf	?___awdiv& (0+255),w,b
   810  00213C  6E3F               	movwf	_brake_value_degree,c
   811                           
   812                           ; BSR set to: 0
   813  00213E  D7A5               	goto	l3581
   814  002140                     __end_of_main:
   815                           	opt stack 0
   816                           tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           prodh	equ	0xFF4
   821                           prodl	equ	0xFF3
   822                           postinc0	equ	0xFEE
   823                           wreg	equ	0xFE8
   824                           postdec1	equ	0xFE5
   825                           fsr1l	equ	0xFE1
   826                           status	equ	0xFD8
   827                           
   828 ;; *************** function _status_ok *****************
   829 ;; Defined at:
   830 ;;		line 178 in file "ABS_Code.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;		None               void
   837 ;; Registers used:
   838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   844 ;;      Params:         0       0       0       0
   845 ;;      Locals:         0       0       0       0
   846 ;;      Temps:          0       0       0       0
   847 ;;      Totals:         0       0       0       0
   848 ;;Total ram usage:        0 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    5
   851 ;; This function calls:
   852 ;;		_CANisTxReady
   853 ;;		_CANsendMessage
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text1
   860  002282                     __ptext1:
   861                           	opt stack 0
   862  002282                     _status_ok:
   863                           	opt stack 25
   864                           
   865                           ;ABS_Code.c: 179: if (CANisTxReady()) {
   866                           
   867                           ; BSR set to: 0
   868                           ;incstack = 0
   869  002282  EC00  F012         	call	_CANisTxReady	;wreg free
   870  002286  0900               	iorlw	0
   871  002288  B4D8               	btfsc	status,2,c
   872  00228A  D029               	goto	l642
   873                           
   874                           ;ABS_Code.c: 180: if (remote_frame_id == 0b00000000000000000000000000100) {
   875  00228C  0E04               	movlw	4
   876  00228E  0100               	movlb	0	; () banked
   877  002290  1994               	xorwf	_remote_frame_id& (0+255),w,b
   878  002292  0100               	movlb	0	; () banked
   879  002294  1195               	iorwf	(_remote_frame_id+1)& (0+255),w,b
   880  002296  0100               	movlb	0	; () banked
   881  002298  1196               	iorwf	(_remote_frame_id+2)& (0+255),w,b
   882  00229A  0100               	movlb	0	; () banked
   883  00229C  1197               	iorwf	(_remote_frame_id+3)& (0+255),w,b
   884  00229E  A4D8               	btfss	status,2,c
   885  0022A0  D01F               	goto	l648
   886                           
   887                           ; BSR set to: 0
   888                           ;ABS_Code.c: 181: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   889  0022A2  C094  F07A         	movff	_remote_frame_id,CANsendMessage@identifier
   890  0022A6  C095  F07B         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
   891  0022AA  C096  F07C         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
   892  0022AE  C097  F07D         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
   893  0022B2  0EA3               	movlw	low _status_array
   894  0022B4  0100               	movlb	0	; () banked
   895  0022B6  6F7E               	movwf	CANsendMessage@data& (0+255),b
   896  0022B8  0E00               	movlw	high _status_array
   897  0022BA  0100               	movlb	0	; () banked
   898  0022BC  6F7F               	movwf	(CANsendMessage@data+1)& (0+255),b
   899  0022BE  0E08               	movlw	8
   900  0022C0  0100               	movlb	0	; () banked
   901  0022C2  6F80               	movwf	CANsendMessage@dataLength& (0+255),b
   902  0022C4  0EBC               	movlw	188
   903  0022C6  0100               	movlb	0	; () banked
   904  0022C8  6F81               	movwf	CANsendMessage@flags& (0+255),b
   905  0022CA  EC00  F006         	call	_CANsendMessage	;wreg free
   906                           
   907                           ;ABS_Code.c: 182: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
   908  0022CE  010F               	movlb	15	; () banked
   909  0022D0  BD40               	btfsc	64,6,b	;volatile
   910  0022D2  D005               	goto	l642
   911                           
   912                           ; BSR set to: 15
   913  0022D4  010F               	movlb	15	; () banked
   914  0022D6  BD30               	btfsc	48,6,b	;volatile
   915  0022D8  D002               	goto	l642
   916                           
   917                           ; BSR set to: 15
   918                           ;ABS_Code.c: 185: Tx_retry = 0;
   919                           
   920                           ;ABS_Code.c: 184: } else {
   921                           
   922                           ; BSR set to: 15
   923                           ;ABS_Code.c: 183: Tx_retry = 1;
   924  0022DA  9040               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   925                           
   926                           ; BSR set to: 15
   927                           ;ABS_Code.c: 186: }
   928                           ;ABS_Code.c: 187: }
   929                           ;ABS_Code.c: 188: } else {
   930                           
   931                           ; BSR set to: 15
   932  0022DC  D001               	goto	l648
   933  0022DE                     l642:
   934                           
   935                           ;ABS_Code.c: 189: Tx_retry = 1;
   936  0022DE  8040               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   937  0022E0                     l648:
   938                           
   939                           ;ABS_Code.c: 190: }
   940                           ;ABS_Code.c: 191: remote_frame = 0;
   941  0022E0  9240               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   942  0022E2  0012               	return		;funcret
   943  0022E4                     __end_of_status_ok:
   944                           	opt stack 0
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           prodh	equ	0xFF4
   950                           prodl	equ	0xFF3
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _CANsendMessage *****************
   958 ;; Defined at:
   959 ;;		line 294 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  identifier      4   26[BANK0 ] unsigned long 
   962 ;;  data            2   30[BANK0 ] PTR unsigned char 
   963 ;;		 -> status_array(8), 
   964 ;;  dataLength      1   32[BANK0 ] unsigned char 
   965 ;;  flags           1   33[BANK0 ] enum E16866
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  tamp            4   38[BANK0 ] unsigned long 
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   977 ;;      Params:         0       8       0       0
   978 ;;      Locals:         0       4       0       0
   979 ;;      Temps:          0       4       0       0
   980 ;;      Totals:         0      16       0       0
   981 ;;Total ram usage:       16 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    4
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_status_ok
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text2
   992  000C00                     __ptext2:
   993                           	opt stack 0
   994  000C00                     _CANsendMessage:
   995                           	opt stack 25
   996                           
   997                           ;inc\CANlib.h: 296: unsigned long tamp;
   998                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
   999                           
  1000                           ;incstack = 0
  1001  000C00  010F               	movlb	15	; () banked
  1002  000C02  B740               	btfsc	64,3,b	;volatile
  1003  000C04  D13F               	goto	l357
  1004                           
  1005                           ; BSR set to: 15
  1006                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1007  000C06  C080  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1008                           
  1009                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1010  000C0A  0100               	movlb	0	; () banked
  1011  000C0C  AD81               	btfss	CANsendMessage@flags& (0+255),6,b
  1012  000C0E  D003               	goto	l358
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1016  000C10  010F               	movlb	15	; () banked
  1017  000C12  8D45               	bsf	69,6,b	;volatile
  1018  000C14  D002               	goto	l359
  1019  000C16                     l358:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;inc\CANlib.h: 302: else
  1023                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1024  000C16  010F               	movlb	15	; () banked
  1025  000C18  9D45               	bcf	69,6,b	;volatile
  1026  000C1A                     l359:
  1027                           
  1028                           ; BSR set to: 15
  1029                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1030  000C1A  0100               	movlb	0	; () banked
  1031  000C1C  A781               	btfss	CANsendMessage@flags& (0+255),3,b
  1032  000C1E  D079               	goto	l360
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;inc\CANlib.h: 306: {
  1036                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1037  000C20  0100               	movlb	0	; () banked
  1038  000C22  517A               	movf	CANsendMessage@identifier& (0+255),w,b
  1039  000C24  0100               	movlb	0	; () banked
  1040  000C26  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1041  000C28  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1042  000C2A  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1043  000C2C  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1047  000C2E  C086  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1051  000C32  0E00               	movlw	0
  1052  000C34  0100               	movlb	0	; () banked
  1053  000C36  157A               	andwf	CANsendMessage@identifier& (0+255),w,b
  1054  000C38  0100               	movlb	0	; () banked
  1055  000C3A  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1056  000C3C  0EFF               	movlw	255
  1057  000C3E  0100               	movlb	0	; () banked
  1058  000C40  157B               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1059  000C42  0100               	movlb	0	; () banked
  1060  000C44  6F87               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1061  000C46  0E00               	movlw	0
  1062  000C48  0100               	movlb	0	; () banked
  1063  000C4A  157C               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1064  000C4C  0100               	movlb	0	; () banked
  1065  000C4E  6F88               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1066  000C50  0E00               	movlw	0
  1067  000C52  0100               	movlb	0	; () banked
  1068  000C54  157D               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1069  000C56  0100               	movlb	0	; () banked
  1070  000C58  6F89               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1074  000C5A  C086  F082         	movff	CANsendMessage@tamp,??_CANsendMessage
  1075  000C5E  C087  F083         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1076  000C62  C088  F084         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1077  000C66  C089  F085         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1078  000C6A  C083  F082         	movff	??_CANsendMessage+1,??_CANsendMessage
  1079  000C6E  C084  F083         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1080  000C72  C085  F084         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1081  000C76  0100               	movlb	0	; () banked
  1082  000C78  6B85               	clrf	(??_CANsendMessage+3)& (0+255),b
  1083  000C7A  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1084  000C7E  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1085  000C82  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1086  000C86  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1090  000C8A  C086  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1094  000C8E  0E00               	movlw	0
  1095  000C90  010F               	movlb	15	; () banked
  1096  000C92  6F42               	movwf	66,b	;volatile
  1097                           
  1098                           ; BSR set to: 15
  1099                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1100  000C94  010F               	movlb	15	; () banked
  1101  000C96  8742               	bsf	66,3,b	;volatile
  1102                           
  1103                           ; BSR set to: 15
  1104                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1105  000C98  0100               	movlb	0	; () banked
  1106  000C9A  A17C               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1107  000C9C  D002               	goto	l361
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1111  000C9E  010F               	movlb	15	; () banked
  1112  000CA0  8142               	bsf	66,0,b	;volatile
  1113  000CA2                     l361:
  1114                           
  1115                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1116  000CA2  0100               	movlb	0	; () banked
  1117  000CA4  A37C               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1118  000CA6  D002               	goto	l362
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1122  000CA8  010F               	movlb	15	; () banked
  1123  000CAA  8342               	bsf	66,1,b	;volatile
  1124  000CAC                     l362:
  1125                           
  1126                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1127  000CAC  0100               	movlb	0	; () banked
  1128  000CAE  A57C               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1129  000CB0  D002               	goto	l363
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1133  000CB2  010F               	movlb	15	; () banked
  1134  000CB4  8B42               	bsf	66,5,b	;volatile
  1135  000CB6                     l363:
  1136                           
  1137                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1138  000CB6  0100               	movlb	0	; () banked
  1139  000CB8  A77C               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1140  000CBA  D002               	goto	l364
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1144  000CBC  010F               	movlb	15	; () banked
  1145  000CBE  8D42               	bsf	66,6,b	;volatile
  1146  000CC0                     l364:
  1147                           
  1148                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1149  000CC0  0100               	movlb	0	; () banked
  1150  000CC2  A97C               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1151  000CC4  D002               	goto	l2969
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1155  000CC6  010F               	movlb	15	; () banked
  1156  000CC8  8F42               	bsf	66,7,b	;volatile
  1157  000CCA                     l2969:
  1158                           
  1159                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1160  000CCA  C07A  F082         	movff	CANsendMessage@identifier,??_CANsendMessage
  1161  000CCE  C07B  F083         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1162  000CD2  C07C  F084         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1163  000CD6  C07D  F085         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1164  000CDA  0E16               	movlw	22
  1165  000CDC  D006               	goto	u3170
  1166  000CDE                     u3175:
  1167  000CDE  0100               	movlb	0	; () banked
  1168  000CE0  90D8               	bcf	status,0,c
  1169  000CE2  3385               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1170  000CE4  3384               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1171  000CE6  3383               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1172  000CE8  3382               	rrcf	??_CANsendMessage& (0+255),f,b
  1173  000CEA                     u3170:
  1174  000CEA  2EE8               	decfsz	wreg,f,c
  1175  000CEC  D7F8               	goto	u3175
  1176  000CEE  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1177  000CF2  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1178  000CF6  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1179  000CFA  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1183  000CFE  0100               	movlb	0	; () banked
  1184  000D00  5186               	movf	CANsendMessage@tamp& (0+255),w,b
  1185  000D02  0100               	movlb	0	; () banked
  1186  000D04  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1187  000D06  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1188  000D08  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1189  000D0A  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1193  000D0C  C086  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1194                           
  1195                           ;inc\CANlib.h: 332: }
  1196  000D10  D059               	goto	l2989
  1197  000D12                     l360:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;inc\CANlib.h: 334: else
  1201                           ;inc\CANlib.h: 336: {
  1202                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1203  000D12  010F               	movlb	15	; () banked
  1204  000D14  9742               	bcf	66,3,b	;volatile
  1205                           
  1206                           ; BSR set to: 15
  1207                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1208  000D16  C07A  F082         	movff	CANsendMessage@identifier,??_CANsendMessage
  1209  000D1A  C07B  F083         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1210  000D1E  C07C  F084         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1211  000D22  C07D  F085         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1212  000D26  0E04               	movlw	4
  1213  000D28  D006               	goto	u3180
  1214  000D2A                     u3185:
  1215  000D2A  0100               	movlb	0	; () banked
  1216  000D2C  90D8               	bcf	status,0,c
  1217  000D2E  3385               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1218  000D30  3384               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1219  000D32  3383               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1220  000D34  3382               	rrcf	??_CANsendMessage& (0+255),f,b
  1221  000D36                     u3180:
  1222  000D36  2EE8               	decfsz	wreg,f,c
  1223  000D38  D7F8               	goto	u3185
  1224  000D3A  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1225  000D3E  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1226  000D42  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1227  000D46  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1231  000D4A  0100               	movlb	0	; () banked
  1232  000D4C  5186               	movf	CANsendMessage@tamp& (0+255),w,b
  1233  000D4E  0100               	movlb	0	; () banked
  1234  000D50  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1235  000D52  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1236  000D54  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1237  000D56  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1241  000D58  C086  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1245  000D5C  0E07               	movlw	7
  1246  000D5E  0100               	movlb	0	; () banked
  1247  000D60  157A               	andwf	CANsendMessage@identifier& (0+255),w,b
  1248  000D62  0100               	movlb	0	; () banked
  1249  000D64  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1250  000D66  0E00               	movlw	0
  1251  000D68  0100               	movlb	0	; () banked
  1252  000D6A  157B               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1253  000D6C  0100               	movlb	0	; () banked
  1254  000D6E  6F87               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1255  000D70  0E00               	movlw	0
  1256  000D72  0100               	movlb	0	; () banked
  1257  000D74  157C               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1258  000D76  0100               	movlb	0	; () banked
  1259  000D78  6F88               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1260  000D7A  0E00               	movlw	0
  1261  000D7C  0100               	movlb	0	; () banked
  1262  000D7E  157D               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1263  000D80  0100               	movlb	0	; () banked
  1264  000D82  6F89               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1268  000D84  C086  F082         	movff	CANsendMessage@tamp,??_CANsendMessage
  1269  000D88  C087  F083         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1270  000D8C  C088  F084         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1271  000D90  C089  F085         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1272  000D94  0E05               	movlw	5
  1273  000D96                     u3195:
  1274  000D96  90D8               	bcf	status,0,c
  1275  000D98  0100               	movlb	0	; () banked
  1276  000D9A  3782               	rlcf	??_CANsendMessage& (0+255),f,b
  1277  000D9C  3783               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1278  000D9E  3784               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1279  000DA0  3785               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1280  000DA2  2EE8               	decfsz	wreg,f,c
  1281  000DA4  D7F8               	goto	u3195
  1282  000DA6  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1283  000DAA  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1284  000DAE  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1285  000DB2  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1289  000DB6  010F               	movlb	15	; () banked
  1290  000DB8  5142               	movf	66,w,b	;volatile
  1291  000DBA  0B1F               	andlw	31
  1292  000DBC  010F               	movlb	15	; () banked
  1293  000DBE  6F42               	movwf	66,b	;volatile
  1294                           
  1295                           ; BSR set to: 15
  1296                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1297  000DC0  C086  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1298  000DC4                     l2989:
  1299                           
  1300                           ;inc\CANlib.h: 347: }
  1301                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1302  000DC4  0100               	movlb	0	; () banked
  1303  000DC6  A181               	btfss	CANsendMessage@flags& (0+255),0,b
  1304  000DC8  D003               	goto	l367
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1308  000DCA  010F               	movlb	15	; () banked
  1309  000DCC  8140               	bsf	64,0,b	;volatile
  1310  000DCE  D002               	goto	l368
  1311  000DD0                     l367:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;inc\CANlib.h: 351: else
  1315                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1316  000DD0  010F               	movlb	15	; () banked
  1317  000DD2  9140               	bcf	64,0,b	;volatile
  1318  000DD4                     l368:
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1322  000DD4  0100               	movlb	0	; () banked
  1323  000DD6  A381               	btfss	CANsendMessage@flags& (0+255),1,b
  1324  000DD8  D003               	goto	l369
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1328  000DDA  010F               	movlb	15	; () banked
  1329  000DDC  8340               	bsf	64,1,b	;volatile
  1330  000DDE  D002               	goto	l2995
  1331  000DE0                     l369:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;inc\CANlib.h: 355: else
  1335                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1336  000DE0  010F               	movlb	15	; () banked
  1337  000DE2  9340               	bcf	64,1,b	;volatile
  1338  000DE4                     l2995:
  1339                           
  1340                           ; BSR set to: 15
  1341                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1342  000DE4  C07E  FFD9         	movff	CANsendMessage@data,fsr2l
  1343  000DE8  C07F  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1344  000DEC  50DF               	movf	indf2,w,c
  1345  000DEE  010F               	movlb	15	; () banked
  1346  000DF0  6F46               	movwf	70,b	;volatile
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1350  000DF2  0100               	movlb	0	; () banked
  1351  000DF4  EE20 F001          	lfsr	2,1
  1352  000DF8  517E               	movf	CANsendMessage@data& (0+255),w,b
  1353  000DFA  26D9               	addwf	fsr2l,f,c
  1354  000DFC  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1355  000DFE  22DA               	addwfc	fsr2h,f,c
  1356  000E00  50DF               	movf	indf2,w,c
  1357  000E02  010F               	movlb	15	; () banked
  1358  000E04  6F47               	movwf	71,b	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1362  000E06  0100               	movlb	0	; () banked
  1363  000E08  EE20 F002          	lfsr	2,2
  1364  000E0C  517E               	movf	CANsendMessage@data& (0+255),w,b
  1365  000E0E  26D9               	addwf	fsr2l,f,c
  1366  000E10  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1367  000E12  22DA               	addwfc	fsr2h,f,c
  1368  000E14  50DF               	movf	indf2,w,c
  1369  000E16  010F               	movlb	15	; () banked
  1370  000E18  6F48               	movwf	72,b	;volatile
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1374  000E1A  0100               	movlb	0	; () banked
  1375  000E1C  EE20 F003          	lfsr	2,3
  1376  000E20  517E               	movf	CANsendMessage@data& (0+255),w,b
  1377  000E22  26D9               	addwf	fsr2l,f,c
  1378  000E24  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1379  000E26  22DA               	addwfc	fsr2h,f,c
  1380  000E28  50DF               	movf	indf2,w,c
  1381  000E2A  010F               	movlb	15	; () banked
  1382  000E2C  6F49               	movwf	73,b	;volatile
  1383                           
  1384                           ; BSR set to: 15
  1385                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1386  000E2E  0100               	movlb	0	; () banked
  1387  000E30  EE20 F004          	lfsr	2,4
  1388  000E34  517E               	movf	CANsendMessage@data& (0+255),w,b
  1389  000E36  26D9               	addwf	fsr2l,f,c
  1390  000E38  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1391  000E3A  22DA               	addwfc	fsr2h,f,c
  1392  000E3C  50DF               	movf	indf2,w,c
  1393  000E3E  010F               	movlb	15	; () banked
  1394  000E40  6F4A               	movwf	74,b	;volatile
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1398  000E42  0100               	movlb	0	; () banked
  1399  000E44  EE20 F005          	lfsr	2,5
  1400  000E48  517E               	movf	CANsendMessage@data& (0+255),w,b
  1401  000E4A  26D9               	addwf	fsr2l,f,c
  1402  000E4C  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1403  000E4E  22DA               	addwfc	fsr2h,f,c
  1404  000E50  50DF               	movf	indf2,w,c
  1405  000E52  010F               	movlb	15	; () banked
  1406  000E54  6F4B               	movwf	75,b	;volatile
  1407                           
  1408                           ; BSR set to: 15
  1409                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1410  000E56  0100               	movlb	0	; () banked
  1411  000E58  EE20 F006          	lfsr	2,6
  1412  000E5C  517E               	movf	CANsendMessage@data& (0+255),w,b
  1413  000E5E  26D9               	addwf	fsr2l,f,c
  1414  000E60  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1415  000E62  22DA               	addwfc	fsr2h,f,c
  1416  000E64  50DF               	movf	indf2,w,c
  1417  000E66  010F               	movlb	15	; () banked
  1418  000E68  6F4C               	movwf	76,b	;volatile
  1419                           
  1420                           ; BSR set to: 15
  1421                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1422  000E6A  0100               	movlb	0	; () banked
  1423  000E6C  EE20 F007          	lfsr	2,7
  1424  000E70  517E               	movf	CANsendMessage@data& (0+255),w,b
  1425  000E72  26D9               	addwf	fsr2l,f,c
  1426  000E74  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1427  000E76  22DA               	addwfc	fsr2h,f,c
  1428  000E78  50DF               	movf	indf2,w,c
  1429  000E7A  010F               	movlb	15	; () banked
  1430  000E7C  6F4D               	movwf	77,b	;volatile
  1431                           
  1432                           ; BSR set to: 15
  1433                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1434  000E7E  010F               	movlb	15	; () banked
  1435  000E80  8740               	bsf	64,3,b	;volatile
  1436                           
  1437                           ; BSR set to: 15
  1438                           ;inc\CANlib.h: 368: return;
  1439  000E82  0012               	return	
  1440  000E84                     l357:
  1441                           
  1442                           ; BSR set to: 15
  1443                           ;inc\CANlib.h: 369: }
  1444                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1445  000E84  010F               	movlb	15	; () banked
  1446  000E86  B730               	btfsc	48,3,b	;volatile
  1447  000E88  D13F               	goto	l372
  1448                           
  1449                           ; BSR set to: 15
  1450                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1451  000E8A  C080  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1452                           
  1453                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1454  000E8E  0100               	movlb	0	; () banked
  1455  000E90  AD81               	btfss	CANsendMessage@flags& (0+255),6,b
  1456  000E92  D003               	goto	l373
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1460  000E94  010F               	movlb	15	; () banked
  1461  000E96  8D35               	bsf	53,6,b	;volatile
  1462  000E98  D002               	goto	l374
  1463  000E9A                     l373:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;inc\CANlib.h: 378: else
  1467                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1468  000E9A  010F               	movlb	15	; () banked
  1469  000E9C  9D35               	bcf	53,6,b	;volatile
  1470  000E9E                     l374:
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1474  000E9E  0100               	movlb	0	; () banked
  1475  000EA0  A781               	btfss	CANsendMessage@flags& (0+255),3,b
  1476  000EA2  D079               	goto	l375
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;inc\CANlib.h: 382: {
  1480                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1481  000EA4  0100               	movlb	0	; () banked
  1482  000EA6  517A               	movf	CANsendMessage@identifier& (0+255),w,b
  1483  000EA8  0100               	movlb	0	; () banked
  1484  000EAA  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1485  000EAC  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1486  000EAE  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1487  000EB0  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1491  000EB2  C086  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1495  000EB6  0E00               	movlw	0
  1496  000EB8  0100               	movlb	0	; () banked
  1497  000EBA  157A               	andwf	CANsendMessage@identifier& (0+255),w,b
  1498  000EBC  0100               	movlb	0	; () banked
  1499  000EBE  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1500  000EC0  0EFF               	movlw	255
  1501  000EC2  0100               	movlb	0	; () banked
  1502  000EC4  157B               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1503  000EC6  0100               	movlb	0	; () banked
  1504  000EC8  6F87               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1505  000ECA  0E00               	movlw	0
  1506  000ECC  0100               	movlb	0	; () banked
  1507  000ECE  157C               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1508  000ED0  0100               	movlb	0	; () banked
  1509  000ED2  6F88               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1510  000ED4  0E00               	movlw	0
  1511  000ED6  0100               	movlb	0	; () banked
  1512  000ED8  157D               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1513  000EDA  0100               	movlb	0	; () banked
  1514  000EDC  6F89               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1518  000EDE  C086  F082         	movff	CANsendMessage@tamp,??_CANsendMessage
  1519  000EE2  C087  F083         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1520  000EE6  C088  F084         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1521  000EEA  C089  F085         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1522  000EEE  C083  F082         	movff	??_CANsendMessage+1,??_CANsendMessage
  1523  000EF2  C084  F083         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1524  000EF6  C085  F084         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1525  000EFA  0100               	movlb	0	; () banked
  1526  000EFC  6B85               	clrf	(??_CANsendMessage+3)& (0+255),b
  1527  000EFE  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1528  000F02  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1529  000F06  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1530  000F0A  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1534  000F0E  C086  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1538  000F12  0E00               	movlw	0
  1539  000F14  010F               	movlb	15	; () banked
  1540  000F16  6F32               	movwf	50,b	;volatile
  1541                           
  1542                           ; BSR set to: 15
  1543                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1544  000F18  010F               	movlb	15	; () banked
  1545  000F1A  8732               	bsf	50,3,b	;volatile
  1546                           
  1547                           ; BSR set to: 15
  1548                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1549  000F1C  0100               	movlb	0	; () banked
  1550  000F1E  A17C               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1551  000F20  D002               	goto	l376
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1555  000F22  010F               	movlb	15	; () banked
  1556  000F24  8132               	bsf	50,0,b	;volatile
  1557  000F26                     l376:
  1558                           
  1559                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1560  000F26  0100               	movlb	0	; () banked
  1561  000F28  A37C               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1562  000F2A  D002               	goto	l377
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1566  000F2C  010F               	movlb	15	; () banked
  1567  000F2E  8332               	bsf	50,1,b	;volatile
  1568  000F30                     l377:
  1569                           
  1570                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1571  000F30  0100               	movlb	0	; () banked
  1572  000F32  A57C               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1573  000F34  D002               	goto	l378
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1577  000F36  010F               	movlb	15	; () banked
  1578  000F38  8B32               	bsf	50,5,b	;volatile
  1579  000F3A                     l378:
  1580                           
  1581                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1582  000F3A  0100               	movlb	0	; () banked
  1583  000F3C  A77C               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1584  000F3E  D002               	goto	l379
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1588  000F40  010F               	movlb	15	; () banked
  1589  000F42  8D32               	bsf	50,6,b	;volatile
  1590  000F44                     l379:
  1591                           
  1592                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1593  000F44  0100               	movlb	0	; () banked
  1594  000F46  A97C               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1595  000F48  D002               	goto	l3045
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1599  000F4A  010F               	movlb	15	; () banked
  1600  000F4C  8F32               	bsf	50,7,b	;volatile
  1601  000F4E                     l3045:
  1602                           
  1603                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1604  000F4E  C07A  F082         	movff	CANsendMessage@identifier,??_CANsendMessage
  1605  000F52  C07B  F083         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1606  000F56  C07C  F084         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1607  000F5A  C07D  F085         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1608  000F5E  0E16               	movlw	22
  1609  000F60  D006               	goto	u3300
  1610  000F62                     u3305:
  1611  000F62  0100               	movlb	0	; () banked
  1612  000F64  90D8               	bcf	status,0,c
  1613  000F66  3385               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1614  000F68  3384               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1615  000F6A  3383               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1616  000F6C  3382               	rrcf	??_CANsendMessage& (0+255),f,b
  1617  000F6E                     u3300:
  1618  000F6E  2EE8               	decfsz	wreg,f,c
  1619  000F70  D7F8               	goto	u3305
  1620  000F72  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1621  000F76  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1622  000F7A  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1623  000F7E  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1627  000F82  0100               	movlb	0	; () banked
  1628  000F84  5186               	movf	CANsendMessage@tamp& (0+255),w,b
  1629  000F86  0100               	movlb	0	; () banked
  1630  000F88  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1631  000F8A  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1632  000F8C  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1633  000F8E  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1637  000F90  C086  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1638                           
  1639                           ;inc\CANlib.h: 407: }
  1640  000F94  D059               	goto	l3065
  1641  000F96                     l375:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;inc\CANlib.h: 409: else
  1645                           ;inc\CANlib.h: 411: {
  1646                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1647  000F96  010F               	movlb	15	; () banked
  1648  000F98  9732               	bcf	50,3,b	;volatile
  1649                           
  1650                           ; BSR set to: 15
  1651                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1652  000F9A  C07A  F082         	movff	CANsendMessage@identifier,??_CANsendMessage
  1653  000F9E  C07B  F083         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1654  000FA2  C07C  F084         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1655  000FA6  C07D  F085         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1656  000FAA  0E04               	movlw	4
  1657  000FAC  D006               	goto	u3310
  1658  000FAE                     u3315:
  1659  000FAE  0100               	movlb	0	; () banked
  1660  000FB0  90D8               	bcf	status,0,c
  1661  000FB2  3385               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1662  000FB4  3384               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1663  000FB6  3383               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1664  000FB8  3382               	rrcf	??_CANsendMessage& (0+255),f,b
  1665  000FBA                     u3310:
  1666  000FBA  2EE8               	decfsz	wreg,f,c
  1667  000FBC  D7F8               	goto	u3315
  1668  000FBE  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1669  000FC2  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1670  000FC6  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1671  000FCA  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1675  000FCE  0100               	movlb	0	; () banked
  1676  000FD0  5186               	movf	CANsendMessage@tamp& (0+255),w,b
  1677  000FD2  0100               	movlb	0	; () banked
  1678  000FD4  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1679  000FD6  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1680  000FD8  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1681  000FDA  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1685  000FDC  C086  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1689  000FE0  0E07               	movlw	7
  1690  000FE2  0100               	movlb	0	; () banked
  1691  000FE4  157A               	andwf	CANsendMessage@identifier& (0+255),w,b
  1692  000FE6  0100               	movlb	0	; () banked
  1693  000FE8  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1694  000FEA  0E00               	movlw	0
  1695  000FEC  0100               	movlb	0	; () banked
  1696  000FEE  157B               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1697  000FF0  0100               	movlb	0	; () banked
  1698  000FF2  6F87               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1699  000FF4  0E00               	movlw	0
  1700  000FF6  0100               	movlb	0	; () banked
  1701  000FF8  157C               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1702  000FFA  0100               	movlb	0	; () banked
  1703  000FFC  6F88               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1704  000FFE  0E00               	movlw	0
  1705  001000  0100               	movlb	0	; () banked
  1706  001002  157D               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1707  001004  0100               	movlb	0	; () banked
  1708  001006  6F89               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1712  001008  C086  F082         	movff	CANsendMessage@tamp,??_CANsendMessage
  1713  00100C  C087  F083         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1714  001010  C088  F084         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1715  001014  C089  F085         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1716  001018  0E05               	movlw	5
  1717  00101A                     u3325:
  1718  00101A  90D8               	bcf	status,0,c
  1719  00101C  0100               	movlb	0	; () banked
  1720  00101E  3782               	rlcf	??_CANsendMessage& (0+255),f,b
  1721  001020  3783               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1722  001022  3784               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1723  001024  3785               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1724  001026  2EE8               	decfsz	wreg,f,c
  1725  001028  D7F8               	goto	u3325
  1726  00102A  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1727  00102E  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1728  001032  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1729  001036  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1733  00103A  010F               	movlb	15	; () banked
  1734  00103C  5132               	movf	50,w,b	;volatile
  1735  00103E  0B1F               	andlw	31
  1736  001040  010F               	movlb	15	; () banked
  1737  001042  6F32               	movwf	50,b	;volatile
  1738                           
  1739                           ; BSR set to: 15
  1740                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1741  001044  C086  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1742  001048                     l3065:
  1743                           
  1744                           ;inc\CANlib.h: 422: }
  1745                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1746  001048  0100               	movlb	0	; () banked
  1747  00104A  A181               	btfss	CANsendMessage@flags& (0+255),0,b
  1748  00104C  D003               	goto	l382
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1752  00104E  010F               	movlb	15	; () banked
  1753  001050  8130               	bsf	48,0,b	;volatile
  1754  001052  D002               	goto	l383
  1755  001054                     l382:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;inc\CANlib.h: 426: else
  1759                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1760  001054  010F               	movlb	15	; () banked
  1761  001056  9130               	bcf	48,0,b	;volatile
  1762  001058                     l383:
  1763                           
  1764                           ; BSR set to: 15
  1765                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1766  001058  0100               	movlb	0	; () banked
  1767  00105A  A381               	btfss	CANsendMessage@flags& (0+255),1,b
  1768  00105C  D003               	goto	l384
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1772  00105E  010F               	movlb	15	; () banked
  1773  001060  8330               	bsf	48,1,b	;volatile
  1774  001062  D002               	goto	l3071
  1775  001064                     l384:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;inc\CANlib.h: 430: else
  1779                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1780  001064  010F               	movlb	15	; () banked
  1781  001066  9330               	bcf	48,1,b	;volatile
  1782  001068                     l3071:
  1783                           
  1784                           ; BSR set to: 15
  1785                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1786  001068  C07E  FFD9         	movff	CANsendMessage@data,fsr2l
  1787  00106C  C07F  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1788  001070  50DF               	movf	indf2,w,c
  1789  001072  010F               	movlb	15	; () banked
  1790  001074  6F36               	movwf	54,b	;volatile
  1791                           
  1792                           ; BSR set to: 15
  1793                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1794  001076  0100               	movlb	0	; () banked
  1795  001078  EE20 F001          	lfsr	2,1
  1796  00107C  517E               	movf	CANsendMessage@data& (0+255),w,b
  1797  00107E  26D9               	addwf	fsr2l,f,c
  1798  001080  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1799  001082  22DA               	addwfc	fsr2h,f,c
  1800  001084  50DF               	movf	indf2,w,c
  1801  001086  010F               	movlb	15	; () banked
  1802  001088  6F37               	movwf	55,b	;volatile
  1803                           
  1804                           ; BSR set to: 15
  1805                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1806  00108A  0100               	movlb	0	; () banked
  1807  00108C  EE20 F002          	lfsr	2,2
  1808  001090  517E               	movf	CANsendMessage@data& (0+255),w,b
  1809  001092  26D9               	addwf	fsr2l,f,c
  1810  001094  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1811  001096  22DA               	addwfc	fsr2h,f,c
  1812  001098  50DF               	movf	indf2,w,c
  1813  00109A  010F               	movlb	15	; () banked
  1814  00109C  6F38               	movwf	56,b	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1818  00109E  0100               	movlb	0	; () banked
  1819  0010A0  EE20 F003          	lfsr	2,3
  1820  0010A4  517E               	movf	CANsendMessage@data& (0+255),w,b
  1821  0010A6  26D9               	addwf	fsr2l,f,c
  1822  0010A8  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1823  0010AA  22DA               	addwfc	fsr2h,f,c
  1824  0010AC  50DF               	movf	indf2,w,c
  1825  0010AE  010F               	movlb	15	; () banked
  1826  0010B0  6F39               	movwf	57,b	;volatile
  1827                           
  1828                           ; BSR set to: 15
  1829                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1830  0010B2  0100               	movlb	0	; () banked
  1831  0010B4  EE20 F004          	lfsr	2,4
  1832  0010B8  517E               	movf	CANsendMessage@data& (0+255),w,b
  1833  0010BA  26D9               	addwf	fsr2l,f,c
  1834  0010BC  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1835  0010BE  22DA               	addwfc	fsr2h,f,c
  1836  0010C0  50DF               	movf	indf2,w,c
  1837  0010C2  010F               	movlb	15	; () banked
  1838  0010C4  6F3A               	movwf	58,b	;volatile
  1839                           
  1840                           ; BSR set to: 15
  1841                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1842  0010C6  0100               	movlb	0	; () banked
  1843  0010C8  EE20 F005          	lfsr	2,5
  1844  0010CC  517E               	movf	CANsendMessage@data& (0+255),w,b
  1845  0010CE  26D9               	addwf	fsr2l,f,c
  1846  0010D0  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1847  0010D2  22DA               	addwfc	fsr2h,f,c
  1848  0010D4  50DF               	movf	indf2,w,c
  1849  0010D6  010F               	movlb	15	; () banked
  1850  0010D8  6F3B               	movwf	59,b	;volatile
  1851                           
  1852                           ; BSR set to: 15
  1853                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1854  0010DA  0100               	movlb	0	; () banked
  1855  0010DC  EE20 F006          	lfsr	2,6
  1856  0010E0  517E               	movf	CANsendMessage@data& (0+255),w,b
  1857  0010E2  26D9               	addwf	fsr2l,f,c
  1858  0010E4  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1859  0010E6  22DA               	addwfc	fsr2h,f,c
  1860  0010E8  50DF               	movf	indf2,w,c
  1861  0010EA  010F               	movlb	15	; () banked
  1862  0010EC  6F3C               	movwf	60,b	;volatile
  1863                           
  1864                           ; BSR set to: 15
  1865                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1866  0010EE  0100               	movlb	0	; () banked
  1867  0010F0  EE20 F007          	lfsr	2,7
  1868  0010F4  517E               	movf	CANsendMessage@data& (0+255),w,b
  1869  0010F6  26D9               	addwf	fsr2l,f,c
  1870  0010F8  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1871  0010FA  22DA               	addwfc	fsr2h,f,c
  1872  0010FC  50DF               	movf	indf2,w,c
  1873  0010FE  010F               	movlb	15	; () banked
  1874  001100  6F3D               	movwf	61,b	;volatile
  1875                           
  1876                           ; BSR set to: 15
  1877                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1878  001102  010F               	movlb	15	; () banked
  1879  001104  8730               	bsf	48,3,b	;volatile
  1880                           
  1881                           ; BSR set to: 15
  1882                           ;inc\CANlib.h: 444: return;
  1883  001106  0012               	return	
  1884  001108                     l372:
  1885                           
  1886                           ; BSR set to: 15
  1887                           ;inc\CANlib.h: 445: }
  1888                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1889  001108  010F               	movlb	15	; () banked
  1890  00110A  B720               	btfsc	32,3,b	;volatile
  1891  00110C  0012               	return	
  1892                           
  1893                           ; BSR set to: 15
  1894                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1895  00110E  C080  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1896                           
  1897                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  1898  001112  0100               	movlb	0	; () banked
  1899  001114  AD81               	btfss	CANsendMessage@flags& (0+255),6,b
  1900  001116  D003               	goto	l387
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1904  001118  010F               	movlb	15	; () banked
  1905  00111A  8D25               	bsf	37,6,b	;volatile
  1906  00111C  D002               	goto	l388
  1907  00111E                     l387:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;inc\CANlib.h: 454: else
  1911                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1912  00111E  010F               	movlb	15	; () banked
  1913  001120  9D25               	bcf	37,6,b	;volatile
  1914  001122                     l388:
  1915                           
  1916                           ; BSR set to: 15
  1917                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  1918  001122  0100               	movlb	0	; () banked
  1919  001124  A781               	btfss	CANsendMessage@flags& (0+255),3,b
  1920  001126  D079               	goto	l389
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;inc\CANlib.h: 458: {
  1924                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  1925  001128  0100               	movlb	0	; () banked
  1926  00112A  517A               	movf	CANsendMessage@identifier& (0+255),w,b
  1927  00112C  0100               	movlb	0	; () banked
  1928  00112E  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1929  001130  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1930  001132  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1931  001134  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  1935  001136  C086  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  1939  00113A  0E00               	movlw	0
  1940  00113C  0100               	movlb	0	; () banked
  1941  00113E  157A               	andwf	CANsendMessage@identifier& (0+255),w,b
  1942  001140  0100               	movlb	0	; () banked
  1943  001142  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  1944  001144  0EFF               	movlw	255
  1945  001146  0100               	movlb	0	; () banked
  1946  001148  157B               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1947  00114A  0100               	movlb	0	; () banked
  1948  00114C  6F87               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1949  00114E  0E00               	movlw	0
  1950  001150  0100               	movlb	0	; () banked
  1951  001152  157C               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1952  001154  0100               	movlb	0	; () banked
  1953  001156  6F88               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1954  001158  0E00               	movlw	0
  1955  00115A  0100               	movlb	0	; () banked
  1956  00115C  157D               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1957  00115E  0100               	movlb	0	; () banked
  1958  001160  6F89               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  1962  001162  C086  F082         	movff	CANsendMessage@tamp,??_CANsendMessage
  1963  001166  C087  F083         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1964  00116A  C088  F084         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1965  00116E  C089  F085         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1966  001172  C083  F082         	movff	??_CANsendMessage+1,??_CANsendMessage
  1967  001176  C084  F083         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1968  00117A  C085  F084         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1969  00117E  0100               	movlb	0	; () banked
  1970  001180  6B85               	clrf	(??_CANsendMessage+3)& (0+255),b
  1971  001182  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  1972  001186  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1973  00118A  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1974  00118E  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  1978  001192  C086  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  1982  001196  0E00               	movlw	0
  1983  001198  010F               	movlb	15	; () banked
  1984  00119A  6F22               	movwf	34,b	;volatile
  1985                           
  1986                           ; BSR set to: 15
  1987                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  1988  00119C  010F               	movlb	15	; () banked
  1989  00119E  8722               	bsf	34,3,b	;volatile
  1990                           
  1991                           ; BSR set to: 15
  1992                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  1993  0011A0  0100               	movlb	0	; () banked
  1994  0011A2  A17C               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1995  0011A4  D002               	goto	l390
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  1999  0011A6  010F               	movlb	15	; () banked
  2000  0011A8  8122               	bsf	34,0,b	;volatile
  2001  0011AA                     l390:
  2002                           
  2003                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2004  0011AA  0100               	movlb	0	; () banked
  2005  0011AC  A37C               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2006  0011AE  D002               	goto	l391
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2010  0011B0  010F               	movlb	15	; () banked
  2011  0011B2  8322               	bsf	34,1,b	;volatile
  2012  0011B4                     l391:
  2013                           
  2014                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2015  0011B4  0100               	movlb	0	; () banked
  2016  0011B6  A57C               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2017  0011B8  D002               	goto	l392
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2021  0011BA  010F               	movlb	15	; () banked
  2022  0011BC  8B22               	bsf	34,5,b	;volatile
  2023  0011BE                     l392:
  2024                           
  2025                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2026  0011BE  0100               	movlb	0	; () banked
  2027  0011C0  A77C               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2028  0011C2  D002               	goto	l393
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2032  0011C4  010F               	movlb	15	; () banked
  2033  0011C6  8D22               	bsf	34,6,b	;volatile
  2034  0011C8                     l393:
  2035                           
  2036                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2037  0011C8  0100               	movlb	0	; () banked
  2038  0011CA  A97C               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2039  0011CC  D002               	goto	l3121
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2043  0011CE  010F               	movlb	15	; () banked
  2044  0011D0  8F22               	bsf	34,7,b	;volatile
  2045  0011D2                     l3121:
  2046                           
  2047                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2048  0011D2  C07A  F082         	movff	CANsendMessage@identifier,??_CANsendMessage
  2049  0011D6  C07B  F083         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2050  0011DA  C07C  F084         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2051  0011DE  C07D  F085         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2052  0011E2  0E16               	movlw	22
  2053  0011E4  D006               	goto	u3430
  2054  0011E6                     u3435:
  2055  0011E6  0100               	movlb	0	; () banked
  2056  0011E8  90D8               	bcf	status,0,c
  2057  0011EA  3385               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2058  0011EC  3384               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2059  0011EE  3383               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2060  0011F0  3382               	rrcf	??_CANsendMessage& (0+255),f,b
  2061  0011F2                     u3430:
  2062  0011F2  2EE8               	decfsz	wreg,f,c
  2063  0011F4  D7F8               	goto	u3435
  2064  0011F6  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  2065  0011FA  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2066  0011FE  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2067  001202  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2071  001206  0100               	movlb	0	; () banked
  2072  001208  5186               	movf	CANsendMessage@tamp& (0+255),w,b
  2073  00120A  0100               	movlb	0	; () banked
  2074  00120C  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  2075  00120E  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2076  001210  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2077  001212  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2081  001214  C086  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2082                           
  2083                           ;inc\CANlib.h: 483: }
  2084  001218  D059               	goto	l3141
  2085  00121A                     l389:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;inc\CANlib.h: 485: else
  2089                           ;inc\CANlib.h: 487: {
  2090                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2091  00121A  010F               	movlb	15	; () banked
  2092  00121C  9722               	bcf	34,3,b	;volatile
  2093                           
  2094                           ; BSR set to: 15
  2095                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2096  00121E  C07A  F082         	movff	CANsendMessage@identifier,??_CANsendMessage
  2097  001222  C07B  F083         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2098  001226  C07C  F084         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2099  00122A  C07D  F085         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2100  00122E  0E04               	movlw	4
  2101  001230  D006               	goto	u3440
  2102  001232                     u3445:
  2103  001232  0100               	movlb	0	; () banked
  2104  001234  90D8               	bcf	status,0,c
  2105  001236  3385               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2106  001238  3384               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2107  00123A  3383               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2108  00123C  3382               	rrcf	??_CANsendMessage& (0+255),f,b
  2109  00123E                     u3440:
  2110  00123E  2EE8               	decfsz	wreg,f,c
  2111  001240  D7F8               	goto	u3445
  2112  001242  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  2113  001246  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2114  00124A  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2115  00124E  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2119  001252  0100               	movlb	0	; () banked
  2120  001254  5186               	movf	CANsendMessage@tamp& (0+255),w,b
  2121  001256  0100               	movlb	0	; () banked
  2122  001258  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  2123  00125A  6B87               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2124  00125C  6B88               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2125  00125E  6B89               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2129  001260  C086  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2133  001264  0E07               	movlw	7
  2134  001266  0100               	movlb	0	; () banked
  2135  001268  157A               	andwf	CANsendMessage@identifier& (0+255),w,b
  2136  00126A  0100               	movlb	0	; () banked
  2137  00126C  6F86               	movwf	CANsendMessage@tamp& (0+255),b
  2138  00126E  0E00               	movlw	0
  2139  001270  0100               	movlb	0	; () banked
  2140  001272  157B               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2141  001274  0100               	movlb	0	; () banked
  2142  001276  6F87               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2143  001278  0E00               	movlw	0
  2144  00127A  0100               	movlb	0	; () banked
  2145  00127C  157C               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2146  00127E  0100               	movlb	0	; () banked
  2147  001280  6F88               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2148  001282  0E00               	movlw	0
  2149  001284  0100               	movlb	0	; () banked
  2150  001286  157D               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2151  001288  0100               	movlb	0	; () banked
  2152  00128A  6F89               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2156  00128C  C086  F082         	movff	CANsendMessage@tamp,??_CANsendMessage
  2157  001290  C087  F083         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2158  001294  C088  F084         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2159  001298  C089  F085         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2160  00129C  0E05               	movlw	5
  2161  00129E                     u3455:
  2162  00129E  90D8               	bcf	status,0,c
  2163  0012A0  0100               	movlb	0	; () banked
  2164  0012A2  3782               	rlcf	??_CANsendMessage& (0+255),f,b
  2165  0012A4  3783               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2166  0012A6  3784               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2167  0012A8  3785               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2168  0012AA  2EE8               	decfsz	wreg,f,c
  2169  0012AC  D7F8               	goto	u3455
  2170  0012AE  C082  F086         	movff	??_CANsendMessage,CANsendMessage@tamp
  2171  0012B2  C083  F087         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2172  0012B6  C084  F088         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2173  0012BA  C085  F089         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2177  0012BE  010F               	movlb	15	; () banked
  2178  0012C0  5122               	movf	34,w,b	;volatile
  2179  0012C2  0B1F               	andlw	31
  2180  0012C4  010F               	movlb	15	; () banked
  2181  0012C6  6F22               	movwf	34,b	;volatile
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2185  0012C8  C086  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2186  0012CC                     l3141:
  2187                           
  2188                           ;inc\CANlib.h: 498: }
  2189                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2190  0012CC  0100               	movlb	0	; () banked
  2191  0012CE  A181               	btfss	CANsendMessage@flags& (0+255),0,b
  2192  0012D0  D003               	goto	l396
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2196  0012D2  010F               	movlb	15	; () banked
  2197  0012D4  8120               	bsf	32,0,b	;volatile
  2198  0012D6  D002               	goto	l397
  2199  0012D8                     l396:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;inc\CANlib.h: 502: else
  2203                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2204  0012D8  010F               	movlb	15	; () banked
  2205  0012DA  9120               	bcf	32,0,b	;volatile
  2206  0012DC                     l397:
  2207                           
  2208                           ; BSR set to: 15
  2209                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2210  0012DC  0100               	movlb	0	; () banked
  2211  0012DE  A381               	btfss	CANsendMessage@flags& (0+255),1,b
  2212  0012E0  D003               	goto	l398
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2216  0012E2  010F               	movlb	15	; () banked
  2217  0012E4  8320               	bsf	32,1,b	;volatile
  2218  0012E6  D002               	goto	l3147
  2219  0012E8                     l398:
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;inc\CANlib.h: 506: else
  2223                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2224  0012E8  010F               	movlb	15	; () banked
  2225  0012EA  9320               	bcf	32,1,b	;volatile
  2226  0012EC                     l3147:
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2230  0012EC  C07E  FFD9         	movff	CANsendMessage@data,fsr2l
  2231  0012F0  C07F  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2232  0012F4  50DF               	movf	indf2,w,c
  2233  0012F6  010F               	movlb	15	; () banked
  2234  0012F8  6F26               	movwf	38,b	;volatile
  2235                           
  2236                           ; BSR set to: 15
  2237                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2238  0012FA  0100               	movlb	0	; () banked
  2239  0012FC  EE20 F001          	lfsr	2,1
  2240  001300  517E               	movf	CANsendMessage@data& (0+255),w,b
  2241  001302  26D9               	addwf	fsr2l,f,c
  2242  001304  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2243  001306  22DA               	addwfc	fsr2h,f,c
  2244  001308  50DF               	movf	indf2,w,c
  2245  00130A  010F               	movlb	15	; () banked
  2246  00130C  6F27               	movwf	39,b	;volatile
  2247                           
  2248                           ; BSR set to: 15
  2249                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2250  00130E  0100               	movlb	0	; () banked
  2251  001310  EE20 F002          	lfsr	2,2
  2252  001314  517E               	movf	CANsendMessage@data& (0+255),w,b
  2253  001316  26D9               	addwf	fsr2l,f,c
  2254  001318  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2255  00131A  22DA               	addwfc	fsr2h,f,c
  2256  00131C  50DF               	movf	indf2,w,c
  2257  00131E  010F               	movlb	15	; () banked
  2258  001320  6F28               	movwf	40,b	;volatile
  2259                           
  2260                           ; BSR set to: 15
  2261                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2262  001322  0100               	movlb	0	; () banked
  2263  001324  EE20 F003          	lfsr	2,3
  2264  001328  517E               	movf	CANsendMessage@data& (0+255),w,b
  2265  00132A  26D9               	addwf	fsr2l,f,c
  2266  00132C  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2267  00132E  22DA               	addwfc	fsr2h,f,c
  2268  001330  50DF               	movf	indf2,w,c
  2269  001332  010F               	movlb	15	; () banked
  2270  001334  6F29               	movwf	41,b	;volatile
  2271                           
  2272                           ; BSR set to: 15
  2273                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2274  001336  0100               	movlb	0	; () banked
  2275  001338  EE20 F004          	lfsr	2,4
  2276  00133C  517E               	movf	CANsendMessage@data& (0+255),w,b
  2277  00133E  26D9               	addwf	fsr2l,f,c
  2278  001340  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2279  001342  22DA               	addwfc	fsr2h,f,c
  2280  001344  50DF               	movf	indf2,w,c
  2281  001346  010F               	movlb	15	; () banked
  2282  001348  6F2A               	movwf	42,b	;volatile
  2283                           
  2284                           ; BSR set to: 15
  2285                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2286  00134A  0100               	movlb	0	; () banked
  2287  00134C  EE20 F005          	lfsr	2,5
  2288  001350  517E               	movf	CANsendMessage@data& (0+255),w,b
  2289  001352  26D9               	addwf	fsr2l,f,c
  2290  001354  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2291  001356  22DA               	addwfc	fsr2h,f,c
  2292  001358  50DF               	movf	indf2,w,c
  2293  00135A  010F               	movlb	15	; () banked
  2294  00135C  6F2B               	movwf	43,b	;volatile
  2295                           
  2296                           ; BSR set to: 15
  2297                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2298  00135E  0100               	movlb	0	; () banked
  2299  001360  EE20 F006          	lfsr	2,6
  2300  001364  517E               	movf	CANsendMessage@data& (0+255),w,b
  2301  001366  26D9               	addwf	fsr2l,f,c
  2302  001368  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2303  00136A  22DA               	addwfc	fsr2h,f,c
  2304  00136C  50DF               	movf	indf2,w,c
  2305  00136E  010F               	movlb	15	; () banked
  2306  001370  6F2C               	movwf	44,b	;volatile
  2307                           
  2308                           ; BSR set to: 15
  2309                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2310  001372  0100               	movlb	0	; () banked
  2311  001374  EE20 F007          	lfsr	2,7
  2312  001378  517E               	movf	CANsendMessage@data& (0+255),w,b
  2313  00137A  26D9               	addwf	fsr2l,f,c
  2314  00137C  517F               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2315  00137E  22DA               	addwfc	fsr2h,f,c
  2316  001380  50DF               	movf	indf2,w,c
  2317  001382  010F               	movlb	15	; () banked
  2318  001384  6F2D               	movwf	45,b	;volatile
  2319                           
  2320                           ; BSR set to: 15
  2321                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2322  001386  010F               	movlb	15	; () banked
  2323  001388  8720               	bsf	32,3,b	;volatile
  2324                           
  2325                           ; BSR set to: 15
  2326                           ;inc\CANlib.h: 520: return;
  2327  00138A  0012               	return	
  2328  00138C                     __end_of_CANsendMessage:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           prodh	equ	0xFF4
  2335                           prodl	equ	0xFF3
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           postdec1	equ	0xFE5
  2339                           fsr1l	equ	0xFE1
  2340                           indf2	equ	0xFDF
  2341                           fsr2h	equ	0xFDA
  2342                           fsr2l	equ	0xFD9
  2343                           status	equ	0xFD8
  2344                           
  2345 ;; *************** function _CANisTxReady *****************
  2346 ;; Defined at:
  2347 ;;		line 1154 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      unsigned char 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2361 ;;      Params:         0       0       0       0
  2362 ;;      Locals:         0       1       0       0
  2363 ;;      Temps:          0       0       0       0
  2364 ;;      Totals:         0       1       0       0
  2365 ;;Total ram usage:        1 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    4
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_status_ok
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text3
  2376  002400                     __ptext3:
  2377                           	opt stack 0
  2378  002400                     _CANisTxReady:
  2379                           	opt stack 25
  2380                           
  2381                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2382                           
  2383                           ; BSR set to: 15
  2384                           ;incstack = 0
  2385  002400  0E01               	movlw	1
  2386  002402  0100               	movlb	0	; () banked
  2387  002404  6F7A               	movwf	_CANisTxReady$2910& (0+255),b
  2388                           
  2389                           ; BSR set to: 0
  2390  002406  010F               	movlb	15	; () banked
  2391  002408  A740               	btfss	64,3,b	;volatile
  2392  00240A  D009               	goto	l550
  2393                           
  2394                           ; BSR set to: 15
  2395  00240C  010F               	movlb	15	; () banked
  2396  00240E  A730               	btfss	48,3,b	;volatile
  2397  002410  D006               	goto	l550
  2398                           
  2399                           ; BSR set to: 15
  2400  002412  010F               	movlb	15	; () banked
  2401  002414  A720               	btfss	32,3,b	;volatile
  2402  002416  D003               	goto	l550
  2403                           
  2404                           ; BSR set to: 15
  2405  002418  0E00               	movlw	0
  2406  00241A  0100               	movlb	0	; () banked
  2407  00241C  6F7A               	movwf	_CANisTxReady$2910& (0+255),b
  2408  00241E                     l550:
  2409  00241E  0100               	movlb	0	; () banked
  2410  002420  517A               	movf	_CANisTxReady$2910& (0+255),w,b
  2411  002422  0012               	return	
  2412  002424                     __end_of_CANisTxReady:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           postdec1	equ	0xFE5
  2423                           fsr1l	equ	0xFE1
  2424                           indf2	equ	0xFDF
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _board_initialization *****************
  2430 ;; Defined at:
  2431 ;;		line 202 in file "ABS_Code.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2445 ;;      Params:         0       0       0       0
  2446 ;;      Locals:         0       0       0       0
  2447 ;;      Temps:          0       0       0       0
  2448 ;;      Totals:         0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    6
  2452 ;; This function calls:
  2453 ;;		_CANInitialize
  2454 ;;		_delay_ms
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text4
  2461  002140                     __ptext4:
  2462                           	opt stack 0
  2463  002140                     _board_initialization:
  2464                           	opt stack 24
  2465                           
  2466                           ;ABS_Code.c: 204: LATA = 0x00;
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;incstack = 0
  2470  002140  0E00               	movlw	0
  2471  002142  6E89               	movwf	3977,c	;volatile
  2472                           
  2473                           ;ABS_Code.c: 205: TRISA = 0xFF;
  2474  002144  6892               	setf	3986,c	;volatile
  2475                           
  2476                           ;ABS_Code.c: 206: LATB = 0x00;
  2477  002146  0E00               	movlw	0
  2478  002148  6E8A               	movwf	3978,c	;volatile
  2479                           
  2480                           ;ABS_Code.c: 207: TRISB = 0b11111110;
  2481  00214A  0EFE               	movlw	254
  2482  00214C  6E93               	movwf	3987,c	;volatile
  2483                           
  2484                           ;ABS_Code.c: 208: LATC = 0x00;
  2485  00214E  0E00               	movlw	0
  2486  002150  6E8B               	movwf	3979,c	;volatile
  2487                           
  2488                           ;ABS_Code.c: 209: TRISC = 0b11111110;
  2489  002152  0EFE               	movlw	254
  2490  002154  6E94               	movwf	3988,c	;volatile
  2491                           
  2492                           ;ABS_Code.c: 210: LATD = 0x00;
  2493  002156  0E00               	movlw	0
  2494  002158  6E8C               	movwf	3980,c	;volatile
  2495                           
  2496                           ;ABS_Code.c: 211: TRISD = 0xFF;
  2497  00215A  6895               	setf	3989,c	;volatile
  2498                           
  2499                           ;ABS_Code.c: 212: LATE = 0x00;
  2500  00215C  0E00               	movlw	0
  2501  00215E  6E8D               	movwf	3981,c	;volatile
  2502                           
  2503                           ;ABS_Code.c: 213: TRISE = 0xFF;
  2504  002160  6896               	setf	3990,c	;volatile
  2505                           
  2506                           ;ABS_Code.c: 215: ADCON1 = 0x11111110;
  2507  002162  0E10               	movlw	16
  2508  002164  6EC1               	movwf	4033,c	;volatile
  2509                           
  2510                           ;ABS_Code.c: 218: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2511  002166  0E06               	movlw	6
  2512  002168  0100               	movlb	0	; () banked
  2513  00216A  6F88               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2514  00216C  0E05               	movlw	5
  2515  00216E  0100               	movlb	0	; () banked
  2516  002170  6F89               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2517  002172  0E01               	movlw	1
  2518  002174  0100               	movlb	0	; () banked
  2519  002176  6F8A               	movwf	CANInitialize@SJW& (0+255),b
  2520  002178  0E03               	movlw	3
  2521  00217A  0100               	movlb	0	; () banked
  2522  00217C  6F8B               	movwf	CANInitialize@BRP& (0+255),b
  2523  00217E  0E9D               	movlw	157
  2524  002180  0100               	movlb	0	; () banked
  2525  002182  6F8C               	movwf	CANInitialize@flags& (0+255),b
  2526  002184  0E04               	movlw	4
  2527  002186  EC01  F00F         	call	_CANInitialize
  2528                           
  2529                           ;ABS_Code.c: 221: PIR3bits.RXB1IF = 0;
  2530  00218A  92A4               	bcf	4004,1,c	;volatile
  2531                           
  2532                           ;ABS_Code.c: 222: PIR3bits.RXB0IF = 0;
  2533  00218C  90A4               	bcf	4004,0,c	;volatile
  2534                           
  2535                           ;ABS_Code.c: 223: INTCONbits.TMR0IF = 0;
  2536  00218E  94F2               	bcf	intcon,2,c	;volatile
  2537                           
  2538                           ;ABS_Code.c: 224: PIR2bits.TMR3IF = 0;
  2539  002190  92A1               	bcf	4001,1,c	;volatile
  2540                           
  2541                           ;ABS_Code.c: 227: RCONbits.IPEN = 1;
  2542  002192  8ED0               	bsf	4048,7,c	;volatile
  2543                           
  2544                           ;ABS_Code.c: 228: IPR3bits.RXB1IP = 0;
  2545  002194  92A5               	bcf	4005,1,c	;volatile
  2546                           
  2547                           ;ABS_Code.c: 229: IPR3bits.RXB0IP = 0;
  2548  002196  90A5               	bcf	4005,0,c	;volatile
  2549                           
  2550                           ;ABS_Code.c: 230: INTCON2bits.TMR0IP = 1;
  2551  002198  84F1               	bsf	intcon2,2,c	;volatile
  2552                           
  2553                           ;ABS_Code.c: 233: T0CON = 0x80;
  2554  00219A  0E80               	movlw	128
  2555  00219C  6ED5               	movwf	4053,c	;volatile
  2556                           
  2557                           ;ABS_Code.c: 240: TMR0H = 0xFF;
  2558  00219E  68D7               	setf	4055,c	;volatile
  2559                           
  2560                           ;ABS_Code.c: 241: TMR0L = 0xFE;
  2561  0021A0  0EFE               	movlw	254
  2562  0021A2  6ED6               	movwf	4054,c	;volatile
  2563                           
  2564                           ;ABS_Code.c: 242: PORTCbits.RC0 = 0;
  2565  0021A4  9082               	bcf	3970,0,c	;volatile
  2566                           
  2567                           ;ABS_Code.c: 243: brake_value_degree = 90;
  2568  0021A6  0E5A               	movlw	90
  2569  0021A8  6E3F               	movwf	_brake_value_degree,c
  2570                           
  2571                           ;ABS_Code.c: 244: INTCON2bits.INTEDG0 = 1;
  2572  0021AA  8CF1               	bsf	intcon2,6,c	;volatile
  2573                           
  2574                           ;ABS_Code.c: 247: ADCON1 = 0b01110111;
  2575  0021AC  0E77               	movlw	119
  2576  0021AE  6EC1               	movwf	4033,c	;volatile
  2577                           
  2578                           ;ABS_Code.c: 248: ADCON0bits.CHS2 = 0;
  2579  0021B0  98C2               	bcf	4034,4,c	;volatile
  2580                           
  2581                           ;ABS_Code.c: 249: ADCON0bits.CHS1 = 0;
  2582  0021B2  96C2               	bcf	4034,3,c	;volatile
  2583                           
  2584                           ;ABS_Code.c: 250: ADCON0bits.CHS0 = 0;
  2585  0021B4  94C2               	bcf	4034,2,c	;volatile
  2586                           
  2587                           ;ABS_Code.c: 251: ADCON2bits.ACQT2 = 1;
  2588  0021B6  8AC0               	bsf	4032,5,c	;volatile
  2589                           
  2590                           ;ABS_Code.c: 252: ADCON2bits.ACQT1 = 1;
  2591  0021B8  88C0               	bsf	4032,4,c	;volatile
  2592                           
  2593                           ;ABS_Code.c: 253: ADCON2bits.ACQT0 = 0;
  2594  0021BA  96C0               	bcf	4032,3,c	;volatile
  2595                           
  2596                           ;ABS_Code.c: 254: ADCON2bits.ADCS2 = 1;
  2597  0021BC  84C0               	bsf	4032,2,c	;volatile
  2598                           
  2599                           ;ABS_Code.c: 255: ADCON2bits.ADCS1 = 0;
  2600  0021BE  92C0               	bcf	4032,1,c	;volatile
  2601                           
  2602                           ;ABS_Code.c: 256: ADCON2bits.ADCS0 = 1;
  2603  0021C0  80C0               	bsf	4032,0,c	;volatile
  2604                           
  2605                           ;ABS_Code.c: 257: ADCON2bits.ADFM = 0;
  2606  0021C2  9EC0               	bcf	4032,7,c	;volatile
  2607                           
  2608                           ;ABS_Code.c: 258: ADCON0bits.ADON = 1;
  2609  0021C4  80C2               	bsf	4034,0,c	;volatile
  2610                           
  2611                           ;ABS_Code.c: 261: PIE3bits.RXB1IE = 1;
  2612  0021C6  82A3               	bsf	4003,1,c	;volatile
  2613                           
  2614                           ;ABS_Code.c: 262: PIE3bits.RXB0IE = 1;
  2615  0021C8  80A3               	bsf	4003,0,c	;volatile
  2616                           
  2617                           ;ABS_Code.c: 263: INTCONbits.TMR0IE = 1;
  2618  0021CA  8AF2               	bsf	intcon,5,c	;volatile
  2619                           
  2620                           ;ABS_Code.c: 264: INTCONbits.GIEH = 1;
  2621  0021CC  8EF2               	bsf	intcon,7,c	;volatile
  2622                           
  2623                           ;ABS_Code.c: 265: INTCONbits.GIEL = 1;
  2624  0021CE  8CF2               	bsf	intcon,6,c	;volatile
  2625                           
  2626                           ;ABS_Code.c: 268: T3CON = 0x01;
  2627  0021D0  0E01               	movlw	1
  2628  0021D2  6EB1               	movwf	4017,c	;volatile
  2629                           
  2630                           ;ABS_Code.c: 269: T0CONbits.TMR0ON = 1;
  2631  0021D4  8ED5               	bsf	4053,7,c	;volatile
  2632                           
  2633                           ;ABS_Code.c: 271: delay_ms(2);
  2634  0021D6  0E00               	movlw	0
  2635  0021D8  0100               	movlb	0	; () banked
  2636  0021DA  6F81               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2637  0021DC  0E02               	movlw	2
  2638  0021DE  6F80               	movwf	delay_ms@value_ms& (0+255),b
  2639  0021E0  ECB5  F011         	call	_delay_ms	;wreg free
  2640  0021E4  0012               	return		;funcret
  2641  0021E6                     __end_of_board_initialization:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           intcon	equ	0xFF2
  2650                           intcon2	equ	0xFF1
  2651                           postinc0	equ	0xFEE
  2652                           wreg	equ	0xFE8
  2653                           postdec1	equ	0xFE5
  2654                           fsr1l	equ	0xFE1
  2655                           indf2	equ	0xFDF
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function _delay_ms *****************
  2661 ;; Defined at:
  2662 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  value_ms        2   32[BANK0 ] unsigned int 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;		None               void
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2676 ;;      Params:         0       2       0       0
  2677 ;;      Locals:         0       0       0       0
  2678 ;;      Temps:          0       0       0       0
  2679 ;;      Totals:         0       2       0       0
  2680 ;;Total ram usage:        2 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    5
  2683 ;; This function calls:
  2684 ;;		___wmul
  2685 ;; This function is called by:
  2686 ;;		_board_initialization
  2687 ;;		_delay_s
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text5
  2692  00236A                     __ptext5:
  2693                           	opt stack 0
  2694  00236A                     _delay_ms:
  2695                           	opt stack 24
  2696                           
  2697                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2698                           
  2699                           ;incstack = 0
  2700  00236A  C0A2  F07A         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2701  00236E  0100               	movlb	0	; () banked
  2702  002370  6B7B               	clrf	(___wmul@multiplier+1)& (0+255),b
  2703  002372  C080  F07C         	movff	delay_ms@value_ms,___wmul@multiplicand
  2704  002376  C081  F07D         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2705  00237A  ECD2  F011         	call	___wmul	;wreg free
  2706  00237E  C07A  F098         	movff	?___wmul,_clock_counter_reference	;volatile
  2707  002382  C07B  F099         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2708                           
  2709                           ;src\delay.c: 75: while (clock_counter_reference) {
  2710  002386  D007               	goto	l563
  2711  002388                     l3181:
  2712                           
  2713                           ;src\delay.c: 85: _delay(240);
  2714  002388  0E50               	movlw	80
  2715  00238A                     u4247:
  2716  00238A  2EE8               	decfsz	wreg,f,c
  2717  00238C  D7FE               	goto	u4247
  2718                           
  2719                           ;src\delay.c: 88: clock_counter_reference--;
  2720  00238E  0100               	movlb	0	; () banked
  2721  002390  0798               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  2722  002392  A0D8               	btfss	status,0,c
  2723  002394  0799               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  2724  002396                     l563:
  2725  002396  0100               	movlb	0	; () banked
  2726  002398  5198               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  2727  00239A  0100               	movlb	0	; () banked
  2728  00239C  1199               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  2729  00239E  B4D8               	btfsc	status,2,c
  2730  0023A0  0012               	return	
  2731  0023A2  D7F2               	goto	l3181
  2732  0023A4                     __end_of_delay_ms:
  2733                           	opt stack 0
  2734                           tblptru	equ	0xFF8
  2735                           tblptrh	equ	0xFF7
  2736                           tblptrl	equ	0xFF6
  2737                           tablat	equ	0xFF5
  2738                           prodh	equ	0xFF4
  2739                           prodl	equ	0xFF3
  2740                           intcon	equ	0xFF2
  2741                           intcon2	equ	0xFF1
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           postdec1	equ	0xFE5
  2745                           fsr1l	equ	0xFE1
  2746                           indf2	equ	0xFDF
  2747                           fsr2h	equ	0xFDA
  2748                           fsr2l	equ	0xFD9
  2749                           status	equ	0xFD8
  2750                           
  2751 ;; *************** function ___wmul *****************
  2752 ;; Defined at:
  2753 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  multiplier      2   26[BANK0 ] unsigned int 
  2756 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  product         2   30[BANK0 ] unsigned int 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  2   26[BANK0 ] unsigned int 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, prodl, prodh
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2768 ;;      Params:         0       4       0       0
  2769 ;;      Locals:         0       2       0       0
  2770 ;;      Temps:          0       0       0       0
  2771 ;;      Totals:         0       6       0       0
  2772 ;;Total ram usage:        6 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    4
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_delay_ms
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text6
  2783  0023A4                     __ptext6:
  2784                           	opt stack 0
  2785  0023A4                     ___wmul:
  2786                           	opt stack 24
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;incstack = 0
  2790  0023A4  0100               	movlb	0	; () banked
  2791  0023A6  517A               	movf	___wmul@multiplier& (0+255),w,b
  2792  0023A8  0100               	movlb	0	; () banked
  2793  0023AA  037C               	mulwf	___wmul@multiplicand& (0+255),b
  2794  0023AC  CFF3 F07E          	movff	prodl,___wmul@product
  2795  0023B0  CFF4 F07F          	movff	prodh,___wmul@product+1
  2796  0023B4  0100               	movlb	0	; () banked
  2797  0023B6  517A               	movf	___wmul@multiplier& (0+255),w,b
  2798  0023B8  0100               	movlb	0	; () banked
  2799  0023BA  037D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2800  0023BC  50F3               	movf	prodl,w,c
  2801  0023BE  0100               	movlb	0	; () banked
  2802  0023C0  277F               	addwf	(___wmul@product+1)& (0+255),f,b
  2803  0023C2  0100               	movlb	0	; () banked
  2804  0023C4  517B               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2805  0023C6  0100               	movlb	0	; () banked
  2806  0023C8  037C               	mulwf	___wmul@multiplicand& (0+255),b
  2807  0023CA  50F3               	movf	prodl,w,c
  2808  0023CC  0100               	movlb	0	; () banked
  2809  0023CE  277F               	addwf	(___wmul@product+1)& (0+255),f,b
  2810                           
  2811                           ; BSR set to: 0
  2812  0023D0  C07E  F07A         	movff	___wmul@product,?___wmul
  2813  0023D4  C07F  F07B         	movff	___wmul@product+1,?___wmul+1
  2814  0023D8  0012               	return	
  2815  0023DA                     __end_of___wmul:
  2816                           	opt stack 0
  2817                           tblptru	equ	0xFF8
  2818                           tblptrh	equ	0xFF7
  2819                           tblptrl	equ	0xFF6
  2820                           tablat	equ	0xFF5
  2821                           prodh	equ	0xFF4
  2822                           prodl	equ	0xFF3
  2823                           intcon	equ	0xFF2
  2824                           intcon2	equ	0xFF1
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           postdec1	equ	0xFE5
  2828                           fsr1l	equ	0xFE1
  2829                           indf2	equ	0xFDF
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function _CANInitialize *****************
  2835 ;; Defined at:
  2836 ;;		line 218 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  propSeg         1    wreg     unsigned char 
  2839 ;;  phaseSeg1       1   40[BANK0 ] unsigned char 
  2840 ;;  phaseSeg2       1   41[BANK0 ] unsigned char 
  2841 ;;  SJW             1   42[BANK0 ] unsigned char 
  2842 ;;  BRP             1   43[BANK0 ] unsigned char 
  2843 ;;  flags           1   44[BANK0 ] enum E16844
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  propSeg         1   49[BANK0 ] unsigned char 
  2846 ;;  FilterConfig    1   51[BANK0 ] unsigned char 
  2847 ;;  FilterConfig    1   50[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2857 ;;      Params:         0       5       0       0
  2858 ;;      Locals:         0       3       0       0
  2859 ;;      Temps:          0       4       0       0
  2860 ;;      Totals:         0      12       0       0
  2861 ;;Total ram usage:       12 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    5
  2864 ;; This function calls:
  2865 ;;		_CANOperationMode
  2866 ;;		_CANSetFilter
  2867 ;;		_CANSetMask
  2868 ;; This function is called by:
  2869 ;;		_board_initialization
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text7
  2874  001E02                     __ptext7:
  2875                           	opt stack 0
  2876  001E02                     _CANInitialize:
  2877                           	opt stack 24
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;incstack = 0
  2881                           ;CANInitialize@propSeg stored from wreg
  2882  001E02  0100               	movlb	0	; () banked
  2883  001E04  6F91               	movwf	CANInitialize@propSeg& (0+255),b
  2884                           
  2885                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2886                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2887                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2888  001E06  0E80               	movlw	128
  2889  001E08  EC12  F012         	call	_CANOperationMode
  2890                           
  2891                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2892  001E0C  0E00               	movlw	0
  2893  001E0E  6E70               	movwf	3952,c	;volatile
  2894                           
  2895                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2896  001E10  0E00               	movlw	0
  2897  001E12  6E71               	movwf	3953,c	;volatile
  2898                           
  2899                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2900  001E14  0E00               	movlw	0
  2901  001E16  6E72               	movwf	3954,c	;volatile
  2902                           
  2903                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2904  001E18  0100               	movlb	0	; () banked
  2905  001E1A  418A               	rrncf	CANInitialize@SJW& (0+255),w,b
  2906  001E1C  42E8               	rrncf	wreg,f,c
  2907  001E1E  0BC0               	andlw	192
  2908  001E20  0100               	movlb	0	; () banked
  2909  001E22  6F8A               	movwf	CANInitialize@SJW& (0+255),b
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2913  001E24  0100               	movlb	0	; () banked
  2914  001E26  518A               	movf	CANInitialize@SJW& (0+255),w,b
  2915  001E28  1270               	iorwf	3952,f,c	;volatile
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2919  001E2A  0100               	movlb	0	; () banked
  2920  001E2C  518B               	movf	CANInitialize@BRP& (0+255),w,b
  2921  001E2E  1270               	iorwf	3952,f,c	;volatile
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2925  001E30  0100               	movlb	0	; () banked
  2926  001E32  5191               	movf	CANInitialize@propSeg& (0+255),w,b
  2927  001E34  1271               	iorwf	3953,f,c	;volatile
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2931  001E36  0100               	movlb	0	; () banked
  2932  001E38  3988               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2933  001E3A  42E8               	rrncf	wreg,f,c
  2934  001E3C  0BF8               	andlw	248
  2935  001E3E  0100               	movlb	0	; () banked
  2936  001E40  6F88               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2940  001E42  0100               	movlb	0	; () banked
  2941  001E44  5188               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2942  001E46  1271               	iorwf	3953,f,c	;volatile
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2946  001E48  0100               	movlb	0	; () banked
  2947  001E4A  A58C               	btfss	CANInitialize@flags& (0+255),2,b
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2951  001E4C  8C71               	bsf	3953,6,c	;volatile
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2955  001E4E  0100               	movlb	0	; () banked
  2956  001E50  B18C               	btfsc	CANInitialize@flags& (0+255),0,b
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2960  001E52  8E71               	bsf	3953,7,c	;volatile
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2964                           
  2965                           ; BSR set to: 0
  2966  001E54  0100               	movlb	0	; () banked
  2967  001E56  5189               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2968  001E58  1272               	iorwf	3954,f,c	;volatile
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2972  001E5A  0100               	movlb	0	; () banked
  2973  001E5C  B38C               	btfsc	CANInitialize@flags& (0+255),1,b
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2977  001E5E  8C72               	bsf	3954,6,c	;volatile
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2981                           
  2982                           ; BSR set to: 0
  2983  001E60  0100               	movlb	0	; () banked
  2984  001E62  518C               	movf	CANInitialize@flags& (0+255),w,b
  2985  001E64  0B60               	andlw	96
  2986  001E66  6E60               	movwf	3936,c	;volatile
  2987                           
  2988                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2989  001E68  0100               	movlb	0	; () banked
  2990  001E6A  518C               	movf	CANInitialize@flags& (0+255),w,b
  2991  001E6C  0B10               	andlw	16
  2992  001E6E  0AFF               	xorlw	255
  2993  001E70  B4D8               	btfsc	status,2,c
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2997  001E72  8460               	bsf	3936,2,c	;volatile
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3001  001E74  CF60 FF50          	movff	3936,3920	;volatile
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3005  001E78  0E00               	movlw	0
  3006  001E7A  0100               	movlb	0	; () banked
  3007  001E7C  6F7A               	movwf	CANSetMask@mask& (0+255),b
  3008  001E7E  0E00               	movlw	0
  3009  001E80  6F7B               	movwf	(CANSetMask@mask+1)& (0+255),b
  3010  001E82  0E00               	movlw	0
  3011  001E84  6F7C               	movwf	(CANSetMask@mask+2)& (0+255),b
  3012  001E86  0E00               	movlw	0
  3013  001E88  6F7D               	movwf	(CANSetMask@mask+3)& (0+255),b
  3014  001E8A  0EF7               	movlw	247
  3015  001E8C  0100               	movlb	0	; () banked
  3016  001E8E  6F7E               	movwf	CANSetMask@type& (0+255),b
  3017  001E90  0E01               	movlw	1
  3018  001E92  EC4C  F00C         	call	_CANSetMask
  3019                           
  3020                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3021  001E96  0E00               	movlw	0
  3022  001E98  0100               	movlb	0	; () banked
  3023  001E9A  6F7A               	movwf	CANSetMask@mask& (0+255),b
  3024  001E9C  0E00               	movlw	0
  3025  001E9E  6F7B               	movwf	(CANSetMask@mask+1)& (0+255),b
  3026  001EA0  0E00               	movlw	0
  3027  001EA2  6F7C               	movwf	(CANSetMask@mask+2)& (0+255),b
  3028  001EA4  0E00               	movlw	0
  3029  001EA6  6F7D               	movwf	(CANSetMask@mask+3)& (0+255),b
  3030  001EA8  0EF7               	movlw	247
  3031  001EAA  0100               	movlb	0	; () banked
  3032  001EAC  6F7E               	movwf	CANSetMask@type& (0+255),b
  3033  001EAE  0E02               	movlw	2
  3034  001EB0  EC4C  F00C         	call	_CANSetMask
  3035                           
  3036                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3037  001EB4  D00F               	goto	l2929
  3038  001EB6                     l2923:
  3039                           
  3040                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3041  001EB6  0EF7               	movlw	247
  3042  001EB8  0100               	movlb	0	; () banked
  3043  001EBA  6F92               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3044  001EBC  D007               	goto	l2925
  3045  001EBE                     l352:
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3049  001EBE  0100               	movlb	0	; () banked
  3050  001EC0  6992               	setf	CANInitialize@FilterConfig1& (0+255),b
  3051                           
  3052                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3053  001EC2  0100               	movlb	0	; () banked
  3054  001EC4  6993               	setf	CANInitialize@FilterConfig2& (0+255),b
  3055                           
  3056                           ;inc\CANlib.h: 273: break;
  3057  001EC6  D028               	goto	l2931
  3058  001EC8                     l353:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3062  001EC8  0100               	movlb	0	; () banked
  3063  001ECA  6992               	setf	CANInitialize@FilterConfig1& (0+255),b
  3064  001ECC                     l2925:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3068  001ECC  0EF7               	movlw	247
  3069  001ECE  0100               	movlb	0	; () banked
  3070  001ED0  6F93               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;inc\CANlib.h: 278: }
  3074                           
  3075                           ;inc\CANlib.h: 277: break;
  3076  001ED2  D022               	goto	l2931
  3077  001ED4                     l2929:
  3078  001ED4  0E9F               	movlw	159
  3079  001ED6  0100               	movlb	0	; () banked
  3080  001ED8  6F8D               	movwf	??_CANInitialize& (0+255),b
  3081  001EDA  0EFF               	movlw	255
  3082  001EDC  0100               	movlb	0	; () banked
  3083  001EDE  6F8E               	movwf	(??_CANInitialize+1)& (0+255),b
  3084  001EE0  0100               	movlb	0	; () banked
  3085  001EE2  518C               	movf	CANInitialize@flags& (0+255),w,b
  3086  001EE4  0B60               	andlw	96
  3087  001EE6  0100               	movlb	0	; () banked
  3088  001EE8  6F8F               	movwf	(??_CANInitialize+2)& (0+255),b
  3089  001EEA  6B90               	clrf	(??_CANInitialize+3)& (0+255),b
  3090  001EEC  0100               	movlb	0	; () banked
  3091  001EEE  518D               	movf	??_CANInitialize& (0+255),w,b
  3092  001EF0  0100               	movlb	0	; () banked
  3093  001EF2  138F               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3094  001EF4  0100               	movlb	0	; () banked
  3095  001EF6  518E               	movf	(??_CANInitialize+1)& (0+255),w,b
  3096  001EF8  0100               	movlb	0	; () banked
  3097  001EFA  1390               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3098                           
  3099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3100                           ; Switch size 1, requested type "space"
  3101                           ; Number of cases is 1, Range of values is 0 to 0
  3102                           ; switch strategies available:
  3103                           ; Name         Instructions Cycles
  3104                           ; simple_byte            4     3 (average)
  3105                           ;	Chosen strategy is simple_byte
  3106  001EFC  0100               	movlb	0	; () banked
  3107  001EFE  5190               	movf	(??_CANInitialize+3)& (0+255),w,b
  3108  001F00  0A00               	xorlw	0	; case 0
  3109  001F02  A4D8               	btfss	status,2,c
  3110  001F04  D7E1               	goto	l353
  3111                           
  3112                           ; BSR set to: 0
  3113                           ; Switch size 1, requested type "space"
  3114                           ; Number of cases is 2, Range of values is 191 to 223
  3115                           ; switch strategies available:
  3116                           ; Name         Instructions Cycles
  3117                           ; simple_byte            7     4 (average)
  3118                           ;	Chosen strategy is simple_byte
  3119  001F06  0100               	movlb	0	; () banked
  3120  001F08  518F               	movf	(??_CANInitialize+2)& (0+255),w,b
  3121  001F0A  0ABF               	xorlw	191	; case 191
  3122  001F0C  B4D8               	btfsc	status,2,c
  3123  001F0E  D7D7               	goto	l352
  3124  001F10  0A60               	xorlw	96	; case 223
  3125  001F12  B4D8               	btfsc	status,2,c
  3126  001F14  D7D0               	goto	l2923
  3127  001F16  D7D8               	goto	l353
  3128  001F18                     l2931:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3132  001F18  0E00               	movlw	0
  3133  001F1A  0100               	movlb	0	; () banked
  3134  001F1C  6F7A               	movwf	CANSetFilter@filter& (0+255),b
  3135  001F1E  0E00               	movlw	0
  3136  001F20  6F7B               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3137  001F22  0E00               	movlw	0
  3138  001F24  6F7C               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3139  001F26  0E00               	movlw	0
  3140  001F28  6F7D               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3141  001F2A  C092  F07E         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3142  001F2E  0E00               	movlw	0
  3143  001F30  EC7D  F000         	call	_CANSetFilter
  3144                           
  3145                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3146  001F34  0E00               	movlw	0
  3147  001F36  0100               	movlb	0	; () banked
  3148  001F38  6F7A               	movwf	CANSetFilter@filter& (0+255),b
  3149  001F3A  0E00               	movlw	0
  3150  001F3C  6F7B               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3151  001F3E  0E00               	movlw	0
  3152  001F40  6F7C               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3153  001F42  0E00               	movlw	0
  3154  001F44  6F7D               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3155  001F46  C092  F07E         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3156  001F4A  0E01               	movlw	1
  3157  001F4C  EC7D  F000         	call	_CANSetFilter
  3158                           
  3159                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3160  001F50  0E00               	movlw	0
  3161  001F52  0100               	movlb	0	; () banked
  3162  001F54  6F7A               	movwf	CANSetFilter@filter& (0+255),b
  3163  001F56  0E00               	movlw	0
  3164  001F58  6F7B               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3165  001F5A  0E00               	movlw	0
  3166  001F5C  6F7C               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3167  001F5E  0E00               	movlw	0
  3168  001F60  6F7D               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3169  001F62  C093  F07E         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3170  001F66  0E02               	movlw	2
  3171  001F68  EC7D  F000         	call	_CANSetFilter
  3172                           
  3173                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3174  001F6C  0E00               	movlw	0
  3175  001F6E  0100               	movlb	0	; () banked
  3176  001F70  6F7A               	movwf	CANSetFilter@filter& (0+255),b
  3177  001F72  0E00               	movlw	0
  3178  001F74  6F7B               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3179  001F76  0E00               	movlw	0
  3180  001F78  6F7C               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3181  001F7A  0E00               	movlw	0
  3182  001F7C  6F7D               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3183  001F7E  C093  F07E         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3184  001F82  0E03               	movlw	3
  3185  001F84  EC7D  F000         	call	_CANSetFilter
  3186                           
  3187                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3188  001F88  0E00               	movlw	0
  3189  001F8A  0100               	movlb	0	; () banked
  3190  001F8C  6F7A               	movwf	CANSetFilter@filter& (0+255),b
  3191  001F8E  0E00               	movlw	0
  3192  001F90  6F7B               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3193  001F92  0E00               	movlw	0
  3194  001F94  6F7C               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3195  001F96  0E00               	movlw	0
  3196  001F98  6F7D               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3197  001F9A  C093  F07E         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3198  001F9E  0E04               	movlw	4
  3199  001FA0  EC7D  F000         	call	_CANSetFilter
  3200                           
  3201                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3202  001FA4  0E00               	movlw	0
  3203  001FA6  0100               	movlb	0	; () banked
  3204  001FA8  6F7A               	movwf	CANSetFilter@filter& (0+255),b
  3205  001FAA  0E00               	movlw	0
  3206  001FAC  6F7B               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3207  001FAE  0E00               	movlw	0
  3208  001FB0  6F7C               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3209  001FB2  0E00               	movlw	0
  3210  001FB4  6F7D               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3211  001FB6  C093  F07E         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3212  001FBA  0E05               	movlw	5
  3213  001FBC  EC7D  F000         	call	_CANSetFilter
  3214                           
  3215                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3216  001FC0  0E00               	movlw	0
  3217  001FC2  EC12  F012         	call	_CANOperationMode
  3218  001FC6  0012               	return		;funcret
  3219  001FC8                     __end_of_CANInitialize:
  3220                           	opt stack 0
  3221                           tblptru	equ	0xFF8
  3222                           tblptrh	equ	0xFF7
  3223                           tblptrl	equ	0xFF6
  3224                           tablat	equ	0xFF5
  3225                           prodh	equ	0xFF4
  3226                           prodl	equ	0xFF3
  3227                           intcon	equ	0xFF2
  3228                           intcon2	equ	0xFF1
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           postdec1	equ	0xFE5
  3232                           fsr1l	equ	0xFE1
  3233                           indf2	equ	0xFDF
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _CANSetMask *****************
  3239 ;; Defined at:
  3240 ;;		line 640 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  numBuffer       1    wreg     enum E16878
  3243 ;;  mask            4   26[BANK0 ] unsigned long 
  3244 ;;  type            1   30[BANK0 ] enum E16844
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  numBuffer       1   35[BANK0 ] enum E16878
  3247 ;;  tamp            4   36[BANK0 ] unsigned long 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;		None               void
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3257 ;;      Params:         0       5       0       0
  3258 ;;      Locals:         0       5       0       0
  3259 ;;      Temps:          0       4       0       0
  3260 ;;      Totals:         0      14       0       0
  3261 ;;Total ram usage:       14 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    4
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_CANInitialize
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text8
  3272  001898                     __ptext8:
  3273                           	opt stack 0
  3274  001898                     _CANSetMask:
  3275                           	opt stack 24
  3276                           
  3277                           ;incstack = 0
  3278                           ;CANSetMask@numBuffer stored from wreg
  3279  001898  0100               	movlb	0	; () banked
  3280  00189A  6F83               	movwf	CANSetMask@numBuffer& (0+255),b
  3281                           
  3282                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3283  00189C  0100               	movlb	0	; () banked
  3284  00189E  0583               	decf	CANSetMask@numBuffer& (0+255),w,b
  3285  0018A0  A4D8               	btfss	status,2,c
  3286  0018A2  D056               	goto	l2487
  3287                           
  3288                           ; BSR set to: 0
  3289  0018A4  0100               	movlb	0	; () banked
  3290  0018A6  297E               	incf	CANSetMask@type& (0+255),w,b
  3291  0018A8  A4D8               	btfss	status,2,c
  3292  0018AA  D052               	goto	l2487
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;inc\CANlib.h: 644: {
  3296                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3297  0018AC  C07A  F07F         	movff	CANSetMask@mask,??_CANSetMask
  3298  0018B0  C07B  F080         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3299  0018B4  C07C  F081         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3300  0018B8  C07D  F082         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3301  0018BC  0E04               	movlw	4
  3302  0018BE  D006               	goto	u2110
  3303  0018C0                     u2115:
  3304  0018C0  0100               	movlb	0	; () banked
  3305  0018C2  90D8               	bcf	status,0,c
  3306  0018C4  3382               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3307  0018C6  3381               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3308  0018C8  3380               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3309  0018CA  337F               	rrcf	??_CANSetMask& (0+255),f,b
  3310  0018CC                     u2110:
  3311  0018CC  2EE8               	decfsz	wreg,f,c
  3312  0018CE  D7F8               	goto	u2115
  3313  0018D0  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3314  0018D4  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3315  0018D8  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3316  0018DC  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3320  0018E0  0100               	movlb	0	; () banked
  3321  0018E2  5184               	movf	CANSetMask@tamp& (0+255),w,b
  3322  0018E4  0100               	movlb	0	; () banked
  3323  0018E6  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3324  0018E8  6B85               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3325  0018EA  6B86               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3326  0018EC  6B87               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3330  0018EE  C084  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3334  0018F2  0E07               	movlw	7
  3335  0018F4  0100               	movlb	0	; () banked
  3336  0018F6  157A               	andwf	CANSetMask@mask& (0+255),w,b
  3337  0018F8  0100               	movlb	0	; () banked
  3338  0018FA  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3339  0018FC  0E00               	movlw	0
  3340  0018FE  0100               	movlb	0	; () banked
  3341  001900  157B               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3342  001902  0100               	movlb	0	; () banked
  3343  001904  6F85               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3344  001906  0E00               	movlw	0
  3345  001908  0100               	movlb	0	; () banked
  3346  00190A  157C               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3347  00190C  0100               	movlb	0	; () banked
  3348  00190E  6F86               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3349  001910  0E00               	movlw	0
  3350  001912  0100               	movlb	0	; () banked
  3351  001914  157D               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3352  001916  0100               	movlb	0	; () banked
  3353  001918  6F87               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3357  00191A  C084  F07F         	movff	CANSetMask@tamp,??_CANSetMask
  3358  00191E  C085  F080         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3359  001922  C086  F081         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3360  001926  C087  F082         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3361  00192A  0E05               	movlw	5
  3362  00192C                     u2125:
  3363  00192C  90D8               	bcf	status,0,c
  3364  00192E  0100               	movlb	0	; () banked
  3365  001930  377F               	rlcf	??_CANSetMask& (0+255),f,b
  3366  001932  3780               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3367  001934  3781               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3368  001936  3782               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3369  001938  2EE8               	decfsz	wreg,f,c
  3370  00193A  D7F8               	goto	u2125
  3371  00193C  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3372  001940  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3373  001944  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3374  001948  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3378  00194C  C084  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3379  001950                     l2487:
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;inc\CANlib.h: 652: }
  3383                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3384  001950  0E02               	movlw	2
  3385  001952  0100               	movlb	0	; () banked
  3386  001954  1983               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3387  001956  A4D8               	btfss	status,2,c
  3388  001958  D056               	goto	l2503
  3389                           
  3390                           ; BSR set to: 0
  3391  00195A  0100               	movlb	0	; () banked
  3392  00195C  297E               	incf	CANSetMask@type& (0+255),w,b
  3393  00195E  A4D8               	btfss	status,2,c
  3394  001960  D052               	goto	l2503
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;inc\CANlib.h: 655: {
  3398                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3399  001962  C07A  F07F         	movff	CANSetMask@mask,??_CANSetMask
  3400  001966  C07B  F080         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3401  00196A  C07C  F081         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3402  00196E  C07D  F082         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3403  001972  0E04               	movlw	4
  3404  001974  D006               	goto	u2150
  3405  001976                     u2155:
  3406  001976  0100               	movlb	0	; () banked
  3407  001978  90D8               	bcf	status,0,c
  3408  00197A  3382               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3409  00197C  3381               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3410  00197E  3380               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3411  001980  337F               	rrcf	??_CANSetMask& (0+255),f,b
  3412  001982                     u2150:
  3413  001982  2EE8               	decfsz	wreg,f,c
  3414  001984  D7F8               	goto	u2155
  3415  001986  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3416  00198A  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3417  00198E  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3418  001992  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3422  001996  0100               	movlb	0	; () banked
  3423  001998  5184               	movf	CANSetMask@tamp& (0+255),w,b
  3424  00199A  0100               	movlb	0	; () banked
  3425  00199C  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3426  00199E  6B85               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3427  0019A0  6B86               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3428  0019A2  6B87               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3432  0019A4  C084  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3436  0019A8  0E07               	movlw	7
  3437  0019AA  0100               	movlb	0	; () banked
  3438  0019AC  157A               	andwf	CANSetMask@mask& (0+255),w,b
  3439  0019AE  0100               	movlb	0	; () banked
  3440  0019B0  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3441  0019B2  0E00               	movlw	0
  3442  0019B4  0100               	movlb	0	; () banked
  3443  0019B6  157B               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3444  0019B8  0100               	movlb	0	; () banked
  3445  0019BA  6F85               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3446  0019BC  0E00               	movlw	0
  3447  0019BE  0100               	movlb	0	; () banked
  3448  0019C0  157C               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3449  0019C2  0100               	movlb	0	; () banked
  3450  0019C4  6F86               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3451  0019C6  0E00               	movlw	0
  3452  0019C8  0100               	movlb	0	; () banked
  3453  0019CA  157D               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3454  0019CC  0100               	movlb	0	; () banked
  3455  0019CE  6F87               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3459  0019D0  C084  F07F         	movff	CANSetMask@tamp,??_CANSetMask
  3460  0019D4  C085  F080         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3461  0019D8  C086  F081         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3462  0019DC  C087  F082         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3463  0019E0  0E05               	movlw	5
  3464  0019E2                     u2165:
  3465  0019E2  90D8               	bcf	status,0,c
  3466  0019E4  0100               	movlb	0	; () banked
  3467  0019E6  377F               	rlcf	??_CANSetMask& (0+255),f,b
  3468  0019E8  3780               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3469  0019EA  3781               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3470  0019EC  3782               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3471  0019EE  2EE8               	decfsz	wreg,f,c
  3472  0019F0  D7F8               	goto	u2165
  3473  0019F2  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3474  0019F6  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3475  0019FA  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3476  0019FE  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3480  001A02  C084  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3481  001A06                     l2503:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;inc\CANlib.h: 663: }
  3485                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3486  001A06  0100               	movlb	0	; () banked
  3487  001A08  0583               	decf	CANSetMask@numBuffer& (0+255),w,b
  3488  001A0A  A4D8               	btfss	status,2,c
  3489  001A0C  D087               	goto	l2535
  3490                           
  3491                           ; BSR set to: 0
  3492  001A0E  0EF7               	movlw	247
  3493  001A10  0100               	movlb	0	; () banked
  3494  001A12  197E               	xorwf	CANSetMask@type& (0+255),w,b
  3495  001A14  A4D8               	btfss	status,2,c
  3496  001A16  D082               	goto	l2535
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;inc\CANlib.h: 666: {
  3500                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3501  001A18  0100               	movlb	0	; () banked
  3502  001A1A  517A               	movf	CANSetMask@mask& (0+255),w,b
  3503  001A1C  0100               	movlb	0	; () banked
  3504  001A1E  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3505  001A20  6B85               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3506  001A22  6B86               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3507  001A24  6B87               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3511  001A26  C084  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3515  001A2A  0E00               	movlw	0
  3516  001A2C  0100               	movlb	0	; () banked
  3517  001A2E  157A               	andwf	CANSetMask@mask& (0+255),w,b
  3518  001A30  0100               	movlb	0	; () banked
  3519  001A32  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3520  001A34  0EFF               	movlw	255
  3521  001A36  0100               	movlb	0	; () banked
  3522  001A38  157B               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3523  001A3A  0100               	movlb	0	; () banked
  3524  001A3C  6F85               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3525  001A3E  0E00               	movlw	0
  3526  001A40  0100               	movlb	0	; () banked
  3527  001A42  157C               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3528  001A44  0100               	movlb	0	; () banked
  3529  001A46  6F86               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3530  001A48  0E00               	movlw	0
  3531  001A4A  0100               	movlb	0	; () banked
  3532  001A4C  157D               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3533  001A4E  0100               	movlb	0	; () banked
  3534  001A50  6F87               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3538  001A52  C084  F07F         	movff	CANSetMask@tamp,??_CANSetMask
  3539  001A56  C085  F080         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3540  001A5A  C086  F081         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3541  001A5E  C087  F082         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3542  001A62  C080  F07F         	movff	??_CANSetMask+1,??_CANSetMask
  3543  001A66  C081  F080         	movff	??_CANSetMask+2,??_CANSetMask+1
  3544  001A6A  C082  F081         	movff	??_CANSetMask+3,??_CANSetMask+2
  3545  001A6E  0100               	movlb	0	; () banked
  3546  001A70  6B82               	clrf	(??_CANSetMask+3)& (0+255),b
  3547  001A72  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3548  001A76  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3549  001A7A  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3550  001A7E  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3554  001A82  C084  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3558  001A86  0100               	movlb	0	; () banked
  3559  001A88  A17C               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3560  001A8A  D003               	goto	l426
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3564  001A8C  010F               	movlb	15	; () banked
  3565  001A8E  8119               	bsf	25,0,b	;volatile
  3566  001A90  D002               	goto	l427
  3567  001A92                     l426:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;inc\CANlib.h: 676: else
  3571                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3572  001A92  010F               	movlb	15	; () banked
  3573  001A94  9119               	bcf	25,0,b	;volatile
  3574  001A96                     l427:
  3575                           
  3576                           ; BSR set to: 15
  3577                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3578  001A96  0100               	movlb	0	; () banked
  3579  001A98  A37C               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3580  001A9A  D003               	goto	l428
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3584  001A9C  010F               	movlb	15	; () banked
  3585  001A9E  8319               	bsf	25,1,b	;volatile
  3586  001AA0  D002               	goto	l429
  3587  001AA2                     l428:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;inc\CANlib.h: 681: else
  3591                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3592  001AA2  010F               	movlb	15	; () banked
  3593  001AA4  9319               	bcf	25,1,b	;volatile
  3594  001AA6                     l429:
  3595                           
  3596                           ; BSR set to: 15
  3597                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3598  001AA6  0100               	movlb	0	; () banked
  3599  001AA8  A57C               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3600  001AAA  D003               	goto	l430
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3604  001AAC  010F               	movlb	15	; () banked
  3605  001AAE  8B19               	bsf	25,5,b	;volatile
  3606  001AB0  D002               	goto	l431
  3607  001AB2                     l430:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;inc\CANlib.h: 686: else
  3611                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3612  001AB2  010F               	movlb	15	; () banked
  3613  001AB4  9B19               	bcf	25,5,b	;volatile
  3614  001AB6                     l431:
  3615                           
  3616                           ; BSR set to: 15
  3617                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3618  001AB6  0100               	movlb	0	; () banked
  3619  001AB8  A77C               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3620  001ABA  D003               	goto	l432
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3624  001ABC  010F               	movlb	15	; () banked
  3625  001ABE  8D19               	bsf	25,6,b	;volatile
  3626  001AC0  D002               	goto	l433
  3627  001AC2                     l432:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;inc\CANlib.h: 691: else
  3631                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3632  001AC2  010F               	movlb	15	; () banked
  3633  001AC4  9D19               	bcf	25,6,b	;volatile
  3634  001AC6                     l433:
  3635                           
  3636                           ; BSR set to: 15
  3637                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3638  001AC6  0100               	movlb	0	; () banked
  3639  001AC8  A97C               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3640  001ACA  D003               	goto	l434
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3644  001ACC  010F               	movlb	15	; () banked
  3645  001ACE  8F19               	bsf	25,7,b	;volatile
  3646  001AD0  D002               	goto	l2529
  3647  001AD2                     l434:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 696: else
  3651                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3652  001AD2  010F               	movlb	15	; () banked
  3653  001AD4  9F19               	bcf	25,7,b	;volatile
  3654  001AD6                     l2529:
  3655                           
  3656                           ; BSR set to: 15
  3657                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3658  001AD6  C07A  F07F         	movff	CANSetMask@mask,??_CANSetMask
  3659  001ADA  C07B  F080         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3660  001ADE  C07C  F081         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3661  001AE2  C07D  F082         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3662  001AE6  0E16               	movlw	22
  3663  001AE8  D006               	goto	u2240
  3664  001AEA                     u2245:
  3665  001AEA  0100               	movlb	0	; () banked
  3666  001AEC  90D8               	bcf	status,0,c
  3667  001AEE  3382               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3668  001AF0  3381               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3669  001AF2  3380               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3670  001AF4  337F               	rrcf	??_CANSetMask& (0+255),f,b
  3671  001AF6                     u2240:
  3672  001AF6  2EE8               	decfsz	wreg,f,c
  3673  001AF8  D7F8               	goto	u2245
  3674  001AFA  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3675  001AFE  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3676  001B02  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3677  001B06  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3681  001B0A  0100               	movlb	0	; () banked
  3682  001B0C  5184               	movf	CANSetMask@tamp& (0+255),w,b
  3683  001B0E  0100               	movlb	0	; () banked
  3684  001B10  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3685  001B12  6B85               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3686  001B14  6B86               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3687  001B16  6B87               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3691  001B18  C084  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3692  001B1C                     l2535:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;inc\CANlib.h: 702: }
  3696                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3697  001B1C  0E02               	movlw	2
  3698  001B1E  0100               	movlb	0	; () banked
  3699  001B20  1983               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3700  001B22  A4D8               	btfss	status,2,c
  3701  001B24  0012               	return	
  3702                           
  3703                           ; BSR set to: 0
  3704  001B26  0EF7               	movlw	247
  3705  001B28  0100               	movlb	0	; () banked
  3706  001B2A  197E               	xorwf	CANSetMask@type& (0+255),w,b
  3707  001B2C  A4D8               	btfss	status,2,c
  3708  001B2E  0012               	return	
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;inc\CANlib.h: 705: {
  3712                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3713  001B30  0100               	movlb	0	; () banked
  3714  001B32  517A               	movf	CANSetMask@mask& (0+255),w,b
  3715  001B34  0100               	movlb	0	; () banked
  3716  001B36  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3717  001B38  6B85               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3718  001B3A  6B86               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3719  001B3C  6B87               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3723  001B3E  C084  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3727  001B42  0E00               	movlw	0
  3728  001B44  0100               	movlb	0	; () banked
  3729  001B46  157A               	andwf	CANSetMask@mask& (0+255),w,b
  3730  001B48  0100               	movlb	0	; () banked
  3731  001B4A  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3732  001B4C  0EFF               	movlw	255
  3733  001B4E  0100               	movlb	0	; () banked
  3734  001B50  157B               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3735  001B52  0100               	movlb	0	; () banked
  3736  001B54  6F85               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3737  001B56  0E00               	movlw	0
  3738  001B58  0100               	movlb	0	; () banked
  3739  001B5A  157C               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3740  001B5C  0100               	movlb	0	; () banked
  3741  001B5E  6F86               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3742  001B60  0E00               	movlw	0
  3743  001B62  0100               	movlb	0	; () banked
  3744  001B64  157D               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3745  001B66  0100               	movlb	0	; () banked
  3746  001B68  6F87               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3750  001B6A  C084  F07F         	movff	CANSetMask@tamp,??_CANSetMask
  3751  001B6E  C085  F080         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3752  001B72  C086  F081         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3753  001B76  C087  F082         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3754  001B7A  C080  F07F         	movff	??_CANSetMask+1,??_CANSetMask
  3755  001B7E  C081  F080         	movff	??_CANSetMask+2,??_CANSetMask+1
  3756  001B82  C082  F081         	movff	??_CANSetMask+3,??_CANSetMask+2
  3757  001B86  0100               	movlb	0	; () banked
  3758  001B88  6B82               	clrf	(??_CANSetMask+3)& (0+255),b
  3759  001B8A  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3760  001B8E  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3761  001B92  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3762  001B96  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3766  001B9A  C084  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3770  001B9E  0100               	movlb	0	; () banked
  3771  001BA0  A17C               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3772  001BA2  D003               	goto	l437
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3776  001BA4  010F               	movlb	15	; () banked
  3777  001BA6  811D               	bsf	29,0,b	;volatile
  3778  001BA8  D002               	goto	l438
  3779  001BAA                     l437:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 715: else
  3783                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3784  001BAA  010F               	movlb	15	; () banked
  3785  001BAC  911D               	bcf	29,0,b	;volatile
  3786  001BAE                     l438:
  3787                           
  3788                           ; BSR set to: 15
  3789                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3790  001BAE  0100               	movlb	0	; () banked
  3791  001BB0  A37C               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3792  001BB2  D003               	goto	l439
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3796  001BB4  010F               	movlb	15	; () banked
  3797  001BB6  831D               	bsf	29,1,b	;volatile
  3798  001BB8  D002               	goto	l440
  3799  001BBA                     l439:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 720: else
  3803                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3804  001BBA  010F               	movlb	15	; () banked
  3805  001BBC  931D               	bcf	29,1,b	;volatile
  3806  001BBE                     l440:
  3807                           
  3808                           ; BSR set to: 15
  3809                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3810  001BBE  0100               	movlb	0	; () banked
  3811  001BC0  A57C               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3812  001BC2  D003               	goto	l441
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3816  001BC4  010F               	movlb	15	; () banked
  3817  001BC6  8B1D               	bsf	29,5,b	;volatile
  3818  001BC8  D002               	goto	l442
  3819  001BCA                     l441:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;inc\CANlib.h: 725: else
  3823                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3824  001BCA  010F               	movlb	15	; () banked
  3825  001BCC  9B1D               	bcf	29,5,b	;volatile
  3826  001BCE                     l442:
  3827                           
  3828                           ; BSR set to: 15
  3829                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3830  001BCE  0100               	movlb	0	; () banked
  3831  001BD0  A77C               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3832  001BD2  D003               	goto	l443
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3836  001BD4  010F               	movlb	15	; () banked
  3837  001BD6  8D1D               	bsf	29,6,b	;volatile
  3838  001BD8  D002               	goto	l444
  3839  001BDA                     l443:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 730: else
  3843                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3844  001BDA  010F               	movlb	15	; () banked
  3845  001BDC  9D1D               	bcf	29,6,b	;volatile
  3846  001BDE                     l444:
  3847                           
  3848                           ; BSR set to: 15
  3849                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3850  001BDE  0100               	movlb	0	; () banked
  3851  001BE0  A97C               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3852  001BE2  D003               	goto	l445
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3856  001BE4  010F               	movlb	15	; () banked
  3857  001BE6  8F1D               	bsf	29,7,b	;volatile
  3858  001BE8  D002               	goto	l2561
  3859  001BEA                     l445:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 735: else
  3863                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3864  001BEA  010F               	movlb	15	; () banked
  3865  001BEC  9F1D               	bcf	29,7,b	;volatile
  3866  001BEE                     l2561:
  3867                           
  3868                           ; BSR set to: 15
  3869                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3870  001BEE  C07A  F07F         	movff	CANSetMask@mask,??_CANSetMask
  3871  001BF2  C07B  F080         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3872  001BF6  C07C  F081         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3873  001BFA  C07D  F082         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3874  001BFE  0E16               	movlw	22
  3875  001C00  D006               	goto	u2320
  3876  001C02                     u2325:
  3877  001C02  0100               	movlb	0	; () banked
  3878  001C04  90D8               	bcf	status,0,c
  3879  001C06  3382               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3880  001C08  3381               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3881  001C0A  3380               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3882  001C0C  337F               	rrcf	??_CANSetMask& (0+255),f,b
  3883  001C0E                     u2320:
  3884  001C0E  2EE8               	decfsz	wreg,f,c
  3885  001C10  D7F8               	goto	u2325
  3886  001C12  C07F  F084         	movff	??_CANSetMask,CANSetMask@tamp
  3887  001C16  C080  F085         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3888  001C1A  C081  F086         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3889  001C1E  C082  F087         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3893  001C22  0100               	movlb	0	; () banked
  3894  001C24  5184               	movf	CANSetMask@tamp& (0+255),w,b
  3895  001C26  0100               	movlb	0	; () banked
  3896  001C28  6F84               	movwf	CANSetMask@tamp& (0+255),b
  3897  001C2A  6B85               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3898  001C2C  6B86               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3899  001C2E  6B87               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3903  001C30  C084  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3904  001C34  0012               	return	
  3905  001C36                     __end_of_CANSetMask:
  3906                           	opt stack 0
  3907                           tblptru	equ	0xFF8
  3908                           tblptrh	equ	0xFF7
  3909                           tblptrl	equ	0xFF6
  3910                           tablat	equ	0xFF5
  3911                           prodh	equ	0xFF4
  3912                           prodl	equ	0xFF3
  3913                           intcon	equ	0xFF2
  3914                           intcon2	equ	0xFF1
  3915                           postinc0	equ	0xFEE
  3916                           wreg	equ	0xFE8
  3917                           postdec1	equ	0xFE5
  3918                           fsr1l	equ	0xFE1
  3919                           indf2	equ	0xFDF
  3920                           fsr2h	equ	0xFDA
  3921                           fsr2l	equ	0xFD9
  3922                           status	equ	0xFD8
  3923                           
  3924 ;; *************** function _CANSetFilter *****************
  3925 ;; Defined at:
  3926 ;;		line 748 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  numBuffer       1    wreg     enum E16881
  3929 ;;  filter          4   26[BANK0 ] unsigned long 
  3930 ;;  type            1   30[BANK0 ] enum E16844
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  numBuffer       1   35[BANK0 ] enum E16881
  3933 ;;  tamp            4   36[BANK0 ] unsigned long 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;		None               void
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3943 ;;      Params:         0       5       0       0
  3944 ;;      Locals:         0       5       0       0
  3945 ;;      Temps:          0       4       0       0
  3946 ;;      Totals:         0      14       0       0
  3947 ;;Total ram usage:       14 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    4
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_CANInitialize
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text9
  3958  0000FA                     __ptext9:
  3959                           	opt stack 0
  3960  0000FA                     _CANSetFilter:
  3961                           	opt stack 24
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;incstack = 0
  3965                           ;CANSetFilter@numBuffer stored from wreg
  3966  0000FA  0100               	movlb	0	; () banked
  3967  0000FC  6F83               	movwf	CANSetFilter@numBuffer& (0+255),b
  3968                           
  3969                           ;inc\CANlib.h: 750: unsigned long tamp;
  3970                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3971  0000FE  0100               	movlb	0	; () banked
  3972  000100  5183               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3973  000102  0100               	movlb	0	; () banked
  3974  000104  A4D8               	btfss	status,2,c
  3975  000106  D058               	goto	l2585
  3976                           
  3977                           ; BSR set to: 0
  3978  000108  0100               	movlb	0	; () banked
  3979  00010A  297E               	incf	CANSetFilter@type& (0+255),w,b
  3980  00010C  A4D8               	btfss	status,2,c
  3981  00010E  D054               	goto	l2585
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;inc\CANlib.h: 753: {
  3985                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3986  000110  010F               	movlb	15	; () banked
  3987  000112  9701               	bcf	1,3,b	;volatile
  3988                           
  3989                           ; BSR set to: 15
  3990                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3991  000114  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  3992  000118  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3993  00011C  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3994  000120  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3995  000124  0E04               	movlw	4
  3996  000126  D006               	goto	u2350
  3997  000128                     u2355:
  3998  000128  0100               	movlb	0	; () banked
  3999  00012A  90D8               	bcf	status,0,c
  4000  00012C  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4001  00012E  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4002  000130  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4003  000132  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  4004  000134                     u2350:
  4005  000134  2EE8               	decfsz	wreg,f,c
  4006  000136  D7F8               	goto	u2355
  4007  000138  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4008  00013C  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4009  000140  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4010  000144  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4014  000148  0100               	movlb	0	; () banked
  4015  00014A  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  4016  00014C  0100               	movlb	0	; () banked
  4017  00014E  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4018  000150  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4019  000152  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4020  000154  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4024  000156  C084  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4028  00015A  0E07               	movlw	7
  4029  00015C  0100               	movlb	0	; () banked
  4030  00015E  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4031  000160  0100               	movlb	0	; () banked
  4032  000162  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4033  000164  0E00               	movlw	0
  4034  000166  0100               	movlb	0	; () banked
  4035  000168  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4036  00016A  0100               	movlb	0	; () banked
  4037  00016C  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4038  00016E  0E00               	movlw	0
  4039  000170  0100               	movlb	0	; () banked
  4040  000172  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4041  000174  0100               	movlb	0	; () banked
  4042  000176  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4043  000178  0E00               	movlw	0
  4044  00017A  0100               	movlb	0	; () banked
  4045  00017C  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4046  00017E  0100               	movlb	0	; () banked
  4047  000180  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4051  000182  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4052  000186  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4053  00018A  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4054  00018E  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4055  000192  0E05               	movlw	5
  4056  000194                     u2365:
  4057  000194  90D8               	bcf	status,0,c
  4058  000196  0100               	movlb	0	; () banked
  4059  000198  377F               	rlcf	??_CANSetFilter& (0+255),f,b
  4060  00019A  3780               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4061  00019C  3781               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4062  00019E  3782               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4063  0001A0  2EE8               	decfsz	wreg,f,c
  4064  0001A2  D7F8               	goto	u2365
  4065  0001A4  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4066  0001A8  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4067  0001AC  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4068  0001B0  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4072  0001B4  C084  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4073  0001B8                     l2585:
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;inc\CANlib.h: 763: }
  4077                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4078  0001B8  0100               	movlb	0	; () banked
  4079  0001BA  0583               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4080  0001BC  A4D8               	btfss	status,2,c
  4081  0001BE  D058               	goto	l2603
  4082                           
  4083                           ; BSR set to: 0
  4084  0001C0  0100               	movlb	0	; () banked
  4085  0001C2  297E               	incf	CANSetFilter@type& (0+255),w,b
  4086  0001C4  A4D8               	btfss	status,2,c
  4087  0001C6  D054               	goto	l2603
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;inc\CANlib.h: 766: {
  4091                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4092  0001C8  010F               	movlb	15	; () banked
  4093  0001CA  9705               	bcf	5,3,b	;volatile
  4094                           
  4095                           ; BSR set to: 15
  4096                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4097  0001CC  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  4098  0001D0  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4099  0001D4  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4100  0001D8  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4101  0001DC  0E04               	movlw	4
  4102  0001DE  D006               	goto	u2390
  4103  0001E0                     u2395:
  4104  0001E0  0100               	movlb	0	; () banked
  4105  0001E2  90D8               	bcf	status,0,c
  4106  0001E4  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4107  0001E6  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4108  0001E8  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4109  0001EA  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  4110  0001EC                     u2390:
  4111  0001EC  2EE8               	decfsz	wreg,f,c
  4112  0001EE  D7F8               	goto	u2395
  4113  0001F0  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4114  0001F4  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4115  0001F8  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4116  0001FC  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4120  000200  0100               	movlb	0	; () banked
  4121  000202  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  4122  000204  0100               	movlb	0	; () banked
  4123  000206  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4124  000208  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4125  00020A  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4126  00020C  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4130  00020E  C084  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4134  000212  0E07               	movlw	7
  4135  000214  0100               	movlb	0	; () banked
  4136  000216  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4137  000218  0100               	movlb	0	; () banked
  4138  00021A  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4139  00021C  0E00               	movlw	0
  4140  00021E  0100               	movlb	0	; () banked
  4141  000220  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4142  000222  0100               	movlb	0	; () banked
  4143  000224  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4144  000226  0E00               	movlw	0
  4145  000228  0100               	movlb	0	; () banked
  4146  00022A  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4147  00022C  0100               	movlb	0	; () banked
  4148  00022E  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4149  000230  0E00               	movlw	0
  4150  000232  0100               	movlb	0	; () banked
  4151  000234  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4152  000236  0100               	movlb	0	; () banked
  4153  000238  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4157  00023A  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4158  00023E  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4159  000242  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4160  000246  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4161  00024A  0E05               	movlw	5
  4162  00024C                     u2405:
  4163  00024C  90D8               	bcf	status,0,c
  4164  00024E  0100               	movlb	0	; () banked
  4165  000250  377F               	rlcf	??_CANSetFilter& (0+255),f,b
  4166  000252  3780               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4167  000254  3781               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4168  000256  3782               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4169  000258  2EE8               	decfsz	wreg,f,c
  4170  00025A  D7F8               	goto	u2405
  4171  00025C  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4172  000260  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4173  000264  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4174  000268  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4178  00026C  C084  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4179  000270                     l2603:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 776: }
  4183                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4184  000270  0E02               	movlw	2
  4185  000272  0100               	movlb	0	; () banked
  4186  000274  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4187  000276  A4D8               	btfss	status,2,c
  4188  000278  D058               	goto	l2621
  4189                           
  4190                           ; BSR set to: 0
  4191  00027A  0100               	movlb	0	; () banked
  4192  00027C  297E               	incf	CANSetFilter@type& (0+255),w,b
  4193  00027E  A4D8               	btfss	status,2,c
  4194  000280  D054               	goto	l2621
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 779: {
  4198                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4199  000282  010F               	movlb	15	; () banked
  4200  000284  9709               	bcf	9,3,b	;volatile
  4201                           
  4202                           ; BSR set to: 15
  4203                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4204  000286  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  4205  00028A  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4206  00028E  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4207  000292  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4208  000296  0E04               	movlw	4
  4209  000298  D006               	goto	u2430
  4210  00029A                     u2435:
  4211  00029A  0100               	movlb	0	; () banked
  4212  00029C  90D8               	bcf	status,0,c
  4213  00029E  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4214  0002A0  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4215  0002A2  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4216  0002A4  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  4217  0002A6                     u2430:
  4218  0002A6  2EE8               	decfsz	wreg,f,c
  4219  0002A8  D7F8               	goto	u2435
  4220  0002AA  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4221  0002AE  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4222  0002B2  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4223  0002B6  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4227  0002BA  0100               	movlb	0	; () banked
  4228  0002BC  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  4229  0002BE  0100               	movlb	0	; () banked
  4230  0002C0  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4231  0002C2  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4232  0002C4  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4233  0002C6  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4237  0002C8  C084  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4241  0002CC  0E07               	movlw	7
  4242  0002CE  0100               	movlb	0	; () banked
  4243  0002D0  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4244  0002D2  0100               	movlb	0	; () banked
  4245  0002D4  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4246  0002D6  0E00               	movlw	0
  4247  0002D8  0100               	movlb	0	; () banked
  4248  0002DA  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4249  0002DC  0100               	movlb	0	; () banked
  4250  0002DE  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4251  0002E0  0E00               	movlw	0
  4252  0002E2  0100               	movlb	0	; () banked
  4253  0002E4  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4254  0002E6  0100               	movlb	0	; () banked
  4255  0002E8  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4256  0002EA  0E00               	movlw	0
  4257  0002EC  0100               	movlb	0	; () banked
  4258  0002EE  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4259  0002F0  0100               	movlb	0	; () banked
  4260  0002F2  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4264  0002F4  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4265  0002F8  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4266  0002FC  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4267  000300  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4268  000304  0E05               	movlw	5
  4269  000306                     u2445:
  4270  000306  90D8               	bcf	status,0,c
  4271  000308  0100               	movlb	0	; () banked
  4272  00030A  377F               	rlcf	??_CANSetFilter& (0+255),f,b
  4273  00030C  3780               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4274  00030E  3781               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4275  000310  3782               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4276  000312  2EE8               	decfsz	wreg,f,c
  4277  000314  D7F8               	goto	u2445
  4278  000316  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4279  00031A  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4280  00031E  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4281  000322  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4285  000326  C084  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4286  00032A                     l2621:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 789: }
  4290                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4291  00032A  0E03               	movlw	3
  4292  00032C  0100               	movlb	0	; () banked
  4293  00032E  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4294  000330  A4D8               	btfss	status,2,c
  4295  000332  D058               	goto	l2639
  4296                           
  4297                           ; BSR set to: 0
  4298  000334  0100               	movlb	0	; () banked
  4299  000336  297E               	incf	CANSetFilter@type& (0+255),w,b
  4300  000338  A4D8               	btfss	status,2,c
  4301  00033A  D054               	goto	l2639
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 792: {
  4305                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4306  00033C  010F               	movlb	15	; () banked
  4307  00033E  970D               	bcf	13,3,b	;volatile
  4308                           
  4309                           ; BSR set to: 15
  4310                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4311  000340  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  4312  000344  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4313  000348  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4314  00034C  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4315  000350  0E04               	movlw	4
  4316  000352  D006               	goto	u2470
  4317  000354                     u2475:
  4318  000354  0100               	movlb	0	; () banked
  4319  000356  90D8               	bcf	status,0,c
  4320  000358  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4321  00035A  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4322  00035C  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4323  00035E  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  4324  000360                     u2470:
  4325  000360  2EE8               	decfsz	wreg,f,c
  4326  000362  D7F8               	goto	u2475
  4327  000364  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4328  000368  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4329  00036C  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4330  000370  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4334  000374  0100               	movlb	0	; () banked
  4335  000376  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  4336  000378  0100               	movlb	0	; () banked
  4337  00037A  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4338  00037C  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4339  00037E  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4340  000380  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4344  000382  C084  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4348  000386  0E07               	movlw	7
  4349  000388  0100               	movlb	0	; () banked
  4350  00038A  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4351  00038C  0100               	movlb	0	; () banked
  4352  00038E  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4353  000390  0E00               	movlw	0
  4354  000392  0100               	movlb	0	; () banked
  4355  000394  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4356  000396  0100               	movlb	0	; () banked
  4357  000398  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4358  00039A  0E00               	movlw	0
  4359  00039C  0100               	movlb	0	; () banked
  4360  00039E  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4361  0003A0  0100               	movlb	0	; () banked
  4362  0003A2  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4363  0003A4  0E00               	movlw	0
  4364  0003A6  0100               	movlb	0	; () banked
  4365  0003A8  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4366  0003AA  0100               	movlb	0	; () banked
  4367  0003AC  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4371  0003AE  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4372  0003B2  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4373  0003B6  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4374  0003BA  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4375  0003BE  0E05               	movlw	5
  4376  0003C0                     u2485:
  4377  0003C0  90D8               	bcf	status,0,c
  4378  0003C2  0100               	movlb	0	; () banked
  4379  0003C4  377F               	rlcf	??_CANSetFilter& (0+255),f,b
  4380  0003C6  3780               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4381  0003C8  3781               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4382  0003CA  3782               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4383  0003CC  2EE8               	decfsz	wreg,f,c
  4384  0003CE  D7F8               	goto	u2485
  4385  0003D0  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4386  0003D4  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4387  0003D8  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4388  0003DC  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4392  0003E0  C084  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4393  0003E4                     l2639:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;inc\CANlib.h: 802: }
  4397                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4398  0003E4  0E04               	movlw	4
  4399  0003E6  0100               	movlb	0	; () banked
  4400  0003E8  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4401  0003EA  A4D8               	btfss	status,2,c
  4402  0003EC  D058               	goto	l2657
  4403                           
  4404                           ; BSR set to: 0
  4405  0003EE  0100               	movlb	0	; () banked
  4406  0003F0  297E               	incf	CANSetFilter@type& (0+255),w,b
  4407  0003F2  A4D8               	btfss	status,2,c
  4408  0003F4  D054               	goto	l2657
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;inc\CANlib.h: 805: {
  4412                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4413  0003F6  010F               	movlb	15	; () banked
  4414  0003F8  9711               	bcf	17,3,b	;volatile
  4415                           
  4416                           ; BSR set to: 15
  4417                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4418  0003FA  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  4419  0003FE  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4420  000402  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4421  000406  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4422  00040A  0E04               	movlw	4
  4423  00040C  D006               	goto	u2510
  4424  00040E                     u2515:
  4425  00040E  0100               	movlb	0	; () banked
  4426  000410  90D8               	bcf	status,0,c
  4427  000412  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4428  000414  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4429  000416  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4430  000418  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  4431  00041A                     u2510:
  4432  00041A  2EE8               	decfsz	wreg,f,c
  4433  00041C  D7F8               	goto	u2515
  4434  00041E  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4435  000422  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4436  000426  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4437  00042A  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4441  00042E  0100               	movlb	0	; () banked
  4442  000430  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  4443  000432  0100               	movlb	0	; () banked
  4444  000434  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4445  000436  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4446  000438  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4447  00043A  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4451  00043C  C084  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4455  000440  0E07               	movlw	7
  4456  000442  0100               	movlb	0	; () banked
  4457  000444  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4458  000446  0100               	movlb	0	; () banked
  4459  000448  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4460  00044A  0E00               	movlw	0
  4461  00044C  0100               	movlb	0	; () banked
  4462  00044E  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4463  000450  0100               	movlb	0	; () banked
  4464  000452  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4465  000454  0E00               	movlw	0
  4466  000456  0100               	movlb	0	; () banked
  4467  000458  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4468  00045A  0100               	movlb	0	; () banked
  4469  00045C  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4470  00045E  0E00               	movlw	0
  4471  000460  0100               	movlb	0	; () banked
  4472  000462  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4473  000464  0100               	movlb	0	; () banked
  4474  000466  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4478  000468  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4479  00046C  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4480  000470  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4481  000474  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4482  000478  0E05               	movlw	5
  4483  00047A                     u2525:
  4484  00047A  90D8               	bcf	status,0,c
  4485  00047C  0100               	movlb	0	; () banked
  4486  00047E  377F               	rlcf	??_CANSetFilter& (0+255),f,b
  4487  000480  3780               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4488  000482  3781               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4489  000484  3782               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4490  000486  2EE8               	decfsz	wreg,f,c
  4491  000488  D7F8               	goto	u2525
  4492  00048A  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4493  00048E  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4494  000492  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4495  000496  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4499  00049A  C084  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4500  00049E                     l2657:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;inc\CANlib.h: 815: }
  4504                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4505  00049E  0E05               	movlw	5
  4506  0004A0  0100               	movlb	0	; () banked
  4507  0004A2  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4508  0004A4  A4D8               	btfss	status,2,c
  4509  0004A6  D058               	goto	l2675
  4510                           
  4511                           ; BSR set to: 0
  4512  0004A8  0100               	movlb	0	; () banked
  4513  0004AA  297E               	incf	CANSetFilter@type& (0+255),w,b
  4514  0004AC  A4D8               	btfss	status,2,c
  4515  0004AE  D054               	goto	l2675
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 818: {
  4519                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4520  0004B0  010F               	movlb	15	; () banked
  4521  0004B2  9715               	bcf	21,3,b	;volatile
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4525  0004B4  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  4526  0004B8  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4527  0004BC  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4528  0004C0  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4529  0004C4  0E04               	movlw	4
  4530  0004C6  D006               	goto	u2550
  4531  0004C8                     u2555:
  4532  0004C8  0100               	movlb	0	; () banked
  4533  0004CA  90D8               	bcf	status,0,c
  4534  0004CC  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4535  0004CE  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4536  0004D0  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4537  0004D2  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  4538  0004D4                     u2550:
  4539  0004D4  2EE8               	decfsz	wreg,f,c
  4540  0004D6  D7F8               	goto	u2555
  4541  0004D8  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4542  0004DC  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4543  0004E0  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4544  0004E4  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4548  0004E8  0100               	movlb	0	; () banked
  4549  0004EA  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  4550  0004EC  0100               	movlb	0	; () banked
  4551  0004EE  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4552  0004F0  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4553  0004F2  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4554  0004F4  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4558  0004F6  C084  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4562  0004FA  0E07               	movlw	7
  4563  0004FC  0100               	movlb	0	; () banked
  4564  0004FE  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4565  000500  0100               	movlb	0	; () banked
  4566  000502  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4567  000504  0E00               	movlw	0
  4568  000506  0100               	movlb	0	; () banked
  4569  000508  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4570  00050A  0100               	movlb	0	; () banked
  4571  00050C  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4572  00050E  0E00               	movlw	0
  4573  000510  0100               	movlb	0	; () banked
  4574  000512  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4575  000514  0100               	movlb	0	; () banked
  4576  000516  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4577  000518  0E00               	movlw	0
  4578  00051A  0100               	movlb	0	; () banked
  4579  00051C  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4580  00051E  0100               	movlb	0	; () banked
  4581  000520  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4585  000522  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4586  000526  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4587  00052A  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4588  00052E  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4589  000532  0E05               	movlw	5
  4590  000534                     u2565:
  4591  000534  90D8               	bcf	status,0,c
  4592  000536  0100               	movlb	0	; () banked
  4593  000538  377F               	rlcf	??_CANSetFilter& (0+255),f,b
  4594  00053A  3780               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4595  00053C  3781               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4596  00053E  3782               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4597  000540  2EE8               	decfsz	wreg,f,c
  4598  000542  D7F8               	goto	u2565
  4599  000544  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4600  000548  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4601  00054C  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4602  000550  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4606  000554  C084  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4607  000558                     l2675:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 828: }
  4611                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4612  000558  0100               	movlb	0	; () banked
  4613  00055A  5183               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4614  00055C  0100               	movlb	0	; () banked
  4615  00055E  A4D8               	btfss	status,2,c
  4616  000560  D089               	goto	l2709
  4617                           
  4618                           ; BSR set to: 0
  4619  000562  0EF7               	movlw	247
  4620  000564  0100               	movlb	0	; () banked
  4621  000566  197E               	xorwf	CANSetFilter@type& (0+255),w,b
  4622  000568  A4D8               	btfss	status,2,c
  4623  00056A  D084               	goto	l2709
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;inc\CANlib.h: 832: {
  4627                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4628  00056C  010F               	movlb	15	; () banked
  4629  00056E  8701               	bsf	1,3,b	;volatile
  4630                           
  4631                           ; BSR set to: 15
  4632                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4633  000570  0100               	movlb	0	; () banked
  4634  000572  517A               	movf	CANSetFilter@filter& (0+255),w,b
  4635  000574  0100               	movlb	0	; () banked
  4636  000576  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4637  000578  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4638  00057A  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4639  00057C  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4643  00057E  C084  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4647  000582  0E00               	movlw	0
  4648  000584  0100               	movlb	0	; () banked
  4649  000586  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4650  000588  0100               	movlb	0	; () banked
  4651  00058A  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4652  00058C  0EFF               	movlw	255
  4653  00058E  0100               	movlb	0	; () banked
  4654  000590  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4655  000592  0100               	movlb	0	; () banked
  4656  000594  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4657  000596  0E00               	movlw	0
  4658  000598  0100               	movlb	0	; () banked
  4659  00059A  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4660  00059C  0100               	movlb	0	; () banked
  4661  00059E  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4662  0005A0  0E00               	movlw	0
  4663  0005A2  0100               	movlb	0	; () banked
  4664  0005A4  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4665  0005A6  0100               	movlb	0	; () banked
  4666  0005A8  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4670  0005AA  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4671  0005AE  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4672  0005B2  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4673  0005B6  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4674  0005BA  C080  F07F         	movff	??_CANSetFilter+1,??_CANSetFilter
  4675  0005BE  C081  F080         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4676  0005C2  C082  F081         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4677  0005C6  0100               	movlb	0	; () banked
  4678  0005C8  6B82               	clrf	(??_CANSetFilter+3)& (0+255),b
  4679  0005CA  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4680  0005CE  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4681  0005D2  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4682  0005D6  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4686  0005DA  C084  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4690  0005DE  0100               	movlb	0	; () banked
  4691  0005E0  A17C               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4692  0005E2  D003               	goto	l457
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4696  0005E4  010F               	movlb	15	; () banked
  4697  0005E6  8101               	bsf	1,0,b	;volatile
  4698  0005E8  D002               	goto	l458
  4699  0005EA                     l457:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;inc\CANlib.h: 844: else
  4703                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4704  0005EA  010F               	movlb	15	; () banked
  4705  0005EC  9101               	bcf	1,0,b	;volatile
  4706  0005EE                     l458:
  4707                           
  4708                           ; BSR set to: 15
  4709                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4710  0005EE  0100               	movlb	0	; () banked
  4711  0005F0  A37C               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4712  0005F2  D003               	goto	l459
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4716  0005F4  010F               	movlb	15	; () banked
  4717  0005F6  8301               	bsf	1,1,b	;volatile
  4718  0005F8  D002               	goto	l460
  4719  0005FA                     l459:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;inc\CANlib.h: 849: else
  4723                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4724  0005FA  010F               	movlb	15	; () banked
  4725  0005FC  9301               	bcf	1,1,b	;volatile
  4726  0005FE                     l460:
  4727                           
  4728                           ; BSR set to: 15
  4729                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4730  0005FE  0100               	movlb	0	; () banked
  4731  000600  A57C               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4732  000602  D003               	goto	l461
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4736  000604  010F               	movlb	15	; () banked
  4737  000606  8B01               	bsf	1,5,b	;volatile
  4738  000608  D002               	goto	l462
  4739  00060A                     l461:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;inc\CANlib.h: 854: else
  4743                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4744  00060A  010F               	movlb	15	; () banked
  4745  00060C  9B01               	bcf	1,5,b	;volatile
  4746  00060E                     l462:
  4747                           
  4748                           ; BSR set to: 15
  4749                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4750  00060E  0100               	movlb	0	; () banked
  4751  000610  A77C               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4752  000612  D003               	goto	l463
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4756  000614  010F               	movlb	15	; () banked
  4757  000616  8D01               	bsf	1,6,b	;volatile
  4758  000618  D002               	goto	l464
  4759  00061A                     l463:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;inc\CANlib.h: 859: else
  4763                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4764  00061A  010F               	movlb	15	; () banked
  4765  00061C  9D01               	bcf	1,6,b	;volatile
  4766  00061E                     l464:
  4767                           
  4768                           ; BSR set to: 15
  4769                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4770  00061E  0100               	movlb	0	; () banked
  4771  000620  A97C               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4772  000622  D003               	goto	l465
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4776  000624  010F               	movlb	15	; () banked
  4777  000626  8F01               	bsf	1,7,b	;volatile
  4778  000628  D002               	goto	l2703
  4779  00062A                     l465:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;inc\CANlib.h: 864: else
  4783                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4784  00062A  010F               	movlb	15	; () banked
  4785  00062C  9F01               	bcf	1,7,b	;volatile
  4786  00062E                     l2703:
  4787                           
  4788                           ; BSR set to: 15
  4789                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4790  00062E  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  4791  000632  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4792  000636  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4793  00063A  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4794  00063E  0E16               	movlw	22
  4795  000640  D006               	goto	u2640
  4796  000642                     u2645:
  4797  000642  0100               	movlb	0	; () banked
  4798  000644  90D8               	bcf	status,0,c
  4799  000646  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4800  000648  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4801  00064A  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4802  00064C  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  4803  00064E                     u2640:
  4804  00064E  2EE8               	decfsz	wreg,f,c
  4805  000650  D7F8               	goto	u2645
  4806  000652  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4807  000656  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4808  00065A  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4809  00065E  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4813  000662  0100               	movlb	0	; () banked
  4814  000664  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  4815  000666  0100               	movlb	0	; () banked
  4816  000668  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4817  00066A  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4818  00066C  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4819  00066E  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4823  000670  C084  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4824  000674                     l2709:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 870: }
  4828                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4829  000674  0100               	movlb	0	; () banked
  4830  000676  0583               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4831  000678  A4D8               	btfss	status,2,c
  4832  00067A  D089               	goto	l2743
  4833                           
  4834                           ; BSR set to: 0
  4835  00067C  0EF7               	movlw	247
  4836  00067E  0100               	movlb	0	; () banked
  4837  000680  197E               	xorwf	CANSetFilter@type& (0+255),w,b
  4838  000682  A4D8               	btfss	status,2,c
  4839  000684  D084               	goto	l2743
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;inc\CANlib.h: 873: {
  4843                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4844  000686  010F               	movlb	15	; () banked
  4845  000688  8705               	bsf	5,3,b	;volatile
  4846                           
  4847                           ; BSR set to: 15
  4848                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4849  00068A  0100               	movlb	0	; () banked
  4850  00068C  517A               	movf	CANSetFilter@filter& (0+255),w,b
  4851  00068E  0100               	movlb	0	; () banked
  4852  000690  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4853  000692  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4854  000694  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4855  000696  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4859  000698  C084  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4863  00069C  0E00               	movlw	0
  4864  00069E  0100               	movlb	0	; () banked
  4865  0006A0  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  4866  0006A2  0100               	movlb	0	; () banked
  4867  0006A4  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  4868  0006A6  0EFF               	movlw	255
  4869  0006A8  0100               	movlb	0	; () banked
  4870  0006AA  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4871  0006AC  0100               	movlb	0	; () banked
  4872  0006AE  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4873  0006B0  0E00               	movlw	0
  4874  0006B2  0100               	movlb	0	; () banked
  4875  0006B4  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4876  0006B6  0100               	movlb	0	; () banked
  4877  0006B8  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4878  0006BA  0E00               	movlw	0
  4879  0006BC  0100               	movlb	0	; () banked
  4880  0006BE  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4881  0006C0  0100               	movlb	0	; () banked
  4882  0006C2  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4886  0006C4  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  4887  0006C8  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4888  0006CC  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4889  0006D0  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4890  0006D4  C080  F07F         	movff	??_CANSetFilter+1,??_CANSetFilter
  4891  0006D8  C081  F080         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4892  0006DC  C082  F081         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4893  0006E0  0100               	movlb	0	; () banked
  4894  0006E2  6B82               	clrf	(??_CANSetFilter+3)& (0+255),b
  4895  0006E4  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  4896  0006E8  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4897  0006EC  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4898  0006F0  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4902  0006F4  C084  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4906  0006F8  0100               	movlb	0	; () banked
  4907  0006FA  A17C               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4908  0006FC  D003               	goto	l468
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4912  0006FE  010F               	movlb	15	; () banked
  4913  000700  8105               	bsf	5,0,b	;volatile
  4914  000702  D002               	goto	l469
  4915  000704                     l468:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 885: else
  4919                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4920  000704  010F               	movlb	15	; () banked
  4921  000706  9105               	bcf	5,0,b	;volatile
  4922  000708                     l469:
  4923                           
  4924                           ; BSR set to: 15
  4925                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4926  000708  0100               	movlb	0	; () banked
  4927  00070A  A37C               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4928  00070C  D003               	goto	l470
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4932  00070E  010F               	movlb	15	; () banked
  4933  000710  8305               	bsf	5,1,b	;volatile
  4934  000712  D002               	goto	l471
  4935  000714                     l470:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 890: else
  4939                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4940  000714  010F               	movlb	15	; () banked
  4941  000716  9305               	bcf	5,1,b	;volatile
  4942  000718                     l471:
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4946  000718  0100               	movlb	0	; () banked
  4947  00071A  A57C               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4948  00071C  D003               	goto	l472
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4952  00071E  010F               	movlb	15	; () banked
  4953  000720  8B05               	bsf	5,5,b	;volatile
  4954  000722  D002               	goto	l473
  4955  000724                     l472:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 895: else
  4959                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4960  000724  010F               	movlb	15	; () banked
  4961  000726  9B05               	bcf	5,5,b	;volatile
  4962  000728                     l473:
  4963                           
  4964                           ; BSR set to: 15
  4965                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4966  000728  0100               	movlb	0	; () banked
  4967  00072A  A77C               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4968  00072C  D003               	goto	l474
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4972  00072E  010F               	movlb	15	; () banked
  4973  000730  8D05               	bsf	5,6,b	;volatile
  4974  000732  D002               	goto	l475
  4975  000734                     l474:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;inc\CANlib.h: 900: else
  4979                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4980  000734  010F               	movlb	15	; () banked
  4981  000736  9D05               	bcf	5,6,b	;volatile
  4982  000738                     l475:
  4983                           
  4984                           ; BSR set to: 15
  4985                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4986  000738  0100               	movlb	0	; () banked
  4987  00073A  A97C               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4988  00073C  D003               	goto	l476
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4992  00073E  010F               	movlb	15	; () banked
  4993  000740  8F05               	bsf	5,7,b	;volatile
  4994  000742  D002               	goto	l2737
  4995  000744                     l476:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 905: else
  4999                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5000  000744  010F               	movlb	15	; () banked
  5001  000746  9F05               	bcf	5,7,b	;volatile
  5002  000748                     l2737:
  5003                           
  5004                           ; BSR set to: 15
  5005                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5006  000748  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  5007  00074C  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5008  000750  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5009  000754  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5010  000758  0E16               	movlw	22
  5011  00075A  D006               	goto	u2720
  5012  00075C                     u2725:
  5013  00075C  0100               	movlb	0	; () banked
  5014  00075E  90D8               	bcf	status,0,c
  5015  000760  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5016  000762  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5017  000764  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5018  000766  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  5019  000768                     u2720:
  5020  000768  2EE8               	decfsz	wreg,f,c
  5021  00076A  D7F8               	goto	u2725
  5022  00076C  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5023  000770  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5024  000774  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5025  000778  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5029  00077C  0100               	movlb	0	; () banked
  5030  00077E  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  5031  000780  0100               	movlb	0	; () banked
  5032  000782  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5033  000784  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5034  000786  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5035  000788  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5039  00078A  C084  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5040  00078E                     l2743:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;inc\CANlib.h: 911: }
  5044                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5045  00078E  0E02               	movlw	2
  5046  000790  0100               	movlb	0	; () banked
  5047  000792  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5048  000794  A4D8               	btfss	status,2,c
  5049  000796  D089               	goto	l2777
  5050                           
  5051                           ; BSR set to: 0
  5052  000798  0EF7               	movlw	247
  5053  00079A  0100               	movlb	0	; () banked
  5054  00079C  197E               	xorwf	CANSetFilter@type& (0+255),w,b
  5055  00079E  A4D8               	btfss	status,2,c
  5056  0007A0  D084               	goto	l2777
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;inc\CANlib.h: 915: {
  5060                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5061  0007A2  010F               	movlb	15	; () banked
  5062  0007A4  8709               	bsf	9,3,b	;volatile
  5063                           
  5064                           ; BSR set to: 15
  5065                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5066  0007A6  0100               	movlb	0	; () banked
  5067  0007A8  517A               	movf	CANSetFilter@filter& (0+255),w,b
  5068  0007AA  0100               	movlb	0	; () banked
  5069  0007AC  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5070  0007AE  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5071  0007B0  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5072  0007B2  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5076  0007B4  C084  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5080  0007B8  0E00               	movlw	0
  5081  0007BA  0100               	movlb	0	; () banked
  5082  0007BC  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  5083  0007BE  0100               	movlb	0	; () banked
  5084  0007C0  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5085  0007C2  0EFF               	movlw	255
  5086  0007C4  0100               	movlb	0	; () banked
  5087  0007C6  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5088  0007C8  0100               	movlb	0	; () banked
  5089  0007CA  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5090  0007CC  0E00               	movlw	0
  5091  0007CE  0100               	movlb	0	; () banked
  5092  0007D0  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5093  0007D2  0100               	movlb	0	; () banked
  5094  0007D4  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5095  0007D6  0E00               	movlw	0
  5096  0007D8  0100               	movlb	0	; () banked
  5097  0007DA  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5098  0007DC  0100               	movlb	0	; () banked
  5099  0007DE  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5103  0007E0  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  5104  0007E4  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5105  0007E8  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5106  0007EC  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5107  0007F0  C080  F07F         	movff	??_CANSetFilter+1,??_CANSetFilter
  5108  0007F4  C081  F080         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5109  0007F8  C082  F081         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5110  0007FC  0100               	movlb	0	; () banked
  5111  0007FE  6B82               	clrf	(??_CANSetFilter+3)& (0+255),b
  5112  000800  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5113  000804  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5114  000808  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5115  00080C  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5119  000810  C084  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5123  000814  0100               	movlb	0	; () banked
  5124  000816  A17C               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5125  000818  D003               	goto	l479
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5129  00081A  010F               	movlb	15	; () banked
  5130  00081C  8109               	bsf	9,0,b	;volatile
  5131  00081E  D002               	goto	l480
  5132  000820                     l479:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;inc\CANlib.h: 927: else
  5136                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5137  000820  010F               	movlb	15	; () banked
  5138  000822  9109               	bcf	9,0,b	;volatile
  5139  000824                     l480:
  5140                           
  5141                           ; BSR set to: 15
  5142                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5143  000824  0100               	movlb	0	; () banked
  5144  000826  A37C               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5145  000828  D003               	goto	l481
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5149  00082A  010F               	movlb	15	; () banked
  5150  00082C  8309               	bsf	9,1,b	;volatile
  5151  00082E  D002               	goto	l482
  5152  000830                     l481:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 932: else
  5156                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5157  000830  010F               	movlb	15	; () banked
  5158  000832  9309               	bcf	9,1,b	;volatile
  5159  000834                     l482:
  5160                           
  5161                           ; BSR set to: 15
  5162                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5163  000834  0100               	movlb	0	; () banked
  5164  000836  A57C               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5165  000838  D003               	goto	l483
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5169  00083A  010F               	movlb	15	; () banked
  5170  00083C  8B09               	bsf	9,5,b	;volatile
  5171  00083E  D002               	goto	l484
  5172  000840                     l483:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;inc\CANlib.h: 937: else
  5176                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5177  000840  010F               	movlb	15	; () banked
  5178  000842  9B09               	bcf	9,5,b	;volatile
  5179  000844                     l484:
  5180                           
  5181                           ; BSR set to: 15
  5182                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5183  000844  0100               	movlb	0	; () banked
  5184  000846  A77C               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5185  000848  D003               	goto	l485
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5189  00084A  010F               	movlb	15	; () banked
  5190  00084C  8D09               	bsf	9,6,b	;volatile
  5191  00084E  D002               	goto	l486
  5192  000850                     l485:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 942: else
  5196                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5197  000850  010F               	movlb	15	; () banked
  5198  000852  9D09               	bcf	9,6,b	;volatile
  5199  000854                     l486:
  5200                           
  5201                           ; BSR set to: 15
  5202                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5203  000854  0100               	movlb	0	; () banked
  5204  000856  A97C               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5205  000858  D003               	goto	l487
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5209  00085A  010F               	movlb	15	; () banked
  5210  00085C  8F09               	bsf	9,7,b	;volatile
  5211  00085E  D002               	goto	l2771
  5212  000860                     l487:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;inc\CANlib.h: 947: else
  5216                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5217  000860  010F               	movlb	15	; () banked
  5218  000862  9F09               	bcf	9,7,b	;volatile
  5219  000864                     l2771:
  5220                           
  5221                           ; BSR set to: 15
  5222                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5223  000864  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  5224  000868  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5225  00086C  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5226  000870  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5227  000874  0E16               	movlw	22
  5228  000876  D006               	goto	u2800
  5229  000878                     u2805:
  5230  000878  0100               	movlb	0	; () banked
  5231  00087A  90D8               	bcf	status,0,c
  5232  00087C  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5233  00087E  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5234  000880  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5235  000882  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  5236  000884                     u2800:
  5237  000884  2EE8               	decfsz	wreg,f,c
  5238  000886  D7F8               	goto	u2805
  5239  000888  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5240  00088C  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5241  000890  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5242  000894  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5246  000898  0100               	movlb	0	; () banked
  5247  00089A  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  5248  00089C  0100               	movlb	0	; () banked
  5249  00089E  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5250  0008A0  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5251  0008A2  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5252  0008A4  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5256  0008A6  C084  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5257  0008AA                     l2777:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 953: }
  5261                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5262  0008AA  0E03               	movlw	3
  5263  0008AC  0100               	movlb	0	; () banked
  5264  0008AE  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5265  0008B0  A4D8               	btfss	status,2,c
  5266  0008B2  D089               	goto	l2811
  5267                           
  5268                           ; BSR set to: 0
  5269  0008B4  0EF7               	movlw	247
  5270  0008B6  0100               	movlb	0	; () banked
  5271  0008B8  197E               	xorwf	CANSetFilter@type& (0+255),w,b
  5272  0008BA  A4D8               	btfss	status,2,c
  5273  0008BC  D084               	goto	l2811
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 956: {
  5277                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5278  0008BE  010F               	movlb	15	; () banked
  5279  0008C0  870D               	bsf	13,3,b	;volatile
  5280                           
  5281                           ; BSR set to: 15
  5282                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5283  0008C2  0100               	movlb	0	; () banked
  5284  0008C4  517A               	movf	CANSetFilter@filter& (0+255),w,b
  5285  0008C6  0100               	movlb	0	; () banked
  5286  0008C8  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5287  0008CA  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5288  0008CC  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5289  0008CE  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5293  0008D0  C084  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5297  0008D4  0E00               	movlw	0
  5298  0008D6  0100               	movlb	0	; () banked
  5299  0008D8  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  5300  0008DA  0100               	movlb	0	; () banked
  5301  0008DC  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5302  0008DE  0EFF               	movlw	255
  5303  0008E0  0100               	movlb	0	; () banked
  5304  0008E2  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5305  0008E4  0100               	movlb	0	; () banked
  5306  0008E6  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5307  0008E8  0E00               	movlw	0
  5308  0008EA  0100               	movlb	0	; () banked
  5309  0008EC  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5310  0008EE  0100               	movlb	0	; () banked
  5311  0008F0  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5312  0008F2  0E00               	movlw	0
  5313  0008F4  0100               	movlb	0	; () banked
  5314  0008F6  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5315  0008F8  0100               	movlb	0	; () banked
  5316  0008FA  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5320  0008FC  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  5321  000900  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5322  000904  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5323  000908  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5324  00090C  C080  F07F         	movff	??_CANSetFilter+1,??_CANSetFilter
  5325  000910  C081  F080         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5326  000914  C082  F081         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5327  000918  0100               	movlb	0	; () banked
  5328  00091A  6B82               	clrf	(??_CANSetFilter+3)& (0+255),b
  5329  00091C  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5330  000920  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5331  000924  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5332  000928  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5336  00092C  C084  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5340  000930  0100               	movlb	0	; () banked
  5341  000932  A17C               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5342  000934  D003               	goto	l490
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5346  000936  010F               	movlb	15	; () banked
  5347  000938  810D               	bsf	13,0,b	;volatile
  5348  00093A  D002               	goto	l491
  5349  00093C                     l490:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;inc\CANlib.h: 968: else
  5353                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5354  00093C  010F               	movlb	15	; () banked
  5355  00093E  910D               	bcf	13,0,b	;volatile
  5356  000940                     l491:
  5357                           
  5358                           ; BSR set to: 15
  5359                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5360  000940  0100               	movlb	0	; () banked
  5361  000942  A37C               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5362  000944  D003               	goto	l492
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5366  000946  010F               	movlb	15	; () banked
  5367  000948  830D               	bsf	13,1,b	;volatile
  5368  00094A  D002               	goto	l493
  5369  00094C                     l492:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 973: else
  5373                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5374  00094C  010F               	movlb	15	; () banked
  5375  00094E  930D               	bcf	13,1,b	;volatile
  5376  000950                     l493:
  5377                           
  5378                           ; BSR set to: 15
  5379                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5380  000950  0100               	movlb	0	; () banked
  5381  000952  A57C               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5382  000954  D003               	goto	l494
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5386  000956  010F               	movlb	15	; () banked
  5387  000958  8B0D               	bsf	13,5,b	;volatile
  5388  00095A  D002               	goto	l495
  5389  00095C                     l494:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;inc\CANlib.h: 978: else
  5393                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5394  00095C  010F               	movlb	15	; () banked
  5395  00095E  9B0D               	bcf	13,5,b	;volatile
  5396  000960                     l495:
  5397                           
  5398                           ; BSR set to: 15
  5399                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5400  000960  0100               	movlb	0	; () banked
  5401  000962  A77C               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5402  000964  D003               	goto	l496
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5406  000966  010F               	movlb	15	; () banked
  5407  000968  8D0D               	bsf	13,6,b	;volatile
  5408  00096A  D002               	goto	l497
  5409  00096C                     l496:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 983: else
  5413                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5414  00096C  010F               	movlb	15	; () banked
  5415  00096E  9D0D               	bcf	13,6,b	;volatile
  5416  000970                     l497:
  5417                           
  5418                           ; BSR set to: 15
  5419                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5420  000970  0100               	movlb	0	; () banked
  5421  000972  A97C               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5422  000974  D003               	goto	l498
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5426  000976  010F               	movlb	15	; () banked
  5427  000978  8F0D               	bsf	13,7,b	;volatile
  5428  00097A  D002               	goto	l2805
  5429  00097C                     l498:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;inc\CANlib.h: 988: else
  5433                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5434  00097C  010F               	movlb	15	; () banked
  5435  00097E  9F0D               	bcf	13,7,b	;volatile
  5436  000980                     l2805:
  5437                           
  5438                           ; BSR set to: 15
  5439                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5440  000980  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  5441  000984  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5442  000988  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5443  00098C  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5444  000990  0E16               	movlw	22
  5445  000992  D006               	goto	u2880
  5446  000994                     u2885:
  5447  000994  0100               	movlb	0	; () banked
  5448  000996  90D8               	bcf	status,0,c
  5449  000998  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5450  00099A  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5451  00099C  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5452  00099E  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  5453  0009A0                     u2880:
  5454  0009A0  2EE8               	decfsz	wreg,f,c
  5455  0009A2  D7F8               	goto	u2885
  5456  0009A4  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5457  0009A8  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5458  0009AC  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5459  0009B0  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5463  0009B4  0100               	movlb	0	; () banked
  5464  0009B6  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  5465  0009B8  0100               	movlb	0	; () banked
  5466  0009BA  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5467  0009BC  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5468  0009BE  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5469  0009C0  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5473  0009C2  C084  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5474  0009C6                     l2811:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;inc\CANlib.h: 994: }
  5478                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5479  0009C6  0E04               	movlw	4
  5480  0009C8  0100               	movlb	0	; () banked
  5481  0009CA  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5482  0009CC  A4D8               	btfss	status,2,c
  5483  0009CE  D089               	goto	l2845
  5484                           
  5485                           ; BSR set to: 0
  5486  0009D0  0EF7               	movlw	247
  5487  0009D2  0100               	movlb	0	; () banked
  5488  0009D4  197E               	xorwf	CANSetFilter@type& (0+255),w,b
  5489  0009D6  A4D8               	btfss	status,2,c
  5490  0009D8  D084               	goto	l2845
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;inc\CANlib.h: 997: {
  5494                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5495  0009DA  010F               	movlb	15	; () banked
  5496  0009DC  8711               	bsf	17,3,b	;volatile
  5497                           
  5498                           ; BSR set to: 15
  5499                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5500  0009DE  0100               	movlb	0	; () banked
  5501  0009E0  517A               	movf	CANSetFilter@filter& (0+255),w,b
  5502  0009E2  0100               	movlb	0	; () banked
  5503  0009E4  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5504  0009E6  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5505  0009E8  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5506  0009EA  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5510  0009EC  C084  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5514  0009F0  0E00               	movlw	0
  5515  0009F2  0100               	movlb	0	; () banked
  5516  0009F4  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  5517  0009F6  0100               	movlb	0	; () banked
  5518  0009F8  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5519  0009FA  0EFF               	movlw	255
  5520  0009FC  0100               	movlb	0	; () banked
  5521  0009FE  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5522  000A00  0100               	movlb	0	; () banked
  5523  000A02  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5524  000A04  0E00               	movlw	0
  5525  000A06  0100               	movlb	0	; () banked
  5526  000A08  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5527  000A0A  0100               	movlb	0	; () banked
  5528  000A0C  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5529  000A0E  0E00               	movlw	0
  5530  000A10  0100               	movlb	0	; () banked
  5531  000A12  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5532  000A14  0100               	movlb	0	; () banked
  5533  000A16  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5537  000A18  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  5538  000A1C  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5539  000A20  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5540  000A24  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5541  000A28  C080  F07F         	movff	??_CANSetFilter+1,??_CANSetFilter
  5542  000A2C  C081  F080         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5543  000A30  C082  F081         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5544  000A34  0100               	movlb	0	; () banked
  5545  000A36  6B82               	clrf	(??_CANSetFilter+3)& (0+255),b
  5546  000A38  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5547  000A3C  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5548  000A40  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5549  000A44  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5553  000A48  C084  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5557  000A4C  0100               	movlb	0	; () banked
  5558  000A4E  A17C               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5559  000A50  D003               	goto	l501
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5563  000A52  010F               	movlb	15	; () banked
  5564  000A54  8111               	bsf	17,0,b	;volatile
  5565  000A56  D002               	goto	l502
  5566  000A58                     l501:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 1009: else
  5570                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5571  000A58  010F               	movlb	15	; () banked
  5572  000A5A  9111               	bcf	17,0,b	;volatile
  5573  000A5C                     l502:
  5574                           
  5575                           ; BSR set to: 15
  5576                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5577  000A5C  0100               	movlb	0	; () banked
  5578  000A5E  A37C               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5579  000A60  D003               	goto	l503
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5583  000A62  010F               	movlb	15	; () banked
  5584  000A64  8311               	bsf	17,1,b	;volatile
  5585  000A66  D002               	goto	l504
  5586  000A68                     l503:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;inc\CANlib.h: 1014: else
  5590                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5591  000A68  010F               	movlb	15	; () banked
  5592  000A6A  9311               	bcf	17,1,b	;volatile
  5593  000A6C                     l504:
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5597  000A6C  0100               	movlb	0	; () banked
  5598  000A6E  A57C               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5599  000A70  D003               	goto	l505
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5603  000A72  010F               	movlb	15	; () banked
  5604  000A74  8B11               	bsf	17,5,b	;volatile
  5605  000A76  D002               	goto	l506
  5606  000A78                     l505:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;inc\CANlib.h: 1019: else
  5610                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5611  000A78  010F               	movlb	15	; () banked
  5612  000A7A  9B11               	bcf	17,5,b	;volatile
  5613  000A7C                     l506:
  5614                           
  5615                           ; BSR set to: 15
  5616                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5617  000A7C  0100               	movlb	0	; () banked
  5618  000A7E  A77C               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5619  000A80  D003               	goto	l507
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5623  000A82  010F               	movlb	15	; () banked
  5624  000A84  8D11               	bsf	17,6,b	;volatile
  5625  000A86  D002               	goto	l508
  5626  000A88                     l507:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;inc\CANlib.h: 1024: else
  5630                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5631  000A88  010F               	movlb	15	; () banked
  5632  000A8A  9D11               	bcf	17,6,b	;volatile
  5633  000A8C                     l508:
  5634                           
  5635                           ; BSR set to: 15
  5636                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5637  000A8C  0100               	movlb	0	; () banked
  5638  000A8E  A97C               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5639  000A90  D003               	goto	l509
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5643  000A92  010F               	movlb	15	; () banked
  5644  000A94  8F11               	bsf	17,7,b	;volatile
  5645  000A96  D002               	goto	l2839
  5646  000A98                     l509:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;inc\CANlib.h: 1029: else
  5650                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5651  000A98  010F               	movlb	15	; () banked
  5652  000A9A  9F11               	bcf	17,7,b	;volatile
  5653  000A9C                     l2839:
  5654                           
  5655                           ; BSR set to: 15
  5656                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5657  000A9C  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  5658  000AA0  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5659  000AA4  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5660  000AA8  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5661  000AAC  0E16               	movlw	22
  5662  000AAE  D006               	goto	u2960
  5663  000AB0                     u2965:
  5664  000AB0  0100               	movlb	0	; () banked
  5665  000AB2  90D8               	bcf	status,0,c
  5666  000AB4  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5667  000AB6  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5668  000AB8  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5669  000ABA  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  5670  000ABC                     u2960:
  5671  000ABC  2EE8               	decfsz	wreg,f,c
  5672  000ABE  D7F8               	goto	u2965
  5673  000AC0  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5674  000AC4  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5675  000AC8  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5676  000ACC  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5680  000AD0  0100               	movlb	0	; () banked
  5681  000AD2  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  5682  000AD4  0100               	movlb	0	; () banked
  5683  000AD6  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5684  000AD8  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5685  000ADA  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5686  000ADC  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5690  000ADE  C084  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5691  000AE2                     l2845:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;inc\CANlib.h: 1035: }
  5695                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5696  000AE2  0E05               	movlw	5
  5697  000AE4  0100               	movlb	0	; () banked
  5698  000AE6  1983               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5699  000AE8  A4D8               	btfss	status,2,c
  5700  000AEA  0012               	return	
  5701                           
  5702                           ; BSR set to: 0
  5703  000AEC  0EF7               	movlw	247
  5704  000AEE  0100               	movlb	0	; () banked
  5705  000AF0  197E               	xorwf	CANSetFilter@type& (0+255),w,b
  5706  000AF2  A4D8               	btfss	status,2,c
  5707  000AF4  0012               	return	
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;inc\CANlib.h: 1038: {
  5711                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5712  000AF6  010F               	movlb	15	; () banked
  5713  000AF8  8715               	bsf	21,3,b	;volatile
  5714                           
  5715                           ; BSR set to: 15
  5716                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5717  000AFA  0100               	movlb	0	; () banked
  5718  000AFC  517A               	movf	CANSetFilter@filter& (0+255),w,b
  5719  000AFE  0100               	movlb	0	; () banked
  5720  000B00  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5721  000B02  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5722  000B04  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5723  000B06  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5727  000B08  C084  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5731  000B0C  0E00               	movlw	0
  5732  000B0E  0100               	movlb	0	; () banked
  5733  000B10  157A               	andwf	CANSetFilter@filter& (0+255),w,b
  5734  000B12  0100               	movlb	0	; () banked
  5735  000B14  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5736  000B16  0EFF               	movlw	255
  5737  000B18  0100               	movlb	0	; () banked
  5738  000B1A  157B               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5739  000B1C  0100               	movlb	0	; () banked
  5740  000B1E  6F85               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5741  000B20  0E00               	movlw	0
  5742  000B22  0100               	movlb	0	; () banked
  5743  000B24  157C               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5744  000B26  0100               	movlb	0	; () banked
  5745  000B28  6F86               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5746  000B2A  0E00               	movlw	0
  5747  000B2C  0100               	movlb	0	; () banked
  5748  000B2E  157D               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5749  000B30  0100               	movlb	0	; () banked
  5750  000B32  6F87               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5754  000B34  C084  F07F         	movff	CANSetFilter@tamp,??_CANSetFilter
  5755  000B38  C085  F080         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5756  000B3C  C086  F081         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5757  000B40  C087  F082         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5758  000B44  C080  F07F         	movff	??_CANSetFilter+1,??_CANSetFilter
  5759  000B48  C081  F080         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5760  000B4C  C082  F081         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5761  000B50  0100               	movlb	0	; () banked
  5762  000B52  6B82               	clrf	(??_CANSetFilter+3)& (0+255),b
  5763  000B54  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5764  000B58  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5765  000B5C  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5766  000B60  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5770  000B64  C084  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5774  000B68  0100               	movlb	0	; () banked
  5775  000B6A  A17C               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5776  000B6C  D003               	goto	l512
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5780  000B6E  010F               	movlb	15	; () banked
  5781  000B70  8115               	bsf	21,0,b	;volatile
  5782  000B72  D002               	goto	l513
  5783  000B74                     l512:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 1050: else
  5787                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5788  000B74  010F               	movlb	15	; () banked
  5789  000B76  9115               	bcf	21,0,b	;volatile
  5790  000B78                     l513:
  5791                           
  5792                           ; BSR set to: 15
  5793                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5794  000B78  0100               	movlb	0	; () banked
  5795  000B7A  A37C               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5796  000B7C  D003               	goto	l514
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5800  000B7E  010F               	movlb	15	; () banked
  5801  000B80  8315               	bsf	21,1,b	;volatile
  5802  000B82  D002               	goto	l515
  5803  000B84                     l514:
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;inc\CANlib.h: 1055: else
  5807                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5808  000B84  010F               	movlb	15	; () banked
  5809  000B86  9315               	bcf	21,1,b	;volatile
  5810  000B88                     l515:
  5811                           
  5812                           ; BSR set to: 15
  5813                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5814  000B88  0100               	movlb	0	; () banked
  5815  000B8A  A57C               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5816  000B8C  D003               	goto	l516
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5820  000B8E  010F               	movlb	15	; () banked
  5821  000B90  8B15               	bsf	21,5,b	;volatile
  5822  000B92  D002               	goto	l517
  5823  000B94                     l516:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;inc\CANlib.h: 1060: else
  5827                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5828  000B94  010F               	movlb	15	; () banked
  5829  000B96  9B15               	bcf	21,5,b	;volatile
  5830  000B98                     l517:
  5831                           
  5832                           ; BSR set to: 15
  5833                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5834  000B98  0100               	movlb	0	; () banked
  5835  000B9A  A77C               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5836  000B9C  D003               	goto	l518
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5840  000B9E  010F               	movlb	15	; () banked
  5841  000BA0  8D15               	bsf	21,6,b	;volatile
  5842  000BA2  D002               	goto	l519
  5843  000BA4                     l518:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;inc\CANlib.h: 1065: else
  5847                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5848  000BA4  010F               	movlb	15	; () banked
  5849  000BA6  9D15               	bcf	21,6,b	;volatile
  5850  000BA8                     l519:
  5851                           
  5852                           ; BSR set to: 15
  5853                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5854  000BA8  0100               	movlb	0	; () banked
  5855  000BAA  A97C               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5856  000BAC  D003               	goto	l520
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5860  000BAE  010F               	movlb	15	; () banked
  5861  000BB0  8F15               	bsf	21,7,b	;volatile
  5862  000BB2  D002               	goto	l2873
  5863  000BB4                     l520:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;inc\CANlib.h: 1070: else
  5867                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5868  000BB4  010F               	movlb	15	; () banked
  5869  000BB6  9F15               	bcf	21,7,b	;volatile
  5870  000BB8                     l2873:
  5871                           
  5872                           ; BSR set to: 15
  5873                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5874  000BB8  C07A  F07F         	movff	CANSetFilter@filter,??_CANSetFilter
  5875  000BBC  C07B  F080         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5876  000BC0  C07C  F081         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5877  000BC4  C07D  F082         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5878  000BC8  0E16               	movlw	22
  5879  000BCA  D006               	goto	u3040
  5880  000BCC                     u3045:
  5881  000BCC  0100               	movlb	0	; () banked
  5882  000BCE  90D8               	bcf	status,0,c
  5883  000BD0  3382               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5884  000BD2  3381               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5885  000BD4  3380               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5886  000BD6  337F               	rrcf	??_CANSetFilter& (0+255),f,b
  5887  000BD8                     u3040:
  5888  000BD8  2EE8               	decfsz	wreg,f,c
  5889  000BDA  D7F8               	goto	u3045
  5890  000BDC  C07F  F084         	movff	??_CANSetFilter,CANSetFilter@tamp
  5891  000BE0  C080  F085         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5892  000BE4  C081  F086         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5893  000BE8  C082  F087         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5897  000BEC  0100               	movlb	0	; () banked
  5898  000BEE  5184               	movf	CANSetFilter@tamp& (0+255),w,b
  5899  000BF0  0100               	movlb	0	; () banked
  5900  000BF2  6F84               	movwf	CANSetFilter@tamp& (0+255),b
  5901  000BF4  6B85               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5902  000BF6  6B86               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5903  000BF8  6B87               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5907  000BFA  C084  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5908  000BFE  0012               	return	
  5909  000C00                     __end_of_CANSetFilter:
  5910                           	opt stack 0
  5911                           tblptru	equ	0xFF8
  5912                           tblptrh	equ	0xFF7
  5913                           tblptrl	equ	0xFF6
  5914                           tablat	equ	0xFF5
  5915                           prodh	equ	0xFF4
  5916                           prodl	equ	0xFF3
  5917                           intcon	equ	0xFF2
  5918                           intcon2	equ	0xFF1
  5919                           postinc0	equ	0xFEE
  5920                           wreg	equ	0xFE8
  5921                           postdec1	equ	0xFE5
  5922                           fsr1l	equ	0xFE1
  5923                           indf2	equ	0xFDF
  5924                           fsr2h	equ	0xFDA
  5925                           fsr2l	equ	0xFD9
  5926                           status	equ	0xFD8
  5927                           
  5928 ;; *************** function _CANOperationMode *****************
  5929 ;; Defined at:
  5930 ;;		line 206 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  mode            1    wreg     enum E16838
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  mode            1   26[BANK0 ] enum E16838
  5935 ;; Return value:  Size  Location     Type
  5936 ;;		None               void
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5944 ;;      Params:         0       0       0       0
  5945 ;;      Locals:         0       1       0       0
  5946 ;;      Temps:          0       0       0       0
  5947 ;;      Totals:         0       1       0       0
  5948 ;;Total ram usage:        1 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    4
  5951 ;; This function calls:
  5952 ;;		Nothing
  5953 ;; This function is called by:
  5954 ;;		_CANInitialize
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text10
  5959  002424                     __ptext10:
  5960                           	opt stack 0
  5961  002424                     _CANOperationMode:
  5962                           	opt stack 24
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;incstack = 0
  5966                           ;CANOperationMode@mode stored from wreg
  5967  002424  0100               	movlb	0	; () banked
  5968  002426  6F7A               	movwf	CANOperationMode@mode& (0+255),b
  5969                           
  5970                           ;inc\CANlib.h: 208: CANCON = mode;
  5971  002428  C07A  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5972  00242C                     l2469:
  5973  00242C  506E               	movf	3950,w,c	;volatile
  5974  00242E  0BE0               	andlw	224
  5975  002430  0100               	movlb	0	; () banked
  5976  002432  197A               	xorwf	CANOperationMode@mode& (0+255),w,b
  5977  002434  B4D8               	btfsc	status,2,c
  5978  002436  0012               	return	
  5979  002438  D7F9               	goto	l2469
  5980  00243A                     __end_of_CANOperationMode:
  5981                           	opt stack 0
  5982                           tblptru	equ	0xFF8
  5983                           tblptrh	equ	0xFF7
  5984                           tblptrl	equ	0xFF6
  5985                           tablat	equ	0xFF5
  5986                           prodh	equ	0xFF4
  5987                           prodl	equ	0xFF3
  5988                           intcon	equ	0xFF2
  5989                           intcon2	equ	0xFF1
  5990                           postinc0	equ	0xFEE
  5991                           wreg	equ	0xFE8
  5992                           postdec1	equ	0xFE5
  5993                           fsr1l	equ	0xFE1
  5994                           indf2	equ	0xFDF
  5995                           fsr2h	equ	0xFDA
  5996                           fsr2l	equ	0xFD9
  5997                           status	equ	0xFD8
  5998                           
  5999 ;; *************** function _CANisTXwarningON *****************
  6000 ;; Defined at:
  6001 ;;		line 1119 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      unsigned char 
  6008 ;; Registers used:
  6009 ;;		wreg
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6015 ;;      Params:         0       0       0       0
  6016 ;;      Locals:         0       0       0       0
  6017 ;;      Temps:          0       0       0       0
  6018 ;;      Totals:         0       0       0       0
  6019 ;;Total ram usage:        0 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    4
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_main
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text11
  6030  002462                     __ptext11:
  6031                           	opt stack 0
  6032  002462                     _CANisTXwarningON:
  6033                           	opt stack 26
  6034                           
  6035                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;incstack = 0
  6039  002462  A474               	btfss	3956,2,c	;volatile
  6040  002464  D002               	goto	u3820
  6041  002466  0E01               	movlw	1
  6042  002468  0012               	return	
  6043  00246A                     u3820:
  6044  00246A  0E00               	movlw	0
  6045  00246C  0012               	return	
  6046  00246E                     __end_of_CANisTXwarningON:
  6047                           	opt stack 0
  6048                           tblptru	equ	0xFF8
  6049                           tblptrh	equ	0xFF7
  6050                           tblptrl	equ	0xFF6
  6051                           tablat	equ	0xFF5
  6052                           prodh	equ	0xFF4
  6053                           prodl	equ	0xFF3
  6054                           intcon	equ	0xFF2
  6055                           intcon2	equ	0xFF1
  6056                           postinc0	equ	0xFEE
  6057                           wreg	equ	0xFE8
  6058                           postdec1	equ	0xFE5
  6059                           fsr1l	equ	0xFE1
  6060                           indf2	equ	0xFDF
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function _CANisRXwarningON *****************
  6066 ;; Defined at:
  6067 ;;		line 1127 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      unsigned char 
  6074 ;; Registers used:
  6075 ;;		wreg
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6081 ;;      Params:         0       0       0       0
  6082 ;;      Locals:         0       0       0       0
  6083 ;;      Temps:          0       0       0       0
  6084 ;;      Totals:         0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    4
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_main
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text12
  6096  00246E                     __ptext12:
  6097                           	opt stack 0
  6098  00246E                     _CANisRXwarningON:
  6099                           	opt stack 26
  6100                           
  6101                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6102                           
  6103                           ;incstack = 0
  6104  00246E  A274               	btfss	3956,1,c	;volatile
  6105  002470  D002               	goto	u3830
  6106  002472  0E01               	movlw	1
  6107  002474  0012               	return	
  6108  002476                     u3830:
  6109  002476  0E00               	movlw	0
  6110  002478  0012               	return	
  6111  00247A                     __end_of_CANisRXwarningON:
  6112                           	opt stack 0
  6113                           tblptru	equ	0xFF8
  6114                           tblptrh	equ	0xFF7
  6115                           tblptrl	equ	0xFF6
  6116                           tablat	equ	0xFF5
  6117                           prodh	equ	0xFF4
  6118                           prodl	equ	0xFF3
  6119                           intcon	equ	0xFF2
  6120                           intcon2	equ	0xFF1
  6121                           postinc0	equ	0xFEE
  6122                           wreg	equ	0xFE8
  6123                           postdec1	equ	0xFE5
  6124                           fsr1l	equ	0xFE1
  6125                           indf2	equ	0xFDF
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _ADC_Read *****************
  6131 ;; Defined at:
  6132 ;;		line 194 in file "ABS_Code.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;		None               void
  6139 ;; Registers used:
  6140 ;;		wreg, status,2, status,0, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6146 ;;      Params:         0       0       0       0
  6147 ;;      Locals:         0       0       0       0
  6148 ;;      Temps:          0       0       0       0
  6149 ;;      Totals:         0       0       0       0
  6150 ;;Total ram usage:        0 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    5
  6153 ;; This function calls:
  6154 ;;		___awdiv
  6155 ;; This function is called by:
  6156 ;;		_main
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text13
  6161  00232C                     __ptext13:
  6162                           	opt stack 0
  6163  00232C                     _ADC_Read:
  6164                           	opt stack 25
  6165                           
  6166                           ;ABS_Code.c: 195: ADCON0bits.GO = 1;
  6167                           
  6168                           ;incstack = 0
  6169  00232C  82C2               	bsf	4034,1,c	;volatile
  6170  00232E                     l652:
  6171  00232E  B2C2               	btfsc	4034,1,c	;volatile
  6172  002330  D7FE               	goto	l652
  6173                           
  6174                           ;ABS_Code.c: 197: read = ADRESH;
  6175  002332  CFC4 F0A0          	movff	4036,_read	;volatile
  6176                           
  6177                           ;ABS_Code.c: 198: correction_factor = read - 127;
  6178  002336  0E81               	movlw	129
  6179  002338  0100               	movlb	0	; () banked
  6180  00233A  25A0               	addwf	_read& (0+255),w,b
  6181  00233C  0100               	movlb	0	; () banked
  6182  00233E  6F9A               	movwf	_correction_factor& (0+255),b
  6183  002340  0100               	movlb	0	; () banked
  6184  002342  6B9B               	clrf	(_correction_factor+1)& (0+255),b
  6185  002344  0EFF               	movlw	255
  6186  002346  239B               	addwfc	(_correction_factor+1)& (0+255),f,b
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;ABS_Code.c: 199: home_position = correction_factor / 4 + 127;
  6190  002348  C09A  F07A         	movff	_correction_factor,___awdiv@dividend
  6191  00234C  C09B  F07B         	movff	_correction_factor+1,___awdiv@dividend+1
  6192  002350  0E00               	movlw	0
  6193  002352  0100               	movlb	0	; () banked
  6194  002354  6F7D               	movwf	(___awdiv@divisor+1)& (0+255),b
  6195  002356  0E04               	movlw	4
  6196  002358  6F7C               	movwf	___awdiv@divisor& (0+255),b
  6197  00235A  ECE4  F00F         	call	___awdiv	;wreg free
  6198  00235E  0100               	movlb	0	; () banked
  6199  002360  517A               	movf	?___awdiv& (0+255),w,b
  6200  002362  0F7F               	addlw	127
  6201  002364  0100               	movlb	0	; () banked
  6202  002366  6F9F               	movwf	_home_position& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205  002368  0012               	return		;funcret
  6206  00236A                     __end_of_ADC_Read:
  6207                           	opt stack 0
  6208                           tblptru	equ	0xFF8
  6209                           tblptrh	equ	0xFF7
  6210                           tblptrl	equ	0xFF6
  6211                           tablat	equ	0xFF5
  6212                           prodh	equ	0xFF4
  6213                           prodl	equ	0xFF3
  6214                           intcon	equ	0xFF2
  6215                           intcon2	equ	0xFF1
  6216                           postinc0	equ	0xFEE
  6217                           wreg	equ	0xFE8
  6218                           postdec1	equ	0xFE5
  6219                           fsr1l	equ	0xFE1
  6220                           indf2	equ	0xFDF
  6221                           fsr2h	equ	0xFDA
  6222                           fsr2l	equ	0xFD9
  6223                           status	equ	0xFD8
  6224                           
  6225 ;; *************** function ___awdiv *****************
  6226 ;; Defined at:
  6227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  dividend        2   26[BANK0 ] int 
  6230 ;;  divisor         2   28[BANK0 ] int 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  quotient        2   32[BANK0 ] int 
  6233 ;;  sign            1   31[BANK0 ] unsigned char 
  6234 ;;  counter         1   30[BANK0 ] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  2   26[BANK0 ] int 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6244 ;;      Params:         0       4       0       0
  6245 ;;      Locals:         0       4       0       0
  6246 ;;      Temps:          0       0       0       0
  6247 ;;      Totals:         0       8       0       0
  6248 ;;Total ram usage:        8 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    4
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_main
  6255 ;;		_ADC_Read
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text14
  6260  001FC8                     __ptext14:
  6261                           	opt stack 0
  6262  001FC8                     ___awdiv:
  6263                           	opt stack 26
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;incstack = 0
  6267  001FC8  0E00               	movlw	0
  6268  001FCA  0100               	movlb	0	; () banked
  6269  001FCC  6F7F               	movwf	___awdiv@sign& (0+255),b
  6270                           
  6271                           ; BSR set to: 0
  6272  001FCE  0100               	movlb	0	; () banked
  6273  001FD0  AF7D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6274  001FD2  D008               	goto	l3193
  6275                           
  6276                           ; BSR set to: 0
  6277  001FD4  0100               	movlb	0	; () banked
  6278  001FD6  6D7C               	negf	___awdiv@divisor& (0+255),b
  6279  001FD8  1F7D               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6280  001FDA  B0D8               	btfsc	status,0,c
  6281  001FDC  2B7D               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6282                           
  6283                           ; BSR set to: 0
  6284  001FDE  0E01               	movlw	1
  6285  001FE0  0100               	movlb	0	; () banked
  6286  001FE2  6F7F               	movwf	___awdiv@sign& (0+255),b
  6287  001FE4                     l3193:
  6288                           
  6289                           ; BSR set to: 0
  6290  001FE4  0100               	movlb	0	; () banked
  6291  001FE6  AF7B               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6292  001FE8  D008               	goto	l3199
  6293                           
  6294                           ; BSR set to: 0
  6295  001FEA  0100               	movlb	0	; () banked
  6296  001FEC  6D7A               	negf	___awdiv@dividend& (0+255),b
  6297  001FEE  1F7B               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6298  001FF0  B0D8               	btfsc	status,0,c
  6299  001FF2  2B7B               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6300                           
  6301                           ; BSR set to: 0
  6302  001FF4  0E01               	movlw	1
  6303  001FF6  0100               	movlb	0	; () banked
  6304  001FF8  1B7F               	xorwf	___awdiv@sign& (0+255),f,b
  6305  001FFA                     l3199:
  6306                           
  6307                           ; BSR set to: 0
  6308  001FFA  0E00               	movlw	0
  6309  001FFC  0100               	movlb	0	; () banked
  6310  001FFE  6F81               	movwf	(___awdiv@quotient+1)& (0+255),b
  6311  002000  0E00               	movlw	0
  6312  002002  6F80               	movwf	___awdiv@quotient& (0+255),b
  6313                           
  6314                           ; BSR set to: 0
  6315  002004  0100               	movlb	0	; () banked
  6316  002006  517C               	movf	___awdiv@divisor& (0+255),w,b
  6317  002008  0100               	movlb	0	; () banked
  6318  00200A  117D               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6319  00200C  B4D8               	btfsc	status,2,c
  6320  00200E  D02C               	goto	l3221
  6321                           
  6322                           ; BSR set to: 0
  6323  002010  0E01               	movlw	1
  6324  002012  0100               	movlb	0	; () banked
  6325  002014  6F7E               	movwf	___awdiv@counter& (0+255),b
  6326  002016  D006               	goto	l3207
  6327  002018                     l3205:
  6328                           
  6329                           ; BSR set to: 0
  6330  002018  0100               	movlb	0	; () banked
  6331  00201A  90D8               	bcf	status,0,c
  6332  00201C  377C               	rlcf	___awdiv@divisor& (0+255),f,b
  6333  00201E  377D               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6334  002020  0100               	movlb	0	; () banked
  6335  002022  2B7E               	incf	___awdiv@counter& (0+255),f,b
  6336  002024                     l3207:
  6337                           
  6338                           ; BSR set to: 0
  6339  002024  0100               	movlb	0	; () banked
  6340  002026  AF7D               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6341  002028  D7F7               	goto	l3205
  6342  00202A                     l3209:
  6343                           
  6344                           ; BSR set to: 0
  6345  00202A  0100               	movlb	0	; () banked
  6346  00202C  90D8               	bcf	status,0,c
  6347  00202E  3780               	rlcf	___awdiv@quotient& (0+255),f,b
  6348  002030  3781               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6349                           
  6350                           ; BSR set to: 0
  6351  002032  0100               	movlb	0	; () banked
  6352  002034  517C               	movf	___awdiv@divisor& (0+255),w,b
  6353  002036  0100               	movlb	0	; () banked
  6354  002038  5D7A               	subwf	___awdiv@dividend& (0+255),w,b
  6355  00203A  0100               	movlb	0	; () banked
  6356  00203C  517D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6357  00203E  0100               	movlb	0	; () banked
  6358  002040  597B               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6359  002042  A0D8               	btfss	status,0,c
  6360  002044  D00A               	goto	l3217
  6361                           
  6362                           ; BSR set to: 0
  6363  002046  0100               	movlb	0	; () banked
  6364  002048  517C               	movf	___awdiv@divisor& (0+255),w,b
  6365  00204A  0100               	movlb	0	; () banked
  6366  00204C  5F7A               	subwf	___awdiv@dividend& (0+255),f,b
  6367  00204E  0100               	movlb	0	; () banked
  6368  002050  517D               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6369  002052  0100               	movlb	0	; () banked
  6370  002054  5B7B               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6371                           
  6372                           ; BSR set to: 0
  6373  002056  0100               	movlb	0	; () banked
  6374  002058  8180               	bsf	___awdiv@quotient& (0+255),0,b
  6375  00205A                     l3217:
  6376                           
  6377                           ; BSR set to: 0
  6378  00205A  0100               	movlb	0	; () banked
  6379  00205C  90D8               	bcf	status,0,c
  6380  00205E  337D               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6381  002060  337C               	rrcf	___awdiv@divisor& (0+255),f,b
  6382                           
  6383                           ; BSR set to: 0
  6384  002062  0100               	movlb	0	; () banked
  6385  002064  2F7E               	decfsz	___awdiv@counter& (0+255),f,b
  6386  002066  D7E1               	goto	l3209
  6387  002068                     l3221:
  6388                           
  6389                           ; BSR set to: 0
  6390  002068  0100               	movlb	0	; () banked
  6391  00206A  517F               	movf	___awdiv@sign& (0+255),w,b
  6392  00206C  0100               	movlb	0	; () banked
  6393  00206E  B4D8               	btfsc	status,2,c
  6394  002070  D005               	goto	l3225
  6395                           
  6396                           ; BSR set to: 0
  6397  002072  0100               	movlb	0	; () banked
  6398  002074  6D80               	negf	___awdiv@quotient& (0+255),b
  6399  002076  1F81               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6400  002078  B0D8               	btfsc	status,0,c
  6401  00207A  2B81               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6402  00207C                     l3225:
  6403                           
  6404                           ; BSR set to: 0
  6405  00207C  C080  F07A         	movff	___awdiv@quotient,?___awdiv
  6406  002080  C081  F07B         	movff	___awdiv@quotient+1,?___awdiv+1
  6407  002084  0012               	return	
  6408  002086                     __end_of___awdiv:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           prodh	equ	0xFF4
  6415                           prodl	equ	0xFF3
  6416                           intcon	equ	0xFF2
  6417                           intcon2	equ	0xFF1
  6418                           postinc0	equ	0xFEE
  6419                           wreg	equ	0xFE8
  6420                           postdec1	equ	0xFE5
  6421                           fsr1l	equ	0xFE1
  6422                           indf2	equ	0xFDF
  6423                           fsr2h	equ	0xFDA
  6424                           fsr2l	equ	0xFD9
  6425                           status	equ	0xFD8
  6426                           
  6427 ;; *************** function _ISR_Bassa *****************
  6428 ;; Defined at:
  6429 ;;		line 117 in file "ABS_Code.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;		None               void
  6436 ;; Registers used:
  6437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6443 ;;      Params:         0       0       0       0
  6444 ;;      Locals:         0       0       0       0
  6445 ;;      Temps:         17       0       0       0
  6446 ;;      Totals:        17       0       0       0
  6447 ;;Total ram usage:       17 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; Hardware stack levels required when called:    3
  6450 ;; This function calls:
  6451 ;;		_CANisRxReady
  6452 ;;		_CANreceiveMessage
  6453 ;; This function is called by:
  6454 ;;		Interrupt level 1
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	intcodelo
  6459  000018                     __pintcodelo:
  6460                           	opt stack 0
  6461  000018                     _ISR_Bassa:
  6462                           	opt stack 24
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;incstack = 0
  6466  000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6467  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  6468  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  6469  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  6470  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  6471  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  6472  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  6473  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  6474  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  6475  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  6476  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  6477  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  6478  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  6479  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  6480  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  6481  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  6482  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  6483  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  6484                           
  6485                           ;ABS_Code.c: 118: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6486  00005E  A0A4               	btfss	4004,0,c	;volatile
  6487  000060  B2A4               	btfsc	4004,1,c	;volatile
  6488  000062  D001               	goto	i1l3567
  6489  000064  D024               	goto	i1l620
  6490  000066                     i1l3567:
  6491                           
  6492                           ;ABS_Code.c: 119: if (CANisRxReady()) {
  6493  000066  EC1D  F012         	call	_CANisRxReady	;wreg free
  6494  00006A  0900               	iorlw	0
  6495  00006C  B4D8               	btfsc	status,2,c
  6496  00006E  D01D               	goto	i1l617
  6497                           
  6498                           ;ABS_Code.c: 120: CANreceiveMessage(&msg);
  6499  000070  0E30               	movlw	low _msg
  6500  000072  6E01               	movwf	CANreceiveMessage@msg,c
  6501  000074  0E00               	movlw	high _msg
  6502  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  6503  000078  ECC6  F009         	call	_CANreceiveMessage	;wreg free
  6504                           
  6505                           ;ABS_Code.c: 121: if (msg.RTR == 1) {
  6506  00007C  043E               	decf	_msg+14,w,c
  6507  00007E  A4D8               	btfss	status,2,c
  6508  000080  D009               	goto	i1l3575
  6509                           
  6510                           ;ABS_Code.c: 122: remote_frame_id = msg.identifier;
  6511  000082  C030  F094         	movff	_msg,_remote_frame_id
  6512  000086  C031  F095         	movff	_msg+1,_remote_frame_id+1
  6513  00008A  C032  F096         	movff	_msg+2,_remote_frame_id+2
  6514  00008E  C033  F097         	movff	_msg+3,_remote_frame_id+3
  6515                           
  6516                           ;ABS_Code.c: 123: remote_frame = 1;
  6517  000092  8240               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6518  000094                     i1l3575:
  6519                           
  6520                           ;ABS_Code.c: 124: }
  6521                           ;ABS_Code.c: 125: if (msg.identifier == 0b00000000000000000000000000110) {
  6522  000094  0E06               	movlw	6
  6523  000096  1830               	xorwf	_msg,w,c
  6524  000098  1031               	iorwf	_msg+1,w,c
  6525  00009A  1032               	iorwf	_msg+2,w,c
  6526  00009C  1033               	iorwf	_msg+3,w,c
  6527  00009E  A4D8               	btfss	status,2,c
  6528  0000A0  D004               	goto	i1l617
  6529                           
  6530                           ;ABS_Code.c: 126: brake_signal_CAN = msg.data[0];
  6531  0000A2  C034  F09D         	movff	_msg+4,_brake_signal_CAN
  6532                           
  6533                           ;ABS_Code.c: 127: Analogic_Mode = msg.data[1];
  6534  0000A6  C035  F09C         	movff	_msg+5,_Analogic_Mode
  6535  0000AA                     i1l617:
  6536                           
  6537                           ;ABS_Code.c: 128: }
  6538                           ;ABS_Code.c: 129: }
  6539                           ;ABS_Code.c: 130: PIR3bits.RXB0IF = 0;
  6540  0000AA  90A4               	bcf	4004,0,c	;volatile
  6541                           
  6542                           ;ABS_Code.c: 131: PIR3bits.RXB1IF = 0;
  6543  0000AC  92A4               	bcf	4004,1,c	;volatile
  6544  0000AE                     i1l620:
  6545  0000AE  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  6546  0000B2  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  6547  0000B6  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  6548  0000BA  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  6549  0000BE  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  6550  0000C2  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  6551  0000C6  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  6552  0000CA  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  6553  0000CE  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  6554  0000D2  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  6555  0000D6  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  6556  0000DA  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  6557  0000DE  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  6558  0000E2  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  6559  0000E6  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  6560  0000EA  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  6561  0000EE  C00D  FFD8         	movff	??_ISR_Bassa,status
  6562  0000F2  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6563  0000F4  0010               	retfie	
  6564  0000F6                     __end_of_ISR_Bassa:
  6565                           	opt stack 0
  6566                           pclatu	equ	0xFFB
  6567                           pclath	equ	0xFFA
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           intcon2	equ	0xFF1
  6576                           postinc0	equ	0xFEE
  6577                           fsr0h	equ	0xFEA
  6578                           fsr0l	equ	0xFE9
  6579                           wreg	equ	0xFE8
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           bsr	equ	0xFE0
  6584                           indf2	equ	0xFDF
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _CANreceiveMessage *****************
  6590 ;; Defined at:
  6591 ;;		line 528 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  msg             2    0[COMRAM] PTR struct .
  6594 ;;		 -> msg(15), 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  tamp            1   11[COMRAM] unsigned char 
  6597 ;;  error           1   10[COMRAM] unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      unsigned char 
  6600 ;; Registers used:
  6601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6607 ;;      Params:         2       0       0       0
  6608 ;;      Locals:         2       0       0       0
  6609 ;;      Temps:          8       0       0       0
  6610 ;;      Totals:        12       0       0       0
  6611 ;;Total ram usage:       12 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    2
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_ISR_Bassa
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text16
  6622  00138C                     __ptext16:
  6623                           	opt stack 0
  6624  00138C                     _CANreceiveMessage:
  6625                           	opt stack 24
  6626                           
  6627                           ;inc\CANlib.h: 530: BYTE tamp;
  6628                           ;inc\CANlib.h: 531: BYTE error = 0;
  6629                           
  6630                           ;incstack = 0
  6631  00138C  0E00               	movlw	0
  6632  00138E  6E0B               	movwf	CANreceiveMessage@error,c
  6633                           
  6634                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  6635  001390  BE74               	btfsc	3956,7,c	;volatile
  6636                           
  6637                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  6638  001392  800B               	bsf	CANreceiveMessage@error,0,c
  6639                           
  6640                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  6641  001394  BC74               	btfsc	3956,6,c	;volatile
  6642                           
  6643                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  6644  001396  820B               	bsf	CANreceiveMessage@error,1,c
  6645                           
  6646                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  6647  001398  010F               	movlb	15	; () banked
  6648  00139A  AF50               	btfss	80,7,b	;volatile
  6649  00139C  D143               	goto	i1l404
  6650                           
  6651                           ; BSR set to: 15
  6652                           ;inc\CANlib.h: 541: {
  6653                           ;inc\CANlib.h: 542: msg->identifier = 0;
  6654  00139E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6655  0013A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6656  0013A6  6ADE               	clrf	postinc2,c
  6657  0013A8  6ADE               	clrf	postinc2,c
  6658  0013AA  6ADE               	clrf	postinc2,c
  6659  0013AC  6ADD               	clrf	postdec2,c
  6660                           
  6661                           ; BSR set to: 15
  6662                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  6663  0013AE  EE20 F004          	lfsr	2,4
  6664  0013B2  5001               	movf	CANreceiveMessage@msg,w,c
  6665  0013B4  26D9               	addwf	fsr2l,f,c
  6666  0013B6  5002               	movf	CANreceiveMessage@msg+1,w,c
  6667  0013B8  22DA               	addwfc	fsr2h,f,c
  6668  0013BA  CF56 FFDF          	movff	3926,indf2	;volatile
  6669                           
  6670                           ; BSR set to: 15
  6671                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  6672  0013BE  EE20 F005          	lfsr	2,5
  6673  0013C2  5001               	movf	CANreceiveMessage@msg,w,c
  6674  0013C4  26D9               	addwf	fsr2l,f,c
  6675  0013C6  5002               	movf	CANreceiveMessage@msg+1,w,c
  6676  0013C8  22DA               	addwfc	fsr2h,f,c
  6677  0013CA  CF57 FFDF          	movff	3927,indf2	;volatile
  6678                           
  6679                           ; BSR set to: 15
  6680                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  6681  0013CE  EE20 F006          	lfsr	2,6
  6682  0013D2  5001               	movf	CANreceiveMessage@msg,w,c
  6683  0013D4  26D9               	addwf	fsr2l,f,c
  6684  0013D6  5002               	movf	CANreceiveMessage@msg+1,w,c
  6685  0013D8  22DA               	addwfc	fsr2h,f,c
  6686  0013DA  CF58 FFDF          	movff	3928,indf2	;volatile
  6687                           
  6688                           ; BSR set to: 15
  6689                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  6690  0013DE  EE20 F007          	lfsr	2,7
  6691  0013E2  5001               	movf	CANreceiveMessage@msg,w,c
  6692  0013E4  26D9               	addwf	fsr2l,f,c
  6693  0013E6  5002               	movf	CANreceiveMessage@msg+1,w,c
  6694  0013E8  22DA               	addwfc	fsr2h,f,c
  6695  0013EA  CF59 FFDF          	movff	3929,indf2	;volatile
  6696                           
  6697                           ; BSR set to: 15
  6698                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  6699  0013EE  EE20 F008          	lfsr	2,8
  6700  0013F2  5001               	movf	CANreceiveMessage@msg,w,c
  6701  0013F4  26D9               	addwf	fsr2l,f,c
  6702  0013F6  5002               	movf	CANreceiveMessage@msg+1,w,c
  6703  0013F8  22DA               	addwfc	fsr2h,f,c
  6704  0013FA  CF5A FFDF          	movff	3930,indf2	;volatile
  6705                           
  6706                           ; BSR set to: 15
  6707                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  6708  0013FE  EE20 F009          	lfsr	2,9
  6709  001402  5001               	movf	CANreceiveMessage@msg,w,c
  6710  001404  26D9               	addwf	fsr2l,f,c
  6711  001406  5002               	movf	CANreceiveMessage@msg+1,w,c
  6712  001408  22DA               	addwfc	fsr2h,f,c
  6713  00140A  CF5B FFDF          	movff	3931,indf2	;volatile
  6714                           
  6715                           ; BSR set to: 15
  6716                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  6717  00140E  EE20 F00A          	lfsr	2,10
  6718  001412  5001               	movf	CANreceiveMessage@msg,w,c
  6719  001414  26D9               	addwf	fsr2l,f,c
  6720  001416  5002               	movf	CANreceiveMessage@msg+1,w,c
  6721  001418  22DA               	addwfc	fsr2h,f,c
  6722  00141A  CF5C FFDF          	movff	3932,indf2	;volatile
  6723                           
  6724                           ; BSR set to: 15
  6725                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  6726  00141E  EE20 F00B          	lfsr	2,11
  6727  001422  5001               	movf	CANreceiveMessage@msg,w,c
  6728  001424  26D9               	addwf	fsr2l,f,c
  6729  001426  5002               	movf	CANreceiveMessage@msg+1,w,c
  6730  001428  22DA               	addwfc	fsr2h,f,c
  6731  00142A  CF5D FFDF          	movff	3933,indf2	;volatile
  6732                           
  6733                           ; BSR set to: 15
  6734                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  6735  00142E  EE20 F00E          	lfsr	2,14
  6736  001432  5001               	movf	CANreceiveMessage@msg,w,c
  6737  001434  26D9               	addwf	fsr2l,f,c
  6738  001436  5002               	movf	CANreceiveMessage@msg+1,w,c
  6739  001438  22DA               	addwfc	fsr2h,f,c
  6740  00143A  010F               	movlb	15	; () banked
  6741  00143C  AD55               	btfss	85,6,b	;volatile
  6742  00143E  D002               	goto	i1u361_20
  6743  001440  0E01               	movlw	1
  6744  001442  D001               	goto	i1u361_26
  6745  001444                     i1u361_20:
  6746  001444  0E00               	movlw	0
  6747  001446                     i1u361_26:
  6748  001446  6EDF               	movwf	indf2,c
  6749                           
  6750                           ; BSR set to: 15
  6751                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  6752  001448  EE20 F00D          	lfsr	2,13
  6753  00144C  5001               	movf	CANreceiveMessage@msg,w,c
  6754  00144E  26D9               	addwf	fsr2l,f,c
  6755  001450  5002               	movf	CANreceiveMessage@msg+1,w,c
  6756  001452  22DA               	addwfc	fsr2h,f,c
  6757  001454  010F               	movlb	15	; () banked
  6758  001456  5155               	movf	85,w,b	;volatile
  6759  001458  0B0F               	andlw	15
  6760  00145A  6EDF               	movwf	indf2,c
  6761                           
  6762                           ; BSR set to: 15
  6763                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  6764  00145C  EE20 F00C          	lfsr	2,12
  6765  001460  5001               	movf	CANreceiveMessage@msg,w,c
  6766  001462  26D9               	addwf	fsr2l,f,c
  6767  001464  5002               	movf	CANreceiveMessage@msg+1,w,c
  6768  001466  22DA               	addwfc	fsr2h,f,c
  6769  001468  010F               	movlb	15	; () banked
  6770  00146A  A752               	btfss	82,3,b	;volatile
  6771  00146C  D002               	goto	i1u362_20
  6772  00146E  0E01               	movlw	1
  6773  001470  D001               	goto	i1u362_26
  6774  001472                     i1u362_20:
  6775  001472  0E00               	movlw	0
  6776  001474                     i1u362_26:
  6777  001474  6EDF               	movwf	indf2,c
  6778                           
  6779                           ; BSR set to: 15
  6780                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  6781  001476  010F               	movlb	15	; () banked
  6782  001478  B752               	btfsc	82,3,b	;volatile
  6783  00147A  D044               	goto	i1l3273
  6784                           
  6785                           ; BSR set to: 15
  6786                           ;inc\CANlib.h: 559: {
  6787                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  6788  00147C  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  6789  001480  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6790  001482  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6791  001484  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6792  001486  0E03               	movlw	3
  6793  001488                     i1u364_25:
  6794  001488  90D8               	bcf	status,0,c
  6795  00148A  3603               	rlcf	??_CANreceiveMessage,f,c
  6796  00148C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  6797  00148E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  6798  001490  3606               	rlcf	??_CANreceiveMessage+3,f,c
  6799  001492  2EE8               	decfsz	wreg,f,c
  6800  001494  D7F9               	goto	i1u364_25
  6801  001496  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6802  00149A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6803  00149E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  6804  0014A2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6805  0014A6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6806  0014AA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6807                           
  6808                           ; BSR set to: 15
  6809                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  6810  0014AE  010F               	movlb	15	; () banked
  6811  0014B0  3952               	swapf	82,w,b	;volatile
  6812  0014B2  42E8               	rrncf	wreg,f,c
  6813  0014B4  0B07               	andlw	7
  6814  0014B6  0B07               	andlw	7
  6815  0014B8  6E0C               	movwf	CANreceiveMessage@tamp,c
  6816                           
  6817                           ; BSR set to: 15
  6818                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  6819  0014BA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6820  0014BE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6821  0014C2  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  6822  0014C6  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  6823  0014CA  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  6824  0014CE  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  6825  0014D2  500C               	movf	CANreceiveMessage@tamp,w,c
  6826  0014D4  2403               	addwf	??_CANreceiveMessage,w,c
  6827  0014D6  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  6828  0014D8  0E00               	movlw	0
  6829  0014DA  2004               	addwfc	??_CANreceiveMessage+1,w,c
  6830  0014DC  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  6831  0014DE  0E00               	movlw	0
  6832  0014E0  2005               	addwfc	??_CANreceiveMessage+2,w,c
  6833  0014E2  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  6834  0014E4  0E00               	movlw	0
  6835  0014E6  2006               	addwfc	??_CANreceiveMessage+3,w,c
  6836  0014E8  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  6837  0014EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6838  0014EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6839  0014F2  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  6840  0014F6  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  6841  0014FA  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  6842  0014FE  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  6843                           
  6844                           ;inc\CANlib.h: 563: }
  6845  001502  D08D               	goto	i1l3299
  6846  001504                     i1l3273:
  6847                           
  6848                           ; BSR set to: 15
  6849                           ;inc\CANlib.h: 564: else
  6850                           ;inc\CANlib.h: 565: {
  6851                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  6852  001504  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  6853  001508  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6854  00150A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6855  00150C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6856  00150E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6857  001512  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6858  001516  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  6859  00151A  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  6860  00151E  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  6861  001522  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  6862                           
  6863                           ; BSR set to: 15
  6864                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  6865  001526  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  6866  00152A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6867  00152C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6868  00152E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6869  001530  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  6870  001534  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  6871  001538  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  6872  00153C  6A03               	clrf	??_CANreceiveMessage,c
  6873  00153E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6874  001542  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6875  001546  5003               	movf	??_CANreceiveMessage,w,c
  6876  001548  26DE               	addwf	postinc2,f,c
  6877  00154A  5004               	movf	??_CANreceiveMessage+1,w,c
  6878  00154C  22DE               	addwfc	postinc2,f,c
  6879  00154E  5005               	movf	??_CANreceiveMessage+2,w,c
  6880  001550  22DE               	addwfc	postinc2,f,c
  6881  001552  5006               	movf	??_CANreceiveMessage+3,w,c
  6882  001554  22DE               	addwfc	postinc2,f,c
  6883                           
  6884                           ; BSR set to: 15
  6885                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  6886  001556  010F               	movlb	15	; () banked
  6887  001558  A152               	btfss	82,0,b	;volatile
  6888  00155A  D00C               	goto	i1l3281
  6889                           
  6890                           ; BSR set to: 15
  6891                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  6892  00155C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6893  001560  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6894  001564  0E00               	movlw	0
  6895  001566  12DE               	iorwf	postinc2,f,c
  6896  001568  0E00               	movlw	0
  6897  00156A  12DE               	iorwf	postinc2,f,c
  6898  00156C  0E01               	movlw	1
  6899  00156E  12DE               	iorwf	postinc2,f,c
  6900  001570  0E00               	movlw	0
  6901  001572  12DE               	iorwf	postinc2,f,c
  6902  001574                     i1l3281:
  6903                           
  6904                           ; BSR set to: 15
  6905                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  6906  001574  010F               	movlb	15	; () banked
  6907  001576  A352               	btfss	82,1,b	;volatile
  6908  001578  D00C               	goto	i1l3285
  6909                           
  6910                           ; BSR set to: 15
  6911                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  6912  00157A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6913  00157E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6914  001582  0E00               	movlw	0
  6915  001584  12DE               	iorwf	postinc2,f,c
  6916  001586  0E00               	movlw	0
  6917  001588  12DE               	iorwf	postinc2,f,c
  6918  00158A  0E02               	movlw	2
  6919  00158C  12DE               	iorwf	postinc2,f,c
  6920  00158E  0E00               	movlw	0
  6921  001590  12DE               	iorwf	postinc2,f,c
  6922  001592                     i1l3285:
  6923                           
  6924                           ; BSR set to: 15
  6925                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  6926  001592  010F               	movlb	15	; () banked
  6927  001594  AB52               	btfss	82,5,b	;volatile
  6928  001596  D00C               	goto	i1l3289
  6929                           
  6930                           ; BSR set to: 15
  6931                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  6932  001598  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6933  00159C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6934  0015A0  0E00               	movlw	0
  6935  0015A2  12DE               	iorwf	postinc2,f,c
  6936  0015A4  0E00               	movlw	0
  6937  0015A6  12DE               	iorwf	postinc2,f,c
  6938  0015A8  0E04               	movlw	4
  6939  0015AA  12DE               	iorwf	postinc2,f,c
  6940  0015AC  0E00               	movlw	0
  6941  0015AE  12DE               	iorwf	postinc2,f,c
  6942  0015B0                     i1l3289:
  6943                           
  6944                           ; BSR set to: 15
  6945                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  6946  0015B0  010F               	movlb	15	; () banked
  6947  0015B2  AD52               	btfss	82,6,b	;volatile
  6948  0015B4  D00C               	goto	i1l3293
  6949                           
  6950                           ; BSR set to: 15
  6951                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  6952  0015B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6953  0015BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6954  0015BE  0E00               	movlw	0
  6955  0015C0  12DE               	iorwf	postinc2,f,c
  6956  0015C2  0E00               	movlw	0
  6957  0015C4  12DE               	iorwf	postinc2,f,c
  6958  0015C6  0E08               	movlw	8
  6959  0015C8  12DE               	iorwf	postinc2,f,c
  6960  0015CA  0E00               	movlw	0
  6961  0015CC  12DE               	iorwf	postinc2,f,c
  6962  0015CE                     i1l3293:
  6963                           
  6964                           ; BSR set to: 15
  6965                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  6966  0015CE  010F               	movlb	15	; () banked
  6967  0015D0  AF52               	btfss	82,7,b	;volatile
  6968  0015D2  D00C               	goto	i1l3297
  6969                           
  6970                           ; BSR set to: 15
  6971                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  6972  0015D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  6973  0015D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  6974  0015DC  0E00               	movlw	0
  6975  0015DE  12DE               	iorwf	postinc2,f,c
  6976  0015E0  0E00               	movlw	0
  6977  0015E2  12DE               	iorwf	postinc2,f,c
  6978  0015E4  0E10               	movlw	16
  6979  0015E6  12DE               	iorwf	postinc2,f,c
  6980  0015E8  0E00               	movlw	0
  6981  0015EA  12DE               	iorwf	postinc2,f,c
  6982  0015EC                     i1l3297:
  6983                           
  6984                           ; BSR set to: 15
  6985                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  6986  0015EC  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  6987  0015F0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  6988  0015F2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  6989  0015F4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  6990  0015F6  0E15               	movlw	21
  6991  0015F8                     i1u370_25:
  6992  0015F8  90D8               	bcf	status,0,c
  6993  0015FA  3603               	rlcf	??_CANreceiveMessage,f,c
  6994  0015FC  3604               	rlcf	??_CANreceiveMessage+1,f,c
  6995  0015FE  3605               	rlcf	??_CANreceiveMessage+2,f,c
  6996  001600  3606               	rlcf	??_CANreceiveMessage+3,f,c
  6997  001602  2EE8               	decfsz	wreg,f,c
  6998  001604  D7F9               	goto	i1u370_25
  6999  001606  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7000  00160A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7001  00160E  5003               	movf	??_CANreceiveMessage,w,c
  7002  001610  12DE               	iorwf	postinc2,f,c
  7003  001612  5004               	movf	??_CANreceiveMessage+1,w,c
  7004  001614  12DE               	iorwf	postinc2,f,c
  7005  001616  5005               	movf	??_CANreceiveMessage+2,w,c
  7006  001618  12DE               	iorwf	postinc2,f,c
  7007  00161A  5006               	movf	??_CANreceiveMessage+3,w,c
  7008  00161C  12DE               	iorwf	postinc2,f,c
  7009  00161E                     i1l3299:
  7010                           
  7011                           ; BSR set to: 15
  7012                           ;inc\CANlib.h: 581: }
  7013                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7014  00161E  010F               	movlb	15	; () banked
  7015  001620  9F50               	bcf	80,7,b	;volatile
  7016                           
  7017                           ; BSR set to: 15
  7018                           ;inc\CANlib.h: 584: return (error);
  7019                           ;	Return value of _CANreceiveMessage is never used
  7020  001622  0012               	return	
  7021  001624                     i1l404:
  7022                           
  7023                           ; BSR set to: 15
  7024                           ;inc\CANlib.h: 585: }
  7025                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7026  001624  AE60               	btfss	3936,7,c	;volatile
  7027  001626  0012               	return	
  7028                           
  7029                           ; BSR set to: 15
  7030                           ;inc\CANlib.h: 588: {
  7031                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7032  001628  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7033  00162C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7034  001630  6ADE               	clrf	postinc2,c
  7035  001632  6ADE               	clrf	postinc2,c
  7036  001634  6ADE               	clrf	postinc2,c
  7037  001636  6ADD               	clrf	postdec2,c
  7038                           
  7039                           ; BSR set to: 15
  7040                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7041  001638  EE20 F004          	lfsr	2,4
  7042  00163C  5001               	movf	CANreceiveMessage@msg,w,c
  7043  00163E  26D9               	addwf	fsr2l,f,c
  7044  001640  5002               	movf	CANreceiveMessage@msg+1,w,c
  7045  001642  22DA               	addwfc	fsr2h,f,c
  7046  001644  CF66 FFDF          	movff	3942,indf2	;volatile
  7047                           
  7048                           ; BSR set to: 15
  7049                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7050  001648  EE20 F005          	lfsr	2,5
  7051  00164C  5001               	movf	CANreceiveMessage@msg,w,c
  7052  00164E  26D9               	addwf	fsr2l,f,c
  7053  001650  5002               	movf	CANreceiveMessage@msg+1,w,c
  7054  001652  22DA               	addwfc	fsr2h,f,c
  7055  001654  CF67 FFDF          	movff	3943,indf2	;volatile
  7056                           
  7057                           ; BSR set to: 15
  7058                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7059  001658  EE20 F006          	lfsr	2,6
  7060  00165C  5001               	movf	CANreceiveMessage@msg,w,c
  7061  00165E  26D9               	addwf	fsr2l,f,c
  7062  001660  5002               	movf	CANreceiveMessage@msg+1,w,c
  7063  001662  22DA               	addwfc	fsr2h,f,c
  7064  001664  CF68 FFDF          	movff	3944,indf2	;volatile
  7065                           
  7066                           ; BSR set to: 15
  7067                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7068  001668  EE20 F007          	lfsr	2,7
  7069  00166C  5001               	movf	CANreceiveMessage@msg,w,c
  7070  00166E  26D9               	addwf	fsr2l,f,c
  7071  001670  5002               	movf	CANreceiveMessage@msg+1,w,c
  7072  001672  22DA               	addwfc	fsr2h,f,c
  7073  001674  CF69 FFDF          	movff	3945,indf2	;volatile
  7074                           
  7075                           ; BSR set to: 15
  7076                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7077  001678  EE20 F008          	lfsr	2,8
  7078  00167C  5001               	movf	CANreceiveMessage@msg,w,c
  7079  00167E  26D9               	addwf	fsr2l,f,c
  7080  001680  5002               	movf	CANreceiveMessage@msg+1,w,c
  7081  001682  22DA               	addwfc	fsr2h,f,c
  7082  001684  CF6A FFDF          	movff	3946,indf2	;volatile
  7083                           
  7084                           ; BSR set to: 15
  7085                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7086  001688  EE20 F009          	lfsr	2,9
  7087  00168C  5001               	movf	CANreceiveMessage@msg,w,c
  7088  00168E  26D9               	addwf	fsr2l,f,c
  7089  001690  5002               	movf	CANreceiveMessage@msg+1,w,c
  7090  001692  22DA               	addwfc	fsr2h,f,c
  7091  001694  CF6B FFDF          	movff	3947,indf2	;volatile
  7092                           
  7093                           ; BSR set to: 15
  7094                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7095  001698  EE20 F00A          	lfsr	2,10
  7096  00169C  5001               	movf	CANreceiveMessage@msg,w,c
  7097  00169E  26D9               	addwf	fsr2l,f,c
  7098  0016A0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7099  0016A2  22DA               	addwfc	fsr2h,f,c
  7100  0016A4  CF6C FFDF          	movff	3948,indf2	;volatile
  7101                           
  7102                           ; BSR set to: 15
  7103                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7104  0016A8  EE20 F00B          	lfsr	2,11
  7105  0016AC  5001               	movf	CANreceiveMessage@msg,w,c
  7106  0016AE  26D9               	addwf	fsr2l,f,c
  7107  0016B0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7108  0016B2  22DA               	addwfc	fsr2h,f,c
  7109  0016B4  CF6D FFDF          	movff	3949,indf2	;volatile
  7110                           
  7111                           ; BSR set to: 15
  7112                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7113  0016B8  EE20 F00E          	lfsr	2,14
  7114  0016BC  5001               	movf	CANreceiveMessage@msg,w,c
  7115  0016BE  26D9               	addwf	fsr2l,f,c
  7116  0016C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7117  0016C2  22DA               	addwfc	fsr2h,f,c
  7118  0016C4  AC65               	btfss	3941,6,c	;volatile
  7119  0016C6  D002               	goto	i1u372_20
  7120  0016C8  0E01               	movlw	1
  7121  0016CA  D001               	goto	i1u372_26
  7122  0016CC                     i1u372_20:
  7123  0016CC  0E00               	movlw	0
  7124  0016CE                     i1u372_26:
  7125  0016CE  6EDF               	movwf	indf2,c
  7126                           
  7127                           ; BSR set to: 15
  7128                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7129  0016D0  EE20 F00D          	lfsr	2,13
  7130  0016D4  5001               	movf	CANreceiveMessage@msg,w,c
  7131  0016D6  26D9               	addwf	fsr2l,f,c
  7132  0016D8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7133  0016DA  22DA               	addwfc	fsr2h,f,c
  7134  0016DC  5065               	movf	3941,w,c	;volatile
  7135  0016DE  0B0F               	andlw	15
  7136  0016E0  6EDF               	movwf	indf2,c
  7137                           
  7138                           ; BSR set to: 15
  7139                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7140  0016E2  EE20 F00C          	lfsr	2,12
  7141  0016E6  5001               	movf	CANreceiveMessage@msg,w,c
  7142  0016E8  26D9               	addwf	fsr2l,f,c
  7143  0016EA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7144  0016EC  22DA               	addwfc	fsr2h,f,c
  7145  0016EE  A662               	btfss	3938,3,c	;volatile
  7146  0016F0  D002               	goto	i1u373_20
  7147  0016F2  0E01               	movlw	1
  7148  0016F4  D001               	goto	i1u373_26
  7149  0016F6                     i1u373_20:
  7150  0016F6  0E00               	movlw	0
  7151  0016F8                     i1u373_26:
  7152  0016F8  6EDF               	movwf	indf2,c
  7153                           
  7154                           ; BSR set to: 15
  7155                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7156  0016FA  B662               	btfsc	3938,3,c	;volatile
  7157  0016FC  D043               	goto	i1l3335
  7158                           
  7159                           ; BSR set to: 15
  7160                           ;inc\CANlib.h: 606: {
  7161                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7162  0016FE  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7163  001702  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7164  001704  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7165  001706  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7166  001708  0E03               	movlw	3
  7167  00170A                     i1u375_25:
  7168  00170A  90D8               	bcf	status,0,c
  7169  00170C  3603               	rlcf	??_CANreceiveMessage,f,c
  7170  00170E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7171  001710  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7172  001712  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7173  001714  2EE8               	decfsz	wreg,f,c
  7174  001716  D7F9               	goto	i1u375_25
  7175  001718  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7176  00171C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7177  001720  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7178  001724  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7179  001728  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7180  00172C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7181                           
  7182                           ; BSR set to: 15
  7183                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7184  001730  3862               	swapf	3938,w,c	;volatile
  7185  001732  42E8               	rrncf	wreg,f,c
  7186  001734  0B07               	andlw	7
  7187  001736  0B07               	andlw	7
  7188  001738  6E0C               	movwf	CANreceiveMessage@tamp,c
  7189                           
  7190                           ; BSR set to: 15
  7191                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7192  00173A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7193  00173E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7194  001742  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7195  001746  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7196  00174A  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7197  00174E  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7198  001752  500C               	movf	CANreceiveMessage@tamp,w,c
  7199  001754  2403               	addwf	??_CANreceiveMessage,w,c
  7200  001756  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7201  001758  0E00               	movlw	0
  7202  00175A  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7203  00175C  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7204  00175E  0E00               	movlw	0
  7205  001760  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7206  001762  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7207  001764  0E00               	movlw	0
  7208  001766  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7209  001768  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7210  00176A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7211  00176E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7212  001772  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7213  001776  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7214  00177A  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7215  00177E  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7216                           
  7217                           ;inc\CANlib.h: 610: }
  7218  001782  D088               	goto	i1l3361
  7219  001784                     i1l3335:
  7220                           
  7221                           ; BSR set to: 15
  7222                           ;inc\CANlib.h: 611: else
  7223                           ;inc\CANlib.h: 612: {
  7224                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7225  001784  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7226  001788  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7227  00178A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7228  00178C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7229  00178E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7230  001792  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7231  001796  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7232  00179A  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7233  00179E  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7234  0017A2  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7235                           
  7236                           ; BSR set to: 15
  7237                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7238  0017A6  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7239  0017AA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7240  0017AC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7241  0017AE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7242  0017B0  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7243  0017B4  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7244  0017B8  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7245  0017BC  6A03               	clrf	??_CANreceiveMessage,c
  7246  0017BE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7247  0017C2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7248  0017C6  5003               	movf	??_CANreceiveMessage,w,c
  7249  0017C8  26DE               	addwf	postinc2,f,c
  7250  0017CA  5004               	movf	??_CANreceiveMessage+1,w,c
  7251  0017CC  22DE               	addwfc	postinc2,f,c
  7252  0017CE  5005               	movf	??_CANreceiveMessage+2,w,c
  7253  0017D0  22DE               	addwfc	postinc2,f,c
  7254  0017D2  5006               	movf	??_CANreceiveMessage+3,w,c
  7255  0017D4  22DE               	addwfc	postinc2,f,c
  7256                           
  7257                           ; BSR set to: 15
  7258                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7259  0017D6  A062               	btfss	3938,0,c	;volatile
  7260  0017D8  D00C               	goto	i1l3343
  7261                           
  7262                           ; BSR set to: 15
  7263                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7264  0017DA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7265  0017DE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7266  0017E2  0E00               	movlw	0
  7267  0017E4  12DE               	iorwf	postinc2,f,c
  7268  0017E6  0E00               	movlw	0
  7269  0017E8  12DE               	iorwf	postinc2,f,c
  7270  0017EA  0E01               	movlw	1
  7271  0017EC  12DE               	iorwf	postinc2,f,c
  7272  0017EE  0E00               	movlw	0
  7273  0017F0  12DE               	iorwf	postinc2,f,c
  7274  0017F2                     i1l3343:
  7275                           
  7276                           ; BSR set to: 15
  7277                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7278  0017F2  A262               	btfss	3938,1,c	;volatile
  7279  0017F4  D00C               	goto	i1l3347
  7280                           
  7281                           ; BSR set to: 15
  7282                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7283  0017F6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7284  0017FA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7285  0017FE  0E00               	movlw	0
  7286  001800  12DE               	iorwf	postinc2,f,c
  7287  001802  0E00               	movlw	0
  7288  001804  12DE               	iorwf	postinc2,f,c
  7289  001806  0E02               	movlw	2
  7290  001808  12DE               	iorwf	postinc2,f,c
  7291  00180A  0E00               	movlw	0
  7292  00180C  12DE               	iorwf	postinc2,f,c
  7293  00180E                     i1l3347:
  7294                           
  7295                           ; BSR set to: 15
  7296                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7297  00180E  AA62               	btfss	3938,5,c	;volatile
  7298  001810  D00C               	goto	i1l3351
  7299                           
  7300                           ; BSR set to: 15
  7301                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  7302  001812  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7303  001816  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7304  00181A  0E00               	movlw	0
  7305  00181C  12DE               	iorwf	postinc2,f,c
  7306  00181E  0E00               	movlw	0
  7307  001820  12DE               	iorwf	postinc2,f,c
  7308  001822  0E04               	movlw	4
  7309  001824  12DE               	iorwf	postinc2,f,c
  7310  001826  0E00               	movlw	0
  7311  001828  12DE               	iorwf	postinc2,f,c
  7312  00182A                     i1l3351:
  7313                           
  7314                           ; BSR set to: 15
  7315                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  7316  00182A  AC62               	btfss	3938,6,c	;volatile
  7317  00182C  D00C               	goto	i1l3355
  7318                           
  7319                           ; BSR set to: 15
  7320                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  7321  00182E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7322  001832  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7323  001836  0E00               	movlw	0
  7324  001838  12DE               	iorwf	postinc2,f,c
  7325  00183A  0E00               	movlw	0
  7326  00183C  12DE               	iorwf	postinc2,f,c
  7327  00183E  0E08               	movlw	8
  7328  001840  12DE               	iorwf	postinc2,f,c
  7329  001842  0E00               	movlw	0
  7330  001844  12DE               	iorwf	postinc2,f,c
  7331  001846                     i1l3355:
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  7335  001846  AE62               	btfss	3938,7,c	;volatile
  7336  001848  D00C               	goto	i1l3359
  7337                           
  7338                           ; BSR set to: 15
  7339                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  7340  00184A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7341  00184E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7342  001852  0E00               	movlw	0
  7343  001854  12DE               	iorwf	postinc2,f,c
  7344  001856  0E00               	movlw	0
  7345  001858  12DE               	iorwf	postinc2,f,c
  7346  00185A  0E10               	movlw	16
  7347  00185C  12DE               	iorwf	postinc2,f,c
  7348  00185E  0E00               	movlw	0
  7349  001860  12DE               	iorwf	postinc2,f,c
  7350  001862                     i1l3359:
  7351                           
  7352                           ; BSR set to: 15
  7353                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7354  001862  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7355  001866  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7356  001868  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7357  00186A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7358  00186C  0E15               	movlw	21
  7359  00186E                     i1u381_25:
  7360  00186E  90D8               	bcf	status,0,c
  7361  001870  3603               	rlcf	??_CANreceiveMessage,f,c
  7362  001872  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7363  001874  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7364  001876  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7365  001878  2EE8               	decfsz	wreg,f,c
  7366  00187A  D7F9               	goto	i1u381_25
  7367  00187C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7368  001880  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7369  001884  5003               	movf	??_CANreceiveMessage,w,c
  7370  001886  12DE               	iorwf	postinc2,f,c
  7371  001888  5004               	movf	??_CANreceiveMessage+1,w,c
  7372  00188A  12DE               	iorwf	postinc2,f,c
  7373  00188C  5005               	movf	??_CANreceiveMessage+2,w,c
  7374  00188E  12DE               	iorwf	postinc2,f,c
  7375  001890  5006               	movf	??_CANreceiveMessage+3,w,c
  7376  001892  12DE               	iorwf	postinc2,f,c
  7377  001894                     i1l3361:
  7378                           
  7379                           ; BSR set to: 15
  7380                           ;inc\CANlib.h: 629: }
  7381                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  7382  001894  9E60               	bcf	3936,7,c	;volatile
  7383                           
  7384                           ; BSR set to: 15
  7385                           ;inc\CANlib.h: 632: return (error);
  7386                           ;	Return value of _CANreceiveMessage is never used
  7387  001896  0012               	return	
  7388  001898                     __end_of_CANreceiveMessage:
  7389                           	opt stack 0
  7390                           pclatu	equ	0xFFB
  7391                           pclath	equ	0xFFA
  7392                           tblptru	equ	0xFF8
  7393                           tblptrh	equ	0xFF7
  7394                           tblptrl	equ	0xFF6
  7395                           tablat	equ	0xFF5
  7396                           prodh	equ	0xFF4
  7397                           prodl	equ	0xFF3
  7398                           intcon	equ	0xFF2
  7399                           intcon2	equ	0xFF1
  7400                           postinc0	equ	0xFEE
  7401                           fsr0h	equ	0xFEA
  7402                           fsr0l	equ	0xFE9
  7403                           wreg	equ	0xFE8
  7404                           postdec1	equ	0xFE5
  7405                           fsr1h	equ	0xFE2
  7406                           fsr1l	equ	0xFE1
  7407                           bsr	equ	0xFE0
  7408                           indf2	equ	0xFDF
  7409                           postinc2	equ	0xFDE
  7410                           postdec2	equ	0xFDD
  7411                           fsr2h	equ	0xFDA
  7412                           fsr2l	equ	0xFD9
  7413                           status	equ	0xFD8
  7414                           
  7415 ;; *************** function _CANisRxReady *****************
  7416 ;; Defined at:
  7417 ;;		line 1163 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;		None
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      unsigned char 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7431 ;;      Params:         0       0       0       0
  7432 ;;      Locals:         1       0       0       0
  7433 ;;      Temps:          0       0       0       0
  7434 ;;      Totals:         1       0       0       0
  7435 ;;Total ram usage:        1 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    2
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_ISR_Bassa
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text17
  7446  00243A                     __ptext17:
  7447                           	opt stack 0
  7448  00243A                     _CANisRxReady:
  7449                           	opt stack 24
  7450                           
  7451                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  7452                           
  7453                           ; BSR set to: 15
  7454                           ;incstack = 0
  7455  00243A  0E01               	movlw	1
  7456  00243C  6E01               	movwf	_CANisRxReady$2912,c
  7457  00243E  BE60               	btfsc	3936,7,c	;volatile
  7458  002440  D005               	goto	i1l555
  7459  002442  010F               	movlb	15	; () banked
  7460  002444  BF50               	btfsc	80,7,b	;volatile
  7461  002446  D002               	goto	i1l555
  7462                           
  7463                           ; BSR set to: 15
  7464  002448  0E00               	movlw	0
  7465  00244A  6E01               	movwf	_CANisRxReady$2912,c
  7466  00244C                     i1l555:
  7467  00244C  5001               	movf	_CANisRxReady$2912,w,c
  7468  00244E  0012               	return	
  7469  002450                     __end_of_CANisRxReady:
  7470                           	opt stack 0
  7471                           pclatu	equ	0xFFB
  7472                           pclath	equ	0xFFA
  7473                           tblptru	equ	0xFF8
  7474                           tblptrh	equ	0xFF7
  7475                           tblptrl	equ	0xFF6
  7476                           tablat	equ	0xFF5
  7477                           prodh	equ	0xFF4
  7478                           prodl	equ	0xFF3
  7479                           intcon	equ	0xFF2
  7480                           intcon2	equ	0xFF1
  7481                           postinc0	equ	0xFEE
  7482                           fsr0h	equ	0xFEA
  7483                           fsr0l	equ	0xFE9
  7484                           wreg	equ	0xFE8
  7485                           postdec1	equ	0xFE5
  7486                           fsr1h	equ	0xFE2
  7487                           fsr1l	equ	0xFE1
  7488                           bsr	equ	0xFE0
  7489                           indf2	equ	0xFDF
  7490                           postinc2	equ	0xFDE
  7491                           postdec2	equ	0xFDD
  7492                           fsr2h	equ	0xFDA
  7493                           fsr2l	equ	0xFD9
  7494                           status	equ	0xFD8
  7495                           
  7496 ;; *************** function _ISR_Alta *****************
  7497 ;; Defined at:
  7498 ;;		line 94 in file "ABS_Code.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;		None
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;		None
  7503 ;; Return value:  Size  Location     Type
  7504 ;;		None               void
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7512 ;;      Params:         0       0       0       0
  7513 ;;      Locals:         0       0       0       0
  7514 ;;      Temps:          0      22       0       0
  7515 ;;      Totals:         0      22       0       0
  7516 ;;Total ram usage:       22 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    1
  7519 ;; This function calls:
  7520 ;;		_WriteTimer0
  7521 ;;		i2___awdiv
  7522 ;;		i2___wmul
  7523 ;; This function is called by:
  7524 ;;		Interrupt level 2
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	intcode
  7529  000008                     __pintcode:
  7530                           	opt stack 0
  7531  000008                     _ISR_Alta:
  7532                           	opt stack 24
  7533                           
  7534                           ;incstack = 0
  7535  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7536  00000A  CFFA F06C          	movff	pclath,??_ISR_Alta+8
  7537  00000E  CFFB F06D          	movff	pclatu,??_ISR_Alta+9
  7538  000012  ED1B  F00E         	call	int_func,f	;refresh shadow registers
  7539                           pclatu	equ	0xFFB
  7540                           pclath	equ	0xFFA
  7541                           tblptru	equ	0xFF8
  7542                           tblptrh	equ	0xFF7
  7543                           tblptrl	equ	0xFF6
  7544                           tablat	equ	0xFF5
  7545                           prodh	equ	0xFF4
  7546                           prodl	equ	0xFF3
  7547                           intcon	equ	0xFF2
  7548                           intcon2	equ	0xFF1
  7549                           postinc0	equ	0xFEE
  7550                           fsr0h	equ	0xFEA
  7551                           fsr0l	equ	0xFE9
  7552                           wreg	equ	0xFE8
  7553                           postdec1	equ	0xFE5
  7554                           fsr1h	equ	0xFE2
  7555                           fsr1l	equ	0xFE1
  7556                           bsr	equ	0xFE0
  7557                           indf2	equ	0xFDF
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           fsr2h	equ	0xFDA
  7561                           fsr2l	equ	0xFD9
  7562                           status	equ	0xFD8
  7563                           
  7564                           	psect	intcode_body
  7565  001C36                     __pintcode_body:
  7566                           	opt stack 24
  7567  001C36                     int_func:
  7568                           	opt stack 24
  7569  001C36  0006               	pop		; remove dummy address from shadow register refresh
  7570  001C38  CFE9 F06E          	movff	fsr0l,??_ISR_Alta+10
  7571  001C3C  CFEA F06F          	movff	fsr0h,??_ISR_Alta+11
  7572  001C40  CFE1 F070          	movff	fsr1l,??_ISR_Alta+12
  7573  001C44  CFE2 F071          	movff	fsr1h,??_ISR_Alta+13
  7574  001C48  CFD9 F072          	movff	fsr2l,??_ISR_Alta+14
  7575  001C4C  CFDA F073          	movff	fsr2h,??_ISR_Alta+15
  7576  001C50  CFF3 F074          	movff	prodl,??_ISR_Alta+16
  7577  001C54  CFF4 F075          	movff	prodh,??_ISR_Alta+17
  7578  001C58  CFF6 F076          	movff	tblptrl,??_ISR_Alta+18
  7579  001C5C  CFF7 F077          	movff	tblptrh,??_ISR_Alta+19
  7580  001C60  CFF8 F078          	movff	tblptru,??_ISR_Alta+20
  7581  001C64  CFF5 F079          	movff	tablat,??_ISR_Alta+21
  7582                           
  7583                           ;ABS_Code.c: 95: if (INTCONbits.TMR0IF == 1) {
  7584  001C68  A4F2               	btfss	intcon,2,c	;volatile
  7585  001C6A  D0AD               	goto	i2l611
  7586                           
  7587                           ;ABS_Code.c: 96: PORTCbits.RC0 = ~PORTCbits.RC0;
  7588  001C6C  A082               	btfss	3970,0,c	;volatile
  7589  001C6E  D002               	goto	i2u422_40
  7590  001C70  0E01               	movlw	1
  7591  001C72  D001               	goto	i2u422_46
  7592  001C74                     i2u422_40:
  7593  001C74  0E00               	movlw	0
  7594  001C76                     i2u422_46:
  7595  001C76  0AFF               	xorlw	255
  7596  001C78  0100               	movlb	0	; () banked
  7597  001C7A  6F64               	movwf	??_ISR_Alta& (0+255),b
  7598  001C7C  5082               	movf	3970,w,c	;volatile
  7599  001C7E  0100               	movlb	0	; () banked
  7600  001C80  1964               	xorwf	??_ISR_Alta& (0+255),w,b
  7601  001C82  0BFE               	andlw	-2
  7602  001C84  1964               	xorwf	??_ISR_Alta& (0+255),w,b
  7603  001C86  6E82               	movwf	3970,c	;volatile
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;ABS_Code.c: 97: T0CONbits.TMR0ON = 0;
  7607  001C88  9ED5               	bcf	4053,7,c	;volatile
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;ABS_Code.c: 98: if (PORTCbits.RC0 == 1) {
  7611  001C8A  A082               	btfss	3970,0,c	;volatile
  7612  001C8C  D094               	goto	i2l3695
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;ABS_Code.c: 99: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  7616  001C8E  0E40               	movlw	64
  7617  001C90  0100               	movlb	0	; () banked
  7618  001C92  6F64               	movwf	??_ISR_Alta& (0+255),b
  7619  001C94  0E06               	movlw	6
  7620  001C96  0100               	movlb	0	; () banked
  7621  001C98  6F65               	movwf	(??_ISR_Alta+1)& (0+255),b
  7622  001C9A  C03F  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  7623  001C9E  6A1F               	clrf	i2___wmul@multiplier+1,c
  7624  001CA0  0E05               	movlw	5
  7625  001CA2  6E21               	movwf	i2___wmul@multiplicand+1,c
  7626  001CA4  0E78               	movlw	120
  7627  001CA6  6E20               	movwf	i2___wmul@multiplicand,c
  7628  001CA8  ECED  F011         	call	i2___wmul	;wreg free
  7629  001CAC  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  7630  001CB0  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  7631  001CB4  0E00               	movlw	0
  7632  001CB6  6E27               	movwf	i2___awdiv@divisor+1,c
  7633  001CB8  0EB4               	movlw	180
  7634  001CBA  6E26               	movwf	i2___awdiv@divisor,c
  7635  001CBC  ECF3  F010         	call	i2___awdiv	;wreg free
  7636  001CC0  90D8               	bcf	status,0,c
  7637  001CC2  3624               	rlcf	?i2___awdiv,f,c
  7638  001CC4  3625               	rlcf	?i2___awdiv+1,f,c
  7639  001CC6  0100               	movlb	0	; () banked
  7640  001CC8  5164               	movf	??_ISR_Alta& (0+255),w,b
  7641  001CCA  2624               	addwf	?i2___awdiv,f,c
  7642  001CCC  0100               	movlb	0	; () banked
  7643  001CCE  5165               	movf	(??_ISR_Alta+1)& (0+255),w,b
  7644  001CD0  2225               	addwfc	?i2___awdiv+1,f,c
  7645  001CD2  C024  F02C         	movff	?i2___awdiv,_timer_on
  7646  001CD6  C025  F02D         	movff	?i2___awdiv+1,_timer_on+1
  7647  001CDA  0E00               	movlw	0
  7648  001CDC  BE2D               	btfsc	_timer_on+1,7,c
  7649  001CDE  0EFF               	movlw	-1
  7650  001CE0  6E2E               	movwf	_timer_on+2,c
  7651  001CE2  6E2F               	movwf	_timer_on+3,c
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;ABS_Code.c: 100: timer_off = 65536 - (40000 - timer_on);
  7655  001CE4  C02C  F064         	movff	_timer_on,??_ISR_Alta
  7656  001CE8  C02D  F065         	movff	_timer_on+1,??_ISR_Alta+1
  7657  001CEC  C02E  F066         	movff	_timer_on+2,??_ISR_Alta+2
  7658  001CF0  C02F  F067         	movff	_timer_on+3,??_ISR_Alta+3
  7659  001CF4  0100               	movlb	0	; () banked
  7660  001CF6  1F64               	comf	??_ISR_Alta& (0+255),f,b
  7661  001CF8  1F65               	comf	(??_ISR_Alta+1)& (0+255),f,b
  7662  001CFA  1F66               	comf	(??_ISR_Alta+2)& (0+255),f,b
  7663  001CFC  1F67               	comf	(??_ISR_Alta+3)& (0+255),f,b
  7664  001CFE  2B64               	incf	??_ISR_Alta& (0+255),f,b
  7665  001D00  0E00               	movlw	0
  7666  001D02  2365               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  7667  001D04  2366               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  7668  001D06  2367               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  7669  001D08  0E40               	movlw	64
  7670  001D0A  0100               	movlb	0	; () banked
  7671  001D0C  2564               	addwf	??_ISR_Alta& (0+255),w,b
  7672  001D0E  0100               	movlb	0	; () banked
  7673  001D10  6F68               	movwf	(??_ISR_Alta+4)& (0+255),b
  7674  001D12  0E9C               	movlw	156
  7675  001D14  0100               	movlb	0	; () banked
  7676  001D16  2165               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  7677  001D18  0100               	movlb	0	; () banked
  7678  001D1A  6F69               	movwf	(??_ISR_Alta+5)& (0+255),b
  7679  001D1C  0E00               	movlw	0
  7680  001D1E  0100               	movlb	0	; () banked
  7681  001D20  2166               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  7682  001D22  0100               	movlb	0	; () banked
  7683  001D24  6F6A               	movwf	(??_ISR_Alta+6)& (0+255),b
  7684  001D26  0E00               	movlw	0
  7685  001D28  0100               	movlb	0	; () banked
  7686  001D2A  2167               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  7687  001D2C  0100               	movlb	0	; () banked
  7688  001D2E  6F6B               	movwf	(??_ISR_Alta+7)& (0+255),b
  7689  001D30  0100               	movlb	0	; () banked
  7690  001D32  1F68               	comf	(??_ISR_Alta+4)& (0+255),f,b
  7691  001D34  1F69               	comf	(??_ISR_Alta+5)& (0+255),f,b
  7692  001D36  1F6A               	comf	(??_ISR_Alta+6)& (0+255),f,b
  7693  001D38  1F6B               	comf	(??_ISR_Alta+7)& (0+255),f,b
  7694  001D3A  2B68               	incf	(??_ISR_Alta+4)& (0+255),f,b
  7695  001D3C  0E00               	movlw	0
  7696  001D3E  2369               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  7697  001D40  236A               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  7698  001D42  236B               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  7699  001D44  0E00               	movlw	0
  7700  001D46  0100               	movlb	0	; () banked
  7701  001D48  2568               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  7702  001D4A  6E28               	movwf	_timer_off,c
  7703  001D4C  0E00               	movlw	0
  7704  001D4E  0100               	movlb	0	; () banked
  7705  001D50  2169               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  7706  001D52  6E29               	movwf	_timer_off+1,c
  7707  001D54  0E01               	movlw	1
  7708  001D56  0100               	movlb	0	; () banked
  7709  001D58  216A               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  7710  001D5A  6E2A               	movwf	_timer_off+2,c
  7711  001D5C  0E00               	movlw	0
  7712  001D5E  0100               	movlb	0	; () banked
  7713  001D60  216B               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  7714  001D62  6E2B               	movwf	_timer_off+3,c
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;ABS_Code.c: 101: timer_on = 65536 - timer_on;
  7718  001D64  C02C  F064         	movff	_timer_on,??_ISR_Alta
  7719  001D68  C02D  F065         	movff	_timer_on+1,??_ISR_Alta+1
  7720  001D6C  C02E  F066         	movff	_timer_on+2,??_ISR_Alta+2
  7721  001D70  C02F  F067         	movff	_timer_on+3,??_ISR_Alta+3
  7722  001D74  0100               	movlb	0	; () banked
  7723  001D76  1F64               	comf	??_ISR_Alta& (0+255),f,b
  7724  001D78  1F65               	comf	(??_ISR_Alta+1)& (0+255),f,b
  7725  001D7A  1F66               	comf	(??_ISR_Alta+2)& (0+255),f,b
  7726  001D7C  1F67               	comf	(??_ISR_Alta+3)& (0+255),f,b
  7727  001D7E  2B64               	incf	??_ISR_Alta& (0+255),f,b
  7728  001D80  0E00               	movlw	0
  7729  001D82  2365               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  7730  001D84  2366               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  7731  001D86  2367               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  7732  001D88  0E00               	movlw	0
  7733  001D8A  0100               	movlb	0	; () banked
  7734  001D8C  2564               	addwf	??_ISR_Alta& (0+255),w,b
  7735  001D8E  6E2C               	movwf	_timer_on,c
  7736  001D90  0E00               	movlw	0
  7737  001D92  0100               	movlb	0	; () banked
  7738  001D94  2165               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  7739  001D96  6E2D               	movwf	_timer_on+1,c
  7740  001D98  0E01               	movlw	1
  7741  001D9A  0100               	movlb	0	; () banked
  7742  001D9C  2166               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  7743  001D9E  6E2E               	movwf	_timer_on+2,c
  7744  001DA0  0E00               	movlw	0
  7745  001DA2  0100               	movlb	0	; () banked
  7746  001DA4  2167               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  7747  001DA6  6E2F               	movwf	_timer_on+3,c
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;ABS_Code.c: 102: WriteTimer0(timer_on);
  7751  001DA8  C02C  F01E         	movff	_timer_on,WriteTimer0@timer0
  7752  001DAC  C02D  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1
  7753  001DB0  EC28  F012         	call	_WriteTimer0	;wreg free
  7754  001DB4  D006               	goto	i2l3697
  7755  001DB6                     i2l3695:
  7756                           
  7757                           ;ABS_Code.c: 105: WriteTimer0(timer_off);
  7758  001DB6  C028  F01E         	movff	_timer_off,WriteTimer0@timer0
  7759  001DBA  C029  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1
  7760  001DBE  EC28  F012         	call	_WriteTimer0	;wreg free
  7761  001DC2                     i2l3697:
  7762                           
  7763                           ;ABS_Code.c: 106: T0CONbits.TMR0ON = 1;
  7764  001DC2  8ED5               	bsf	4053,7,c	;volatile
  7765                           
  7766                           ;ABS_Code.c: 107: }
  7767                           ;ABS_Code.c: 108: INTCONbits.TMR0IF = 0;
  7768  001DC4  94F2               	bcf	intcon,2,c	;volatile
  7769  001DC6                     i2l611:
  7770  001DC6  C079  FFF5         	movff	??_ISR_Alta+21,tablat
  7771  001DCA  C078  FFF8         	movff	??_ISR_Alta+20,tblptru
  7772  001DCE  C077  FFF7         	movff	??_ISR_Alta+19,tblptrh
  7773  001DD2  C076  FFF6         	movff	??_ISR_Alta+18,tblptrl
  7774  001DD6  C075  FFF4         	movff	??_ISR_Alta+17,prodh
  7775  001DDA  C074  FFF3         	movff	??_ISR_Alta+16,prodl
  7776  001DDE  C073  FFDA         	movff	??_ISR_Alta+15,fsr2h
  7777  001DE2  C072  FFD9         	movff	??_ISR_Alta+14,fsr2l
  7778  001DE6  C071  FFE2         	movff	??_ISR_Alta+13,fsr1h
  7779  001DEA  C070  FFE1         	movff	??_ISR_Alta+12,fsr1l
  7780  001DEE  C06F  FFEA         	movff	??_ISR_Alta+11,fsr0h
  7781  001DF2  C06E  FFE9         	movff	??_ISR_Alta+10,fsr0l
  7782  001DF6  C06D  FFFB         	movff	??_ISR_Alta+9,pclatu
  7783  001DFA  C06C  FFFA         	movff	??_ISR_Alta+8,pclath
  7784  001DFE  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7785  001E00  0011               	retfie		f
  7786  001E02                     __end_of_ISR_Alta:
  7787                           	opt stack 0
  7788                           pclatu	equ	0xFFB
  7789                           pclath	equ	0xFFA
  7790                           tblptru	equ	0xFF8
  7791                           tblptrh	equ	0xFF7
  7792                           tblptrl	equ	0xFF6
  7793                           tablat	equ	0xFF5
  7794                           prodh	equ	0xFF4
  7795                           prodl	equ	0xFF3
  7796                           intcon	equ	0xFF2
  7797                           intcon2	equ	0xFF1
  7798                           postinc0	equ	0xFEE
  7799                           fsr0h	equ	0xFEA
  7800                           fsr0l	equ	0xFE9
  7801                           wreg	equ	0xFE8
  7802                           postdec1	equ	0xFE5
  7803                           fsr1h	equ	0xFE2
  7804                           fsr1l	equ	0xFE1
  7805                           bsr	equ	0xFE0
  7806                           indf2	equ	0xFDF
  7807                           postinc2	equ	0xFDE
  7808                           postdec2	equ	0xFDD
  7809                           fsr2h	equ	0xFDA
  7810                           fsr2l	equ	0xFD9
  7811                           status	equ	0xFD8
  7812                           
  7813 ;; *************** function i2___wmul *****************
  7814 ;; Defined at:
  7815 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  multiplier      2   29[COMRAM] unsigned int 
  7818 ;;  multiplicand    2   31[COMRAM] unsigned int 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  __wmul          2   33[COMRAM] unsigned int 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  2   29[COMRAM] unsigned int 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0, prodl, prodh
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7830 ;;      Params:         4       0       0       0
  7831 ;;      Locals:         2       0       0       0
  7832 ;;      Temps:          0       0       0       0
  7833 ;;      Totals:         6       0       0       0
  7834 ;;Total ram usage:        6 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_ISR_Alta
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text19
  7844  0023DA                     __ptext19:
  7845                           	opt stack 0
  7846  0023DA                     i2___wmul:
  7847                           	opt stack 24
  7848                           
  7849                           ;incstack = 0
  7850  0023DA  501E               	movf	i2___wmul@multiplier,w,c
  7851  0023DC  0220               	mulwf	i2___wmul@multiplicand,c
  7852  0023DE  CFF3 F022          	movff	prodl,i2___wmul@product
  7853  0023E2  CFF4 F023          	movff	prodh,i2___wmul@product+1
  7854  0023E6  501E               	movf	i2___wmul@multiplier,w,c
  7855  0023E8  0221               	mulwf	i2___wmul@multiplicand+1,c
  7856  0023EA  50F3               	movf	prodl,w,c
  7857  0023EC  2623               	addwf	i2___wmul@product+1,f,c
  7858  0023EE  501F               	movf	i2___wmul@multiplier+1,w,c
  7859  0023F0  0220               	mulwf	i2___wmul@multiplicand,c
  7860  0023F2  50F3               	movf	prodl,w,c
  7861  0023F4  2623               	addwf	i2___wmul@product+1,f,c
  7862  0023F6  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  7863  0023FA  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  7864  0023FE  0012               	return	
  7865  002400                     __end_ofi2___wmul:
  7866                           	opt stack 0
  7867                           pclatu	equ	0xFFB
  7868                           pclath	equ	0xFFA
  7869                           tblptru	equ	0xFF8
  7870                           tblptrh	equ	0xFF7
  7871                           tblptrl	equ	0xFF6
  7872                           tablat	equ	0xFF5
  7873                           prodh	equ	0xFF4
  7874                           prodl	equ	0xFF3
  7875                           intcon	equ	0xFF2
  7876                           intcon2	equ	0xFF1
  7877                           postinc0	equ	0xFEE
  7878                           fsr0h	equ	0xFEA
  7879                           fsr0l	equ	0xFE9
  7880                           wreg	equ	0xFE8
  7881                           postdec1	equ	0xFE5
  7882                           fsr1h	equ	0xFE2
  7883                           fsr1l	equ	0xFE1
  7884                           bsr	equ	0xFE0
  7885                           indf2	equ	0xFDF
  7886                           postinc2	equ	0xFDE
  7887                           postdec2	equ	0xFDD
  7888                           fsr2h	equ	0xFDA
  7889                           fsr2l	equ	0xFD9
  7890                           status	equ	0xFD8
  7891                           
  7892 ;; *************** function i2___awdiv *****************
  7893 ;; Defined at:
  7894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  dividend        2   35[COMRAM] int 
  7897 ;;  divisor         2   37[COMRAM] int 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  __awdiv         2    2[BANK0 ] int 
  7900 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  7901 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  2   35[COMRAM] int 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7911 ;;      Params:         4       0       0       0
  7912 ;;      Locals:         0       4       0       0
  7913 ;;      Temps:          0       0       0       0
  7914 ;;      Totals:         4       4       0       0
  7915 ;;Total ram usage:        8 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_ISR_Alta
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text20
  7925  0021E6                     __ptext20:
  7926                           	opt stack 0
  7927  0021E6                     i2___awdiv:
  7928                           	opt stack 24
  7929                           
  7930                           ;incstack = 0
  7931  0021E6  0E00               	movlw	0
  7932  0021E8  0100               	movlb	0	; () banked
  7933  0021EA  6F61               	movwf	i2___awdiv@sign& (0+255),b
  7934                           
  7935                           ; BSR set to: 0
  7936  0021EC  AE27               	btfss	i2___awdiv@divisor+1,7,c
  7937  0021EE  D007               	goto	i2l3641
  7938                           
  7939                           ; BSR set to: 0
  7940  0021F0  6C26               	negf	i2___awdiv@divisor,c
  7941  0021F2  1E27               	comf	i2___awdiv@divisor+1,f,c
  7942  0021F4  B0D8               	btfsc	status,0,c
  7943  0021F6  2A27               	incf	i2___awdiv@divisor+1,f,c
  7944                           
  7945                           ; BSR set to: 0
  7946  0021F8  0E01               	movlw	1
  7947  0021FA  0100               	movlb	0	; () banked
  7948  0021FC  6F61               	movwf	i2___awdiv@sign& (0+255),b
  7949  0021FE                     i2l3641:
  7950                           
  7951                           ; BSR set to: 0
  7952  0021FE  AE25               	btfss	i2___awdiv@dividend+1,7,c
  7953  002200  D007               	goto	i2l3647
  7954                           
  7955                           ; BSR set to: 0
  7956  002202  6C24               	negf	i2___awdiv@dividend,c
  7957  002204  1E25               	comf	i2___awdiv@dividend+1,f,c
  7958  002206  B0D8               	btfsc	status,0,c
  7959  002208  2A25               	incf	i2___awdiv@dividend+1,f,c
  7960                           
  7961                           ; BSR set to: 0
  7962  00220A  0E01               	movlw	1
  7963  00220C  0100               	movlb	0	; () banked
  7964  00220E  1B61               	xorwf	i2___awdiv@sign& (0+255),f,b
  7965  002210                     i2l3647:
  7966                           
  7967                           ; BSR set to: 0
  7968  002210  0E00               	movlw	0
  7969  002212  0100               	movlb	0	; () banked
  7970  002214  6F63               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  7971  002216  0E00               	movlw	0
  7972  002218  6F62               	movwf	i2___awdiv@quotient& (0+255),b
  7973                           
  7974                           ; BSR set to: 0
  7975  00221A  5026               	movf	i2___awdiv@divisor,w,c
  7976  00221C  1027               	iorwf	i2___awdiv@divisor+1,w,c
  7977  00221E  B4D8               	btfsc	status,2,c
  7978  002220  D021               	goto	i2l3669
  7979                           
  7980                           ; BSR set to: 0
  7981  002222  0E01               	movlw	1
  7982  002224  0100               	movlb	0	; () banked
  7983  002226  6F60               	movwf	i2___awdiv@counter& (0+255),b
  7984  002228  D005               	goto	i2l3655
  7985  00222A                     i2l3653:
  7986                           
  7987                           ; BSR set to: 0
  7988  00222A  90D8               	bcf	status,0,c
  7989  00222C  3626               	rlcf	i2___awdiv@divisor,f,c
  7990  00222E  3627               	rlcf	i2___awdiv@divisor+1,f,c
  7991  002230  0100               	movlb	0	; () banked
  7992  002232  2B60               	incf	i2___awdiv@counter& (0+255),f,b
  7993  002234                     i2l3655:
  7994                           
  7995                           ; BSR set to: 0
  7996  002234  AE27               	btfss	i2___awdiv@divisor+1,7,c
  7997  002236  D7F9               	goto	i2l3653
  7998  002238                     i2l3657:
  7999                           
  8000                           ; BSR set to: 0
  8001  002238  0100               	movlb	0	; () banked
  8002  00223A  90D8               	bcf	status,0,c
  8003  00223C  3762               	rlcf	i2___awdiv@quotient& (0+255),f,b
  8004  00223E  3763               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  8005                           
  8006                           ; BSR set to: 0
  8007  002240  5026               	movf	i2___awdiv@divisor,w,c
  8008  002242  5C24               	subwf	i2___awdiv@dividend,w,c
  8009  002244  5027               	movf	i2___awdiv@divisor+1,w,c
  8010  002246  5825               	subwfb	i2___awdiv@dividend+1,w,c
  8011  002248  A0D8               	btfss	status,0,c
  8012  00224A  D006               	goto	i2l3665
  8013                           
  8014                           ; BSR set to: 0
  8015  00224C  5026               	movf	i2___awdiv@divisor,w,c
  8016  00224E  5E24               	subwf	i2___awdiv@dividend,f,c
  8017  002250  5027               	movf	i2___awdiv@divisor+1,w,c
  8018  002252  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  8019                           
  8020                           ; BSR set to: 0
  8021  002254  0100               	movlb	0	; () banked
  8022  002256  8162               	bsf	i2___awdiv@quotient& (0+255),0,b
  8023  002258                     i2l3665:
  8024                           
  8025                           ; BSR set to: 0
  8026  002258  90D8               	bcf	status,0,c
  8027  00225A  3227               	rrcf	i2___awdiv@divisor+1,f,c
  8028  00225C  3226               	rrcf	i2___awdiv@divisor,f,c
  8029                           
  8030                           ; BSR set to: 0
  8031  00225E  0100               	movlb	0	; () banked
  8032  002260  2F60               	decfsz	i2___awdiv@counter& (0+255),f,b
  8033  002262  D7EA               	goto	i2l3657
  8034  002264                     i2l3669:
  8035                           
  8036                           ; BSR set to: 0
  8037  002264  0100               	movlb	0	; () banked
  8038  002266  5161               	movf	i2___awdiv@sign& (0+255),w,b
  8039  002268  0100               	movlb	0	; () banked
  8040  00226A  B4D8               	btfsc	status,2,c
  8041  00226C  D005               	goto	i2l3673
  8042                           
  8043                           ; BSR set to: 0
  8044  00226E  0100               	movlb	0	; () banked
  8045  002270  6D62               	negf	i2___awdiv@quotient& (0+255),b
  8046  002272  1F63               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  8047  002274  B0D8               	btfsc	status,0,c
  8048  002276  2B63               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  8049  002278                     i2l3673:
  8050                           
  8051                           ; BSR set to: 0
  8052  002278  C062  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  8053  00227C  C063  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8054  002280  0012               	return	
  8055  002282                     __end_ofi2___awdiv:
  8056                           	opt stack 0
  8057                           pclatu	equ	0xFFB
  8058                           pclath	equ	0xFFA
  8059                           tblptru	equ	0xFF8
  8060                           tblptrh	equ	0xFF7
  8061                           tblptrl	equ	0xFF6
  8062                           tablat	equ	0xFF5
  8063                           prodh	equ	0xFF4
  8064                           prodl	equ	0xFF3
  8065                           intcon	equ	0xFF2
  8066                           intcon2	equ	0xFF1
  8067                           postinc0	equ	0xFEE
  8068                           fsr0h	equ	0xFEA
  8069                           fsr0l	equ	0xFE9
  8070                           wreg	equ	0xFE8
  8071                           postdec1	equ	0xFE5
  8072                           fsr1h	equ	0xFE2
  8073                           fsr1l	equ	0xFE1
  8074                           bsr	equ	0xFE0
  8075                           indf2	equ	0xFDF
  8076                           postinc2	equ	0xFDE
  8077                           postdec2	equ	0xFDD
  8078                           fsr2h	equ	0xFDA
  8079                           fsr2l	equ	0xFD9
  8080                           status	equ	0xFD8
  8081                           
  8082 ;; *************** function _WriteTimer0 *****************
  8083 ;; Defined at:
  8084 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  timer0          2   29[COMRAM] unsigned int 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  timer           2   31[COMRAM] struct Timers
  8089 ;; Return value:  Size  Location     Type
  8090 ;;		None               void
  8091 ;; Registers used:
  8092 ;;		None
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8098 ;;      Params:         2       0       0       0
  8099 ;;      Locals:         2       0       0       0
  8100 ;;      Temps:          0       0       0       0
  8101 ;;      Totals:         4       0       0       0
  8102 ;;Total ram usage:        4 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_ISR_Alta
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text21
  8112  002450                     __ptext21:
  8113                           	opt stack 0
  8114  002450                     _WriteTimer0:
  8115                           	opt stack 24
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;incstack = 0
  8119  002450  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8120  002454  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8121  002458  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8122  00245C  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8123  002460  0012               	return		;funcret
  8124  002462                     __end_of_WriteTimer0:
  8125                           	opt stack 0
  8126  0000                     pclatu	equ	0xFFB
  8127                           pclath	equ	0xFFA
  8128                           tblptru	equ	0xFF8
  8129                           tblptrh	equ	0xFF7
  8130                           tblptrl	equ	0xFF6
  8131                           tablat	equ	0xFF5
  8132                           prodh	equ	0xFF4
  8133                           prodl	equ	0xFF3
  8134                           intcon	equ	0xFF2
  8135                           intcon2	equ	0xFF1
  8136                           postinc0	equ	0xFEE
  8137                           fsr0h	equ	0xFEA
  8138                           fsr0l	equ	0xFE9
  8139                           wreg	equ	0xFE8
  8140                           postdec1	equ	0xFE5
  8141                           fsr1h	equ	0xFE2
  8142                           fsr1l	equ	0xFE1
  8143                           bsr	equ	0xFE0
  8144                           indf2	equ	0xFDF
  8145                           postinc2	equ	0xFDE
  8146                           postdec2	equ	0xFDD
  8147                           fsr2h	equ	0xFDA
  8148                           fsr2l	equ	0xFD9
  8149                           status	equ	0xFD8
  8150                           pclatu	equ	0xFFB
  8151                           pclath	equ	0xFFA
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           intcon	equ	0xFF2
  8159                           intcon2	equ	0xFF1
  8160                           postinc0	equ	0xFEE
  8161                           fsr0h	equ	0xFEA
  8162                           fsr0l	equ	0xFE9
  8163                           wreg	equ	0xFE8
  8164                           postdec1	equ	0xFE5
  8165                           fsr1h	equ	0xFE2
  8166                           fsr1l	equ	0xFE1
  8167                           bsr	equ	0xFE0
  8168                           indf2	equ	0xFDF
  8169                           postinc2	equ	0xFDE
  8170                           postdec2	equ	0xFDD
  8171                           fsr2h	equ	0xFDA
  8172                           fsr2l	equ	0xFD9
  8173                           status	equ	0xFD8
  8174                           
  8175                           	psect	rparam
  8176  0000                     pclatu	equ	0xFFB
  8177                           pclath	equ	0xFFA
  8178                           tblptru	equ	0xFF8
  8179                           tblptrh	equ	0xFF7
  8180                           tblptrl	equ	0xFF6
  8181                           tablat	equ	0xFF5
  8182                           prodh	equ	0xFF4
  8183                           prodl	equ	0xFF3
  8184                           intcon	equ	0xFF2
  8185                           intcon2	equ	0xFF1
  8186                           postinc0	equ	0xFEE
  8187                           fsr0h	equ	0xFEA
  8188                           fsr0l	equ	0xFE9
  8189                           wreg	equ	0xFE8
  8190                           postdec1	equ	0xFE5
  8191                           fsr1h	equ	0xFE2
  8192                           fsr1l	equ	0xFE1
  8193                           bsr	equ	0xFE0
  8194                           indf2	equ	0xFDF
  8195                           postinc2	equ	0xFDE
  8196                           postdec2	equ	0xFDD
  8197                           fsr2h	equ	0xFDA
  8198                           fsr2l	equ	0xFD9
  8199                           status	equ	0xFD8
  8200                           
  8201                           	psect	temp
  8202  000041                     btemp:
  8203                           	opt stack 0
  8204  000041                     	ds	1
  8205  0000                     int$flags	set	btemp
  8206                           pclatu	equ	0xFFB
  8207                           pclath	equ	0xFFA
  8208                           tblptru	equ	0xFF8
  8209                           tblptrh	equ	0xFF7
  8210                           tblptrl	equ	0xFF6
  8211                           tablat	equ	0xFF5
  8212                           prodh	equ	0xFF4
  8213                           prodl	equ	0xFF3
  8214                           intcon	equ	0xFF2
  8215                           intcon2	equ	0xFF1
  8216                           postinc0	equ	0xFEE
  8217                           fsr0h	equ	0xFEA
  8218                           fsr0l	equ	0xFE9
  8219                           wreg	equ	0xFE8
  8220                           postdec1	equ	0xFE5
  8221                           fsr1h	equ	0xFE2
  8222                           fsr1l	equ	0xFE1
  8223                           bsr	equ	0xFE0
  8224                           indf2	equ	0xFDF
  8225                           postinc2	equ	0xFDE
  8226                           postdec2	equ	0xFDD
  8227                           fsr2h	equ	0xFDA
  8228                           fsr2l	equ	0xFD9
  8229                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      64
    BANK0           160     52      75
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> status_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _status_ok->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10388
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
               _board_initialization
                          _status_ok
 ---------------------------------------------------------------------------------
 (1) _status_ok                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             26 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6449
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     515
                                             32 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     365
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             40 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             26 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0     920
                                              4 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                             35 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _status_ok
     _CANisTxReady
     _CANsendMessage

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     34      4B       4       46.9%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     27      40       1       68.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B       9        0.0%
DATA                 0      0      8B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 27 17:48:13 2015

           ??_CANisTXwarningON 007A           __end_of_CANSetFilter 0C00                   ___awdiv@sign 007F  
                           bsr 000FE0            ___wmul@multiplicand 007C                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000  
                  __CFG_LVP$ON 000000                            l501 0A58                            l502 0A5C  
                          l430 1AB2                            l503 0A68                            l431 1AB6  
                          l520 0BB4                            l512 0B74                            l504 0A6C  
                          l440 1BBE                            l432 1AC2                            l352 1EBE  
                          l360 0D12                            l513 0B78                            l505 0A78  
                          l441 1BCA                            l433 1AC6                            l353 1EC8  
                          l361 0CA2                            l514 0B84                            l506 0A7C  
                          l442 1BCE                            l434 1AD2                            l426 1A92  
                          l362 0CAC                            l515 0B88                            l507 0A88  
                          l443 1BDA                            l427 1A96                            l363 0CB6  
                          l516 0B94                            l508 0A8C                            l460 05FE  
                          l444 1BDE                            l428 1AA2                            l372 1108  
                          l364 0CC0                            l517 0B98                            l509 0A98  
                          l461 060A                            l445 1BEA                            l437 1BAA  
                          l429 1AA6                            l373 0E9A                            l357 0E84  
                          l518 0BA4                            l470 0714                            l462 060E  
                          l438 1BAE                            l550 241E                            l390 11AA  
                          l382 1054                            l374 0E9E                            l358 0C16  
                          l519 0BA8                            l471 0718                            l463 061A  
                          l439 1BBA                            l391 11B4                            l383 1058  
                          l375 0F96                            l367 0DD0                            l359 0C1A  
                          l631 20F8                            l480 0824                            l472 0724  
                          l464 061E                            l392 11BE                            l384 1064  
                          l376 0F26                            l368 0DD4                            l624 20A6  
                          l481 0830                            l473 0728                            l465 062A  
                          l457 05EA                            l393 11C8                            l377 0F30  
                          l369 0DE0                            l490 093C                            l482 0834  
                          l474 0734                            l458 05EE                            l378 0F3A  
                          l642 22DE                            l626 20A2                            l491 0940  
                          l483 0840                            l475 0738                            l459 05FA  
                          l563 2396                            l387 111E                            l379 0F44  
                          l627 20A8                            l652 232E                            l492 094C  
                          l484 0844                            l476 0744                            l468 0704  
                          l396 12D8                            l388 1122                            l493 0950  
                          l485 0850                            l469 0708                            l397 12DC  
                          l389 121A                            l494 095C                            l486 0854  
                          l398 12E8                            l495 0960                            l487 0860  
                          l479 0820                            l496 096C                            l648 22E0  
                          l497 0970                            l498 097C                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012                            _msg 0030  
                          wreg 000FE8                   __CFG_WDT$OFF 000000                           l3121 11D2  
                         l3205 2018                           l3221 2068                           l3141 12CC  
                         l3045 0F4E                           l3207 2024                           l2503 1A06  
                         l3071 1068                           l3225 207C                           l3217 205A  
                         l3209 202A                           l3065 1048                           l2603 0270  
                         l3147 12EC                           l2621 032A                           l3181 2388  
                         l2703 062E                           l2535 1B1C                           l3193 1FE4  
                         l2561 1BEE                           l2529 1AD6                           l3601 20D8  
                         l2811 09C6                           l2469 242C                           l2805 0980  
                         l2709 0674                           l3605 20E8                           l3199 1FFA  
                         l2743 078E                           l2639 03E4                           l2487 1950  
                         l2737 0748                           l2657 049E                           l2585 01B8  
                         l3609 20FC                           l2771 0864                           l2675 0558  
                         l2931 1F18                           l2923 1EB6                           l2845 0AE2  
                         l2925 1ECC                           l3581 208A                           l2839 0A9C  
                         l3591 20B4                           l2873 0BB8                           l2777 08AA  
                         l2929 1ED4                           l3597 20CA                           l3589 20B0  
                         l2969 0CCA                           l2995 0DE4                           l2989 0DC4  
                         u2110 18CC                           u2115 18C0                           u2125 192C  
                         _LATA 000F89                           u2150 1982                           _LATB 000F8A  
                         _LATC 000F8B                           u3040 0BD8                           u2320 1C0E  
                         u2240 1AF6                           _LATD 000F8C                           _LATE 000F8D  
                         u2155 1976                           u3300 0F6E                           u3045 0BCC  
                         u2405 024C                           u2325 1C02                           u2245 1AEA  
                         u2165 19E2                           u2510 041A                           u2430 02A6  
                         u2350 0134                           u3310 0FBA                           u3305 0F62  
                         u3170 0CEA                           u2515 040E                           u2435 029A  
                         u2355 0128                           u3315 0FAE                           u3180 0D36  
                         u2525 047A                           u2445 0306                           u2365 0194  
                         u3325 101A                           u2550 04D4                           u2470 0360  
                         u2390 01EC                           u3430 11F2                           u3175 0CDE  
                         u2800 0884                           u2720 0768                           u2640 064E  
                         u3440 123E                           u3185 0D2A                           u2555 04C8  
                         u2475 0354                           u2395 01E0                           u3435 11E6  
                         u3195 0D96                           u2805 0878                           u2725 075C  
                         u2645 0642                           u2565 0534                           u2485 03C0  
                         u3445 1232                           u4247 238A                           u3455 129E  
                         u3820 246A                           u3830 2476                           u2960 0ABC  
                         u2880 09A0                           u2965 0AB0                           u2885 0994  
          __size_of_CANSetMask 039E                           _main 2086                           _read 00A0  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           btemp 0041               __end_of_ADC_Read 236A  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 00F6                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 2424                   _status_array 00A3  
              _brake_value_inc 009E     __size_of_CANreceiveMessage 050C                          ?_main 0001  
              __end_of___awdiv 2086                          _T0CON 000FD5                ___awdiv@divisor 007C  
                        _T3CON 000FB1             __size_of_ISR_Bassa 00DE                          i1l404 1624  
                        i1l620 00AE                          i1l617 00AA                          i1l555 244C  
                        i2l611 1DC6                ___awdiv@counter 007E                          _TMR0H 000FD7  
                        _TMR0L 000FD6              _CANisRxReady$2912 0001                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1E02  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 008C  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0200           __end_of_CANisRxReady 2450  
                        tablat 000FF5           __end_of_CANisTxReady 2424               __end_ofi2___wmul 2400  
                        status 000FD8             __size_ofi2___awdiv 009C                 __CFG_PBADEN$ON 000000  
              __initialization 22E4                   __end_of_main 2140  __size_of_board_initialization 00A6  
             _brake_signal_CAN 009D                         ??_main 0094                  __activetblptr 000002  
            _CANisTxReady$2910 007A                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 007A                __CFG_BBSIZ$1024 000000  
                       i1l3351 182A                         i1l3343 17F2                         i1l3335 1784  
                       i1l3361 1894                         i1l3281 1574                         i1l3273 1504  
                       i1l3355 1846                         i1l3347 180E                         i1l3293 15CE  
                       i1l3285 1592                         i1l3359 1862                         i1l3297 15EC  
                       i1l3289 15B0                         i1l3299 161E                         i1l3575 0094  
                       i1l3567 0066                         i2l3641 21FE                         i2l3653 222A  
                       i2l3655 2234                         i2l3647 2210                         i2l3673 2278  
                       i2l3665 2258                         i2l3657 2238                         i2l3669 2264  
                       i2l3695 1DB6                         i2l3697 1DC2                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 007E             CANsendMessage@tamp 0086              __end_of_ISR_Bassa 00F6  
             __end_of_delay_ms 23A4          __size_of_CANSetFilter 0B06                 __CFG_XINST$OFF 000000  
                       ___wmul 23A4                      ??___awdiv 007E                 __CFG_STVREN$ON 000000  
                 ??_CANSetMask 007F                         clear_0 22EA                         clear_1 22F8  
             ___awdiv@quotient 0080                 i2___awdiv@sign 0061                __CFG_BOREN$BOHW 000000  
            __end_ofi2___awdiv 2282                      ?_ADC_Read 0001                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  _home_position 009F  
                 _CANSetFilter 00FA                     __accesstop 0060        __end_of__initialization 231E  
           __end_of_CANSetMask 1C36                  ___rparam_used 000001      __size_of_CANisRXwarningON 000C  
               __pcstackCOMRAM 0001                      ?_ISR_Alta 0001                   __pidataBANK0 247A  
        CANSetFilter@numBuffer 0083                      ?i2___wmul 001E      __size_of_CANisTXwarningON 000C  
                   ??_ADC_Read 0082          __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024  
     __end_of_CANOperationMode 243A                     __pbssBANK0 0094        __size_of_CANsendMessage 078C  
                   ??_ISR_Alta 0064                        ?___wmul 007A               WriteTimer0@timer 0020  
                ??_WriteTimer0 0020                   _CANisRxReady 243A                        _CANSTAT 000F6E  
                 _CANisTxReady 2400                        _BRGCON1 000F70                        _BRGCON2 000F71  
                      _BRGCON3 000F72                     ??i2___wmul 0022         __size_of_CANInitialize 01C6  
                    ?_delay_ms 0080                        _RXB0DLC 000F65                        _RXB1DLC 000F55  
                      _RXB0CON 000F60                        _RXB1CON 000F50                        _TXB0DLC 000F45  
                      _TXB1DLC 000F35                        _TXB2DLC 000F25            CANsendMessage@flags 0081  
           __size_of_status_ok 0062                        __Hparam 0000                        __Lparam 0000  
             delay_ms@value_ms 0080                        ___awdiv 1FC8                __size_of___wmul 0036  
         CANInitialize@propSeg 0091                        __pcinit 22E4                        __ramtop 0300  
                      __ptext0 2086                        __ptext1 2282                        __ptext2 0C00  
                      __ptext3 2400                        __ptext4 2140                        __ptext5 236A  
                      __ptext6 23A4                        __ptext7 1E02                        __ptext8 1898  
                      __ptext9 00FA                      _T0CONbits 000FD5            __end_of_WriteTimer0 2462  
                   ??_delay_ms 0082         CANreceiveMessage@error 000B   __end_of_board_initialization 21E6  
               __pintcode_body 1C36           end_of_initialization 231E                  _Analogic_Mode 009C  
                __Lmediumconst 0000                        int_func 1C36            i2___wmul@multiplier 001E  
             _CANisRXwarningON 246E                  _CANInitialize 1E02                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE              __end_of_status_ok 22E4                      _PORTBbits 000F81  
               CANSetMask@mask 007A                      _PORTCbits 000F82              _correction_factor 009A  
               CANSetMask@tamp 0084                 CANSetMask@type 007E               _CANisTXwarningON 2462  
            __size_of_ADC_Read 003E                      i2___awdiv 21E6        _clock_counter_reference 0098  
               _CANsendMessage 0C00               CANInitialize@BRP 008B               CANInitialize@SJW 008A  
               ?_CANInitialize 0088             i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001  
            __size_of_ISR_Alta 1DFA                 __end_of___wmul 23DA                    _WriteTimer0 2450  
             i2___wmul@product 0022            start_initialization 22E4             i2___awdiv@quotient 0062  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 0083                     ?i2___awdiv 0024  
       __end_of_CANsendMessage 138C              ?_CANOperationMode 0001             ??_CANOperationMode 007A  
   CANInitialize@FilterConfig1 0092     CANInitialize@FilterConfig2 0093           _board_initialization 2140  
                     ??___wmul 007E                    __pdataBANK0 00A2               __CFG_LPT1OSC$OFF 000000  
           _brake_value_degree 003F         CANInitialize@phaseSeg1 0088         CANInitialize@phaseSeg2 0089  
                  __pbssCOMRAM 0028                  __pcstackBANK0 0060                    _BRGCON2bits 000F71  
                  _BRGCON3bits 000F72              __size_of_delay_ms 003A                ?_CANsendMessage 007A  
              ??_CANInitialize 008D             CANSetFilter@filter 007A          ?_board_initialization 0001  
                  ??_ISR_Bassa 000D                      __pintcode 0008                       ?___awdiv 007A  
                  __pintcodelo 0018              WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 247A  
                  _brake_value 00A1                    _COMSTATbits 000F74                       _ADC_Read 232C  
                  ??i2___awdiv 0028          CANreceiveMessage@tamp 000C                 ___wmul@product 007E  
 _delay_quartz_frequency_value 00A2                       _IPR3bits 000FA5                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 246E                       i1u361_20 1444                       i1u361_26 1446  
                     i1u362_20 1472                       i1u370_25 15F8                       i1u362_26 1474  
                     i1u372_20 16CC                       i1u364_25 1488                       i1u372_26 16CE  
                     i1u373_20 16F6                       i1u381_25 186E                       i1u373_26 16F8  
                     i1u375_25 170A                       i2u422_40 1C74                       i2u422_46 1C76  
                     _PIR2bits 000FA1                       _PIR3bits 000FA4                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                      _timer_off 0028  
                     _RXM0SIDH 000F18                       _RXM0SIDL 000F19                       _RXM1SIDH 000F1C  
                     _RXM1SIDL 000F1D                       _RXERRCNT 000F75                       _TXERRCNT 000F76  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0              ___wmul@multiplier 007A  
                     i2___wmul 23DA                      _status_ok 2282              i2___awdiv@divisor 0026  
            i2___awdiv@counter 0060                  ?_CANSetFilter 007A                    _INTCON2bits 000FF1  
                    copy_data0 2312                     _CANCONbits 000F6F                       __Hrparam 0000  
                 _RXB0SIDLbits 000F62         ??_board_initialization 0094                       __Lrparam 0000  
                 _RXB1SIDLbits 000F52                     _CANSetMask 1898               __size_of___awdiv 00BE  
        i2___wmul@multiplicand 0020                _remote_frame_id 0094                       _Tx_retry 0200  
                 ?_WriteTimer0 001E                     ?_status_ok 0001                   _RXF0SIDLbits 000F01  
                     _delay_ms 236A                   _RXF1SIDLbits 000F05                 ??_CANSetFilter 007F  
                     __ptext10 2424                       __ptext11 2462                       __ptext20 21E6  
                     __ptext12 246E                       __ptext21 2450                       __ptext13 232C  
                     __ptext14 1FC8                       __ptext16 138C                       __ptext17 243A  
                     __ptext19 23DA                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 0080  
                 _remote_frame 0201                  __size_of_main 00BA           CANreceiveMessage@msg 0001  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 002C  
                 _TXB2SIDLbits 000F22                       int$flags 0041      __size_of_CANOperationMode 0016  
                ?_CANisRxReady 0001                  ?_CANisTxReady 0001                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 138C                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 0082             ?_CANreceiveMessage 0001  
     CANsendMessage@identifier 007A                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 0084               CANSetFilter@type 007E            ??_CANreceiveMessage 0003  
                  _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35                    _TXB0CONbits 000F40  
                  _TXB2DLCbits 000F25                    _TXB1CONbits 000F30                    _TXB2CONbits 000F20  
         CANOperationMode@mode 007A                 ??_CANisRxReady 0001                    ?_CANSetMask 007A  
               ??_CANisTxReady 007A      __end_of_CANreceiveMessage 1898                    ??_status_ok 008A  
            ?_CANisRXwarningON 0001             ??_CANisRXwarningON 007A          __end_of_CANInitialize 1FC8  
            ?_CANisTXwarningON 0001  
