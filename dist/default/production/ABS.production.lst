

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jan 27 19:00:14 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataBANK0
    43  00287A                     __pidataBANK0:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _delay_quartz_frequency_value
    47  00287A  10                 	db	16
    48                           
    49                           ;initializer for _status_array
    50  00287B  00                 	db	0
    51  00287C  00                 	db	0
    52  00287D  00                 	db	0
    53  00287E  00                 	db	0
    54  00287F  00                 	db	0
    55  002880  00                 	db	0
    56  002881  00                 	db	0
    57  002882  01                 	db	1
    58  0000                     _RXB1CON	set	3920
    59  0000                     _RXB1CONbits	set	3920
    60  0000                     _RXB1D0	set	3926
    61  0000                     _RXB1D1	set	3927
    62  0000                     _RXB1D2	set	3928
    63  0000                     _RXB1D3	set	3929
    64  0000                     _RXB1D4	set	3930
    65  0000                     _RXB1D5	set	3931
    66  0000                     _RXB1D6	set	3932
    67  0000                     _RXB1D7	set	3933
    68  0000                     _RXB1DLC	set	3925
    69  0000                     _RXB1DLCbits	set	3925
    70  0000                     _RXB1EIDH	set	3923
    71  0000                     _RXB1EIDL	set	3924
    72  0000                     _RXB1SIDH	set	3921
    73  0000                     _RXB1SIDL	set	3922
    74  0000                     _RXB1SIDLbits	set	3922
    75  0000                     _RXF0EIDH	set	3842
    76  0000                     _RXF0EIDL	set	3843
    77  0000                     _RXF0SIDH	set	3840
    78  0000                     _RXF0SIDL	set	3841
    79  0000                     _RXF0SIDLbits	set	3841
    80  0000                     _RXF1EIDH	set	3846
    81  0000                     _RXF1EIDL	set	3847
    82  0000                     _RXF1SIDH	set	3844
    83  0000                     _RXF1SIDL	set	3845
    84  0000                     _RXF1SIDLbits	set	3845
    85  0000                     _RXF2EIDH	set	3850
    86  0000                     _RXF2EIDL	set	3851
    87  0000                     _RXF2SIDH	set	3848
    88  0000                     _RXF2SIDL	set	3849
    89  0000                     _RXF2SIDLbits	set	3849
    90  0000                     _RXF3EIDH	set	3854
    91  0000                     _RXF3EIDL	set	3855
    92  0000                     _RXF3SIDH	set	3852
    93  0000                     _RXF3SIDL	set	3853
    94  0000                     _RXF3SIDLbits	set	3853
    95  0000                     _RXF4EIDH	set	3858
    96  0000                     _RXF4EIDL	set	3859
    97  0000                     _RXF4SIDH	set	3856
    98  0000                     _RXF4SIDL	set	3857
    99  0000                     _RXF4SIDLbits	set	3857
   100  0000                     _RXF5EIDH	set	3862
   101  0000                     _RXF5EIDL	set	3863
   102  0000                     _RXF5SIDH	set	3860
   103  0000                     _RXF5SIDL	set	3861
   104  0000                     _RXF5SIDLbits	set	3861
   105  0000                     _RXM0EIDH	set	3866
   106  0000                     _RXM0EIDL	set	3867
   107  0000                     _RXM0SIDH	set	3864
   108  0000                     _RXM0SIDL	set	3865
   109  0000                     _RXM0SIDLbits	set	3865
   110  0000                     _RXM1EIDH	set	3870
   111  0000                     _RXM1EIDL	set	3871
   112  0000                     _RXM1SIDH	set	3868
   113  0000                     _RXM1SIDL	set	3869
   114  0000                     _RXM1SIDLbits	set	3869
   115  0000                     _TXB0CONbits	set	3904
   116  0000                     _TXB0D0	set	3910
   117  0000                     _TXB0D1	set	3911
   118  0000                     _TXB0D2	set	3912
   119  0000                     _TXB0D3	set	3913
   120  0000                     _TXB0D4	set	3914
   121  0000                     _TXB0D5	set	3915
   122  0000                     _TXB0D6	set	3916
   123  0000                     _TXB0D7	set	3917
   124  0000                     _TXB0DLC	set	3909
   125  0000                     _TXB0DLCbits	set	3909
   126  0000                     _TXB0EIDH	set	3907
   127  0000                     _TXB0EIDL	set	3908
   128  0000                     _TXB0SIDH	set	3905
   129  0000                     _TXB0SIDL	set	3906
   130  0000                     _TXB0SIDLbits	set	3906
   131  0000                     _TXB1CONbits	set	3888
   132  0000                     _TXB1D0	set	3894
   133  0000                     _TXB1D1	set	3895
   134  0000                     _TXB1D2	set	3896
   135  0000                     _TXB1D3	set	3897
   136  0000                     _TXB1D4	set	3898
   137  0000                     _TXB1D5	set	3899
   138  0000                     _TXB1D6	set	3900
   139  0000                     _TXB1D7	set	3901
   140  0000                     _TXB1DLC	set	3893
   141  0000                     _TXB1DLCbits	set	3893
   142  0000                     _TXB1EIDH	set	3891
   143  0000                     _TXB1EIDL	set	3892
   144  0000                     _TXB1SIDH	set	3889
   145  0000                     _TXB1SIDL	set	3890
   146  0000                     _TXB1SIDLbits	set	3890
   147  0000                     _TXB2CONbits	set	3872
   148  0000                     _TXB2D0	set	3878
   149  0000                     _TXB2D1	set	3879
   150  0000                     _TXB2D2	set	3880
   151  0000                     _TXB2D3	set	3881
   152  0000                     _TXB2D4	set	3882
   153  0000                     _TXB2D5	set	3883
   154  0000                     _TXB2D6	set	3884
   155  0000                     _TXB2D7	set	3885
   156  0000                     _TXB2DLC	set	3877
   157  0000                     _TXB2DLCbits	set	3877
   158  0000                     _TXB2EIDH	set	3875
   159  0000                     _TXB2EIDL	set	3876
   160  0000                     _TXB2SIDH	set	3873
   161  0000                     _TXB2SIDL	set	3874
   162  0000                     _TXB2SIDLbits	set	3874
   163  0000                     _ADCON0bits	set	4034
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON2bits	set	4032
   166  0000                     _ADRESH	set	4036
   167  0000                     _BRGCON1	set	3952
   168  0000                     _BRGCON2	set	3953
   169  0000                     _BRGCON2bits	set	3953
   170  0000                     _BRGCON3	set	3954
   171  0000                     _BRGCON3bits	set	3954
   172  0000                     _CANCON	set	3951
   173  0000                     _CANCONbits	set	3951
   174  0000                     _CANSTAT	set	3950
   175  0000                     _COMSTATbits	set	3956
   176  0000                     _INTCON2bits	set	4081
   177  0000                     _INTCON3bits	set	4080
   178  0000                     _INTCONbits	set	4082
   179  0000                     _IPR3bits	set	4005
   180  0000                     _LATA	set	3977
   181  0000                     _LATB	set	3978
   182  0000                     _LATC	set	3979
   183  0000                     _LATD	set	3980
   184  0000                     _LATE	set	3981
   185  0000                     _PIE3bits	set	4003
   186  0000                     _PIR2bits	set	4001
   187  0000                     _PIR3bits	set	4004
   188  0000                     _PORTBbits	set	3969
   189  0000                     _PORTCbits	set	3970
   190  0000                     _RCONbits	set	4048
   191  0000                     _RXB0CON	set	3936
   192  0000                     _RXB0CONbits	set	3936
   193  0000                     _RXB0D0	set	3942
   194  0000                     _RXB0D1	set	3943
   195  0000                     _RXB0D2	set	3944
   196  0000                     _RXB0D3	set	3945
   197  0000                     _RXB0D4	set	3946
   198  0000                     _RXB0D5	set	3947
   199  0000                     _RXB0D6	set	3948
   200  0000                     _RXB0D7	set	3949
   201  0000                     _RXB0DLC	set	3941
   202  0000                     _RXB0DLCbits	set	3941
   203  0000                     _RXB0EIDH	set	3939
   204  0000                     _RXB0EIDL	set	3940
   205  0000                     _RXB0SIDH	set	3937
   206  0000                     _RXB0SIDL	set	3938
   207  0000                     _RXB0SIDLbits	set	3938
   208  0000                     _RXERRCNT	set	3957
   209  0000                     _T0CON	set	4053
   210  0000                     _T0CONbits	set	4053
   211  0000                     _T1CON	set	4045
   212  0000                     _T1CONbits	set	4045
   213  0000                     _T3CON	set	4017
   214  0000                     _T3CONbits	set	4017
   215  0000                     _TMR0H	set	4055
   216  0000                     _TMR0L	set	4054
   217  0000                     _TMR1H	set	4047
   218  0000                     _TMR1L	set	4046
   219  0000                     _TMR3H	set	4019
   220  0000                     _TMR3L	set	4018
   221  0000                     _TRISA	set	3986
   222  0000                     _TRISB	set	3987
   223  0000                     _TRISC	set	3988
   224  0000                     _TRISD	set	3989
   225  0000                     _TRISE	set	3990
   226  0000                     _TXERRCNT	set	3958
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  0026E4                     __pcinit:
   232                           	opt stack 0
   233  0026E4                     start_initialization:
   234                           	opt stack 0
   235  0026E4                     __initialization:
   236                           	opt stack 0
   237                           
   238                           ; Clear objects allocated to BANK0 (60 bytes)
   239  0026E4  EE00  F060         	lfsr	0,__pbssBANK0
   240  0026E8  0E3C               	movlw	60
   241  0026EA                     clear_0:
   242  0026EA  6AEE               	clrf	postinc0,c
   243  0026EC  06E8               	decf	wreg,f,c
   244  0026EE  E1FD               	bnz	clear_0
   245                           
   246                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   247  0026F0  6A3D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   248                           
   249                           ; Clear objects allocated to COMRAM (17 bytes)
   250  0026F2  EE00  F02C         	lfsr	0,__pbssCOMRAM
   251  0026F6  0E11               	movlw	17
   252  0026F8                     clear_1:
   253  0026F8  6AEE               	clrf	postinc0,c
   254  0026FA  06E8               	decf	wreg,f,c
   255  0026FC  E1FD               	bnz	clear_1
   256                           
   257                           ; Initialize objects allocated to BANK0 (9 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259  0026FE  0E7A               	movlw	low __pidataBANK0
   260  002700  6EF6               	movwf	tblptrl,c
   261  002702  0E28               	movlw	high __pidataBANK0
   262  002704  6EF7               	movwf	tblptrh,c
   263  002706  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264  002708  6EF8               	movwf	tblptru,c
   265  00270A  EE00  F0CC         	lfsr	0,__pdataBANK0
   266  00270E  EE10 F009          	lfsr	1,9
   267  002712                     copy_data0:
   268  002712  0009               	tblrd		*+
   269  002714  CFF5 FFEE          	movff	tablat,postinc0
   270  002718  50E5               	movf	postdec1,w,c
   271  00271A  50E1               	movf	fsr1l,w,c
   272  00271C  E1FA               	bnz	copy_data0
   273  00271E                     end_of_initialization:
   274                           	opt stack 0
   275  00271E                     __end_of__initialization:
   276                           	opt stack 0
   277  00271E  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   278  002720  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   279  002722  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  002724  6EF8               	movwf	tblptru,c
   281  002726  0100               	movlb	0
   282  002728  EF34  F011         	goto	_main	;jump to C main() function
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           tblptrl	equ	0xFF6
   286                           tablat	equ	0xFF5
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           postdec1	equ	0xFE5
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bitbssCOMRAM
   293  0001E8                     __pbitbssCOMRAM:
   294                           	opt stack 0
   295  0001E8                     _ENC1_measure:
   296                           	opt stack 0
   297  0001E8                     	ds	1
   298  0001E9                     _ENC2_measure:
   299                           	opt stack 0
   300  0001E9                     	ds	1
   301  0001EA                     _Tx_retry:
   302                           	opt stack 0
   303  0001EA                     	ds	1
   304  0001EB                     _count_flag:
   305                           	opt stack 0
   306  0001EB                     	ds	1
   307  0001EC                     _remote_frame:
   308                           	opt stack 0
   309  0001EC                     	ds	1
   310  0001ED                     _x:
   311                           	opt stack 0
   312  0001ED                     	ds	1
   313  0001EE                     _y:
   314                           	opt stack 0
   315  0001EE                     	ds	1
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	bssCOMRAM
   326  00002C                     __pbssCOMRAM:
   327                           	opt stack 0
   328  00002C                     _gap_time_1:
   329                           	opt stack 0
   330  00002C                     	ds	4
   331  000030                     _gap_time_2:
   332                           	opt stack 0
   333  000030                     	ds	4
   334  000034                     _timer_off:
   335                           	opt stack 0
   336  000034                     	ds	4
   337  000038                     _timer_on:
   338                           	opt stack 0
   339  000038                     	ds	4
   340  00003C                     _brake_value_degree:
   341                           	opt stack 0
   342  00003C                     	ds	1
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssBANK0
   353  000060                     __pbssBANK0:
   354                           	opt stack 0
   355  000060                     _int_counter_1:
   356                           	opt stack 0
   357  000060                     	ds	4
   358  000064                     _int_counter_2:
   359                           	opt stack 0
   360  000064                     	ds	4
   361  000068                     _remote_frame_id:
   362                           	opt stack 0
   363  000068                     	ds	4
   364  00006C                     _clock_counter_reference:
   365                           	opt stack 0
   366  00006C                     	ds	2
   367  00006E                     _correction_factor:
   368                           	opt stack 0
   369  00006E                     	ds	2
   370  000070                     _distance_1:
   371                           	opt stack 0
   372  000070                     	ds	2
   373  000072                     _distance_2:
   374                           	opt stack 0
   375  000072                     	ds	2
   376  000074                     _Analogic_Mode:
   377                           	opt stack 0
   378  000074                     	ds	1
   379  000075                     _brake_signal_CAN:
   380                           	opt stack 0
   381  000075                     	ds	1
   382  000076                     _brake_value_inc:
   383                           	opt stack 0
   384  000076                     	ds	1
   385  000077                     _home_position:
   386                           	opt stack 0
   387  000077                     	ds	1
   388  000078                     _read:
   389                           	opt stack 0
   390  000078                     	ds	1
   391  000079                     _step:
   392                           	opt stack 0
   393  000079                     	ds	1
   394  00007A                     _wheel_speed_1:
   395                           	opt stack 0
   396  00007A                     	ds	1
   397  00007B                     _wheel_speed_2:
   398                           	opt stack 0
   399  00007B                     	ds	1
   400  00007C                     _msg:
   401                           	opt stack 0
   402  00007C                     	ds	15
   403  00008B                     _distance_array:
   404                           	opt stack 0
   405  00008B                     	ds	8
   406  000093                     _speed_array:
   407                           	opt stack 0
   408  000093                     	ds	8
   409  00009B                     _brake_value:
   410                           	opt stack 0
   411  00009B                     	ds	1
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           postinc0	equ	0xFEE
   417                           wreg	equ	0xFE8
   418                           postdec1	equ	0xFE5
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	dataBANK0
   422  0000CC                     __pdataBANK0:
   423                           	opt stack 0
   424  0000CC                     _delay_quartz_frequency_value:
   425                           	opt stack 0
   426  0000CC                     	ds	1
   427  0000CD                     _status_array:
   428                           	opt stack 0
   429  0000CD                     	ds	8
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	cstackBANK0
   440  00009C                     __pcstackBANK0:
   441                           	opt stack 0
   442  00009C                     ??_ISR_Alta:
   443                           
   444                           ; 0 bytes @ 0x0
   445  00009C                     	ds	22
   446  0000B2                     ?___wmul:
   447                           	opt stack 0
   448  0000B2                     ?___awdiv:
   449                           	opt stack 0
   450  0000B2                     ?___lldiv:
   451                           	opt stack 0
   452  0000B2                     CANOperationMode@mode:
   453                           	opt stack 0
   454  0000B2                     _CANisTxReady$3084:
   455                           	opt stack 0
   456  0000B2                     ___wmul@multiplier:
   457                           	opt stack 0
   458  0000B2                     ___awdiv@dividend:
   459                           	opt stack 0
   460  0000B2                     CANsendMessage@identifier:
   461                           	opt stack 0
   462  0000B2                     CANSetMask@mask:
   463                           	opt stack 0
   464  0000B2                     CANSetFilter@filter:
   465                           	opt stack 0
   466  0000B2                     ___lldiv@dividend:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x16
   470  0000B2                     	ds	2
   471  0000B4                     ___wmul@multiplicand:
   472                           	opt stack 0
   473  0000B4                     ___awdiv@divisor:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x18
   477  0000B4                     	ds	2
   478  0000B6                     CANSetMask@type:
   479                           	opt stack 0
   480  0000B6                     CANSetFilter@type:
   481                           	opt stack 0
   482  0000B6                     ___awdiv@counter:
   483                           	opt stack 0
   484  0000B6                     CANsendMessage@data:
   485                           	opt stack 0
   486  0000B6                     ___wmul@product:
   487                           	opt stack 0
   488  0000B6                     ___lldiv@divisor:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x1A
   492  0000B6                     	ds	1
   493  0000B7                     ??_CANSetMask:
   494  0000B7                     ??_CANSetFilter:
   495  0000B7                     ___awdiv@sign:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x1B
   499  0000B7                     	ds	1
   500  0000B8                     CANsendMessage@dataLength:
   501                           	opt stack 0
   502  0000B8                     delay_ms@value_ms:
   503                           	opt stack 0
   504  0000B8                     ___awdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1C
   508  0000B8                     	ds	1
   509  0000B9                     CANsendMessage@flags:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1D
   513  0000B9                     	ds	1
   514  0000BA                     ??_CANsendMessage:
   515  0000BA                     ___lldiv@quotient:
   516                           	opt stack 0
   517                           
   518                           ; 4 bytes @ 0x1E
   519  0000BA                     	ds	1
   520  0000BB                     CANSetMask@numBuffer:
   521                           	opt stack 0
   522  0000BB                     CANSetFilter@numBuffer:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x1F
   526  0000BB                     	ds	1
   527  0000BC                     CANSetMask@tamp:
   528                           	opt stack 0
   529  0000BC                     CANSetFilter@tamp:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x20
   533  0000BC                     	ds	2
   534  0000BE                     ___lldiv@counter:
   535                           	opt stack 0
   536  0000BE                     CANsendMessage@tamp:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x22
   540  0000BE                     	ds	2
   541  0000C0                     CANInitialize@phaseSeg1:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x24
   545  0000C0                     	ds	1
   546  0000C1                     CANInitialize@phaseSeg2:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x25
   550  0000C1                     	ds	1
   551  0000C2                     CANInitialize@SJW:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x26
   555  0000C2                     	ds	1
   556  0000C3                     CANInitialize@BRP:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x27
   560  0000C3                     	ds	1
   561  0000C4                     CANInitialize@flags:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x28
   565  0000C4                     	ds	1
   566  0000C5                     ??_CANInitialize:
   567                           
   568                           ; 0 bytes @ 0x29
   569  0000C5                     	ds	4
   570  0000C9                     CANInitialize@propSeg:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x2D
   574  0000C9                     	ds	1
   575  0000CA                     CANInitialize@FilterConfig1:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x2E
   579  0000CA                     	ds	1
   580  0000CB                     CANInitialize@FilterConfig2:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x2F
   584  0000CB                     	ds	1
   585  0000CC                     tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           postinc0	equ	0xFEE
   590                           wreg	equ	0xFE8
   591                           postdec1	equ	0xFE5
   592                           fsr1l	equ	0xFE1
   593                           
   594                           ; 0 bytes @ 0x30
   595                           
   596                           	psect	cstackCOMRAM
   597  000001                     __pcstackCOMRAM:
   598                           	opt stack 0
   599  000001                     _CANisRxReady$3086:
   600                           	opt stack 0
   601  000001                     CANreceiveMessage@msg:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x0
   605  000001                     	ds	2
   606  000003                     ??_CANreceiveMessage:
   607                           
   608                           ; 0 bytes @ 0x2
   609  000003                     	ds	8
   610  00000B                     CANreceiveMessage@error:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xA
   614  00000B                     	ds	1
   615  00000C                     CANreceiveMessage@tamp:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0xB
   619  00000C                     	ds	1
   620  00000D                     ??_ISR_Bassa:
   621                           
   622                           ; 0 bytes @ 0xC
   623  00000D                     	ds	17
   624  00001E                     ?i2___wmul:
   625                           	opt stack 0
   626  00001E                     ?i2___lldiv:
   627                           	opt stack 0
   628  00001E                     WriteTimer0@timer0:
   629                           	opt stack 0
   630  00001E                     i2___wmul@multiplier:
   631                           	opt stack 0
   632  00001E                     i2___lldiv@dividend:
   633                           	opt stack 0
   634                           
   635                           ; 4 bytes @ 0x1D
   636  00001E                     	ds	2
   637  000020                     WriteTimer0@timer:
   638                           	opt stack 0
   639  000020                     i2___wmul@multiplicand:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x1F
   643  000020                     	ds	2
   644  000022                     i2___wmul@product:
   645                           	opt stack 0
   646  000022                     i2___lldiv@divisor:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0x21
   650  000022                     	ds	2
   651  000024                     ?i2___awdiv:
   652                           	opt stack 0
   653  000024                     i2___awdiv@dividend:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x23
   657  000024                     	ds	2
   658  000026                     i2___awdiv@divisor:
   659                           	opt stack 0
   660  000026                     i2___lldiv@quotient:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x25
   664  000026                     	ds	2
   665  000028                     i2___awdiv@counter:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x27
   669  000028                     	ds	1
   670  000029                     i2___awdiv@sign:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x28
   674  000029                     	ds	1
   675  00002A                     i2___lldiv@counter:
   676                           	opt stack 0
   677  00002A                     i2___awdiv@quotient:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x29
   681  00002A                     	ds	2
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           postdec1	equ	0xFE5
   689                           fsr1l	equ	0xFE1
   690                           
   691 ;;
   692 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   693 ;;
   694 ;; *************** function _main *****************
   695 ;; Defined at:
   696 ;;		line 215 in file "ABS_Code.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  2  678[None  ] int 
   703 ;; Registers used:
   704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   710 ;;      Params:         0       0       0       0
   711 ;;      Locals:         0       0       0       0
   712 ;;      Temps:          0       0       0       0
   713 ;;      Totals:         0       0       0       0
   714 ;;Total ram usage:        0 bytes
   715 ;; Hardware stack levels required when called:    7
   716 ;; This function calls:
   717 ;;		_ADC_Read
   718 ;;		_CANisRXwarningON
   719 ;;		_CANisTXwarningON
   720 ;;		___awdiv
   721 ;;		___lldiv
   722 ;;		_board_initialization
   723 ;;		_remote_frame_handler
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text0
   730  002268                     __ptext0:
   731                           	opt stack 0
   732  002268                     _main:
   733                           	opt stack 24
   734                           
   735                           ;ABS_Code.c: 216: board_initialization();
   736                           
   737                           ;incstack = 0
   738  002268  EC92  F012         	call	_board_initialization	;wreg free
   739                           
   740                           ;ABS_Code.c: 217: step = (11 * (3,1415)) / 16;
   741  00226C  0ECC               	movlw	204
   742  00226E  0100               	movlb	0	; () banked
   743  002270  6F79               	movwf	_step& (0+255),b
   744  002272                     l3922:
   745                           
   746                           ; BSR set to: 0
   747                           ;ABS_Code.c: 219: ADC_Read();
   748  002272  EC96  F013         	call	_ADC_Read	;wreg free
   749                           
   750                           ;ABS_Code.c: 221: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   751  002276  EC31  F014         	call	_CANisTXwarningON	;wreg free
   752  00227A  06E8               	decf	wreg,f,c
   753  00227C  B4D8               	btfsc	status,2,c
   754  00227E  D005               	goto	l682
   755  002280  EC37  F014         	call	_CANisRXwarningON	;wreg free
   756  002284  06E8               	decf	wreg,f,c
   757  002286  A4D8               	btfss	status,2,c
   758  002288  D002               	goto	l680
   759  00228A                     l682:
   760                           
   761                           ;ABS_Code.c: 222: PORTBbits.RB0 = 1;
   762  00228A  8081               	bsf	3969,0,c	;volatile
   763                           
   764                           ;ABS_Code.c: 223: } else {
   765  00228C  D001               	goto	l683
   766  00228E                     l680:
   767                           
   768                           ;ABS_Code.c: 224: PORTBbits.RB0 = 0;
   769  00228E  9081               	bcf	3969,0,c	;volatile
   770  002290                     l683:
   771                           
   772                           ;ABS_Code.c: 225: }
   773                           ;ABS_Code.c: 227: if ((remote_frame == 1) || (Tx_retry == 1)) {
   774  002290  B83D               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
   775  002292  D002               	goto	l686
   776  002294  A43D               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   777  002296  D003               	goto	l3932
   778  002298                     l686:
   779                           
   780                           ;ABS_Code.c: 228: remote_frame = 0;
   781  002298  983D               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   782                           
   783                           ;ABS_Code.c: 229: remote_frame_handler();
   784  00229A  EC79  F010         	call	_remote_frame_handler	;wreg free
   785  00229E                     l3932:
   786                           
   787                           ;ABS_Code.c: 230: }
   788                           ;ABS_Code.c: 232: if (Analogic_Mode == 0) {
   789  00229E  0100               	movlb	0	; () banked
   790  0022A0  5174               	movf	_Analogic_Mode& (0+255),w,b
   791  0022A2  A4D8               	btfss	status,2,c
   792  0022A4  D01E               	goto	l687
   793                           
   794                           ; BSR set to: 0
   795                           ;ABS_Code.c: 233: if (brake_signal_CAN == 00) {
   796  0022A6  0100               	movlb	0	; () banked
   797  0022A8  5175               	movf	_brake_signal_CAN& (0+255),w,b
   798  0022AA  A4D8               	btfss	status,2,c
   799  0022AC  D003               	goto	l3938
   800                           
   801                           ; BSR set to: 0
   802                           ;ABS_Code.c: 234: brake_value_inc = 0;
   803  0022AE  0E00               	movlw	0
   804  0022B0  0100               	movlb	0	; () banked
   805  0022B2  6F76               	movwf	_brake_value_inc& (0+255),b
   806  0022B4                     l3938:
   807                           
   808                           ; BSR set to: 0
   809                           ;ABS_Code.c: 235: }
   810                           ;ABS_Code.c: 236: if (brake_signal_CAN == 01) {
   811  0022B4  0100               	movlb	0	; () banked
   812  0022B6  0575               	decf	_brake_signal_CAN& (0+255),w,b
   813  0022B8  A4D8               	btfss	status,2,c
   814  0022BA  D003               	goto	l3942
   815                           
   816                           ; BSR set to: 0
   817                           ;ABS_Code.c: 237: brake_value_inc = 150;
   818  0022BC  0E96               	movlw	150
   819  0022BE  0100               	movlb	0	; () banked
   820  0022C0  6F76               	movwf	_brake_value_inc& (0+255),b
   821  0022C2                     l3942:
   822                           
   823                           ; BSR set to: 0
   824                           ;ABS_Code.c: 238: }
   825                           ;ABS_Code.c: 239: if (brake_signal_CAN == 10) {
   826  0022C2  0E0A               	movlw	10
   827  0022C4  0100               	movlb	0	; () banked
   828  0022C6  1975               	xorwf	_brake_signal_CAN& (0+255),w,b
   829  0022C8  A4D8               	btfss	status,2,c
   830  0022CA  D003               	goto	l3946
   831                           
   832                           ; BSR set to: 0
   833                           ;ABS_Code.c: 240: brake_value_inc = 200;
   834  0022CC  0EC8               	movlw	200
   835  0022CE  0100               	movlb	0	; () banked
   836  0022D0  6F76               	movwf	_brake_value_inc& (0+255),b
   837  0022D2                     l3946:
   838                           
   839                           ; BSR set to: 0
   840                           ;ABS_Code.c: 241: }
   841                           ;ABS_Code.c: 242: if (brake_signal_CAN == 11) {
   842  0022D2  0E0B               	movlw	11
   843  0022D4  0100               	movlb	0	; () banked
   844  0022D6  1975               	xorwf	_brake_signal_CAN& (0+255),w,b
   845  0022D8  A4D8               	btfss	status,2,c
   846  0022DA  D005               	goto	l3950
   847                           
   848                           ; BSR set to: 0
   849                           ;ABS_Code.c: 243: brake_value_inc = 255;
   850  0022DC  0100               	movlb	0	; () banked
   851  0022DE  6976               	setf	_brake_value_inc& (0+255),b
   852                           
   853                           ; BSR set to: 0
   854                           ;ABS_Code.c: 244: }
   855                           ;ABS_Code.c: 245: } else {
   856  0022E0  D002               	goto	l3950
   857  0022E2                     l687:
   858                           
   859                           ; BSR set to: 0
   860                           ;ABS_Code.c: 246: brake_value_inc = brake_signal_CAN;
   861  0022E2  C075  F076         	movff	_brake_signal_CAN,_brake_value_inc
   862  0022E6                     l3950:
   863                           
   864                           ; BSR set to: 0
   865                           ;ABS_Code.c: 247: }
   866                           ;ABS_Code.c: 249: brake_value = (brake_value_inc / 17) + home_position;
   867  0022E6  C076  F0B2         	movff	_brake_value_inc,___awdiv@dividend
   868  0022EA  0100               	movlb	0	; () banked
   869  0022EC  6BB3               	clrf	(___awdiv@dividend+1)& (0+255),b
   870  0022EE  0E00               	movlw	0
   871  0022F0  0100               	movlb	0	; () banked
   872  0022F2  6FB5               	movwf	(___awdiv@divisor+1)& (0+255),b
   873  0022F4  0E11               	movlw	17
   874  0022F6  6FB4               	movwf	___awdiv@divisor& (0+255),b
   875  0022F8  ECD5  F011         	call	___awdiv	;wreg free
   876  0022FC  0100               	movlb	0	; () banked
   877  0022FE  51B2               	movf	?___awdiv& (0+255),w,b
   878  002300  0100               	movlb	0	; () banked
   879  002302  2577               	addwf	_home_position& (0+255),w,b
   880  002304  0100               	movlb	0	; () banked
   881  002306  6F9B               	movwf	_brake_value& (0+255),b
   882                           
   883                           ; BSR set to: 0
   884                           ;ABS_Code.c: 250: brake_value_degree = (180 * brake_value) / 255;
   885  002308  0100               	movlb	0	; () banked
   886  00230A  519B               	movf	_brake_value& (0+255),w,b
   887  00230C  0DB4               	mullw	180
   888  00230E  CFF3 F0B2          	movff	prodl,___awdiv@dividend
   889  002312  CFF4 F0B3          	movff	prodh,___awdiv@dividend+1
   890  002316  0E00               	movlw	0
   891  002318  0100               	movlb	0	; () banked
   892  00231A  6FB5               	movwf	(___awdiv@divisor+1)& (0+255),b
   893  00231C  69B4               	setf	___awdiv@divisor& (0+255),b
   894  00231E  ECD5  F011         	call	___awdiv	;wreg free
   895  002322  0100               	movlb	0	; () banked
   896  002324  51B2               	movf	?___awdiv& (0+255),w,b
   897  002326  6E3C               	movwf	_brake_value_degree,c
   898                           
   899                           ; BSR set to: 0
   900                           ;ABS_Code.c: 252: if (ENC1_measure == 1) {
   901  002328  A03D               	btfss	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   902  00232A  D01E               	goto	l3962
   903                           
   904                           ; BSR set to: 0
   905                           ;ABS_Code.c: 253: wheel_speed_1 = (step * 36) / gap_time_1;
   906  00232C  0100               	movlb	0	; () banked
   907  00232E  5179               	movf	_step& (0+255),w,b
   908  002330  0D24               	mullw	36
   909  002332  CFF3 F0B2          	movff	prodl,___lldiv@dividend
   910  002336  CFF4 F0B3          	movff	prodh,___lldiv@dividend+1
   911  00233A  0100               	movlb	0	; () banked
   912  00233C  0E00               	movlw	0
   913  00233E  BFB3               	btfsc	(___lldiv@dividend+1)& (0+255),7,b
   914  002340  0EFF               	movlw	-1
   915  002342  6FB4               	movwf	(___lldiv@dividend+2)& (0+255),b
   916  002344  6FB5               	movwf	(___lldiv@dividend+3)& (0+255),b
   917  002346  C02C  F0B6         	movff	_gap_time_1,___lldiv@divisor
   918  00234A  C02D  F0B7         	movff	_gap_time_1+1,___lldiv@divisor+1
   919  00234E  C02E  F0B8         	movff	_gap_time_1+2,___lldiv@divisor+2
   920  002352  C02F  F0B9         	movff	_gap_time_1+3,___lldiv@divisor+3
   921  002356  EC34  F012         	call	___lldiv	;wreg free
   922  00235A  0100               	movlb	0	; () banked
   923  00235C  51B2               	movf	?___lldiv& (0+255),w,b
   924  00235E  0100               	movlb	0	; () banked
   925  002360  6F7A               	movwf	_wheel_speed_1& (0+255),b
   926                           
   927                           ; BSR set to: 0
   928                           ;ABS_Code.c: 254: speed_array[1] = wheel_speed_1;
   929  002362  C07A  F094         	movff	_wheel_speed_1,_speed_array+1
   930                           
   931                           ; BSR set to: 0
   932                           ;ABS_Code.c: 255: ENC1_measure = 0;
   933  002366  903D               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   934  002368                     l3962:
   935                           
   936                           ; BSR set to: 0
   937                           ;ABS_Code.c: 256: }
   938                           ;ABS_Code.c: 258: if (ENC2_measure == 1) {
   939  002368  A23D               	btfss	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
   940  00236A  D783               	goto	l3922
   941                           
   942                           ; BSR set to: 0
   943                           ;ABS_Code.c: 259: wheel_speed_2 = (step * 36) / gap_time_2;
   944  00236C  0100               	movlb	0	; () banked
   945  00236E  5179               	movf	_step& (0+255),w,b
   946  002370  0D24               	mullw	36
   947  002372  CFF3 F0B2          	movff	prodl,___lldiv@dividend
   948  002376  CFF4 F0B3          	movff	prodh,___lldiv@dividend+1
   949  00237A  0100               	movlb	0	; () banked
   950  00237C  0E00               	movlw	0
   951  00237E  BFB3               	btfsc	(___lldiv@dividend+1)& (0+255),7,b
   952  002380  0EFF               	movlw	-1
   953  002382  6FB4               	movwf	(___lldiv@dividend+2)& (0+255),b
   954  002384  6FB5               	movwf	(___lldiv@dividend+3)& (0+255),b
   955  002386  C030  F0B6         	movff	_gap_time_2,___lldiv@divisor
   956  00238A  C031  F0B7         	movff	_gap_time_2+1,___lldiv@divisor+1
   957  00238E  C032  F0B8         	movff	_gap_time_2+2,___lldiv@divisor+2
   958  002392  C033  F0B9         	movff	_gap_time_2+3,___lldiv@divisor+3
   959  002396  EC34  F012         	call	___lldiv	;wreg free
   960  00239A  0100               	movlb	0	; () banked
   961  00239C  51B2               	movf	?___lldiv& (0+255),w,b
   962  00239E  0100               	movlb	0	; () banked
   963  0023A0  6F7B               	movwf	_wheel_speed_2& (0+255),b
   964                           
   965                           ; BSR set to: 0
   966                           ;ABS_Code.c: 260: speed_array[0] = wheel_speed_2;
   967  0023A2  C07B  F093         	movff	_wheel_speed_2,_speed_array
   968                           
   969                           ; BSR set to: 0
   970                           ;ABS_Code.c: 261: ENC2_measure = 0;
   971  0023A6  923D               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
   972                           
   973                           ; BSR set to: 0
   974                           
   975                           ; BSR set to: 0
   976  0023A8  D764               	goto	l3922
   977  0023AA                     __end_of_main:
   978                           	opt stack 0
   979                           tblptru	equ	0xFF8
   980                           tblptrh	equ	0xFF7
   981                           tblptrl	equ	0xFF6
   982                           tablat	equ	0xFF5
   983                           prodh	equ	0xFF4
   984                           prodl	equ	0xFF3
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           postdec1	equ	0xFE5
   988                           fsr1l	equ	0xFE1
   989                           status	equ	0xFD8
   990                           
   991 ;; *************** function _remote_frame_handler *****************
   992 ;; Defined at:
   993 ;;		line 271 in file "ABS_Code.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;		None               void
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1007 ;;      Params:         0       0       0       0
  1008 ;;      Locals:         0       0       0       0
  1009 ;;      Temps:          0       0       0       0
  1010 ;;      Totals:         0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    5
  1014 ;; This function calls:
  1015 ;;		_CANisTxReady
  1016 ;;		_CANsendMessage
  1017 ;;		___wmul
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text1
  1024  0020F2                     __ptext1:
  1025                           	opt stack 0
  1026  0020F2                     _remote_frame_handler:
  1027                           	opt stack 25
  1028                           
  1029                           ;ABS_Code.c: 272: if (CANisTxReady()) {
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;incstack = 0
  1033  0020F2  EC00  F014         	call	_CANisTxReady	;wreg free
  1034  0020F6  0900               	iorlw	0
  1035  0020F8  B4D8               	btfsc	status,2,c
  1036  0020FA  D0B4               	goto	l700
  1037                           
  1038                           ;ABS_Code.c: 273: if (remote_frame_id == 0b00000000000000000000000000100) {
  1039  0020FC  0E04               	movlw	4
  1040  0020FE  0100               	movlb	0	; () banked
  1041  002100  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1042  002102  0100               	movlb	0	; () banked
  1043  002104  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1044  002106  0100               	movlb	0	; () banked
  1045  002108  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1046  00210A  0100               	movlb	0	; () banked
  1047  00210C  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1048  00210E  A4D8               	btfss	status,2,c
  1049  002110  D016               	goto	l3702
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;ABS_Code.c: 274: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1053  002112  C068  F0B2         	movff	_remote_frame_id,CANsendMessage@identifier
  1054  002116  C069  F0B3         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1055  00211A  C06A  F0B4         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1056  00211E  C06B  F0B5         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1057  002122  0ECD               	movlw	low _status_array
  1058  002124  0100               	movlb	0	; () banked
  1059  002126  6FB6               	movwf	CANsendMessage@data& (0+255),b
  1060  002128  0E00               	movlw	high _status_array
  1061  00212A  0100               	movlb	0	; () banked
  1062  00212C  6FB7               	movwf	(CANsendMessage@data+1)& (0+255),b
  1063  00212E  0E08               	movlw	8
  1064  002130  0100               	movlb	0	; () banked
  1065  002132  6FB8               	movwf	CANsendMessage@dataLength& (0+255),b
  1066  002134  0EBC               	movlw	188
  1067  002136  0100               	movlb	0	; () banked
  1068  002138  6FB9               	movwf	CANsendMessage@flags& (0+255),b
  1069  00213A  EC05  F006         	call	_CANsendMessage	;wreg free
  1070  00213E                     l3702:
  1071                           
  1072                           ;ABS_Code.c: 275: }
  1073                           ;ABS_Code.c: 276: if (remote_frame_id == 0b00000000000000000000000001000) {
  1074  00213E  0E08               	movlw	8
  1075  002140  0100               	movlb	0	; () banked
  1076  002142  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1077  002144  0100               	movlb	0	; () banked
  1078  002146  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1079  002148  0100               	movlb	0	; () banked
  1080  00214A  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1081  00214C  0100               	movlb	0	; () banked
  1082  00214E  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1083  002150  A4D8               	btfss	status,2,c
  1084  002152  D016               	goto	l3706
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;ABS_Code.c: 277: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1088  002154  C068  F0B2         	movff	_remote_frame_id,CANsendMessage@identifier
  1089  002158  C069  F0B3         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1090  00215C  C06A  F0B4         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1091  002160  C06B  F0B5         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1092  002164  0E93               	movlw	low _speed_array
  1093  002166  0100               	movlb	0	; () banked
  1094  002168  6FB6               	movwf	CANsendMessage@data& (0+255),b
  1095  00216A  0E00               	movlw	high _speed_array
  1096  00216C  0100               	movlb	0	; () banked
  1097  00216E  6FB7               	movwf	(CANsendMessage@data+1)& (0+255),b
  1098  002170  0E08               	movlw	8
  1099  002172  0100               	movlb	0	; () banked
  1100  002174  6FB8               	movwf	CANsendMessage@dataLength& (0+255),b
  1101  002176  0EBC               	movlw	188
  1102  002178  0100               	movlb	0	; () banked
  1103  00217A  6FB9               	movwf	CANsendMessage@flags& (0+255),b
  1104  00217C  EC05  F006         	call	_CANsendMessage	;wreg free
  1105  002180                     l3706:
  1106                           
  1107                           ;ABS_Code.c: 278: }
  1108                           ;ABS_Code.c: 279: if (remote_frame_id == 0b00000000000000000000000001010) {
  1109  002180  0E0A               	movlw	10
  1110  002182  0100               	movlb	0	; () banked
  1111  002184  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1112  002186  0100               	movlb	0	; () banked
  1113  002188  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1114  00218A  0100               	movlb	0	; () banked
  1115  00218C  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1116  00218E  0100               	movlb	0	; () banked
  1117  002190  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1118  002192  A4D8               	btfss	status,2,c
  1119  002194  D013               	goto	l3712
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;ABS_Code.c: 280: int_counter_1 = 0;
  1123  002196  0E00               	movlw	0
  1124  002198  0100               	movlb	0	; () banked
  1125  00219A  6F60               	movwf	_int_counter_1& (0+255),b
  1126  00219C  0E00               	movlw	0
  1127  00219E  6F61               	movwf	(_int_counter_1+1)& (0+255),b
  1128  0021A0  0E00               	movlw	0
  1129  0021A2  6F62               	movwf	(_int_counter_1+2)& (0+255),b
  1130  0021A4  0E00               	movlw	0
  1131  0021A6  6F63               	movwf	(_int_counter_1+3)& (0+255),b
  1132                           
  1133                           ;ABS_Code.c: 281: int_counter_2 = 0;
  1134  0021A8  0E00               	movlw	0
  1135  0021AA  0100               	movlb	0	; () banked
  1136  0021AC  6F64               	movwf	_int_counter_2& (0+255),b
  1137  0021AE  0E00               	movlw	0
  1138  0021B0  6F65               	movwf	(_int_counter_2+1)& (0+255),b
  1139  0021B2  0E00               	movlw	0
  1140  0021B4  6F66               	movwf	(_int_counter_2+2)& (0+255),b
  1141  0021B6  0E00               	movlw	0
  1142  0021B8  6F67               	movwf	(_int_counter_2+3)& (0+255),b
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;ABS_Code.c: 282: count_flag = 1;
  1146  0021BA  863D               	bsf	_count_flag/(0+8),_count_flag& (0+7),c
  1147  0021BC                     l3712:
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;ABS_Code.c: 283: }
  1151                           ;ABS_Code.c: 284: if (remote_frame_id == 0b00000000000000000000000001011) {
  1152  0021BC  0E0B               	movlw	11
  1153  0021BE  0100               	movlb	0	; () banked
  1154  0021C0  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1155  0021C2  0100               	movlb	0	; () banked
  1156  0021C4  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1157  0021C6  0100               	movlb	0	; () banked
  1158  0021C8  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1159  0021CA  0100               	movlb	0	; () banked
  1160  0021CC  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1161  0021CE  A4D8               	btfss	status,2,c
  1162  0021D0  D03F               	goto	l3728
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;ABS_Code.c: 285: distance_1 = step * (int_counter_1);
  1166  0021D2  C079  F0B2         	movff	_step,___wmul@multiplier
  1167  0021D6  0100               	movlb	0	; () banked
  1168  0021D8  6BB3               	clrf	(___wmul@multiplier+1)& (0+255),b
  1169  0021DA  C060  F0B4         	movff	_int_counter_1,___wmul@multiplicand
  1170  0021DE  C061  F0B5         	movff	_int_counter_1+1,___wmul@multiplicand+1
  1171  0021E2  ECD2  F013         	call	___wmul	;wreg free
  1172  0021E6  C0B2  F070         	movff	?___wmul,_distance_1
  1173  0021EA  C0B3  F071         	movff	?___wmul+1,_distance_1+1
  1174                           
  1175                           ;ABS_Code.c: 286: distance_2 = step * (int_counter_2);
  1176  0021EE  C079  F0B2         	movff	_step,___wmul@multiplier
  1177  0021F2  0100               	movlb	0	; () banked
  1178  0021F4  6BB3               	clrf	(___wmul@multiplier+1)& (0+255),b
  1179  0021F6  C064  F0B4         	movff	_int_counter_2,___wmul@multiplicand
  1180  0021FA  C065  F0B5         	movff	_int_counter_2+1,___wmul@multiplicand+1
  1181  0021FE  ECD2  F013         	call	___wmul	;wreg free
  1182  002202  C0B2  F072         	movff	?___wmul,_distance_2
  1183  002206  C0B3  F073         	movff	?___wmul+1,_distance_2+1
  1184                           
  1185                           ;ABS_Code.c: 287: count_flag = 0;
  1186  00220A  963D               	bcf	_count_flag/(0+8),_count_flag& (0+7),c
  1187                           
  1188                           ;ABS_Code.c: 288: distance_array[0] = distance_1;
  1189  00220C  C070  F08B         	movff	_distance_1,_distance_array
  1190                           
  1191                           ;ABS_Code.c: 289: distance_array[1] = distance_1 >> 8;
  1192  002210  0100               	movlb	0	; () banked
  1193  002212  5171               	movf	(_distance_1+1)& (0+255),w,b
  1194  002214  0100               	movlb	0	; () banked
  1195  002216  6F8C               	movwf	(_distance_array+1)& (0+255),b
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;ABS_Code.c: 290: distance_array[2] = distance_2;
  1199  002218  C072  F08D         	movff	_distance_2,_distance_array+2
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;ABS_Code.c: 291: distance_array[3] = distance_2 >> 8;
  1203  00221C  0100               	movlb	0	; () banked
  1204  00221E  5173               	movf	(_distance_2+1)& (0+255),w,b
  1205  002220  0100               	movlb	0	; () banked
  1206  002222  6F8E               	movwf	(_distance_array+3)& (0+255),b
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;ABS_Code.c: 292: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1210  002224  C068  F0B2         	movff	_remote_frame_id,CANsendMessage@identifier
  1211  002228  C069  F0B3         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1212  00222C  C06A  F0B4         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1213  002230  C06B  F0B5         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1214  002234  0E8B               	movlw	low _distance_array
  1215  002236  0100               	movlb	0	; () banked
  1216  002238  6FB6               	movwf	CANsendMessage@data& (0+255),b
  1217  00223A  0E00               	movlw	high _distance_array
  1218  00223C  0100               	movlb	0	; () banked
  1219  00223E  6FB7               	movwf	(CANsendMessage@data+1)& (0+255),b
  1220  002240  0E08               	movlw	8
  1221  002242  0100               	movlb	0	; () banked
  1222  002244  6FB8               	movwf	CANsendMessage@dataLength& (0+255),b
  1223  002246  0EBC               	movlw	188
  1224  002248  0100               	movlb	0	; () banked
  1225  00224A  6FB9               	movwf	CANsendMessage@flags& (0+255),b
  1226  00224C  EC05  F006         	call	_CANsendMessage	;wreg free
  1227  002250                     l3728:
  1228                           
  1229                           ;ABS_Code.c: 293: }
  1230                           ;ABS_Code.c: 294: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1231  002250  010F               	movlb	15	; () banked
  1232  002252  BD40               	btfsc	64,6,b	;volatile
  1233  002254  D003               	goto	l707
  1234                           
  1235                           ; BSR set to: 15
  1236  002256  010F               	movlb	15	; () banked
  1237  002258  AD30               	btfss	48,6,b	;volatile
  1238  00225A  D002               	goto	l705
  1239  00225C                     l707:
  1240                           
  1241                           ; BSR set to: 15
  1242                           ;ABS_Code.c: 295: Tx_retry = 1;
  1243  00225C  843D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1244                           
  1245                           ;ABS_Code.c: 296: } else {
  1246  00225E  0012               	return	
  1247  002260                     l705:
  1248                           
  1249                           ; BSR set to: 15
  1250                           ;ABS_Code.c: 297: Tx_retry = 0;
  1251  002260  943D               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1252                           
  1253                           ; BSR set to: 15
  1254                           ;ABS_Code.c: 298: }
  1255                           ;ABS_Code.c: 299: } else {
  1256  002262  0012               	return	
  1257  002264                     l700:
  1258                           
  1259                           ;ABS_Code.c: 300: Tx_retry = 1;
  1260  002264  843D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1261  002266  0012               	return	
  1262  002268                     __end_of_remote_frame_handler:
  1263                           	opt stack 0
  1264                           tblptru	equ	0xFF8
  1265                           tblptrh	equ	0xFF7
  1266                           tblptrl	equ	0xFF6
  1267                           tablat	equ	0xFF5
  1268                           prodh	equ	0xFF4
  1269                           prodl	equ	0xFF3
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _CANsendMessage *****************
  1277 ;; Defined at:
  1278 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  identifier      4   22[BANK0 ] unsigned long 
  1281 ;;  data            2   26[BANK0 ] PTR unsigned char 
  1282 ;;		 -> distance_array(8), status_array(8), speed_array(8), 
  1283 ;;  dataLength      1   28[BANK0 ] unsigned char 
  1284 ;;  flags           1   29[BANK0 ] enum E16866
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  tamp            4   34[BANK0 ] unsigned long 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1296 ;;      Params:         0       8       0       0
  1297 ;;      Locals:         0       4       0       0
  1298 ;;      Temps:          0       4       0       0
  1299 ;;      Totals:         0      16       0       0
  1300 ;;Total ram usage:       16 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    4
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_remote_frame_handler
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text2
  1311  000C0A                     __ptext2:
  1312                           	opt stack 0
  1313  000C0A                     _CANsendMessage:
  1314                           	opt stack 25
  1315                           
  1316                           ;inc\CANlib.h: 296: unsigned long tamp;
  1317                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1318                           
  1319                           ;incstack = 0
  1320  000C0A  010F               	movlb	15	; () banked
  1321  000C0C  B740               	btfsc	64,3,b	;volatile
  1322  000C0E  D13F               	goto	l373
  1323                           
  1324                           ; BSR set to: 15
  1325                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1326  000C10  C0B8  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1327                           
  1328                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1329  000C14  0100               	movlb	0	; () banked
  1330  000C16  ADB9               	btfss	CANsendMessage@flags& (0+255),6,b
  1331  000C18  D003               	goto	l374
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1335  000C1A  010F               	movlb	15	; () banked
  1336  000C1C  8D45               	bsf	69,6,b	;volatile
  1337  000C1E  D002               	goto	l375
  1338  000C20                     l374:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;inc\CANlib.h: 302: else
  1342                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1343  000C20  010F               	movlb	15	; () banked
  1344  000C22  9D45               	bcf	69,6,b	;volatile
  1345  000C24                     l375:
  1346                           
  1347                           ; BSR set to: 15
  1348                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1349  000C24  0100               	movlb	0	; () banked
  1350  000C26  A7B9               	btfss	CANsendMessage@flags& (0+255),3,b
  1351  000C28  D079               	goto	l376
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;inc\CANlib.h: 306: {
  1355                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1356  000C2A  0100               	movlb	0	; () banked
  1357  000C2C  51B2               	movf	CANsendMessage@identifier& (0+255),w,b
  1358  000C2E  0100               	movlb	0	; () banked
  1359  000C30  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1360  000C32  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1361  000C34  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1362  000C36  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1366  000C38  C0BE  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1370  000C3C  0E00               	movlw	0
  1371  000C3E  0100               	movlb	0	; () banked
  1372  000C40  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  1373  000C42  0100               	movlb	0	; () banked
  1374  000C44  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1375  000C46  0EFF               	movlw	255
  1376  000C48  0100               	movlb	0	; () banked
  1377  000C4A  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1378  000C4C  0100               	movlb	0	; () banked
  1379  000C4E  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1380  000C50  0E00               	movlw	0
  1381  000C52  0100               	movlb	0	; () banked
  1382  000C54  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1383  000C56  0100               	movlb	0	; () banked
  1384  000C58  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1385  000C5A  0E00               	movlw	0
  1386  000C5C  0100               	movlb	0	; () banked
  1387  000C5E  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1388  000C60  0100               	movlb	0	; () banked
  1389  000C62  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1393  000C64  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  1394  000C68  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1395  000C6C  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1396  000C70  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1397  000C74  C0BB  F0BA         	movff	??_CANsendMessage+1,??_CANsendMessage
  1398  000C78  C0BC  F0BB         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1399  000C7C  C0BD  F0BC         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1400  000C80  0100               	movlb	0	; () banked
  1401  000C82  6BBD               	clrf	(??_CANsendMessage+3)& (0+255),b
  1402  000C84  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1403  000C88  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1404  000C8C  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1405  000C90  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1409  000C94  C0BE  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1413  000C98  0E00               	movlw	0
  1414  000C9A  010F               	movlb	15	; () banked
  1415  000C9C  6F42               	movwf	66,b	;volatile
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1419  000C9E  010F               	movlb	15	; () banked
  1420  000CA0  8742               	bsf	66,3,b	;volatile
  1421                           
  1422                           ; BSR set to: 15
  1423                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1424  000CA2  0100               	movlb	0	; () banked
  1425  000CA4  A1B4               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1426  000CA6  D002               	goto	l377
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1430  000CA8  010F               	movlb	15	; () banked
  1431  000CAA  8142               	bsf	66,0,b	;volatile
  1432  000CAC                     l377:
  1433                           
  1434                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1435  000CAC  0100               	movlb	0	; () banked
  1436  000CAE  A3B4               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1437  000CB0  D002               	goto	l378
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1441  000CB2  010F               	movlb	15	; () banked
  1442  000CB4  8342               	bsf	66,1,b	;volatile
  1443  000CB6                     l378:
  1444                           
  1445                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1446  000CB6  0100               	movlb	0	; () banked
  1447  000CB8  A5B4               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1448  000CBA  D002               	goto	l379
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1452  000CBC  010F               	movlb	15	; () banked
  1453  000CBE  8B42               	bsf	66,5,b	;volatile
  1454  000CC0                     l379:
  1455                           
  1456                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1457  000CC0  0100               	movlb	0	; () banked
  1458  000CC2  A7B4               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1459  000CC4  D002               	goto	l380
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1463  000CC6  010F               	movlb	15	; () banked
  1464  000CC8  8D42               	bsf	66,6,b	;volatile
  1465  000CCA                     l380:
  1466                           
  1467                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1468  000CCA  0100               	movlb	0	; () banked
  1469  000CCC  A9B4               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1470  000CCE  D002               	goto	l3178
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1474  000CD0  010F               	movlb	15	; () banked
  1475  000CD2  8F42               	bsf	66,7,b	;volatile
  1476  000CD4                     l3178:
  1477                           
  1478                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1479  000CD4  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1480  000CD8  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1481  000CDC  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1482  000CE0  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1483  000CE4  0E16               	movlw	22
  1484  000CE6  D006               	goto	u3340
  1485  000CE8                     u3345:
  1486  000CE8  0100               	movlb	0	; () banked
  1487  000CEA  90D8               	bcf	status,0,c
  1488  000CEC  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1489  000CEE  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1490  000CF0  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1491  000CF2  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1492  000CF4                     u3340:
  1493  000CF4  2EE8               	decfsz	wreg,f,c
  1494  000CF6  D7F8               	goto	u3345
  1495  000CF8  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1496  000CFC  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1497  000D00  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1498  000D04  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1502  000D08  0100               	movlb	0	; () banked
  1503  000D0A  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1504  000D0C  0100               	movlb	0	; () banked
  1505  000D0E  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1506  000D10  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1507  000D12  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1508  000D14  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1512  000D16  C0BE  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1513                           
  1514                           ;inc\CANlib.h: 332: }
  1515  000D1A  D059               	goto	l3198
  1516  000D1C                     l376:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;inc\CANlib.h: 334: else
  1520                           ;inc\CANlib.h: 336: {
  1521                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1522  000D1C  010F               	movlb	15	; () banked
  1523  000D1E  9742               	bcf	66,3,b	;volatile
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1527  000D20  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1528  000D24  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1529  000D28  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1530  000D2C  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1531  000D30  0E04               	movlw	4
  1532  000D32  D006               	goto	u3350
  1533  000D34                     u3355:
  1534  000D34  0100               	movlb	0	; () banked
  1535  000D36  90D8               	bcf	status,0,c
  1536  000D38  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1537  000D3A  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1538  000D3C  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1539  000D3E  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1540  000D40                     u3350:
  1541  000D40  2EE8               	decfsz	wreg,f,c
  1542  000D42  D7F8               	goto	u3355
  1543  000D44  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1544  000D48  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1545  000D4C  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1546  000D50  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1550  000D54  0100               	movlb	0	; () banked
  1551  000D56  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1552  000D58  0100               	movlb	0	; () banked
  1553  000D5A  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1554  000D5C  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1555  000D5E  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1556  000D60  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1560  000D62  C0BE  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1564  000D66  0E07               	movlw	7
  1565  000D68  0100               	movlb	0	; () banked
  1566  000D6A  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  1567  000D6C  0100               	movlb	0	; () banked
  1568  000D6E  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1569  000D70  0E00               	movlw	0
  1570  000D72  0100               	movlb	0	; () banked
  1571  000D74  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1572  000D76  0100               	movlb	0	; () banked
  1573  000D78  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1574  000D7A  0E00               	movlw	0
  1575  000D7C  0100               	movlb	0	; () banked
  1576  000D7E  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1577  000D80  0100               	movlb	0	; () banked
  1578  000D82  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1579  000D84  0E00               	movlw	0
  1580  000D86  0100               	movlb	0	; () banked
  1581  000D88  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1582  000D8A  0100               	movlb	0	; () banked
  1583  000D8C  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1587  000D8E  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  1588  000D92  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1589  000D96  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1590  000D9A  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1591  000D9E  0E05               	movlw	5
  1592  000DA0                     u3365:
  1593  000DA0  90D8               	bcf	status,0,c
  1594  000DA2  0100               	movlb	0	; () banked
  1595  000DA4  37BA               	rlcf	??_CANsendMessage& (0+255),f,b
  1596  000DA6  37BB               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1597  000DA8  37BC               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1598  000DAA  37BD               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1599  000DAC  2EE8               	decfsz	wreg,f,c
  1600  000DAE  D7F8               	goto	u3365
  1601  000DB0  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1602  000DB4  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1603  000DB8  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1604  000DBC  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1608  000DC0  010F               	movlb	15	; () banked
  1609  000DC2  5142               	movf	66,w,b	;volatile
  1610  000DC4  0B1F               	andlw	31
  1611  000DC6  010F               	movlb	15	; () banked
  1612  000DC8  6F42               	movwf	66,b	;volatile
  1613                           
  1614                           ; BSR set to: 15
  1615                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1616  000DCA  C0BE  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1617  000DCE                     l3198:
  1618                           
  1619                           ;inc\CANlib.h: 347: }
  1620                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1621  000DCE  0100               	movlb	0	; () banked
  1622  000DD0  A1B9               	btfss	CANsendMessage@flags& (0+255),0,b
  1623  000DD2  D003               	goto	l383
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1627  000DD4  010F               	movlb	15	; () banked
  1628  000DD6  8140               	bsf	64,0,b	;volatile
  1629  000DD8  D002               	goto	l384
  1630  000DDA                     l383:
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;inc\CANlib.h: 351: else
  1634                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1635  000DDA  010F               	movlb	15	; () banked
  1636  000DDC  9140               	bcf	64,0,b	;volatile
  1637  000DDE                     l384:
  1638                           
  1639                           ; BSR set to: 15
  1640                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1641  000DDE  0100               	movlb	0	; () banked
  1642  000DE0  A3B9               	btfss	CANsendMessage@flags& (0+255),1,b
  1643  000DE2  D003               	goto	l385
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1647  000DE4  010F               	movlb	15	; () banked
  1648  000DE6  8340               	bsf	64,1,b	;volatile
  1649  000DE8  D002               	goto	l3204
  1650  000DEA                     l385:
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;inc\CANlib.h: 355: else
  1654                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1655  000DEA  010F               	movlb	15	; () banked
  1656  000DEC  9340               	bcf	64,1,b	;volatile
  1657  000DEE                     l3204:
  1658                           
  1659                           ; BSR set to: 15
  1660                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1661  000DEE  C0B6  FFD9         	movff	CANsendMessage@data,fsr2l
  1662  000DF2  C0B7  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1663  000DF6  50DF               	movf	indf2,w,c
  1664  000DF8  010F               	movlb	15	; () banked
  1665  000DFA  6F46               	movwf	70,b	;volatile
  1666                           
  1667                           ; BSR set to: 15
  1668                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1669  000DFC  0100               	movlb	0	; () banked
  1670  000DFE  EE20 F001          	lfsr	2,1
  1671  000E02  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1672  000E04  26D9               	addwf	fsr2l,f,c
  1673  000E06  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1674  000E08  22DA               	addwfc	fsr2h,f,c
  1675  000E0A  50DF               	movf	indf2,w,c
  1676  000E0C  010F               	movlb	15	; () banked
  1677  000E0E  6F47               	movwf	71,b	;volatile
  1678                           
  1679                           ; BSR set to: 15
  1680                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1681  000E10  0100               	movlb	0	; () banked
  1682  000E12  EE20 F002          	lfsr	2,2
  1683  000E16  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1684  000E18  26D9               	addwf	fsr2l,f,c
  1685  000E1A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1686  000E1C  22DA               	addwfc	fsr2h,f,c
  1687  000E1E  50DF               	movf	indf2,w,c
  1688  000E20  010F               	movlb	15	; () banked
  1689  000E22  6F48               	movwf	72,b	;volatile
  1690                           
  1691                           ; BSR set to: 15
  1692                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1693  000E24  0100               	movlb	0	; () banked
  1694  000E26  EE20 F003          	lfsr	2,3
  1695  000E2A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1696  000E2C  26D9               	addwf	fsr2l,f,c
  1697  000E2E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1698  000E30  22DA               	addwfc	fsr2h,f,c
  1699  000E32  50DF               	movf	indf2,w,c
  1700  000E34  010F               	movlb	15	; () banked
  1701  000E36  6F49               	movwf	73,b	;volatile
  1702                           
  1703                           ; BSR set to: 15
  1704                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1705  000E38  0100               	movlb	0	; () banked
  1706  000E3A  EE20 F004          	lfsr	2,4
  1707  000E3E  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1708  000E40  26D9               	addwf	fsr2l,f,c
  1709  000E42  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1710  000E44  22DA               	addwfc	fsr2h,f,c
  1711  000E46  50DF               	movf	indf2,w,c
  1712  000E48  010F               	movlb	15	; () banked
  1713  000E4A  6F4A               	movwf	74,b	;volatile
  1714                           
  1715                           ; BSR set to: 15
  1716                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1717  000E4C  0100               	movlb	0	; () banked
  1718  000E4E  EE20 F005          	lfsr	2,5
  1719  000E52  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1720  000E54  26D9               	addwf	fsr2l,f,c
  1721  000E56  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1722  000E58  22DA               	addwfc	fsr2h,f,c
  1723  000E5A  50DF               	movf	indf2,w,c
  1724  000E5C  010F               	movlb	15	; () banked
  1725  000E5E  6F4B               	movwf	75,b	;volatile
  1726                           
  1727                           ; BSR set to: 15
  1728                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1729  000E60  0100               	movlb	0	; () banked
  1730  000E62  EE20 F006          	lfsr	2,6
  1731  000E66  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1732  000E68  26D9               	addwf	fsr2l,f,c
  1733  000E6A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1734  000E6C  22DA               	addwfc	fsr2h,f,c
  1735  000E6E  50DF               	movf	indf2,w,c
  1736  000E70  010F               	movlb	15	; () banked
  1737  000E72  6F4C               	movwf	76,b	;volatile
  1738                           
  1739                           ; BSR set to: 15
  1740                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1741  000E74  0100               	movlb	0	; () banked
  1742  000E76  EE20 F007          	lfsr	2,7
  1743  000E7A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  1744  000E7C  26D9               	addwf	fsr2l,f,c
  1745  000E7E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1746  000E80  22DA               	addwfc	fsr2h,f,c
  1747  000E82  50DF               	movf	indf2,w,c
  1748  000E84  010F               	movlb	15	; () banked
  1749  000E86  6F4D               	movwf	77,b	;volatile
  1750                           
  1751                           ; BSR set to: 15
  1752                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1753  000E88  010F               	movlb	15	; () banked
  1754  000E8A  8740               	bsf	64,3,b	;volatile
  1755                           
  1756                           ; BSR set to: 15
  1757                           ;inc\CANlib.h: 368: return;
  1758  000E8C  0012               	return	
  1759  000E8E                     l373:
  1760                           
  1761                           ; BSR set to: 15
  1762                           ;inc\CANlib.h: 369: }
  1763                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1764  000E8E  010F               	movlb	15	; () banked
  1765  000E90  B730               	btfsc	48,3,b	;volatile
  1766  000E92  D13F               	goto	l388
  1767                           
  1768                           ; BSR set to: 15
  1769                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1770  000E94  C0B8  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1771                           
  1772                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1773  000E98  0100               	movlb	0	; () banked
  1774  000E9A  ADB9               	btfss	CANsendMessage@flags& (0+255),6,b
  1775  000E9C  D003               	goto	l389
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1779  000E9E  010F               	movlb	15	; () banked
  1780  000EA0  8D35               	bsf	53,6,b	;volatile
  1781  000EA2  D002               	goto	l390
  1782  000EA4                     l389:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;inc\CANlib.h: 378: else
  1786                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1787  000EA4  010F               	movlb	15	; () banked
  1788  000EA6  9D35               	bcf	53,6,b	;volatile
  1789  000EA8                     l390:
  1790                           
  1791                           ; BSR set to: 15
  1792                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1793  000EA8  0100               	movlb	0	; () banked
  1794  000EAA  A7B9               	btfss	CANsendMessage@flags& (0+255),3,b
  1795  000EAC  D079               	goto	l391
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;inc\CANlib.h: 382: {
  1799                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1800  000EAE  0100               	movlb	0	; () banked
  1801  000EB0  51B2               	movf	CANsendMessage@identifier& (0+255),w,b
  1802  000EB2  0100               	movlb	0	; () banked
  1803  000EB4  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1804  000EB6  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1805  000EB8  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1806  000EBA  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1810  000EBC  C0BE  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1814  000EC0  0E00               	movlw	0
  1815  000EC2  0100               	movlb	0	; () banked
  1816  000EC4  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  1817  000EC6  0100               	movlb	0	; () banked
  1818  000EC8  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1819  000ECA  0EFF               	movlw	255
  1820  000ECC  0100               	movlb	0	; () banked
  1821  000ECE  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1822  000ED0  0100               	movlb	0	; () banked
  1823  000ED2  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1824  000ED4  0E00               	movlw	0
  1825  000ED6  0100               	movlb	0	; () banked
  1826  000ED8  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1827  000EDA  0100               	movlb	0	; () banked
  1828  000EDC  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1829  000EDE  0E00               	movlw	0
  1830  000EE0  0100               	movlb	0	; () banked
  1831  000EE2  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1832  000EE4  0100               	movlb	0	; () banked
  1833  000EE6  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1837  000EE8  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  1838  000EEC  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1839  000EF0  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1840  000EF4  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1841  000EF8  C0BB  F0BA         	movff	??_CANsendMessage+1,??_CANsendMessage
  1842  000EFC  C0BC  F0BB         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1843  000F00  C0BD  F0BC         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1844  000F04  0100               	movlb	0	; () banked
  1845  000F06  6BBD               	clrf	(??_CANsendMessage+3)& (0+255),b
  1846  000F08  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1847  000F0C  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1848  000F10  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1849  000F14  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1853  000F18  C0BE  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1857  000F1C  0E00               	movlw	0
  1858  000F1E  010F               	movlb	15	; () banked
  1859  000F20  6F32               	movwf	50,b	;volatile
  1860                           
  1861                           ; BSR set to: 15
  1862                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1863  000F22  010F               	movlb	15	; () banked
  1864  000F24  8732               	bsf	50,3,b	;volatile
  1865                           
  1866                           ; BSR set to: 15
  1867                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1868  000F26  0100               	movlb	0	; () banked
  1869  000F28  A1B4               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1870  000F2A  D002               	goto	l392
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1874  000F2C  010F               	movlb	15	; () banked
  1875  000F2E  8132               	bsf	50,0,b	;volatile
  1876  000F30                     l392:
  1877                           
  1878                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1879  000F30  0100               	movlb	0	; () banked
  1880  000F32  A3B4               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1881  000F34  D002               	goto	l393
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1885  000F36  010F               	movlb	15	; () banked
  1886  000F38  8332               	bsf	50,1,b	;volatile
  1887  000F3A                     l393:
  1888                           
  1889                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1890  000F3A  0100               	movlb	0	; () banked
  1891  000F3C  A5B4               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1892  000F3E  D002               	goto	l394
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1896  000F40  010F               	movlb	15	; () banked
  1897  000F42  8B32               	bsf	50,5,b	;volatile
  1898  000F44                     l394:
  1899                           
  1900                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1901  000F44  0100               	movlb	0	; () banked
  1902  000F46  A7B4               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1903  000F48  D002               	goto	l395
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1907  000F4A  010F               	movlb	15	; () banked
  1908  000F4C  8D32               	bsf	50,6,b	;volatile
  1909  000F4E                     l395:
  1910                           
  1911                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1912  000F4E  0100               	movlb	0	; () banked
  1913  000F50  A9B4               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1914  000F52  D002               	goto	l3254
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1918  000F54  010F               	movlb	15	; () banked
  1919  000F56  8F32               	bsf	50,7,b	;volatile
  1920  000F58                     l3254:
  1921                           
  1922                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1923  000F58  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1924  000F5C  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1925  000F60  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1926  000F64  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1927  000F68  0E16               	movlw	22
  1928  000F6A  D006               	goto	u3470
  1929  000F6C                     u3475:
  1930  000F6C  0100               	movlb	0	; () banked
  1931  000F6E  90D8               	bcf	status,0,c
  1932  000F70  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1933  000F72  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1934  000F74  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1935  000F76  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1936  000F78                     u3470:
  1937  000F78  2EE8               	decfsz	wreg,f,c
  1938  000F7A  D7F8               	goto	u3475
  1939  000F7C  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1940  000F80  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1941  000F84  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1942  000F88  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1946  000F8C  0100               	movlb	0	; () banked
  1947  000F8E  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1948  000F90  0100               	movlb	0	; () banked
  1949  000F92  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1950  000F94  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1951  000F96  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1952  000F98  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1956  000F9A  C0BE  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1957                           
  1958                           ;inc\CANlib.h: 407: }
  1959  000F9E  D059               	goto	l3274
  1960  000FA0                     l391:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;inc\CANlib.h: 409: else
  1964                           ;inc\CANlib.h: 411: {
  1965                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1966  000FA0  010F               	movlb	15	; () banked
  1967  000FA2  9732               	bcf	50,3,b	;volatile
  1968                           
  1969                           ; BSR set to: 15
  1970                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1971  000FA4  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  1972  000FA8  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1973  000FAC  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1974  000FB0  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1975  000FB4  0E04               	movlw	4
  1976  000FB6  D006               	goto	u3480
  1977  000FB8                     u3485:
  1978  000FB8  0100               	movlb	0	; () banked
  1979  000FBA  90D8               	bcf	status,0,c
  1980  000FBC  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1981  000FBE  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1982  000FC0  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1983  000FC2  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  1984  000FC4                     u3480:
  1985  000FC4  2EE8               	decfsz	wreg,f,c
  1986  000FC6  D7F8               	goto	u3485
  1987  000FC8  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  1988  000FCC  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1989  000FD0  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1990  000FD4  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1994  000FD8  0100               	movlb	0	; () banked
  1995  000FDA  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  1996  000FDC  0100               	movlb	0	; () banked
  1997  000FDE  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  1998  000FE0  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1999  000FE2  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2000  000FE4  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2004  000FE6  C0BE  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2008  000FEA  0E07               	movlw	7
  2009  000FEC  0100               	movlb	0	; () banked
  2010  000FEE  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  2011  000FF0  0100               	movlb	0	; () banked
  2012  000FF2  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2013  000FF4  0E00               	movlw	0
  2014  000FF6  0100               	movlb	0	; () banked
  2015  000FF8  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2016  000FFA  0100               	movlb	0	; () banked
  2017  000FFC  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2018  000FFE  0E00               	movlw	0
  2019  001000  0100               	movlb	0	; () banked
  2020  001002  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2021  001004  0100               	movlb	0	; () banked
  2022  001006  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2023  001008  0E00               	movlw	0
  2024  00100A  0100               	movlb	0	; () banked
  2025  00100C  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2026  00100E  0100               	movlb	0	; () banked
  2027  001010  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2031  001012  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  2032  001016  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2033  00101A  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2034  00101E  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2035  001022  0E05               	movlw	5
  2036  001024                     u3495:
  2037  001024  90D8               	bcf	status,0,c
  2038  001026  0100               	movlb	0	; () banked
  2039  001028  37BA               	rlcf	??_CANsendMessage& (0+255),f,b
  2040  00102A  37BB               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2041  00102C  37BC               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2042  00102E  37BD               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2043  001030  2EE8               	decfsz	wreg,f,c
  2044  001032  D7F8               	goto	u3495
  2045  001034  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2046  001038  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2047  00103C  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2048  001040  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2052  001044  010F               	movlb	15	; () banked
  2053  001046  5132               	movf	50,w,b	;volatile
  2054  001048  0B1F               	andlw	31
  2055  00104A  010F               	movlb	15	; () banked
  2056  00104C  6F32               	movwf	50,b	;volatile
  2057                           
  2058                           ; BSR set to: 15
  2059                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2060  00104E  C0BE  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2061  001052                     l3274:
  2062                           
  2063                           ;inc\CANlib.h: 422: }
  2064                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2065  001052  0100               	movlb	0	; () banked
  2066  001054  A1B9               	btfss	CANsendMessage@flags& (0+255),0,b
  2067  001056  D003               	goto	l398
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2071  001058  010F               	movlb	15	; () banked
  2072  00105A  8130               	bsf	48,0,b	;volatile
  2073  00105C  D002               	goto	l399
  2074  00105E                     l398:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;inc\CANlib.h: 426: else
  2078                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2079  00105E  010F               	movlb	15	; () banked
  2080  001060  9130               	bcf	48,0,b	;volatile
  2081  001062                     l399:
  2082                           
  2083                           ; BSR set to: 15
  2084                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2085  001062  0100               	movlb	0	; () banked
  2086  001064  A3B9               	btfss	CANsendMessage@flags& (0+255),1,b
  2087  001066  D003               	goto	l400
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2091  001068  010F               	movlb	15	; () banked
  2092  00106A  8330               	bsf	48,1,b	;volatile
  2093  00106C  D002               	goto	l3280
  2094  00106E                     l400:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;inc\CANlib.h: 430: else
  2098                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2099  00106E  010F               	movlb	15	; () banked
  2100  001070  9330               	bcf	48,1,b	;volatile
  2101  001072                     l3280:
  2102                           
  2103                           ; BSR set to: 15
  2104                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2105  001072  C0B6  FFD9         	movff	CANsendMessage@data,fsr2l
  2106  001076  C0B7  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2107  00107A  50DF               	movf	indf2,w,c
  2108  00107C  010F               	movlb	15	; () banked
  2109  00107E  6F36               	movwf	54,b	;volatile
  2110                           
  2111                           ; BSR set to: 15
  2112                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2113  001080  0100               	movlb	0	; () banked
  2114  001082  EE20 F001          	lfsr	2,1
  2115  001086  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2116  001088  26D9               	addwf	fsr2l,f,c
  2117  00108A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2118  00108C  22DA               	addwfc	fsr2h,f,c
  2119  00108E  50DF               	movf	indf2,w,c
  2120  001090  010F               	movlb	15	; () banked
  2121  001092  6F37               	movwf	55,b	;volatile
  2122                           
  2123                           ; BSR set to: 15
  2124                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2125  001094  0100               	movlb	0	; () banked
  2126  001096  EE20 F002          	lfsr	2,2
  2127  00109A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2128  00109C  26D9               	addwf	fsr2l,f,c
  2129  00109E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2130  0010A0  22DA               	addwfc	fsr2h,f,c
  2131  0010A2  50DF               	movf	indf2,w,c
  2132  0010A4  010F               	movlb	15	; () banked
  2133  0010A6  6F38               	movwf	56,b	;volatile
  2134                           
  2135                           ; BSR set to: 15
  2136                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2137  0010A8  0100               	movlb	0	; () banked
  2138  0010AA  EE20 F003          	lfsr	2,3
  2139  0010AE  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2140  0010B0  26D9               	addwf	fsr2l,f,c
  2141  0010B2  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2142  0010B4  22DA               	addwfc	fsr2h,f,c
  2143  0010B6  50DF               	movf	indf2,w,c
  2144  0010B8  010F               	movlb	15	; () banked
  2145  0010BA  6F39               	movwf	57,b	;volatile
  2146                           
  2147                           ; BSR set to: 15
  2148                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2149  0010BC  0100               	movlb	0	; () banked
  2150  0010BE  EE20 F004          	lfsr	2,4
  2151  0010C2  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2152  0010C4  26D9               	addwf	fsr2l,f,c
  2153  0010C6  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2154  0010C8  22DA               	addwfc	fsr2h,f,c
  2155  0010CA  50DF               	movf	indf2,w,c
  2156  0010CC  010F               	movlb	15	; () banked
  2157  0010CE  6F3A               	movwf	58,b	;volatile
  2158                           
  2159                           ; BSR set to: 15
  2160                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2161  0010D0  0100               	movlb	0	; () banked
  2162  0010D2  EE20 F005          	lfsr	2,5
  2163  0010D6  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2164  0010D8  26D9               	addwf	fsr2l,f,c
  2165  0010DA  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2166  0010DC  22DA               	addwfc	fsr2h,f,c
  2167  0010DE  50DF               	movf	indf2,w,c
  2168  0010E0  010F               	movlb	15	; () banked
  2169  0010E2  6F3B               	movwf	59,b	;volatile
  2170                           
  2171                           ; BSR set to: 15
  2172                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2173  0010E4  0100               	movlb	0	; () banked
  2174  0010E6  EE20 F006          	lfsr	2,6
  2175  0010EA  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2176  0010EC  26D9               	addwf	fsr2l,f,c
  2177  0010EE  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2178  0010F0  22DA               	addwfc	fsr2h,f,c
  2179  0010F2  50DF               	movf	indf2,w,c
  2180  0010F4  010F               	movlb	15	; () banked
  2181  0010F6  6F3C               	movwf	60,b	;volatile
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2185  0010F8  0100               	movlb	0	; () banked
  2186  0010FA  EE20 F007          	lfsr	2,7
  2187  0010FE  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2188  001100  26D9               	addwf	fsr2l,f,c
  2189  001102  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2190  001104  22DA               	addwfc	fsr2h,f,c
  2191  001106  50DF               	movf	indf2,w,c
  2192  001108  010F               	movlb	15	; () banked
  2193  00110A  6F3D               	movwf	61,b	;volatile
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2197  00110C  010F               	movlb	15	; () banked
  2198  00110E  8730               	bsf	48,3,b	;volatile
  2199                           
  2200                           ; BSR set to: 15
  2201                           ;inc\CANlib.h: 444: return;
  2202  001110  0012               	return	
  2203  001112                     l388:
  2204                           
  2205                           ; BSR set to: 15
  2206                           ;inc\CANlib.h: 445: }
  2207                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2208  001112  010F               	movlb	15	; () banked
  2209  001114  B720               	btfsc	32,3,b	;volatile
  2210  001116  0012               	return	
  2211                           
  2212                           ; BSR set to: 15
  2213                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2214  001118  C0B8  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2215                           
  2216                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2217  00111C  0100               	movlb	0	; () banked
  2218  00111E  ADB9               	btfss	CANsendMessage@flags& (0+255),6,b
  2219  001120  D003               	goto	l403
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2223  001122  010F               	movlb	15	; () banked
  2224  001124  8D25               	bsf	37,6,b	;volatile
  2225  001126  D002               	goto	l404
  2226  001128                     l403:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;inc\CANlib.h: 454: else
  2230                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2231  001128  010F               	movlb	15	; () banked
  2232  00112A  9D25               	bcf	37,6,b	;volatile
  2233  00112C                     l404:
  2234                           
  2235                           ; BSR set to: 15
  2236                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2237  00112C  0100               	movlb	0	; () banked
  2238  00112E  A7B9               	btfss	CANsendMessage@flags& (0+255),3,b
  2239  001130  D079               	goto	l405
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;inc\CANlib.h: 458: {
  2243                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2244  001132  0100               	movlb	0	; () banked
  2245  001134  51B2               	movf	CANsendMessage@identifier& (0+255),w,b
  2246  001136  0100               	movlb	0	; () banked
  2247  001138  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2248  00113A  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2249  00113C  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2250  00113E  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2254  001140  C0BE  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2258  001144  0E00               	movlw	0
  2259  001146  0100               	movlb	0	; () banked
  2260  001148  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  2261  00114A  0100               	movlb	0	; () banked
  2262  00114C  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2263  00114E  0EFF               	movlw	255
  2264  001150  0100               	movlb	0	; () banked
  2265  001152  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2266  001154  0100               	movlb	0	; () banked
  2267  001156  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2268  001158  0E00               	movlw	0
  2269  00115A  0100               	movlb	0	; () banked
  2270  00115C  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2271  00115E  0100               	movlb	0	; () banked
  2272  001160  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2273  001162  0E00               	movlw	0
  2274  001164  0100               	movlb	0	; () banked
  2275  001166  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2276  001168  0100               	movlb	0	; () banked
  2277  00116A  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2281  00116C  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  2282  001170  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2283  001174  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2284  001178  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2285  00117C  C0BB  F0BA         	movff	??_CANsendMessage+1,??_CANsendMessage
  2286  001180  C0BC  F0BB         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2287  001184  C0BD  F0BC         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2288  001188  0100               	movlb	0	; () banked
  2289  00118A  6BBD               	clrf	(??_CANsendMessage+3)& (0+255),b
  2290  00118C  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2291  001190  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2292  001194  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2293  001198  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2297  00119C  C0BE  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2301  0011A0  0E00               	movlw	0
  2302  0011A2  010F               	movlb	15	; () banked
  2303  0011A4  6F22               	movwf	34,b	;volatile
  2304                           
  2305                           ; BSR set to: 15
  2306                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2307  0011A6  010F               	movlb	15	; () banked
  2308  0011A8  8722               	bsf	34,3,b	;volatile
  2309                           
  2310                           ; BSR set to: 15
  2311                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2312  0011AA  0100               	movlb	0	; () banked
  2313  0011AC  A1B4               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2314  0011AE  D002               	goto	l406
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2318  0011B0  010F               	movlb	15	; () banked
  2319  0011B2  8122               	bsf	34,0,b	;volatile
  2320  0011B4                     l406:
  2321                           
  2322                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2323  0011B4  0100               	movlb	0	; () banked
  2324  0011B6  A3B4               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2325  0011B8  D002               	goto	l407
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2329  0011BA  010F               	movlb	15	; () banked
  2330  0011BC  8322               	bsf	34,1,b	;volatile
  2331  0011BE                     l407:
  2332                           
  2333                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2334  0011BE  0100               	movlb	0	; () banked
  2335  0011C0  A5B4               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2336  0011C2  D002               	goto	l408
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2340  0011C4  010F               	movlb	15	; () banked
  2341  0011C6  8B22               	bsf	34,5,b	;volatile
  2342  0011C8                     l408:
  2343                           
  2344                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2345  0011C8  0100               	movlb	0	; () banked
  2346  0011CA  A7B4               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2347  0011CC  D002               	goto	l409
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2351  0011CE  010F               	movlb	15	; () banked
  2352  0011D0  8D22               	bsf	34,6,b	;volatile
  2353  0011D2                     l409:
  2354                           
  2355                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2356  0011D2  0100               	movlb	0	; () banked
  2357  0011D4  A9B4               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2358  0011D6  D002               	goto	l3330
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2362  0011D8  010F               	movlb	15	; () banked
  2363  0011DA  8F22               	bsf	34,7,b	;volatile
  2364  0011DC                     l3330:
  2365                           
  2366                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2367  0011DC  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  2368  0011E0  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2369  0011E4  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2370  0011E8  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2371  0011EC  0E16               	movlw	22
  2372  0011EE  D006               	goto	u3600
  2373  0011F0                     u3605:
  2374  0011F0  0100               	movlb	0	; () banked
  2375  0011F2  90D8               	bcf	status,0,c
  2376  0011F4  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2377  0011F6  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2378  0011F8  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2379  0011FA  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  2380  0011FC                     u3600:
  2381  0011FC  2EE8               	decfsz	wreg,f,c
  2382  0011FE  D7F8               	goto	u3605
  2383  001200  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2384  001204  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2385  001208  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2386  00120C  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2390  001210  0100               	movlb	0	; () banked
  2391  001212  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  2392  001214  0100               	movlb	0	; () banked
  2393  001216  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2394  001218  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2395  00121A  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2396  00121C  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2400  00121E  C0BE  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2401                           
  2402                           ;inc\CANlib.h: 483: }
  2403  001222  D059               	goto	l3350
  2404  001224                     l405:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;inc\CANlib.h: 485: else
  2408                           ;inc\CANlib.h: 487: {
  2409                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2410  001224  010F               	movlb	15	; () banked
  2411  001226  9722               	bcf	34,3,b	;volatile
  2412                           
  2413                           ; BSR set to: 15
  2414                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2415  001228  C0B2  F0BA         	movff	CANsendMessage@identifier,??_CANsendMessage
  2416  00122C  C0B3  F0BB         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2417  001230  C0B4  F0BC         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2418  001234  C0B5  F0BD         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2419  001238  0E04               	movlw	4
  2420  00123A  D006               	goto	u3610
  2421  00123C                     u3615:
  2422  00123C  0100               	movlb	0	; () banked
  2423  00123E  90D8               	bcf	status,0,c
  2424  001240  33BD               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2425  001242  33BC               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2426  001244  33BB               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2427  001246  33BA               	rrcf	??_CANsendMessage& (0+255),f,b
  2428  001248                     u3610:
  2429  001248  2EE8               	decfsz	wreg,f,c
  2430  00124A  D7F8               	goto	u3615
  2431  00124C  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2432  001250  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2433  001254  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2434  001258  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2438  00125C  0100               	movlb	0	; () banked
  2439  00125E  51BE               	movf	CANsendMessage@tamp& (0+255),w,b
  2440  001260  0100               	movlb	0	; () banked
  2441  001262  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2442  001264  6BBF               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2443  001266  6BC0               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2444  001268  6BC1               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2448  00126A  C0BE  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2452  00126E  0E07               	movlw	7
  2453  001270  0100               	movlb	0	; () banked
  2454  001272  15B2               	andwf	CANsendMessage@identifier& (0+255),w,b
  2455  001274  0100               	movlb	0	; () banked
  2456  001276  6FBE               	movwf	CANsendMessage@tamp& (0+255),b
  2457  001278  0E00               	movlw	0
  2458  00127A  0100               	movlb	0	; () banked
  2459  00127C  15B3               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2460  00127E  0100               	movlb	0	; () banked
  2461  001280  6FBF               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2462  001282  0E00               	movlw	0
  2463  001284  0100               	movlb	0	; () banked
  2464  001286  15B4               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2465  001288  0100               	movlb	0	; () banked
  2466  00128A  6FC0               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2467  00128C  0E00               	movlw	0
  2468  00128E  0100               	movlb	0	; () banked
  2469  001290  15B5               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2470  001292  0100               	movlb	0	; () banked
  2471  001294  6FC1               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2475  001296  C0BE  F0BA         	movff	CANsendMessage@tamp,??_CANsendMessage
  2476  00129A  C0BF  F0BB         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2477  00129E  C0C0  F0BC         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2478  0012A2  C0C1  F0BD         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2479  0012A6  0E05               	movlw	5
  2480  0012A8                     u3625:
  2481  0012A8  90D8               	bcf	status,0,c
  2482  0012AA  0100               	movlb	0	; () banked
  2483  0012AC  37BA               	rlcf	??_CANsendMessage& (0+255),f,b
  2484  0012AE  37BB               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2485  0012B0  37BC               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2486  0012B2  37BD               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2487  0012B4  2EE8               	decfsz	wreg,f,c
  2488  0012B6  D7F8               	goto	u3625
  2489  0012B8  C0BA  F0BE         	movff	??_CANsendMessage,CANsendMessage@tamp
  2490  0012BC  C0BB  F0BF         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2491  0012C0  C0BC  F0C0         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2492  0012C4  C0BD  F0C1         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2496  0012C8  010F               	movlb	15	; () banked
  2497  0012CA  5122               	movf	34,w,b	;volatile
  2498  0012CC  0B1F               	andlw	31
  2499  0012CE  010F               	movlb	15	; () banked
  2500  0012D0  6F22               	movwf	34,b	;volatile
  2501                           
  2502                           ; BSR set to: 15
  2503                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2504  0012D2  C0BE  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2505  0012D6                     l3350:
  2506                           
  2507                           ;inc\CANlib.h: 498: }
  2508                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2509  0012D6  0100               	movlb	0	; () banked
  2510  0012D8  A1B9               	btfss	CANsendMessage@flags& (0+255),0,b
  2511  0012DA  D003               	goto	l412
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2515  0012DC  010F               	movlb	15	; () banked
  2516  0012DE  8120               	bsf	32,0,b	;volatile
  2517  0012E0  D002               	goto	l413
  2518  0012E2                     l412:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;inc\CANlib.h: 502: else
  2522                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2523  0012E2  010F               	movlb	15	; () banked
  2524  0012E4  9120               	bcf	32,0,b	;volatile
  2525  0012E6                     l413:
  2526                           
  2527                           ; BSR set to: 15
  2528                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2529  0012E6  0100               	movlb	0	; () banked
  2530  0012E8  A3B9               	btfss	CANsendMessage@flags& (0+255),1,b
  2531  0012EA  D003               	goto	l414
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2535  0012EC  010F               	movlb	15	; () banked
  2536  0012EE  8320               	bsf	32,1,b	;volatile
  2537  0012F0  D002               	goto	l3356
  2538  0012F2                     l414:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;inc\CANlib.h: 506: else
  2542                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2543  0012F2  010F               	movlb	15	; () banked
  2544  0012F4  9320               	bcf	32,1,b	;volatile
  2545  0012F6                     l3356:
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2549  0012F6  C0B6  FFD9         	movff	CANsendMessage@data,fsr2l
  2550  0012FA  C0B7  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2551  0012FE  50DF               	movf	indf2,w,c
  2552  001300  010F               	movlb	15	; () banked
  2553  001302  6F26               	movwf	38,b	;volatile
  2554                           
  2555                           ; BSR set to: 15
  2556                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2557  001304  0100               	movlb	0	; () banked
  2558  001306  EE20 F001          	lfsr	2,1
  2559  00130A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2560  00130C  26D9               	addwf	fsr2l,f,c
  2561  00130E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2562  001310  22DA               	addwfc	fsr2h,f,c
  2563  001312  50DF               	movf	indf2,w,c
  2564  001314  010F               	movlb	15	; () banked
  2565  001316  6F27               	movwf	39,b	;volatile
  2566                           
  2567                           ; BSR set to: 15
  2568                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2569  001318  0100               	movlb	0	; () banked
  2570  00131A  EE20 F002          	lfsr	2,2
  2571  00131E  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2572  001320  26D9               	addwf	fsr2l,f,c
  2573  001322  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2574  001324  22DA               	addwfc	fsr2h,f,c
  2575  001326  50DF               	movf	indf2,w,c
  2576  001328  010F               	movlb	15	; () banked
  2577  00132A  6F28               	movwf	40,b	;volatile
  2578                           
  2579                           ; BSR set to: 15
  2580                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2581  00132C  0100               	movlb	0	; () banked
  2582  00132E  EE20 F003          	lfsr	2,3
  2583  001332  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2584  001334  26D9               	addwf	fsr2l,f,c
  2585  001336  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2586  001338  22DA               	addwfc	fsr2h,f,c
  2587  00133A  50DF               	movf	indf2,w,c
  2588  00133C  010F               	movlb	15	; () banked
  2589  00133E  6F29               	movwf	41,b	;volatile
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2593  001340  0100               	movlb	0	; () banked
  2594  001342  EE20 F004          	lfsr	2,4
  2595  001346  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2596  001348  26D9               	addwf	fsr2l,f,c
  2597  00134A  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2598  00134C  22DA               	addwfc	fsr2h,f,c
  2599  00134E  50DF               	movf	indf2,w,c
  2600  001350  010F               	movlb	15	; () banked
  2601  001352  6F2A               	movwf	42,b	;volatile
  2602                           
  2603                           ; BSR set to: 15
  2604                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2605  001354  0100               	movlb	0	; () banked
  2606  001356  EE20 F005          	lfsr	2,5
  2607  00135A  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2608  00135C  26D9               	addwf	fsr2l,f,c
  2609  00135E  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2610  001360  22DA               	addwfc	fsr2h,f,c
  2611  001362  50DF               	movf	indf2,w,c
  2612  001364  010F               	movlb	15	; () banked
  2613  001366  6F2B               	movwf	43,b	;volatile
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2617  001368  0100               	movlb	0	; () banked
  2618  00136A  EE20 F006          	lfsr	2,6
  2619  00136E  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2620  001370  26D9               	addwf	fsr2l,f,c
  2621  001372  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2622  001374  22DA               	addwfc	fsr2h,f,c
  2623  001376  50DF               	movf	indf2,w,c
  2624  001378  010F               	movlb	15	; () banked
  2625  00137A  6F2C               	movwf	44,b	;volatile
  2626                           
  2627                           ; BSR set to: 15
  2628                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2629  00137C  0100               	movlb	0	; () banked
  2630  00137E  EE20 F007          	lfsr	2,7
  2631  001382  51B6               	movf	CANsendMessage@data& (0+255),w,b
  2632  001384  26D9               	addwf	fsr2l,f,c
  2633  001386  51B7               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2634  001388  22DA               	addwfc	fsr2h,f,c
  2635  00138A  50DF               	movf	indf2,w,c
  2636  00138C  010F               	movlb	15	; () banked
  2637  00138E  6F2D               	movwf	45,b	;volatile
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2641  001390  010F               	movlb	15	; () banked
  2642  001392  8720               	bsf	32,3,b	;volatile
  2643                           
  2644                           ; BSR set to: 15
  2645                           ;inc\CANlib.h: 520: return;
  2646  001394  0012               	return	
  2647  001396                     __end_of_CANsendMessage:
  2648                           	opt stack 0
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           prodh	equ	0xFF4
  2654                           prodl	equ	0xFF3
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postdec1	equ	0xFE5
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function _CANisTxReady *****************
  2665 ;; Defined at:
  2666 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2680 ;;      Params:         0       0       0       0
  2681 ;;      Locals:         0       1       0       0
  2682 ;;      Temps:          0       0       0       0
  2683 ;;      Totals:         0       1       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    4
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_remote_frame_handler
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text3
  2695  002800                     __ptext3:
  2696                           	opt stack 0
  2697  002800                     _CANisTxReady:
  2698                           	opt stack 25
  2699                           
  2700                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2701                           
  2702                           ; BSR set to: 15
  2703                           ;incstack = 0
  2704  002800  0E01               	movlw	1
  2705  002802  0100               	movlb	0	; () banked
  2706  002804  6FB2               	movwf	_CANisTxReady$3084& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709  002806  010F               	movlb	15	; () banked
  2710  002808  A740               	btfss	64,3,b	;volatile
  2711  00280A  D009               	goto	l566
  2712                           
  2713                           ; BSR set to: 15
  2714  00280C  010F               	movlb	15	; () banked
  2715  00280E  A730               	btfss	48,3,b	;volatile
  2716  002810  D006               	goto	l566
  2717                           
  2718                           ; BSR set to: 15
  2719  002812  010F               	movlb	15	; () banked
  2720  002814  A720               	btfss	32,3,b	;volatile
  2721  002816  D003               	goto	l566
  2722                           
  2723                           ; BSR set to: 15
  2724  002818  0E00               	movlw	0
  2725  00281A  0100               	movlb	0	; () banked
  2726  00281C  6FB2               	movwf	_CANisTxReady$3084& (0+255),b
  2727  00281E                     l566:
  2728  00281E  0100               	movlb	0	; () banked
  2729  002820  51B2               	movf	_CANisTxReady$3084& (0+255),w,b
  2730  002822  0012               	return	
  2731  002824                     __end_of_CANisTxReady:
  2732                           	opt stack 0
  2733                           tblptru	equ	0xFF8
  2734                           tblptrh	equ	0xFF7
  2735                           tblptrl	equ	0xFF6
  2736                           tablat	equ	0xFF5
  2737                           prodh	equ	0xFF4
  2738                           prodl	equ	0xFF3
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           postdec1	equ	0xFE5
  2742                           fsr1l	equ	0xFE1
  2743                           indf2	equ	0xFDF
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _board_initialization *****************
  2749 ;; Defined at:
  2750 ;;		line 312 in file "ABS_Code.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;		None               void
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2764 ;;      Params:         0       0       0       0
  2765 ;;      Locals:         0       0       0       0
  2766 ;;      Temps:          0       0       0       0
  2767 ;;      Totals:         0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    6
  2771 ;; This function calls:
  2772 ;;		_CANInitialize
  2773 ;;		_delay_ms
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text4
  2780  002524                     __ptext4:
  2781                           	opt stack 0
  2782  002524                     _board_initialization:
  2783                           	opt stack 24
  2784                           
  2785                           ;ABS_Code.c: 314: LATA = 0x00;
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;incstack = 0
  2789  002524  0E00               	movlw	0
  2790  002526  6E89               	movwf	3977,c	;volatile
  2791                           
  2792                           ;ABS_Code.c: 315: TRISA = 0xFF;
  2793  002528  6892               	setf	3986,c	;volatile
  2794                           
  2795                           ;ABS_Code.c: 316: LATB = 0x00;
  2796  00252A  0E00               	movlw	0
  2797  00252C  6E8A               	movwf	3978,c	;volatile
  2798                           
  2799                           ;ABS_Code.c: 317: TRISB = 0b11111110;
  2800  00252E  0EFE               	movlw	254
  2801  002530  6E93               	movwf	3987,c	;volatile
  2802                           
  2803                           ;ABS_Code.c: 318: LATC = 0x00;
  2804  002532  0E00               	movlw	0
  2805  002534  6E8B               	movwf	3979,c	;volatile
  2806                           
  2807                           ;ABS_Code.c: 319: TRISC = 0b11111110;
  2808  002536  0EFE               	movlw	254
  2809  002538  6E94               	movwf	3988,c	;volatile
  2810                           
  2811                           ;ABS_Code.c: 320: LATD = 0x00;
  2812  00253A  0E00               	movlw	0
  2813  00253C  6E8C               	movwf	3980,c	;volatile
  2814                           
  2815                           ;ABS_Code.c: 321: TRISD = 0xFF;
  2816  00253E  6895               	setf	3989,c	;volatile
  2817                           
  2818                           ;ABS_Code.c: 322: LATE = 0x00;
  2819  002540  0E00               	movlw	0
  2820  002542  6E8D               	movwf	3981,c	;volatile
  2821                           
  2822                           ;ABS_Code.c: 323: TRISE = 0xFF;
  2823  002544  6896               	setf	3990,c	;volatile
  2824                           
  2825                           ;ABS_Code.c: 325: ADCON1 = 0x11111110;
  2826  002546  0E10               	movlw	16
  2827  002548  6EC1               	movwf	4033,c	;volatile
  2828                           
  2829                           ;ABS_Code.c: 328: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2830  00254A  0E06               	movlw	6
  2831  00254C  0100               	movlb	0	; () banked
  2832  00254E  6FC0               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2833  002550  0E05               	movlw	5
  2834  002552  0100               	movlb	0	; () banked
  2835  002554  6FC1               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2836  002556  0E01               	movlw	1
  2837  002558  0100               	movlb	0	; () banked
  2838  00255A  6FC2               	movwf	CANInitialize@SJW& (0+255),b
  2839  00255C  0E03               	movlw	3
  2840  00255E  0100               	movlb	0	; () banked
  2841  002560  6FC3               	movwf	CANInitialize@BRP& (0+255),b
  2842  002562  0E9D               	movlw	157
  2843  002564  0100               	movlb	0	; () banked
  2844  002566  6FC4               	movwf	CANInitialize@flags& (0+255),b
  2845  002568  0E04               	movlw	4
  2846  00256A  EC96  F00F         	call	_CANInitialize
  2847                           
  2848                           ;ABS_Code.c: 331: PIR3bits.RXB1IF = 0;
  2849  00256E  92A4               	bcf	4004,1,c	;volatile
  2850                           
  2851                           ;ABS_Code.c: 332: PIR3bits.RXB0IF = 0;
  2852  002570  90A4               	bcf	4004,0,c	;volatile
  2853                           
  2854                           ;ABS_Code.c: 333: INTCONbits.TMR0IF = 0;
  2855  002572  94F2               	bcf	intcon,2,c	;volatile
  2856                           
  2857                           ;ABS_Code.c: 334: INTCONbits.INT0IF = 0;
  2858  002574  92F2               	bcf	intcon,1,c	;volatile
  2859                           
  2860                           ;ABS_Code.c: 335: INTCON3bits.INT1IF = 0;
  2861  002576  90F0               	bcf	intcon3,0,c	;volatile
  2862                           
  2863                           ;ABS_Code.c: 336: PIR2bits.TMR3IF = 0;
  2864  002578  92A1               	bcf	4001,1,c	;volatile
  2865                           
  2866                           ;ABS_Code.c: 339: RCONbits.IPEN = 1;
  2867  00257A  8ED0               	bsf	4048,7,c	;volatile
  2868                           
  2869                           ;ABS_Code.c: 340: IPR3bits.RXB1IP = 0;
  2870  00257C  92A5               	bcf	4005,1,c	;volatile
  2871                           
  2872                           ;ABS_Code.c: 341: IPR3bits.RXB0IP = 0;
  2873  00257E  90A5               	bcf	4005,0,c	;volatile
  2874                           
  2875                           ;ABS_Code.c: 342: INTCON2bits.TMR0IP = 1;
  2876  002580  84F1               	bsf	intcon2,2,c	;volatile
  2877                           
  2878                           ;ABS_Code.c: 343: INTCON3bits.INT1IP = 1;
  2879  002582  8CF0               	bsf	intcon3,6,c	;volatile
  2880                           
  2881                           ;ABS_Code.c: 346: T0CON = 0x80;
  2882  002584  0E80               	movlw	128
  2883  002586  6ED5               	movwf	4053,c	;volatile
  2884                           
  2885                           ;ABS_Code.c: 353: TMR0H = 0xFF;
  2886  002588  68D7               	setf	4055,c	;volatile
  2887                           
  2888                           ;ABS_Code.c: 354: TMR0L = 0xFE;
  2889  00258A  0EFE               	movlw	254
  2890  00258C  6ED6               	movwf	4054,c	;volatile
  2891                           
  2892                           ;ABS_Code.c: 355: PORTCbits.RC0 = 0;
  2893  00258E  9082               	bcf	3970,0,c	;volatile
  2894                           
  2895                           ;ABS_Code.c: 356: brake_value_degree = 90;
  2896  002590  0E5A               	movlw	90
  2897  002592  6E3C               	movwf	_brake_value_degree,c
  2898                           
  2899                           ;ABS_Code.c: 357: T1CON = 00010000;
  2900  002594  0E00               	movlw	0
  2901  002596  6ECD               	movwf	4045,c	;volatile
  2902                           
  2903                           ;ABS_Code.c: 358: T3CON = 01010000;
  2904  002598  0E00               	movlw	0
  2905  00259A  6EB1               	movwf	4017,c	;volatile
  2906                           
  2907                           ;ABS_Code.c: 359: INTCON2bits.INTEDG0 = 1;
  2908  00259C  8CF1               	bsf	intcon2,6,c	;volatile
  2909                           
  2910                           ;ABS_Code.c: 360: INTCON2bits.INTEDG1 = 1;
  2911  00259E  8AF1               	bsf	intcon2,5,c	;volatile
  2912                           
  2913                           ;ABS_Code.c: 363: ADCON1 = 0b01110111;
  2914  0025A0  0E77               	movlw	119
  2915  0025A2  6EC1               	movwf	4033,c	;volatile
  2916                           
  2917                           ;ABS_Code.c: 364: ADCON0bits.CHS2 = 0;
  2918  0025A4  98C2               	bcf	4034,4,c	;volatile
  2919                           
  2920                           ;ABS_Code.c: 365: ADCON0bits.CHS1 = 0;
  2921  0025A6  96C2               	bcf	4034,3,c	;volatile
  2922                           
  2923                           ;ABS_Code.c: 366: ADCON0bits.CHS0 = 0;
  2924  0025A8  94C2               	bcf	4034,2,c	;volatile
  2925                           
  2926                           ;ABS_Code.c: 367: ADCON2bits.ACQT2 = 1;
  2927  0025AA  8AC0               	bsf	4032,5,c	;volatile
  2928                           
  2929                           ;ABS_Code.c: 368: ADCON2bits.ACQT1 = 1;
  2930  0025AC  88C0               	bsf	4032,4,c	;volatile
  2931                           
  2932                           ;ABS_Code.c: 369: ADCON2bits.ACQT0 = 0;
  2933  0025AE  96C0               	bcf	4032,3,c	;volatile
  2934                           
  2935                           ;ABS_Code.c: 370: ADCON2bits.ADCS2 = 1;
  2936  0025B0  84C0               	bsf	4032,2,c	;volatile
  2937                           
  2938                           ;ABS_Code.c: 371: ADCON2bits.ADCS1 = 0;
  2939  0025B2  92C0               	bcf	4032,1,c	;volatile
  2940                           
  2941                           ;ABS_Code.c: 372: ADCON2bits.ADCS0 = 1;
  2942  0025B4  80C0               	bsf	4032,0,c	;volatile
  2943                           
  2944                           ;ABS_Code.c: 373: ADCON2bits.ADFM = 0;
  2945  0025B6  9EC0               	bcf	4032,7,c	;volatile
  2946                           
  2947                           ;ABS_Code.c: 374: ADCON0bits.ADON = 1;
  2948  0025B8  80C2               	bsf	4034,0,c	;volatile
  2949                           
  2950                           ;ABS_Code.c: 377: PIE3bits.RXB1IE = 1;
  2951  0025BA  82A3               	bsf	4003,1,c	;volatile
  2952                           
  2953                           ;ABS_Code.c: 378: PIE3bits.RXB0IE = 1;
  2954  0025BC  80A3               	bsf	4003,0,c	;volatile
  2955                           
  2956                           ;ABS_Code.c: 379: INTCONbits.TMR0IE = 1;
  2957  0025BE  8AF2               	bsf	intcon,5,c	;volatile
  2958                           
  2959                           ;ABS_Code.c: 380: INTCONbits.INT0IE = 1;
  2960  0025C0  88F2               	bsf	intcon,4,c	;volatile
  2961                           
  2962                           ;ABS_Code.c: 381: INTCON3bits.INT1IE = 1;
  2963  0025C2  86F0               	bsf	intcon3,3,c	;volatile
  2964                           
  2965                           ;ABS_Code.c: 382: INTCONbits.GIEH = 1;
  2966  0025C4  8EF2               	bsf	intcon,7,c	;volatile
  2967                           
  2968                           ;ABS_Code.c: 383: INTCONbits.GIEL = 1;
  2969  0025C6  8CF2               	bsf	intcon,6,c	;volatile
  2970                           
  2971                           ;ABS_Code.c: 386: T1CONbits.TMR1ON = 1;
  2972  0025C8  80CD               	bsf	4045,0,c	;volatile
  2973                           
  2974                           ;ABS_Code.c: 387: T3CONbits.TMR3ON = 1;
  2975  0025CA  80B1               	bsf	4017,0,c	;volatile
  2976                           
  2977                           ;ABS_Code.c: 388: T0CONbits.TMR0ON = 1;
  2978  0025CC  8ED5               	bsf	4053,7,c	;volatile
  2979                           
  2980                           ;ABS_Code.c: 389: delay_ms(2);
  2981  0025CE  0E00               	movlw	0
  2982  0025D0  0100               	movlb	0	; () banked
  2983  0025D2  6FB9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2984  0025D4  0E02               	movlw	2
  2985  0025D6  6FB8               	movwf	delay_ms@value_ms& (0+255),b
  2986  0025D8  ECB5  F013         	call	_delay_ms	;wreg free
  2987  0025DC  0012               	return		;funcret
  2988  0025DE                     __end_of_board_initialization:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           intcon2	equ	0xFF1
  2998                           intcon3	equ	0xFF0
  2999                           postinc0	equ	0xFEE
  3000                           wreg	equ	0xFE8
  3001                           postdec1	equ	0xFE5
  3002                           fsr1l	equ	0xFE1
  3003                           indf2	equ	0xFDF
  3004                           fsr2h	equ	0xFDA
  3005                           fsr2l	equ	0xFD9
  3006                           status	equ	0xFD8
  3007                           
  3008 ;; *************** function _delay_ms *****************
  3009 ;; Defined at:
  3010 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  value_ms        2   28[BANK0 ] unsigned int 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;		None               void
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3024 ;;      Params:         0       2       0       0
  3025 ;;      Locals:         0       0       0       0
  3026 ;;      Temps:          0       0       0       0
  3027 ;;      Totals:         0       2       0       0
  3028 ;;Total ram usage:        2 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    5
  3031 ;; This function calls:
  3032 ;;		___wmul
  3033 ;; This function is called by:
  3034 ;;		_board_initialization
  3035 ;;		_delay_s
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	text5
  3040  00276A                     __ptext5:
  3041                           	opt stack 0
  3042  00276A                     _delay_ms:
  3043                           	opt stack 24
  3044                           
  3045                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3046                           
  3047                           ;incstack = 0
  3048  00276A  C0CC  F0B2         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3049  00276E  0100               	movlb	0	; () banked
  3050  002770  6BB3               	clrf	(___wmul@multiplier+1)& (0+255),b
  3051  002772  C0B8  F0B4         	movff	delay_ms@value_ms,___wmul@multiplicand
  3052  002776  C0B9  F0B5         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3053  00277A  ECD2  F013         	call	___wmul	;wreg free
  3054  00277E  C0B2  F06C         	movff	?___wmul,_clock_counter_reference	;volatile
  3055  002782  C0B3  F06D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3056                           
  3057                           ;src\delay.c: 75: while (clock_counter_reference) {
  3058  002786  D007               	goto	l579
  3059  002788                     l3390:
  3060                           
  3061                           ;src\delay.c: 85: _delay(240);
  3062  002788  0E50               	movlw	80
  3063  00278A                     u4587:
  3064  00278A  2EE8               	decfsz	wreg,f,c
  3065  00278C  D7FE               	goto	u4587
  3066                           
  3067                           ;src\delay.c: 88: clock_counter_reference--;
  3068  00278E  0100               	movlb	0	; () banked
  3069  002790  076C               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3070  002792  A0D8               	btfss	status,0,c
  3071  002794  076D               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3072  002796                     l579:
  3073  002796  0100               	movlb	0	; () banked
  3074  002798  516C               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3075  00279A  0100               	movlb	0	; () banked
  3076  00279C  116D               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3077  00279E  B4D8               	btfsc	status,2,c
  3078  0027A0  0012               	return	
  3079  0027A2  D7F2               	goto	l3390
  3080  0027A4                     __end_of_delay_ms:
  3081                           	opt stack 0
  3082                           tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           intcon	equ	0xFF2
  3089                           intcon2	equ	0xFF1
  3090                           intcon3	equ	0xFF0
  3091                           postinc0	equ	0xFEE
  3092                           wreg	equ	0xFE8
  3093                           postdec1	equ	0xFE5
  3094                           fsr1l	equ	0xFE1
  3095                           indf2	equ	0xFDF
  3096                           fsr2h	equ	0xFDA
  3097                           fsr2l	equ	0xFD9
  3098                           status	equ	0xFD8
  3099                           
  3100 ;; *************** function ___wmul *****************
  3101 ;; Defined at:
  3102 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  multiplier      2   22[BANK0 ] unsigned int 
  3105 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  product         2   26[BANK0 ] unsigned int 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  2   22[BANK0 ] unsigned int 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, prodl, prodh
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3117 ;;      Params:         0       4       0       0
  3118 ;;      Locals:         0       2       0       0
  3119 ;;      Temps:          0       0       0       0
  3120 ;;      Totals:         0       6       0       0
  3121 ;;Total ram usage:        6 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    4
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_delay_ms
  3128 ;;		_remote_frame_handler
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text6
  3133  0027A4                     __ptext6:
  3134                           	opt stack 0
  3135  0027A4                     ___wmul:
  3136                           	opt stack 25
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;incstack = 0
  3140  0027A4  0100               	movlb	0	; () banked
  3141  0027A6  51B2               	movf	___wmul@multiplier& (0+255),w,b
  3142  0027A8  0100               	movlb	0	; () banked
  3143  0027AA  03B4               	mulwf	___wmul@multiplicand& (0+255),b
  3144  0027AC  CFF3 F0B6          	movff	prodl,___wmul@product
  3145  0027B0  CFF4 F0B7          	movff	prodh,___wmul@product+1
  3146  0027B4  0100               	movlb	0	; () banked
  3147  0027B6  51B2               	movf	___wmul@multiplier& (0+255),w,b
  3148  0027B8  0100               	movlb	0	; () banked
  3149  0027BA  03B5               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3150  0027BC  50F3               	movf	prodl,w,c
  3151  0027BE  0100               	movlb	0	; () banked
  3152  0027C0  27B7               	addwf	(___wmul@product+1)& (0+255),f,b
  3153  0027C2  0100               	movlb	0	; () banked
  3154  0027C4  51B3               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3155  0027C6  0100               	movlb	0	; () banked
  3156  0027C8  03B4               	mulwf	___wmul@multiplicand& (0+255),b
  3157  0027CA  50F3               	movf	prodl,w,c
  3158  0027CC  0100               	movlb	0	; () banked
  3159  0027CE  27B7               	addwf	(___wmul@product+1)& (0+255),f,b
  3160                           
  3161                           ; BSR set to: 0
  3162  0027D0  C0B6  F0B2         	movff	___wmul@product,?___wmul
  3163  0027D4  C0B7  F0B3         	movff	___wmul@product+1,?___wmul+1
  3164  0027D8  0012               	return	
  3165  0027DA                     __end_of___wmul:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon	equ	0xFF2
  3174                           intcon2	equ	0xFF1
  3175                           intcon3	equ	0xFF0
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           postdec1	equ	0xFE5
  3179                           fsr1l	equ	0xFE1
  3180                           indf2	equ	0xFDF
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           
  3185 ;; *************** function _CANInitialize *****************
  3186 ;; Defined at:
  3187 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  propSeg         1    wreg     unsigned char 
  3190 ;;  phaseSeg1       1   36[BANK0 ] unsigned char 
  3191 ;;  phaseSeg2       1   37[BANK0 ] unsigned char 
  3192 ;;  SJW             1   38[BANK0 ] unsigned char 
  3193 ;;  BRP             1   39[BANK0 ] unsigned char 
  3194 ;;  flags           1   40[BANK0 ] enum E16844
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  propSeg         1   45[BANK0 ] unsigned char 
  3197 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  3198 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;		None               void
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3208 ;;      Params:         0       5       0       0
  3209 ;;      Locals:         0       3       0       0
  3210 ;;      Temps:          0       4       0       0
  3211 ;;      Totals:         0      12       0       0
  3212 ;;Total ram usage:       12 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    5
  3215 ;; This function calls:
  3216 ;;		_CANOperationMode
  3217 ;;		_CANSetFilter
  3218 ;;		_CANSetMask
  3219 ;; This function is called by:
  3220 ;;		_board_initialization
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text7
  3225  001F2C                     __ptext7:
  3226                           	opt stack 0
  3227  001F2C                     _CANInitialize:
  3228                           	opt stack 24
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;incstack = 0
  3232                           ;CANInitialize@propSeg stored from wreg
  3233  001F2C  0100               	movlb	0	; () banked
  3234  001F2E  6FC9               	movwf	CANInitialize@propSeg& (0+255),b
  3235                           
  3236                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3237                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3238                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3239  001F30  0E80               	movlw	128
  3240  001F32  EC12  F014         	call	_CANOperationMode
  3241                           
  3242                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3243  001F36  0E00               	movlw	0
  3244  001F38  6E70               	movwf	3952,c	;volatile
  3245                           
  3246                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3247  001F3A  0E00               	movlw	0
  3248  001F3C  6E71               	movwf	3953,c	;volatile
  3249                           
  3250                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3251  001F3E  0E00               	movlw	0
  3252  001F40  6E72               	movwf	3954,c	;volatile
  3253                           
  3254                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3255  001F42  0100               	movlb	0	; () banked
  3256  001F44  41C2               	rrncf	CANInitialize@SJW& (0+255),w,b
  3257  001F46  42E8               	rrncf	wreg,f,c
  3258  001F48  0BC0               	andlw	192
  3259  001F4A  0100               	movlb	0	; () banked
  3260  001F4C  6FC2               	movwf	CANInitialize@SJW& (0+255),b
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3264  001F4E  0100               	movlb	0	; () banked
  3265  001F50  51C2               	movf	CANInitialize@SJW& (0+255),w,b
  3266  001F52  1270               	iorwf	3952,f,c	;volatile
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3270  001F54  0100               	movlb	0	; () banked
  3271  001F56  51C3               	movf	CANInitialize@BRP& (0+255),w,b
  3272  001F58  1270               	iorwf	3952,f,c	;volatile
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3276  001F5A  0100               	movlb	0	; () banked
  3277  001F5C  51C9               	movf	CANInitialize@propSeg& (0+255),w,b
  3278  001F5E  1271               	iorwf	3953,f,c	;volatile
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3282  001F60  0100               	movlb	0	; () banked
  3283  001F62  39C0               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3284  001F64  42E8               	rrncf	wreg,f,c
  3285  001F66  0BF8               	andlw	248
  3286  001F68  0100               	movlb	0	; () banked
  3287  001F6A  6FC0               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3291  001F6C  0100               	movlb	0	; () banked
  3292  001F6E  51C0               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3293  001F70  1271               	iorwf	3953,f,c	;volatile
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3297  001F72  0100               	movlb	0	; () banked
  3298  001F74  A5C4               	btfss	CANInitialize@flags& (0+255),2,b
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3302  001F76  8C71               	bsf	3953,6,c	;volatile
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3306  001F78  0100               	movlb	0	; () banked
  3307  001F7A  B1C4               	btfsc	CANInitialize@flags& (0+255),0,b
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3311  001F7C  8E71               	bsf	3953,7,c	;volatile
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3315                           
  3316                           ; BSR set to: 0
  3317  001F7E  0100               	movlb	0	; () banked
  3318  001F80  51C1               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3319  001F82  1272               	iorwf	3954,f,c	;volatile
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3323  001F84  0100               	movlb	0	; () banked
  3324  001F86  B3C4               	btfsc	CANInitialize@flags& (0+255),1,b
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3328  001F88  8C72               	bsf	3954,6,c	;volatile
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3332                           
  3333                           ; BSR set to: 0
  3334  001F8A  0100               	movlb	0	; () banked
  3335  001F8C  51C4               	movf	CANInitialize@flags& (0+255),w,b
  3336  001F8E  0B60               	andlw	96
  3337  001F90  6E60               	movwf	3936,c	;volatile
  3338                           
  3339                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3340  001F92  0100               	movlb	0	; () banked
  3341  001F94  51C4               	movf	CANInitialize@flags& (0+255),w,b
  3342  001F96  0B10               	andlw	16
  3343  001F98  0AFF               	xorlw	255
  3344  001F9A  B4D8               	btfsc	status,2,c
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3348  001F9C  8460               	bsf	3936,2,c	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3352  001F9E  CF60 FF50          	movff	3936,3920	;volatile
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3356  001FA2  0E00               	movlw	0
  3357  001FA4  0100               	movlb	0	; () banked
  3358  001FA6  6FB2               	movwf	CANSetMask@mask& (0+255),b
  3359  001FA8  0E00               	movlw	0
  3360  001FAA  6FB3               	movwf	(CANSetMask@mask+1)& (0+255),b
  3361  001FAC  0E00               	movlw	0
  3362  001FAE  6FB4               	movwf	(CANSetMask@mask+2)& (0+255),b
  3363  001FB0  0E00               	movlw	0
  3364  001FB2  6FB5               	movwf	(CANSetMask@mask+3)& (0+255),b
  3365  001FB4  0EF7               	movlw	247
  3366  001FB6  0100               	movlb	0	; () banked
  3367  001FB8  6FB6               	movwf	CANSetMask@type& (0+255),b
  3368  001FBA  0E01               	movlw	1
  3369  001FBC  EC51  F00C         	call	_CANSetMask
  3370                           
  3371                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3372  001FC0  0E00               	movlw	0
  3373  001FC2  0100               	movlb	0	; () banked
  3374  001FC4  6FB2               	movwf	CANSetMask@mask& (0+255),b
  3375  001FC6  0E00               	movlw	0
  3376  001FC8  6FB3               	movwf	(CANSetMask@mask+1)& (0+255),b
  3377  001FCA  0E00               	movlw	0
  3378  001FCC  6FB4               	movwf	(CANSetMask@mask+2)& (0+255),b
  3379  001FCE  0E00               	movlw	0
  3380  001FD0  6FB5               	movwf	(CANSetMask@mask+3)& (0+255),b
  3381  001FD2  0EF7               	movlw	247
  3382  001FD4  0100               	movlb	0	; () banked
  3383  001FD6  6FB6               	movwf	CANSetMask@type& (0+255),b
  3384  001FD8  0E02               	movlw	2
  3385  001FDA  EC51  F00C         	call	_CANSetMask
  3386                           
  3387                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3388  001FDE  D00F               	goto	l3138
  3389  001FE0                     l3132:
  3390                           
  3391                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3392  001FE0  0EF7               	movlw	247
  3393  001FE2  0100               	movlb	0	; () banked
  3394  001FE4  6FCA               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3395  001FE6  D007               	goto	l3134
  3396  001FE8                     l368:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3400  001FE8  0100               	movlb	0	; () banked
  3401  001FEA  69CA               	setf	CANInitialize@FilterConfig1& (0+255),b
  3402                           
  3403                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3404  001FEC  0100               	movlb	0	; () banked
  3405  001FEE  69CB               	setf	CANInitialize@FilterConfig2& (0+255),b
  3406                           
  3407                           ;inc\CANlib.h: 273: break;
  3408  001FF0  D028               	goto	l3140
  3409  001FF2                     l369:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3413  001FF2  0100               	movlb	0	; () banked
  3414  001FF4  69CA               	setf	CANInitialize@FilterConfig1& (0+255),b
  3415  001FF6                     l3134:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3419  001FF6  0EF7               	movlw	247
  3420  001FF8  0100               	movlb	0	; () banked
  3421  001FFA  6FCB               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;inc\CANlib.h: 278: }
  3425                           
  3426                           ;inc\CANlib.h: 277: break;
  3427  001FFC  D022               	goto	l3140
  3428  001FFE                     l3138:
  3429  001FFE  0E9F               	movlw	159
  3430  002000  0100               	movlb	0	; () banked
  3431  002002  6FC5               	movwf	??_CANInitialize& (0+255),b
  3432  002004  0EFF               	movlw	255
  3433  002006  0100               	movlb	0	; () banked
  3434  002008  6FC6               	movwf	(??_CANInitialize+1)& (0+255),b
  3435  00200A  0100               	movlb	0	; () banked
  3436  00200C  51C4               	movf	CANInitialize@flags& (0+255),w,b
  3437  00200E  0B60               	andlw	96
  3438  002010  0100               	movlb	0	; () banked
  3439  002012  6FC7               	movwf	(??_CANInitialize+2)& (0+255),b
  3440  002014  6BC8               	clrf	(??_CANInitialize+3)& (0+255),b
  3441  002016  0100               	movlb	0	; () banked
  3442  002018  51C5               	movf	??_CANInitialize& (0+255),w,b
  3443  00201A  0100               	movlb	0	; () banked
  3444  00201C  13C7               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3445  00201E  0100               	movlb	0	; () banked
  3446  002020  51C6               	movf	(??_CANInitialize+1)& (0+255),w,b
  3447  002022  0100               	movlb	0	; () banked
  3448  002024  13C8               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3449                           
  3450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3451                           ; Switch size 1, requested type "space"
  3452                           ; Number of cases is 1, Range of values is 0 to 0
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte            4     3 (average)
  3456                           ;	Chosen strategy is simple_byte
  3457  002026  0100               	movlb	0	; () banked
  3458  002028  51C8               	movf	(??_CANInitialize+3)& (0+255),w,b
  3459  00202A  0A00               	xorlw	0	; case 0
  3460  00202C  A4D8               	btfss	status,2,c
  3461  00202E  D7E1               	goto	l369
  3462                           
  3463                           ; BSR set to: 0
  3464                           ; Switch size 1, requested type "space"
  3465                           ; Number of cases is 2, Range of values is 191 to 223
  3466                           ; switch strategies available:
  3467                           ; Name         Instructions Cycles
  3468                           ; simple_byte            7     4 (average)
  3469                           ;	Chosen strategy is simple_byte
  3470  002030  0100               	movlb	0	; () banked
  3471  002032  51C7               	movf	(??_CANInitialize+2)& (0+255),w,b
  3472  002034  0ABF               	xorlw	191	; case 191
  3473  002036  B4D8               	btfsc	status,2,c
  3474  002038  D7D7               	goto	l368
  3475  00203A  0A60               	xorlw	96	; case 223
  3476  00203C  B4D8               	btfsc	status,2,c
  3477  00203E  D7D0               	goto	l3132
  3478  002040  D7D8               	goto	l369
  3479  002042                     l3140:
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3483  002042  0E00               	movlw	0
  3484  002044  0100               	movlb	0	; () banked
  3485  002046  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3486  002048  0E00               	movlw	0
  3487  00204A  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3488  00204C  0E00               	movlw	0
  3489  00204E  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3490  002050  0E00               	movlw	0
  3491  002052  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3492  002054  C0CA  F0B6         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3493  002058  0E00               	movlw	0
  3494  00205A  EC82  F000         	call	_CANSetFilter
  3495                           
  3496                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3497  00205E  0E00               	movlw	0
  3498  002060  0100               	movlb	0	; () banked
  3499  002062  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3500  002064  0E00               	movlw	0
  3501  002066  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3502  002068  0E00               	movlw	0
  3503  00206A  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3504  00206C  0E00               	movlw	0
  3505  00206E  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3506  002070  C0CA  F0B6         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3507  002074  0E01               	movlw	1
  3508  002076  EC82  F000         	call	_CANSetFilter
  3509                           
  3510                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3511  00207A  0E00               	movlw	0
  3512  00207C  0100               	movlb	0	; () banked
  3513  00207E  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3514  002080  0E00               	movlw	0
  3515  002082  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3516  002084  0E00               	movlw	0
  3517  002086  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3518  002088  0E00               	movlw	0
  3519  00208A  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3520  00208C  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3521  002090  0E02               	movlw	2
  3522  002092  EC82  F000         	call	_CANSetFilter
  3523                           
  3524                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3525  002096  0E00               	movlw	0
  3526  002098  0100               	movlb	0	; () banked
  3527  00209A  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3528  00209C  0E00               	movlw	0
  3529  00209E  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3530  0020A0  0E00               	movlw	0
  3531  0020A2  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3532  0020A4  0E00               	movlw	0
  3533  0020A6  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3534  0020A8  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3535  0020AC  0E03               	movlw	3
  3536  0020AE  EC82  F000         	call	_CANSetFilter
  3537                           
  3538                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3539  0020B2  0E00               	movlw	0
  3540  0020B4  0100               	movlb	0	; () banked
  3541  0020B6  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3542  0020B8  0E00               	movlw	0
  3543  0020BA  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3544  0020BC  0E00               	movlw	0
  3545  0020BE  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3546  0020C0  0E00               	movlw	0
  3547  0020C2  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3548  0020C4  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3549  0020C8  0E04               	movlw	4
  3550  0020CA  EC82  F000         	call	_CANSetFilter
  3551                           
  3552                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3553  0020CE  0E00               	movlw	0
  3554  0020D0  0100               	movlb	0	; () banked
  3555  0020D2  6FB2               	movwf	CANSetFilter@filter& (0+255),b
  3556  0020D4  0E00               	movlw	0
  3557  0020D6  6FB3               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3558  0020D8  0E00               	movlw	0
  3559  0020DA  6FB4               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3560  0020DC  0E00               	movlw	0
  3561  0020DE  6FB5               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3562  0020E0  C0CB  F0B6         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3563  0020E4  0E05               	movlw	5
  3564  0020E6  EC82  F000         	call	_CANSetFilter
  3565                           
  3566                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3567  0020EA  0E00               	movlw	0
  3568  0020EC  EC12  F014         	call	_CANOperationMode
  3569  0020F0  0012               	return		;funcret
  3570  0020F2                     __end_of_CANInitialize:
  3571                           	opt stack 0
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           prodh	equ	0xFF4
  3577                           prodl	equ	0xFF3
  3578                           intcon	equ	0xFF2
  3579                           intcon2	equ	0xFF1
  3580                           intcon3	equ	0xFF0
  3581                           postinc0	equ	0xFEE
  3582                           wreg	equ	0xFE8
  3583                           postdec1	equ	0xFE5
  3584                           fsr1l	equ	0xFE1
  3585                           indf2	equ	0xFDF
  3586                           fsr2h	equ	0xFDA
  3587                           fsr2l	equ	0xFD9
  3588                           status	equ	0xFD8
  3589                           
  3590 ;; *************** function _CANSetMask *****************
  3591 ;; Defined at:
  3592 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  numBuffer       1    wreg     enum E16878
  3595 ;;  mask            4   22[BANK0 ] unsigned long 
  3596 ;;  type            1   26[BANK0 ] enum E16844
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  numBuffer       1   31[BANK0 ] enum E16878
  3599 ;;  tamp            4   32[BANK0 ] unsigned long 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3609 ;;      Params:         0       5       0       0
  3610 ;;      Locals:         0       5       0       0
  3611 ;;      Temps:          0       4       0       0
  3612 ;;      Totals:         0      14       0       0
  3613 ;;Total ram usage:       14 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    4
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_CANInitialize
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text8
  3624  0018A2                     __ptext8:
  3625                           	opt stack 0
  3626  0018A2                     _CANSetMask:
  3627                           	opt stack 24
  3628                           
  3629                           ;incstack = 0
  3630                           ;CANSetMask@numBuffer stored from wreg
  3631  0018A2  0100               	movlb	0	; () banked
  3632  0018A4  6FBB               	movwf	CANSetMask@numBuffer& (0+255),b
  3633                           
  3634                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3635  0018A6  0100               	movlb	0	; () banked
  3636  0018A8  05BB               	decf	CANSetMask@numBuffer& (0+255),w,b
  3637  0018AA  A4D8               	btfss	status,2,c
  3638  0018AC  D056               	goto	l2696
  3639                           
  3640                           ; BSR set to: 0
  3641  0018AE  0100               	movlb	0	; () banked
  3642  0018B0  29B6               	incf	CANSetMask@type& (0+255),w,b
  3643  0018B2  A4D8               	btfss	status,2,c
  3644  0018B4  D052               	goto	l2696
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;inc\CANlib.h: 644: {
  3648                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3649  0018B6  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  3650  0018BA  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3651  0018BE  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3652  0018C2  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3653  0018C6  0E04               	movlw	4
  3654  0018C8  D006               	goto	u2280
  3655  0018CA                     u2285:
  3656  0018CA  0100               	movlb	0	; () banked
  3657  0018CC  90D8               	bcf	status,0,c
  3658  0018CE  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3659  0018D0  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3660  0018D2  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3661  0018D4  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  3662  0018D6                     u2280:
  3663  0018D6  2EE8               	decfsz	wreg,f,c
  3664  0018D8  D7F8               	goto	u2285
  3665  0018DA  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3666  0018DE  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3667  0018E2  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3668  0018E6  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3672  0018EA  0100               	movlb	0	; () banked
  3673  0018EC  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  3674  0018EE  0100               	movlb	0	; () banked
  3675  0018F0  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3676  0018F2  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3677  0018F4  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3678  0018F6  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3682  0018F8  C0BC  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3686  0018FC  0E07               	movlw	7
  3687  0018FE  0100               	movlb	0	; () banked
  3688  001900  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  3689  001902  0100               	movlb	0	; () banked
  3690  001904  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3691  001906  0E00               	movlw	0
  3692  001908  0100               	movlb	0	; () banked
  3693  00190A  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3694  00190C  0100               	movlb	0	; () banked
  3695  00190E  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3696  001910  0E00               	movlw	0
  3697  001912  0100               	movlb	0	; () banked
  3698  001914  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3699  001916  0100               	movlb	0	; () banked
  3700  001918  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3701  00191A  0E00               	movlw	0
  3702  00191C  0100               	movlb	0	; () banked
  3703  00191E  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3704  001920  0100               	movlb	0	; () banked
  3705  001922  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3709  001924  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  3710  001928  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3711  00192C  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3712  001930  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3713  001934  0E05               	movlw	5
  3714  001936                     u2295:
  3715  001936  90D8               	bcf	status,0,c
  3716  001938  0100               	movlb	0	; () banked
  3717  00193A  37B7               	rlcf	??_CANSetMask& (0+255),f,b
  3718  00193C  37B8               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3719  00193E  37B9               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3720  001940  37BA               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3721  001942  2EE8               	decfsz	wreg,f,c
  3722  001944  D7F8               	goto	u2295
  3723  001946  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3724  00194A  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3725  00194E  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3726  001952  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3730  001956  C0BC  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3731  00195A                     l2696:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 652: }
  3735                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3736  00195A  0E02               	movlw	2
  3737  00195C  0100               	movlb	0	; () banked
  3738  00195E  19BB               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3739  001960  A4D8               	btfss	status,2,c
  3740  001962  D056               	goto	l2712
  3741                           
  3742                           ; BSR set to: 0
  3743  001964  0100               	movlb	0	; () banked
  3744  001966  29B6               	incf	CANSetMask@type& (0+255),w,b
  3745  001968  A4D8               	btfss	status,2,c
  3746  00196A  D052               	goto	l2712
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 655: {
  3750                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3751  00196C  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  3752  001970  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3753  001974  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3754  001978  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3755  00197C  0E04               	movlw	4
  3756  00197E  D006               	goto	u2320
  3757  001980                     u2325:
  3758  001980  0100               	movlb	0	; () banked
  3759  001982  90D8               	bcf	status,0,c
  3760  001984  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3761  001986  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3762  001988  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3763  00198A  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  3764  00198C                     u2320:
  3765  00198C  2EE8               	decfsz	wreg,f,c
  3766  00198E  D7F8               	goto	u2325
  3767  001990  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3768  001994  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3769  001998  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3770  00199C  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3774  0019A0  0100               	movlb	0	; () banked
  3775  0019A2  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  3776  0019A4  0100               	movlb	0	; () banked
  3777  0019A6  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3778  0019A8  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3779  0019AA  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3780  0019AC  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3784  0019AE  C0BC  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3788  0019B2  0E07               	movlw	7
  3789  0019B4  0100               	movlb	0	; () banked
  3790  0019B6  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  3791  0019B8  0100               	movlb	0	; () banked
  3792  0019BA  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3793  0019BC  0E00               	movlw	0
  3794  0019BE  0100               	movlb	0	; () banked
  3795  0019C0  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3796  0019C2  0100               	movlb	0	; () banked
  3797  0019C4  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3798  0019C6  0E00               	movlw	0
  3799  0019C8  0100               	movlb	0	; () banked
  3800  0019CA  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3801  0019CC  0100               	movlb	0	; () banked
  3802  0019CE  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3803  0019D0  0E00               	movlw	0
  3804  0019D2  0100               	movlb	0	; () banked
  3805  0019D4  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3806  0019D6  0100               	movlb	0	; () banked
  3807  0019D8  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3811  0019DA  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  3812  0019DE  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3813  0019E2  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3814  0019E6  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3815  0019EA  0E05               	movlw	5
  3816  0019EC                     u2335:
  3817  0019EC  90D8               	bcf	status,0,c
  3818  0019EE  0100               	movlb	0	; () banked
  3819  0019F0  37B7               	rlcf	??_CANSetMask& (0+255),f,b
  3820  0019F2  37B8               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3821  0019F4  37B9               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3822  0019F6  37BA               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3823  0019F8  2EE8               	decfsz	wreg,f,c
  3824  0019FA  D7F8               	goto	u2335
  3825  0019FC  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3826  001A00  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3827  001A04  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3828  001A08  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3832  001A0C  C0BC  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3833  001A10                     l2712:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;inc\CANlib.h: 663: }
  3837                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3838  001A10  0100               	movlb	0	; () banked
  3839  001A12  05BB               	decf	CANSetMask@numBuffer& (0+255),w,b
  3840  001A14  A4D8               	btfss	status,2,c
  3841  001A16  D087               	goto	l2744
  3842                           
  3843                           ; BSR set to: 0
  3844  001A18  0EF7               	movlw	247
  3845  001A1A  0100               	movlb	0	; () banked
  3846  001A1C  19B6               	xorwf	CANSetMask@type& (0+255),w,b
  3847  001A1E  A4D8               	btfss	status,2,c
  3848  001A20  D082               	goto	l2744
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;inc\CANlib.h: 666: {
  3852                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3853  001A22  0100               	movlb	0	; () banked
  3854  001A24  51B2               	movf	CANSetMask@mask& (0+255),w,b
  3855  001A26  0100               	movlb	0	; () banked
  3856  001A28  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3857  001A2A  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3858  001A2C  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3859  001A2E  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3863  001A30  C0BC  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3867  001A34  0E00               	movlw	0
  3868  001A36  0100               	movlb	0	; () banked
  3869  001A38  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  3870  001A3A  0100               	movlb	0	; () banked
  3871  001A3C  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  3872  001A3E  0EFF               	movlw	255
  3873  001A40  0100               	movlb	0	; () banked
  3874  001A42  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3875  001A44  0100               	movlb	0	; () banked
  3876  001A46  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3877  001A48  0E00               	movlw	0
  3878  001A4A  0100               	movlb	0	; () banked
  3879  001A4C  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3880  001A4E  0100               	movlb	0	; () banked
  3881  001A50  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3882  001A52  0E00               	movlw	0
  3883  001A54  0100               	movlb	0	; () banked
  3884  001A56  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3885  001A58  0100               	movlb	0	; () banked
  3886  001A5A  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3890  001A5C  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  3891  001A60  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3892  001A64  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3893  001A68  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3894  001A6C  C0B8  F0B7         	movff	??_CANSetMask+1,??_CANSetMask
  3895  001A70  C0B9  F0B8         	movff	??_CANSetMask+2,??_CANSetMask+1
  3896  001A74  C0BA  F0B9         	movff	??_CANSetMask+3,??_CANSetMask+2
  3897  001A78  0100               	movlb	0	; () banked
  3898  001A7A  6BBA               	clrf	(??_CANSetMask+3)& (0+255),b
  3899  001A7C  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  3900  001A80  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3901  001A84  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3902  001A88  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3906  001A8C  C0BC  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3910  001A90  0100               	movlb	0	; () banked
  3911  001A92  A1B4               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3912  001A94  D003               	goto	l442
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3916  001A96  010F               	movlb	15	; () banked
  3917  001A98  8119               	bsf	25,0,b	;volatile
  3918  001A9A  D002               	goto	l443
  3919  001A9C                     l442:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 676: else
  3923                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3924  001A9C  010F               	movlb	15	; () banked
  3925  001A9E  9119               	bcf	25,0,b	;volatile
  3926  001AA0                     l443:
  3927                           
  3928                           ; BSR set to: 15
  3929                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3930  001AA0  0100               	movlb	0	; () banked
  3931  001AA2  A3B4               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3932  001AA4  D003               	goto	l444
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3936  001AA6  010F               	movlb	15	; () banked
  3937  001AA8  8319               	bsf	25,1,b	;volatile
  3938  001AAA  D002               	goto	l445
  3939  001AAC                     l444:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 681: else
  3943                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3944  001AAC  010F               	movlb	15	; () banked
  3945  001AAE  9319               	bcf	25,1,b	;volatile
  3946  001AB0                     l445:
  3947                           
  3948                           ; BSR set to: 15
  3949                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3950  001AB0  0100               	movlb	0	; () banked
  3951  001AB2  A5B4               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3952  001AB4  D003               	goto	l446
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3956  001AB6  010F               	movlb	15	; () banked
  3957  001AB8  8B19               	bsf	25,5,b	;volatile
  3958  001ABA  D002               	goto	l447
  3959  001ABC                     l446:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;inc\CANlib.h: 686: else
  3963                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3964  001ABC  010F               	movlb	15	; () banked
  3965  001ABE  9B19               	bcf	25,5,b	;volatile
  3966  001AC0                     l447:
  3967                           
  3968                           ; BSR set to: 15
  3969                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3970  001AC0  0100               	movlb	0	; () banked
  3971  001AC2  A7B4               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3972  001AC4  D003               	goto	l448
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3976  001AC6  010F               	movlb	15	; () banked
  3977  001AC8  8D19               	bsf	25,6,b	;volatile
  3978  001ACA  D002               	goto	l449
  3979  001ACC                     l448:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;inc\CANlib.h: 691: else
  3983                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3984  001ACC  010F               	movlb	15	; () banked
  3985  001ACE  9D19               	bcf	25,6,b	;volatile
  3986  001AD0                     l449:
  3987                           
  3988                           ; BSR set to: 15
  3989                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3990  001AD0  0100               	movlb	0	; () banked
  3991  001AD2  A9B4               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3992  001AD4  D003               	goto	l450
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3996  001AD6  010F               	movlb	15	; () banked
  3997  001AD8  8F19               	bsf	25,7,b	;volatile
  3998  001ADA  D002               	goto	l2738
  3999  001ADC                     l450:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;inc\CANlib.h: 696: else
  4003                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4004  001ADC  010F               	movlb	15	; () banked
  4005  001ADE  9F19               	bcf	25,7,b	;volatile
  4006  001AE0                     l2738:
  4007                           
  4008                           ; BSR set to: 15
  4009                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4010  001AE0  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  4011  001AE4  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4012  001AE8  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4013  001AEC  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4014  001AF0  0E16               	movlw	22
  4015  001AF2  D006               	goto	u2410
  4016  001AF4                     u2415:
  4017  001AF4  0100               	movlb	0	; () banked
  4018  001AF6  90D8               	bcf	status,0,c
  4019  001AF8  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4020  001AFA  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4021  001AFC  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4022  001AFE  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  4023  001B00                     u2410:
  4024  001B00  2EE8               	decfsz	wreg,f,c
  4025  001B02  D7F8               	goto	u2415
  4026  001B04  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  4027  001B08  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4028  001B0C  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4029  001B10  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4033  001B14  0100               	movlb	0	; () banked
  4034  001B16  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  4035  001B18  0100               	movlb	0	; () banked
  4036  001B1A  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4037  001B1C  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4038  001B1E  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4039  001B20  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4043  001B22  C0BC  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4044  001B26                     l2744:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;inc\CANlib.h: 702: }
  4048                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4049  001B26  0E02               	movlw	2
  4050  001B28  0100               	movlb	0	; () banked
  4051  001B2A  19BB               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4052  001B2C  A4D8               	btfss	status,2,c
  4053  001B2E  0012               	return	
  4054                           
  4055                           ; BSR set to: 0
  4056  001B30  0EF7               	movlw	247
  4057  001B32  0100               	movlb	0	; () banked
  4058  001B34  19B6               	xorwf	CANSetMask@type& (0+255),w,b
  4059  001B36  A4D8               	btfss	status,2,c
  4060  001B38  0012               	return	
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;inc\CANlib.h: 705: {
  4064                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4065  001B3A  0100               	movlb	0	; () banked
  4066  001B3C  51B2               	movf	CANSetMask@mask& (0+255),w,b
  4067  001B3E  0100               	movlb	0	; () banked
  4068  001B40  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4069  001B42  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4070  001B44  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4071  001B46  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4075  001B48  C0BC  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4079  001B4C  0E00               	movlw	0
  4080  001B4E  0100               	movlb	0	; () banked
  4081  001B50  15B2               	andwf	CANSetMask@mask& (0+255),w,b
  4082  001B52  0100               	movlb	0	; () banked
  4083  001B54  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4084  001B56  0EFF               	movlw	255
  4085  001B58  0100               	movlb	0	; () banked
  4086  001B5A  15B3               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4087  001B5C  0100               	movlb	0	; () banked
  4088  001B5E  6FBD               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4089  001B60  0E00               	movlw	0
  4090  001B62  0100               	movlb	0	; () banked
  4091  001B64  15B4               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4092  001B66  0100               	movlb	0	; () banked
  4093  001B68  6FBE               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4094  001B6A  0E00               	movlw	0
  4095  001B6C  0100               	movlb	0	; () banked
  4096  001B6E  15B5               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4097  001B70  0100               	movlb	0	; () banked
  4098  001B72  6FBF               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4102  001B74  C0BC  F0B7         	movff	CANSetMask@tamp,??_CANSetMask
  4103  001B78  C0BD  F0B8         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4104  001B7C  C0BE  F0B9         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4105  001B80  C0BF  F0BA         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4106  001B84  C0B8  F0B7         	movff	??_CANSetMask+1,??_CANSetMask
  4107  001B88  C0B9  F0B8         	movff	??_CANSetMask+2,??_CANSetMask+1
  4108  001B8C  C0BA  F0B9         	movff	??_CANSetMask+3,??_CANSetMask+2
  4109  001B90  0100               	movlb	0	; () banked
  4110  001B92  6BBA               	clrf	(??_CANSetMask+3)& (0+255),b
  4111  001B94  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  4112  001B98  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4113  001B9C  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4114  001BA0  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4118  001BA4  C0BC  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4122  001BA8  0100               	movlb	0	; () banked
  4123  001BAA  A1B4               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4124  001BAC  D003               	goto	l453
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4128  001BAE  010F               	movlb	15	; () banked
  4129  001BB0  811D               	bsf	29,0,b	;volatile
  4130  001BB2  D002               	goto	l454
  4131  001BB4                     l453:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 715: else
  4135                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4136  001BB4  010F               	movlb	15	; () banked
  4137  001BB6  911D               	bcf	29,0,b	;volatile
  4138  001BB8                     l454:
  4139                           
  4140                           ; BSR set to: 15
  4141                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4142  001BB8  0100               	movlb	0	; () banked
  4143  001BBA  A3B4               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4144  001BBC  D003               	goto	l455
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4148  001BBE  010F               	movlb	15	; () banked
  4149  001BC0  831D               	bsf	29,1,b	;volatile
  4150  001BC2  D002               	goto	l456
  4151  001BC4                     l455:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;inc\CANlib.h: 720: else
  4155                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4156  001BC4  010F               	movlb	15	; () banked
  4157  001BC6  931D               	bcf	29,1,b	;volatile
  4158  001BC8                     l456:
  4159                           
  4160                           ; BSR set to: 15
  4161                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4162  001BC8  0100               	movlb	0	; () banked
  4163  001BCA  A5B4               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4164  001BCC  D003               	goto	l457
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4168  001BCE  010F               	movlb	15	; () banked
  4169  001BD0  8B1D               	bsf	29,5,b	;volatile
  4170  001BD2  D002               	goto	l458
  4171  001BD4                     l457:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;inc\CANlib.h: 725: else
  4175                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4176  001BD4  010F               	movlb	15	; () banked
  4177  001BD6  9B1D               	bcf	29,5,b	;volatile
  4178  001BD8                     l458:
  4179                           
  4180                           ; BSR set to: 15
  4181                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4182  001BD8  0100               	movlb	0	; () banked
  4183  001BDA  A7B4               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4184  001BDC  D003               	goto	l459
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4188  001BDE  010F               	movlb	15	; () banked
  4189  001BE0  8D1D               	bsf	29,6,b	;volatile
  4190  001BE2  D002               	goto	l460
  4191  001BE4                     l459:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 730: else
  4195                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4196  001BE4  010F               	movlb	15	; () banked
  4197  001BE6  9D1D               	bcf	29,6,b	;volatile
  4198  001BE8                     l460:
  4199                           
  4200                           ; BSR set to: 15
  4201                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4202  001BE8  0100               	movlb	0	; () banked
  4203  001BEA  A9B4               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4204  001BEC  D003               	goto	l461
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4208  001BEE  010F               	movlb	15	; () banked
  4209  001BF0  8F1D               	bsf	29,7,b	;volatile
  4210  001BF2  D002               	goto	l2770
  4211  001BF4                     l461:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 735: else
  4215                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4216  001BF4  010F               	movlb	15	; () banked
  4217  001BF6  9F1D               	bcf	29,7,b	;volatile
  4218  001BF8                     l2770:
  4219                           
  4220                           ; BSR set to: 15
  4221                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4222  001BF8  C0B2  F0B7         	movff	CANSetMask@mask,??_CANSetMask
  4223  001BFC  C0B3  F0B8         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4224  001C00  C0B4  F0B9         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4225  001C04  C0B5  F0BA         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4226  001C08  0E16               	movlw	22
  4227  001C0A  D006               	goto	u2490
  4228  001C0C                     u2495:
  4229  001C0C  0100               	movlb	0	; () banked
  4230  001C0E  90D8               	bcf	status,0,c
  4231  001C10  33BA               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4232  001C12  33B9               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4233  001C14  33B8               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4234  001C16  33B7               	rrcf	??_CANSetMask& (0+255),f,b
  4235  001C18                     u2490:
  4236  001C18  2EE8               	decfsz	wreg,f,c
  4237  001C1A  D7F8               	goto	u2495
  4238  001C1C  C0B7  F0BC         	movff	??_CANSetMask,CANSetMask@tamp
  4239  001C20  C0B8  F0BD         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4240  001C24  C0B9  F0BE         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4241  001C28  C0BA  F0BF         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4245  001C2C  0100               	movlb	0	; () banked
  4246  001C2E  51BC               	movf	CANSetMask@tamp& (0+255),w,b
  4247  001C30  0100               	movlb	0	; () banked
  4248  001C32  6FBC               	movwf	CANSetMask@tamp& (0+255),b
  4249  001C34  6BBD               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4250  001C36  6BBE               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4251  001C38  6BBF               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4255  001C3A  C0BC  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4256  001C3E  0012               	return	
  4257  001C40                     __end_of_CANSetMask:
  4258                           	opt stack 0
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           prodh	equ	0xFF4
  4264                           prodl	equ	0xFF3
  4265                           intcon	equ	0xFF2
  4266                           intcon2	equ	0xFF1
  4267                           intcon3	equ	0xFF0
  4268                           postinc0	equ	0xFEE
  4269                           wreg	equ	0xFE8
  4270                           postdec1	equ	0xFE5
  4271                           fsr1l	equ	0xFE1
  4272                           indf2	equ	0xFDF
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277 ;; *************** function _CANSetFilter *****************
  4278 ;; Defined at:
  4279 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  numBuffer       1    wreg     enum E16881
  4282 ;;  filter          4   22[BANK0 ] unsigned long 
  4283 ;;  type            1   26[BANK0 ] enum E16844
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  numBuffer       1   31[BANK0 ] enum E16881
  4286 ;;  tamp            4   32[BANK0 ] unsigned long 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;		None               void
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4296 ;;      Params:         0       5       0       0
  4297 ;;      Locals:         0       5       0       0
  4298 ;;      Temps:          0       4       0       0
  4299 ;;      Totals:         0      14       0       0
  4300 ;;Total ram usage:       14 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    4
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_CANInitialize
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text9
  4311  000104                     __ptext9:
  4312                           	opt stack 0
  4313  000104                     _CANSetFilter:
  4314                           	opt stack 24
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;incstack = 0
  4318                           ;CANSetFilter@numBuffer stored from wreg
  4319  000104  0100               	movlb	0	; () banked
  4320  000106  6FBB               	movwf	CANSetFilter@numBuffer& (0+255),b
  4321                           
  4322                           ;inc\CANlib.h: 750: unsigned long tamp;
  4323                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4324  000108  0100               	movlb	0	; () banked
  4325  00010A  51BB               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4326  00010C  0100               	movlb	0	; () banked
  4327  00010E  A4D8               	btfss	status,2,c
  4328  000110  D058               	goto	l2794
  4329                           
  4330                           ; BSR set to: 0
  4331  000112  0100               	movlb	0	; () banked
  4332  000114  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4333  000116  A4D8               	btfss	status,2,c
  4334  000118  D054               	goto	l2794
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;inc\CANlib.h: 753: {
  4338                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4339  00011A  010F               	movlb	15	; () banked
  4340  00011C  9701               	bcf	1,3,b	;volatile
  4341                           
  4342                           ; BSR set to: 15
  4343                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4344  00011E  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4345  000122  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4346  000126  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4347  00012A  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4348  00012E  0E04               	movlw	4
  4349  000130  D006               	goto	u2520
  4350  000132                     u2525:
  4351  000132  0100               	movlb	0	; () banked
  4352  000134  90D8               	bcf	status,0,c
  4353  000136  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4354  000138  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4355  00013A  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4356  00013C  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4357  00013E                     u2520:
  4358  00013E  2EE8               	decfsz	wreg,f,c
  4359  000140  D7F8               	goto	u2525
  4360  000142  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4361  000146  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4362  00014A  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4363  00014E  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4367  000152  0100               	movlb	0	; () banked
  4368  000154  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4369  000156  0100               	movlb	0	; () banked
  4370  000158  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4371  00015A  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4372  00015C  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4373  00015E  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4377  000160  C0BC  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4381  000164  0E07               	movlw	7
  4382  000166  0100               	movlb	0	; () banked
  4383  000168  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4384  00016A  0100               	movlb	0	; () banked
  4385  00016C  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4386  00016E  0E00               	movlw	0
  4387  000170  0100               	movlb	0	; () banked
  4388  000172  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4389  000174  0100               	movlb	0	; () banked
  4390  000176  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4391  000178  0E00               	movlw	0
  4392  00017A  0100               	movlb	0	; () banked
  4393  00017C  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4394  00017E  0100               	movlb	0	; () banked
  4395  000180  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4396  000182  0E00               	movlw	0
  4397  000184  0100               	movlb	0	; () banked
  4398  000186  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4399  000188  0100               	movlb	0	; () banked
  4400  00018A  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4404  00018C  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4405  000190  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4406  000194  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4407  000198  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4408  00019C  0E05               	movlw	5
  4409  00019E                     u2535:
  4410  00019E  90D8               	bcf	status,0,c
  4411  0001A0  0100               	movlb	0	; () banked
  4412  0001A2  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4413  0001A4  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4414  0001A6  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4415  0001A8  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4416  0001AA  2EE8               	decfsz	wreg,f,c
  4417  0001AC  D7F8               	goto	u2535
  4418  0001AE  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4419  0001B2  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4420  0001B6  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4421  0001BA  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4425  0001BE  C0BC  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4426  0001C2                     l2794:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;inc\CANlib.h: 763: }
  4430                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4431  0001C2  0100               	movlb	0	; () banked
  4432  0001C4  05BB               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4433  0001C6  A4D8               	btfss	status,2,c
  4434  0001C8  D058               	goto	l2812
  4435                           
  4436                           ; BSR set to: 0
  4437  0001CA  0100               	movlb	0	; () banked
  4438  0001CC  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4439  0001CE  A4D8               	btfss	status,2,c
  4440  0001D0  D054               	goto	l2812
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;inc\CANlib.h: 766: {
  4444                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4445  0001D2  010F               	movlb	15	; () banked
  4446  0001D4  9705               	bcf	5,3,b	;volatile
  4447                           
  4448                           ; BSR set to: 15
  4449                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4450  0001D6  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4451  0001DA  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4452  0001DE  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4453  0001E2  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4454  0001E6  0E04               	movlw	4
  4455  0001E8  D006               	goto	u2560
  4456  0001EA                     u2565:
  4457  0001EA  0100               	movlb	0	; () banked
  4458  0001EC  90D8               	bcf	status,0,c
  4459  0001EE  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4460  0001F0  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4461  0001F2  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4462  0001F4  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4463  0001F6                     u2560:
  4464  0001F6  2EE8               	decfsz	wreg,f,c
  4465  0001F8  D7F8               	goto	u2565
  4466  0001FA  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4467  0001FE  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4468  000202  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4469  000206  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4473  00020A  0100               	movlb	0	; () banked
  4474  00020C  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4475  00020E  0100               	movlb	0	; () banked
  4476  000210  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4477  000212  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4478  000214  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4479  000216  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4483  000218  C0BC  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4487  00021C  0E07               	movlw	7
  4488  00021E  0100               	movlb	0	; () banked
  4489  000220  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4490  000222  0100               	movlb	0	; () banked
  4491  000224  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4492  000226  0E00               	movlw	0
  4493  000228  0100               	movlb	0	; () banked
  4494  00022A  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4495  00022C  0100               	movlb	0	; () banked
  4496  00022E  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4497  000230  0E00               	movlw	0
  4498  000232  0100               	movlb	0	; () banked
  4499  000234  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4500  000236  0100               	movlb	0	; () banked
  4501  000238  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4502  00023A  0E00               	movlw	0
  4503  00023C  0100               	movlb	0	; () banked
  4504  00023E  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4505  000240  0100               	movlb	0	; () banked
  4506  000242  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4510  000244  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4511  000248  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4512  00024C  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4513  000250  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4514  000254  0E05               	movlw	5
  4515  000256                     u2575:
  4516  000256  90D8               	bcf	status,0,c
  4517  000258  0100               	movlb	0	; () banked
  4518  00025A  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4519  00025C  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4520  00025E  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4521  000260  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4522  000262  2EE8               	decfsz	wreg,f,c
  4523  000264  D7F8               	goto	u2575
  4524  000266  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4525  00026A  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4526  00026E  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4527  000272  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4531  000276  C0BC  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4532  00027A                     l2812:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;inc\CANlib.h: 776: }
  4536                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4537  00027A  0E02               	movlw	2
  4538  00027C  0100               	movlb	0	; () banked
  4539  00027E  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4540  000280  A4D8               	btfss	status,2,c
  4541  000282  D058               	goto	l2830
  4542                           
  4543                           ; BSR set to: 0
  4544  000284  0100               	movlb	0	; () banked
  4545  000286  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4546  000288  A4D8               	btfss	status,2,c
  4547  00028A  D054               	goto	l2830
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;inc\CANlib.h: 779: {
  4551                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4552  00028C  010F               	movlb	15	; () banked
  4553  00028E  9709               	bcf	9,3,b	;volatile
  4554                           
  4555                           ; BSR set to: 15
  4556                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4557  000290  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4558  000294  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4559  000298  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4560  00029C  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4561  0002A0  0E04               	movlw	4
  4562  0002A2  D006               	goto	u2600
  4563  0002A4                     u2605:
  4564  0002A4  0100               	movlb	0	; () banked
  4565  0002A6  90D8               	bcf	status,0,c
  4566  0002A8  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4567  0002AA  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4568  0002AC  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4569  0002AE  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4570  0002B0                     u2600:
  4571  0002B0  2EE8               	decfsz	wreg,f,c
  4572  0002B2  D7F8               	goto	u2605
  4573  0002B4  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4574  0002B8  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4575  0002BC  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4576  0002C0  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4580  0002C4  0100               	movlb	0	; () banked
  4581  0002C6  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4582  0002C8  0100               	movlb	0	; () banked
  4583  0002CA  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4584  0002CC  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4585  0002CE  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4586  0002D0  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4590  0002D2  C0BC  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4594  0002D6  0E07               	movlw	7
  4595  0002D8  0100               	movlb	0	; () banked
  4596  0002DA  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4597  0002DC  0100               	movlb	0	; () banked
  4598  0002DE  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4599  0002E0  0E00               	movlw	0
  4600  0002E2  0100               	movlb	0	; () banked
  4601  0002E4  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4602  0002E6  0100               	movlb	0	; () banked
  4603  0002E8  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4604  0002EA  0E00               	movlw	0
  4605  0002EC  0100               	movlb	0	; () banked
  4606  0002EE  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4607  0002F0  0100               	movlb	0	; () banked
  4608  0002F2  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4609  0002F4  0E00               	movlw	0
  4610  0002F6  0100               	movlb	0	; () banked
  4611  0002F8  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4612  0002FA  0100               	movlb	0	; () banked
  4613  0002FC  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4617  0002FE  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4618  000302  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4619  000306  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4620  00030A  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4621  00030E  0E05               	movlw	5
  4622  000310                     u2615:
  4623  000310  90D8               	bcf	status,0,c
  4624  000312  0100               	movlb	0	; () banked
  4625  000314  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4626  000316  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4627  000318  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4628  00031A  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4629  00031C  2EE8               	decfsz	wreg,f,c
  4630  00031E  D7F8               	goto	u2615
  4631  000320  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4632  000324  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4633  000328  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4634  00032C  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4638  000330  C0BC  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4639  000334                     l2830:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;inc\CANlib.h: 789: }
  4643                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4644  000334  0E03               	movlw	3
  4645  000336  0100               	movlb	0	; () banked
  4646  000338  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4647  00033A  A4D8               	btfss	status,2,c
  4648  00033C  D058               	goto	l2848
  4649                           
  4650                           ; BSR set to: 0
  4651  00033E  0100               	movlb	0	; () banked
  4652  000340  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4653  000342  A4D8               	btfss	status,2,c
  4654  000344  D054               	goto	l2848
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;inc\CANlib.h: 792: {
  4658                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4659  000346  010F               	movlb	15	; () banked
  4660  000348  970D               	bcf	13,3,b	;volatile
  4661                           
  4662                           ; BSR set to: 15
  4663                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4664  00034A  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4665  00034E  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4666  000352  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4667  000356  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4668  00035A  0E04               	movlw	4
  4669  00035C  D006               	goto	u2640
  4670  00035E                     u2645:
  4671  00035E  0100               	movlb	0	; () banked
  4672  000360  90D8               	bcf	status,0,c
  4673  000362  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4674  000364  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4675  000366  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4676  000368  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4677  00036A                     u2640:
  4678  00036A  2EE8               	decfsz	wreg,f,c
  4679  00036C  D7F8               	goto	u2645
  4680  00036E  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4681  000372  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4682  000376  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4683  00037A  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4687  00037E  0100               	movlb	0	; () banked
  4688  000380  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4689  000382  0100               	movlb	0	; () banked
  4690  000384  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4691  000386  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4692  000388  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4693  00038A  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4697  00038C  C0BC  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4701  000390  0E07               	movlw	7
  4702  000392  0100               	movlb	0	; () banked
  4703  000394  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4704  000396  0100               	movlb	0	; () banked
  4705  000398  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4706  00039A  0E00               	movlw	0
  4707  00039C  0100               	movlb	0	; () banked
  4708  00039E  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4709  0003A0  0100               	movlb	0	; () banked
  4710  0003A2  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4711  0003A4  0E00               	movlw	0
  4712  0003A6  0100               	movlb	0	; () banked
  4713  0003A8  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4714  0003AA  0100               	movlb	0	; () banked
  4715  0003AC  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4716  0003AE  0E00               	movlw	0
  4717  0003B0  0100               	movlb	0	; () banked
  4718  0003B2  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4719  0003B4  0100               	movlb	0	; () banked
  4720  0003B6  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4724  0003B8  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4725  0003BC  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4726  0003C0  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4727  0003C4  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4728  0003C8  0E05               	movlw	5
  4729  0003CA                     u2655:
  4730  0003CA  90D8               	bcf	status,0,c
  4731  0003CC  0100               	movlb	0	; () banked
  4732  0003CE  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4733  0003D0  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4734  0003D2  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4735  0003D4  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4736  0003D6  2EE8               	decfsz	wreg,f,c
  4737  0003D8  D7F8               	goto	u2655
  4738  0003DA  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4739  0003DE  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4740  0003E2  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4741  0003E6  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4745  0003EA  C0BC  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4746  0003EE                     l2848:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;inc\CANlib.h: 802: }
  4750                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4751  0003EE  0E04               	movlw	4
  4752  0003F0  0100               	movlb	0	; () banked
  4753  0003F2  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4754  0003F4  A4D8               	btfss	status,2,c
  4755  0003F6  D058               	goto	l2866
  4756                           
  4757                           ; BSR set to: 0
  4758  0003F8  0100               	movlb	0	; () banked
  4759  0003FA  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4760  0003FC  A4D8               	btfss	status,2,c
  4761  0003FE  D054               	goto	l2866
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;inc\CANlib.h: 805: {
  4765                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4766  000400  010F               	movlb	15	; () banked
  4767  000402  9711               	bcf	17,3,b	;volatile
  4768                           
  4769                           ; BSR set to: 15
  4770                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4771  000404  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4772  000408  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4773  00040C  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4774  000410  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4775  000414  0E04               	movlw	4
  4776  000416  D006               	goto	u2680
  4777  000418                     u2685:
  4778  000418  0100               	movlb	0	; () banked
  4779  00041A  90D8               	bcf	status,0,c
  4780  00041C  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4781  00041E  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4782  000420  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4783  000422  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4784  000424                     u2680:
  4785  000424  2EE8               	decfsz	wreg,f,c
  4786  000426  D7F8               	goto	u2685
  4787  000428  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4788  00042C  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4789  000430  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4790  000434  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4794  000438  0100               	movlb	0	; () banked
  4795  00043A  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4796  00043C  0100               	movlb	0	; () banked
  4797  00043E  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4798  000440  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4799  000442  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4800  000444  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4804  000446  C0BC  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4808  00044A  0E07               	movlw	7
  4809  00044C  0100               	movlb	0	; () banked
  4810  00044E  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4811  000450  0100               	movlb	0	; () banked
  4812  000452  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4813  000454  0E00               	movlw	0
  4814  000456  0100               	movlb	0	; () banked
  4815  000458  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4816  00045A  0100               	movlb	0	; () banked
  4817  00045C  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4818  00045E  0E00               	movlw	0
  4819  000460  0100               	movlb	0	; () banked
  4820  000462  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4821  000464  0100               	movlb	0	; () banked
  4822  000466  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4823  000468  0E00               	movlw	0
  4824  00046A  0100               	movlb	0	; () banked
  4825  00046C  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4826  00046E  0100               	movlb	0	; () banked
  4827  000470  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4831  000472  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4832  000476  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4833  00047A  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4834  00047E  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4835  000482  0E05               	movlw	5
  4836  000484                     u2695:
  4837  000484  90D8               	bcf	status,0,c
  4838  000486  0100               	movlb	0	; () banked
  4839  000488  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4840  00048A  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4841  00048C  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4842  00048E  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4843  000490  2EE8               	decfsz	wreg,f,c
  4844  000492  D7F8               	goto	u2695
  4845  000494  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4846  000498  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4847  00049C  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4848  0004A0  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4852  0004A4  C0BC  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4853  0004A8                     l2866:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;inc\CANlib.h: 815: }
  4857                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4858  0004A8  0E05               	movlw	5
  4859  0004AA  0100               	movlb	0	; () banked
  4860  0004AC  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4861  0004AE  A4D8               	btfss	status,2,c
  4862  0004B0  D058               	goto	l2884
  4863                           
  4864                           ; BSR set to: 0
  4865  0004B2  0100               	movlb	0	; () banked
  4866  0004B4  29B6               	incf	CANSetFilter@type& (0+255),w,b
  4867  0004B6  A4D8               	btfss	status,2,c
  4868  0004B8  D054               	goto	l2884
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;inc\CANlib.h: 818: {
  4872                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4873  0004BA  010F               	movlb	15	; () banked
  4874  0004BC  9715               	bcf	21,3,b	;volatile
  4875                           
  4876                           ; BSR set to: 15
  4877                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4878  0004BE  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  4879  0004C2  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4880  0004C6  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4881  0004CA  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4882  0004CE  0E04               	movlw	4
  4883  0004D0  D006               	goto	u2720
  4884  0004D2                     u2725:
  4885  0004D2  0100               	movlb	0	; () banked
  4886  0004D4  90D8               	bcf	status,0,c
  4887  0004D6  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4888  0004D8  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4889  0004DA  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4890  0004DC  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  4891  0004DE                     u2720:
  4892  0004DE  2EE8               	decfsz	wreg,f,c
  4893  0004E0  D7F8               	goto	u2725
  4894  0004E2  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4895  0004E6  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4896  0004EA  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4897  0004EE  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4901  0004F2  0100               	movlb	0	; () banked
  4902  0004F4  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  4903  0004F6  0100               	movlb	0	; () banked
  4904  0004F8  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4905  0004FA  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4906  0004FC  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4907  0004FE  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4911  000500  C0BC  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4915  000504  0E07               	movlw	7
  4916  000506  0100               	movlb	0	; () banked
  4917  000508  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  4918  00050A  0100               	movlb	0	; () banked
  4919  00050C  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4920  00050E  0E00               	movlw	0
  4921  000510  0100               	movlb	0	; () banked
  4922  000512  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4923  000514  0100               	movlb	0	; () banked
  4924  000516  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4925  000518  0E00               	movlw	0
  4926  00051A  0100               	movlb	0	; () banked
  4927  00051C  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4928  00051E  0100               	movlb	0	; () banked
  4929  000520  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4930  000522  0E00               	movlw	0
  4931  000524  0100               	movlb	0	; () banked
  4932  000526  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4933  000528  0100               	movlb	0	; () banked
  4934  00052A  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4938  00052C  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  4939  000530  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4940  000534  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4941  000538  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4942  00053C  0E05               	movlw	5
  4943  00053E                     u2735:
  4944  00053E  90D8               	bcf	status,0,c
  4945  000540  0100               	movlb	0	; () banked
  4946  000542  37B7               	rlcf	??_CANSetFilter& (0+255),f,b
  4947  000544  37B8               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4948  000546  37B9               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4949  000548  37BA               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4950  00054A  2EE8               	decfsz	wreg,f,c
  4951  00054C  D7F8               	goto	u2735
  4952  00054E  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  4953  000552  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4954  000556  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4955  00055A  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4959  00055E  C0BC  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4960  000562                     l2884:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;inc\CANlib.h: 828: }
  4964                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4965  000562  0100               	movlb	0	; () banked
  4966  000564  51BB               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4967  000566  0100               	movlb	0	; () banked
  4968  000568  A4D8               	btfss	status,2,c
  4969  00056A  D089               	goto	l2918
  4970                           
  4971                           ; BSR set to: 0
  4972  00056C  0EF7               	movlw	247
  4973  00056E  0100               	movlb	0	; () banked
  4974  000570  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  4975  000572  A4D8               	btfss	status,2,c
  4976  000574  D084               	goto	l2918
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;inc\CANlib.h: 832: {
  4980                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4981  000576  010F               	movlb	15	; () banked
  4982  000578  8701               	bsf	1,3,b	;volatile
  4983                           
  4984                           ; BSR set to: 15
  4985                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4986  00057A  0100               	movlb	0	; () banked
  4987  00057C  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  4988  00057E  0100               	movlb	0	; () banked
  4989  000580  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  4990  000582  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4991  000584  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4992  000586  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4996  000588  C0BC  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5000  00058C  0E00               	movlw	0
  5001  00058E  0100               	movlb	0	; () banked
  5002  000590  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5003  000592  0100               	movlb	0	; () banked
  5004  000594  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5005  000596  0EFF               	movlw	255
  5006  000598  0100               	movlb	0	; () banked
  5007  00059A  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5008  00059C  0100               	movlb	0	; () banked
  5009  00059E  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5010  0005A0  0E00               	movlw	0
  5011  0005A2  0100               	movlb	0	; () banked
  5012  0005A4  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5013  0005A6  0100               	movlb	0	; () banked
  5014  0005A8  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5015  0005AA  0E00               	movlw	0
  5016  0005AC  0100               	movlb	0	; () banked
  5017  0005AE  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5018  0005B0  0100               	movlb	0	; () banked
  5019  0005B2  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5023  0005B4  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5024  0005B8  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5025  0005BC  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5026  0005C0  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5027  0005C4  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5028  0005C8  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5029  0005CC  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5030  0005D0  0100               	movlb	0	; () banked
  5031  0005D2  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5032  0005D4  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5033  0005D8  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5034  0005DC  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5035  0005E0  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5039  0005E4  C0BC  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5043  0005E8  0100               	movlb	0	; () banked
  5044  0005EA  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5045  0005EC  D003               	goto	l473
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5049  0005EE  010F               	movlb	15	; () banked
  5050  0005F0  8101               	bsf	1,0,b	;volatile
  5051  0005F2  D002               	goto	l474
  5052  0005F4                     l473:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;inc\CANlib.h: 844: else
  5056                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5057  0005F4  010F               	movlb	15	; () banked
  5058  0005F6  9101               	bcf	1,0,b	;volatile
  5059  0005F8                     l474:
  5060                           
  5061                           ; BSR set to: 15
  5062                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5063  0005F8  0100               	movlb	0	; () banked
  5064  0005FA  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5065  0005FC  D003               	goto	l475
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5069  0005FE  010F               	movlb	15	; () banked
  5070  000600  8301               	bsf	1,1,b	;volatile
  5071  000602  D002               	goto	l476
  5072  000604                     l475:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 849: else
  5076                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5077  000604  010F               	movlb	15	; () banked
  5078  000606  9301               	bcf	1,1,b	;volatile
  5079  000608                     l476:
  5080                           
  5081                           ; BSR set to: 15
  5082                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5083  000608  0100               	movlb	0	; () banked
  5084  00060A  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5085  00060C  D003               	goto	l477
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5089  00060E  010F               	movlb	15	; () banked
  5090  000610  8B01               	bsf	1,5,b	;volatile
  5091  000612  D002               	goto	l478
  5092  000614                     l477:
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 854: else
  5096                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5097  000614  010F               	movlb	15	; () banked
  5098  000616  9B01               	bcf	1,5,b	;volatile
  5099  000618                     l478:
  5100                           
  5101                           ; BSR set to: 15
  5102                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5103  000618  0100               	movlb	0	; () banked
  5104  00061A  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5105  00061C  D003               	goto	l479
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5109  00061E  010F               	movlb	15	; () banked
  5110  000620  8D01               	bsf	1,6,b	;volatile
  5111  000622  D002               	goto	l480
  5112  000624                     l479:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;inc\CANlib.h: 859: else
  5116                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5117  000624  010F               	movlb	15	; () banked
  5118  000626  9D01               	bcf	1,6,b	;volatile
  5119  000628                     l480:
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5123  000628  0100               	movlb	0	; () banked
  5124  00062A  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5125  00062C  D003               	goto	l481
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5129  00062E  010F               	movlb	15	; () banked
  5130  000630  8F01               	bsf	1,7,b	;volatile
  5131  000632  D002               	goto	l2912
  5132  000634                     l481:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;inc\CANlib.h: 864: else
  5136                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5137  000634  010F               	movlb	15	; () banked
  5138  000636  9F01               	bcf	1,7,b	;volatile
  5139  000638                     l2912:
  5140                           
  5141                           ; BSR set to: 15
  5142                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5143  000638  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5144  00063C  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5145  000640  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5146  000644  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5147  000648  0E16               	movlw	22
  5148  00064A  D006               	goto	u2810
  5149  00064C                     u2815:
  5150  00064C  0100               	movlb	0	; () banked
  5151  00064E  90D8               	bcf	status,0,c
  5152  000650  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5153  000652  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5154  000654  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5155  000656  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5156  000658                     u2810:
  5157  000658  2EE8               	decfsz	wreg,f,c
  5158  00065A  D7F8               	goto	u2815
  5159  00065C  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5160  000660  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5161  000664  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5162  000668  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5166  00066C  0100               	movlb	0	; () banked
  5167  00066E  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5168  000670  0100               	movlb	0	; () banked
  5169  000672  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5170  000674  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5171  000676  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5172  000678  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5176  00067A  C0BC  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5177  00067E                     l2918:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;inc\CANlib.h: 870: }
  5181                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5182  00067E  0100               	movlb	0	; () banked
  5183  000680  05BB               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5184  000682  A4D8               	btfss	status,2,c
  5185  000684  D089               	goto	l2952
  5186                           
  5187                           ; BSR set to: 0
  5188  000686  0EF7               	movlw	247
  5189  000688  0100               	movlb	0	; () banked
  5190  00068A  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5191  00068C  A4D8               	btfss	status,2,c
  5192  00068E  D084               	goto	l2952
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 873: {
  5196                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5197  000690  010F               	movlb	15	; () banked
  5198  000692  8705               	bsf	5,3,b	;volatile
  5199                           
  5200                           ; BSR set to: 15
  5201                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5202  000694  0100               	movlb	0	; () banked
  5203  000696  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5204  000698  0100               	movlb	0	; () banked
  5205  00069A  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5206  00069C  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5207  00069E  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5208  0006A0  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5212  0006A2  C0BC  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5216  0006A6  0E00               	movlw	0
  5217  0006A8  0100               	movlb	0	; () banked
  5218  0006AA  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5219  0006AC  0100               	movlb	0	; () banked
  5220  0006AE  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5221  0006B0  0EFF               	movlw	255
  5222  0006B2  0100               	movlb	0	; () banked
  5223  0006B4  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5224  0006B6  0100               	movlb	0	; () banked
  5225  0006B8  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5226  0006BA  0E00               	movlw	0
  5227  0006BC  0100               	movlb	0	; () banked
  5228  0006BE  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5229  0006C0  0100               	movlb	0	; () banked
  5230  0006C2  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5231  0006C4  0E00               	movlw	0
  5232  0006C6  0100               	movlb	0	; () banked
  5233  0006C8  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5234  0006CA  0100               	movlb	0	; () banked
  5235  0006CC  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5239  0006CE  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5240  0006D2  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5241  0006D6  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5242  0006DA  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5243  0006DE  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5244  0006E2  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5245  0006E6  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5246  0006EA  0100               	movlb	0	; () banked
  5247  0006EC  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5248  0006EE  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5249  0006F2  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5250  0006F6  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5251  0006FA  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5255  0006FE  C0BC  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5259  000702  0100               	movlb	0	; () banked
  5260  000704  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5261  000706  D003               	goto	l484
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5265  000708  010F               	movlb	15	; () banked
  5266  00070A  8105               	bsf	5,0,b	;volatile
  5267  00070C  D002               	goto	l485
  5268  00070E                     l484:
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;inc\CANlib.h: 885: else
  5272                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5273  00070E  010F               	movlb	15	; () banked
  5274  000710  9105               	bcf	5,0,b	;volatile
  5275  000712                     l485:
  5276                           
  5277                           ; BSR set to: 15
  5278                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5279  000712  0100               	movlb	0	; () banked
  5280  000714  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5281  000716  D003               	goto	l486
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5285  000718  010F               	movlb	15	; () banked
  5286  00071A  8305               	bsf	5,1,b	;volatile
  5287  00071C  D002               	goto	l487
  5288  00071E                     l486:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;inc\CANlib.h: 890: else
  5292                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5293  00071E  010F               	movlb	15	; () banked
  5294  000720  9305               	bcf	5,1,b	;volatile
  5295  000722                     l487:
  5296                           
  5297                           ; BSR set to: 15
  5298                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5299  000722  0100               	movlb	0	; () banked
  5300  000724  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5301  000726  D003               	goto	l488
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5305  000728  010F               	movlb	15	; () banked
  5306  00072A  8B05               	bsf	5,5,b	;volatile
  5307  00072C  D002               	goto	l489
  5308  00072E                     l488:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;inc\CANlib.h: 895: else
  5312                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5313  00072E  010F               	movlb	15	; () banked
  5314  000730  9B05               	bcf	5,5,b	;volatile
  5315  000732                     l489:
  5316                           
  5317                           ; BSR set to: 15
  5318                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5319  000732  0100               	movlb	0	; () banked
  5320  000734  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5321  000736  D003               	goto	l490
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5325  000738  010F               	movlb	15	; () banked
  5326  00073A  8D05               	bsf	5,6,b	;volatile
  5327  00073C  D002               	goto	l491
  5328  00073E                     l490:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;inc\CANlib.h: 900: else
  5332                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5333  00073E  010F               	movlb	15	; () banked
  5334  000740  9D05               	bcf	5,6,b	;volatile
  5335  000742                     l491:
  5336                           
  5337                           ; BSR set to: 15
  5338                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5339  000742  0100               	movlb	0	; () banked
  5340  000744  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5341  000746  D003               	goto	l492
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5345  000748  010F               	movlb	15	; () banked
  5346  00074A  8F05               	bsf	5,7,b	;volatile
  5347  00074C  D002               	goto	l2946
  5348  00074E                     l492:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;inc\CANlib.h: 905: else
  5352                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5353  00074E  010F               	movlb	15	; () banked
  5354  000750  9F05               	bcf	5,7,b	;volatile
  5355  000752                     l2946:
  5356                           
  5357                           ; BSR set to: 15
  5358                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5359  000752  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5360  000756  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5361  00075A  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5362  00075E  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5363  000762  0E16               	movlw	22
  5364  000764  D006               	goto	u2890
  5365  000766                     u2895:
  5366  000766  0100               	movlb	0	; () banked
  5367  000768  90D8               	bcf	status,0,c
  5368  00076A  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5369  00076C  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5370  00076E  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5371  000770  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5372  000772                     u2890:
  5373  000772  2EE8               	decfsz	wreg,f,c
  5374  000774  D7F8               	goto	u2895
  5375  000776  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5376  00077A  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5377  00077E  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5378  000782  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5382  000786  0100               	movlb	0	; () banked
  5383  000788  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5384  00078A  0100               	movlb	0	; () banked
  5385  00078C  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5386  00078E  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5387  000790  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5388  000792  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5392  000794  C0BC  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5393  000798                     l2952:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;inc\CANlib.h: 911: }
  5397                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5398  000798  0E02               	movlw	2
  5399  00079A  0100               	movlb	0	; () banked
  5400  00079C  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5401  00079E  A4D8               	btfss	status,2,c
  5402  0007A0  D089               	goto	l2986
  5403                           
  5404                           ; BSR set to: 0
  5405  0007A2  0EF7               	movlw	247
  5406  0007A4  0100               	movlb	0	; () banked
  5407  0007A6  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5408  0007A8  A4D8               	btfss	status,2,c
  5409  0007AA  D084               	goto	l2986
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 915: {
  5413                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5414  0007AC  010F               	movlb	15	; () banked
  5415  0007AE  8709               	bsf	9,3,b	;volatile
  5416                           
  5417                           ; BSR set to: 15
  5418                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5419  0007B0  0100               	movlb	0	; () banked
  5420  0007B2  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5421  0007B4  0100               	movlb	0	; () banked
  5422  0007B6  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5423  0007B8  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5424  0007BA  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5425  0007BC  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5429  0007BE  C0BC  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5433  0007C2  0E00               	movlw	0
  5434  0007C4  0100               	movlb	0	; () banked
  5435  0007C6  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5436  0007C8  0100               	movlb	0	; () banked
  5437  0007CA  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5438  0007CC  0EFF               	movlw	255
  5439  0007CE  0100               	movlb	0	; () banked
  5440  0007D0  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5441  0007D2  0100               	movlb	0	; () banked
  5442  0007D4  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5443  0007D6  0E00               	movlw	0
  5444  0007D8  0100               	movlb	0	; () banked
  5445  0007DA  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5446  0007DC  0100               	movlb	0	; () banked
  5447  0007DE  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5448  0007E0  0E00               	movlw	0
  5449  0007E2  0100               	movlb	0	; () banked
  5450  0007E4  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5451  0007E6  0100               	movlb	0	; () banked
  5452  0007E8  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5456  0007EA  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5457  0007EE  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5458  0007F2  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5459  0007F6  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5460  0007FA  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5461  0007FE  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5462  000802  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5463  000806  0100               	movlb	0	; () banked
  5464  000808  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5465  00080A  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5466  00080E  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5467  000812  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5468  000816  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5472  00081A  C0BC  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5476  00081E  0100               	movlb	0	; () banked
  5477  000820  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5478  000822  D003               	goto	l495
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5482  000824  010F               	movlb	15	; () banked
  5483  000826  8109               	bsf	9,0,b	;volatile
  5484  000828  D002               	goto	l496
  5485  00082A                     l495:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;inc\CANlib.h: 927: else
  5489                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5490  00082A  010F               	movlb	15	; () banked
  5491  00082C  9109               	bcf	9,0,b	;volatile
  5492  00082E                     l496:
  5493                           
  5494                           ; BSR set to: 15
  5495                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5496  00082E  0100               	movlb	0	; () banked
  5497  000830  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5498  000832  D003               	goto	l497
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5502  000834  010F               	movlb	15	; () banked
  5503  000836  8309               	bsf	9,1,b	;volatile
  5504  000838  D002               	goto	l498
  5505  00083A                     l497:
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;inc\CANlib.h: 932: else
  5509                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5510  00083A  010F               	movlb	15	; () banked
  5511  00083C  9309               	bcf	9,1,b	;volatile
  5512  00083E                     l498:
  5513                           
  5514                           ; BSR set to: 15
  5515                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5516  00083E  0100               	movlb	0	; () banked
  5517  000840  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5518  000842  D003               	goto	l499
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5522  000844  010F               	movlb	15	; () banked
  5523  000846  8B09               	bsf	9,5,b	;volatile
  5524  000848  D002               	goto	l500
  5525  00084A                     l499:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;inc\CANlib.h: 937: else
  5529                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5530  00084A  010F               	movlb	15	; () banked
  5531  00084C  9B09               	bcf	9,5,b	;volatile
  5532  00084E                     l500:
  5533                           
  5534                           ; BSR set to: 15
  5535                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5536  00084E  0100               	movlb	0	; () banked
  5537  000850  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5538  000852  D003               	goto	l501
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5542  000854  010F               	movlb	15	; () banked
  5543  000856  8D09               	bsf	9,6,b	;volatile
  5544  000858  D002               	goto	l502
  5545  00085A                     l501:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;inc\CANlib.h: 942: else
  5549                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5550  00085A  010F               	movlb	15	; () banked
  5551  00085C  9D09               	bcf	9,6,b	;volatile
  5552  00085E                     l502:
  5553                           
  5554                           ; BSR set to: 15
  5555                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5556  00085E  0100               	movlb	0	; () banked
  5557  000860  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5558  000862  D003               	goto	l503
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5562  000864  010F               	movlb	15	; () banked
  5563  000866  8F09               	bsf	9,7,b	;volatile
  5564  000868  D002               	goto	l2980
  5565  00086A                     l503:
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;inc\CANlib.h: 947: else
  5569                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5570  00086A  010F               	movlb	15	; () banked
  5571  00086C  9F09               	bcf	9,7,b	;volatile
  5572  00086E                     l2980:
  5573                           
  5574                           ; BSR set to: 15
  5575                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5576  00086E  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5577  000872  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5578  000876  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5579  00087A  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5580  00087E  0E16               	movlw	22
  5581  000880  D006               	goto	u2970
  5582  000882                     u2975:
  5583  000882  0100               	movlb	0	; () banked
  5584  000884  90D8               	bcf	status,0,c
  5585  000886  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5586  000888  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5587  00088A  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5588  00088C  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5589  00088E                     u2970:
  5590  00088E  2EE8               	decfsz	wreg,f,c
  5591  000890  D7F8               	goto	u2975
  5592  000892  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5593  000896  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5594  00089A  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5595  00089E  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5599  0008A2  0100               	movlb	0	; () banked
  5600  0008A4  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5601  0008A6  0100               	movlb	0	; () banked
  5602  0008A8  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5603  0008AA  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5604  0008AC  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5605  0008AE  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5609  0008B0  C0BC  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5610  0008B4                     l2986:
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;inc\CANlib.h: 953: }
  5614                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5615  0008B4  0E03               	movlw	3
  5616  0008B6  0100               	movlb	0	; () banked
  5617  0008B8  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5618  0008BA  A4D8               	btfss	status,2,c
  5619  0008BC  D089               	goto	l3020
  5620                           
  5621                           ; BSR set to: 0
  5622  0008BE  0EF7               	movlw	247
  5623  0008C0  0100               	movlb	0	; () banked
  5624  0008C2  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5625  0008C4  A4D8               	btfss	status,2,c
  5626  0008C6  D084               	goto	l3020
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;inc\CANlib.h: 956: {
  5630                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5631  0008C8  010F               	movlb	15	; () banked
  5632  0008CA  870D               	bsf	13,3,b	;volatile
  5633                           
  5634                           ; BSR set to: 15
  5635                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5636  0008CC  0100               	movlb	0	; () banked
  5637  0008CE  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5638  0008D0  0100               	movlb	0	; () banked
  5639  0008D2  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5640  0008D4  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5641  0008D6  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5642  0008D8  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5646  0008DA  C0BC  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5650  0008DE  0E00               	movlw	0
  5651  0008E0  0100               	movlb	0	; () banked
  5652  0008E2  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5653  0008E4  0100               	movlb	0	; () banked
  5654  0008E6  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5655  0008E8  0EFF               	movlw	255
  5656  0008EA  0100               	movlb	0	; () banked
  5657  0008EC  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5658  0008EE  0100               	movlb	0	; () banked
  5659  0008F0  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5660  0008F2  0E00               	movlw	0
  5661  0008F4  0100               	movlb	0	; () banked
  5662  0008F6  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5663  0008F8  0100               	movlb	0	; () banked
  5664  0008FA  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5665  0008FC  0E00               	movlw	0
  5666  0008FE  0100               	movlb	0	; () banked
  5667  000900  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5668  000902  0100               	movlb	0	; () banked
  5669  000904  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5673  000906  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5674  00090A  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5675  00090E  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5676  000912  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5677  000916  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5678  00091A  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5679  00091E  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5680  000922  0100               	movlb	0	; () banked
  5681  000924  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5682  000926  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5683  00092A  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5684  00092E  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5685  000932  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5689  000936  C0BC  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5693  00093A  0100               	movlb	0	; () banked
  5694  00093C  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5695  00093E  D003               	goto	l506
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5699  000940  010F               	movlb	15	; () banked
  5700  000942  810D               	bsf	13,0,b	;volatile
  5701  000944  D002               	goto	l507
  5702  000946                     l506:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;inc\CANlib.h: 968: else
  5706                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5707  000946  010F               	movlb	15	; () banked
  5708  000948  910D               	bcf	13,0,b	;volatile
  5709  00094A                     l507:
  5710                           
  5711                           ; BSR set to: 15
  5712                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5713  00094A  0100               	movlb	0	; () banked
  5714  00094C  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5715  00094E  D003               	goto	l508
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5719  000950  010F               	movlb	15	; () banked
  5720  000952  830D               	bsf	13,1,b	;volatile
  5721  000954  D002               	goto	l509
  5722  000956                     l508:
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;inc\CANlib.h: 973: else
  5726                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5727  000956  010F               	movlb	15	; () banked
  5728  000958  930D               	bcf	13,1,b	;volatile
  5729  00095A                     l509:
  5730                           
  5731                           ; BSR set to: 15
  5732                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5733  00095A  0100               	movlb	0	; () banked
  5734  00095C  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5735  00095E  D003               	goto	l510
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5739  000960  010F               	movlb	15	; () banked
  5740  000962  8B0D               	bsf	13,5,b	;volatile
  5741  000964  D002               	goto	l511
  5742  000966                     l510:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;inc\CANlib.h: 978: else
  5746                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5747  000966  010F               	movlb	15	; () banked
  5748  000968  9B0D               	bcf	13,5,b	;volatile
  5749  00096A                     l511:
  5750                           
  5751                           ; BSR set to: 15
  5752                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5753  00096A  0100               	movlb	0	; () banked
  5754  00096C  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5755  00096E  D003               	goto	l512
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5759  000970  010F               	movlb	15	; () banked
  5760  000972  8D0D               	bsf	13,6,b	;volatile
  5761  000974  D002               	goto	l513
  5762  000976                     l512:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;inc\CANlib.h: 983: else
  5766                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5767  000976  010F               	movlb	15	; () banked
  5768  000978  9D0D               	bcf	13,6,b	;volatile
  5769  00097A                     l513:
  5770                           
  5771                           ; BSR set to: 15
  5772                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5773  00097A  0100               	movlb	0	; () banked
  5774  00097C  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5775  00097E  D003               	goto	l514
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5779  000980  010F               	movlb	15	; () banked
  5780  000982  8F0D               	bsf	13,7,b	;volatile
  5781  000984  D002               	goto	l3014
  5782  000986                     l514:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;inc\CANlib.h: 988: else
  5786                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5787  000986  010F               	movlb	15	; () banked
  5788  000988  9F0D               	bcf	13,7,b	;volatile
  5789  00098A                     l3014:
  5790                           
  5791                           ; BSR set to: 15
  5792                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5793  00098A  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  5794  00098E  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5795  000992  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5796  000996  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5797  00099A  0E16               	movlw	22
  5798  00099C  D006               	goto	u3050
  5799  00099E                     u3055:
  5800  00099E  0100               	movlb	0	; () banked
  5801  0009A0  90D8               	bcf	status,0,c
  5802  0009A2  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5803  0009A4  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5804  0009A6  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5805  0009A8  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  5806  0009AA                     u3050:
  5807  0009AA  2EE8               	decfsz	wreg,f,c
  5808  0009AC  D7F8               	goto	u3055
  5809  0009AE  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5810  0009B2  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5811  0009B6  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5812  0009BA  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5816  0009BE  0100               	movlb	0	; () banked
  5817  0009C0  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  5818  0009C2  0100               	movlb	0	; () banked
  5819  0009C4  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5820  0009C6  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5821  0009C8  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5822  0009CA  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5826  0009CC  C0BC  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5827  0009D0                     l3020:
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;inc\CANlib.h: 994: }
  5831                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5832  0009D0  0E04               	movlw	4
  5833  0009D2  0100               	movlb	0	; () banked
  5834  0009D4  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5835  0009D6  A4D8               	btfss	status,2,c
  5836  0009D8  D089               	goto	l3054
  5837                           
  5838                           ; BSR set to: 0
  5839  0009DA  0EF7               	movlw	247
  5840  0009DC  0100               	movlb	0	; () banked
  5841  0009DE  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  5842  0009E0  A4D8               	btfss	status,2,c
  5843  0009E2  D084               	goto	l3054
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;inc\CANlib.h: 997: {
  5847                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5848  0009E4  010F               	movlb	15	; () banked
  5849  0009E6  8711               	bsf	17,3,b	;volatile
  5850                           
  5851                           ; BSR set to: 15
  5852                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5853  0009E8  0100               	movlb	0	; () banked
  5854  0009EA  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  5855  0009EC  0100               	movlb	0	; () banked
  5856  0009EE  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5857  0009F0  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5858  0009F2  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5859  0009F4  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5863  0009F6  C0BC  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5867  0009FA  0E00               	movlw	0
  5868  0009FC  0100               	movlb	0	; () banked
  5869  0009FE  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  5870  000A00  0100               	movlb	0	; () banked
  5871  000A02  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  5872  000A04  0EFF               	movlw	255
  5873  000A06  0100               	movlb	0	; () banked
  5874  000A08  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5875  000A0A  0100               	movlb	0	; () banked
  5876  000A0C  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5877  000A0E  0E00               	movlw	0
  5878  000A10  0100               	movlb	0	; () banked
  5879  000A12  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5880  000A14  0100               	movlb	0	; () banked
  5881  000A16  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5882  000A18  0E00               	movlw	0
  5883  000A1A  0100               	movlb	0	; () banked
  5884  000A1C  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5885  000A1E  0100               	movlb	0	; () banked
  5886  000A20  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5890  000A22  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  5891  000A26  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5892  000A2A  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5893  000A2E  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5894  000A32  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  5895  000A36  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5896  000A3A  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5897  000A3E  0100               	movlb	0	; () banked
  5898  000A40  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  5899  000A42  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  5900  000A46  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5901  000A4A  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5902  000A4E  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5906  000A52  C0BC  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5910  000A56  0100               	movlb	0	; () banked
  5911  000A58  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5912  000A5A  D003               	goto	l517
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5916  000A5C  010F               	movlb	15	; () banked
  5917  000A5E  8111               	bsf	17,0,b	;volatile
  5918  000A60  D002               	goto	l518
  5919  000A62                     l517:
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;inc\CANlib.h: 1009: else
  5923                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5924  000A62  010F               	movlb	15	; () banked
  5925  000A64  9111               	bcf	17,0,b	;volatile
  5926  000A66                     l518:
  5927                           
  5928                           ; BSR set to: 15
  5929                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5930  000A66  0100               	movlb	0	; () banked
  5931  000A68  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5932  000A6A  D003               	goto	l519
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5936  000A6C  010F               	movlb	15	; () banked
  5937  000A6E  8311               	bsf	17,1,b	;volatile
  5938  000A70  D002               	goto	l520
  5939  000A72                     l519:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;inc\CANlib.h: 1014: else
  5943                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5944  000A72  010F               	movlb	15	; () banked
  5945  000A74  9311               	bcf	17,1,b	;volatile
  5946  000A76                     l520:
  5947                           
  5948                           ; BSR set to: 15
  5949                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5950  000A76  0100               	movlb	0	; () banked
  5951  000A78  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5952  000A7A  D003               	goto	l521
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5956  000A7C  010F               	movlb	15	; () banked
  5957  000A7E  8B11               	bsf	17,5,b	;volatile
  5958  000A80  D002               	goto	l522
  5959  000A82                     l521:
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 1019: else
  5963                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5964  000A82  010F               	movlb	15	; () banked
  5965  000A84  9B11               	bcf	17,5,b	;volatile
  5966  000A86                     l522:
  5967                           
  5968                           ; BSR set to: 15
  5969                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5970  000A86  0100               	movlb	0	; () banked
  5971  000A88  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5972  000A8A  D003               	goto	l523
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5976  000A8C  010F               	movlb	15	; () banked
  5977  000A8E  8D11               	bsf	17,6,b	;volatile
  5978  000A90  D002               	goto	l524
  5979  000A92                     l523:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 1024: else
  5983                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5984  000A92  010F               	movlb	15	; () banked
  5985  000A94  9D11               	bcf	17,6,b	;volatile
  5986  000A96                     l524:
  5987                           
  5988                           ; BSR set to: 15
  5989                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5990  000A96  0100               	movlb	0	; () banked
  5991  000A98  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5992  000A9A  D003               	goto	l525
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5996  000A9C  010F               	movlb	15	; () banked
  5997  000A9E  8F11               	bsf	17,7,b	;volatile
  5998  000AA0  D002               	goto	l3048
  5999  000AA2                     l525:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;inc\CANlib.h: 1029: else
  6003                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6004  000AA2  010F               	movlb	15	; () banked
  6005  000AA4  9F11               	bcf	17,7,b	;volatile
  6006  000AA6                     l3048:
  6007                           
  6008                           ; BSR set to: 15
  6009                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6010  000AA6  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  6011  000AAA  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6012  000AAE  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6013  000AB2  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6014  000AB6  0E16               	movlw	22
  6015  000AB8  D006               	goto	u3130
  6016  000ABA                     u3135:
  6017  000ABA  0100               	movlb	0	; () banked
  6018  000ABC  90D8               	bcf	status,0,c
  6019  000ABE  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6020  000AC0  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6021  000AC2  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6022  000AC4  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  6023  000AC6                     u3130:
  6024  000AC6  2EE8               	decfsz	wreg,f,c
  6025  000AC8  D7F8               	goto	u3135
  6026  000ACA  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  6027  000ACE  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6028  000AD2  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6029  000AD6  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6033  000ADA  0100               	movlb	0	; () banked
  6034  000ADC  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  6035  000ADE  0100               	movlb	0	; () banked
  6036  000AE0  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6037  000AE2  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6038  000AE4  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6039  000AE6  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6043  000AE8  C0BC  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6044  000AEC                     l3054:
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;inc\CANlib.h: 1035: }
  6048                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6049  000AEC  0E05               	movlw	5
  6050  000AEE  0100               	movlb	0	; () banked
  6051  000AF0  19BB               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6052  000AF2  A4D8               	btfss	status,2,c
  6053  000AF4  0012               	return	
  6054                           
  6055                           ; BSR set to: 0
  6056  000AF6  0EF7               	movlw	247
  6057  000AF8  0100               	movlb	0	; () banked
  6058  000AFA  19B6               	xorwf	CANSetFilter@type& (0+255),w,b
  6059  000AFC  A4D8               	btfss	status,2,c
  6060  000AFE  0012               	return	
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;inc\CANlib.h: 1038: {
  6064                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6065  000B00  010F               	movlb	15	; () banked
  6066  000B02  8715               	bsf	21,3,b	;volatile
  6067                           
  6068                           ; BSR set to: 15
  6069                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6070  000B04  0100               	movlb	0	; () banked
  6071  000B06  51B2               	movf	CANSetFilter@filter& (0+255),w,b
  6072  000B08  0100               	movlb	0	; () banked
  6073  000B0A  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6074  000B0C  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6075  000B0E  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6076  000B10  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6080  000B12  C0BC  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6084  000B16  0E00               	movlw	0
  6085  000B18  0100               	movlb	0	; () banked
  6086  000B1A  15B2               	andwf	CANSetFilter@filter& (0+255),w,b
  6087  000B1C  0100               	movlb	0	; () banked
  6088  000B1E  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6089  000B20  0EFF               	movlw	255
  6090  000B22  0100               	movlb	0	; () banked
  6091  000B24  15B3               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6092  000B26  0100               	movlb	0	; () banked
  6093  000B28  6FBD               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6094  000B2A  0E00               	movlw	0
  6095  000B2C  0100               	movlb	0	; () banked
  6096  000B2E  15B4               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6097  000B30  0100               	movlb	0	; () banked
  6098  000B32  6FBE               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6099  000B34  0E00               	movlw	0
  6100  000B36  0100               	movlb	0	; () banked
  6101  000B38  15B5               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6102  000B3A  0100               	movlb	0	; () banked
  6103  000B3C  6FBF               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6107  000B3E  C0BC  F0B7         	movff	CANSetFilter@tamp,??_CANSetFilter
  6108  000B42  C0BD  F0B8         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6109  000B46  C0BE  F0B9         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6110  000B4A  C0BF  F0BA         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6111  000B4E  C0B8  F0B7         	movff	??_CANSetFilter+1,??_CANSetFilter
  6112  000B52  C0B9  F0B8         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6113  000B56  C0BA  F0B9         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6114  000B5A  0100               	movlb	0	; () banked
  6115  000B5C  6BBA               	clrf	(??_CANSetFilter+3)& (0+255),b
  6116  000B5E  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  6117  000B62  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6118  000B66  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6119  000B6A  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6123  000B6E  C0BC  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6127  000B72  0100               	movlb	0	; () banked
  6128  000B74  A1B4               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6129  000B76  D003               	goto	l528
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6133  000B78  010F               	movlb	15	; () banked
  6134  000B7A  8115               	bsf	21,0,b	;volatile
  6135  000B7C  D002               	goto	l529
  6136  000B7E                     l528:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;inc\CANlib.h: 1050: else
  6140                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6141  000B7E  010F               	movlb	15	; () banked
  6142  000B80  9115               	bcf	21,0,b	;volatile
  6143  000B82                     l529:
  6144                           
  6145                           ; BSR set to: 15
  6146                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6147  000B82  0100               	movlb	0	; () banked
  6148  000B84  A3B4               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6149  000B86  D003               	goto	l530
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6153  000B88  010F               	movlb	15	; () banked
  6154  000B8A  8315               	bsf	21,1,b	;volatile
  6155  000B8C  D002               	goto	l531
  6156  000B8E                     l530:
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;inc\CANlib.h: 1055: else
  6160                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6161  000B8E  010F               	movlb	15	; () banked
  6162  000B90  9315               	bcf	21,1,b	;volatile
  6163  000B92                     l531:
  6164                           
  6165                           ; BSR set to: 15
  6166                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6167  000B92  0100               	movlb	0	; () banked
  6168  000B94  A5B4               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6169  000B96  D003               	goto	l532
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6173  000B98  010F               	movlb	15	; () banked
  6174  000B9A  8B15               	bsf	21,5,b	;volatile
  6175  000B9C  D002               	goto	l533
  6176  000B9E                     l532:
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;inc\CANlib.h: 1060: else
  6180                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6181  000B9E  010F               	movlb	15	; () banked
  6182  000BA0  9B15               	bcf	21,5,b	;volatile
  6183  000BA2                     l533:
  6184                           
  6185                           ; BSR set to: 15
  6186                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6187  000BA2  0100               	movlb	0	; () banked
  6188  000BA4  A7B4               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6189  000BA6  D003               	goto	l534
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6193  000BA8  010F               	movlb	15	; () banked
  6194  000BAA  8D15               	bsf	21,6,b	;volatile
  6195  000BAC  D002               	goto	l535
  6196  000BAE                     l534:
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;inc\CANlib.h: 1065: else
  6200                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6201  000BAE  010F               	movlb	15	; () banked
  6202  000BB0  9D15               	bcf	21,6,b	;volatile
  6203  000BB2                     l535:
  6204                           
  6205                           ; BSR set to: 15
  6206                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6207  000BB2  0100               	movlb	0	; () banked
  6208  000BB4  A9B4               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6209  000BB6  D003               	goto	l536
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6213  000BB8  010F               	movlb	15	; () banked
  6214  000BBA  8F15               	bsf	21,7,b	;volatile
  6215  000BBC  D002               	goto	l3082
  6216  000BBE                     l536:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;inc\CANlib.h: 1070: else
  6220                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6221  000BBE  010F               	movlb	15	; () banked
  6222  000BC0  9F15               	bcf	21,7,b	;volatile
  6223  000BC2                     l3082:
  6224                           
  6225                           ; BSR set to: 15
  6226                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6227  000BC2  C0B2  F0B7         	movff	CANSetFilter@filter,??_CANSetFilter
  6228  000BC6  C0B3  F0B8         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6229  000BCA  C0B4  F0B9         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6230  000BCE  C0B5  F0BA         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6231  000BD2  0E16               	movlw	22
  6232  000BD4  D006               	goto	u3210
  6233  000BD6                     u3215:
  6234  000BD6  0100               	movlb	0	; () banked
  6235  000BD8  90D8               	bcf	status,0,c
  6236  000BDA  33BA               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6237  000BDC  33B9               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6238  000BDE  33B8               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6239  000BE0  33B7               	rrcf	??_CANSetFilter& (0+255),f,b
  6240  000BE2                     u3210:
  6241  000BE2  2EE8               	decfsz	wreg,f,c
  6242  000BE4  D7F8               	goto	u3215
  6243  000BE6  C0B7  F0BC         	movff	??_CANSetFilter,CANSetFilter@tamp
  6244  000BEA  C0B8  F0BD         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6245  000BEE  C0B9  F0BE         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6246  000BF2  C0BA  F0BF         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6250  000BF6  0100               	movlb	0	; () banked
  6251  000BF8  51BC               	movf	CANSetFilter@tamp& (0+255),w,b
  6252  000BFA  0100               	movlb	0	; () banked
  6253  000BFC  6FBC               	movwf	CANSetFilter@tamp& (0+255),b
  6254  000BFE  6BBD               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6255  000C00  6BBE               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6256  000C02  6BBF               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6260  000C04  C0BC  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6261  000C08  0012               	return	
  6262  000C0A                     __end_of_CANSetFilter:
  6263                           	opt stack 0
  6264                           tblptru	equ	0xFF8
  6265                           tblptrh	equ	0xFF7
  6266                           tblptrl	equ	0xFF6
  6267                           tablat	equ	0xFF5
  6268                           prodh	equ	0xFF4
  6269                           prodl	equ	0xFF3
  6270                           intcon	equ	0xFF2
  6271                           intcon2	equ	0xFF1
  6272                           intcon3	equ	0xFF0
  6273                           postinc0	equ	0xFEE
  6274                           wreg	equ	0xFE8
  6275                           postdec1	equ	0xFE5
  6276                           fsr1l	equ	0xFE1
  6277                           indf2	equ	0xFDF
  6278                           fsr2h	equ	0xFDA
  6279                           fsr2l	equ	0xFD9
  6280                           status	equ	0xFD8
  6281                           
  6282 ;; *************** function _CANOperationMode *****************
  6283 ;; Defined at:
  6284 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  mode            1    wreg     enum E16838
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;  mode            1   22[BANK0 ] enum E16838
  6289 ;; Return value:  Size  Location     Type
  6290 ;;		None               void
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6298 ;;      Params:         0       0       0       0
  6299 ;;      Locals:         0       1       0       0
  6300 ;;      Temps:          0       0       0       0
  6301 ;;      Totals:         0       1       0       0
  6302 ;;Total ram usage:        1 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    4
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_CANInitialize
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text10
  6313  002824                     __ptext10:
  6314                           	opt stack 0
  6315  002824                     _CANOperationMode:
  6316                           	opt stack 24
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;incstack = 0
  6320                           ;CANOperationMode@mode stored from wreg
  6321  002824  0100               	movlb	0	; () banked
  6322  002826  6FB2               	movwf	CANOperationMode@mode& (0+255),b
  6323                           
  6324                           ;inc\CANlib.h: 208: CANCON = mode;
  6325  002828  C0B2  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6326  00282C                     l2678:
  6327  00282C  506E               	movf	3950,w,c	;volatile
  6328  00282E  0BE0               	andlw	224
  6329  002830  0100               	movlb	0	; () banked
  6330  002832  19B2               	xorwf	CANOperationMode@mode& (0+255),w,b
  6331  002834  B4D8               	btfsc	status,2,c
  6332  002836  0012               	return	
  6333  002838  D7F9               	goto	l2678
  6334  00283A                     __end_of_CANOperationMode:
  6335                           	opt stack 0
  6336                           tblptru	equ	0xFF8
  6337                           tblptrh	equ	0xFF7
  6338                           tblptrl	equ	0xFF6
  6339                           tablat	equ	0xFF5
  6340                           prodh	equ	0xFF4
  6341                           prodl	equ	0xFF3
  6342                           intcon	equ	0xFF2
  6343                           intcon2	equ	0xFF1
  6344                           intcon3	equ	0xFF0
  6345                           postinc0	equ	0xFEE
  6346                           wreg	equ	0xFE8
  6347                           postdec1	equ	0xFE5
  6348                           fsr1l	equ	0xFE1
  6349                           indf2	equ	0xFDF
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function ___lldiv *****************
  6355 ;; Defined at:
  6356 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  dividend        4   22[BANK0 ] unsigned long 
  6359 ;;  divisor         4   26[BANK0 ] unsigned long 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  quotient        4   30[BANK0 ] unsigned long 
  6362 ;;  counter         1   34[BANK0 ] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  4   22[BANK0 ] unsigned long 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2, status,0
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6372 ;;      Params:         0       8       0       0
  6373 ;;      Locals:         0       5       0       0
  6374 ;;      Temps:          0       0       0       0
  6375 ;;      Totals:         0      13       0       0
  6376 ;;Total ram usage:       13 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    4
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		_main
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text11
  6387  002468                     __ptext11:
  6388                           	opt stack 0
  6389  002468                     ___lldiv:
  6390                           	opt stack 26
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;incstack = 0
  6394  002468  0E00               	movlw	0
  6395  00246A  0100               	movlb	0	; () banked
  6396  00246C  6FBA               	movwf	___lldiv@quotient& (0+255),b
  6397  00246E  0E00               	movlw	0
  6398  002470  6FBB               	movwf	(___lldiv@quotient+1)& (0+255),b
  6399  002472  0E00               	movlw	0
  6400  002474  6FBC               	movwf	(___lldiv@quotient+2)& (0+255),b
  6401  002476  0E00               	movlw	0
  6402  002478  6FBD               	movwf	(___lldiv@quotient+3)& (0+255),b
  6403                           
  6404                           ; BSR set to: 0
  6405  00247A  0100               	movlb	0	; () banked
  6406  00247C  51B6               	movf	___lldiv@divisor& (0+255),w,b
  6407  00247E  0100               	movlb	0	; () banked
  6408  002480  11B7               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6409  002482  0100               	movlb	0	; () banked
  6410  002484  11B8               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6411  002486  0100               	movlb	0	; () banked
  6412  002488  11B9               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6413  00248A  B4D8               	btfsc	status,2,c
  6414  00248C  D042               	goto	l1076
  6415                           
  6416                           ; BSR set to: 0
  6417  00248E  0E01               	movlw	1
  6418  002490  0100               	movlb	0	; () banked
  6419  002492  6FBE               	movwf	___lldiv@counter& (0+255),b
  6420  002494  D008               	goto	l3740
  6421  002496                     l3738:
  6422                           
  6423                           ; BSR set to: 0
  6424  002496  0100               	movlb	0	; () banked
  6425  002498  90D8               	bcf	status,0,c
  6426  00249A  37B6               	rlcf	___lldiv@divisor& (0+255),f,b
  6427  00249C  37B7               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6428  00249E  37B8               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6429  0024A0  37B9               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6430  0024A2  0100               	movlb	0	; () banked
  6431  0024A4  2BBE               	incf	___lldiv@counter& (0+255),f,b
  6432  0024A6                     l3740:
  6433                           
  6434                           ; BSR set to: 0
  6435  0024A6  0100               	movlb	0	; () banked
  6436  0024A8  AFB9               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6437  0024AA  D7F5               	goto	l3738
  6438  0024AC                     l3742:
  6439                           
  6440                           ; BSR set to: 0
  6441  0024AC  0100               	movlb	0	; () banked
  6442  0024AE  90D8               	bcf	status,0,c
  6443  0024B0  37BA               	rlcf	___lldiv@quotient& (0+255),f,b
  6444  0024B2  37BB               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6445  0024B4  37BC               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6446  0024B6  37BD               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6447                           
  6448                           ; BSR set to: 0
  6449  0024B8  0100               	movlb	0	; () banked
  6450  0024BA  51B6               	movf	___lldiv@divisor& (0+255),w,b
  6451  0024BC  0100               	movlb	0	; () banked
  6452  0024BE  5DB2               	subwf	___lldiv@dividend& (0+255),w,b
  6453  0024C0  0100               	movlb	0	; () banked
  6454  0024C2  51B7               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6455  0024C4  0100               	movlb	0	; () banked
  6456  0024C6  59B3               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6457  0024C8  0100               	movlb	0	; () banked
  6458  0024CA  51B8               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6459  0024CC  0100               	movlb	0	; () banked
  6460  0024CE  59B4               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6461  0024D0  0100               	movlb	0	; () banked
  6462  0024D2  51B9               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6463  0024D4  0100               	movlb	0	; () banked
  6464  0024D6  59B5               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6465  0024D8  A0D8               	btfss	status,0,c
  6466  0024DA  D012               	goto	l3750
  6467                           
  6468                           ; BSR set to: 0
  6469  0024DC  0100               	movlb	0	; () banked
  6470  0024DE  51B6               	movf	___lldiv@divisor& (0+255),w,b
  6471  0024E0  0100               	movlb	0	; () banked
  6472  0024E2  5FB2               	subwf	___lldiv@dividend& (0+255),f,b
  6473  0024E4  0100               	movlb	0	; () banked
  6474  0024E6  51B7               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6475  0024E8  0100               	movlb	0	; () banked
  6476  0024EA  5BB3               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6477  0024EC  0100               	movlb	0	; () banked
  6478  0024EE  51B8               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6479  0024F0  0100               	movlb	0	; () banked
  6480  0024F2  5BB4               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6481  0024F4  0100               	movlb	0	; () banked
  6482  0024F6  51B9               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6483  0024F8  0100               	movlb	0	; () banked
  6484  0024FA  5BB5               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6485                           
  6486                           ; BSR set to: 0
  6487  0024FC  0100               	movlb	0	; () banked
  6488  0024FE  81BA               	bsf	___lldiv@quotient& (0+255),0,b
  6489  002500                     l3750:
  6490                           
  6491                           ; BSR set to: 0
  6492  002500  0100               	movlb	0	; () banked
  6493  002502  90D8               	bcf	status,0,c
  6494  002504  33B9               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6495  002506  33B8               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6496  002508  33B7               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6497  00250A  33B6               	rrcf	___lldiv@divisor& (0+255),f,b
  6498                           
  6499                           ; BSR set to: 0
  6500  00250C  0100               	movlb	0	; () banked
  6501  00250E  2FBE               	decfsz	___lldiv@counter& (0+255),f,b
  6502  002510  D7CD               	goto	l3742
  6503  002512                     l1076:
  6504                           
  6505                           ; BSR set to: 0
  6506  002512  C0BA  F0B2         	movff	___lldiv@quotient,?___lldiv
  6507  002516  C0BB  F0B3         	movff	___lldiv@quotient+1,?___lldiv+1
  6508  00251A  C0BC  F0B4         	movff	___lldiv@quotient+2,?___lldiv+2
  6509  00251E  C0BD  F0B5         	movff	___lldiv@quotient+3,?___lldiv+3
  6510                           
  6511                           ; BSR set to: 0
  6512  002522  0012               	return		;funcret
  6513  002524                     __end_of___lldiv:
  6514                           	opt stack 0
  6515                           tblptru	equ	0xFF8
  6516                           tblptrh	equ	0xFF7
  6517                           tblptrl	equ	0xFF6
  6518                           tablat	equ	0xFF5
  6519                           prodh	equ	0xFF4
  6520                           prodl	equ	0xFF3
  6521                           intcon	equ	0xFF2
  6522                           intcon2	equ	0xFF1
  6523                           intcon3	equ	0xFF0
  6524                           postinc0	equ	0xFEE
  6525                           wreg	equ	0xFE8
  6526                           postdec1	equ	0xFE5
  6527                           fsr1l	equ	0xFE1
  6528                           indf2	equ	0xFDF
  6529                           fsr2h	equ	0xFDA
  6530                           fsr2l	equ	0xFD9
  6531                           status	equ	0xFD8
  6532                           
  6533 ;; *************** function _CANisTXwarningON *****************
  6534 ;; Defined at:
  6535 ;;		line 1119 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      unsigned char 
  6542 ;; Registers used:
  6543 ;;		wreg
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6549 ;;      Params:         0       0       0       0
  6550 ;;      Locals:         0       0       0       0
  6551 ;;      Temps:          0       0       0       0
  6552 ;;      Totals:         0       0       0       0
  6553 ;;Total ram usage:        0 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    4
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_main
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text12
  6564  002862                     __ptext12:
  6565                           	opt stack 0
  6566  002862                     _CANisTXwarningON:
  6567                           	opt stack 26
  6568                           
  6569                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;incstack = 0
  6573  002862  A474               	btfss	3956,2,c	;volatile
  6574  002864  D002               	goto	u3990
  6575  002866  0E01               	movlw	1
  6576  002868  0012               	return	
  6577  00286A                     u3990:
  6578  00286A  0E00               	movlw	0
  6579  00286C  0012               	return	
  6580  00286E                     __end_of_CANisTXwarningON:
  6581                           	opt stack 0
  6582                           tblptru	equ	0xFF8
  6583                           tblptrh	equ	0xFF7
  6584                           tblptrl	equ	0xFF6
  6585                           tablat	equ	0xFF5
  6586                           prodh	equ	0xFF4
  6587                           prodl	equ	0xFF3
  6588                           intcon	equ	0xFF2
  6589                           intcon2	equ	0xFF1
  6590                           intcon3	equ	0xFF0
  6591                           postinc0	equ	0xFEE
  6592                           wreg	equ	0xFE8
  6593                           postdec1	equ	0xFE5
  6594                           fsr1l	equ	0xFE1
  6595                           indf2	equ	0xFDF
  6596                           fsr2h	equ	0xFDA
  6597                           fsr2l	equ	0xFD9
  6598                           status	equ	0xFD8
  6599                           
  6600 ;; *************** function _CANisRXwarningON *****************
  6601 ;; Defined at:
  6602 ;;		line 1127 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;		None
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      unsigned char 
  6609 ;; Registers used:
  6610 ;;		wreg
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6616 ;;      Params:         0       0       0       0
  6617 ;;      Locals:         0       0       0       0
  6618 ;;      Temps:          0       0       0       0
  6619 ;;      Totals:         0       0       0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:    4
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_main
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text13
  6631  00286E                     __ptext13:
  6632                           	opt stack 0
  6633  00286E                     _CANisRXwarningON:
  6634                           	opt stack 26
  6635                           
  6636                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6637                           
  6638                           ;incstack = 0
  6639  00286E  A274               	btfss	3956,1,c	;volatile
  6640  002870  D002               	goto	u4000
  6641  002872  0E01               	movlw	1
  6642  002874  0012               	return	
  6643  002876                     u4000:
  6644  002876  0E00               	movlw	0
  6645  002878  0012               	return	
  6646  00287A                     __end_of_CANisRXwarningON:
  6647                           	opt stack 0
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           intcon2	equ	0xFF1
  6656                           intcon3	equ	0xFF0
  6657                           postinc0	equ	0xFEE
  6658                           wreg	equ	0xFE8
  6659                           postdec1	equ	0xFE5
  6660                           fsr1l	equ	0xFE1
  6661                           indf2	equ	0xFDF
  6662                           fsr2h	equ	0xFDA
  6663                           fsr2l	equ	0xFD9
  6664                           status	equ	0xFD8
  6665                           
  6666 ;; *************** function _ADC_Read *****************
  6667 ;; Defined at:
  6668 ;;		line 304 in file "ABS_Code.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;		None
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;		None
  6673 ;; Return value:  Size  Location     Type
  6674 ;;		None               void
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6682 ;;      Params:         0       0       0       0
  6683 ;;      Locals:         0       0       0       0
  6684 ;;      Temps:          0       0       0       0
  6685 ;;      Totals:         0       0       0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    5
  6689 ;; This function calls:
  6690 ;;		___awdiv
  6691 ;; This function is called by:
  6692 ;;		_main
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text14
  6697  00272C                     __ptext14:
  6698                           	opt stack 0
  6699  00272C                     _ADC_Read:
  6700                           	opt stack 25
  6701                           
  6702                           ;ABS_Code.c: 305: ADCON0bits.GO = 1;
  6703                           
  6704                           ;incstack = 0
  6705  00272C  82C2               	bsf	4034,1,c	;volatile
  6706  00272E                     l713:
  6707  00272E  B2C2               	btfsc	4034,1,c	;volatile
  6708  002730  D7FE               	goto	l713
  6709                           
  6710                           ;ABS_Code.c: 307: read = ADRESH;
  6711  002732  CFC4 F078          	movff	4036,_read	;volatile
  6712                           
  6713                           ;ABS_Code.c: 308: correction_factor = read - 127;
  6714  002736  0E81               	movlw	129
  6715  002738  0100               	movlb	0	; () banked
  6716  00273A  2578               	addwf	_read& (0+255),w,b
  6717  00273C  0100               	movlb	0	; () banked
  6718  00273E  6F6E               	movwf	_correction_factor& (0+255),b
  6719  002740  0100               	movlb	0	; () banked
  6720  002742  6B6F               	clrf	(_correction_factor+1)& (0+255),b
  6721  002744  0EFF               	movlw	255
  6722  002746  236F               	addwfc	(_correction_factor+1)& (0+255),f,b
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;ABS_Code.c: 309: home_position = correction_factor / 4 + 127;
  6726  002748  C06E  F0B2         	movff	_correction_factor,___awdiv@dividend
  6727  00274C  C06F  F0B3         	movff	_correction_factor+1,___awdiv@dividend+1
  6728  002750  0E00               	movlw	0
  6729  002752  0100               	movlb	0	; () banked
  6730  002754  6FB5               	movwf	(___awdiv@divisor+1)& (0+255),b
  6731  002756  0E04               	movlw	4
  6732  002758  6FB4               	movwf	___awdiv@divisor& (0+255),b
  6733  00275A  ECD5  F011         	call	___awdiv	;wreg free
  6734  00275E  0100               	movlb	0	; () banked
  6735  002760  51B2               	movf	?___awdiv& (0+255),w,b
  6736  002762  0F7F               	addlw	127
  6737  002764  0100               	movlb	0	; () banked
  6738  002766  6F77               	movwf	_home_position& (0+255),b
  6739                           
  6740                           ; BSR set to: 0
  6741  002768  0012               	return		;funcret
  6742  00276A                     __end_of_ADC_Read:
  6743                           	opt stack 0
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           intcon2	equ	0xFF1
  6752                           intcon3	equ	0xFF0
  6753                           postinc0	equ	0xFEE
  6754                           wreg	equ	0xFE8
  6755                           postdec1	equ	0xFE5
  6756                           fsr1l	equ	0xFE1
  6757                           indf2	equ	0xFDF
  6758                           fsr2h	equ	0xFDA
  6759                           fsr2l	equ	0xFD9
  6760                           status	equ	0xFD8
  6761                           
  6762 ;; *************** function ___awdiv *****************
  6763 ;; Defined at:
  6764 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  dividend        2   22[BANK0 ] int 
  6767 ;;  divisor         2   24[BANK0 ] int 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  quotient        2   28[BANK0 ] int 
  6770 ;;  sign            1   27[BANK0 ] unsigned char 
  6771 ;;  counter         1   26[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2   22[BANK0 ] int 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6781 ;;      Params:         0       4       0       0
  6782 ;;      Locals:         0       4       0       0
  6783 ;;      Temps:          0       0       0       0
  6784 ;;      Totals:         0       8       0       0
  6785 ;;Total ram usage:        8 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    4
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;;		_ADC_Read
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           	psect	text15
  6797  0023AA                     __ptext15:
  6798                           	opt stack 0
  6799  0023AA                     ___awdiv:
  6800                           	opt stack 26
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;incstack = 0
  6804  0023AA  0E00               	movlw	0
  6805  0023AC  0100               	movlb	0	; () banked
  6806  0023AE  6FB7               	movwf	___awdiv@sign& (0+255),b
  6807                           
  6808                           ; BSR set to: 0
  6809  0023B0  0100               	movlb	0	; () banked
  6810  0023B2  AFB5               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6811  0023B4  D008               	goto	l3402
  6812                           
  6813                           ; BSR set to: 0
  6814  0023B6  0100               	movlb	0	; () banked
  6815  0023B8  6DB4               	negf	___awdiv@divisor& (0+255),b
  6816  0023BA  1FB5               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6817  0023BC  B0D8               	btfsc	status,0,c
  6818  0023BE  2BB5               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6819                           
  6820                           ; BSR set to: 0
  6821  0023C0  0E01               	movlw	1
  6822  0023C2  0100               	movlb	0	; () banked
  6823  0023C4  6FB7               	movwf	___awdiv@sign& (0+255),b
  6824  0023C6                     l3402:
  6825                           
  6826                           ; BSR set to: 0
  6827  0023C6  0100               	movlb	0	; () banked
  6828  0023C8  AFB3               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6829  0023CA  D008               	goto	l3408
  6830                           
  6831                           ; BSR set to: 0
  6832  0023CC  0100               	movlb	0	; () banked
  6833  0023CE  6DB2               	negf	___awdiv@dividend& (0+255),b
  6834  0023D0  1FB3               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6835  0023D2  B0D8               	btfsc	status,0,c
  6836  0023D4  2BB3               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6837                           
  6838                           ; BSR set to: 0
  6839  0023D6  0E01               	movlw	1
  6840  0023D8  0100               	movlb	0	; () banked
  6841  0023DA  1BB7               	xorwf	___awdiv@sign& (0+255),f,b
  6842  0023DC                     l3408:
  6843                           
  6844                           ; BSR set to: 0
  6845  0023DC  0E00               	movlw	0
  6846  0023DE  0100               	movlb	0	; () banked
  6847  0023E0  6FB9               	movwf	(___awdiv@quotient+1)& (0+255),b
  6848  0023E2  0E00               	movlw	0
  6849  0023E4  6FB8               	movwf	___awdiv@quotient& (0+255),b
  6850                           
  6851                           ; BSR set to: 0
  6852  0023E6  0100               	movlb	0	; () banked
  6853  0023E8  51B4               	movf	___awdiv@divisor& (0+255),w,b
  6854  0023EA  0100               	movlb	0	; () banked
  6855  0023EC  11B5               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6856  0023EE  B4D8               	btfsc	status,2,c
  6857  0023F0  D02C               	goto	l3430
  6858                           
  6859                           ; BSR set to: 0
  6860  0023F2  0E01               	movlw	1
  6861  0023F4  0100               	movlb	0	; () banked
  6862  0023F6  6FB6               	movwf	___awdiv@counter& (0+255),b
  6863  0023F8  D006               	goto	l3416
  6864  0023FA                     l3414:
  6865                           
  6866                           ; BSR set to: 0
  6867  0023FA  0100               	movlb	0	; () banked
  6868  0023FC  90D8               	bcf	status,0,c
  6869  0023FE  37B4               	rlcf	___awdiv@divisor& (0+255),f,b
  6870  002400  37B5               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6871  002402  0100               	movlb	0	; () banked
  6872  002404  2BB6               	incf	___awdiv@counter& (0+255),f,b
  6873  002406                     l3416:
  6874                           
  6875                           ; BSR set to: 0
  6876  002406  0100               	movlb	0	; () banked
  6877  002408  AFB5               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6878  00240A  D7F7               	goto	l3414
  6879  00240C                     l3418:
  6880                           
  6881                           ; BSR set to: 0
  6882  00240C  0100               	movlb	0	; () banked
  6883  00240E  90D8               	bcf	status,0,c
  6884  002410  37B8               	rlcf	___awdiv@quotient& (0+255),f,b
  6885  002412  37B9               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6886                           
  6887                           ; BSR set to: 0
  6888  002414  0100               	movlb	0	; () banked
  6889  002416  51B4               	movf	___awdiv@divisor& (0+255),w,b
  6890  002418  0100               	movlb	0	; () banked
  6891  00241A  5DB2               	subwf	___awdiv@dividend& (0+255),w,b
  6892  00241C  0100               	movlb	0	; () banked
  6893  00241E  51B5               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6894  002420  0100               	movlb	0	; () banked
  6895  002422  59B3               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6896  002424  A0D8               	btfss	status,0,c
  6897  002426  D00A               	goto	l3426
  6898                           
  6899                           ; BSR set to: 0
  6900  002428  0100               	movlb	0	; () banked
  6901  00242A  51B4               	movf	___awdiv@divisor& (0+255),w,b
  6902  00242C  0100               	movlb	0	; () banked
  6903  00242E  5FB2               	subwf	___awdiv@dividend& (0+255),f,b
  6904  002430  0100               	movlb	0	; () banked
  6905  002432  51B5               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6906  002434  0100               	movlb	0	; () banked
  6907  002436  5BB3               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6908                           
  6909                           ; BSR set to: 0
  6910  002438  0100               	movlb	0	; () banked
  6911  00243A  81B8               	bsf	___awdiv@quotient& (0+255),0,b
  6912  00243C                     l3426:
  6913                           
  6914                           ; BSR set to: 0
  6915  00243C  0100               	movlb	0	; () banked
  6916  00243E  90D8               	bcf	status,0,c
  6917  002440  33B5               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6918  002442  33B4               	rrcf	___awdiv@divisor& (0+255),f,b
  6919                           
  6920                           ; BSR set to: 0
  6921  002444  0100               	movlb	0	; () banked
  6922  002446  2FB6               	decfsz	___awdiv@counter& (0+255),f,b
  6923  002448  D7E1               	goto	l3418
  6924  00244A                     l3430:
  6925                           
  6926                           ; BSR set to: 0
  6927  00244A  0100               	movlb	0	; () banked
  6928  00244C  51B7               	movf	___awdiv@sign& (0+255),w,b
  6929  00244E  0100               	movlb	0	; () banked
  6930  002450  B4D8               	btfsc	status,2,c
  6931  002452  D005               	goto	l3434
  6932                           
  6933                           ; BSR set to: 0
  6934  002454  0100               	movlb	0	; () banked
  6935  002456  6DB8               	negf	___awdiv@quotient& (0+255),b
  6936  002458  1FB9               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6937  00245A  B0D8               	btfsc	status,0,c
  6938  00245C  2BB9               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6939  00245E                     l3434:
  6940                           
  6941                           ; BSR set to: 0
  6942  00245E  C0B8  F0B2         	movff	___awdiv@quotient,?___awdiv
  6943  002462  C0B9  F0B3         	movff	___awdiv@quotient+1,?___awdiv+1
  6944  002466  0012               	return	
  6945  002468                     __end_of___awdiv:
  6946                           	opt stack 0
  6947                           tblptru	equ	0xFF8
  6948                           tblptrh	equ	0xFF7
  6949                           tblptrl	equ	0xFF6
  6950                           tablat	equ	0xFF5
  6951                           prodh	equ	0xFF4
  6952                           prodl	equ	0xFF3
  6953                           intcon	equ	0xFF2
  6954                           intcon2	equ	0xFF1
  6955                           intcon3	equ	0xFF0
  6956                           postinc0	equ	0xFEE
  6957                           wreg	equ	0xFE8
  6958                           postdec1	equ	0xFE5
  6959                           fsr1l	equ	0xFE1
  6960                           indf2	equ	0xFDF
  6961                           fsr2h	equ	0xFDA
  6962                           fsr2l	equ	0xFD9
  6963                           status	equ	0xFD8
  6964                           
  6965 ;; *************** function _ISR_Bassa *****************
  6966 ;; Defined at:
  6967 ;;		line 192 in file "ABS_Code.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;		None               void
  6974 ;; Registers used:
  6975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6981 ;;      Params:         0       0       0       0
  6982 ;;      Locals:         0       0       0       0
  6983 ;;      Temps:         17       0       0       0
  6984 ;;      Totals:        17       0       0       0
  6985 ;;Total ram usage:       17 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    3
  6988 ;; This function calls:
  6989 ;;		_CANisRxReady
  6990 ;;		_CANreceiveMessage
  6991 ;; This function is called by:
  6992 ;;		Interrupt level 1
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	intcodelo
  6997  000018                     __pintcodelo:
  6998                           	opt stack 0
  6999  000018                     _ISR_Bassa:
  7000                           	opt stack 24
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;incstack = 0
  7004  000018  803E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7005  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7006  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7007  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7008  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7009  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7010  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7011  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7012  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7013  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7014  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7015  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7016  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7017  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7018  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7019  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7020  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7021  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7022                           
  7023                           ;ABS_Code.c: 194: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7024  00005E  A0A4               	btfss	4004,0,c	;volatile
  7025  000060  B2A4               	btfsc	4004,1,c	;volatile
  7026  000062  D001               	goto	i1l3906
  7027  000064  D029               	goto	i1l676
  7028  000066                     i1l3906:
  7029                           
  7030                           ;ABS_Code.c: 195: if (CANisRxReady()) {
  7031  000066  EC1D  F014         	call	_CANisRxReady	;wreg free
  7032  00006A  0900               	iorlw	0
  7033  00006C  B4D8               	btfsc	status,2,c
  7034  00006E  D022               	goto	i1l673
  7035                           
  7036                           ;ABS_Code.c: 196: CANreceiveMessage(&msg);
  7037  000070  0E7C               	movlw	low _msg
  7038  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7039  000074  0E00               	movlw	high _msg
  7040  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7041  000078  ECCB  F009         	call	_CANreceiveMessage	;wreg free
  7042                           
  7043                           ;ABS_Code.c: 197: if (msg.RTR == 1) {
  7044  00007C  0100               	movlb	0	; () banked
  7045  00007E  058A               	decf	(_msg+14)& (0+255),w,b
  7046  000080  A4D8               	btfss	status,2,c
  7047  000082  D009               	goto	i1l3914
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;ABS_Code.c: 198: remote_frame_id = msg.identifier;
  7051  000084  C07C  F068         	movff	_msg,_remote_frame_id
  7052  000088  C07D  F069         	movff	_msg+1,_remote_frame_id+1
  7053  00008C  C07E  F06A         	movff	_msg+2,_remote_frame_id+2
  7054  000090  C07F  F06B         	movff	_msg+3,_remote_frame_id+3
  7055                           
  7056                           ;ABS_Code.c: 199: remote_frame = 1;
  7057  000094  883D               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7058  000096                     i1l3914:
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;ABS_Code.c: 200: }
  7062                           ;ABS_Code.c: 201: if (msg.identifier == 0b00000000000000000000000000110) {
  7063  000096  0E06               	movlw	6
  7064  000098  0100               	movlb	0	; () banked
  7065  00009A  197C               	xorwf	_msg& (0+255),w,b
  7066  00009C  0100               	movlb	0	; () banked
  7067  00009E  117D               	iorwf	(_msg+1)& (0+255),w,b
  7068  0000A0  0100               	movlb	0	; () banked
  7069  0000A2  117E               	iorwf	(_msg+2)& (0+255),w,b
  7070  0000A4  0100               	movlb	0	; () banked
  7071  0000A6  117F               	iorwf	(_msg+3)& (0+255),w,b
  7072  0000A8  A4D8               	btfss	status,2,c
  7073  0000AA  D004               	goto	i1l673
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;ABS_Code.c: 202: brake_signal_CAN = msg.data[0];
  7077  0000AC  C080  F075         	movff	_msg+4,_brake_signal_CAN
  7078                           
  7079                           ;ABS_Code.c: 203: Analogic_Mode = msg.data[1];
  7080  0000B0  C081  F074         	movff	_msg+5,_Analogic_Mode
  7081  0000B4                     i1l673:
  7082                           
  7083                           ;ABS_Code.c: 204: }
  7084                           ;ABS_Code.c: 205: }
  7085                           ;ABS_Code.c: 206: PIR3bits.RXB0IF = 0;
  7086  0000B4  90A4               	bcf	4004,0,c	;volatile
  7087                           
  7088                           ;ABS_Code.c: 207: PIR3bits.RXB1IF = 0;
  7089  0000B6  92A4               	bcf	4004,1,c	;volatile
  7090  0000B8                     i1l676:
  7091  0000B8  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7092  0000BC  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7093  0000C0  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7094  0000C4  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7095  0000C8  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7096  0000CC  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7097  0000D0  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7098  0000D4  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7099  0000D8  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7100  0000DC  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7101  0000E0  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7102  0000E4  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7103  0000E8  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7104  0000EC  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7105  0000F0  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7106  0000F4  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7107  0000F8  C00D  FFD8         	movff	??_ISR_Bassa,status
  7108  0000FC  903E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7109  0000FE  0010               	retfie	
  7110  000100                     __end_of_ISR_Bassa:
  7111                           	opt stack 0
  7112                           pclatu	equ	0xFFB
  7113                           pclath	equ	0xFFA
  7114                           tblptru	equ	0xFF8
  7115                           tblptrh	equ	0xFF7
  7116                           tblptrl	equ	0xFF6
  7117                           tablat	equ	0xFF5
  7118                           prodh	equ	0xFF4
  7119                           prodl	equ	0xFF3
  7120                           intcon	equ	0xFF2
  7121                           intcon2	equ	0xFF1
  7122                           intcon3	equ	0xFF0
  7123                           postinc0	equ	0xFEE
  7124                           fsr0h	equ	0xFEA
  7125                           fsr0l	equ	0xFE9
  7126                           wreg	equ	0xFE8
  7127                           postdec1	equ	0xFE5
  7128                           fsr1h	equ	0xFE2
  7129                           fsr1l	equ	0xFE1
  7130                           bsr	equ	0xFE0
  7131                           indf2	equ	0xFDF
  7132                           fsr2h	equ	0xFDA
  7133                           fsr2l	equ	0xFD9
  7134                           status	equ	0xFD8
  7135                           
  7136 ;; *************** function _CANreceiveMessage *****************
  7137 ;; Defined at:
  7138 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  msg             2    0[COMRAM] PTR struct .
  7141 ;;		 -> msg(15), 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  tamp            1   11[COMRAM] unsigned char 
  7144 ;;  error           1   10[COMRAM] unsigned char 
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      unsigned char 
  7147 ;; Registers used:
  7148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7154 ;;      Params:         2       0       0       0
  7155 ;;      Locals:         2       0       0       0
  7156 ;;      Temps:          8       0       0       0
  7157 ;;      Totals:        12       0       0       0
  7158 ;;Total ram usage:       12 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    2
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_ISR_Bassa
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text17
  7169  001396                     __ptext17:
  7170                           	opt stack 0
  7171  001396                     _CANreceiveMessage:
  7172                           	opt stack 24
  7173                           
  7174                           ;inc\CANlib.h: 530: BYTE tamp;
  7175                           ;inc\CANlib.h: 531: BYTE error = 0;
  7176                           
  7177                           ;incstack = 0
  7178  001396  0E00               	movlw	0
  7179  001398  6E0B               	movwf	CANreceiveMessage@error,c
  7180                           
  7181                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7182  00139A  BE74               	btfsc	3956,7,c	;volatile
  7183                           
  7184                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7185  00139C  800B               	bsf	CANreceiveMessage@error,0,c
  7186                           
  7187                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7188  00139E  BC74               	btfsc	3956,6,c	;volatile
  7189                           
  7190                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7191  0013A0  820B               	bsf	CANreceiveMessage@error,1,c
  7192                           
  7193                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7194  0013A2  010F               	movlb	15	; () banked
  7195  0013A4  AF50               	btfss	80,7,b	;volatile
  7196  0013A6  D143               	goto	i1l420
  7197                           
  7198                           ; BSR set to: 15
  7199                           ;inc\CANlib.h: 541: {
  7200                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7201  0013A8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7202  0013AC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7203  0013B0  6ADE               	clrf	postinc2,c
  7204  0013B2  6ADE               	clrf	postinc2,c
  7205  0013B4  6ADE               	clrf	postinc2,c
  7206  0013B6  6ADD               	clrf	postdec2,c
  7207                           
  7208                           ; BSR set to: 15
  7209                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7210  0013B8  EE20 F004          	lfsr	2,4
  7211  0013BC  5001               	movf	CANreceiveMessage@msg,w,c
  7212  0013BE  26D9               	addwf	fsr2l,f,c
  7213  0013C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7214  0013C2  22DA               	addwfc	fsr2h,f,c
  7215  0013C4  CF56 FFDF          	movff	3926,indf2	;volatile
  7216                           
  7217                           ; BSR set to: 15
  7218                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7219  0013C8  EE20 F005          	lfsr	2,5
  7220  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7221  0013CE  26D9               	addwf	fsr2l,f,c
  7222  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7223  0013D2  22DA               	addwfc	fsr2h,f,c
  7224  0013D4  CF57 FFDF          	movff	3927,indf2	;volatile
  7225                           
  7226                           ; BSR set to: 15
  7227                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7228  0013D8  EE20 F006          	lfsr	2,6
  7229  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7230  0013DE  26D9               	addwf	fsr2l,f,c
  7231  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7232  0013E2  22DA               	addwfc	fsr2h,f,c
  7233  0013E4  CF58 FFDF          	movff	3928,indf2	;volatile
  7234                           
  7235                           ; BSR set to: 15
  7236                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7237  0013E8  EE20 F007          	lfsr	2,7
  7238  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7239  0013EE  26D9               	addwf	fsr2l,f,c
  7240  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7241  0013F2  22DA               	addwfc	fsr2h,f,c
  7242  0013F4  CF59 FFDF          	movff	3929,indf2	;volatile
  7243                           
  7244                           ; BSR set to: 15
  7245                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7246  0013F8  EE20 F008          	lfsr	2,8
  7247  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7248  0013FE  26D9               	addwf	fsr2l,f,c
  7249  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7250  001402  22DA               	addwfc	fsr2h,f,c
  7251  001404  CF5A FFDF          	movff	3930,indf2	;volatile
  7252                           
  7253                           ; BSR set to: 15
  7254                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7255  001408  EE20 F009          	lfsr	2,9
  7256  00140C  5001               	movf	CANreceiveMessage@msg,w,c
  7257  00140E  26D9               	addwf	fsr2l,f,c
  7258  001410  5002               	movf	CANreceiveMessage@msg+1,w,c
  7259  001412  22DA               	addwfc	fsr2h,f,c
  7260  001414  CF5B FFDF          	movff	3931,indf2	;volatile
  7261                           
  7262                           ; BSR set to: 15
  7263                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7264  001418  EE20 F00A          	lfsr	2,10
  7265  00141C  5001               	movf	CANreceiveMessage@msg,w,c
  7266  00141E  26D9               	addwf	fsr2l,f,c
  7267  001420  5002               	movf	CANreceiveMessage@msg+1,w,c
  7268  001422  22DA               	addwfc	fsr2h,f,c
  7269  001424  CF5C FFDF          	movff	3932,indf2	;volatile
  7270                           
  7271                           ; BSR set to: 15
  7272                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7273  001428  EE20 F00B          	lfsr	2,11
  7274  00142C  5001               	movf	CANreceiveMessage@msg,w,c
  7275  00142E  26D9               	addwf	fsr2l,f,c
  7276  001430  5002               	movf	CANreceiveMessage@msg+1,w,c
  7277  001432  22DA               	addwfc	fsr2h,f,c
  7278  001434  CF5D FFDF          	movff	3933,indf2	;volatile
  7279                           
  7280                           ; BSR set to: 15
  7281                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7282  001438  EE20 F00E          	lfsr	2,14
  7283  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7284  00143E  26D9               	addwf	fsr2l,f,c
  7285  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7286  001442  22DA               	addwfc	fsr2h,f,c
  7287  001444  010F               	movlb	15	; () banked
  7288  001446  AD55               	btfss	85,6,b	;volatile
  7289  001448  D002               	goto	i1u378_20
  7290  00144A  0E01               	movlw	1
  7291  00144C  D001               	goto	i1u378_26
  7292  00144E                     i1u378_20:
  7293  00144E  0E00               	movlw	0
  7294  001450                     i1u378_26:
  7295  001450  6EDF               	movwf	indf2,c
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7299  001452  EE20 F00D          	lfsr	2,13
  7300  001456  5001               	movf	CANreceiveMessage@msg,w,c
  7301  001458  26D9               	addwf	fsr2l,f,c
  7302  00145A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7303  00145C  22DA               	addwfc	fsr2h,f,c
  7304  00145E  010F               	movlb	15	; () banked
  7305  001460  5155               	movf	85,w,b	;volatile
  7306  001462  0B0F               	andlw	15
  7307  001464  6EDF               	movwf	indf2,c
  7308                           
  7309                           ; BSR set to: 15
  7310                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7311  001466  EE20 F00C          	lfsr	2,12
  7312  00146A  5001               	movf	CANreceiveMessage@msg,w,c
  7313  00146C  26D9               	addwf	fsr2l,f,c
  7314  00146E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7315  001470  22DA               	addwfc	fsr2h,f,c
  7316  001472  010F               	movlb	15	; () banked
  7317  001474  A752               	btfss	82,3,b	;volatile
  7318  001476  D002               	goto	i1u379_20
  7319  001478  0E01               	movlw	1
  7320  00147A  D001               	goto	i1u379_26
  7321  00147C                     i1u379_20:
  7322  00147C  0E00               	movlw	0
  7323  00147E                     i1u379_26:
  7324  00147E  6EDF               	movwf	indf2,c
  7325                           
  7326                           ; BSR set to: 15
  7327                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7328  001480  010F               	movlb	15	; () banked
  7329  001482  B752               	btfsc	82,3,b	;volatile
  7330  001484  D044               	goto	i1l3482
  7331                           
  7332                           ; BSR set to: 15
  7333                           ;inc\CANlib.h: 559: {
  7334                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7335  001486  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7336  00148A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7337  00148C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7338  00148E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7339  001490  0E03               	movlw	3
  7340  001492                     i1u381_25:
  7341  001492  90D8               	bcf	status,0,c
  7342  001494  3603               	rlcf	??_CANreceiveMessage,f,c
  7343  001496  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7344  001498  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7345  00149A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7346  00149C  2EE8               	decfsz	wreg,f,c
  7347  00149E  D7F9               	goto	i1u381_25
  7348  0014A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7349  0014A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7350  0014A8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7351  0014AC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7352  0014B0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7353  0014B4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7354                           
  7355                           ; BSR set to: 15
  7356                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7357  0014B8  010F               	movlb	15	; () banked
  7358  0014BA  3952               	swapf	82,w,b	;volatile
  7359  0014BC  42E8               	rrncf	wreg,f,c
  7360  0014BE  0B07               	andlw	7
  7361  0014C0  0B07               	andlw	7
  7362  0014C2  6E0C               	movwf	CANreceiveMessage@tamp,c
  7363                           
  7364                           ; BSR set to: 15
  7365                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7366  0014C4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7367  0014C8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7368  0014CC  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7369  0014D0  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7370  0014D4  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7371  0014D8  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7372  0014DC  500C               	movf	CANreceiveMessage@tamp,w,c
  7373  0014DE  2403               	addwf	??_CANreceiveMessage,w,c
  7374  0014E0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7375  0014E2  0E00               	movlw	0
  7376  0014E4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7377  0014E6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7378  0014E8  0E00               	movlw	0
  7379  0014EA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7380  0014EC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7381  0014EE  0E00               	movlw	0
  7382  0014F0  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7383  0014F2  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7384  0014F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7385  0014F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7386  0014FC  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7387  001500  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7388  001504  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7389  001508  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7390                           
  7391                           ;inc\CANlib.h: 563: }
  7392  00150C  D08D               	goto	i1l3508
  7393  00150E                     i1l3482:
  7394                           
  7395                           ; BSR set to: 15
  7396                           ;inc\CANlib.h: 564: else
  7397                           ;inc\CANlib.h: 565: {
  7398                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7399  00150E  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7400  001512  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7401  001514  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7402  001516  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7403  001518  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7404  00151C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7405  001520  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7406  001524  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7407  001528  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7408  00152C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7409                           
  7410                           ; BSR set to: 15
  7411                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7412  001530  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7413  001534  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7414  001536  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7415  001538  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7416  00153A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7417  00153E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7418  001542  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7419  001546  6A03               	clrf	??_CANreceiveMessage,c
  7420  001548  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7421  00154C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7422  001550  5003               	movf	??_CANreceiveMessage,w,c
  7423  001552  26DE               	addwf	postinc2,f,c
  7424  001554  5004               	movf	??_CANreceiveMessage+1,w,c
  7425  001556  22DE               	addwfc	postinc2,f,c
  7426  001558  5005               	movf	??_CANreceiveMessage+2,w,c
  7427  00155A  22DE               	addwfc	postinc2,f,c
  7428  00155C  5006               	movf	??_CANreceiveMessage+3,w,c
  7429  00155E  22DE               	addwfc	postinc2,f,c
  7430                           
  7431                           ; BSR set to: 15
  7432                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7433  001560  010F               	movlb	15	; () banked
  7434  001562  A152               	btfss	82,0,b	;volatile
  7435  001564  D00C               	goto	i1l3490
  7436                           
  7437                           ; BSR set to: 15
  7438                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7439  001566  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7440  00156A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7441  00156E  0E00               	movlw	0
  7442  001570  12DE               	iorwf	postinc2,f,c
  7443  001572  0E00               	movlw	0
  7444  001574  12DE               	iorwf	postinc2,f,c
  7445  001576  0E01               	movlw	1
  7446  001578  12DE               	iorwf	postinc2,f,c
  7447  00157A  0E00               	movlw	0
  7448  00157C  12DE               	iorwf	postinc2,f,c
  7449  00157E                     i1l3490:
  7450                           
  7451                           ; BSR set to: 15
  7452                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7453  00157E  010F               	movlb	15	; () banked
  7454  001580  A352               	btfss	82,1,b	;volatile
  7455  001582  D00C               	goto	i1l3494
  7456                           
  7457                           ; BSR set to: 15
  7458                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7459  001584  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7460  001588  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7461  00158C  0E00               	movlw	0
  7462  00158E  12DE               	iorwf	postinc2,f,c
  7463  001590  0E00               	movlw	0
  7464  001592  12DE               	iorwf	postinc2,f,c
  7465  001594  0E02               	movlw	2
  7466  001596  12DE               	iorwf	postinc2,f,c
  7467  001598  0E00               	movlw	0
  7468  00159A  12DE               	iorwf	postinc2,f,c
  7469  00159C                     i1l3494:
  7470                           
  7471                           ; BSR set to: 15
  7472                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7473  00159C  010F               	movlb	15	; () banked
  7474  00159E  AB52               	btfss	82,5,b	;volatile
  7475  0015A0  D00C               	goto	i1l3498
  7476                           
  7477                           ; BSR set to: 15
  7478                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7479  0015A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7480  0015A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7481  0015AA  0E00               	movlw	0
  7482  0015AC  12DE               	iorwf	postinc2,f,c
  7483  0015AE  0E00               	movlw	0
  7484  0015B0  12DE               	iorwf	postinc2,f,c
  7485  0015B2  0E04               	movlw	4
  7486  0015B4  12DE               	iorwf	postinc2,f,c
  7487  0015B6  0E00               	movlw	0
  7488  0015B8  12DE               	iorwf	postinc2,f,c
  7489  0015BA                     i1l3498:
  7490                           
  7491                           ; BSR set to: 15
  7492                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7493  0015BA  010F               	movlb	15	; () banked
  7494  0015BC  AD52               	btfss	82,6,b	;volatile
  7495  0015BE  D00C               	goto	i1l3502
  7496                           
  7497                           ; BSR set to: 15
  7498                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7499  0015C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7500  0015C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7501  0015C8  0E00               	movlw	0
  7502  0015CA  12DE               	iorwf	postinc2,f,c
  7503  0015CC  0E00               	movlw	0
  7504  0015CE  12DE               	iorwf	postinc2,f,c
  7505  0015D0  0E08               	movlw	8
  7506  0015D2  12DE               	iorwf	postinc2,f,c
  7507  0015D4  0E00               	movlw	0
  7508  0015D6  12DE               	iorwf	postinc2,f,c
  7509  0015D8                     i1l3502:
  7510                           
  7511                           ; BSR set to: 15
  7512                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7513  0015D8  010F               	movlb	15	; () banked
  7514  0015DA  AF52               	btfss	82,7,b	;volatile
  7515  0015DC  D00C               	goto	i1l3506
  7516                           
  7517                           ; BSR set to: 15
  7518                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7519  0015DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7520  0015E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7521  0015E6  0E00               	movlw	0
  7522  0015E8  12DE               	iorwf	postinc2,f,c
  7523  0015EA  0E00               	movlw	0
  7524  0015EC  12DE               	iorwf	postinc2,f,c
  7525  0015EE  0E10               	movlw	16
  7526  0015F0  12DE               	iorwf	postinc2,f,c
  7527  0015F2  0E00               	movlw	0
  7528  0015F4  12DE               	iorwf	postinc2,f,c
  7529  0015F6                     i1l3506:
  7530                           
  7531                           ; BSR set to: 15
  7532                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7533  0015F6  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7534  0015FA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7535  0015FC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7536  0015FE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7537  001600  0E15               	movlw	21
  7538  001602                     i1u387_25:
  7539  001602  90D8               	bcf	status,0,c
  7540  001604  3603               	rlcf	??_CANreceiveMessage,f,c
  7541  001606  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7542  001608  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7543  00160A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7544  00160C  2EE8               	decfsz	wreg,f,c
  7545  00160E  D7F9               	goto	i1u387_25
  7546  001610  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7547  001614  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7548  001618  5003               	movf	??_CANreceiveMessage,w,c
  7549  00161A  12DE               	iorwf	postinc2,f,c
  7550  00161C  5004               	movf	??_CANreceiveMessage+1,w,c
  7551  00161E  12DE               	iorwf	postinc2,f,c
  7552  001620  5005               	movf	??_CANreceiveMessage+2,w,c
  7553  001622  12DE               	iorwf	postinc2,f,c
  7554  001624  5006               	movf	??_CANreceiveMessage+3,w,c
  7555  001626  12DE               	iorwf	postinc2,f,c
  7556  001628                     i1l3508:
  7557                           
  7558                           ; BSR set to: 15
  7559                           ;inc\CANlib.h: 581: }
  7560                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7561  001628  010F               	movlb	15	; () banked
  7562  00162A  9F50               	bcf	80,7,b	;volatile
  7563                           
  7564                           ; BSR set to: 15
  7565                           ;inc\CANlib.h: 584: return (error);
  7566                           ;	Return value of _CANreceiveMessage is never used
  7567  00162C  0012               	return	
  7568  00162E                     i1l420:
  7569                           
  7570                           ; BSR set to: 15
  7571                           ;inc\CANlib.h: 585: }
  7572                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7573  00162E  AE60               	btfss	3936,7,c	;volatile
  7574  001630  0012               	return	
  7575                           
  7576                           ; BSR set to: 15
  7577                           ;inc\CANlib.h: 588: {
  7578                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7579  001632  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7580  001636  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7581  00163A  6ADE               	clrf	postinc2,c
  7582  00163C  6ADE               	clrf	postinc2,c
  7583  00163E  6ADE               	clrf	postinc2,c
  7584  001640  6ADD               	clrf	postdec2,c
  7585                           
  7586                           ; BSR set to: 15
  7587                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7588  001642  EE20 F004          	lfsr	2,4
  7589  001646  5001               	movf	CANreceiveMessage@msg,w,c
  7590  001648  26D9               	addwf	fsr2l,f,c
  7591  00164A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7592  00164C  22DA               	addwfc	fsr2h,f,c
  7593  00164E  CF66 FFDF          	movff	3942,indf2	;volatile
  7594                           
  7595                           ; BSR set to: 15
  7596                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7597  001652  EE20 F005          	lfsr	2,5
  7598  001656  5001               	movf	CANreceiveMessage@msg,w,c
  7599  001658  26D9               	addwf	fsr2l,f,c
  7600  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7601  00165C  22DA               	addwfc	fsr2h,f,c
  7602  00165E  CF67 FFDF          	movff	3943,indf2	;volatile
  7603                           
  7604                           ; BSR set to: 15
  7605                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7606  001662  EE20 F006          	lfsr	2,6
  7607  001666  5001               	movf	CANreceiveMessage@msg,w,c
  7608  001668  26D9               	addwf	fsr2l,f,c
  7609  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7610  00166C  22DA               	addwfc	fsr2h,f,c
  7611  00166E  CF68 FFDF          	movff	3944,indf2	;volatile
  7612                           
  7613                           ; BSR set to: 15
  7614                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7615  001672  EE20 F007          	lfsr	2,7
  7616  001676  5001               	movf	CANreceiveMessage@msg,w,c
  7617  001678  26D9               	addwf	fsr2l,f,c
  7618  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7619  00167C  22DA               	addwfc	fsr2h,f,c
  7620  00167E  CF69 FFDF          	movff	3945,indf2	;volatile
  7621                           
  7622                           ; BSR set to: 15
  7623                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7624  001682  EE20 F008          	lfsr	2,8
  7625  001686  5001               	movf	CANreceiveMessage@msg,w,c
  7626  001688  26D9               	addwf	fsr2l,f,c
  7627  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7628  00168C  22DA               	addwfc	fsr2h,f,c
  7629  00168E  CF6A FFDF          	movff	3946,indf2	;volatile
  7630                           
  7631                           ; BSR set to: 15
  7632                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7633  001692  EE20 F009          	lfsr	2,9
  7634  001696  5001               	movf	CANreceiveMessage@msg,w,c
  7635  001698  26D9               	addwf	fsr2l,f,c
  7636  00169A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7637  00169C  22DA               	addwfc	fsr2h,f,c
  7638  00169E  CF6B FFDF          	movff	3947,indf2	;volatile
  7639                           
  7640                           ; BSR set to: 15
  7641                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7642  0016A2  EE20 F00A          	lfsr	2,10
  7643  0016A6  5001               	movf	CANreceiveMessage@msg,w,c
  7644  0016A8  26D9               	addwf	fsr2l,f,c
  7645  0016AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7646  0016AC  22DA               	addwfc	fsr2h,f,c
  7647  0016AE  CF6C FFDF          	movff	3948,indf2	;volatile
  7648                           
  7649                           ; BSR set to: 15
  7650                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7651  0016B2  EE20 F00B          	lfsr	2,11
  7652  0016B6  5001               	movf	CANreceiveMessage@msg,w,c
  7653  0016B8  26D9               	addwf	fsr2l,f,c
  7654  0016BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7655  0016BC  22DA               	addwfc	fsr2h,f,c
  7656  0016BE  CF6D FFDF          	movff	3949,indf2	;volatile
  7657                           
  7658                           ; BSR set to: 15
  7659                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7660  0016C2  EE20 F00E          	lfsr	2,14
  7661  0016C6  5001               	movf	CANreceiveMessage@msg,w,c
  7662  0016C8  26D9               	addwf	fsr2l,f,c
  7663  0016CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7664  0016CC  22DA               	addwfc	fsr2h,f,c
  7665  0016CE  AC65               	btfss	3941,6,c	;volatile
  7666  0016D0  D002               	goto	i1u389_20
  7667  0016D2  0E01               	movlw	1
  7668  0016D4  D001               	goto	i1u389_26
  7669  0016D6                     i1u389_20:
  7670  0016D6  0E00               	movlw	0
  7671  0016D8                     i1u389_26:
  7672  0016D8  6EDF               	movwf	indf2,c
  7673                           
  7674                           ; BSR set to: 15
  7675                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7676  0016DA  EE20 F00D          	lfsr	2,13
  7677  0016DE  5001               	movf	CANreceiveMessage@msg,w,c
  7678  0016E0  26D9               	addwf	fsr2l,f,c
  7679  0016E2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7680  0016E4  22DA               	addwfc	fsr2h,f,c
  7681  0016E6  5065               	movf	3941,w,c	;volatile
  7682  0016E8  0B0F               	andlw	15
  7683  0016EA  6EDF               	movwf	indf2,c
  7684                           
  7685                           ; BSR set to: 15
  7686                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7687  0016EC  EE20 F00C          	lfsr	2,12
  7688  0016F0  5001               	movf	CANreceiveMessage@msg,w,c
  7689  0016F2  26D9               	addwf	fsr2l,f,c
  7690  0016F4  5002               	movf	CANreceiveMessage@msg+1,w,c
  7691  0016F6  22DA               	addwfc	fsr2h,f,c
  7692  0016F8  A662               	btfss	3938,3,c	;volatile
  7693  0016FA  D002               	goto	i1u390_20
  7694  0016FC  0E01               	movlw	1
  7695  0016FE  D001               	goto	i1u390_26
  7696  001700                     i1u390_20:
  7697  001700  0E00               	movlw	0
  7698  001702                     i1u390_26:
  7699  001702  6EDF               	movwf	indf2,c
  7700                           
  7701                           ; BSR set to: 15
  7702                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7703  001704  B662               	btfsc	3938,3,c	;volatile
  7704  001706  D043               	goto	i1l3544
  7705                           
  7706                           ; BSR set to: 15
  7707                           ;inc\CANlib.h: 606: {
  7708                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7709  001708  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7710  00170C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7711  00170E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7712  001710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7713  001712  0E03               	movlw	3
  7714  001714                     i1u392_25:
  7715  001714  90D8               	bcf	status,0,c
  7716  001716  3603               	rlcf	??_CANreceiveMessage,f,c
  7717  001718  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7718  00171A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7719  00171C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7720  00171E  2EE8               	decfsz	wreg,f,c
  7721  001720  D7F9               	goto	i1u392_25
  7722  001722  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7723  001726  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7724  00172A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7725  00172E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7726  001732  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7727  001736  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7728                           
  7729                           ; BSR set to: 15
  7730                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7731  00173A  3862               	swapf	3938,w,c	;volatile
  7732  00173C  42E8               	rrncf	wreg,f,c
  7733  00173E  0B07               	andlw	7
  7734  001740  0B07               	andlw	7
  7735  001742  6E0C               	movwf	CANreceiveMessage@tamp,c
  7736                           
  7737                           ; BSR set to: 15
  7738                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7739  001744  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7740  001748  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7741  00174C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7742  001750  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7743  001754  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7744  001758  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7745  00175C  500C               	movf	CANreceiveMessage@tamp,w,c
  7746  00175E  2403               	addwf	??_CANreceiveMessage,w,c
  7747  001760  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7748  001762  0E00               	movlw	0
  7749  001764  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7750  001766  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7751  001768  0E00               	movlw	0
  7752  00176A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7753  00176C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7754  00176E  0E00               	movlw	0
  7755  001770  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7756  001772  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7757  001774  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7758  001778  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7759  00177C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7760  001780  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7761  001784  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7762  001788  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7763                           
  7764                           ;inc\CANlib.h: 610: }
  7765  00178C  D088               	goto	i1l3570
  7766  00178E                     i1l3544:
  7767                           
  7768                           ; BSR set to: 15
  7769                           ;inc\CANlib.h: 611: else
  7770                           ;inc\CANlib.h: 612: {
  7771                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7772  00178E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7773  001792  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7774  001794  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7775  001796  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7776  001798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7777  00179C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7778  0017A0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7779  0017A4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7780  0017A8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7781  0017AC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7782                           
  7783                           ; BSR set to: 15
  7784                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7785  0017B0  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7786  0017B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7787  0017B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7788  0017B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7789  0017BA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7790  0017BE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7791  0017C2  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7792  0017C6  6A03               	clrf	??_CANreceiveMessage,c
  7793  0017C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7794  0017CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7795  0017D0  5003               	movf	??_CANreceiveMessage,w,c
  7796  0017D2  26DE               	addwf	postinc2,f,c
  7797  0017D4  5004               	movf	??_CANreceiveMessage+1,w,c
  7798  0017D6  22DE               	addwfc	postinc2,f,c
  7799  0017D8  5005               	movf	??_CANreceiveMessage+2,w,c
  7800  0017DA  22DE               	addwfc	postinc2,f,c
  7801  0017DC  5006               	movf	??_CANreceiveMessage+3,w,c
  7802  0017DE  22DE               	addwfc	postinc2,f,c
  7803                           
  7804                           ; BSR set to: 15
  7805                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7806  0017E0  A062               	btfss	3938,0,c	;volatile
  7807  0017E2  D00C               	goto	i1l3552
  7808                           
  7809                           ; BSR set to: 15
  7810                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7811  0017E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7812  0017E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7813  0017EC  0E00               	movlw	0
  7814  0017EE  12DE               	iorwf	postinc2,f,c
  7815  0017F0  0E00               	movlw	0
  7816  0017F2  12DE               	iorwf	postinc2,f,c
  7817  0017F4  0E01               	movlw	1
  7818  0017F6  12DE               	iorwf	postinc2,f,c
  7819  0017F8  0E00               	movlw	0
  7820  0017FA  12DE               	iorwf	postinc2,f,c
  7821  0017FC                     i1l3552:
  7822                           
  7823                           ; BSR set to: 15
  7824                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7825  0017FC  A262               	btfss	3938,1,c	;volatile
  7826  0017FE  D00C               	goto	i1l3556
  7827                           
  7828                           ; BSR set to: 15
  7829                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7830  001800  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7831  001804  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7832  001808  0E00               	movlw	0
  7833  00180A  12DE               	iorwf	postinc2,f,c
  7834  00180C  0E00               	movlw	0
  7835  00180E  12DE               	iorwf	postinc2,f,c
  7836  001810  0E02               	movlw	2
  7837  001812  12DE               	iorwf	postinc2,f,c
  7838  001814  0E00               	movlw	0
  7839  001816  12DE               	iorwf	postinc2,f,c
  7840  001818                     i1l3556:
  7841                           
  7842                           ; BSR set to: 15
  7843                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7844  001818  AA62               	btfss	3938,5,c	;volatile
  7845  00181A  D00C               	goto	i1l3560
  7846                           
  7847                           ; BSR set to: 15
  7848                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  7849  00181C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7850  001820  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7851  001824  0E00               	movlw	0
  7852  001826  12DE               	iorwf	postinc2,f,c
  7853  001828  0E00               	movlw	0
  7854  00182A  12DE               	iorwf	postinc2,f,c
  7855  00182C  0E04               	movlw	4
  7856  00182E  12DE               	iorwf	postinc2,f,c
  7857  001830  0E00               	movlw	0
  7858  001832  12DE               	iorwf	postinc2,f,c
  7859  001834                     i1l3560:
  7860                           
  7861                           ; BSR set to: 15
  7862                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  7863  001834  AC62               	btfss	3938,6,c	;volatile
  7864  001836  D00C               	goto	i1l3564
  7865                           
  7866                           ; BSR set to: 15
  7867                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  7868  001838  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7869  00183C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7870  001840  0E00               	movlw	0
  7871  001842  12DE               	iorwf	postinc2,f,c
  7872  001844  0E00               	movlw	0
  7873  001846  12DE               	iorwf	postinc2,f,c
  7874  001848  0E08               	movlw	8
  7875  00184A  12DE               	iorwf	postinc2,f,c
  7876  00184C  0E00               	movlw	0
  7877  00184E  12DE               	iorwf	postinc2,f,c
  7878  001850                     i1l3564:
  7879                           
  7880                           ; BSR set to: 15
  7881                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  7882  001850  AE62               	btfss	3938,7,c	;volatile
  7883  001852  D00C               	goto	i1l3568
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  7887  001854  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7888  001858  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7889  00185C  0E00               	movlw	0
  7890  00185E  12DE               	iorwf	postinc2,f,c
  7891  001860  0E00               	movlw	0
  7892  001862  12DE               	iorwf	postinc2,f,c
  7893  001864  0E10               	movlw	16
  7894  001866  12DE               	iorwf	postinc2,f,c
  7895  001868  0E00               	movlw	0
  7896  00186A  12DE               	iorwf	postinc2,f,c
  7897  00186C                     i1l3568:
  7898                           
  7899                           ; BSR set to: 15
  7900                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7901  00186C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7902  001870  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7903  001872  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7904  001874  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7905  001876  0E15               	movlw	21
  7906  001878                     i1u398_25:
  7907  001878  90D8               	bcf	status,0,c
  7908  00187A  3603               	rlcf	??_CANreceiveMessage,f,c
  7909  00187C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7910  00187E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7911  001880  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7912  001882  2EE8               	decfsz	wreg,f,c
  7913  001884  D7F9               	goto	i1u398_25
  7914  001886  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7915  00188A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7916  00188E  5003               	movf	??_CANreceiveMessage,w,c
  7917  001890  12DE               	iorwf	postinc2,f,c
  7918  001892  5004               	movf	??_CANreceiveMessage+1,w,c
  7919  001894  12DE               	iorwf	postinc2,f,c
  7920  001896  5005               	movf	??_CANreceiveMessage+2,w,c
  7921  001898  12DE               	iorwf	postinc2,f,c
  7922  00189A  5006               	movf	??_CANreceiveMessage+3,w,c
  7923  00189C  12DE               	iorwf	postinc2,f,c
  7924  00189E                     i1l3570:
  7925                           
  7926                           ; BSR set to: 15
  7927                           ;inc\CANlib.h: 629: }
  7928                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  7929  00189E  9E60               	bcf	3936,7,c	;volatile
  7930                           
  7931                           ; BSR set to: 15
  7932                           ;inc\CANlib.h: 632: return (error);
  7933                           ;	Return value of _CANreceiveMessage is never used
  7934  0018A0  0012               	return	
  7935  0018A2                     __end_of_CANreceiveMessage:
  7936                           	opt stack 0
  7937                           pclatu	equ	0xFFB
  7938                           pclath	equ	0xFFA
  7939                           tblptru	equ	0xFF8
  7940                           tblptrh	equ	0xFF7
  7941                           tblptrl	equ	0xFF6
  7942                           tablat	equ	0xFF5
  7943                           prodh	equ	0xFF4
  7944                           prodl	equ	0xFF3
  7945                           intcon	equ	0xFF2
  7946                           intcon2	equ	0xFF1
  7947                           intcon3	equ	0xFF0
  7948                           postinc0	equ	0xFEE
  7949                           fsr0h	equ	0xFEA
  7950                           fsr0l	equ	0xFE9
  7951                           wreg	equ	0xFE8
  7952                           postdec1	equ	0xFE5
  7953                           fsr1h	equ	0xFE2
  7954                           fsr1l	equ	0xFE1
  7955                           bsr	equ	0xFE0
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           postdec2	equ	0xFDD
  7959                           fsr2h	equ	0xFDA
  7960                           fsr2l	equ	0xFD9
  7961                           status	equ	0xFD8
  7962                           
  7963 ;; *************** function _CANisRxReady *****************
  7964 ;; Defined at:
  7965 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;		None
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  1    wreg      unsigned char 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7979 ;;      Params:         0       0       0       0
  7980 ;;      Locals:         1       0       0       0
  7981 ;;      Temps:          0       0       0       0
  7982 ;;      Totals:         1       0       0       0
  7983 ;;Total ram usage:        1 bytes
  7984 ;; Hardware stack levels used:    1
  7985 ;; Hardware stack levels required when called:    2
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_ISR_Bassa
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text18
  7994  00283A                     __ptext18:
  7995                           	opt stack 0
  7996  00283A                     _CANisRxReady:
  7997                           	opt stack 24
  7998                           
  7999                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8000                           
  8001                           ; BSR set to: 15
  8002                           ;incstack = 0
  8003  00283A  0E01               	movlw	1
  8004  00283C  6E01               	movwf	_CANisRxReady$3086,c
  8005  00283E  BE60               	btfsc	3936,7,c	;volatile
  8006  002840  D005               	goto	i1l571
  8007  002842  010F               	movlb	15	; () banked
  8008  002844  BF50               	btfsc	80,7,b	;volatile
  8009  002846  D002               	goto	i1l571
  8010                           
  8011                           ; BSR set to: 15
  8012  002848  0E00               	movlw	0
  8013  00284A  6E01               	movwf	_CANisRxReady$3086,c
  8014  00284C                     i1l571:
  8015  00284C  5001               	movf	_CANisRxReady$3086,w,c
  8016  00284E  0012               	return	
  8017  002850                     __end_of_CANisRxReady:
  8018                           	opt stack 0
  8019                           pclatu	equ	0xFFB
  8020                           pclath	equ	0xFFA
  8021                           tblptru	equ	0xFF8
  8022                           tblptrh	equ	0xFF7
  8023                           tblptrl	equ	0xFF6
  8024                           tablat	equ	0xFF5
  8025                           prodh	equ	0xFF4
  8026                           prodl	equ	0xFF3
  8027                           intcon	equ	0xFF2
  8028                           intcon2	equ	0xFF1
  8029                           intcon3	equ	0xFF0
  8030                           postinc0	equ	0xFEE
  8031                           fsr0h	equ	0xFEA
  8032                           fsr0l	equ	0xFE9
  8033                           wreg	equ	0xFE8
  8034                           postdec1	equ	0xFE5
  8035                           fsr1h	equ	0xFE2
  8036                           fsr1l	equ	0xFE1
  8037                           bsr	equ	0xFE0
  8038                           indf2	equ	0xFDF
  8039                           postinc2	equ	0xFDE
  8040                           postdec2	equ	0xFDD
  8041                           fsr2h	equ	0xFDA
  8042                           fsr2l	equ	0xFD9
  8043                           status	equ	0xFD8
  8044                           
  8045 ;; *************** function _ISR_Alta *****************
  8046 ;; Defined at:
  8047 ;;		line 133 in file "ABS_Code.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;		None
  8052 ;; Return value:  Size  Location     Type
  8053 ;;		None               void
  8054 ;; Registers used:
  8055 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8061 ;;      Params:         0       0       0       0
  8062 ;;      Locals:         0       0       0       0
  8063 ;;      Temps:          0      22       0       0
  8064 ;;      Totals:         0      22       0       0
  8065 ;;Total ram usage:       22 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    1
  8068 ;; This function calls:
  8069 ;;		_WriteTimer0
  8070 ;;		i2___awdiv
  8071 ;;		i2___lldiv
  8072 ;;		i2___wmul
  8073 ;; This function is called by:
  8074 ;;		Interrupt level 2
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	intcode
  8079  000008                     __pintcode:
  8080                           	opt stack 0
  8081  000008                     _ISR_Alta:
  8082                           	opt stack 24
  8083                           
  8084                           ;incstack = 0
  8085  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8086  00000A  CFFA F0A4          	movff	pclath,??_ISR_Alta+8
  8087  00000E  CFFB F0A5          	movff	pclatu,??_ISR_Alta+9
  8088  000012  ED20  F00E         	call	int_func,f	;refresh shadow registers
  8089                           pclatu	equ	0xFFB
  8090                           pclath	equ	0xFFA
  8091                           tblptru	equ	0xFF8
  8092                           tblptrh	equ	0xFF7
  8093                           tblptrl	equ	0xFF6
  8094                           tablat	equ	0xFF5
  8095                           prodh	equ	0xFF4
  8096                           prodl	equ	0xFF3
  8097                           intcon	equ	0xFF2
  8098                           intcon2	equ	0xFF1
  8099                           intcon3	equ	0xFF0
  8100                           postinc0	equ	0xFEE
  8101                           fsr0h	equ	0xFEA
  8102                           fsr0l	equ	0xFE9
  8103                           wreg	equ	0xFE8
  8104                           postdec1	equ	0xFE5
  8105                           fsr1h	equ	0xFE2
  8106                           fsr1l	equ	0xFE1
  8107                           bsr	equ	0xFE0
  8108                           indf2	equ	0xFDF
  8109                           postinc2	equ	0xFDE
  8110                           postdec2	equ	0xFDD
  8111                           fsr2h	equ	0xFDA
  8112                           fsr2l	equ	0xFD9
  8113                           status	equ	0xFD8
  8114                           
  8115                           	psect	intcode_body
  8116  001C40                     __pintcode_body:
  8117                           	opt stack 24
  8118  001C40                     int_func:
  8119                           	opt stack 24
  8120  001C40  0006               	pop		; remove dummy address from shadow register refresh
  8121  001C42  CFE9 F0A6          	movff	fsr0l,??_ISR_Alta+10
  8122  001C46  CFEA F0A7          	movff	fsr0h,??_ISR_Alta+11
  8123  001C4A  CFE1 F0A8          	movff	fsr1l,??_ISR_Alta+12
  8124  001C4E  CFE2 F0A9          	movff	fsr1h,??_ISR_Alta+13
  8125  001C52  CFD9 F0AA          	movff	fsr2l,??_ISR_Alta+14
  8126  001C56  CFDA F0AB          	movff	fsr2h,??_ISR_Alta+15
  8127  001C5A  CFF3 F0AC          	movff	prodl,??_ISR_Alta+16
  8128  001C5E  CFF4 F0AD          	movff	prodh,??_ISR_Alta+17
  8129  001C62  CFF6 F0AE          	movff	tblptrl,??_ISR_Alta+18
  8130  001C66  CFF7 F0AF          	movff	tblptrh,??_ISR_Alta+19
  8131  001C6A  CFF8 F0B0          	movff	tblptru,??_ISR_Alta+20
  8132  001C6E  CFF5 F0B1          	movff	tablat,??_ISR_Alta+21
  8133                           
  8134                           ;ABS_Code.c: 135: if (INTCONbits.TMR0IF == 1) {
  8135  001C72  A4F2               	btfss	intcon,2,c	;volatile
  8136  001C74  D0AB               	goto	i2l4008
  8137                           
  8138                           ;ABS_Code.c: 136: PORTCbits.RC0 = ~PORTCbits.RC0;
  8139  001C76  A082               	btfss	3970,0,c	;volatile
  8140  001C78  D002               	goto	i2u450_40
  8141  001C7A  0E01               	movlw	1
  8142  001C7C  D001               	goto	i2u450_46
  8143  001C7E                     i2u450_40:
  8144  001C7E  0E00               	movlw	0
  8145  001C80                     i2u450_46:
  8146  001C80  0AFF               	xorlw	255
  8147  001C82  0100               	movlb	0	; () banked
  8148  001C84  6F9C               	movwf	??_ISR_Alta& (0+255),b
  8149  001C86  5082               	movf	3970,w,c	;volatile
  8150  001C88  0100               	movlb	0	; () banked
  8151  001C8A  199C               	xorwf	??_ISR_Alta& (0+255),w,b
  8152  001C8C  0BFE               	andlw	-2
  8153  001C8E  199C               	xorwf	??_ISR_Alta& (0+255),w,b
  8154  001C90  6E82               	movwf	3970,c	;volatile
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;ABS_Code.c: 137: if (PORTCbits.RC0 == 1) {
  8158  001C92  A082               	btfss	3970,0,c	;volatile
  8159  001C94  D094               	goto	i2l4004
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;ABS_Code.c: 138: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8163  001C96  0E40               	movlw	64
  8164  001C98  0100               	movlb	0	; () banked
  8165  001C9A  6F9C               	movwf	??_ISR_Alta& (0+255),b
  8166  001C9C  0E06               	movlw	6
  8167  001C9E  0100               	movlb	0	; () banked
  8168  001CA0  6F9D               	movwf	(??_ISR_Alta+1)& (0+255),b
  8169  001CA2  C03C  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8170  001CA6  6A1F               	clrf	i2___wmul@multiplier+1,c
  8171  001CA8  0E05               	movlw	5
  8172  001CAA  6E21               	movwf	i2___wmul@multiplicand+1,c
  8173  001CAC  0E78               	movlw	120
  8174  001CAE  6E20               	movwf	i2___wmul@multiplicand,c
  8175  001CB0  ECED  F013         	call	i2___wmul	;wreg free
  8176  001CB4  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8177  001CB8  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8178  001CBC  0E00               	movlw	0
  8179  001CBE  6E27               	movwf	i2___awdiv@divisor+1,c
  8180  001CC0  0EB4               	movlw	180
  8181  001CC2  6E26               	movwf	i2___awdiv@divisor,c
  8182  001CC4  ECEF  F012         	call	i2___awdiv	;wreg free
  8183  001CC8  90D8               	bcf	status,0,c
  8184  001CCA  3624               	rlcf	?i2___awdiv,f,c
  8185  001CCC  3625               	rlcf	?i2___awdiv+1,f,c
  8186  001CCE  0100               	movlb	0	; () banked
  8187  001CD0  519C               	movf	??_ISR_Alta& (0+255),w,b
  8188  001CD2  2624               	addwf	?i2___awdiv,f,c
  8189  001CD4  0100               	movlb	0	; () banked
  8190  001CD6  519D               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8191  001CD8  2225               	addwfc	?i2___awdiv+1,f,c
  8192  001CDA  C024  F038         	movff	?i2___awdiv,_timer_on
  8193  001CDE  C025  F039         	movff	?i2___awdiv+1,_timer_on+1
  8194  001CE2  0E00               	movlw	0
  8195  001CE4  BE39               	btfsc	_timer_on+1,7,c
  8196  001CE6  0EFF               	movlw	-1
  8197  001CE8  6E3A               	movwf	_timer_on+2,c
  8198  001CEA  6E3B               	movwf	_timer_on+3,c
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;ABS_Code.c: 139: timer_off = 65536 - (40000 - timer_on);
  8202  001CEC  C038  F09C         	movff	_timer_on,??_ISR_Alta
  8203  001CF0  C039  F09D         	movff	_timer_on+1,??_ISR_Alta+1
  8204  001CF4  C03A  F09E         	movff	_timer_on+2,??_ISR_Alta+2
  8205  001CF8  C03B  F09F         	movff	_timer_on+3,??_ISR_Alta+3
  8206  001CFC  0100               	movlb	0	; () banked
  8207  001CFE  1F9C               	comf	??_ISR_Alta& (0+255),f,b
  8208  001D00  1F9D               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8209  001D02  1F9E               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8210  001D04  1F9F               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8211  001D06  2B9C               	incf	??_ISR_Alta& (0+255),f,b
  8212  001D08  0E00               	movlw	0
  8213  001D0A  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8214  001D0C  239E               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8215  001D0E  239F               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8216  001D10  0E40               	movlw	64
  8217  001D12  0100               	movlb	0	; () banked
  8218  001D14  259C               	addwf	??_ISR_Alta& (0+255),w,b
  8219  001D16  0100               	movlb	0	; () banked
  8220  001D18  6FA0               	movwf	(??_ISR_Alta+4)& (0+255),b
  8221  001D1A  0E9C               	movlw	156
  8222  001D1C  0100               	movlb	0	; () banked
  8223  001D1E  219D               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8224  001D20  0100               	movlb	0	; () banked
  8225  001D22  6FA1               	movwf	(??_ISR_Alta+5)& (0+255),b
  8226  001D24  0E00               	movlw	0
  8227  001D26  0100               	movlb	0	; () banked
  8228  001D28  219E               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8229  001D2A  0100               	movlb	0	; () banked
  8230  001D2C  6FA2               	movwf	(??_ISR_Alta+6)& (0+255),b
  8231  001D2E  0E00               	movlw	0
  8232  001D30  0100               	movlb	0	; () banked
  8233  001D32  219F               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8234  001D34  0100               	movlb	0	; () banked
  8235  001D36  6FA3               	movwf	(??_ISR_Alta+7)& (0+255),b
  8236  001D38  0100               	movlb	0	; () banked
  8237  001D3A  1FA0               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8238  001D3C  1FA1               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8239  001D3E  1FA2               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8240  001D40  1FA3               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8241  001D42  2BA0               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8242  001D44  0E00               	movlw	0
  8243  001D46  23A1               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8244  001D48  23A2               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8245  001D4A  23A3               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8246  001D4C  0E00               	movlw	0
  8247  001D4E  0100               	movlb	0	; () banked
  8248  001D50  25A0               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8249  001D52  6E34               	movwf	_timer_off,c
  8250  001D54  0E00               	movlw	0
  8251  001D56  0100               	movlb	0	; () banked
  8252  001D58  21A1               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8253  001D5A  6E35               	movwf	_timer_off+1,c
  8254  001D5C  0E01               	movlw	1
  8255  001D5E  0100               	movlb	0	; () banked
  8256  001D60  21A2               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8257  001D62  6E36               	movwf	_timer_off+2,c
  8258  001D64  0E00               	movlw	0
  8259  001D66  0100               	movlb	0	; () banked
  8260  001D68  21A3               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8261  001D6A  6E37               	movwf	_timer_off+3,c
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;ABS_Code.c: 140: timer_on = 65536 - timer_on;
  8265  001D6C  C038  F09C         	movff	_timer_on,??_ISR_Alta
  8266  001D70  C039  F09D         	movff	_timer_on+1,??_ISR_Alta+1
  8267  001D74  C03A  F09E         	movff	_timer_on+2,??_ISR_Alta+2
  8268  001D78  C03B  F09F         	movff	_timer_on+3,??_ISR_Alta+3
  8269  001D7C  0100               	movlb	0	; () banked
  8270  001D7E  1F9C               	comf	??_ISR_Alta& (0+255),f,b
  8271  001D80  1F9D               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8272  001D82  1F9E               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8273  001D84  1F9F               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8274  001D86  2B9C               	incf	??_ISR_Alta& (0+255),f,b
  8275  001D88  0E00               	movlw	0
  8276  001D8A  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8277  001D8C  239E               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8278  001D8E  239F               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8279  001D90  0E00               	movlw	0
  8280  001D92  0100               	movlb	0	; () banked
  8281  001D94  259C               	addwf	??_ISR_Alta& (0+255),w,b
  8282  001D96  6E38               	movwf	_timer_on,c
  8283  001D98  0E00               	movlw	0
  8284  001D9A  0100               	movlb	0	; () banked
  8285  001D9C  219D               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8286  001D9E  6E39               	movwf	_timer_on+1,c
  8287  001DA0  0E01               	movlw	1
  8288  001DA2  0100               	movlb	0	; () banked
  8289  001DA4  219E               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8290  001DA6  6E3A               	movwf	_timer_on+2,c
  8291  001DA8  0E00               	movlw	0
  8292  001DAA  0100               	movlb	0	; () banked
  8293  001DAC  219F               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8294  001DAE  6E3B               	movwf	_timer_on+3,c
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;ABS_Code.c: 141: WriteTimer0(timer_on);
  8298  001DB0  C038  F01E         	movff	_timer_on,WriteTimer0@timer0
  8299  001DB4  C039  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1
  8300  001DB8  EC28  F014         	call	_WriteTimer0	;wreg free
  8301                           
  8302                           ;ABS_Code.c: 142: } else {
  8303  001DBC  D006               	goto	i2l4006
  8304  001DBE                     i2l4004:
  8305                           
  8306                           ;ABS_Code.c: 143: WriteTimer0(timer_off);
  8307  001DBE  C034  F01E         	movff	_timer_off,WriteTimer0@timer0
  8308  001DC2  C035  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1
  8309  001DC6  EC28  F014         	call	_WriteTimer0	;wreg free
  8310  001DCA                     i2l4006:
  8311                           
  8312                           ;ABS_Code.c: 144: }
  8313                           ;ABS_Code.c: 145: INTCONbits.TMR0IF = 0;
  8314  001DCA  94F2               	bcf	intcon,2,c	;volatile
  8315  001DCC                     i2l4008:
  8316                           
  8317                           ;ABS_Code.c: 146: }
  8318                           ;ABS_Code.c: 149: if (INTCONbits.INT0IF == 1) {
  8319  001DCC  A2F2               	btfss	intcon,1,c	;volatile
  8320  001DCE  D047               	goto	i2l4032
  8321                           
  8322                           ;ABS_Code.c: 150: if (x == 0) {
  8323  001DD0  BA3D               	btfsc	_x/(0+8),_x& (0+7),c
  8324  001DD2  D006               	goto	i2l4016
  8325                           
  8326                           ;ABS_Code.c: 151: TMR1H = 0x00;
  8327  001DD4  0E00               	movlw	0
  8328  001DD6  6ECF               	movwf	4047,c	;volatile
  8329                           
  8330                           ;ABS_Code.c: 152: TMR1L = 0x00;
  8331  001DD8  0E00               	movlw	0
  8332  001DDA  6ECE               	movwf	4046,c	;volatile
  8333                           
  8334                           ;ABS_Code.c: 153: x = 1;
  8335  001DDC  8A3D               	bsf	_x/(0+8),_x& (0+7),c
  8336                           
  8337                           ;ABS_Code.c: 154: } else {
  8338  001DDE  D03E               	goto	i2l4030
  8339  001DE0                     i2l4016:
  8340                           
  8341                           ;ABS_Code.c: 155: gap_time_1 = (TMR1H <<8) + TMR1L;
  8342  001DE0  50CE               	movf	4046,w,c	;volatile
  8343  001DE2  CFCF F09C          	movff	4047,??_ISR_Alta	;volatile
  8344  001DE6  0100               	movlb	0	; () banked
  8345  001DE8  6B9D               	clrf	(??_ISR_Alta+1)& (0+255),b
  8346  001DEA  C09C  F09D         	movff	??_ISR_Alta,??_ISR_Alta+1
  8347  001DEE  0100               	movlb	0	; () banked
  8348  001DF0  6B9C               	clrf	??_ISR_Alta& (0+255),b
  8349  001DF2  0100               	movlb	0	; () banked
  8350  001DF4  279C               	addwf	??_ISR_Alta& (0+255),f,b
  8351  001DF6  0E00               	movlw	0
  8352  001DF8  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8353  001DFA  C09C  F02C         	movff	??_ISR_Alta,_gap_time_1
  8354  001DFE  C09D  F02D         	movff	??_ISR_Alta+1,_gap_time_1+1
  8355  001E02  0E00               	movlw	0
  8356  001E04  BE2D               	btfsc	_gap_time_1+1,7,c
  8357  001E06  0EFF               	movlw	-1
  8358  001E08  6E2E               	movwf	_gap_time_1+2,c
  8359  001E0A  6E2F               	movwf	_gap_time_1+3,c
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;ABS_Code.c: 156: gap_time_1 = gap_time_1 / 500;
  8363  001E0C  C02C  F01E         	movff	_gap_time_1,i2___lldiv@dividend
  8364  001E10  C02D  F01F         	movff	_gap_time_1+1,i2___lldiv@dividend+1
  8365  001E14  C02E  F020         	movff	_gap_time_1+2,i2___lldiv@dividend+2
  8366  001E18  C02F  F021         	movff	_gap_time_1+3,i2___lldiv@dividend+3
  8367  001E1C  0EF4               	movlw	244
  8368  001E1E  6E22               	movwf	i2___lldiv@divisor,c
  8369  001E20  0E01               	movlw	1
  8370  001E22  6E23               	movwf	i2___lldiv@divisor+1,c
  8371  001E24  0E00               	movlw	0
  8372  001E26  6E24               	movwf	i2___lldiv@divisor+2,c
  8373  001E28  0E00               	movlw	0
  8374  001E2A  6E25               	movwf	i2___lldiv@divisor+3,c
  8375  001E2C  EC31  F013         	call	i2___lldiv	;wreg free
  8376  001E30  C01E  F02C         	movff	?i2___lldiv,_gap_time_1
  8377  001E34  C01F  F02D         	movff	?i2___lldiv+1,_gap_time_1+1
  8378  001E38  C020  F02E         	movff	?i2___lldiv+2,_gap_time_1+2
  8379  001E3C  C021  F02F         	movff	?i2___lldiv+3,_gap_time_1+3
  8380                           
  8381                           ;ABS_Code.c: 157: ENC1_measure = 1;
  8382  001E40  803D               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  8383                           
  8384                           ;ABS_Code.c: 158: TMR1H = 0x00;
  8385  001E42  0E00               	movlw	0
  8386  001E44  6ECF               	movwf	4047,c	;volatile
  8387                           
  8388                           ;ABS_Code.c: 159: TMR1H = 0x00;
  8389  001E46  0E00               	movlw	0
  8390  001E48  6ECF               	movwf	4047,c	;volatile
  8391                           
  8392                           ;ABS_Code.c: 160: if (count_flag == 1) {
  8393  001E4A  A63D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8394  001E4C  D007               	goto	i2l4030
  8395                           
  8396                           ;ABS_Code.c: 161: int_counter_1++;
  8397  001E4E  0E01               	movlw	1
  8398  001E50  0100               	movlb	0	; () banked
  8399  001E52  2760               	addwf	_int_counter_1& (0+255),f,b
  8400  001E54  0E00               	movlw	0
  8401  001E56  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b
  8402  001E58  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b
  8403  001E5A  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b
  8404  001E5C                     i2l4030:
  8405                           
  8406                           ;ABS_Code.c: 162: }
  8407                           ;ABS_Code.c: 163: }
  8408                           ;ABS_Code.c: 164: INTCONbits.INT0IF = 0;
  8409  001E5C  92F2               	bcf	intcon,1,c	;volatile
  8410  001E5E                     i2l4032:
  8411                           
  8412                           ;ABS_Code.c: 165: }
  8413                           ;ABS_Code.c: 168: if (INTCON3bits.INT1IF == 1) {
  8414  001E5E  A0F0               	btfss	intcon3,0,c	;volatile
  8415  001E60  D047               	goto	i2l667
  8416                           
  8417                           ;ABS_Code.c: 169: if (y == 0) {
  8418  001E62  BC3D               	btfsc	_y/(0+8),_y& (0+7),c
  8419  001E64  D006               	goto	i2l4040
  8420                           
  8421                           ;ABS_Code.c: 170: TMR3H = 0x00;
  8422  001E66  0E00               	movlw	0
  8423  001E68  6EB3               	movwf	4019,c	;volatile
  8424                           
  8425                           ;ABS_Code.c: 171: TMR3L = 0x00;
  8426  001E6A  0E00               	movlw	0
  8427  001E6C  6EB2               	movwf	4018,c	;volatile
  8428                           
  8429                           ;ABS_Code.c: 172: y = 1;
  8430  001E6E  8C3D               	bsf	_y/(0+8),_y& (0+7),c
  8431                           
  8432                           ;ABS_Code.c: 173: } else {
  8433  001E70  D03E               	goto	i2l4054
  8434  001E72                     i2l4040:
  8435                           
  8436                           ;ABS_Code.c: 174: gap_time_2 = (TMR3H <<8) + TMR3L;
  8437  001E72  50B2               	movf	4018,w,c	;volatile
  8438  001E74  CFB3 F09C          	movff	4019,??_ISR_Alta	;volatile
  8439  001E78  0100               	movlb	0	; () banked
  8440  001E7A  6B9D               	clrf	(??_ISR_Alta+1)& (0+255),b
  8441  001E7C  C09C  F09D         	movff	??_ISR_Alta,??_ISR_Alta+1
  8442  001E80  0100               	movlb	0	; () banked
  8443  001E82  6B9C               	clrf	??_ISR_Alta& (0+255),b
  8444  001E84  0100               	movlb	0	; () banked
  8445  001E86  279C               	addwf	??_ISR_Alta& (0+255),f,b
  8446  001E88  0E00               	movlw	0
  8447  001E8A  239D               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8448  001E8C  C09C  F030         	movff	??_ISR_Alta,_gap_time_2
  8449  001E90  C09D  F031         	movff	??_ISR_Alta+1,_gap_time_2+1
  8450  001E94  0E00               	movlw	0
  8451  001E96  BE31               	btfsc	_gap_time_2+1,7,c
  8452  001E98  0EFF               	movlw	-1
  8453  001E9A  6E32               	movwf	_gap_time_2+2,c
  8454  001E9C  6E33               	movwf	_gap_time_2+3,c
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;ABS_Code.c: 175: gap_time_2 = gap_time_2 / 500;
  8458  001E9E  C030  F01E         	movff	_gap_time_2,i2___lldiv@dividend
  8459  001EA2  C031  F01F         	movff	_gap_time_2+1,i2___lldiv@dividend+1
  8460  001EA6  C032  F020         	movff	_gap_time_2+2,i2___lldiv@dividend+2
  8461  001EAA  C033  F021         	movff	_gap_time_2+3,i2___lldiv@dividend+3
  8462  001EAE  0EF4               	movlw	244
  8463  001EB0  6E22               	movwf	i2___lldiv@divisor,c
  8464  001EB2  0E01               	movlw	1
  8465  001EB4  6E23               	movwf	i2___lldiv@divisor+1,c
  8466  001EB6  0E00               	movlw	0
  8467  001EB8  6E24               	movwf	i2___lldiv@divisor+2,c
  8468  001EBA  0E00               	movlw	0
  8469  001EBC  6E25               	movwf	i2___lldiv@divisor+3,c
  8470  001EBE  EC31  F013         	call	i2___lldiv	;wreg free
  8471  001EC2  C01E  F030         	movff	?i2___lldiv,_gap_time_2
  8472  001EC6  C01F  F031         	movff	?i2___lldiv+1,_gap_time_2+1
  8473  001ECA  C020  F032         	movff	?i2___lldiv+2,_gap_time_2+2
  8474  001ECE  C021  F033         	movff	?i2___lldiv+3,_gap_time_2+3
  8475                           
  8476                           ;ABS_Code.c: 176: ENC2_measure = 1;
  8477  001ED2  823D               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  8478                           
  8479                           ;ABS_Code.c: 177: TMR3H = 0x00;
  8480  001ED4  0E00               	movlw	0
  8481  001ED6  6EB3               	movwf	4019,c	;volatile
  8482                           
  8483                           ;ABS_Code.c: 178: TMR3H = 0x00;
  8484  001ED8  0E00               	movlw	0
  8485  001EDA  6EB3               	movwf	4019,c	;volatile
  8486                           
  8487                           ;ABS_Code.c: 179: if (count_flag == 1) {
  8488  001EDC  A63D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8489  001EDE  D007               	goto	i2l4054
  8490                           
  8491                           ;ABS_Code.c: 180: int_counter_2++;
  8492  001EE0  0E01               	movlw	1
  8493  001EE2  0100               	movlb	0	; () banked
  8494  001EE4  2764               	addwf	_int_counter_2& (0+255),f,b
  8495  001EE6  0E00               	movlw	0
  8496  001EE8  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b
  8497  001EEA  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b
  8498  001EEC  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b
  8499  001EEE                     i2l4054:
  8500                           
  8501                           ;ABS_Code.c: 181: }
  8502                           ;ABS_Code.c: 182: }
  8503                           ;ABS_Code.c: 183: INTCON3bits.INT1IF = 0;
  8504  001EEE  90F0               	bcf	intcon3,0,c	;volatile
  8505  001EF0                     i2l667:
  8506  001EF0  C0B1  FFF5         	movff	??_ISR_Alta+21,tablat
  8507  001EF4  C0B0  FFF8         	movff	??_ISR_Alta+20,tblptru
  8508  001EF8  C0AF  FFF7         	movff	??_ISR_Alta+19,tblptrh
  8509  001EFC  C0AE  FFF6         	movff	??_ISR_Alta+18,tblptrl
  8510  001F00  C0AD  FFF4         	movff	??_ISR_Alta+17,prodh
  8511  001F04  C0AC  FFF3         	movff	??_ISR_Alta+16,prodl
  8512  001F08  C0AB  FFDA         	movff	??_ISR_Alta+15,fsr2h
  8513  001F0C  C0AA  FFD9         	movff	??_ISR_Alta+14,fsr2l
  8514  001F10  C0A9  FFE2         	movff	??_ISR_Alta+13,fsr1h
  8515  001F14  C0A8  FFE1         	movff	??_ISR_Alta+12,fsr1l
  8516  001F18  C0A7  FFEA         	movff	??_ISR_Alta+11,fsr0h
  8517  001F1C  C0A6  FFE9         	movff	??_ISR_Alta+10,fsr0l
  8518  001F20  C0A5  FFFB         	movff	??_ISR_Alta+9,pclatu
  8519  001F24  C0A4  FFFA         	movff	??_ISR_Alta+8,pclath
  8520  001F28  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8521  001F2A  0011               	retfie		f
  8522  001F2C                     __end_of_ISR_Alta:
  8523                           	opt stack 0
  8524                           pclatu	equ	0xFFB
  8525                           pclath	equ	0xFFA
  8526                           tblptru	equ	0xFF8
  8527                           tblptrh	equ	0xFF7
  8528                           tblptrl	equ	0xFF6
  8529                           tablat	equ	0xFF5
  8530                           prodh	equ	0xFF4
  8531                           prodl	equ	0xFF3
  8532                           intcon	equ	0xFF2
  8533                           intcon2	equ	0xFF1
  8534                           intcon3	equ	0xFF0
  8535                           postinc0	equ	0xFEE
  8536                           fsr0h	equ	0xFEA
  8537                           fsr0l	equ	0xFE9
  8538                           wreg	equ	0xFE8
  8539                           postdec1	equ	0xFE5
  8540                           fsr1h	equ	0xFE2
  8541                           fsr1l	equ	0xFE1
  8542                           bsr	equ	0xFE0
  8543                           indf2	equ	0xFDF
  8544                           postinc2	equ	0xFDE
  8545                           postdec2	equ	0xFDD
  8546                           fsr2h	equ	0xFDA
  8547                           fsr2l	equ	0xFD9
  8548                           status	equ	0xFD8
  8549                           
  8550 ;; *************** function i2___wmul *****************
  8551 ;; Defined at:
  8552 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  multiplier      2   29[COMRAM] unsigned int 
  8555 ;;  multiplicand    2   31[COMRAM] unsigned int 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  __wmul          2   33[COMRAM] unsigned int 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  2   29[COMRAM] unsigned int 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, prodl, prodh
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8567 ;;      Params:         4       0       0       0
  8568 ;;      Locals:         2       0       0       0
  8569 ;;      Temps:          0       0       0       0
  8570 ;;      Totals:         6       0       0       0
  8571 ;;Total ram usage:        6 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_ISR_Alta
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text20
  8581  0027DA                     __ptext20:
  8582                           	opt stack 0
  8583  0027DA                     i2___wmul:
  8584                           	opt stack 24
  8585                           
  8586                           ;incstack = 0
  8587  0027DA  501E               	movf	i2___wmul@multiplier,w,c
  8588  0027DC  0220               	mulwf	i2___wmul@multiplicand,c
  8589  0027DE  CFF3 F022          	movff	prodl,i2___wmul@product
  8590  0027E2  CFF4 F023          	movff	prodh,i2___wmul@product+1
  8591  0027E6  501E               	movf	i2___wmul@multiplier,w,c
  8592  0027E8  0221               	mulwf	i2___wmul@multiplicand+1,c
  8593  0027EA  50F3               	movf	prodl,w,c
  8594  0027EC  2623               	addwf	i2___wmul@product+1,f,c
  8595  0027EE  501F               	movf	i2___wmul@multiplier+1,w,c
  8596  0027F0  0220               	mulwf	i2___wmul@multiplicand,c
  8597  0027F2  50F3               	movf	prodl,w,c
  8598  0027F4  2623               	addwf	i2___wmul@product+1,f,c
  8599  0027F6  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  8600  0027FA  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  8601  0027FE  0012               	return	
  8602  002800                     __end_ofi2___wmul:
  8603                           	opt stack 0
  8604                           pclatu	equ	0xFFB
  8605                           pclath	equ	0xFFA
  8606                           tblptru	equ	0xFF8
  8607                           tblptrh	equ	0xFF7
  8608                           tblptrl	equ	0xFF6
  8609                           tablat	equ	0xFF5
  8610                           prodh	equ	0xFF4
  8611                           prodl	equ	0xFF3
  8612                           intcon	equ	0xFF2
  8613                           intcon2	equ	0xFF1
  8614                           intcon3	equ	0xFF0
  8615                           postinc0	equ	0xFEE
  8616                           fsr0h	equ	0xFEA
  8617                           fsr0l	equ	0xFE9
  8618                           wreg	equ	0xFE8
  8619                           postdec1	equ	0xFE5
  8620                           fsr1h	equ	0xFE2
  8621                           fsr1l	equ	0xFE1
  8622                           bsr	equ	0xFE0
  8623                           indf2	equ	0xFDF
  8624                           postinc2	equ	0xFDE
  8625                           postdec2	equ	0xFDD
  8626                           fsr2h	equ	0xFDA
  8627                           fsr2l	equ	0xFD9
  8628                           status	equ	0xFD8
  8629                           
  8630 ;; *************** function i2___lldiv *****************
  8631 ;; Defined at:
  8632 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  dividend        4   29[COMRAM] unsigned long 
  8635 ;;  divisor         4   33[COMRAM] unsigned long 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;  __lldiv         4   37[COMRAM] unsigned long 
  8638 ;;  __lldiv         1   41[COMRAM] unsigned char 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  4   29[COMRAM] unsigned long 
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8648 ;;      Params:         8       0       0       0
  8649 ;;      Locals:         5       0       0       0
  8650 ;;      Temps:          0       0       0       0
  8651 ;;      Totals:        13       0       0       0
  8652 ;;Total ram usage:       13 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_ISR_Alta
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text21
  8662  002662                     __ptext21:
  8663                           	opt stack 0
  8664  002662                     i2___lldiv:
  8665                           	opt stack 24
  8666                           
  8667                           ;incstack = 0
  8668  002662  0E00               	movlw	0
  8669  002664  6E26               	movwf	i2___lldiv@quotient,c
  8670  002666  0E00               	movlw	0
  8671  002668  6E27               	movwf	i2___lldiv@quotient+1,c
  8672  00266A  0E00               	movlw	0
  8673  00266C  6E28               	movwf	i2___lldiv@quotient+2,c
  8674  00266E  0E00               	movlw	0
  8675  002670  6E29               	movwf	i2___lldiv@quotient+3,c
  8676  002672  5022               	movf	i2___lldiv@divisor,w,c
  8677  002674  1023               	iorwf	i2___lldiv@divisor+1,w,c
  8678  002676  1024               	iorwf	i2___lldiv@divisor+2,w,c
  8679  002678  1025               	iorwf	i2___lldiv@divisor+3,w,c
  8680  00267A  B4D8               	btfsc	status,2,c
  8681  00267C  D02A               	goto	i2l1076
  8682  00267E  0E01               	movlw	1
  8683  002680  6E2A               	movwf	i2___lldiv@counter,c
  8684  002682  D006               	goto	i2l3812
  8685  002684                     i2l3810:
  8686  002684  90D8               	bcf	status,0,c
  8687  002686  3622               	rlcf	i2___lldiv@divisor,f,c
  8688  002688  3623               	rlcf	i2___lldiv@divisor+1,f,c
  8689  00268A  3624               	rlcf	i2___lldiv@divisor+2,f,c
  8690  00268C  3625               	rlcf	i2___lldiv@divisor+3,f,c
  8691  00268E  2A2A               	incf	i2___lldiv@counter,f,c
  8692  002690                     i2l3812:
  8693  002690  AE25               	btfss	i2___lldiv@divisor+3,7,c
  8694  002692  D7F8               	goto	i2l3810
  8695  002694                     i2l3814:
  8696  002694  90D8               	bcf	status,0,c
  8697  002696  3626               	rlcf	i2___lldiv@quotient,f,c
  8698  002698  3627               	rlcf	i2___lldiv@quotient+1,f,c
  8699  00269A  3628               	rlcf	i2___lldiv@quotient+2,f,c
  8700  00269C  3629               	rlcf	i2___lldiv@quotient+3,f,c
  8701  00269E  5022               	movf	i2___lldiv@divisor,w,c
  8702  0026A0  5C1E               	subwf	i2___lldiv@dividend,w,c
  8703  0026A2  5023               	movf	i2___lldiv@divisor+1,w,c
  8704  0026A4  581F               	subwfb	i2___lldiv@dividend+1,w,c
  8705  0026A6  5024               	movf	i2___lldiv@divisor+2,w,c
  8706  0026A8  5820               	subwfb	i2___lldiv@dividend+2,w,c
  8707  0026AA  5025               	movf	i2___lldiv@divisor+3,w,c
  8708  0026AC  5821               	subwfb	i2___lldiv@dividend+3,w,c
  8709  0026AE  A0D8               	btfss	status,0,c
  8710  0026B0  D009               	goto	i2l3822
  8711  0026B2  5022               	movf	i2___lldiv@divisor,w,c
  8712  0026B4  5E1E               	subwf	i2___lldiv@dividend,f,c
  8713  0026B6  5023               	movf	i2___lldiv@divisor+1,w,c
  8714  0026B8  5A1F               	subwfb	i2___lldiv@dividend+1,f,c
  8715  0026BA  5024               	movf	i2___lldiv@divisor+2,w,c
  8716  0026BC  5A20               	subwfb	i2___lldiv@dividend+2,f,c
  8717  0026BE  5025               	movf	i2___lldiv@divisor+3,w,c
  8718  0026C0  5A21               	subwfb	i2___lldiv@dividend+3,f,c
  8719  0026C2  8026               	bsf	i2___lldiv@quotient,0,c
  8720  0026C4                     i2l3822:
  8721  0026C4  90D8               	bcf	status,0,c
  8722  0026C6  3225               	rrcf	i2___lldiv@divisor+3,f,c
  8723  0026C8  3224               	rrcf	i2___lldiv@divisor+2,f,c
  8724  0026CA  3223               	rrcf	i2___lldiv@divisor+1,f,c
  8725  0026CC  3222               	rrcf	i2___lldiv@divisor,f,c
  8726  0026CE  2E2A               	decfsz	i2___lldiv@counter,f,c
  8727  0026D0  D7E1               	goto	i2l3814
  8728  0026D2                     i2l1076:
  8729  0026D2  C026  F01E         	movff	i2___lldiv@quotient,?i2___lldiv
  8730  0026D6  C027  F01F         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  8731  0026DA  C028  F020         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  8732  0026DE  C029  F021         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  8733  0026E2  0012               	return		;funcret
  8734  0026E4                     __end_ofi2___lldiv:
  8735                           	opt stack 0
  8736                           pclatu	equ	0xFFB
  8737                           pclath	equ	0xFFA
  8738                           tblptru	equ	0xFF8
  8739                           tblptrh	equ	0xFF7
  8740                           tblptrl	equ	0xFF6
  8741                           tablat	equ	0xFF5
  8742                           prodh	equ	0xFF4
  8743                           prodl	equ	0xFF3
  8744                           intcon	equ	0xFF2
  8745                           intcon2	equ	0xFF1
  8746                           intcon3	equ	0xFF0
  8747                           postinc0	equ	0xFEE
  8748                           fsr0h	equ	0xFEA
  8749                           fsr0l	equ	0xFE9
  8750                           wreg	equ	0xFE8
  8751                           postdec1	equ	0xFE5
  8752                           fsr1h	equ	0xFE2
  8753                           fsr1l	equ	0xFE1
  8754                           bsr	equ	0xFE0
  8755                           indf2	equ	0xFDF
  8756                           postinc2	equ	0xFDE
  8757                           postdec2	equ	0xFDD
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function i2___awdiv *****************
  8763 ;; Defined at:
  8764 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  dividend        2   35[COMRAM] int 
  8767 ;;  divisor         2   37[COMRAM] int 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  __awdiv         2   41[COMRAM] int 
  8770 ;;  __awdiv         1   40[COMRAM] unsigned char 
  8771 ;;  __awdiv         1   39[COMRAM] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  2   35[COMRAM] int 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8781 ;;      Params:         4       0       0       0
  8782 ;;      Locals:         4       0       0       0
  8783 ;;      Temps:          0       0       0       0
  8784 ;;      Totals:         8       0       0       0
  8785 ;;Total ram usage:        8 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_ISR_Alta
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text22
  8795  0025DE                     __ptext22:
  8796                           	opt stack 0
  8797  0025DE                     i2___awdiv:
  8798                           	opt stack 24
  8799                           
  8800                           ;incstack = 0
  8801  0025DE  0E00               	movlw	0
  8802  0025E0  6E29               	movwf	i2___awdiv@sign,c
  8803  0025E2  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8804  0025E4  D006               	goto	i2l3768
  8805  0025E6  6C26               	negf	i2___awdiv@divisor,c
  8806  0025E8  1E27               	comf	i2___awdiv@divisor+1,f,c
  8807  0025EA  B0D8               	btfsc	status,0,c
  8808  0025EC  2A27               	incf	i2___awdiv@divisor+1,f,c
  8809  0025EE  0E01               	movlw	1
  8810  0025F0  6E29               	movwf	i2___awdiv@sign,c
  8811  0025F2                     i2l3768:
  8812  0025F2  AE25               	btfss	i2___awdiv@dividend+1,7,c
  8813  0025F4  D006               	goto	i2l3774
  8814  0025F6  6C24               	negf	i2___awdiv@dividend,c
  8815  0025F8  1E25               	comf	i2___awdiv@dividend+1,f,c
  8816  0025FA  B0D8               	btfsc	status,0,c
  8817  0025FC  2A25               	incf	i2___awdiv@dividend+1,f,c
  8818  0025FE  0E01               	movlw	1
  8819  002600  1A29               	xorwf	i2___awdiv@sign,f,c
  8820  002602                     i2l3774:
  8821  002602  0E00               	movlw	0
  8822  002604  6E2B               	movwf	i2___awdiv@quotient+1,c
  8823  002606  0E00               	movlw	0
  8824  002608  6E2A               	movwf	i2___awdiv@quotient,c
  8825  00260A  5026               	movf	i2___awdiv@divisor,w,c
  8826  00260C  1027               	iorwf	i2___awdiv@divisor+1,w,c
  8827  00260E  B4D8               	btfsc	status,2,c
  8828  002610  D01C               	goto	i2l3796
  8829  002612  0E01               	movlw	1
  8830  002614  6E28               	movwf	i2___awdiv@counter,c
  8831  002616  D004               	goto	i2l3782
  8832  002618                     i2l3780:
  8833  002618  90D8               	bcf	status,0,c
  8834  00261A  3626               	rlcf	i2___awdiv@divisor,f,c
  8835  00261C  3627               	rlcf	i2___awdiv@divisor+1,f,c
  8836  00261E  2A28               	incf	i2___awdiv@counter,f,c
  8837  002620                     i2l3782:
  8838  002620  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8839  002622  D7FA               	goto	i2l3780
  8840  002624                     i2l3784:
  8841  002624  90D8               	bcf	status,0,c
  8842  002626  362A               	rlcf	i2___awdiv@quotient,f,c
  8843  002628  362B               	rlcf	i2___awdiv@quotient+1,f,c
  8844  00262A  5026               	movf	i2___awdiv@divisor,w,c
  8845  00262C  5C24               	subwf	i2___awdiv@dividend,w,c
  8846  00262E  5027               	movf	i2___awdiv@divisor+1,w,c
  8847  002630  5825               	subwfb	i2___awdiv@dividend+1,w,c
  8848  002632  A0D8               	btfss	status,0,c
  8849  002634  D005               	goto	i2l3792
  8850  002636  5026               	movf	i2___awdiv@divisor,w,c
  8851  002638  5E24               	subwf	i2___awdiv@dividend,f,c
  8852  00263A  5027               	movf	i2___awdiv@divisor+1,w,c
  8853  00263C  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  8854  00263E  802A               	bsf	i2___awdiv@quotient,0,c
  8855  002640                     i2l3792:
  8856  002640  90D8               	bcf	status,0,c
  8857  002642  3227               	rrcf	i2___awdiv@divisor+1,f,c
  8858  002644  3226               	rrcf	i2___awdiv@divisor,f,c
  8859  002646  2E28               	decfsz	i2___awdiv@counter,f,c
  8860  002648  D7ED               	goto	i2l3784
  8861  00264A                     i2l3796:
  8862  00264A  5029               	movf	i2___awdiv@sign,w,c
  8863  00264C  B4D8               	btfsc	status,2,c
  8864  00264E  D004               	goto	i2l3800
  8865  002650  6C2A               	negf	i2___awdiv@quotient,c
  8866  002652  1E2B               	comf	i2___awdiv@quotient+1,f,c
  8867  002654  B0D8               	btfsc	status,0,c
  8868  002656  2A2B               	incf	i2___awdiv@quotient+1,f,c
  8869  002658                     i2l3800:
  8870  002658  C02A  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  8871  00265C  C02B  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8872  002660  0012               	return	
  8873  002662                     __end_ofi2___awdiv:
  8874                           	opt stack 0
  8875                           pclatu	equ	0xFFB
  8876                           pclath	equ	0xFFA
  8877                           tblptru	equ	0xFF8
  8878                           tblptrh	equ	0xFF7
  8879                           tblptrl	equ	0xFF6
  8880                           tablat	equ	0xFF5
  8881                           prodh	equ	0xFF4
  8882                           prodl	equ	0xFF3
  8883                           intcon	equ	0xFF2
  8884                           intcon2	equ	0xFF1
  8885                           intcon3	equ	0xFF0
  8886                           postinc0	equ	0xFEE
  8887                           fsr0h	equ	0xFEA
  8888                           fsr0l	equ	0xFE9
  8889                           wreg	equ	0xFE8
  8890                           postdec1	equ	0xFE5
  8891                           fsr1h	equ	0xFE2
  8892                           fsr1l	equ	0xFE1
  8893                           bsr	equ	0xFE0
  8894                           indf2	equ	0xFDF
  8895                           postinc2	equ	0xFDE
  8896                           postdec2	equ	0xFDD
  8897                           fsr2h	equ	0xFDA
  8898                           fsr2l	equ	0xFD9
  8899                           status	equ	0xFD8
  8900                           
  8901 ;; *************** function _WriteTimer0 *****************
  8902 ;; Defined at:
  8903 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  timer0          2   29[COMRAM] unsigned int 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  timer           2   31[COMRAM] struct Timers
  8908 ;; Return value:  Size  Location     Type
  8909 ;;		None               void
  8910 ;; Registers used:
  8911 ;;		None
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8917 ;;      Params:         2       0       0       0
  8918 ;;      Locals:         2       0       0       0
  8919 ;;      Temps:          0       0       0       0
  8920 ;;      Totals:         4       0       0       0
  8921 ;;Total ram usage:        4 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_ISR_Alta
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text23
  8931  002850                     __ptext23:
  8932                           	opt stack 0
  8933  002850                     _WriteTimer0:
  8934                           	opt stack 24
  8935                           
  8936                           ;incstack = 0
  8937  002850  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8938  002854  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8939  002858  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8940  00285C  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8941  002860  0012               	return		;funcret
  8942  002862                     __end_of_WriteTimer0:
  8943                           	opt stack 0
  8944  0000                     pclatu	equ	0xFFB
  8945                           pclath	equ	0xFFA
  8946                           tblptru	equ	0xFF8
  8947                           tblptrh	equ	0xFF7
  8948                           tblptrl	equ	0xFF6
  8949                           tablat	equ	0xFF5
  8950                           prodh	equ	0xFF4
  8951                           prodl	equ	0xFF3
  8952                           intcon	equ	0xFF2
  8953                           intcon2	equ	0xFF1
  8954                           intcon3	equ	0xFF0
  8955                           postinc0	equ	0xFEE
  8956                           fsr0h	equ	0xFEA
  8957                           fsr0l	equ	0xFE9
  8958                           wreg	equ	0xFE8
  8959                           postdec1	equ	0xFE5
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           bsr	equ	0xFE0
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           pclatu	equ	0xFFB
  8970                           pclath	equ	0xFFA
  8971                           tblptru	equ	0xFF8
  8972                           tblptrh	equ	0xFF7
  8973                           tblptrl	equ	0xFF6
  8974                           tablat	equ	0xFF5
  8975                           prodh	equ	0xFF4
  8976                           prodl	equ	0xFF3
  8977                           intcon	equ	0xFF2
  8978                           intcon2	equ	0xFF1
  8979                           intcon3	equ	0xFF0
  8980                           postinc0	equ	0xFEE
  8981                           fsr0h	equ	0xFEA
  8982                           fsr0l	equ	0xFE9
  8983                           wreg	equ	0xFE8
  8984                           postdec1	equ	0xFE5
  8985                           fsr1h	equ	0xFE2
  8986                           fsr1l	equ	0xFE1
  8987                           bsr	equ	0xFE0
  8988                           indf2	equ	0xFDF
  8989                           postinc2	equ	0xFDE
  8990                           postdec2	equ	0xFDD
  8991                           fsr2h	equ	0xFDA
  8992                           fsr2l	equ	0xFD9
  8993                           status	equ	0xFD8
  8994                           
  8995                           	psect	rparam
  8996  0000                     pclatu	equ	0xFFB
  8997                           pclath	equ	0xFFA
  8998                           tblptru	equ	0xFF8
  8999                           tblptrh	equ	0xFF7
  9000                           tblptrl	equ	0xFF6
  9001                           tablat	equ	0xFF5
  9002                           prodh	equ	0xFF4
  9003                           prodl	equ	0xFF3
  9004                           intcon	equ	0xFF2
  9005                           intcon2	equ	0xFF1
  9006                           intcon3	equ	0xFF0
  9007                           postinc0	equ	0xFEE
  9008                           fsr0h	equ	0xFEA
  9009                           fsr0l	equ	0xFE9
  9010                           wreg	equ	0xFE8
  9011                           postdec1	equ	0xFE5
  9012                           fsr1h	equ	0xFE2
  9013                           fsr1l	equ	0xFE1
  9014                           bsr	equ	0xFE0
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           fsr2h	equ	0xFDA
  9019                           fsr2l	equ	0xFD9
  9020                           status	equ	0xFD8
  9021                           
  9022                           	psect	temp
  9023  00003E                     btemp:
  9024                           	opt stack 0
  9025  00003E                     	ds	1
  9026  0000                     int$flags	set	btemp
  9027                           pclatu	equ	0xFFB
  9028                           pclath	equ	0xFFA
  9029                           tblptru	equ	0xFF8
  9030                           tblptrh	equ	0xFF7
  9031                           tblptrl	equ	0xFF6
  9032                           tablat	equ	0xFF5
  9033                           prodh	equ	0xFF4
  9034                           prodl	equ	0xFF3
  9035                           intcon	equ	0xFF2
  9036                           intcon2	equ	0xFF1
  9037                           intcon3	equ	0xFF0
  9038                           postinc0	equ	0xFEE
  9039                           fsr0h	equ	0xFEA
  9040                           fsr0l	equ	0xFE9
  9041                           wreg	equ	0xFE8
  9042                           postdec1	equ	0xFE5
  9043                           fsr1h	equ	0xFE2
  9044                           fsr1l	equ	0xFE1
  9045                           bsr	equ	0xFE0
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           fsr2h	equ	0xFDA
  9050                           fsr2l	equ	0xFD9
  9051                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      61
    BANK0           160     48     117
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12347
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___lldiv
               _board_initialization
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 0     0      0    3552
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             22 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6705
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     771
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     621
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             36 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     570
                                             22 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1023
                                              0 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                          i2___lldiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lldiv                                           13     5      8     266
                                             29 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     352
                                             35 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___lldiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___lldiv
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     30      75       4       73.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2B      3D       1       64.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B2       9        0.0%
DATA                 0      0      B2      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jan 27 19:00:14 2016

           ??_CANisTXwarningON 00B2                              _x 01ED                              _y 01EE  
         __end_of_CANSetFilter 0C0A                   ___awdiv@sign 00B7                             bsr 000FE0  
          ___wmul@multiplicand 00B4                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                    __CFG_LVP$ON 000000  
                          l400 106E                            l403 1128                            l500 084E  
                          l412 12E2                            l404 112C                            l501 085A  
                          l413 12E6                            l405 1224                            l510 0966  
                          l502 085E                            l414 12F2                            l406 11B4  
                          l511 096A                            l503 086A                            l407 11BE  
                          l520 0A76                            l512 0976                            l408 11C8  
                          l521 0A82                            l513 097A                            l409 11D2  
                          l530 0B8E                            l522 0A86                            l514 0986  
                          l506 0946                            l450 1ADC                            l442 1A9C  
                          l531 0B92                            l523 0A92                            l507 094A  
                          l443 1AA0                            l532 0B9E                            l524 0A96  
                          l508 0956                            l460 1BE8                            l444 1AAC  
                          l380 0CCA                            l700 2264                            l533 0BA2  
                          l525 0AA2                            l517 0A62                            l509 095A  
                          l461 1BF4                            l453 1BB4                            l445 1AB0  
                          l373 0E8E                            l534 0BAE                            l518 0A66  
                          l454 1BB8                            l446 1ABC                            l390 0EA8  
                          l374 0C20                            l535 0BB2                            l519 0A72  
                          l455 1BC4                            l447 1AC0                            l391 0FA0  
                          l383 0DDA                            l375 0C24                            l536 0BBE  
                          l528 0B7E                            l480 0628                            l456 1BC8  
                          l448 1ACC                            l368 1FE8                            l392 0F30  
                          l384 0DDE                            l376 0D1C                            l713 272E  
                          l529 0B82                            l481 0634                            l473 05F4  
                          l457 1BD4                            l449 1AD0                            l369 1FF2  
                          l393 0F3A                            l385 0DEA                            l377 0CAC  
                          l705 2260                            l490 073E                            l474 05F8  
                          l458 1BD8                            l394 0F44                            l378 0CB6  
                          l491 0742                            l475 0604                            l459 1BE4  
                          l395 0F4E                            l379 0CC0                            l707 225C  
                          l492 074E                            l484 070E                            l476 0608  
                          l388 1112                            l485 0712                            l477 0614  
                          l389 0EA4                            l486 071E                            l478 0618  
                          l566 281E                            l398 105E                            l495 082A  
                          l487 0722                            l479 0624                            l399 1062  
                          l496 082E                            l488 072E                            l680 228E  
                          l497 083A                            l489 0732                            l498 083E  
                          l682 228A                            l499 084A                            l579 2796  
                          l683 2290                            l686 2298                            l687 22E2  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 007C                            wreg 000FE8                   __CFG_WDT$OFF 000000  
                         l1076 2512                           l3020 09D0                           l3014 098A  
                         l3140 2042                           l3132 1FE0                           l3204 0DEE  
                         l3054 0AEC                           l3134 1FF6                           l3048 0AA6  
                         l3402 23C6                           l3082 0BC2                           l3138 1FFE  
                         l3330 11DC                           l3414 23FA                           l3430 244A  
                         l3350 12D6                           l3254 0F58                           l3416 2406  
                         l3408 23DC                           l2712 1A10                           l3280 1072  
                         l3434 245E                           l3426 243C                           l3418 240C  
                         l3274 1052                           l3178 0CD4                           l2812 027A  
                         l3356 12F6                           l2830 0334                           l3390 2788  
                         l3198 0DCE                           l3702 213E                           l2912 0638  
                         l2744 1B26                           l3712 21BC                           l2770 1BF8  
                         l2738 1AE0                           l3706 2180                           l3740 24A6  
                         l3750 2500                           l3742 24AC                           l2678 282C  
                         l2918 067E                           l2952 0798                           l2848 03EE  
                         l2696 195A                           l3728 2250                           l3738 2496  
                         l2946 0752                           l2866 04A8                           l2794 01C2  
                         l3922 2272                           l2980 086E                           l2884 0562  
                         l3932 229E                           l3950 22E6                           l3942 22C2  
                         l2986 08B4                           l3962 2368                           l3946 22D2  
                         l3938 22B4                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           u4000 2876                           u2320 198C  
                         _LATD 000F8C                           _LATE 000F8D                           u3210 0BE2  
                         u3130 0AC6                           u3050 09AA                           u2410 1B00  
                         u2325 1980                           u3215 0BD6                           u3135 0ABA  
                         u3055 099E                           u2415 1AF4                           u2335 19EC  
                         u2600 02B0                           u2520 013E                           u2280 18D6  
                         u3340 0CF4                           u2605 02A4                           u2525 0132  
                         u2285 18CA                           u3350 0D40                           u2615 0310  
                         u2535 019E                           u2295 1936                           u2720 04DE  
                         u2640 036A                           u2560 01F6                           u3600 11FC  
                         u3345 0CE8                           u2810 0658                           u2490 1C18  
                         u3610 1248                           u3355 0D34                           u2725 04D2  
                         u2645 035E                           u2565 01EA                           u3605 11F0  
                         u3365 0DA0                           u3470 0F78                           u2815 064C  
                         u2735 053E                           u2655 03CA                           u2575 0256  
                         u2495 1C0C                           u3615 123C                           u2680 0424  
                         u3480 0FC4                           u3625 12A8                           u3475 0F6C  
                         u2685 0418                           u3485 0FB8                           u2695 0484  
                         u3495 1024                           u2970 088E                           u2890 0772  
                         u2975 0882                           u2895 0766                           u4587 278A  
                         u3990 286A            __size_of_CANSetMask 039E                           _main 2268  
                         _read 0078                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _step 0079  
                         btemp 003E               __end_of_ADC_Read 276A                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0100  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
             _CANOperationMode 2824                   _status_array 00CD                _brake_value_inc 0076  
         _remote_frame_handler 20F2     __size_of_CANreceiveMessage 050C                          ?_main 0001  
              __end_of___awdiv 2468                __end_of___lldiv 2524                          _T0CON 000FD5  
              ___awdiv@divisor 00B4                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 00E8                          i1l420 162E                          i1l571 284C  
                        i1l673 00B4                          i1l676 00B8                          i2l667 1EF0  
              ___awdiv@counter 00B6                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2              _CANisRxReady$3086 0001                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1F2C  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 00C4  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 01E8           __end_of_CANisRxReady 2850  
                        tablat 000FF5           __end_of_CANisTxReady 2824               __end_ofi2___wmul 2800  
                        status 000FD8             __size_ofi2___awdiv 0084                 __CFG_PBADEN$ON 000000  
           __size_ofi2___lldiv 0082                __initialization 26E4              i2___lldiv@divisor 0022  
                 __end_of_main 23AA              i2___lldiv@counter 002A  __size_of_board_initialization 00BA  
             _brake_signal_CAN 0075          ?_remote_frame_handler 0001                         ??_main 00CC  
                __activetblptr 000002              _CANisTxReady$3084 00B2                         _ADCON1 000FC1  
                       _CANCON 000F6F                         _ADRESH 000FC4               ___awdiv@dividend 00B2  
              __CFG_BBSIZ$1024 000000                         i1l3502 15D8                         i1l3506 15F6  
                       i1l3508 1628                         i1l3560 1834                         i1l3552 17FC  
                       i1l3544 178E                         i1l3570 189E                         i1l3490 157E  
                       i1l3482 150E                         i2l1076 26D2                         i1l3564 1850  
                       i1l3556 1818                         i1l3494 159C                         i1l3568 186C  
                       i1l3498 15BA                         i1l3914 0096                         i1l3906 0066  
                       i2l4004 1DBE                         i2l4030 1E5C                         i2l4006 1DCA  
                       i2l4040 1E72                         i2l4016 1DE0                         i2l4032 1E5E  
                       i2l4008 1DCC                         i2l4054 1EEE                         i2l3800 2658  
                       i2l3810 2684                         i2l3812 2690                         i2l3822 26C4  
                       i2l3814 2694                         i2l3780 2618                         i2l3782 2620  
                       i2l3774 2602                         i2l3792 2640                         i2l3784 2624  
                       i2l3768 25F2                         i2l3796 264A                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 00B6             CANsendMessage@tamp 00BE              __end_of_ISR_Bassa 0100  
             __end_of_delay_ms 27A4          __size_of_CANSetFilter 0B06                 __CFG_XINST$OFF 000000  
                       ___wmul 27A4                      ??___awdiv 00B6                 __CFG_STVREN$ON 000000  
                    ??___lldiv 00BA                   ??_CANSetMask 00B7                         clear_0 26EA  
                       clear_1 26F8               ___awdiv@quotient 00B8                 i2___awdiv@sign 0029  
              __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 2662              __end_ofi2___lldiv 26E4  
                    ?_ADC_Read 0001                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 0077                   _CANSetFilter 0104  
                   __accesstop 0060        __end_of__initialization 271E             __end_of_CANSetMask 1C40  
                ___rparam_used 000001      __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001  
                    ?_ISR_Alta 0001             i2___lldiv@dividend 001E                   __pidataBANK0 287A  
       ??_remote_frame_handler 00C2                   _ENC1_measure 01E8          CANSetFilter@numBuffer 00BB  
                    ?i2___wmul 001E      __size_of_CANisTXwarningON 000C                   _ENC2_measure 01E9  
                   ??_ADC_Read 00BA          __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024  
     __end_of_CANOperationMode 283A             i2___lldiv@quotient 0026                     __pbssBANK0 0060  
      __size_of_CANsendMessage 078C                     ??_ISR_Alta 009C                        ?___wmul 00B2  
                   _gap_time_1 002C                     _gap_time_2 0030               WriteTimer0@timer 0020  
                ??_WriteTimer0 0020                   _CANisRxReady 283A                        _CANSTAT 000F6E  
                 _CANisTxReady 2800                        _BRGCON1 000F70                        _BRGCON2 000F71  
                      _BRGCON3 000F72                     ??i2___wmul 0022                  _int_counter_1 0060  
                _int_counter_2 0064         __size_of_CANInitialize 01C6                      ?_delay_ms 00B8  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25                     _distance_1 0070                     _distance_2 0072  
          CANsendMessage@flags 00B9                     _count_flag 01EB                        __Hparam 0000  
                      __Lparam 0000               delay_ms@value_ms 00B8                        ___awdiv 23AA  
                      ___lldiv 2468                __size_of___wmul 0036           CANInitialize@propSeg 00C9  
                      __pcinit 26E4                        __ramtop 0300                        __ptext0 2268  
                      __ptext1 20F2                        __ptext2 0C0A                        __ptext3 2800  
                      __ptext4 2524                        __ptext5 276A                        __ptext6 27A4  
                      __ptext7 1F2C                        __ptext8 18A2                        __ptext9 0104  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T3CONbits 000FB1  
          __end_of_WriteTimer0 2862                     ??_delay_ms 00BA         CANreceiveMessage@error 000B  
 __end_of_board_initialization 25DE                 __pintcode_body 1C40           end_of_initialization 271E  
                _Analogic_Mode 0074                  __Lmediumconst 0000                        int_func 1C40  
          i2___wmul@multiplier 001E               _CANisRXwarningON 286E                  _CANInitialize 1F2C  
              ___lldiv@divisor 00B6                ___lldiv@counter 00BE                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTBbits 000F81                 CANSetMask@mask 00B2  
                    _PORTCbits 000F82              _correction_factor 006E                 CANSetMask@tamp 00BC  
               CANSetMask@type 00B6               _CANisTXwarningON 2862              __size_of_ADC_Read 003E  
                    i2___awdiv 25DE                      i2___lldiv 2662        _clock_counter_reference 006C  
               _CANsendMessage 0C0A               CANInitialize@BRP 00C3               CANInitialize@SJW 00C2  
               ?_CANInitialize 00C0             i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001  
            __size_of_ISR_Alta 1F24                 __end_of___wmul 27DA                    _WriteTimer0 2850  
             i2___wmul@product 0022            start_initialization 26E4             i2___awdiv@quotient 002A  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 00BB                     ?i2___awdiv 0024  
                   ?i2___lldiv 001E         __end_of_CANsendMessage 1396              ?_CANOperationMode 0001  
           ??_CANOperationMode 00B2     CANInitialize@FilterConfig1 00CA     CANInitialize@FilterConfig2 00CB  
         _board_initialization 2524                       ??___wmul 00B6                    __pdataBANK0 00CC  
             __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 0176             _brake_value_degree 003C  
       CANInitialize@phaseSeg1 00C0         CANInitialize@phaseSeg2 00C1                    __pbssCOMRAM 002C  
                __pcstackBANK0 009C                    _BRGCON2bits 000F71                    _BRGCON3bits 000F72  
            __size_of_delay_ms 003A                ?_CANsendMessage 00B2                ??_CANInitialize 00C5  
           CANSetFilter@filter 00B2          ?_board_initialization 0001                    ??_ISR_Bassa 000D  
                    __pintcode 0008                       ?___awdiv 00B2                       ?___lldiv 00B2  
                  __pintcodelo 0018              WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 287A  
                  _brake_value 009B                    _COMSTATbits 000F74                       _ADC_Read 272C  
                  ??i2___awdiv 0028                    ??i2___lldiv 0026          CANreceiveMessage@tamp 000C  
               ___wmul@product 00B6   _delay_quartz_frequency_value 00CC                       _IPR3bits 000FA5  
                     _PIE3bits 000FA3       __end_of_CANisTXwarningON 286E                       i1u381_25 1492  
                     i1u390_20 1700                       i1u390_26 1702                       i1u392_25 1714  
                     i1u378_20 144E                       i1u378_26 1450                       i1u379_20 147C  
                     i1u387_25 1602                       i1u379_26 147E                       i1u389_20 16D6  
                     i1u389_26 16D8                       i1u398_25 1878                       i2u450_40 1C7E  
                     i2u450_46 1C80                       _PIR2bits 000FA1                       _PIR3bits 000FA4  
                     _RXB0EIDH 000F63                       _RXB0EIDL 000F64                       _RXB1EIDH 000F53  
                     _RXB1EIDL 000F54                       _ISR_Alta 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0EIDH 000F02                       _RXB1SIDH 000F51                       _RXF0EIDL 000F03  
                     _RXB1SIDL 000F52                       _RXF1EIDH 000F06                       _RXF1EIDL 000F07  
                     _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E  
                     _RXF3EIDL 000F0F                       _RXF4EIDH 000F12                       _RXF4EIDL 000F13  
                     _RXF5EIDH 000F16                       _RXF5EIDL 000F17                       _RXF0SIDH 000F00  
                     _RXF0SIDL 000F01                       _TXB0EIDH 000F43                       _RXF1SIDH 000F04  
                     _TXB0EIDL 000F44                       _RXF1SIDL 000F05                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 0034                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 00B2                       i2___wmul 27DA              i2___awdiv@divisor 0026  
            i2___awdiv@counter 0028                  ?_CANSetFilter 00B2                    _INTCON2bits 000FF1  
                  _INTCON3bits 000FF0                      copy_data0 2712                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00CC  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52                     _CANSetMask 18A2  
             __size_of___awdiv 00BE          i2___wmul@multiplicand 0020               __size_of___lldiv 00BC  
              _remote_frame_id 0068                       _Tx_retry 01EA                   ?_WriteTimer0 001E  
                 _RXF0SIDLbits 000F01                       _delay_ms 276A                   _RXF1SIDLbits 000F05  
               ??_CANSetFilter 00B7                       __ptext10 2824                       __ptext11 2468  
                     __ptext20 27DA                       __ptext12 2862                       __ptext21 2662  
                     __ptext13 286E                       __ptext22 25DE                       __ptext14 272C  
                     __ptext23 2850                       __ptext15 23AA                       __ptext17 1396  
                     __ptext18 283A                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00B8  
                 _remote_frame 01EC                  __size_of_main 0142           CANreceiveMessage@msg 0001  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 0038  
                 _TXB2SIDLbits 000F22                       int$flags 003E      __size_of_CANOperationMode 0016  
                ?_CANisRxReady 0001                  ?_CANisTxReady 0001                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 1396                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 00BA                  _wheel_speed_1 007A  
                _wheel_speed_2 007B             ?_CANreceiveMessage 0001       CANsendMessage@identifier 00B2  
 __end_of_remote_frame_handler 2268                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 00BC               CANSetFilter@type 00B6            ??_CANreceiveMessage 0003  
             ___lldiv@dividend 00B2                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00B2                 ??_CANisRxReady 0001  
                  ?_CANSetMask 00B2                 ??_CANisTxReady 00B2                 _distance_array 008B  
    __end_of_CANreceiveMessage 18A2               ___lldiv@quotient 00BA              ?_CANisRXwarningON 0001  
                  _speed_array 0093             ??_CANisRXwarningON 00B2          __end_of_CANInitialize 20F2  
            ?_CANisTXwarningON 0001  
