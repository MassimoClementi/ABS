

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Jun 05 21:09:50 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  002B5A                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _delay_quartz_frequency_value
    46  002B5A  10                 	db	16
    47                           
    48                           ;initializer for _remote_frame_array
    49  002B5B  01                 	db	1
    50  002B5C  00                 	db	0
    51  002B5D  00                 	db	0
    52  002B5E  00                 	db	0
    53  002B5F  00                 	db	0
    54  002B60  00                 	db	0
    55  002B61  00                 	db	0
    56  002B62  00                 	db	0
    57  0000                     _RXB1CON	set	3920
    58  0000                     _RXB1CONbits	set	3920
    59  0000                     _RXB1D0	set	3926
    60  0000                     _RXB1D1	set	3927
    61  0000                     _RXB1D2	set	3928
    62  0000                     _RXB1D3	set	3929
    63  0000                     _RXB1D4	set	3930
    64  0000                     _RXB1D5	set	3931
    65  0000                     _RXB1D6	set	3932
    66  0000                     _RXB1D7	set	3933
    67  0000                     _RXB1DLC	set	3925
    68  0000                     _RXB1DLCbits	set	3925
    69  0000                     _RXB1EIDH	set	3923
    70  0000                     _RXB1EIDL	set	3924
    71  0000                     _RXB1SIDH	set	3921
    72  0000                     _RXB1SIDL	set	3922
    73  0000                     _RXB1SIDLbits	set	3922
    74  0000                     _RXF0EIDH	set	3842
    75  0000                     _RXF0EIDL	set	3843
    76  0000                     _RXF0SIDH	set	3840
    77  0000                     _RXF0SIDL	set	3841
    78  0000                     _RXF0SIDLbits	set	3841
    79  0000                     _RXF1EIDH	set	3846
    80  0000                     _RXF1EIDL	set	3847
    81  0000                     _RXF1SIDH	set	3844
    82  0000                     _RXF1SIDL	set	3845
    83  0000                     _RXF1SIDLbits	set	3845
    84  0000                     _RXF2EIDH	set	3850
    85  0000                     _RXF2EIDL	set	3851
    86  0000                     _RXF2SIDH	set	3848
    87  0000                     _RXF2SIDL	set	3849
    88  0000                     _RXF2SIDLbits	set	3849
    89  0000                     _RXF3EIDH	set	3854
    90  0000                     _RXF3EIDL	set	3855
    91  0000                     _RXF3SIDH	set	3852
    92  0000                     _RXF3SIDL	set	3853
    93  0000                     _RXF3SIDLbits	set	3853
    94  0000                     _RXF4EIDH	set	3858
    95  0000                     _RXF4EIDL	set	3859
    96  0000                     _RXF4SIDH	set	3856
    97  0000                     _RXF4SIDL	set	3857
    98  0000                     _RXF4SIDLbits	set	3857
    99  0000                     _RXF5EIDH	set	3862
   100  0000                     _RXF5EIDL	set	3863
   101  0000                     _RXF5SIDH	set	3860
   102  0000                     _RXF5SIDL	set	3861
   103  0000                     _RXF5SIDLbits	set	3861
   104  0000                     _RXM0EIDH	set	3866
   105  0000                     _RXM0EIDL	set	3867
   106  0000                     _RXM0SIDH	set	3864
   107  0000                     _RXM0SIDL	set	3865
   108  0000                     _RXM0SIDLbits	set	3865
   109  0000                     _RXM1EIDH	set	3870
   110  0000                     _RXM1EIDL	set	3871
   111  0000                     _RXM1SIDH	set	3868
   112  0000                     _RXM1SIDL	set	3869
   113  0000                     _RXM1SIDLbits	set	3869
   114  0000                     _TXB0CONbits	set	3904
   115  0000                     _TXB0D0	set	3910
   116  0000                     _TXB0D1	set	3911
   117  0000                     _TXB0D2	set	3912
   118  0000                     _TXB0D3	set	3913
   119  0000                     _TXB0D4	set	3914
   120  0000                     _TXB0D5	set	3915
   121  0000                     _TXB0D6	set	3916
   122  0000                     _TXB0D7	set	3917
   123  0000                     _TXB0DLC	set	3909
   124  0000                     _TXB0DLCbits	set	3909
   125  0000                     _TXB0EIDH	set	3907
   126  0000                     _TXB0EIDL	set	3908
   127  0000                     _TXB0SIDH	set	3905
   128  0000                     _TXB0SIDL	set	3906
   129  0000                     _TXB0SIDLbits	set	3906
   130  0000                     _TXB1CONbits	set	3888
   131  0000                     _TXB1D0	set	3894
   132  0000                     _TXB1D1	set	3895
   133  0000                     _TXB1D2	set	3896
   134  0000                     _TXB1D3	set	3897
   135  0000                     _TXB1D4	set	3898
   136  0000                     _TXB1D5	set	3899
   137  0000                     _TXB1D6	set	3900
   138  0000                     _TXB1D7	set	3901
   139  0000                     _TXB1DLC	set	3893
   140  0000                     _TXB1DLCbits	set	3893
   141  0000                     _TXB1EIDH	set	3891
   142  0000                     _TXB1EIDL	set	3892
   143  0000                     _TXB1SIDH	set	3889
   144  0000                     _TXB1SIDL	set	3890
   145  0000                     _TXB1SIDLbits	set	3890
   146  0000                     _TXB2CONbits	set	3872
   147  0000                     _TXB2D0	set	3878
   148  0000                     _TXB2D1	set	3879
   149  0000                     _TXB2D2	set	3880
   150  0000                     _TXB2D3	set	3881
   151  0000                     _TXB2D4	set	3882
   152  0000                     _TXB2D5	set	3883
   153  0000                     _TXB2D6	set	3884
   154  0000                     _TXB2D7	set	3885
   155  0000                     _TXB2DLC	set	3877
   156  0000                     _TXB2DLCbits	set	3877
   157  0000                     _TXB2EIDH	set	3875
   158  0000                     _TXB2EIDL	set	3876
   159  0000                     _TXB2SIDH	set	3873
   160  0000                     _TXB2SIDL	set	3874
   161  0000                     _TXB2SIDLbits	set	3874
   162  0000                     _ADCON0bits	set	4034
   163  0000                     _ADCON1	set	4033
   164  0000                     _ADCON2bits	set	4032
   165  0000                     _ADRESH	set	4036
   166  0000                     _BRGCON1	set	3952
   167  0000                     _BRGCON2	set	3953
   168  0000                     _BRGCON2bits	set	3953
   169  0000                     _BRGCON3	set	3954
   170  0000                     _BRGCON3bits	set	3954
   171  0000                     _CANCON	set	3951
   172  0000                     _CANCONbits	set	3951
   173  0000                     _CANSTAT	set	3950
   174  0000                     _COMSTATbits	set	3956
   175  0000                     _INTCON2bits	set	4081
   176  0000                     _INTCON3bits	set	4080
   177  0000                     _INTCONbits	set	4082
   178  0000                     _IPR1bits	set	3999
   179  0000                     _IPR2bits	set	4002
   180  0000                     _IPR3bits	set	4005
   181  0000                     _LATA	set	3977
   182  0000                     _LATB	set	3978
   183  0000                     _LATC	set	3979
   184  0000                     _LATD	set	3980
   185  0000                     _LATE	set	3981
   186  0000                     _PIE1bits	set	3997
   187  0000                     _PIE2bits	set	4000
   188  0000                     _PIE3bits	set	4003
   189  0000                     _PIR1bits	set	3998
   190  0000                     _PIR2bits	set	4001
   191  0000                     _PIR3bits	set	4004
   192  0000                     _PORTAbits	set	3968
   193  0000                     _PORTCbits	set	3970
   194  0000                     _RCONbits	set	4048
   195  0000                     _RXB0CON	set	3936
   196  0000                     _RXB0CONbits	set	3936
   197  0000                     _RXB0D0	set	3942
   198  0000                     _RXB0D1	set	3943
   199  0000                     _RXB0D2	set	3944
   200  0000                     _RXB0D3	set	3945
   201  0000                     _RXB0D4	set	3946
   202  0000                     _RXB0D5	set	3947
   203  0000                     _RXB0D6	set	3948
   204  0000                     _RXB0D7	set	3949
   205  0000                     _RXB0DLC	set	3941
   206  0000                     _RXB0DLCbits	set	3941
   207  0000                     _RXB0EIDH	set	3939
   208  0000                     _RXB0EIDL	set	3940
   209  0000                     _RXB0SIDH	set	3937
   210  0000                     _RXB0SIDL	set	3938
   211  0000                     _RXB0SIDLbits	set	3938
   212  0000                     _RXERRCNT	set	3957
   213  0000                     _T0CON	set	4053
   214  0000                     _T0CONbits	set	4053
   215  0000                     _T1CON	set	4045
   216  0000                     _T1CONbits	set	4045
   217  0000                     _T3CON	set	4017
   218  0000                     _T3CONbits	set	4017
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _TMR1H	set	4047
   222  0000                     _TMR1L	set	4046
   223  0000                     _TMR3H	set	4019
   224  0000                     _TMR3L	set	4018
   225  0000                     _TRISA	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISC	set	3988
   228  0000                     _TRISD	set	3989
   229  0000                     _TRISE	set	3990
   230  0000                     _TXERRCNT	set	3958
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  002A30                     __pcinit:
   236                           	opt stack 0
   237  002A30                     start_initialization:
   238                           	opt stack 0
   239  002A30                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Clear objects allocated to BANK0 (74 bytes)
   243  002A30  EE00  F060         	lfsr	0,__pbssBANK0
   244  002A34  0E4A               	movlw	74
   245  002A36                     clear_0:
   246  002A36  6AEE               	clrf	postinc0,c
   247  002A38  06E8               	decf	wreg,f,c
   248  002A3A  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   251  002A3C  6A42               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   252  002A3E  6A41               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   253                           
   254                           ; Clear objects allocated to COMRAM (28 bytes)
   255  002A40  EE00  F025         	lfsr	0,__pbssCOMRAM
   256  002A44  0E1C               	movlw	28
   257  002A46                     clear_1:
   258  002A46  6AEE               	clrf	postinc0,c
   259  002A48  06E8               	decf	wreg,f,c
   260  002A4A  E1FD               	bnz	clear_1
   261                           
   262                           ; Initialize objects allocated to BANK0 (9 bytes)
   263                           ; load TBLPTR registers with __pidataBANK0
   264  002A4C  0E5A               	movlw	low __pidataBANK0
   265  002A4E  6EF6               	movwf	tblptrl,c
   266  002A50  0E2B               	movlw	high __pidataBANK0
   267  002A52  6EF7               	movwf	tblptrh,c
   268  002A54  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   269  002A56  6EF8               	movwf	tblptru,c
   270  002A58  EE00  F0D9         	lfsr	0,__pdataBANK0
   271  002A5C  EE10 F009          	lfsr	1,9
   272  002A60                     copy_data0:
   273  002A60  0009               	tblrd		*+
   274  002A62  CFF5 FFEE          	movff	tablat,postinc0
   275  002A66  50E5               	movf	postdec1,w,c
   276  002A68  50E1               	movf	fsr1l,w,c
   277  002A6A  E1FA               	bnz	copy_data0
   278  002A6C                     end_of_initialization:
   279                           	opt stack 0
   280  002A6C                     __end_of__initialization:
   281                           	opt stack 0
   282  002A6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  002A6E  6EF8               	movwf	tblptru,c
   284  002A70  0100               	movlb	0
   285  002A72  EF6F  F00E         	goto	_main	;jump to C main() function
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bitbssCOMRAM
   296  000208                     __pbitbssCOMRAM:
   297                           	opt stack 0
   298  000208                     _ENC1_measure:
   299                           	opt stack 0
   300  000208                     	ds	1
   301  000209                     _ENC2_measure:
   302                           	opt stack 0
   303  000209                     	ds	1
   304  00020A                     _TMR1_overflow:
   305                           	opt stack 0
   306  00020A                     	ds	1
   307  00020B                     _TMR3_overflow:
   308                           	opt stack 0
   309  00020B                     	ds	1
   310  00020C                     _Tx_retry:
   311                           	opt stack 0
   312  00020C                     	ds	1
   313  00020D                     _count_flag:
   314                           	opt stack 0
   315  00020D                     	ds	1
   316  00020E                     _distance_reached_flag:
   317                           	opt stack 0
   318  00020E                     	ds	1
   319  00020F                     _distance_set_flag:
   320                           	opt stack 0
   321  00020F                     	ds	1
   322  000210                     _remote_frame:
   323                           	opt stack 0
   324  000210                     	ds	1
   325  000211                     _x:
   326                           	opt stack 0
   327  000211                     	ds	1
   328  000212                     _y:
   329                           	opt stack 0
   330  000212                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	bssCOMRAM
   341  000025                     __pbssCOMRAM:
   342                           	opt stack 0
   343  000025                     _timer_off:
   344                           	opt stack 0
   345  000025                     	ds	4
   346  000029                     _timer_on:
   347                           	opt stack 0
   348  000029                     	ds	4
   349  00002D                     _gap_time_1:
   350                           	opt stack 0
   351  00002D                     	ds	2
   352  00002F                     _gap_time_2:
   353                           	opt stack 0
   354  00002F                     	ds	2
   355  000031                     _msg:
   356                           	opt stack 0
   357  000031                     	ds	15
   358  000040                     _brake_value_degree:
   359                           	opt stack 0
   360  000040                     	ds	1
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	bssBANK0
   371  000060                     __pbssBANK0:
   372                           	opt stack 0
   373  000060                     _data_debug1:
   374                           	opt stack 0
   375  000060                     	ds	8
   376  000068                     _distance_actual_value:
   377                           	opt stack 0
   378  000068                     	ds	4
   379  00006C                     _int_counter_1:
   380                           	opt stack 0
   381  00006C                     	ds	4
   382  000070                     _int_counter_2:
   383                           	opt stack 0
   384  000070                     	ds	4
   385  000074                     _remote_frame_id:
   386                           	opt stack 0
   387  000074                     	ds	4
   388  000078                     _wheel_speed_1:
   389                           	opt stack 0
   390  000078                     	ds	4
   391  00007C                     _wheel_speed_2:
   392                           	opt stack 0
   393  00007C                     	ds	4
   394  000080                     _clock_counter_reference:
   395                           	opt stack 0
   396  000080                     	ds	2
   397  000082                     _distance_1:
   398                           	opt stack 0
   399  000082                     	ds	2
   400  000084                     _distance_2:
   401                           	opt stack 0
   402  000084                     	ds	2
   403  000086                     _distance_set_counter_1:
   404                           	opt stack 0
   405  000086                     	ds	2
   406  000088                     _distance_set_counter_2:
   407                           	opt stack 0
   408  000088                     	ds	2
   409  00008A                     _distance_set_value:
   410                           	opt stack 0
   411  00008A                     	ds	2
   412  00008C                     _Analogic_Mode:
   413                           	opt stack 0
   414  00008C                     	ds	1
   415  00008D                     _brake_signal_CAN:
   416                           	opt stack 0
   417  00008D                     	ds	1
   418  00008E                     _brake_value_inc:
   419                           	opt stack 0
   420  00008E                     	ds	1
   421  00008F                     _home_position:
   422                           	opt stack 0
   423  00008F                     	ds	1
   424  000090                     _step:
   425                           	opt stack 0
   426  000090                     	ds	1
   427  000091                     _distance_array:
   428                           	opt stack 0
   429  000091                     	ds	8
   430  000099                     _speed_array:
   431                           	opt stack 0
   432  000099                     	ds	8
   433  0000A1                     _status_array:
   434                           	opt stack 0
   435  0000A1                     	ds	8
   436  0000A9                     _brake_value:
   437                           	opt stack 0
   438  0000A9                     	ds	1
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	dataBANK0
   449  0000D9                     __pdataBANK0:
   450                           	opt stack 0
   451  0000D9                     _delay_quartz_frequency_value:
   452                           	opt stack 0
   453  0000D9                     	ds	1
   454  0000DA                     _remote_frame_array:
   455                           	opt stack 0
   456  0000DA                     	ds	8
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	cstackBANK1
   467  000100                     __pcstackBANK1:
   468                           	opt stack 0
   469  000100                     ?___aldiv:
   470                           	opt stack 0
   471  000100                     CANInitialize@phaseSeg1:
   472                           	opt stack 0
   473  000100                     ___aldiv@dividend:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x0
   477  000100                     	ds	1
   478  000101                     CANInitialize@phaseSeg2:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x1
   482  000101                     	ds	1
   483  000102                     CANInitialize@SJW:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x2
   487  000102                     	ds	1
   488  000103                     CANInitialize@BRP:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x3
   492  000103                     	ds	1
   493  000104                     CANInitialize@flags:
   494                           	opt stack 0
   495  000104                     ___aldiv@divisor:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x4
   499  000104                     	ds	1
   500  000105                     ??_CANInitialize:
   501                           
   502                           ; 0 bytes @ 0x5
   503  000105                     	ds	3
   504  000108                     ___aldiv@counter:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x8
   508  000108                     	ds	1
   509  000109                     ___aldiv@sign:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x9
   513  000109                     	ds	1
   514  00010A                     ___aldiv@quotient:
   515                           	opt stack 0
   516                           
   517                           ; 4 bytes @ 0xA
   518  00010A                     	ds	4
   519  00010E                     ??_main:
   520                           
   521                           ; 0 bytes @ 0xE
   522  00010E                     	ds	4
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	cstackBANK0
   533  0000AA                     __pcstackBANK0:
   534                           	opt stack 0
   535  0000AA                     ?i2___awdiv:
   536                           	opt stack 0
   537  0000AA                     i2___awdiv@dividend:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x0
   541  0000AA                     	ds	2
   542  0000AC                     i2___awdiv@divisor:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x2
   546  0000AC                     	ds	2
   547  0000AE                     i2___awdiv@counter:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x4
   551  0000AE                     	ds	1
   552  0000AF                     i2___awdiv@sign:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x5
   556  0000AF                     	ds	1
   557  0000B0                     i2___awdiv@quotient:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x6
   561  0000B0                     	ds	2
   562  0000B2                     ??_ISR_Alta:
   563                           
   564                           ; 0 bytes @ 0x8
   565  0000B2                     	ds	22
   566  0000C8                     ?___wmul:
   567                           	opt stack 0
   568  0000C8                     ?___awdiv:
   569                           	opt stack 0
   570  0000C8                     ?___lmul:
   571                           	opt stack 0
   572  0000C8                     CANOperationMode@mode:
   573                           	opt stack 0
   574  0000C8                     _CANisTxReady$3278:
   575                           	opt stack 0
   576  0000C8                     ___wmul@multiplier:
   577                           	opt stack 0
   578  0000C8                     ___awdiv@dividend:
   579                           	opt stack 0
   580  0000C8                     CANsendMessage@identifier:
   581                           	opt stack 0
   582  0000C8                     CANSetMask@mask:
   583                           	opt stack 0
   584  0000C8                     CANSetFilter@filter:
   585                           	opt stack 0
   586  0000C8                     ___lmul@multiplier:
   587                           	opt stack 0
   588                           
   589                           ; 4 bytes @ 0x1E
   590  0000C8                     	ds	2
   591  0000CA                     ___wmul@multiplicand:
   592                           	opt stack 0
   593  0000CA                     ___awdiv@divisor:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x20
   597  0000CA                     	ds	2
   598  0000CC                     CANSetMask@type:
   599                           	opt stack 0
   600  0000CC                     CANSetFilter@type:
   601                           	opt stack 0
   602  0000CC                     ___awdiv@counter:
   603                           	opt stack 0
   604  0000CC                     CANsendMessage@data:
   605                           	opt stack 0
   606  0000CC                     ___wmul@product:
   607                           	opt stack 0
   608  0000CC                     ___lmul@multiplicand:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x22
   612  0000CC                     	ds	1
   613  0000CD                     ??_CANSetMask:
   614  0000CD                     ??_CANSetFilter:
   615  0000CD                     ___awdiv@sign:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x23
   619  0000CD                     	ds	1
   620  0000CE                     CANsendMessage@dataLength:
   621                           	opt stack 0
   622  0000CE                     ___awdiv@quotient:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x24
   626  0000CE                     	ds	1
   627  0000CF                     CANsendMessage@flags:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x25
   631  0000CF                     	ds	1
   632  0000D0                     ??_CANsendMessage:
   633  0000D0                     ___lmul@product:
   634                           	opt stack 0
   635                           
   636                           ; 4 bytes @ 0x26
   637  0000D0                     	ds	1
   638  0000D1                     CANSetMask@numBuffer:
   639                           	opt stack 0
   640  0000D1                     CANSetFilter@numBuffer:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x27
   644  0000D1                     	ds	1
   645  0000D2                     CANSetMask@tamp:
   646                           	opt stack 0
   647  0000D2                     CANSetFilter@tamp:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x28
   651  0000D2                     	ds	2
   652  0000D4                     CANsendMessage@tamp:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x2A
   656  0000D4                     	ds	2
   657  0000D6                     CANInitialize@propSeg:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x2C
   661  0000D6                     	ds	1
   662  0000D7                     CANInitialize@FilterConfig1:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x2D
   666  0000D7                     	ds	1
   667  0000D8                     CANInitialize@FilterConfig2:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x2E
   671  0000D8                     	ds	1
   672  0000D9                     tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1l	equ	0xFE1
   680                           
   681                           ; 0 bytes @ 0x2F
   682                           
   683                           	psect	cstackCOMRAM
   684  000001                     __pcstackCOMRAM:
   685                           	opt stack 0
   686  000001                     _CANisRxReady$3280:
   687                           	opt stack 0
   688  000001                     CANreceiveMessage@msg:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x0
   692  000001                     	ds	2
   693  000003                     ??_CANreceiveMessage:
   694                           
   695                           ; 0 bytes @ 0x2
   696  000003                     	ds	8
   697  00000B                     CANreceiveMessage@error:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0xA
   701  00000B                     	ds	1
   702  00000C                     CANreceiveMessage@tamp:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0xB
   706  00000C                     	ds	1
   707  00000D                     ??_ISR_Bassa:
   708                           
   709                           ; 0 bytes @ 0xC
   710  00000D                     	ds	17
   711  00001E                     ?___lwdiv:
   712                           	opt stack 0
   713  00001E                     ?i2___wmul:
   714                           	opt stack 0
   715  00001E                     WriteTimer0@timer0:
   716                           	opt stack 0
   717  00001E                     ___lwdiv@dividend:
   718                           	opt stack 0
   719  00001E                     i2___wmul@multiplier:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x1D
   723  00001E                     	ds	2
   724  000020                     WriteTimer0@timer:
   725                           	opt stack 0
   726  000020                     ___lwdiv@divisor:
   727                           	opt stack 0
   728  000020                     i2___wmul@multiplicand:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x1F
   732  000020                     	ds	2
   733  000022                     ___lwdiv@quotient:
   734                           	opt stack 0
   735  000022                     i2___wmul@product:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x21
   739  000022                     	ds	2
   740  000024                     ___lwdiv@counter:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x23
   744  000024                     	ds	1
   745                           tblptru	equ	0xFF8
   746                           tblptrh	equ	0xFF7
   747                           tblptrl	equ	0xFF6
   748                           tablat	equ	0xFF5
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           postdec1	equ	0xFE5
   752                           fsr1l	equ	0xFE1
   753                           
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 254 in file "ABS_Code.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2  707[None  ] int 
   766 ;; Registers used:
   767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   773 ;;      Params:         0       0       0       0
   774 ;;      Locals:         0       0       0       0
   775 ;;      Temps:          0       0       4       0
   776 ;;      Totals:         0       0       4       0
   777 ;;Total ram usage:        4 bytes
   778 ;; Hardware stack levels required when called:    7
   779 ;; This function calls:
   780 ;;		_CANInitialize
   781 ;;		_CANisRXwarningON
   782 ;;		_CANisTXwarningON
   783 ;;		___aldiv
   784 ;;		___awdiv
   785 ;;		___lmul
   786 ;;		___wmul
   787 ;;		_board_initialization
   788 ;;		_remote_frame_handler
   789 ;; This function is called by:
   790 ;;		Startup code after reset
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text0
   795  001CDE                     __ptext0:
   796                           	opt stack 0
   797  001CDE                     _main:
   798                           	opt stack 24
   799                           
   800                           ;ABS_Code.c: 255: board_initialization();
   801                           
   802                           ;incstack = 0
   803  001CDE  EC51  F014         	call	_board_initialization	;wreg free
   804                           
   805                           ;ABS_Code.c: 256: step = (11 * (3.14159265358979323846)) / 16;
   806  001CE2  0E02               	movlw	2
   807  001CE4  0100               	movlb	0	; () banked
   808  001CE6  6F90               	movwf	_step& (0+255),b	;volatile
   809  001CE8  D000               	goto	l4542
   810  001CEA                     l4542:
   811                           
   812                           ;ABS_Code.c: 268: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   813  001CEA  EC9F  F015         	call	_CANisTXwarningON	;wreg free
   814  001CEE  06E8               	decf	wreg,f,c
   815  001CF0  B4D8               	btfsc	status,2,c
   816  001CF2  D005               	goto	l711
   817  001CF4  ECA6  F015         	call	_CANisRXwarningON	;wreg free
   818  001CF8  06E8               	decf	wreg,f,c
   819  001CFA  A4D8               	btfss	status,2,c
   820  001CFC  D016               	goto	l709
   821  001CFE                     l711:
   822                           
   823                           ;ABS_Code.c: 269: PORTAbits.RA1 = 1;
   824  001CFE  8280               	bsf	3968,1,c	;volatile
   825                           
   826                           ;ABS_Code.c: 270: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
   827  001D00  0E06               	movlw	6
   828  001D02  0101               	movlb	1	; () banked
   829  001D04  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
   830  001D06  0E05               	movlw	5
   831  001D08  0101               	movlb	1	; () banked
   832  001D0A  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
   833  001D0C  0E01               	movlw	1
   834  001D0E  0101               	movlb	1	; () banked
   835  001D10  6F02               	movwf	CANInitialize@SJW& (0+255),b
   836  001D12  0E03               	movlw	3
   837  001D14  0101               	movlb	1	; () banked
   838  001D16  6F03               	movwf	CANInitialize@BRP& (0+255),b
   839  001D18  0E9D               	movlw	157
   840  001D1A  0101               	movlb	1	; () banked
   841  001D1C  6F04               	movwf	CANInitialize@flags& (0+255),b
   842  001D1E  0E04               	movlw	4
   843  001D20  EC26  F011         	call	_CANInitialize
   844                           
   845                           ;ABS_Code.c: 271: COMSTATbits.TXWARN = 0;
   846  001D24  9474               	bcf	3956,2,c	;volatile
   847                           
   848                           ;ABS_Code.c: 272: COMSTATbits.RXWARN = 0;
   849  001D26  9274               	bcf	3956,1,c	;volatile
   850                           
   851                           ;ABS_Code.c: 273: } else {
   852  001D28  D001               	goto	l712
   853  001D2A                     l709:
   854                           
   855                           ;ABS_Code.c: 274: PORTAbits.RA1 = 0;
   856  001D2A  9280               	bcf	3968,1,c	;volatile
   857  001D2C                     l712:
   858                           
   859                           ;ABS_Code.c: 275: }
   860                           ;ABS_Code.c: 278: if (distance_set_flag == 1) {
   861  001D2C  AE41               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
   862  001D2E  D044               	goto	l713
   863                           
   864                           ;ABS_Code.c: 279: distance_actual_value = (step * (distance_set_counter_1 + distance_set
      +                          _counter_2)) / 2;
   865  001D30  0100               	movlb	0	; () banked
   866  001D32  5188               	movf	_distance_set_counter_2& (0+255),w,b	;volatile
   867  001D34  0100               	movlb	0	; () banked
   868  001D36  2586               	addwf	_distance_set_counter_1& (0+255),w,b	;volatile
   869  001D38  0100               	movlb	0	; () banked
   870  001D3A  6FC8               	movwf	___wmul@multiplier& (0+255),b
   871  001D3C  0100               	movlb	0	; () banked
   872  001D3E  5189               	movf	(_distance_set_counter_2+1)& (0+255),w,b	;volatile
   873  001D40  0100               	movlb	0	; () banked
   874  001D42  2187               	addwfc	(_distance_set_counter_1+1)& (0+255),w,b	;volatile
   875  001D44  0100               	movlb	0	; () banked
   876  001D46  6FC9               	movwf	(___wmul@multiplier+1)& (0+255),b
   877  001D48  C090  F0CA         	movff	_step,___wmul@multiplicand	;volatile
   878  001D4C  0100               	movlb	0	; () banked
   879  001D4E  6BCB               	clrf	(___wmul@multiplicand+1)& (0+255),b
   880  001D50  EC3B  F015         	call	___wmul	;wreg free
   881  001D54  90D8               	bcf	status,0,c
   882  001D56  0100               	movlb	0	; () banked
   883  001D58  31C9               	rrcf	(?___wmul+1)& (0+255),w,b
   884  001D5A  0101               	movlb	1	; () banked
   885  001D5C  6F0F               	movwf	(??_main+1)& (0+255),b
   886  001D5E  0100               	movlb	0	; () banked
   887  001D60  31C8               	rrcf	?___wmul& (0+255),w,b
   888  001D62  0101               	movlb	1	; () banked
   889  001D64  6F0E               	movwf	??_main& (0+255),b
   890  001D66  C10E  F068         	movff	??_main,_distance_actual_value	;volatile
   891  001D6A  C10F  F069         	movff	??_main+1,_distance_actual_value+1	;volatile
   892  001D6E  0100               	movlb	0	; () banked
   893  001D70  6B6A               	clrf	(_distance_actual_value+2)& (0+255),b	;volatile
   894  001D72  6B6B               	clrf	(_distance_actual_value+3)& (0+255),b	;volatile
   895                           
   896                           ; BSR set to: 0
   897                           ;ABS_Code.c: 280: if (distance_actual_value >= distance_set_value) {
   898  001D74  0100               	movlb	0	; () banked
   899  001D76  518A               	movf	_distance_set_value& (0+255),w,b	;volatile
   900  001D78  0101               	movlb	1	; () banked
   901  001D7A  6F0E               	movwf	??_main& (0+255),b
   902  001D7C  0100               	movlb	0	; () banked
   903  001D7E  518B               	movf	(_distance_set_value+1)& (0+255),w,b	;volatile
   904  001D80  0101               	movlb	1	; () banked
   905  001D82  6F0F               	movwf	(??_main+1)& (0+255),b
   906  001D84  0101               	movlb	1	; () banked
   907  001D86  6B10               	clrf	(??_main+2)& (0+255),b
   908  001D88  0101               	movlb	1	; () banked
   909  001D8A  6B11               	clrf	(??_main+3)& (0+255),b
   910  001D8C  0101               	movlb	1	; () banked
   911  001D8E  510E               	movf	??_main& (0+255),w,b
   912  001D90  0100               	movlb	0	; () banked
   913  001D92  5D68               	subwf	_distance_actual_value& (0+255),w,b	;volatile
   914  001D94  0101               	movlb	1	; () banked
   915  001D96  510F               	movf	(??_main+1)& (0+255),w,b
   916  001D98  0100               	movlb	0	; () banked
   917  001D9A  5969               	subwfb	(_distance_actual_value+1)& (0+255),w,b	;volatile
   918  001D9C  0101               	movlb	1	; () banked
   919  001D9E  5110               	movf	(??_main+2)& (0+255),w,b
   920  001DA0  0100               	movlb	0	; () banked
   921  001DA2  596A               	subwfb	(_distance_actual_value+2)& (0+255),w,b	;volatile
   922  001DA4  0101               	movlb	1	; () banked
   923  001DA6  5111               	movf	(??_main+3)& (0+255),w,b
   924  001DA8  0100               	movlb	0	; () banked
   925  001DAA  596B               	subwfb	(_distance_actual_value+3)& (0+255),w,b	;volatile
   926  001DAC  A0D8               	btfss	status,0,c
   927  001DAE  D004               	goto	l713
   928                           
   929                           ; BSR set to: 0
   930                           ;ABS_Code.c: 281: distance_set_flag = 0;
   931  001DB0  9E41               	bcf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
   932                           
   933                           ;ABS_Code.c: 282: distance_reached_flag = 1;
   934  001DB2  8C41               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
   935                           
   936                           ;ABS_Code.c: 283: Tx_retry = 1;
   937  001DB4  8841               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   938  001DB6  D000               	goto	l713
   939  001DB8                     l713:
   940                           
   941                           ;ABS_Code.c: 284: }
   942                           ;ABS_Code.c: 285: }
   943                           ;ABS_Code.c: 287: if ((remote_frame == 1) || (Tx_retry == 1)) {
   944  001DB8  B042               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   945  001DBA  D002               	goto	l717
   946  001DBC  A841               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   947  001DBE  D004               	goto	l4562
   948  001DC0                     l717:
   949                           
   950                           ;ABS_Code.c: 288: remote_frame = 0;
   951  001DC0  9042               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   952                           
   953                           ;ABS_Code.c: 289: remote_frame_handler();
   954  001DC2  EC0D  F012         	call	_remote_frame_handler	;wreg free
   955  001DC6  D000               	goto	l4562
   956  001DC8                     l4562:
   957                           
   958                           ;ABS_Code.c: 290: }
   959                           ;ABS_Code.c: 293: if (Analogic_Mode == 0b00000000) {
   960  001DC8  0100               	movlb	0	; () banked
   961  001DCA  518C               	movf	_Analogic_Mode& (0+255),w,b	;volatile
   962  001DCC  A4D8               	btfss	status,2,c
   963  001DCE  D021               	goto	l718
   964                           
   965                           ; BSR set to: 0
   966                           ;ABS_Code.c: 294: if (brake_signal_CAN == 0b00000000) {
   967  001DD0  0100               	movlb	0	; () banked
   968  001DD2  518D               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
   969  001DD4  A4D8               	btfss	status,2,c
   970  001DD6  D004               	goto	l4568
   971                           
   972                           ; BSR set to: 0
   973                           ;ABS_Code.c: 295: brake_value_inc = 0;
   974  001DD8  0E00               	movlw	0
   975  001DDA  0100               	movlb	0	; () banked
   976  001DDC  6F8E               	movwf	_brake_value_inc& (0+255),b	;volatile
   977  001DDE  D000               	goto	l4568
   978  001DE0                     l4568:
   979                           
   980                           ; BSR set to: 0
   981                           ;ABS_Code.c: 296: }
   982                           ;ABS_Code.c: 297: if (brake_signal_CAN == 0b00000001) {
   983  001DE0  0100               	movlb	0	; () banked
   984  001DE2  058D               	decf	_brake_signal_CAN& (0+255),w,b	;volatile
   985  001DE4  A4D8               	btfss	status,2,c
   986  001DE6  D004               	goto	l4572
   987                           
   988                           ; BSR set to: 0
   989                           ;ABS_Code.c: 298: brake_value_inc = 150;
   990  001DE8  0E96               	movlw	150
   991  001DEA  0100               	movlb	0	; () banked
   992  001DEC  6F8E               	movwf	_brake_value_inc& (0+255),b	;volatile
   993  001DEE  D000               	goto	l4572
   994  001DF0                     l4572:
   995                           
   996                           ; BSR set to: 0
   997                           ;ABS_Code.c: 299: }
   998                           ;ABS_Code.c: 300: if (brake_signal_CAN == 0b00000010) {
   999  001DF0  0E02               	movlw	2
  1000  001DF2  0100               	movlb	0	; () banked
  1001  001DF4  198D               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1002  001DF6  A4D8               	btfss	status,2,c
  1003  001DF8  D004               	goto	l4576
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;ABS_Code.c: 301: brake_value_inc = 200;
  1007  001DFA  0EC8               	movlw	200
  1008  001DFC  0100               	movlb	0	; () banked
  1009  001DFE  6F8E               	movwf	_brake_value_inc& (0+255),b	;volatile
  1010  001E00  D000               	goto	l4576
  1011  001E02                     l4576:
  1012                           
  1013                           ; BSR set to: 0
  1014                           ;ABS_Code.c: 302: }
  1015                           ;ABS_Code.c: 303: if (brake_signal_CAN == 0b00000011) {
  1016  001E02  0E03               	movlw	3
  1017  001E04  0100               	movlb	0	; () banked
  1018  001E06  198D               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1019  001E08  A4D8               	btfss	status,2,c
  1020  001E0A  D006               	goto	l4580
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;ABS_Code.c: 304: brake_value_inc = 255;
  1024  001E0C  0100               	movlb	0	; () banked
  1025  001E0E  698E               	setf	_brake_value_inc& (0+255),b	;volatile
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;ABS_Code.c: 305: }
  1029                           ;ABS_Code.c: 306: } else {
  1030  001E10  D003               	goto	l4580
  1031  001E12                     l718:
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;ABS_Code.c: 307: brake_value_inc = brake_signal_CAN;
  1035  001E12  C08D  F08E         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
  1036  001E16  D000               	goto	l4580
  1037  001E18                     l4580:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;ABS_Code.c: 308: }
  1041                           ;ABS_Code.c: 311: if (((brake_value_inc / 5) + home_position) > 255) {
  1042  001E18  C08E  F0C8         	movff	_brake_value_inc,___awdiv@dividend	;volatile
  1043  001E1C  0100               	movlb	0	; () banked
  1044  001E1E  6BC9               	clrf	(___awdiv@dividend+1)& (0+255),b
  1045  001E20  0E00               	movlw	0
  1046  001E22  0100               	movlb	0	; () banked
  1047  001E24  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  1048  001E26  0E05               	movlw	5
  1049  001E28  6FCA               	movwf	___awdiv@divisor& (0+255),b
  1050  001E2A  EC81  F013         	call	___awdiv	;wreg free
  1051  001E2E  0100               	movlb	0	; () banked
  1052  001E30  518F               	movf	_home_position& (0+255),w,b	;volatile
  1053  001E32  0100               	movlb	0	; () banked
  1054  001E34  27C8               	addwf	?___awdiv& (0+255),f,b
  1055  001E36  0E00               	movlw	0
  1056  001E38  0100               	movlb	0	; () banked
  1057  001E3A  23C9               	addwfc	(?___awdiv+1)& (0+255),f,b
  1058  001E3C  0100               	movlb	0	; () banked
  1059  001E3E  BFC9               	btfsc	(?___awdiv+1)& (0+255),7,b
  1060  001E40  D008               	goto	l4586
  1061  001E42  0100               	movlb	0	; () banked
  1062  001E44  05C9               	decf	(?___awdiv+1)& (0+255),w,b
  1063  001E46  A0D8               	btfss	status,0,c
  1064  001E48  D004               	goto	l4586
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;ABS_Code.c: 312: brake_value = 255;
  1068  001E4A  0100               	movlb	0	; () banked
  1069  001E4C  69A9               	setf	_brake_value& (0+255),b	;volatile
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;ABS_Code.c: 313: brake_value_degree = 180;
  1073  001E4E  0EB4               	movlw	180
  1074  001E50  D020               	goto	L1
  1075  001E52                     l4586:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;ABS_Code.c: 315: brake_value = (brake_value_inc / 5) + home_position;
  1079  001E52  C08E  F0C8         	movff	_brake_value_inc,___awdiv@dividend	;volatile
  1080  001E56  0100               	movlb	0	; () banked
  1081  001E58  6BC9               	clrf	(___awdiv@dividend+1)& (0+255),b
  1082  001E5A  0E00               	movlw	0
  1083  001E5C  0100               	movlb	0	; () banked
  1084  001E5E  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  1085  001E60  0E05               	movlw	5
  1086  001E62  6FCA               	movwf	___awdiv@divisor& (0+255),b
  1087  001E64  EC81  F013         	call	___awdiv	;wreg free
  1088  001E68  0100               	movlb	0	; () banked
  1089  001E6A  51C8               	movf	?___awdiv& (0+255),w,b
  1090  001E6C  0100               	movlb	0	; () banked
  1091  001E6E  258F               	addwf	_home_position& (0+255),w,b	;volatile
  1092  001E70  0100               	movlb	0	; () banked
  1093  001E72  6FA9               	movwf	_brake_value& (0+255),b	;volatile
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;ABS_Code.c: 316: brake_value_degree = (180 * brake_value) / 255;
  1097  001E74  0100               	movlb	0	; () banked
  1098  001E76  51A9               	movf	_brake_value& (0+255),w,b	;volatile
  1099  001E78  0DB4               	mullw	180
  1100  001E7A  CFF3 F0C8          	movff	prodl,___awdiv@dividend
  1101  001E7E  CFF4 F0C9          	movff	prodh,___awdiv@dividend+1
  1102  001E82  0E00               	movlw	0
  1103  001E84  0100               	movlb	0	; () banked
  1104  001E86  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  1105  001E88  69CA               	setf	___awdiv@divisor& (0+255),b
  1106  001E8A  EC81  F013         	call	___awdiv	;wreg free
  1107  001E8E  0100               	movlb	0	; () banked
  1108  001E90  51C8               	movf	?___awdiv& (0+255),w,b
  1109  001E92                     L1:
  1110  001E92  6E40               	movwf	_brake_value_degree,c	;volatile
  1111  001E94  D000               	goto	l4590
  1112  001E96                     l4590:
  1113                           
  1114                           ; BSR set to: 0
  1115                           ;ABS_Code.c: 317: }
  1116                           ;ABS_Code.c: 320: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1117  001E96  B041               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1118  001E98  D002               	goto	l728
  1119                           
  1120                           ; BSR set to: 0
  1121  001E9A  A441               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1122  001E9C  D03F               	goto	l4606
  1123  001E9E                     l728:
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;ABS_Code.c: 321: if (TMR1_overflow == 1) {
  1127  001E9E  A441               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1128  001EA0  D00B               	goto	l4598
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;ABS_Code.c: 322: wheel_speed_1 = 0;
  1132  001EA2  0E00               	movlw	0
  1133  001EA4  0100               	movlb	0	; () banked
  1134  001EA6  6F78               	movwf	_wheel_speed_1& (0+255),b	;volatile
  1135  001EA8  0E00               	movlw	0
  1136  001EAA  6F79               	movwf	(_wheel_speed_1+1)& (0+255),b	;volatile
  1137  001EAC  0E00               	movlw	0
  1138  001EAE  6F7A               	movwf	(_wheel_speed_1+2)& (0+255),b	;volatile
  1139  001EB0  0E00               	movlw	0
  1140  001EB2  6F7B               	movwf	(_wheel_speed_1+3)& (0+255),b	;volatile
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;ABS_Code.c: 323: TMR1_overflow = 0;
  1144  001EB4  9441               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1145                           
  1146                           ;ABS_Code.c: 324: } else {
  1147  001EB6  D02C               	goto	l4600
  1148  001EB8                     l4598:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;ABS_Code.c: 325: wheel_speed_1 = (step * 100000) / gap_time_1;
  1152  001EB8  0100               	movlb	0	; () banked
  1153  001EBA  5190               	movf	_step& (0+255),w,b	;volatile
  1154  001EBC  0100               	movlb	0	; () banked
  1155  001EBE  6FC8               	movwf	___lmul@multiplier& (0+255),b
  1156  001EC0  6BC9               	clrf	(___lmul@multiplier+1)& (0+255),b
  1157  001EC2  6BCA               	clrf	(___lmul@multiplier+2)& (0+255),b
  1158  001EC4  6BCB               	clrf	(___lmul@multiplier+3)& (0+255),b
  1159  001EC6  0EA0               	movlw	160
  1160  001EC8  0100               	movlb	0	; () banked
  1161  001ECA  6FCC               	movwf	___lmul@multiplicand& (0+255),b
  1162  001ECC  0E86               	movlw	134
  1163  001ECE  6FCD               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1164  001ED0  0E01               	movlw	1
  1165  001ED2  6FCE               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1166  001ED4  0E00               	movlw	0
  1167  001ED6  6FCF               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1168  001ED8  ECAD  F014         	call	___lmul	;wreg free
  1169  001EDC  C0C8  F100         	movff	?___lmul,___aldiv@dividend
  1170  001EE0  C0C9  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1171  001EE4  C0CA  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1172  001EE8  C0CB  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1173  001EEC  C02D  F104         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1174  001EF0  C02E  F105         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1175  001EF4  0101               	movlb	1	; () banked
  1176  001EF6  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1177  001EF8  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1178  001EFA  ECEB  F012         	call	___aldiv	;wreg free
  1179  001EFE  C100  F078         	movff	?___aldiv,_wheel_speed_1	;volatile
  1180  001F02  C101  F079         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1181  001F06  C102  F07A         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1182  001F0A  C103  F07B         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1183  001F0E  D000               	goto	l4600
  1184  001F10                     l4600:
  1185                           
  1186                           ;ABS_Code.c: 326: }
  1187                           ;ABS_Code.c: 327: speed_array[3] = wheel_speed_1 >> 8;
  1188  001F10  C079  F09C         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1189                           
  1190                           ;ABS_Code.c: 328: speed_array[2] = wheel_speed_1;
  1191  001F14  C078  F09B         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1192                           
  1193                           ;ABS_Code.c: 329: ENC1_measure = 0;
  1194  001F18  9041               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1195  001F1A  D000               	goto	l4606
  1196  001F1C                     l4606:
  1197                           
  1198                           ;ABS_Code.c: 330: }
  1199                           ;ABS_Code.c: 333: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1200  001F1C  B241               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1201  001F1E  D002               	goto	l733
  1202  001F20  A641               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1203  001F22  D6E3               	goto	l4542
  1204  001F24                     l733:
  1205                           
  1206                           ;ABS_Code.c: 334: if (TMR3_overflow == 1) {
  1207  001F24  A641               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1208  001F26  D00B               	goto	l4614
  1209                           
  1210                           ;ABS_Code.c: 335: wheel_speed_2 = 0;
  1211  001F28  0E00               	movlw	0
  1212  001F2A  0100               	movlb	0	; () banked
  1213  001F2C  6F7C               	movwf	_wheel_speed_2& (0+255),b	;volatile
  1214  001F2E  0E00               	movlw	0
  1215  001F30  6F7D               	movwf	(_wheel_speed_2+1)& (0+255),b	;volatile
  1216  001F32  0E00               	movlw	0
  1217  001F34  6F7E               	movwf	(_wheel_speed_2+2)& (0+255),b	;volatile
  1218  001F36  0E00               	movlw	0
  1219  001F38  6F7F               	movwf	(_wheel_speed_2+3)& (0+255),b	;volatile
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;ABS_Code.c: 336: TMR3_overflow = 0;
  1223  001F3A  9641               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1224                           
  1225                           ;ABS_Code.c: 337: } else {
  1226  001F3C  D02C               	goto	l4616
  1227  001F3E                     l4614:
  1228                           
  1229                           ;ABS_Code.c: 338: wheel_speed_2 = (step * 100000) / gap_time_2;
  1230  001F3E  0100               	movlb	0	; () banked
  1231  001F40  5190               	movf	_step& (0+255),w,b	;volatile
  1232  001F42  0100               	movlb	0	; () banked
  1233  001F44  6FC8               	movwf	___lmul@multiplier& (0+255),b
  1234  001F46  6BC9               	clrf	(___lmul@multiplier+1)& (0+255),b
  1235  001F48  6BCA               	clrf	(___lmul@multiplier+2)& (0+255),b
  1236  001F4A  6BCB               	clrf	(___lmul@multiplier+3)& (0+255),b
  1237  001F4C  0EA0               	movlw	160
  1238  001F4E  0100               	movlb	0	; () banked
  1239  001F50  6FCC               	movwf	___lmul@multiplicand& (0+255),b
  1240  001F52  0E86               	movlw	134
  1241  001F54  6FCD               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1242  001F56  0E01               	movlw	1
  1243  001F58  6FCE               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1244  001F5A  0E00               	movlw	0
  1245  001F5C  6FCF               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1246  001F5E  ECAD  F014         	call	___lmul	;wreg free
  1247  001F62  C0C8  F100         	movff	?___lmul,___aldiv@dividend
  1248  001F66  C0C9  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1249  001F6A  C0CA  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1250  001F6E  C0CB  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1251  001F72  C02F  F104         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1252  001F76  C030  F105         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1253  001F7A  0101               	movlb	1	; () banked
  1254  001F7C  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1255  001F7E  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1256  001F80  ECEB  F012         	call	___aldiv	;wreg free
  1257  001F84  C100  F07C         	movff	?___aldiv,_wheel_speed_2	;volatile
  1258  001F88  C101  F07D         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1259  001F8C  C102  F07E         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1260  001F90  C103  F07F         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1261  001F94  D000               	goto	l4616
  1262  001F96                     l4616:
  1263                           
  1264                           ;ABS_Code.c: 339: }
  1265                           ;ABS_Code.c: 340: speed_array[1] = wheel_speed_2 >> 8;
  1266  001F96  C07D  F09A         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1267                           
  1268                           ;ABS_Code.c: 341: speed_array[0] = wheel_speed_2;
  1269  001F9A  C07C  F099         	movff	_wheel_speed_2,_speed_array	;volatile
  1270                           
  1271                           ;ABS_Code.c: 342: ENC2_measure = 0;
  1272  001F9E  9241               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1273  001FA0  D6A4               	goto	l4542
  1274  001FA2  EF9C  F000         	goto	start
  1275  001FA6                     __end_of_main:
  1276                           	opt stack 0
  1277                           tblptru	equ	0xFF8
  1278                           tblptrh	equ	0xFF7
  1279                           tblptrl	equ	0xFF6
  1280                           tablat	equ	0xFF5
  1281                           prodh	equ	0xFF4
  1282                           prodl	equ	0xFF3
  1283                           postinc0	equ	0xFEE
  1284                           wreg	equ	0xFE8
  1285                           postdec1	equ	0xFE5
  1286                           fsr1l	equ	0xFE1
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _remote_frame_handler *****************
  1290 ;; Defined at:
  1291 ;;		line 352 in file "ABS_Code.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;		None               void
  1298 ;; Registers used:
  1299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1305 ;;      Params:         0       0       0       0
  1306 ;;      Locals:         0       0       0       0
  1307 ;;      Temps:          0       0       0       0
  1308 ;;      Totals:         0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    5
  1312 ;; This function calls:
  1313 ;;		_CANisTxReady
  1314 ;;		_CANsendMessage
  1315 ;;		___wmul
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text1
  1322  00241A                     __ptext1:
  1323                           	opt stack 0
  1324  00241A                     _remote_frame_handler:
  1325                           	opt stack 25
  1326                           
  1327                           ;ABS_Code.c: 353: if (CANisTxReady()) {
  1328                           
  1329                           ;incstack = 0
  1330  00241A  EC6B  F015         	call	_CANisTxReady	;wreg free
  1331  00241E  0900               	iorlw	0
  1332  002420  B4D8               	btfsc	status,2,c
  1333  002422  D0D6               	goto	l741
  1334                           
  1335                           ;ABS_Code.c: 354: if (remote_frame_id == 0b00000000010) {
  1336  002424  0E02               	movlw	2
  1337  002426  0100               	movlb	0	; () banked
  1338  002428  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1339  00242A  0100               	movlb	0	; () banked
  1340  00242C  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1341  00242E  0100               	movlb	0	; () banked
  1342  002430  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1343  002432  0100               	movlb	0	; () banked
  1344  002434  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1345  002436  A4D8               	btfss	status,2,c
  1346  002438  D01C               	goto	l3794
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;ABS_Code.c: 355: status_array[0] = 0x01;
  1350  00243A  0E01               	movlw	1
  1351  00243C  0100               	movlb	0	; () banked
  1352  00243E  6FA1               	movwf	_status_array& (0+255),b	;volatile
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;ABS_Code.c: 356: CANsendMessage(0b00000000010, status_array, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1356  002440  0E02               	movlw	2
  1357  002442  0100               	movlb	0	; () banked
  1358  002444  6FC8               	movwf	CANsendMessage@identifier& (0+255),b
  1359  002446  0E00               	movlw	0
  1360  002448  6FC9               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1361  00244A  0E00               	movlw	0
  1362  00244C  6FCA               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1363  00244E  0E00               	movlw	0
  1364  002450  6FCB               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1365  002452  0EA1               	movlw	low _status_array
  1366  002454  0100               	movlb	0	; () banked
  1367  002456  6FCC               	movwf	CANsendMessage@data& (0+255),b
  1368  002458  0E00               	movlw	high _status_array
  1369  00245A  0100               	movlb	0	; () banked
  1370  00245C  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1371  00245E  0E08               	movlw	8
  1372  002460  0100               	movlb	0	; () banked
  1373  002462  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
  1374  002464  0EBC               	movlw	188
  1375  002466  0100               	movlb	0	; () banked
  1376  002468  6FCF               	movwf	CANsendMessage@flags& (0+255),b
  1377  00246A  EC33  F006         	call	_CANsendMessage	;wreg free
  1378                           
  1379                           ;ABS_Code.c: 357: PORTCbits.RC1 = ~PORTCbits.RC1;
  1380  00246E  7282               	btg	3970,1,c	;volatile
  1381  002470  D000               	goto	l3794
  1382  002472                     l3794:
  1383                           
  1384                           ;ABS_Code.c: 358: }
  1385                           ;ABS_Code.c: 359: if (remote_frame_id == 0b00000001000) {
  1386  002472  0E08               	movlw	8
  1387  002474  0100               	movlb	0	; () banked
  1388  002476  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1389  002478  0100               	movlb	0	; () banked
  1390  00247A  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1391  00247C  0100               	movlb	0	; () banked
  1392  00247E  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1393  002480  0100               	movlb	0	; () banked
  1394  002482  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1395  002484  A4D8               	btfss	status,2,c
  1396  002486  D017               	goto	l3798
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;ABS_Code.c: 360: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1400  002488  C074  F0C8         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1401  00248C  C075  F0C9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1402  002490  C076  F0CA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1403  002494  C077  F0CB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1404  002498  0E99               	movlw	low _speed_array
  1405  00249A  0100               	movlb	0	; () banked
  1406  00249C  6FCC               	movwf	CANsendMessage@data& (0+255),b
  1407  00249E  0E00               	movlw	high _speed_array
  1408  0024A0  0100               	movlb	0	; () banked
  1409  0024A2  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1410  0024A4  0E08               	movlw	8
  1411  0024A6  0100               	movlb	0	; () banked
  1412  0024A8  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
  1413  0024AA  0EBC               	movlw	188
  1414  0024AC  0100               	movlb	0	; () banked
  1415  0024AE  6FCF               	movwf	CANsendMessage@flags& (0+255),b
  1416  0024B0  EC33  F006         	call	_CANsendMessage	;wreg free
  1417  0024B4  D000               	goto	l3798
  1418  0024B6                     l3798:
  1419                           
  1420                           ;ABS_Code.c: 361: }
  1421                           ;ABS_Code.c: 362: if (remote_frame_id == 0b00000001010) {
  1422  0024B6  0E0A               	movlw	10
  1423  0024B8  0100               	movlb	0	; () banked
  1424  0024BA  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1425  0024BC  0100               	movlb	0	; () banked
  1426  0024BE  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1427  0024C0  0100               	movlb	0	; () banked
  1428  0024C2  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1429  0024C4  0100               	movlb	0	; () banked
  1430  0024C6  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1431  0024C8  A4D8               	btfss	status,2,c
  1432  0024CA  D014               	goto	l3804
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;ABS_Code.c: 363: int_counter_1 = 0;
  1436  0024CC  0E00               	movlw	0
  1437  0024CE  0100               	movlb	0	; () banked
  1438  0024D0  6F6C               	movwf	_int_counter_1& (0+255),b	;volatile
  1439  0024D2  0E00               	movlw	0
  1440  0024D4  6F6D               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1441  0024D6  0E00               	movlw	0
  1442  0024D8  6F6E               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1443  0024DA  0E00               	movlw	0
  1444  0024DC  6F6F               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1445                           
  1446                           ;ABS_Code.c: 364: int_counter_2 = 0;
  1447  0024DE  0E00               	movlw	0
  1448  0024E0  0100               	movlb	0	; () banked
  1449  0024E2  6F70               	movwf	_int_counter_2& (0+255),b	;volatile
  1450  0024E4  0E00               	movlw	0
  1451  0024E6  6F71               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1452  0024E8  0E00               	movlw	0
  1453  0024EA  6F72               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1454  0024EC  0E00               	movlw	0
  1455  0024EE  6F73               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;ABS_Code.c: 365: count_flag = 1;
  1459  0024F0  8A41               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1460  0024F2  D000               	goto	l3804
  1461  0024F4                     l3804:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;ABS_Code.c: 366: }
  1465                           ;ABS_Code.c: 367: if (remote_frame_id == 0b00000001001) {
  1466  0024F4  0E09               	movlw	9
  1467  0024F6  0100               	movlb	0	; () banked
  1468  0024F8  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1469  0024FA  0100               	movlb	0	; () banked
  1470  0024FC  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1471  0024FE  0100               	movlb	0	; () banked
  1472  002500  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1473  002502  0100               	movlb	0	; () banked
  1474  002504  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1475  002506  A4D8               	btfss	status,2,c
  1476  002508  D040               	goto	l3820
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;ABS_Code.c: 368: distance_1 = step * (int_counter_1);
  1480  00250A  C090  F0C8         	movff	_step,___wmul@multiplier	;volatile
  1481  00250E  0100               	movlb	0	; () banked
  1482  002510  6BC9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1483  002512  C06C  F0CA         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1484  002516  C06D  F0CB         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1485  00251A  EC3B  F015         	call	___wmul	;wreg free
  1486  00251E  C0C8  F082         	movff	?___wmul,_distance_1	;volatile
  1487  002522  C0C9  F083         	movff	?___wmul+1,_distance_1+1	;volatile
  1488                           
  1489                           ;ABS_Code.c: 369: distance_2 = step * (int_counter_2);
  1490  002526  C090  F0C8         	movff	_step,___wmul@multiplier	;volatile
  1491  00252A  0100               	movlb	0	; () banked
  1492  00252C  6BC9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1493  00252E  C070  F0CA         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1494  002532  C071  F0CB         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1495  002536  EC3B  F015         	call	___wmul	;wreg free
  1496  00253A  C0C8  F084         	movff	?___wmul,_distance_2	;volatile
  1497  00253E  C0C9  F085         	movff	?___wmul+1,_distance_2+1	;volatile
  1498                           
  1499                           ;ABS_Code.c: 370: count_flag = 0;
  1500  002542  9A41               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1501                           
  1502                           ;ABS_Code.c: 371: distance_array[0] = distance_1;
  1503  002544  C082  F091         	movff	_distance_1,_distance_array	;volatile
  1504                           
  1505                           ;ABS_Code.c: 372: distance_array[1] = distance_1 >> 8;
  1506  002548  0100               	movlb	0	; () banked
  1507  00254A  5183               	movf	(_distance_1+1)& (0+255),w,b	;volatile
  1508  00254C  0100               	movlb	0	; () banked
  1509  00254E  6F92               	movwf	(_distance_array+1)& (0+255),b	;volatile
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;ABS_Code.c: 373: distance_array[2] = distance_2;
  1513  002550  C084  F093         	movff	_distance_2,_distance_array+2	;volatile
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;ABS_Code.c: 374: distance_array[3] = distance_2 >> 8;
  1517  002554  0100               	movlb	0	; () banked
  1518  002556  5185               	movf	(_distance_2+1)& (0+255),w,b	;volatile
  1519  002558  0100               	movlb	0	; () banked
  1520  00255A  6F94               	movwf	(_distance_array+3)& (0+255),b	;volatile
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;ABS_Code.c: 375: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1524  00255C  C074  F0C8         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1525  002560  C075  F0C9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1526  002564  C076  F0CA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1527  002568  C077  F0CB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1528  00256C  0E91               	movlw	low _distance_array
  1529  00256E  0100               	movlb	0	; () banked
  1530  002570  6FCC               	movwf	CANsendMessage@data& (0+255),b
  1531  002572  0E00               	movlw	high _distance_array
  1532  002574  0100               	movlb	0	; () banked
  1533  002576  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1534  002578  0E08               	movlw	8
  1535  00257A  0100               	movlb	0	; () banked
  1536  00257C  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
  1537  00257E  0EBC               	movlw	188
  1538  002580  0100               	movlb	0	; () banked
  1539  002582  6FCF               	movwf	CANsendMessage@flags& (0+255),b
  1540  002584  EC33  F006         	call	_CANsendMessage	;wreg free
  1541  002588  D000               	goto	l3820
  1542  00258A                     l3820:
  1543                           
  1544                           ;ABS_Code.c: 376: }
  1545                           ;ABS_Code.c: 377: if (distance_reached_flag == 1) {
  1546  00258A  AC41               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  1547  00258C  D018               	goto	l3824
  1548                           
  1549                           ;ABS_Code.c: 378: CANsendMessage(0b00000001111, remote_frame_array, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1550  00258E  0E0F               	movlw	15
  1551  002590  0100               	movlb	0	; () banked
  1552  002592  6FC8               	movwf	CANsendMessage@identifier& (0+255),b
  1553  002594  0E00               	movlw	0
  1554  002596  6FC9               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1555  002598  0E00               	movlw	0
  1556  00259A  6FCA               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1557  00259C  0E00               	movlw	0
  1558  00259E  6FCB               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1559  0025A0  0EDA               	movlw	low _remote_frame_array
  1560  0025A2  0100               	movlb	0	; () banked
  1561  0025A4  6FCC               	movwf	CANsendMessage@data& (0+255),b
  1562  0025A6  0E00               	movlw	high _remote_frame_array
  1563  0025A8  0100               	movlb	0	; () banked
  1564  0025AA  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1565  0025AC  0E08               	movlw	8
  1566  0025AE  0100               	movlb	0	; () banked
  1567  0025B0  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
  1568  0025B2  0EFC               	movlw	252
  1569  0025B4  0100               	movlb	0	; () banked
  1570  0025B6  6FCF               	movwf	CANsendMessage@flags& (0+255),b
  1571  0025B8  EC33  F006         	call	_CANsendMessage	;wreg free
  1572  0025BC  D000               	goto	l3824
  1573  0025BE                     l3824:
  1574                           
  1575                           ;ABS_Code.c: 379: }
  1576                           ;ABS_Code.c: 380: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1577  0025BE  010F               	movlb	15	; () banked
  1578  0025C0  BD40               	btfsc	64,6,b	;volatile
  1579  0025C2  D006               	goto	l741
  1580                           
  1581                           ; BSR set to: 15
  1582  0025C4  010F               	movlb	15	; () banked
  1583  0025C6  BD30               	btfsc	48,6,b	;volatile
  1584  0025C8  D003               	goto	l741
  1585                           
  1586                           ; BSR set to: 15
  1587                           ;ABS_Code.c: 383: Tx_retry = 0;
  1588                           
  1589                           ;ABS_Code.c: 382: } else {
  1590                           
  1591                           ; BSR set to: 15
  1592                           ;ABS_Code.c: 381: Tx_retry = 1;
  1593  0025CA  9841               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1594                           
  1595                           ;ABS_Code.c: 384: distance_reached_flag = 0;
  1596  0025CC  9C41               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  1597                           
  1598                           ; BSR set to: 15
  1599                           ;ABS_Code.c: 385: }
  1600                           ;ABS_Code.c: 386: } else {
  1601  0025CE  D002               	goto	l752
  1602  0025D0                     l741:
  1603                           
  1604                           ;ABS_Code.c: 387: Tx_retry = 1;
  1605  0025D0  8841               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1606  0025D2  D000               	goto	l752
  1607  0025D4                     l752:
  1608  0025D4  0012               	return		;funcret
  1609  0025D6                     __end_of_remote_frame_handler:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           prodh	equ	0xFF4
  1616                           prodl	equ	0xFF3
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           postdec1	equ	0xFE5
  1620                           fsr1l	equ	0xFE1
  1621                           status	equ	0xFD8
  1622                           
  1623 ;; *************** function ___wmul *****************
  1624 ;; Defined at:
  1625 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  multiplier      2   30[BANK0 ] unsigned int 
  1628 ;;  multiplicand    2   32[BANK0 ] unsigned int 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  product         2   34[BANK0 ] unsigned int 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2   30[BANK0 ] unsigned int 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, prodl, prodh
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1640 ;;      Params:         0       4       0       0
  1641 ;;      Locals:         0       2       0       0
  1642 ;;      Temps:          0       0       0       0
  1643 ;;      Totals:         0       6       0       0
  1644 ;;Total ram usage:        6 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    4
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;;		_remote_frame_handler
  1652 ;;		_delay_ms
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text2
  1657  002A76                     __ptext2:
  1658                           	opt stack 0
  1659  002A76                     ___wmul:
  1660                           	opt stack 25
  1661                           
  1662                           ;incstack = 0
  1663  002A76  0100               	movlb	0	; () banked
  1664  002A78  51C8               	movf	___wmul@multiplier& (0+255),w,b
  1665  002A7A  0100               	movlb	0	; () banked
  1666  002A7C  03CA               	mulwf	___wmul@multiplicand& (0+255),b
  1667  002A7E  CFF3 F0CC          	movff	prodl,___wmul@product
  1668  002A82  CFF4 F0CD          	movff	prodh,___wmul@product+1
  1669  002A86  0100               	movlb	0	; () banked
  1670  002A88  51C8               	movf	___wmul@multiplier& (0+255),w,b
  1671  002A8A  0100               	movlb	0	; () banked
  1672  002A8C  03CB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1673  002A8E  50F3               	movf	prodl,w,c
  1674  002A90  0100               	movlb	0	; () banked
  1675  002A92  27CD               	addwf	(___wmul@product+1)& (0+255),f,b
  1676  002A94  0100               	movlb	0	; () banked
  1677  002A96  51C9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1678  002A98  0100               	movlb	0	; () banked
  1679  002A9A  03CA               	mulwf	___wmul@multiplicand& (0+255),b
  1680  002A9C  50F3               	movf	prodl,w,c
  1681  002A9E  0100               	movlb	0	; () banked
  1682  002AA0  27CD               	addwf	(___wmul@product+1)& (0+255),f,b
  1683                           
  1684                           ; BSR set to: 0
  1685  002AA2  C0CC  F0C8         	movff	___wmul@product,?___wmul
  1686  002AA6  C0CD  F0C9         	movff	___wmul@product+1,?___wmul+1
  1687  002AAA  D000               	goto	l771
  1688  002AAC                     l771:
  1689                           
  1690                           ; BSR set to: 0
  1691  002AAC  0012               	return		;funcret
  1692  002AAE                     __end_of___wmul:
  1693                           	opt stack 0
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           prodh	equ	0xFF4
  1699                           prodl	equ	0xFF3
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           postdec1	equ	0xFE5
  1703                           fsr1l	equ	0xFE1
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function _CANsendMessage *****************
  1707 ;; Defined at:
  1708 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  identifier      4   30[BANK0 ] unsigned long 
  1711 ;;  data            2   34[BANK0 ] PTR unsigned char 
  1712 ;;		 -> remote_frame_array(8), distance_array(8), status_array(8), speed_array(8), 
  1713 ;;  dataLength      1   36[BANK0 ] unsigned char 
  1714 ;;  flags           1   37[BANK0 ] enum E16907
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  tamp            4   42[BANK0 ] unsigned long 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;		None               void
  1719 ;; Registers used:
  1720 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1726 ;;      Params:         0       8       0       0
  1727 ;;      Locals:         0       4       0       0
  1728 ;;      Temps:          0       4       0       0
  1729 ;;      Totals:         0      16       0       0
  1730 ;;Total ram usage:       16 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    4
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_remote_frame_handler
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text3
  1741  000C66                     __ptext3:
  1742                           	opt stack 0
  1743  000C66                     _CANsendMessage:
  1744                           	opt stack 25
  1745                           
  1746                           ;inc\CANlib.h: 296: unsigned long tamp;
  1747                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;incstack = 0
  1751  000C66  010F               	movlb	15	; () banked
  1752  000C68  B740               	btfsc	64,3,b	;volatile
  1753  000C6A  D142               	goto	l381
  1754                           
  1755                           ; BSR set to: 15
  1756                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1757  000C6C  C0CE  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1758                           
  1759                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1760  000C70  0100               	movlb	0	; () banked
  1761  000C72  ADCF               	btfss	CANsendMessage@flags& (0+255),6,b
  1762  000C74  D003               	goto	l382
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1766  000C76  010F               	movlb	15	; () banked
  1767  000C78  8D45               	bsf	69,6,b	;volatile
  1768  000C7A  D002               	goto	l383
  1769  000C7C                     l382:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;inc\CANlib.h: 302: else
  1773                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1774  000C7C  010F               	movlb	15	; () banked
  1775  000C7E  9D45               	bcf	69,6,b	;volatile
  1776  000C80                     l383:
  1777                           
  1778                           ; BSR set to: 15
  1779                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1780  000C80  0100               	movlb	0	; () banked
  1781  000C82  A7CF               	btfss	CANsendMessage@flags& (0+255),3,b
  1782  000C84  D07A               	goto	l384
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;inc\CANlib.h: 306: {
  1786                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1787  000C86  0100               	movlb	0	; () banked
  1788  000C88  51C8               	movf	CANsendMessage@identifier& (0+255),w,b
  1789  000C8A  0100               	movlb	0	; () banked
  1790  000C8C  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1791  000C8E  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1792  000C90  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1793  000C92  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1797  000C94  C0D4  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1801  000C98  0E00               	movlw	0
  1802  000C9A  0100               	movlb	0	; () banked
  1803  000C9C  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1804  000C9E  0100               	movlb	0	; () banked
  1805  000CA0  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1806  000CA2  0EFF               	movlw	255
  1807  000CA4  0100               	movlb	0	; () banked
  1808  000CA6  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1809  000CA8  0100               	movlb	0	; () banked
  1810  000CAA  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1811  000CAC  0E00               	movlw	0
  1812  000CAE  0100               	movlb	0	; () banked
  1813  000CB0  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1814  000CB2  0100               	movlb	0	; () banked
  1815  000CB4  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1816  000CB6  0E00               	movlw	0
  1817  000CB8  0100               	movlb	0	; () banked
  1818  000CBA  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1819  000CBC  0100               	movlb	0	; () banked
  1820  000CBE  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1824  000CC0  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1825  000CC4  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1826  000CC8  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1827  000CCC  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1828  000CD0  C0D1  F0D0         	movff	??_CANsendMessage+1,??_CANsendMessage
  1829  000CD4  C0D2  F0D1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1830  000CD8  C0D3  F0D2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1831  000CDC  0100               	movlb	0	; () banked
  1832  000CDE  6BD3               	clrf	(??_CANsendMessage+3)& (0+255),b
  1833  000CE0  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1834  000CE4  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1835  000CE8  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1836  000CEC  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1840  000CF0  C0D4  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1844  000CF4  0E00               	movlw	0
  1845  000CF6  010F               	movlb	15	; () banked
  1846  000CF8  6F42               	movwf	66,b	;volatile
  1847                           
  1848                           ; BSR set to: 15
  1849                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1850  000CFA  010F               	movlb	15	; () banked
  1851  000CFC  8742               	bsf	66,3,b	;volatile
  1852                           
  1853                           ; BSR set to: 15
  1854                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1855  000CFE  0100               	movlb	0	; () banked
  1856  000D00  A1CA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1857  000D02  D002               	goto	l385
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1861  000D04  010F               	movlb	15	; () banked
  1862  000D06  8142               	bsf	66,0,b	;volatile
  1863  000D08                     l385:
  1864                           
  1865                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1866  000D08  0100               	movlb	0	; () banked
  1867  000D0A  A3CA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1868  000D0C  D002               	goto	l386
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1872  000D0E  010F               	movlb	15	; () banked
  1873  000D10  8342               	bsf	66,1,b	;volatile
  1874  000D12                     l386:
  1875                           
  1876                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1877  000D12  0100               	movlb	0	; () banked
  1878  000D14  A5CA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1879  000D16  D002               	goto	l387
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1883  000D18  010F               	movlb	15	; () banked
  1884  000D1A  8B42               	bsf	66,5,b	;volatile
  1885  000D1C                     l387:
  1886                           
  1887                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1888  000D1C  0100               	movlb	0	; () banked
  1889  000D1E  A7CA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1890  000D20  D002               	goto	l388
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1894  000D22  010F               	movlb	15	; () banked
  1895  000D24  8D42               	bsf	66,6,b	;volatile
  1896  000D26                     l388:
  1897                           
  1898                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1899  000D26  0100               	movlb	0	; () banked
  1900  000D28  A9CA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1901  000D2A  D003               	goto	l3300
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1905  000D2C  010F               	movlb	15	; () banked
  1906  000D2E  8F42               	bsf	66,7,b	;volatile
  1907  000D30  D000               	goto	l3300
  1908  000D32                     l3300:
  1909                           
  1910                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1911  000D32  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1912  000D36  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1913  000D3A  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1914  000D3E  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1915  000D42  0E16               	movlw	22
  1916  000D44  D006               	goto	u3510
  1917  000D46                     u3515:
  1918  000D46  0100               	movlb	0	; () banked
  1919  000D48  90D8               	bcf	status,0,c
  1920  000D4A  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1921  000D4C  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1922  000D4E  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1923  000D50  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  1924  000D52                     u3510:
  1925  000D52  2EE8               	decfsz	wreg,f,c
  1926  000D54  D7F8               	goto	u3515
  1927  000D56  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1928  000D5A  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1929  000D5E  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1930  000D62  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1934  000D66  0100               	movlb	0	; () banked
  1935  000D68  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  1936  000D6A  0100               	movlb	0	; () banked
  1937  000D6C  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1938  000D6E  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1939  000D70  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1940  000D72  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1944  000D74  C0D4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1945                           
  1946                           ;inc\CANlib.h: 332: }
  1947  000D78  D05A               	goto	l3320
  1948  000D7A                     l384:
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;inc\CANlib.h: 334: else
  1952                           ;inc\CANlib.h: 336: {
  1953                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1954  000D7A  010F               	movlb	15	; () banked
  1955  000D7C  9742               	bcf	66,3,b	;volatile
  1956                           
  1957                           ; BSR set to: 15
  1958                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1959  000D7E  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1960  000D82  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1961  000D86  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1962  000D8A  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1963  000D8E  0E04               	movlw	4
  1964  000D90  D006               	goto	u3520
  1965  000D92                     u3525:
  1966  000D92  0100               	movlb	0	; () banked
  1967  000D94  90D8               	bcf	status,0,c
  1968  000D96  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1969  000D98  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1970  000D9A  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1971  000D9C  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  1972  000D9E                     u3520:
  1973  000D9E  2EE8               	decfsz	wreg,f,c
  1974  000DA0  D7F8               	goto	u3525
  1975  000DA2  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1976  000DA6  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1977  000DAA  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1978  000DAE  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1982  000DB2  0100               	movlb	0	; () banked
  1983  000DB4  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  1984  000DB6  0100               	movlb	0	; () banked
  1985  000DB8  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1986  000DBA  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1987  000DBC  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1988  000DBE  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1992  000DC0  C0D4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1996  000DC4  0E07               	movlw	7
  1997  000DC6  0100               	movlb	0	; () banked
  1998  000DC8  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1999  000DCA  0100               	movlb	0	; () banked
  2000  000DCC  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2001  000DCE  0E00               	movlw	0
  2002  000DD0  0100               	movlb	0	; () banked
  2003  000DD2  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2004  000DD4  0100               	movlb	0	; () banked
  2005  000DD6  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2006  000DD8  0E00               	movlw	0
  2007  000DDA  0100               	movlb	0	; () banked
  2008  000DDC  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2009  000DDE  0100               	movlb	0	; () banked
  2010  000DE0  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2011  000DE2  0E00               	movlw	0
  2012  000DE4  0100               	movlb	0	; () banked
  2013  000DE6  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2014  000DE8  0100               	movlb	0	; () banked
  2015  000DEA  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  2019  000DEC  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2020  000DF0  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2021  000DF4  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2022  000DF8  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2023  000DFC  0E05               	movlw	5
  2024  000DFE                     u3535:
  2025  000DFE  90D8               	bcf	status,0,c
  2026  000E00  0100               	movlb	0	; () banked
  2027  000E02  37D0               	rlcf	??_CANsendMessage& (0+255),f,b
  2028  000E04  37D1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2029  000E06  37D2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2030  000E08  37D3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2031  000E0A  2EE8               	decfsz	wreg,f,c
  2032  000E0C  D7F8               	goto	u3535
  2033  000E0E  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2034  000E12  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2035  000E16  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2036  000E1A  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  2040  000E1E  010F               	movlb	15	; () banked
  2041  000E20  5142               	movf	66,w,b	;volatile
  2042  000E22  0B1F               	andlw	31
  2043  000E24  010F               	movlb	15	; () banked
  2044  000E26  6F42               	movwf	66,b	;volatile
  2045                           
  2046                           ; BSR set to: 15
  2047                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  2048  000E28  C0D4  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  2049  000E2C  D000               	goto	l3320
  2050  000E2E                     l3320:
  2051                           
  2052                           ;inc\CANlib.h: 347: }
  2053                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  2054  000E2E  0100               	movlb	0	; () banked
  2055  000E30  A1CF               	btfss	CANsendMessage@flags& (0+255),0,b
  2056  000E32  D003               	goto	l391
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2060  000E34  010F               	movlb	15	; () banked
  2061  000E36  8140               	bsf	64,0,b	;volatile
  2062  000E38  D002               	goto	l392
  2063  000E3A                     l391:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;inc\CANlib.h: 351: else
  2067                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2068  000E3A  010F               	movlb	15	; () banked
  2069  000E3C  9140               	bcf	64,0,b	;volatile
  2070  000E3E                     l392:
  2071                           
  2072                           ; BSR set to: 15
  2073                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2074  000E3E  0100               	movlb	0	; () banked
  2075  000E40  A3CF               	btfss	CANsendMessage@flags& (0+255),1,b
  2076  000E42  D003               	goto	l393
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2080  000E44  010F               	movlb	15	; () banked
  2081  000E46  8340               	bsf	64,1,b	;volatile
  2082  000E48  D003               	goto	l3326
  2083  000E4A                     l393:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;inc\CANlib.h: 355: else
  2087                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2088  000E4A  010F               	movlb	15	; () banked
  2089  000E4C  9340               	bcf	64,1,b	;volatile
  2090  000E4E  D000               	goto	l3326
  2091  000E50                     l3326:
  2092                           
  2093                           ; BSR set to: 15
  2094                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2095  000E50  C0CC  FFD9         	movff	CANsendMessage@data,fsr2l
  2096  000E54  C0CD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2097  000E58  50DF               	movf	indf2,w,c
  2098  000E5A  010F               	movlb	15	; () banked
  2099  000E5C  6F46               	movwf	70,b	;volatile
  2100                           
  2101                           ; BSR set to: 15
  2102                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2103  000E5E  0100               	movlb	0	; () banked
  2104  000E60  EE20 F001          	lfsr	2,1
  2105  000E64  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2106  000E66  26D9               	addwf	fsr2l,f,c
  2107  000E68  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2108  000E6A  22DA               	addwfc	fsr2h,f,c
  2109  000E6C  50DF               	movf	indf2,w,c
  2110  000E6E  010F               	movlb	15	; () banked
  2111  000E70  6F47               	movwf	71,b	;volatile
  2112                           
  2113                           ; BSR set to: 15
  2114                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2115  000E72  0100               	movlb	0	; () banked
  2116  000E74  EE20 F002          	lfsr	2,2
  2117  000E78  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2118  000E7A  26D9               	addwf	fsr2l,f,c
  2119  000E7C  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2120  000E7E  22DA               	addwfc	fsr2h,f,c
  2121  000E80  50DF               	movf	indf2,w,c
  2122  000E82  010F               	movlb	15	; () banked
  2123  000E84  6F48               	movwf	72,b	;volatile
  2124                           
  2125                           ; BSR set to: 15
  2126                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2127  000E86  0100               	movlb	0	; () banked
  2128  000E88  EE20 F003          	lfsr	2,3
  2129  000E8C  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2130  000E8E  26D9               	addwf	fsr2l,f,c
  2131  000E90  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2132  000E92  22DA               	addwfc	fsr2h,f,c
  2133  000E94  50DF               	movf	indf2,w,c
  2134  000E96  010F               	movlb	15	; () banked
  2135  000E98  6F49               	movwf	73,b	;volatile
  2136                           
  2137                           ; BSR set to: 15
  2138                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2139  000E9A  0100               	movlb	0	; () banked
  2140  000E9C  EE20 F004          	lfsr	2,4
  2141  000EA0  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2142  000EA2  26D9               	addwf	fsr2l,f,c
  2143  000EA4  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2144  000EA6  22DA               	addwfc	fsr2h,f,c
  2145  000EA8  50DF               	movf	indf2,w,c
  2146  000EAA  010F               	movlb	15	; () banked
  2147  000EAC  6F4A               	movwf	74,b	;volatile
  2148                           
  2149                           ; BSR set to: 15
  2150                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2151  000EAE  0100               	movlb	0	; () banked
  2152  000EB0  EE20 F005          	lfsr	2,5
  2153  000EB4  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2154  000EB6  26D9               	addwf	fsr2l,f,c
  2155  000EB8  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2156  000EBA  22DA               	addwfc	fsr2h,f,c
  2157  000EBC  50DF               	movf	indf2,w,c
  2158  000EBE  010F               	movlb	15	; () banked
  2159  000EC0  6F4B               	movwf	75,b	;volatile
  2160                           
  2161                           ; BSR set to: 15
  2162                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2163  000EC2  0100               	movlb	0	; () banked
  2164  000EC4  EE20 F006          	lfsr	2,6
  2165  000EC8  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2166  000ECA  26D9               	addwf	fsr2l,f,c
  2167  000ECC  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2168  000ECE  22DA               	addwfc	fsr2h,f,c
  2169  000ED0  50DF               	movf	indf2,w,c
  2170  000ED2  010F               	movlb	15	; () banked
  2171  000ED4  6F4C               	movwf	76,b	;volatile
  2172                           
  2173                           ; BSR set to: 15
  2174                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2175  000ED6  0100               	movlb	0	; () banked
  2176  000ED8  EE20 F007          	lfsr	2,7
  2177  000EDC  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2178  000EDE  26D9               	addwf	fsr2l,f,c
  2179  000EE0  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2180  000EE2  22DA               	addwfc	fsr2h,f,c
  2181  000EE4  50DF               	movf	indf2,w,c
  2182  000EE6  010F               	movlb	15	; () banked
  2183  000EE8  6F4D               	movwf	77,b	;volatile
  2184                           
  2185                           ; BSR set to: 15
  2186                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2187  000EEA  010F               	movlb	15	; () banked
  2188  000EEC  8740               	bsf	64,3,b	;volatile
  2189                           
  2190                           ; BSR set to: 15
  2191                           ;inc\CANlib.h: 368: return;
  2192  000EEE  D28A               	goto	l395
  2193  000EF0                     l381:
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;inc\CANlib.h: 369: }
  2197                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2198  000EF0  010F               	movlb	15	; () banked
  2199  000EF2  B730               	btfsc	48,3,b	;volatile
  2200  000EF4  D142               	goto	l396
  2201                           
  2202                           ; BSR set to: 15
  2203                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2204  000EF6  C0CE  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2205                           
  2206                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2207  000EFA  0100               	movlb	0	; () banked
  2208  000EFC  ADCF               	btfss	CANsendMessage@flags& (0+255),6,b
  2209  000EFE  D003               	goto	l397
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2213  000F00  010F               	movlb	15	; () banked
  2214  000F02  8D35               	bsf	53,6,b	;volatile
  2215  000F04  D002               	goto	l398
  2216  000F06                     l397:
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;inc\CANlib.h: 378: else
  2220                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2221  000F06  010F               	movlb	15	; () banked
  2222  000F08  9D35               	bcf	53,6,b	;volatile
  2223  000F0A                     l398:
  2224                           
  2225                           ; BSR set to: 15
  2226                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2227  000F0A  0100               	movlb	0	; () banked
  2228  000F0C  A7CF               	btfss	CANsendMessage@flags& (0+255),3,b
  2229  000F0E  D07A               	goto	l399
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;inc\CANlib.h: 382: {
  2233                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2234  000F10  0100               	movlb	0	; () banked
  2235  000F12  51C8               	movf	CANsendMessage@identifier& (0+255),w,b
  2236  000F14  0100               	movlb	0	; () banked
  2237  000F16  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2238  000F18  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2239  000F1A  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2240  000F1C  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2244  000F1E  C0D4  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2248  000F22  0E00               	movlw	0
  2249  000F24  0100               	movlb	0	; () banked
  2250  000F26  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2251  000F28  0100               	movlb	0	; () banked
  2252  000F2A  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2253  000F2C  0EFF               	movlw	255
  2254  000F2E  0100               	movlb	0	; () banked
  2255  000F30  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2256  000F32  0100               	movlb	0	; () banked
  2257  000F34  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2258  000F36  0E00               	movlw	0
  2259  000F38  0100               	movlb	0	; () banked
  2260  000F3A  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2261  000F3C  0100               	movlb	0	; () banked
  2262  000F3E  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2263  000F40  0E00               	movlw	0
  2264  000F42  0100               	movlb	0	; () banked
  2265  000F44  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2266  000F46  0100               	movlb	0	; () banked
  2267  000F48  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2271  000F4A  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2272  000F4E  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2273  000F52  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2274  000F56  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2275  000F5A  C0D1  F0D0         	movff	??_CANsendMessage+1,??_CANsendMessage
  2276  000F5E  C0D2  F0D1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2277  000F62  C0D3  F0D2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2278  000F66  0100               	movlb	0	; () banked
  2279  000F68  6BD3               	clrf	(??_CANsendMessage+3)& (0+255),b
  2280  000F6A  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2281  000F6E  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2282  000F72  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2283  000F76  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2287  000F7A  C0D4  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2291  000F7E  0E00               	movlw	0
  2292  000F80  010F               	movlb	15	; () banked
  2293  000F82  6F32               	movwf	50,b	;volatile
  2294                           
  2295                           ; BSR set to: 15
  2296                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2297  000F84  010F               	movlb	15	; () banked
  2298  000F86  8732               	bsf	50,3,b	;volatile
  2299                           
  2300                           ; BSR set to: 15
  2301                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2302  000F88  0100               	movlb	0	; () banked
  2303  000F8A  A1CA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2304  000F8C  D002               	goto	l400
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2308  000F8E  010F               	movlb	15	; () banked
  2309  000F90  8132               	bsf	50,0,b	;volatile
  2310  000F92                     l400:
  2311                           
  2312                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2313  000F92  0100               	movlb	0	; () banked
  2314  000F94  A3CA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2315  000F96  D002               	goto	l401
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2319  000F98  010F               	movlb	15	; () banked
  2320  000F9A  8332               	bsf	50,1,b	;volatile
  2321  000F9C                     l401:
  2322                           
  2323                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2324  000F9C  0100               	movlb	0	; () banked
  2325  000F9E  A5CA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2326  000FA0  D002               	goto	l402
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2330  000FA2  010F               	movlb	15	; () banked
  2331  000FA4  8B32               	bsf	50,5,b	;volatile
  2332  000FA6                     l402:
  2333                           
  2334                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2335  000FA6  0100               	movlb	0	; () banked
  2336  000FA8  A7CA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2337  000FAA  D002               	goto	l403
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2341  000FAC  010F               	movlb	15	; () banked
  2342  000FAE  8D32               	bsf	50,6,b	;volatile
  2343  000FB0                     l403:
  2344                           
  2345                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2346  000FB0  0100               	movlb	0	; () banked
  2347  000FB2  A9CA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2348  000FB4  D003               	goto	l3376
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2352  000FB6  010F               	movlb	15	; () banked
  2353  000FB8  8F32               	bsf	50,7,b	;volatile
  2354  000FBA  D000               	goto	l3376
  2355  000FBC                     l3376:
  2356                           
  2357                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2358  000FBC  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2359  000FC0  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2360  000FC4  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2361  000FC8  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2362  000FCC  0E16               	movlw	22
  2363  000FCE  D006               	goto	u3640
  2364  000FD0                     u3645:
  2365  000FD0  0100               	movlb	0	; () banked
  2366  000FD2  90D8               	bcf	status,0,c
  2367  000FD4  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2368  000FD6  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2369  000FD8  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2370  000FDA  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2371  000FDC                     u3640:
  2372  000FDC  2EE8               	decfsz	wreg,f,c
  2373  000FDE  D7F8               	goto	u3645
  2374  000FE0  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2375  000FE4  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2376  000FE8  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2377  000FEC  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2381  000FF0  0100               	movlb	0	; () banked
  2382  000FF2  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2383  000FF4  0100               	movlb	0	; () banked
  2384  000FF6  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2385  000FF8  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2386  000FFA  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2387  000FFC  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2391  000FFE  C0D4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2392                           
  2393                           ;inc\CANlib.h: 407: }
  2394  001002  D05A               	goto	l3396
  2395  001004                     l399:
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;inc\CANlib.h: 409: else
  2399                           ;inc\CANlib.h: 411: {
  2400                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2401  001004  010F               	movlb	15	; () banked
  2402  001006  9732               	bcf	50,3,b	;volatile
  2403                           
  2404                           ; BSR set to: 15
  2405                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2406  001008  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2407  00100C  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2408  001010  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2409  001014  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2410  001018  0E04               	movlw	4
  2411  00101A  D006               	goto	u3650
  2412  00101C                     u3655:
  2413  00101C  0100               	movlb	0	; () banked
  2414  00101E  90D8               	bcf	status,0,c
  2415  001020  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2416  001022  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2417  001024  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2418  001026  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2419  001028                     u3650:
  2420  001028  2EE8               	decfsz	wreg,f,c
  2421  00102A  D7F8               	goto	u3655
  2422  00102C  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2423  001030  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2424  001034  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2425  001038  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2429  00103C  0100               	movlb	0	; () banked
  2430  00103E  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2431  001040  0100               	movlb	0	; () banked
  2432  001042  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2433  001044  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2434  001046  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2435  001048  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2439  00104A  C0D4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2443  00104E  0E07               	movlw	7
  2444  001050  0100               	movlb	0	; () banked
  2445  001052  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2446  001054  0100               	movlb	0	; () banked
  2447  001056  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2448  001058  0E00               	movlw	0
  2449  00105A  0100               	movlb	0	; () banked
  2450  00105C  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2451  00105E  0100               	movlb	0	; () banked
  2452  001060  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2453  001062  0E00               	movlw	0
  2454  001064  0100               	movlb	0	; () banked
  2455  001066  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2456  001068  0100               	movlb	0	; () banked
  2457  00106A  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2458  00106C  0E00               	movlw	0
  2459  00106E  0100               	movlb	0	; () banked
  2460  001070  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2461  001072  0100               	movlb	0	; () banked
  2462  001074  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2466  001076  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2467  00107A  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2468  00107E  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2469  001082  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2470  001086  0E05               	movlw	5
  2471  001088                     u3665:
  2472  001088  90D8               	bcf	status,0,c
  2473  00108A  0100               	movlb	0	; () banked
  2474  00108C  37D0               	rlcf	??_CANsendMessage& (0+255),f,b
  2475  00108E  37D1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2476  001090  37D2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2477  001092  37D3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2478  001094  2EE8               	decfsz	wreg,f,c
  2479  001096  D7F8               	goto	u3665
  2480  001098  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2481  00109C  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2482  0010A0  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2483  0010A4  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2487  0010A8  010F               	movlb	15	; () banked
  2488  0010AA  5132               	movf	50,w,b	;volatile
  2489  0010AC  0B1F               	andlw	31
  2490  0010AE  010F               	movlb	15	; () banked
  2491  0010B0  6F32               	movwf	50,b	;volatile
  2492                           
  2493                           ; BSR set to: 15
  2494                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2495  0010B2  C0D4  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2496  0010B6  D000               	goto	l3396
  2497  0010B8                     l3396:
  2498                           
  2499                           ;inc\CANlib.h: 422: }
  2500                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2501  0010B8  0100               	movlb	0	; () banked
  2502  0010BA  A1CF               	btfss	CANsendMessage@flags& (0+255),0,b
  2503  0010BC  D003               	goto	l406
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2507  0010BE  010F               	movlb	15	; () banked
  2508  0010C0  8130               	bsf	48,0,b	;volatile
  2509  0010C2  D002               	goto	l407
  2510  0010C4                     l406:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;inc\CANlib.h: 426: else
  2514                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2515  0010C4  010F               	movlb	15	; () banked
  2516  0010C6  9130               	bcf	48,0,b	;volatile
  2517  0010C8                     l407:
  2518                           
  2519                           ; BSR set to: 15
  2520                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2521  0010C8  0100               	movlb	0	; () banked
  2522  0010CA  A3CF               	btfss	CANsendMessage@flags& (0+255),1,b
  2523  0010CC  D003               	goto	l408
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2527  0010CE  010F               	movlb	15	; () banked
  2528  0010D0  8330               	bsf	48,1,b	;volatile
  2529  0010D2  D003               	goto	l3402
  2530  0010D4                     l408:
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;inc\CANlib.h: 430: else
  2534                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2535  0010D4  010F               	movlb	15	; () banked
  2536  0010D6  9330               	bcf	48,1,b	;volatile
  2537  0010D8  D000               	goto	l3402
  2538  0010DA                     l3402:
  2539                           
  2540                           ; BSR set to: 15
  2541                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2542  0010DA  C0CC  FFD9         	movff	CANsendMessage@data,fsr2l
  2543  0010DE  C0CD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2544  0010E2  50DF               	movf	indf2,w,c
  2545  0010E4  010F               	movlb	15	; () banked
  2546  0010E6  6F36               	movwf	54,b	;volatile
  2547                           
  2548                           ; BSR set to: 15
  2549                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2550  0010E8  0100               	movlb	0	; () banked
  2551  0010EA  EE20 F001          	lfsr	2,1
  2552  0010EE  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2553  0010F0  26D9               	addwf	fsr2l,f,c
  2554  0010F2  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2555  0010F4  22DA               	addwfc	fsr2h,f,c
  2556  0010F6  50DF               	movf	indf2,w,c
  2557  0010F8  010F               	movlb	15	; () banked
  2558  0010FA  6F37               	movwf	55,b	;volatile
  2559                           
  2560                           ; BSR set to: 15
  2561                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2562  0010FC  0100               	movlb	0	; () banked
  2563  0010FE  EE20 F002          	lfsr	2,2
  2564  001102  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2565  001104  26D9               	addwf	fsr2l,f,c
  2566  001106  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2567  001108  22DA               	addwfc	fsr2h,f,c
  2568  00110A  50DF               	movf	indf2,w,c
  2569  00110C  010F               	movlb	15	; () banked
  2570  00110E  6F38               	movwf	56,b	;volatile
  2571                           
  2572                           ; BSR set to: 15
  2573                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2574  001110  0100               	movlb	0	; () banked
  2575  001112  EE20 F003          	lfsr	2,3
  2576  001116  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2577  001118  26D9               	addwf	fsr2l,f,c
  2578  00111A  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2579  00111C  22DA               	addwfc	fsr2h,f,c
  2580  00111E  50DF               	movf	indf2,w,c
  2581  001120  010F               	movlb	15	; () banked
  2582  001122  6F39               	movwf	57,b	;volatile
  2583                           
  2584                           ; BSR set to: 15
  2585                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2586  001124  0100               	movlb	0	; () banked
  2587  001126  EE20 F004          	lfsr	2,4
  2588  00112A  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2589  00112C  26D9               	addwf	fsr2l,f,c
  2590  00112E  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2591  001130  22DA               	addwfc	fsr2h,f,c
  2592  001132  50DF               	movf	indf2,w,c
  2593  001134  010F               	movlb	15	; () banked
  2594  001136  6F3A               	movwf	58,b	;volatile
  2595                           
  2596                           ; BSR set to: 15
  2597                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2598  001138  0100               	movlb	0	; () banked
  2599  00113A  EE20 F005          	lfsr	2,5
  2600  00113E  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2601  001140  26D9               	addwf	fsr2l,f,c
  2602  001142  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2603  001144  22DA               	addwfc	fsr2h,f,c
  2604  001146  50DF               	movf	indf2,w,c
  2605  001148  010F               	movlb	15	; () banked
  2606  00114A  6F3B               	movwf	59,b	;volatile
  2607                           
  2608                           ; BSR set to: 15
  2609                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2610  00114C  0100               	movlb	0	; () banked
  2611  00114E  EE20 F006          	lfsr	2,6
  2612  001152  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2613  001154  26D9               	addwf	fsr2l,f,c
  2614  001156  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2615  001158  22DA               	addwfc	fsr2h,f,c
  2616  00115A  50DF               	movf	indf2,w,c
  2617  00115C  010F               	movlb	15	; () banked
  2618  00115E  6F3C               	movwf	60,b	;volatile
  2619                           
  2620                           ; BSR set to: 15
  2621                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2622  001160  0100               	movlb	0	; () banked
  2623  001162  EE20 F007          	lfsr	2,7
  2624  001166  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2625  001168  26D9               	addwf	fsr2l,f,c
  2626  00116A  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2627  00116C  22DA               	addwfc	fsr2h,f,c
  2628  00116E  50DF               	movf	indf2,w,c
  2629  001170  010F               	movlb	15	; () banked
  2630  001172  6F3D               	movwf	61,b	;volatile
  2631                           
  2632                           ; BSR set to: 15
  2633                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2634  001174  010F               	movlb	15	; () banked
  2635  001176  8730               	bsf	48,3,b	;volatile
  2636                           
  2637                           ; BSR set to: 15
  2638                           ;inc\CANlib.h: 444: return;
  2639  001178  D145               	goto	l395
  2640  00117A                     l396:
  2641                           
  2642                           ; BSR set to: 15
  2643                           ;inc\CANlib.h: 445: }
  2644                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2645  00117A  010F               	movlb	15	; () banked
  2646  00117C  B720               	btfsc	32,3,b	;volatile
  2647  00117E  D142               	goto	l395
  2648                           
  2649                           ; BSR set to: 15
  2650                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2651  001180  C0CE  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2652                           
  2653                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2654  001184  0100               	movlb	0	; () banked
  2655  001186  ADCF               	btfss	CANsendMessage@flags& (0+255),6,b
  2656  001188  D003               	goto	l411
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2660  00118A  010F               	movlb	15	; () banked
  2661  00118C  8D25               	bsf	37,6,b	;volatile
  2662  00118E  D002               	goto	l412
  2663  001190                     l411:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;inc\CANlib.h: 454: else
  2667                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2668  001190  010F               	movlb	15	; () banked
  2669  001192  9D25               	bcf	37,6,b	;volatile
  2670  001194                     l412:
  2671                           
  2672                           ; BSR set to: 15
  2673                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2674  001194  0100               	movlb	0	; () banked
  2675  001196  A7CF               	btfss	CANsendMessage@flags& (0+255),3,b
  2676  001198  D07A               	goto	l413
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;inc\CANlib.h: 458: {
  2680                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2681  00119A  0100               	movlb	0	; () banked
  2682  00119C  51C8               	movf	CANsendMessage@identifier& (0+255),w,b
  2683  00119E  0100               	movlb	0	; () banked
  2684  0011A0  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2685  0011A2  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2686  0011A4  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2687  0011A6  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2691  0011A8  C0D4  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2695  0011AC  0E00               	movlw	0
  2696  0011AE  0100               	movlb	0	; () banked
  2697  0011B0  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2698  0011B2  0100               	movlb	0	; () banked
  2699  0011B4  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2700  0011B6  0EFF               	movlw	255
  2701  0011B8  0100               	movlb	0	; () banked
  2702  0011BA  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2703  0011BC  0100               	movlb	0	; () banked
  2704  0011BE  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2705  0011C0  0E00               	movlw	0
  2706  0011C2  0100               	movlb	0	; () banked
  2707  0011C4  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2708  0011C6  0100               	movlb	0	; () banked
  2709  0011C8  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2710  0011CA  0E00               	movlw	0
  2711  0011CC  0100               	movlb	0	; () banked
  2712  0011CE  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2713  0011D0  0100               	movlb	0	; () banked
  2714  0011D2  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2718  0011D4  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2719  0011D8  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2720  0011DC  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2721  0011E0  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2722  0011E4  C0D1  F0D0         	movff	??_CANsendMessage+1,??_CANsendMessage
  2723  0011E8  C0D2  F0D1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2724  0011EC  C0D3  F0D2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2725  0011F0  0100               	movlb	0	; () banked
  2726  0011F2  6BD3               	clrf	(??_CANsendMessage+3)& (0+255),b
  2727  0011F4  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2728  0011F8  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2729  0011FC  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2730  001200  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2734  001204  C0D4  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2738  001208  0E00               	movlw	0
  2739  00120A  010F               	movlb	15	; () banked
  2740  00120C  6F22               	movwf	34,b	;volatile
  2741                           
  2742                           ; BSR set to: 15
  2743                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2744  00120E  010F               	movlb	15	; () banked
  2745  001210  8722               	bsf	34,3,b	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2749  001212  0100               	movlb	0	; () banked
  2750  001214  A1CA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2751  001216  D002               	goto	l414
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2755  001218  010F               	movlb	15	; () banked
  2756  00121A  8122               	bsf	34,0,b	;volatile
  2757  00121C                     l414:
  2758                           
  2759                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2760  00121C  0100               	movlb	0	; () banked
  2761  00121E  A3CA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2762  001220  D002               	goto	l415
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2766  001222  010F               	movlb	15	; () banked
  2767  001224  8322               	bsf	34,1,b	;volatile
  2768  001226                     l415:
  2769                           
  2770                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2771  001226  0100               	movlb	0	; () banked
  2772  001228  A5CA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2773  00122A  D002               	goto	l416
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2777  00122C  010F               	movlb	15	; () banked
  2778  00122E  8B22               	bsf	34,5,b	;volatile
  2779  001230                     l416:
  2780                           
  2781                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2782  001230  0100               	movlb	0	; () banked
  2783  001232  A7CA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2784  001234  D002               	goto	l417
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2788  001236  010F               	movlb	15	; () banked
  2789  001238  8D22               	bsf	34,6,b	;volatile
  2790  00123A                     l417:
  2791                           
  2792                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2793  00123A  0100               	movlb	0	; () banked
  2794  00123C  A9CA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2795  00123E  D003               	goto	l3452
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2799  001240  010F               	movlb	15	; () banked
  2800  001242  8F22               	bsf	34,7,b	;volatile
  2801  001244  D000               	goto	l3452
  2802  001246                     l3452:
  2803                           
  2804                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2805  001246  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2806  00124A  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2807  00124E  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2808  001252  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2809  001256  0E16               	movlw	22
  2810  001258  D006               	goto	u3770
  2811  00125A                     u3775:
  2812  00125A  0100               	movlb	0	; () banked
  2813  00125C  90D8               	bcf	status,0,c
  2814  00125E  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2815  001260  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2816  001262  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2817  001264  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2818  001266                     u3770:
  2819  001266  2EE8               	decfsz	wreg,f,c
  2820  001268  D7F8               	goto	u3775
  2821  00126A  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2822  00126E  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2823  001272  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2824  001276  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2828  00127A  0100               	movlb	0	; () banked
  2829  00127C  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2830  00127E  0100               	movlb	0	; () banked
  2831  001280  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2832  001282  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2833  001284  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2834  001286  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2838  001288  C0D4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2839                           
  2840                           ;inc\CANlib.h: 483: }
  2841  00128C  D05A               	goto	l3472
  2842  00128E                     l413:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;inc\CANlib.h: 485: else
  2846                           ;inc\CANlib.h: 487: {
  2847                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2848  00128E  010F               	movlb	15	; () banked
  2849  001290  9722               	bcf	34,3,b	;volatile
  2850                           
  2851                           ; BSR set to: 15
  2852                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2853  001292  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2854  001296  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2855  00129A  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2856  00129E  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2857  0012A2  0E04               	movlw	4
  2858  0012A4  D006               	goto	u3780
  2859  0012A6                     u3785:
  2860  0012A6  0100               	movlb	0	; () banked
  2861  0012A8  90D8               	bcf	status,0,c
  2862  0012AA  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2863  0012AC  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2864  0012AE  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2865  0012B0  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2866  0012B2                     u3780:
  2867  0012B2  2EE8               	decfsz	wreg,f,c
  2868  0012B4  D7F8               	goto	u3785
  2869  0012B6  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2870  0012BA  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2871  0012BE  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2872  0012C2  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2876  0012C6  0100               	movlb	0	; () banked
  2877  0012C8  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2878  0012CA  0100               	movlb	0	; () banked
  2879  0012CC  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2880  0012CE  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2881  0012D0  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2882  0012D2  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2886  0012D4  C0D4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2890  0012D8  0E07               	movlw	7
  2891  0012DA  0100               	movlb	0	; () banked
  2892  0012DC  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2893  0012DE  0100               	movlb	0	; () banked
  2894  0012E0  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2895  0012E2  0E00               	movlw	0
  2896  0012E4  0100               	movlb	0	; () banked
  2897  0012E6  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2898  0012E8  0100               	movlb	0	; () banked
  2899  0012EA  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2900  0012EC  0E00               	movlw	0
  2901  0012EE  0100               	movlb	0	; () banked
  2902  0012F0  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2903  0012F2  0100               	movlb	0	; () banked
  2904  0012F4  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2905  0012F6  0E00               	movlw	0
  2906  0012F8  0100               	movlb	0	; () banked
  2907  0012FA  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2908  0012FC  0100               	movlb	0	; () banked
  2909  0012FE  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2913  001300  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2914  001304  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2915  001308  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2916  00130C  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2917  001310  0E05               	movlw	5
  2918  001312                     u3795:
  2919  001312  90D8               	bcf	status,0,c
  2920  001314  0100               	movlb	0	; () banked
  2921  001316  37D0               	rlcf	??_CANsendMessage& (0+255),f,b
  2922  001318  37D1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2923  00131A  37D2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2924  00131C  37D3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2925  00131E  2EE8               	decfsz	wreg,f,c
  2926  001320  D7F8               	goto	u3795
  2927  001322  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2928  001326  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2929  00132A  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2930  00132E  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2934  001332  010F               	movlb	15	; () banked
  2935  001334  5122               	movf	34,w,b	;volatile
  2936  001336  0B1F               	andlw	31
  2937  001338  010F               	movlb	15	; () banked
  2938  00133A  6F22               	movwf	34,b	;volatile
  2939                           
  2940                           ; BSR set to: 15
  2941                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2942  00133C  C0D4  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2943  001340  D000               	goto	l3472
  2944  001342                     l3472:
  2945                           
  2946                           ;inc\CANlib.h: 498: }
  2947                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2948  001342  0100               	movlb	0	; () banked
  2949  001344  A1CF               	btfss	CANsendMessage@flags& (0+255),0,b
  2950  001346  D003               	goto	l420
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2954  001348  010F               	movlb	15	; () banked
  2955  00134A  8120               	bsf	32,0,b	;volatile
  2956  00134C  D002               	goto	l421
  2957  00134E                     l420:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;inc\CANlib.h: 502: else
  2961                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2962  00134E  010F               	movlb	15	; () banked
  2963  001350  9120               	bcf	32,0,b	;volatile
  2964  001352                     l421:
  2965                           
  2966                           ; BSR set to: 15
  2967                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2968  001352  0100               	movlb	0	; () banked
  2969  001354  A3CF               	btfss	CANsendMessage@flags& (0+255),1,b
  2970  001356  D003               	goto	l422
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2974  001358  010F               	movlb	15	; () banked
  2975  00135A  8320               	bsf	32,1,b	;volatile
  2976  00135C  D003               	goto	l3478
  2977  00135E                     l422:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;inc\CANlib.h: 506: else
  2981                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2982  00135E  010F               	movlb	15	; () banked
  2983  001360  9320               	bcf	32,1,b	;volatile
  2984  001362  D000               	goto	l3478
  2985  001364                     l3478:
  2986                           
  2987                           ; BSR set to: 15
  2988                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2989  001364  C0CC  FFD9         	movff	CANsendMessage@data,fsr2l
  2990  001368  C0CD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2991  00136C  50DF               	movf	indf2,w,c
  2992  00136E  010F               	movlb	15	; () banked
  2993  001370  6F26               	movwf	38,b	;volatile
  2994                           
  2995                           ; BSR set to: 15
  2996                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2997  001372  0100               	movlb	0	; () banked
  2998  001374  EE20 F001          	lfsr	2,1
  2999  001378  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3000  00137A  26D9               	addwf	fsr2l,f,c
  3001  00137C  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3002  00137E  22DA               	addwfc	fsr2h,f,c
  3003  001380  50DF               	movf	indf2,w,c
  3004  001382  010F               	movlb	15	; () banked
  3005  001384  6F27               	movwf	39,b	;volatile
  3006                           
  3007                           ; BSR set to: 15
  3008                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  3009  001386  0100               	movlb	0	; () banked
  3010  001388  EE20 F002          	lfsr	2,2
  3011  00138C  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3012  00138E  26D9               	addwf	fsr2l,f,c
  3013  001390  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3014  001392  22DA               	addwfc	fsr2h,f,c
  3015  001394  50DF               	movf	indf2,w,c
  3016  001396  010F               	movlb	15	; () banked
  3017  001398  6F28               	movwf	40,b	;volatile
  3018                           
  3019                           ; BSR set to: 15
  3020                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  3021  00139A  0100               	movlb	0	; () banked
  3022  00139C  EE20 F003          	lfsr	2,3
  3023  0013A0  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3024  0013A2  26D9               	addwf	fsr2l,f,c
  3025  0013A4  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3026  0013A6  22DA               	addwfc	fsr2h,f,c
  3027  0013A8  50DF               	movf	indf2,w,c
  3028  0013AA  010F               	movlb	15	; () banked
  3029  0013AC  6F29               	movwf	41,b	;volatile
  3030                           
  3031                           ; BSR set to: 15
  3032                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  3033  0013AE  0100               	movlb	0	; () banked
  3034  0013B0  EE20 F004          	lfsr	2,4
  3035  0013B4  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3036  0013B6  26D9               	addwf	fsr2l,f,c
  3037  0013B8  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3038  0013BA  22DA               	addwfc	fsr2h,f,c
  3039  0013BC  50DF               	movf	indf2,w,c
  3040  0013BE  010F               	movlb	15	; () banked
  3041  0013C0  6F2A               	movwf	42,b	;volatile
  3042                           
  3043                           ; BSR set to: 15
  3044                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  3045  0013C2  0100               	movlb	0	; () banked
  3046  0013C4  EE20 F005          	lfsr	2,5
  3047  0013C8  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3048  0013CA  26D9               	addwf	fsr2l,f,c
  3049  0013CC  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3050  0013CE  22DA               	addwfc	fsr2h,f,c
  3051  0013D0  50DF               	movf	indf2,w,c
  3052  0013D2  010F               	movlb	15	; () banked
  3053  0013D4  6F2B               	movwf	43,b	;volatile
  3054                           
  3055                           ; BSR set to: 15
  3056                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  3057  0013D6  0100               	movlb	0	; () banked
  3058  0013D8  EE20 F006          	lfsr	2,6
  3059  0013DC  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3060  0013DE  26D9               	addwf	fsr2l,f,c
  3061  0013E0  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3062  0013E2  22DA               	addwfc	fsr2h,f,c
  3063  0013E4  50DF               	movf	indf2,w,c
  3064  0013E6  010F               	movlb	15	; () banked
  3065  0013E8  6F2C               	movwf	44,b	;volatile
  3066                           
  3067                           ; BSR set to: 15
  3068                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  3069  0013EA  0100               	movlb	0	; () banked
  3070  0013EC  EE20 F007          	lfsr	2,7
  3071  0013F0  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3072  0013F2  26D9               	addwf	fsr2l,f,c
  3073  0013F4  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3074  0013F6  22DA               	addwfc	fsr2h,f,c
  3075  0013F8  50DF               	movf	indf2,w,c
  3076  0013FA  010F               	movlb	15	; () banked
  3077  0013FC  6F2D               	movwf	45,b	;volatile
  3078                           
  3079                           ; BSR set to: 15
  3080                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3081  0013FE  010F               	movlb	15	; () banked
  3082  001400  8720               	bsf	32,3,b	;volatile
  3083                           
  3084                           ; BSR set to: 15
  3085                           ;inc\CANlib.h: 520: return;
  3086  001402  D000               	goto	l395
  3087  001404                     l395:
  3088                           
  3089                           ; BSR set to: 15
  3090  001404  0012               	return		;funcret
  3091  001406                     __end_of_CANsendMessage:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           postinc0	equ	0xFEE
  3100                           wreg	equ	0xFE8
  3101                           postdec1	equ	0xFE5
  3102                           fsr1l	equ	0xFE1
  3103                           indf2	equ	0xFDF
  3104                           fsr2h	equ	0xFDA
  3105                           fsr2l	equ	0xFD9
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _CANisTxReady *****************
  3109 ;; Defined at:
  3110 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      unsigned char 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3124 ;;      Params:         0       0       0       0
  3125 ;;      Locals:         0       1       0       0
  3126 ;;      Temps:          0       0       0       0
  3127 ;;      Totals:         0       1       0       0
  3128 ;;Total ram usage:        1 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:    4
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_remote_frame_handler
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text4
  3139  002AD6                     __ptext4:
  3140                           	opt stack 0
  3141  002AD6                     _CANisTxReady:
  3142                           	opt stack 25
  3143                           
  3144                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3145                           
  3146                           ; BSR set to: 15
  3147                           ;incstack = 0
  3148  002AD6  0E01               	movlw	1
  3149  002AD8  0100               	movlb	0	; () banked
  3150  002ADA  6FC8               	movwf	_CANisTxReady$3278& (0+255),b
  3151                           
  3152                           ; BSR set to: 0
  3153  002ADC  010F               	movlb	15	; () banked
  3154  002ADE  A740               	btfss	64,3,b	;volatile
  3155  002AE0  D009               	goto	l574
  3156                           
  3157                           ; BSR set to: 15
  3158  002AE2  010F               	movlb	15	; () banked
  3159  002AE4  A730               	btfss	48,3,b	;volatile
  3160  002AE6  D006               	goto	l574
  3161                           
  3162                           ; BSR set to: 15
  3163  002AE8  010F               	movlb	15	; () banked
  3164  002AEA  A720               	btfss	32,3,b	;volatile
  3165  002AEC  D003               	goto	l574
  3166                           
  3167                           ; BSR set to: 15
  3168  002AEE  0E00               	movlw	0
  3169  002AF0  0100               	movlb	0	; () banked
  3170  002AF2  6FC8               	movwf	_CANisTxReady$3278& (0+255),b
  3171  002AF4                     l574:
  3172  002AF4  0100               	movlb	0	; () banked
  3173  002AF6  51C8               	movf	_CANisTxReady$3278& (0+255),w,b
  3174  002AF8  D000               	goto	l575
  3175  002AFA                     l575:
  3176                           
  3177                           ; BSR set to: 0
  3178  002AFA  0012               	return		;funcret
  3179  002AFC                     __end_of_CANisTxReady:
  3180                           	opt stack 0
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           prodh	equ	0xFF4
  3186                           prodl	equ	0xFF3
  3187                           postinc0	equ	0xFEE
  3188                           wreg	equ	0xFE8
  3189                           postdec1	equ	0xFE5
  3190                           fsr1l	equ	0xFE1
  3191                           indf2	equ	0xFDF
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _board_initialization *****************
  3197 ;; Defined at:
  3198 ;;		line 397 in file "ABS_Code.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;		None               void
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3212 ;;      Params:         0       0       0       0
  3213 ;;      Locals:         0       0       0       0
  3214 ;;      Temps:          0       0       0       0
  3215 ;;      Totals:         0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    6
  3219 ;; This function calls:
  3220 ;;		_CANInitialize
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text5
  3227  0028A2                     __ptext5:
  3228                           	opt stack 0
  3229  0028A2                     _board_initialization:
  3230                           	opt stack 24
  3231                           
  3232                           ;ABS_Code.c: 399: LATA = 0x00;
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;incstack = 0
  3236  0028A2  0E00               	movlw	0
  3237  0028A4  6E89               	movwf	3977,c	;volatile
  3238                           
  3239                           ;ABS_Code.c: 400: TRISA = 0b11111101;
  3240  0028A6  0EFD               	movlw	253
  3241  0028A8  6E92               	movwf	3986,c	;volatile
  3242                           
  3243                           ;ABS_Code.c: 401: LATB = 0x00;
  3244  0028AA  0E00               	movlw	0
  3245  0028AC  6E8A               	movwf	3978,c	;volatile
  3246                           
  3247                           ;ABS_Code.c: 402: TRISB = 0b11111111;
  3248  0028AE  6893               	setf	3987,c	;volatile
  3249                           
  3250                           ;ABS_Code.c: 403: LATC = 0x00;
  3251  0028B0  0E00               	movlw	0
  3252  0028B2  6E8B               	movwf	3979,c	;volatile
  3253                           
  3254                           ;ABS_Code.c: 404: TRISC = 0b11111100;
  3255  0028B4  0EFC               	movlw	252
  3256  0028B6  6E94               	movwf	3988,c	;volatile
  3257                           
  3258                           ;ABS_Code.c: 405: LATD = 0x00;
  3259  0028B8  0E00               	movlw	0
  3260  0028BA  6E8C               	movwf	3980,c	;volatile
  3261                           
  3262                           ;ABS_Code.c: 406: TRISD = 0xFF;
  3263  0028BC  6895               	setf	3989,c	;volatile
  3264                           
  3265                           ;ABS_Code.c: 407: LATE = 0x00;
  3266  0028BE  0E00               	movlw	0
  3267  0028C0  6E8D               	movwf	3981,c	;volatile
  3268                           
  3269                           ;ABS_Code.c: 408: TRISE = 0xFF;
  3270  0028C2  6896               	setf	3990,c	;volatile
  3271                           
  3272                           ;ABS_Code.c: 410: ADCON1 = 0b11111110;
  3273  0028C4  0EFE               	movlw	254
  3274  0028C6  6EC1               	movwf	4033,c	;volatile
  3275                           
  3276                           ;ABS_Code.c: 413: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3277  0028C8  0E06               	movlw	6
  3278  0028CA  0101               	movlb	1	; () banked
  3279  0028CC  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3280  0028CE  0E05               	movlw	5
  3281  0028D0  0101               	movlb	1	; () banked
  3282  0028D2  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3283  0028D4  0E01               	movlw	1
  3284  0028D6  0101               	movlb	1	; () banked
  3285  0028D8  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3286  0028DA  0E03               	movlw	3
  3287  0028DC  0101               	movlb	1	; () banked
  3288  0028DE  6F03               	movwf	CANInitialize@BRP& (0+255),b
  3289  0028E0  0E9D               	movlw	157
  3290  0028E2  0101               	movlb	1	; () banked
  3291  0028E4  6F04               	movwf	CANInitialize@flags& (0+255),b
  3292  0028E6  0E04               	movlw	4
  3293  0028E8  EC26  F011         	call	_CANInitialize
  3294                           
  3295                           ;ABS_Code.c: 416: PIR3bits.RXB1IF = 0;
  3296  0028EC  92A4               	bcf	4004,1,c	;volatile
  3297                           
  3298                           ;ABS_Code.c: 417: PIR3bits.RXB0IF = 0;
  3299  0028EE  90A4               	bcf	4004,0,c	;volatile
  3300                           
  3301                           ;ABS_Code.c: 418: INTCONbits.TMR0IF = 0;
  3302  0028F0  94F2               	bcf	intcon,2,c	;volatile
  3303                           
  3304                           ;ABS_Code.c: 419: PIR1bits.TMR1IF = 0;
  3305  0028F2  909E               	bcf	3998,0,c	;volatile
  3306                           
  3307                           ;ABS_Code.c: 420: PIR2bits.TMR3IF = 0;
  3308  0028F4  92A1               	bcf	4001,1,c	;volatile
  3309                           
  3310                           ;ABS_Code.c: 421: INTCONbits.INT0IF = 0;
  3311  0028F6  92F2               	bcf	intcon,1,c	;volatile
  3312                           
  3313                           ;ABS_Code.c: 422: INTCON3bits.INT1IF = 0;
  3314  0028F8  90F0               	bcf	intcon3,0,c	;volatile
  3315                           
  3316                           ;ABS_Code.c: 426: RCONbits.IPEN = 1;
  3317  0028FA  8ED0               	bsf	4048,7,c	;volatile
  3318                           
  3319                           ;ABS_Code.c: 427: IPR3bits.RXB1IP = 0;
  3320  0028FC  92A5               	bcf	4005,1,c	;volatile
  3321                           
  3322                           ;ABS_Code.c: 428: IPR3bits.RXB0IP = 0;
  3323  0028FE  90A5               	bcf	4005,0,c	;volatile
  3324                           
  3325                           ;ABS_Code.c: 429: INTCON2bits.TMR0IP = 1;
  3326  002900  84F1               	bsf	intcon2,2,c	;volatile
  3327                           
  3328                           ;ABS_Code.c: 430: INTCON3bits.INT1IP = 1;
  3329  002902  8CF0               	bsf	intcon3,6,c	;volatile
  3330                           
  3331                           ;ABS_Code.c: 431: IPR1bits.TMR1IP = 0;
  3332  002904  909F               	bcf	3999,0,c	;volatile
  3333                           
  3334                           ;ABS_Code.c: 432: IPR2bits.TMR3IP = 0;
  3335  002906  92A2               	bcf	4002,1,c	;volatile
  3336                           
  3337                           ;ABS_Code.c: 435: T0CON = 0x80;
  3338  002908  0E80               	movlw	128
  3339  00290A  6ED5               	movwf	4053,c	;volatile
  3340                           
  3341                           ;ABS_Code.c: 442: TMR0H = 0xFF;
  3342  00290C  68D7               	setf	4055,c	;volatile
  3343                           
  3344                           ;ABS_Code.c: 443: TMR0L = 0xFE;
  3345  00290E  0EFE               	movlw	254
  3346  002910  6ED6               	movwf	4054,c	;volatile
  3347                           
  3348                           ;ABS_Code.c: 444: PORTCbits.RC0 = 0;
  3349  002912  9082               	bcf	3970,0,c	;volatile
  3350                           
  3351                           ;ABS_Code.c: 445: brake_value_degree = 90;
  3352  002914  0E5A               	movlw	90
  3353  002916  6E40               	movwf	_brake_value_degree,c	;volatile
  3354                           
  3355                           ;ABS_Code.c: 446: T1CON = 00110000;
  3356  002918  0E00               	movlw	0
  3357  00291A  6ECD               	movwf	4045,c	;volatile
  3358                           
  3359                           ;ABS_Code.c: 447: T3CON = 01110000;
  3360  00291C  0E00               	movlw	0
  3361  00291E  6EB1               	movwf	4017,c	;volatile
  3362                           
  3363                           ;ABS_Code.c: 448: INTCON2bits.INTEDG0 = 1;
  3364  002920  8CF1               	bsf	intcon2,6,c	;volatile
  3365                           
  3366                           ;ABS_Code.c: 449: INTCON2bits.INTEDG1 = 1;
  3367  002922  8AF1               	bsf	intcon2,5,c	;volatile
  3368                           
  3369                           ;ABS_Code.c: 452: ADCON1 = 0b00001110;
  3370  002924  0E0E               	movlw	14
  3371  002926  6EC1               	movwf	4033,c	;volatile
  3372                           
  3373                           ;ABS_Code.c: 453: ADCON0bits.CHS3 = 0;
  3374  002928  9AC2               	bcf	4034,5,c	;volatile
  3375                           
  3376                           ;ABS_Code.c: 454: ADCON0bits.CHS2 = 0;
  3377  00292A  98C2               	bcf	4034,4,c	;volatile
  3378                           
  3379                           ;ABS_Code.c: 455: ADCON0bits.CHS1 = 0;
  3380  00292C  96C2               	bcf	4034,3,c	;volatile
  3381                           
  3382                           ;ABS_Code.c: 456: ADCON0bits.CHS0 = 0;
  3383  00292E  94C2               	bcf	4034,2,c	;volatile
  3384                           
  3385                           ;ABS_Code.c: 457: ADCON2bits.ACQT2 = 1;
  3386  002930  8AC0               	bsf	4032,5,c	;volatile
  3387                           
  3388                           ;ABS_Code.c: 458: ADCON2bits.ACQT1 = 1;
  3389  002932  88C0               	bsf	4032,4,c	;volatile
  3390                           
  3391                           ;ABS_Code.c: 459: ADCON2bits.ACQT0 = 0;
  3392  002934  96C0               	bcf	4032,3,c	;volatile
  3393                           
  3394                           ;ABS_Code.c: 460: ADCON2bits.ADCS2 = 1;
  3395  002936  84C0               	bsf	4032,2,c	;volatile
  3396                           
  3397                           ;ABS_Code.c: 461: ADCON2bits.ADCS1 = 0;
  3398  002938  92C0               	bcf	4032,1,c	;volatile
  3399                           
  3400                           ;ABS_Code.c: 462: ADCON2bits.ADCS0 = 1;
  3401  00293A  80C0               	bsf	4032,0,c	;volatile
  3402                           
  3403                           ;ABS_Code.c: 463: ADCON2bits.ADFM = 0;
  3404  00293C  9EC0               	bcf	4032,7,c	;volatile
  3405                           
  3406                           ;ABS_Code.c: 464: ADCON0bits.ADON = 1;
  3407  00293E  80C2               	bsf	4034,0,c	;volatile
  3408                           
  3409                           ;ABS_Code.c: 467: PIE3bits.RXB1IE = 1;
  3410  002940  82A3               	bsf	4003,1,c	;volatile
  3411                           
  3412                           ;ABS_Code.c: 468: PIE3bits.RXB0IE = 1;
  3413  002942  80A3               	bsf	4003,0,c	;volatile
  3414                           
  3415                           ;ABS_Code.c: 469: INTCONbits.TMR0IE = 1;
  3416  002944  8AF2               	bsf	intcon,5,c	;volatile
  3417                           
  3418                           ;ABS_Code.c: 470: PIE1bits.TMR1IE = 1;
  3419  002946  809D               	bsf	3997,0,c	;volatile
  3420                           
  3421                           ;ABS_Code.c: 471: PIE2bits.TMR3IE = 1;
  3422  002948  82A0               	bsf	4000,1,c	;volatile
  3423                           
  3424                           ;ABS_Code.c: 472: INTCONbits.INT0IE = 1;
  3425  00294A  88F2               	bsf	intcon,4,c	;volatile
  3426                           
  3427                           ;ABS_Code.c: 473: INTCON3bits.INT1IE = 1;
  3428  00294C  86F0               	bsf	intcon3,3,c	;volatile
  3429                           
  3430                           ;ABS_Code.c: 474: INTCONbits.GIEH = 1;
  3431  00294E  8EF2               	bsf	intcon,7,c	;volatile
  3432                           
  3433                           ;ABS_Code.c: 475: INTCONbits.GIEL = 1;
  3434  002950  8CF2               	bsf	intcon,6,c	;volatile
  3435                           
  3436                           ;ABS_Code.c: 478: T1CONbits.TMR1ON = 1;
  3437  002952  80CD               	bsf	4045,0,c	;volatile
  3438                           
  3439                           ;ABS_Code.c: 479: T3CONbits.TMR3ON = 1;
  3440  002954  80B1               	bsf	4017,0,c	;volatile
  3441                           
  3442                           ;ABS_Code.c: 480: T0CONbits.TMR0ON = 1;
  3443  002956  8ED5               	bsf	4053,7,c	;volatile
  3444  002958  0012               	return		;funcret
  3445  00295A                     __end_of_board_initialization:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           tblptrh	equ	0xFF7
  3449                           tblptrl	equ	0xFF6
  3450                           tablat	equ	0xFF5
  3451                           prodh	equ	0xFF4
  3452                           prodl	equ	0xFF3
  3453                           intcon	equ	0xFF2
  3454                           intcon2	equ	0xFF1
  3455                           intcon3	equ	0xFF0
  3456                           postinc0	equ	0xFEE
  3457                           wreg	equ	0xFE8
  3458                           postdec1	equ	0xFE5
  3459                           fsr1l	equ	0xFE1
  3460                           indf2	equ	0xFDF
  3461                           fsr2h	equ	0xFDA
  3462                           fsr2l	equ	0xFD9
  3463                           status	equ	0xFD8
  3464                           
  3465 ;; *************** function _CANInitialize *****************
  3466 ;; Defined at:
  3467 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  propSeg         1    wreg     unsigned char 
  3470 ;;  phaseSeg1       1    0[BANK1 ] unsigned char 
  3471 ;;  phaseSeg2       1    1[BANK1 ] unsigned char 
  3472 ;;  SJW             1    2[BANK1 ] unsigned char 
  3473 ;;  BRP             1    3[BANK1 ] unsigned char 
  3474 ;;  flags           1    4[BANK1 ] enum E16885
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  propSeg         1   44[BANK0 ] unsigned char 
  3477 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3478 ;;  FilterConfig    1   45[BANK0 ] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;		None               void
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3488 ;;      Params:         0       0       5       0
  3489 ;;      Locals:         0       3       0       0
  3490 ;;      Temps:          0       0       4       0
  3491 ;;      Totals:         0       3       9       0
  3492 ;;Total ram usage:       12 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    5
  3495 ;; This function calls:
  3496 ;;		_CANOperationMode
  3497 ;;		_CANSetFilter
  3498 ;;		_CANSetMask
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;;		_board_initialization
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text6
  3506  00224C                     __ptext6:
  3507                           	opt stack 0
  3508  00224C                     _CANInitialize:
  3509                           	opt stack 24
  3510                           
  3511                           ;incstack = 0
  3512                           ;CANInitialize@propSeg stored from wreg
  3513  00224C  0100               	movlb	0	; () banked
  3514  00224E  6FD6               	movwf	CANInitialize@propSeg& (0+255),b
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3518                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3519                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3520  002250  0E80               	movlw	128
  3521  002252  EC7E  F015         	call	_CANOperationMode
  3522                           
  3523                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3524  002256  0E00               	movlw	0
  3525  002258  6E70               	movwf	3952,c	;volatile
  3526                           
  3527                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3528  00225A  0E00               	movlw	0
  3529  00225C  6E71               	movwf	3953,c	;volatile
  3530                           
  3531                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3532  00225E  0E00               	movlw	0
  3533  002260  6E72               	movwf	3954,c	;volatile
  3534                           
  3535                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3536  002262  0101               	movlb	1	; () banked
  3537  002264  4102               	rrncf	CANInitialize@SJW& (0+255),w,b
  3538  002266  42E8               	rrncf	wreg,f,c
  3539  002268  0BC0               	andlw	192
  3540  00226A  0101               	movlb	1	; () banked
  3541  00226C  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3545  00226E  0101               	movlb	1	; () banked
  3546  002270  5102               	movf	CANInitialize@SJW& (0+255),w,b
  3547  002272  1270               	iorwf	3952,f,c	;volatile
  3548                           
  3549                           ; BSR set to: 1
  3550                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3551  002274  0101               	movlb	1	; () banked
  3552  002276  5103               	movf	CANInitialize@BRP& (0+255),w,b
  3553  002278  1270               	iorwf	3952,f,c	;volatile
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3557  00227A  0100               	movlb	0	; () banked
  3558  00227C  51D6               	movf	CANInitialize@propSeg& (0+255),w,b
  3559  00227E  1271               	iorwf	3953,f,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3563  002280  0101               	movlb	1	; () banked
  3564  002282  3900               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3565  002284  42E8               	rrncf	wreg,f,c
  3566  002286  0BF8               	andlw	248
  3567  002288  0101               	movlb	1	; () banked
  3568  00228A  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3569                           
  3570                           ; BSR set to: 1
  3571                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3572  00228C  0101               	movlb	1	; () banked
  3573  00228E  5100               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3574  002290  1271               	iorwf	3953,f,c	;volatile
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3578  002292  0101               	movlb	1	; () banked
  3579  002294  A504               	btfss	CANInitialize@flags& (0+255),2,b
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3583  002296  8C71               	bsf	3953,6,c	;volatile
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3587  002298  0101               	movlb	1	; () banked
  3588  00229A  A104               	btfss	CANInitialize@flags& (0+255),0,b
  3589  00229C  D002               	goto	l4246
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3593  00229E  8E71               	bsf	3953,7,c	;volatile
  3594  0022A0  D000               	goto	l4246
  3595  0022A2                     l4246:
  3596                           
  3597                           ; BSR set to: 1
  3598                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3599  0022A2  0101               	movlb	1	; () banked
  3600  0022A4  5101               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3601  0022A6  1272               	iorwf	3954,f,c	;volatile
  3602                           
  3603                           ; BSR set to: 1
  3604                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3605  0022A8  0101               	movlb	1	; () banked
  3606  0022AA  A304               	btfss	CANInitialize@flags& (0+255),1,b
  3607  0022AC  D002               	goto	l4252
  3608                           
  3609                           ; BSR set to: 1
  3610                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3611  0022AE  8C72               	bsf	3954,6,c	;volatile
  3612  0022B0  D000               	goto	l4252
  3613  0022B2                     l4252:
  3614                           
  3615                           ; BSR set to: 1
  3616                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3617  0022B2  0101               	movlb	1	; () banked
  3618  0022B4  5104               	movf	CANInitialize@flags& (0+255),w,b
  3619  0022B6  0B60               	andlw	96
  3620  0022B8  6E60               	movwf	3936,c	;volatile
  3621                           
  3622                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3623  0022BA  0101               	movlb	1	; () banked
  3624  0022BC  5104               	movf	CANInitialize@flags& (0+255),w,b
  3625  0022BE  0B10               	andlw	16
  3626  0022C0  0AFF               	xorlw	255
  3627  0022C2  B4D8               	btfsc	status,2,c
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3631  0022C4  8460               	bsf	3936,2,c	;volatile
  3632                           
  3633                           ; BSR set to: 1
  3634                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3635  0022C6  CF60 FF50          	movff	3936,3920	;volatile
  3636                           
  3637                           ; BSR set to: 1
  3638                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3639  0022CA  0E00               	movlw	0
  3640  0022CC  0100               	movlb	0	; () banked
  3641  0022CE  6FC8               	movwf	CANSetMask@mask& (0+255),b
  3642  0022D0  0E00               	movlw	0
  3643  0022D2  6FC9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3644  0022D4  0E00               	movlw	0
  3645  0022D6  6FCA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3646  0022D8  0E00               	movlw	0
  3647  0022DA  6FCB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3648  0022DC  0EF7               	movlw	247
  3649  0022DE  0100               	movlb	0	; () banked
  3650  0022E0  6FCC               	movwf	CANSetMask@type& (0+255),b
  3651  0022E2  0E01               	movlw	1
  3652  0022E4  EC9A  F00C         	call	_CANSetMask
  3653                           
  3654                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3655  0022E8  0E00               	movlw	0
  3656  0022EA  0100               	movlb	0	; () banked
  3657  0022EC  6FC8               	movwf	CANSetMask@mask& (0+255),b
  3658  0022EE  0E00               	movlw	0
  3659  0022F0  6FC9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3660  0022F2  0E00               	movlw	0
  3661  0022F4  6FCA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3662  0022F6  0E00               	movlw	0
  3663  0022F8  6FCB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3664  0022FA  0EF7               	movlw	247
  3665  0022FC  0100               	movlb	0	; () banked
  3666  0022FE  6FCC               	movwf	CANSetMask@type& (0+255),b
  3667  002300  0E02               	movlw	2
  3668  002302  EC9A  F00C         	call	_CANSetMask
  3669                           
  3670                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3671  002306  D00F               	goto	l4264
  3672  002308                     l4258:
  3673                           
  3674                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3675  002308  0EF7               	movlw	247
  3676  00230A  0100               	movlb	0	; () banked
  3677  00230C  6FD7               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3678  00230E  D007               	goto	l4260
  3679  002310                     l376:
  3680                           
  3681                           ; BSR set to: 1
  3682                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3683  002310  0100               	movlb	0	; () banked
  3684  002312  69D7               	setf	CANInitialize@FilterConfig1& (0+255),b
  3685                           
  3686                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3687  002314  0100               	movlb	0	; () banked
  3688  002316  69D8               	setf	CANInitialize@FilterConfig2& (0+255),b
  3689                           
  3690                           ;inc\CANlib.h: 273: break;
  3691  002318  D028               	goto	l4266
  3692  00231A                     l377:
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3696  00231A  0100               	movlb	0	; () banked
  3697  00231C  69D7               	setf	CANInitialize@FilterConfig1& (0+255),b
  3698  00231E                     l4260:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3702  00231E  0EF7               	movlw	247
  3703  002320  0100               	movlb	0	; () banked
  3704  002322  6FD8               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;inc\CANlib.h: 278: }
  3708                           
  3709                           ;inc\CANlib.h: 277: break;
  3710  002324  D022               	goto	l4266
  3711  002326                     l4264:
  3712  002326  0E9F               	movlw	159
  3713  002328  0101               	movlb	1	; () banked
  3714  00232A  6F05               	movwf	??_CANInitialize& (0+255),b
  3715  00232C  0EFF               	movlw	255
  3716  00232E  0101               	movlb	1	; () banked
  3717  002330  6F06               	movwf	(??_CANInitialize+1)& (0+255),b
  3718  002332  0101               	movlb	1	; () banked
  3719  002334  5104               	movf	CANInitialize@flags& (0+255),w,b
  3720  002336  0B60               	andlw	96
  3721  002338  0101               	movlb	1	; () banked
  3722  00233A  6F07               	movwf	(??_CANInitialize+2)& (0+255),b
  3723  00233C  6B08               	clrf	(??_CANInitialize+3)& (0+255),b
  3724  00233E  0101               	movlb	1	; () banked
  3725  002340  5105               	movf	??_CANInitialize& (0+255),w,b
  3726  002342  0101               	movlb	1	; () banked
  3727  002344  1307               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3728  002346  0101               	movlb	1	; () banked
  3729  002348  5106               	movf	(??_CANInitialize+1)& (0+255),w,b
  3730  00234A  0101               	movlb	1	; () banked
  3731  00234C  1308               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3732                           
  3733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3734                           ; Switch size 1, requested type "space"
  3735                           ; Number of cases is 1, Range of values is 0 to 0
  3736                           ; switch strategies available:
  3737                           ; Name         Instructions Cycles
  3738                           ; simple_byte            4     3 (average)
  3739                           ;	Chosen strategy is simple_byte
  3740  00234E  0101               	movlb	1	; () banked
  3741  002350  5108               	movf	(??_CANInitialize+3)& (0+255),w,b
  3742  002352  0A00               	xorlw	0	; case 0
  3743  002354  A4D8               	btfss	status,2,c
  3744  002356  D7E1               	goto	l377
  3745                           
  3746                           ; BSR set to: 1
  3747                           ; Switch size 1, requested type "space"
  3748                           ; Number of cases is 2, Range of values is 191 to 223
  3749                           ; switch strategies available:
  3750                           ; Name         Instructions Cycles
  3751                           ; simple_byte            7     4 (average)
  3752                           ;	Chosen strategy is simple_byte
  3753  002358  0101               	movlb	1	; () banked
  3754  00235A  5107               	movf	(??_CANInitialize+2)& (0+255),w,b
  3755  00235C  0ABF               	xorlw	191	; case 191
  3756  00235E  B4D8               	btfsc	status,2,c
  3757  002360  D7D7               	goto	l376
  3758  002362  0A60               	xorlw	96	; case 223
  3759  002364  B4D8               	btfsc	status,2,c
  3760  002366  D7D0               	goto	l4258
  3761  002368  D7D8               	goto	l377
  3762  00236A                     l4266:
  3763                           
  3764                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3765  00236A  0E00               	movlw	0
  3766  00236C  0100               	movlb	0	; () banked
  3767  00236E  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3768  002370  0E00               	movlw	0
  3769  002372  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3770  002374  0E00               	movlw	0
  3771  002376  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3772  002378  0E00               	movlw	0
  3773  00237A  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3774  00237C  C0D7  F0CC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3775  002380  0E00               	movlw	0
  3776  002382  EC9E  F000         	call	_CANSetFilter
  3777                           
  3778                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3779  002386  0E00               	movlw	0
  3780  002388  0100               	movlb	0	; () banked
  3781  00238A  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3782  00238C  0E00               	movlw	0
  3783  00238E  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3784  002390  0E00               	movlw	0
  3785  002392  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3786  002394  0E00               	movlw	0
  3787  002396  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3788  002398  C0D7  F0CC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3789  00239C  0E01               	movlw	1
  3790  00239E  EC9E  F000         	call	_CANSetFilter
  3791                           
  3792                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3793  0023A2  0E00               	movlw	0
  3794  0023A4  0100               	movlb	0	; () banked
  3795  0023A6  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3796  0023A8  0E00               	movlw	0
  3797  0023AA  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3798  0023AC  0E00               	movlw	0
  3799  0023AE  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3800  0023B0  0E00               	movlw	0
  3801  0023B2  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3802  0023B4  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3803  0023B8  0E02               	movlw	2
  3804  0023BA  EC9E  F000         	call	_CANSetFilter
  3805                           
  3806                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3807  0023BE  0E00               	movlw	0
  3808  0023C0  0100               	movlb	0	; () banked
  3809  0023C2  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3810  0023C4  0E00               	movlw	0
  3811  0023C6  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3812  0023C8  0E00               	movlw	0
  3813  0023CA  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3814  0023CC  0E00               	movlw	0
  3815  0023CE  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3816  0023D0  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3817  0023D4  0E03               	movlw	3
  3818  0023D6  EC9E  F000         	call	_CANSetFilter
  3819                           
  3820                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3821  0023DA  0E00               	movlw	0
  3822  0023DC  0100               	movlb	0	; () banked
  3823  0023DE  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3824  0023E0  0E00               	movlw	0
  3825  0023E2  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3826  0023E4  0E00               	movlw	0
  3827  0023E6  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3828  0023E8  0E00               	movlw	0
  3829  0023EA  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3830  0023EC  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3831  0023F0  0E04               	movlw	4
  3832  0023F2  EC9E  F000         	call	_CANSetFilter
  3833                           
  3834                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3835  0023F6  0E00               	movlw	0
  3836  0023F8  0100               	movlb	0	; () banked
  3837  0023FA  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3838  0023FC  0E00               	movlw	0
  3839  0023FE  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3840  002400  0E00               	movlw	0
  3841  002402  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3842  002404  0E00               	movlw	0
  3843  002406  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3844  002408  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3845  00240C  0E05               	movlw	5
  3846  00240E  EC9E  F000         	call	_CANSetFilter
  3847                           
  3848                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3849  002412  0E00               	movlw	0
  3850  002414  EC7E  F015         	call	_CANOperationMode
  3851  002418  0012               	return		;funcret
  3852  00241A                     __end_of_CANInitialize:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           prodh	equ	0xFF4
  3859                           prodl	equ	0xFF3
  3860                           intcon	equ	0xFF2
  3861                           intcon2	equ	0xFF1
  3862                           intcon3	equ	0xFF0
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           postdec1	equ	0xFE5
  3866                           fsr1l	equ	0xFE1
  3867                           indf2	equ	0xFDF
  3868                           fsr2h	equ	0xFDA
  3869                           fsr2l	equ	0xFD9
  3870                           status	equ	0xFD8
  3871                           
  3872 ;; *************** function _CANSetMask *****************
  3873 ;; Defined at:
  3874 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  numBuffer       1    wreg     enum E16919
  3877 ;;  mask            4   30[BANK0 ] unsigned long 
  3878 ;;  type            1   34[BANK0 ] enum E16885
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  numBuffer       1   39[BANK0 ] enum E16919
  3881 ;;  tamp            4   40[BANK0 ] unsigned long 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3891 ;;      Params:         0       5       0       0
  3892 ;;      Locals:         0       5       0       0
  3893 ;;      Temps:          0       4       0       0
  3894 ;;      Totals:         0      14       0       0
  3895 ;;Total ram usage:       14 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    4
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_CANInitialize
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text7
  3906  001934                     __ptext7:
  3907                           	opt stack 0
  3908  001934                     _CANSetMask:
  3909                           	opt stack 24
  3910                           
  3911                           ;incstack = 0
  3912                           ;CANSetMask@numBuffer stored from wreg
  3913  001934  0100               	movlb	0	; () banked
  3914  001936  6FD1               	movwf	CANSetMask@numBuffer& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3918  001938  0100               	movlb	0	; () banked
  3919  00193A  05D1               	decf	CANSetMask@numBuffer& (0+255),w,b
  3920  00193C  A4D8               	btfss	status,2,c
  3921  00193E  D057               	goto	l2824
  3922                           
  3923                           ; BSR set to: 0
  3924  001940  0100               	movlb	0	; () banked
  3925  001942  29CC               	incf	CANSetMask@type& (0+255),w,b
  3926  001944  A4D8               	btfss	status,2,c
  3927  001946  D053               	goto	l2824
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;inc\CANlib.h: 644: {
  3931                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3932  001948  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  3933  00194C  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3934  001950  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3935  001954  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3936  001958  0E04               	movlw	4
  3937  00195A  D006               	goto	u2450
  3938  00195C                     u2455:
  3939  00195C  0100               	movlb	0	; () banked
  3940  00195E  90D8               	bcf	status,0,c
  3941  001960  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3942  001962  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3943  001964  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3944  001966  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  3945  001968                     u2450:
  3946  001968  2EE8               	decfsz	wreg,f,c
  3947  00196A  D7F8               	goto	u2455
  3948  00196C  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  3949  001970  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3950  001974  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3951  001978  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3955  00197C  0100               	movlb	0	; () banked
  3956  00197E  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  3957  001980  0100               	movlb	0	; () banked
  3958  001982  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  3959  001984  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3960  001986  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3961  001988  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3965  00198A  C0D2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3969  00198E  0E07               	movlw	7
  3970  001990  0100               	movlb	0	; () banked
  3971  001992  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  3972  001994  0100               	movlb	0	; () banked
  3973  001996  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  3974  001998  0E00               	movlw	0
  3975  00199A  0100               	movlb	0	; () banked
  3976  00199C  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3977  00199E  0100               	movlb	0	; () banked
  3978  0019A0  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3979  0019A2  0E00               	movlw	0
  3980  0019A4  0100               	movlb	0	; () banked
  3981  0019A6  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3982  0019A8  0100               	movlb	0	; () banked
  3983  0019AA  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3984  0019AC  0E00               	movlw	0
  3985  0019AE  0100               	movlb	0	; () banked
  3986  0019B0  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3987  0019B2  0100               	movlb	0	; () banked
  3988  0019B4  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3992  0019B6  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  3993  0019BA  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3994  0019BE  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3995  0019C2  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3996  0019C6  0E05               	movlw	5
  3997  0019C8                     u2465:
  3998  0019C8  90D8               	bcf	status,0,c
  3999  0019CA  0100               	movlb	0	; () banked
  4000  0019CC  37CD               	rlcf	??_CANSetMask& (0+255),f,b
  4001  0019CE  37CE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4002  0019D0  37CF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4003  0019D2  37D0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4004  0019D4  2EE8               	decfsz	wreg,f,c
  4005  0019D6  D7F8               	goto	u2465
  4006  0019D8  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4007  0019DC  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4008  0019E0  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4009  0019E4  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4013  0019E8  C0D2  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4014  0019EC  D000               	goto	l2824
  4015  0019EE                     l2824:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 652: }
  4019                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4020  0019EE  0E02               	movlw	2
  4021  0019F0  0100               	movlb	0	; () banked
  4022  0019F2  19D1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4023  0019F4  A4D8               	btfss	status,2,c
  4024  0019F6  D057               	goto	l2840
  4025                           
  4026                           ; BSR set to: 0
  4027  0019F8  0100               	movlb	0	; () banked
  4028  0019FA  29CC               	incf	CANSetMask@type& (0+255),w,b
  4029  0019FC  A4D8               	btfss	status,2,c
  4030  0019FE  D053               	goto	l2840
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;inc\CANlib.h: 655: {
  4034                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4035  001A00  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  4036  001A04  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4037  001A08  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4038  001A0C  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4039  001A10  0E04               	movlw	4
  4040  001A12  D006               	goto	u2490
  4041  001A14                     u2495:
  4042  001A14  0100               	movlb	0	; () banked
  4043  001A16  90D8               	bcf	status,0,c
  4044  001A18  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4045  001A1A  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4046  001A1C  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4047  001A1E  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  4048  001A20                     u2490:
  4049  001A20  2EE8               	decfsz	wreg,f,c
  4050  001A22  D7F8               	goto	u2495
  4051  001A24  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4052  001A28  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4053  001A2C  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4054  001A30  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4058  001A34  0100               	movlb	0	; () banked
  4059  001A36  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  4060  001A38  0100               	movlb	0	; () banked
  4061  001A3A  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4062  001A3C  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4063  001A3E  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4064  001A40  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4068  001A42  C0D2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4072  001A46  0E07               	movlw	7
  4073  001A48  0100               	movlb	0	; () banked
  4074  001A4A  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  4075  001A4C  0100               	movlb	0	; () banked
  4076  001A4E  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4077  001A50  0E00               	movlw	0
  4078  001A52  0100               	movlb	0	; () banked
  4079  001A54  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4080  001A56  0100               	movlb	0	; () banked
  4081  001A58  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4082  001A5A  0E00               	movlw	0
  4083  001A5C  0100               	movlb	0	; () banked
  4084  001A5E  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4085  001A60  0100               	movlb	0	; () banked
  4086  001A62  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4087  001A64  0E00               	movlw	0
  4088  001A66  0100               	movlb	0	; () banked
  4089  001A68  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4090  001A6A  0100               	movlb	0	; () banked
  4091  001A6C  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4095  001A6E  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  4096  001A72  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4097  001A76  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4098  001A7A  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4099  001A7E  0E05               	movlw	5
  4100  001A80                     u2505:
  4101  001A80  90D8               	bcf	status,0,c
  4102  001A82  0100               	movlb	0	; () banked
  4103  001A84  37CD               	rlcf	??_CANSetMask& (0+255),f,b
  4104  001A86  37CE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4105  001A88  37CF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4106  001A8A  37D0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4107  001A8C  2EE8               	decfsz	wreg,f,c
  4108  001A8E  D7F8               	goto	u2505
  4109  001A90  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4110  001A94  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4111  001A98  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4112  001A9C  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4116  001AA0  C0D2  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4117  001AA4  D000               	goto	l2840
  4118  001AA6                     l2840:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;inc\CANlib.h: 663: }
  4122                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4123  001AA6  0100               	movlb	0	; () banked
  4124  001AA8  05D1               	decf	CANSetMask@numBuffer& (0+255),w,b
  4125  001AAA  A4D8               	btfss	status,2,c
  4126  001AAC  D089               	goto	l2872
  4127                           
  4128                           ; BSR set to: 0
  4129  001AAE  0EF7               	movlw	247
  4130  001AB0  0100               	movlb	0	; () banked
  4131  001AB2  19CC               	xorwf	CANSetMask@type& (0+255),w,b
  4132  001AB4  A4D8               	btfss	status,2,c
  4133  001AB6  D084               	goto	l2872
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 666: {
  4137                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4138  001AB8  0100               	movlb	0	; () banked
  4139  001ABA  51C8               	movf	CANSetMask@mask& (0+255),w,b
  4140  001ABC  0100               	movlb	0	; () banked
  4141  001ABE  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4142  001AC0  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4143  001AC2  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4144  001AC4  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4148  001AC6  C0D2  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4152  001ACA  0E00               	movlw	0
  4153  001ACC  0100               	movlb	0	; () banked
  4154  001ACE  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  4155  001AD0  0100               	movlb	0	; () banked
  4156  001AD2  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4157  001AD4  0EFF               	movlw	255
  4158  001AD6  0100               	movlb	0	; () banked
  4159  001AD8  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4160  001ADA  0100               	movlb	0	; () banked
  4161  001ADC  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4162  001ADE  0E00               	movlw	0
  4163  001AE0  0100               	movlb	0	; () banked
  4164  001AE2  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4165  001AE4  0100               	movlb	0	; () banked
  4166  001AE6  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4167  001AE8  0E00               	movlw	0
  4168  001AEA  0100               	movlb	0	; () banked
  4169  001AEC  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4170  001AEE  0100               	movlb	0	; () banked
  4171  001AF0  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4175  001AF2  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  4176  001AF6  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4177  001AFA  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4178  001AFE  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4179  001B02  C0CE  F0CD         	movff	??_CANSetMask+1,??_CANSetMask
  4180  001B06  C0CF  F0CE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4181  001B0A  C0D0  F0CF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4182  001B0E  0100               	movlb	0	; () banked
  4183  001B10  6BD0               	clrf	(??_CANSetMask+3)& (0+255),b
  4184  001B12  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4185  001B16  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4186  001B1A  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4187  001B1E  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4191  001B22  C0D2  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4195  001B26  0100               	movlb	0	; () banked
  4196  001B28  A1CA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4197  001B2A  D003               	goto	l450
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4201  001B2C  010F               	movlb	15	; () banked
  4202  001B2E  8119               	bsf	25,0,b	;volatile
  4203  001B30  D002               	goto	l451
  4204  001B32                     l450:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 676: else
  4208                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4209  001B32  010F               	movlb	15	; () banked
  4210  001B34  9119               	bcf	25,0,b	;volatile
  4211  001B36                     l451:
  4212                           
  4213                           ; BSR set to: 15
  4214                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4215  001B36  0100               	movlb	0	; () banked
  4216  001B38  A3CA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4217  001B3A  D003               	goto	l452
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4221  001B3C  010F               	movlb	15	; () banked
  4222  001B3E  8319               	bsf	25,1,b	;volatile
  4223  001B40  D002               	goto	l453
  4224  001B42                     l452:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;inc\CANlib.h: 681: else
  4228                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4229  001B42  010F               	movlb	15	; () banked
  4230  001B44  9319               	bcf	25,1,b	;volatile
  4231  001B46                     l453:
  4232                           
  4233                           ; BSR set to: 15
  4234                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4235  001B46  0100               	movlb	0	; () banked
  4236  001B48  A5CA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4237  001B4A  D003               	goto	l454
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4241  001B4C  010F               	movlb	15	; () banked
  4242  001B4E  8B19               	bsf	25,5,b	;volatile
  4243  001B50  D002               	goto	l455
  4244  001B52                     l454:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 686: else
  4248                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4249  001B52  010F               	movlb	15	; () banked
  4250  001B54  9B19               	bcf	25,5,b	;volatile
  4251  001B56                     l455:
  4252                           
  4253                           ; BSR set to: 15
  4254                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4255  001B56  0100               	movlb	0	; () banked
  4256  001B58  A7CA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4257  001B5A  D003               	goto	l456
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4261  001B5C  010F               	movlb	15	; () banked
  4262  001B5E  8D19               	bsf	25,6,b	;volatile
  4263  001B60  D002               	goto	l457
  4264  001B62                     l456:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 691: else
  4268                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4269  001B62  010F               	movlb	15	; () banked
  4270  001B64  9D19               	bcf	25,6,b	;volatile
  4271  001B66                     l457:
  4272                           
  4273                           ; BSR set to: 15
  4274                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4275  001B66  0100               	movlb	0	; () banked
  4276  001B68  A9CA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4277  001B6A  D003               	goto	l458
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4281  001B6C  010F               	movlb	15	; () banked
  4282  001B6E  8F19               	bsf	25,7,b	;volatile
  4283  001B70  D003               	goto	l2866
  4284  001B72                     l458:
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 696: else
  4288                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4289  001B72  010F               	movlb	15	; () banked
  4290  001B74  9F19               	bcf	25,7,b	;volatile
  4291  001B76  D000               	goto	l2866
  4292  001B78                     l2866:
  4293                           
  4294                           ; BSR set to: 15
  4295                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4296  001B78  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  4297  001B7C  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4298  001B80  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4299  001B84  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4300  001B88  0E16               	movlw	22
  4301  001B8A  D006               	goto	u2580
  4302  001B8C                     u2585:
  4303  001B8C  0100               	movlb	0	; () banked
  4304  001B8E  90D8               	bcf	status,0,c
  4305  001B90  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4306  001B92  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4307  001B94  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4308  001B96  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  4309  001B98                     u2580:
  4310  001B98  2EE8               	decfsz	wreg,f,c
  4311  001B9A  D7F8               	goto	u2585
  4312  001B9C  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4313  001BA0  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4314  001BA4  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4315  001BA8  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4319  001BAC  0100               	movlb	0	; () banked
  4320  001BAE  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  4321  001BB0  0100               	movlb	0	; () banked
  4322  001BB2  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4323  001BB4  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4324  001BB6  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4325  001BB8  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4329  001BBA  C0D2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4330  001BBE  D000               	goto	l2872
  4331  001BC0                     l2872:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;inc\CANlib.h: 702: }
  4335                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4336  001BC0  0E02               	movlw	2
  4337  001BC2  0100               	movlb	0	; () banked
  4338  001BC4  19D1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4339  001BC6  A4D8               	btfss	status,2,c
  4340  001BC8  D089               	goto	l471
  4341                           
  4342                           ; BSR set to: 0
  4343  001BCA  0EF7               	movlw	247
  4344  001BCC  0100               	movlb	0	; () banked
  4345  001BCE  19CC               	xorwf	CANSetMask@type& (0+255),w,b
  4346  001BD0  A4D8               	btfss	status,2,c
  4347  001BD2  D084               	goto	l471
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;inc\CANlib.h: 705: {
  4351                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4352  001BD4  0100               	movlb	0	; () banked
  4353  001BD6  51C8               	movf	CANSetMask@mask& (0+255),w,b
  4354  001BD8  0100               	movlb	0	; () banked
  4355  001BDA  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4356  001BDC  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4357  001BDE  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4358  001BE0  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4362  001BE2  C0D2  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4366  001BE6  0E00               	movlw	0
  4367  001BE8  0100               	movlb	0	; () banked
  4368  001BEA  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  4369  001BEC  0100               	movlb	0	; () banked
  4370  001BEE  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4371  001BF0  0EFF               	movlw	255
  4372  001BF2  0100               	movlb	0	; () banked
  4373  001BF4  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4374  001BF6  0100               	movlb	0	; () banked
  4375  001BF8  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4376  001BFA  0E00               	movlw	0
  4377  001BFC  0100               	movlb	0	; () banked
  4378  001BFE  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4379  001C00  0100               	movlb	0	; () banked
  4380  001C02  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4381  001C04  0E00               	movlw	0
  4382  001C06  0100               	movlb	0	; () banked
  4383  001C08  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4384  001C0A  0100               	movlb	0	; () banked
  4385  001C0C  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4389  001C0E  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  4390  001C12  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4391  001C16  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4392  001C1A  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4393  001C1E  C0CE  F0CD         	movff	??_CANSetMask+1,??_CANSetMask
  4394  001C22  C0CF  F0CE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4395  001C26  C0D0  F0CF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4396  001C2A  0100               	movlb	0	; () banked
  4397  001C2C  6BD0               	clrf	(??_CANSetMask+3)& (0+255),b
  4398  001C2E  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4399  001C32  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4400  001C36  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4401  001C3A  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4405  001C3E  C0D2  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4409  001C42  0100               	movlb	0	; () banked
  4410  001C44  A1CA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4411  001C46  D003               	goto	l461
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4415  001C48  010F               	movlb	15	; () banked
  4416  001C4A  811D               	bsf	29,0,b	;volatile
  4417  001C4C  D002               	goto	l462
  4418  001C4E                     l461:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;inc\CANlib.h: 715: else
  4422                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4423  001C4E  010F               	movlb	15	; () banked
  4424  001C50  911D               	bcf	29,0,b	;volatile
  4425  001C52                     l462:
  4426                           
  4427                           ; BSR set to: 15
  4428                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4429  001C52  0100               	movlb	0	; () banked
  4430  001C54  A3CA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4431  001C56  D003               	goto	l463
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4435  001C58  010F               	movlb	15	; () banked
  4436  001C5A  831D               	bsf	29,1,b	;volatile
  4437  001C5C  D002               	goto	l464
  4438  001C5E                     l463:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;inc\CANlib.h: 720: else
  4442                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4443  001C5E  010F               	movlb	15	; () banked
  4444  001C60  931D               	bcf	29,1,b	;volatile
  4445  001C62                     l464:
  4446                           
  4447                           ; BSR set to: 15
  4448                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4449  001C62  0100               	movlb	0	; () banked
  4450  001C64  A5CA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4451  001C66  D003               	goto	l465
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4455  001C68  010F               	movlb	15	; () banked
  4456  001C6A  8B1D               	bsf	29,5,b	;volatile
  4457  001C6C  D002               	goto	l466
  4458  001C6E                     l465:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;inc\CANlib.h: 725: else
  4462                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4463  001C6E  010F               	movlb	15	; () banked
  4464  001C70  9B1D               	bcf	29,5,b	;volatile
  4465  001C72                     l466:
  4466                           
  4467                           ; BSR set to: 15
  4468                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4469  001C72  0100               	movlb	0	; () banked
  4470  001C74  A7CA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4471  001C76  D003               	goto	l467
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4475  001C78  010F               	movlb	15	; () banked
  4476  001C7A  8D1D               	bsf	29,6,b	;volatile
  4477  001C7C  D002               	goto	l468
  4478  001C7E                     l467:
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;inc\CANlib.h: 730: else
  4482                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4483  001C7E  010F               	movlb	15	; () banked
  4484  001C80  9D1D               	bcf	29,6,b	;volatile
  4485  001C82                     l468:
  4486                           
  4487                           ; BSR set to: 15
  4488                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4489  001C82  0100               	movlb	0	; () banked
  4490  001C84  A9CA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4491  001C86  D003               	goto	l469
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4495  001C88  010F               	movlb	15	; () banked
  4496  001C8A  8F1D               	bsf	29,7,b	;volatile
  4497  001C8C  D003               	goto	l2898
  4498  001C8E                     l469:
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;inc\CANlib.h: 735: else
  4502                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4503  001C8E  010F               	movlb	15	; () banked
  4504  001C90  9F1D               	bcf	29,7,b	;volatile
  4505  001C92  D000               	goto	l2898
  4506  001C94                     l2898:
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4510  001C94  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  4511  001C98  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4512  001C9C  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4513  001CA0  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4514  001CA4  0E16               	movlw	22
  4515  001CA6  D006               	goto	u2660
  4516  001CA8                     u2665:
  4517  001CA8  0100               	movlb	0	; () banked
  4518  001CAA  90D8               	bcf	status,0,c
  4519  001CAC  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4520  001CAE  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4521  001CB0  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4522  001CB2  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  4523  001CB4                     u2660:
  4524  001CB4  2EE8               	decfsz	wreg,f,c
  4525  001CB6  D7F8               	goto	u2665
  4526  001CB8  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4527  001CBC  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4528  001CC0  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4529  001CC4  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4533  001CC8  0100               	movlb	0	; () banked
  4534  001CCA  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  4535  001CCC  0100               	movlb	0	; () banked
  4536  001CCE  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4537  001CD0  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4538  001CD2  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4539  001CD4  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4543  001CD6  C0D2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4544  001CDA  D000               	goto	l471
  4545  001CDC                     l471:
  4546                           
  4547                           ; BSR set to: 0
  4548  001CDC  0012               	return		;funcret
  4549  001CDE                     __end_of_CANSetMask:
  4550                           	opt stack 0
  4551                           tblptru	equ	0xFF8
  4552                           tblptrh	equ	0xFF7
  4553                           tblptrl	equ	0xFF6
  4554                           tablat	equ	0xFF5
  4555                           prodh	equ	0xFF4
  4556                           prodl	equ	0xFF3
  4557                           intcon	equ	0xFF2
  4558                           intcon2	equ	0xFF1
  4559                           intcon3	equ	0xFF0
  4560                           postinc0	equ	0xFEE
  4561                           wreg	equ	0xFE8
  4562                           postdec1	equ	0xFE5
  4563                           fsr1l	equ	0xFE1
  4564                           indf2	equ	0xFDF
  4565                           fsr2h	equ	0xFDA
  4566                           fsr2l	equ	0xFD9
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function _CANSetFilter *****************
  4570 ;; Defined at:
  4571 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  numBuffer       1    wreg     enum E16922
  4574 ;;  filter          4   30[BANK0 ] unsigned long 
  4575 ;;  type            1   34[BANK0 ] enum E16885
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  numBuffer       1   39[BANK0 ] enum E16922
  4578 ;;  tamp            4   40[BANK0 ] unsigned long 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;		None               void
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4588 ;;      Params:         0       5       0       0
  4589 ;;      Locals:         0       5       0       0
  4590 ;;      Temps:          0       4       0       0
  4591 ;;      Totals:         0      14       0       0
  4592 ;;Total ram usage:       14 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    4
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_CANInitialize
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text8
  4603  00013C                     __ptext8:
  4604                           	opt stack 0
  4605  00013C                     _CANSetFilter:
  4606                           	opt stack 24
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;incstack = 0
  4610                           ;CANSetFilter@numBuffer stored from wreg
  4611  00013C  0100               	movlb	0	; () banked
  4612  00013E  6FD1               	movwf	CANSetFilter@numBuffer& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 750: unsigned long tamp;
  4616                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4617  000140  0100               	movlb	0	; () banked
  4618  000142  51D1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4619  000144  0100               	movlb	0	; () banked
  4620  000146  A4D8               	btfss	status,2,c
  4621  000148  D059               	goto	l2922
  4622                           
  4623                           ; BSR set to: 0
  4624  00014A  0100               	movlb	0	; () banked
  4625  00014C  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4626  00014E  A4D8               	btfss	status,2,c
  4627  000150  D055               	goto	l2922
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;inc\CANlib.h: 753: {
  4631                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4632  000152  010F               	movlb	15	; () banked
  4633  000154  9701               	bcf	1,3,b	;volatile
  4634                           
  4635                           ; BSR set to: 15
  4636                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4637  000156  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4638  00015A  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4639  00015E  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4640  000162  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4641  000166  0E04               	movlw	4
  4642  000168  D006               	goto	u2690
  4643  00016A                     u2695:
  4644  00016A  0100               	movlb	0	; () banked
  4645  00016C  90D8               	bcf	status,0,c
  4646  00016E  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4647  000170  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4648  000172  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4649  000174  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4650  000176                     u2690:
  4651  000176  2EE8               	decfsz	wreg,f,c
  4652  000178  D7F8               	goto	u2695
  4653  00017A  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4654  00017E  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4655  000182  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4656  000186  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4660  00018A  0100               	movlb	0	; () banked
  4661  00018C  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4662  00018E  0100               	movlb	0	; () banked
  4663  000190  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4664  000192  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4665  000194  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4666  000196  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4670  000198  C0D2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4674  00019C  0E07               	movlw	7
  4675  00019E  0100               	movlb	0	; () banked
  4676  0001A0  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  4677  0001A2  0100               	movlb	0	; () banked
  4678  0001A4  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4679  0001A6  0E00               	movlw	0
  4680  0001A8  0100               	movlb	0	; () banked
  4681  0001AA  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4682  0001AC  0100               	movlb	0	; () banked
  4683  0001AE  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4684  0001B0  0E00               	movlw	0
  4685  0001B2  0100               	movlb	0	; () banked
  4686  0001B4  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4687  0001B6  0100               	movlb	0	; () banked
  4688  0001B8  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4689  0001BA  0E00               	movlw	0
  4690  0001BC  0100               	movlb	0	; () banked
  4691  0001BE  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4692  0001C0  0100               	movlb	0	; () banked
  4693  0001C2  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4697  0001C4  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4698  0001C8  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4699  0001CC  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4700  0001D0  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4701  0001D4  0E05               	movlw	5
  4702  0001D6                     u2705:
  4703  0001D6  90D8               	bcf	status,0,c
  4704  0001D8  0100               	movlb	0	; () banked
  4705  0001DA  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  4706  0001DC  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4707  0001DE  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4708  0001E0  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4709  0001E2  2EE8               	decfsz	wreg,f,c
  4710  0001E4  D7F8               	goto	u2705
  4711  0001E6  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4712  0001EA  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4713  0001EE  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4714  0001F2  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4718  0001F6  C0D2  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4719  0001FA  D000               	goto	l2922
  4720  0001FC                     l2922:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;inc\CANlib.h: 763: }
  4724                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4725  0001FC  0100               	movlb	0	; () banked
  4726  0001FE  05D1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4727  000200  A4D8               	btfss	status,2,c
  4728  000202  D059               	goto	l2940
  4729                           
  4730                           ; BSR set to: 0
  4731  000204  0100               	movlb	0	; () banked
  4732  000206  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4733  000208  A4D8               	btfss	status,2,c
  4734  00020A  D055               	goto	l2940
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;inc\CANlib.h: 766: {
  4738                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4739  00020C  010F               	movlb	15	; () banked
  4740  00020E  9705               	bcf	5,3,b	;volatile
  4741                           
  4742                           ; BSR set to: 15
  4743                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4744  000210  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4745  000214  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4746  000218  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4747  00021C  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4748  000220  0E04               	movlw	4
  4749  000222  D006               	goto	u2730
  4750  000224                     u2735:
  4751  000224  0100               	movlb	0	; () banked
  4752  000226  90D8               	bcf	status,0,c
  4753  000228  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4754  00022A  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4755  00022C  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4756  00022E  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4757  000230                     u2730:
  4758  000230  2EE8               	decfsz	wreg,f,c
  4759  000232  D7F8               	goto	u2735
  4760  000234  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4761  000238  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4762  00023C  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4763  000240  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4767  000244  0100               	movlb	0	; () banked
  4768  000246  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4769  000248  0100               	movlb	0	; () banked
  4770  00024A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4771  00024C  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4772  00024E  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4773  000250  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4777  000252  C0D2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4781  000256  0E07               	movlw	7
  4782  000258  0100               	movlb	0	; () banked
  4783  00025A  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  4784  00025C  0100               	movlb	0	; () banked
  4785  00025E  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4786  000260  0E00               	movlw	0
  4787  000262  0100               	movlb	0	; () banked
  4788  000264  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4789  000266  0100               	movlb	0	; () banked
  4790  000268  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4791  00026A  0E00               	movlw	0
  4792  00026C  0100               	movlb	0	; () banked
  4793  00026E  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4794  000270  0100               	movlb	0	; () banked
  4795  000272  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4796  000274  0E00               	movlw	0
  4797  000276  0100               	movlb	0	; () banked
  4798  000278  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4799  00027A  0100               	movlb	0	; () banked
  4800  00027C  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4804  00027E  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4805  000282  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4806  000286  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4807  00028A  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4808  00028E  0E05               	movlw	5
  4809  000290                     u2745:
  4810  000290  90D8               	bcf	status,0,c
  4811  000292  0100               	movlb	0	; () banked
  4812  000294  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  4813  000296  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4814  000298  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4815  00029A  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4816  00029C  2EE8               	decfsz	wreg,f,c
  4817  00029E  D7F8               	goto	u2745
  4818  0002A0  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4819  0002A4  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4820  0002A8  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4821  0002AC  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4825  0002B0  C0D2  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4826  0002B4  D000               	goto	l2940
  4827  0002B6                     l2940:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;inc\CANlib.h: 776: }
  4831                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4832  0002B6  0E02               	movlw	2
  4833  0002B8  0100               	movlb	0	; () banked
  4834  0002BA  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4835  0002BC  A4D8               	btfss	status,2,c
  4836  0002BE  D059               	goto	l2958
  4837                           
  4838                           ; BSR set to: 0
  4839  0002C0  0100               	movlb	0	; () banked
  4840  0002C2  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4841  0002C4  A4D8               	btfss	status,2,c
  4842  0002C6  D055               	goto	l2958
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;inc\CANlib.h: 779: {
  4846                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4847  0002C8  010F               	movlb	15	; () banked
  4848  0002CA  9709               	bcf	9,3,b	;volatile
  4849                           
  4850                           ; BSR set to: 15
  4851                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4852  0002CC  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4853  0002D0  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4854  0002D4  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4855  0002D8  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4856  0002DC  0E04               	movlw	4
  4857  0002DE  D006               	goto	u2770
  4858  0002E0                     u2775:
  4859  0002E0  0100               	movlb	0	; () banked
  4860  0002E2  90D8               	bcf	status,0,c
  4861  0002E4  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4862  0002E6  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4863  0002E8  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4864  0002EA  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4865  0002EC                     u2770:
  4866  0002EC  2EE8               	decfsz	wreg,f,c
  4867  0002EE  D7F8               	goto	u2775
  4868  0002F0  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4869  0002F4  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4870  0002F8  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4871  0002FC  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4875  000300  0100               	movlb	0	; () banked
  4876  000302  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4877  000304  0100               	movlb	0	; () banked
  4878  000306  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4879  000308  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4880  00030A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4881  00030C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4885  00030E  C0D2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4889  000312  0E07               	movlw	7
  4890  000314  0100               	movlb	0	; () banked
  4891  000316  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  4892  000318  0100               	movlb	0	; () banked
  4893  00031A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4894  00031C  0E00               	movlw	0
  4895  00031E  0100               	movlb	0	; () banked
  4896  000320  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4897  000322  0100               	movlb	0	; () banked
  4898  000324  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4899  000326  0E00               	movlw	0
  4900  000328  0100               	movlb	0	; () banked
  4901  00032A  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4902  00032C  0100               	movlb	0	; () banked
  4903  00032E  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4904  000330  0E00               	movlw	0
  4905  000332  0100               	movlb	0	; () banked
  4906  000334  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4907  000336  0100               	movlb	0	; () banked
  4908  000338  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4912  00033A  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4913  00033E  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4914  000342  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4915  000346  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4916  00034A  0E05               	movlw	5
  4917  00034C                     u2785:
  4918  00034C  90D8               	bcf	status,0,c
  4919  00034E  0100               	movlb	0	; () banked
  4920  000350  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  4921  000352  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4922  000354  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4923  000356  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4924  000358  2EE8               	decfsz	wreg,f,c
  4925  00035A  D7F8               	goto	u2785
  4926  00035C  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4927  000360  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4928  000364  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4929  000368  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4933  00036C  C0D2  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4934  000370  D000               	goto	l2958
  4935  000372                     l2958:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 789: }
  4939                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4940  000372  0E03               	movlw	3
  4941  000374  0100               	movlb	0	; () banked
  4942  000376  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4943  000378  A4D8               	btfss	status,2,c
  4944  00037A  D059               	goto	l2976
  4945                           
  4946                           ; BSR set to: 0
  4947  00037C  0100               	movlb	0	; () banked
  4948  00037E  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4949  000380  A4D8               	btfss	status,2,c
  4950  000382  D055               	goto	l2976
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;inc\CANlib.h: 792: {
  4954                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4955  000384  010F               	movlb	15	; () banked
  4956  000386  970D               	bcf	13,3,b	;volatile
  4957                           
  4958                           ; BSR set to: 15
  4959                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4960  000388  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4961  00038C  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4962  000390  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4963  000394  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4964  000398  0E04               	movlw	4
  4965  00039A  D006               	goto	u2810
  4966  00039C                     u2815:
  4967  00039C  0100               	movlb	0	; () banked
  4968  00039E  90D8               	bcf	status,0,c
  4969  0003A0  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4970  0003A2  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4971  0003A4  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4972  0003A6  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4973  0003A8                     u2810:
  4974  0003A8  2EE8               	decfsz	wreg,f,c
  4975  0003AA  D7F8               	goto	u2815
  4976  0003AC  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4977  0003B0  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4978  0003B4  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4979  0003B8  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4983  0003BC  0100               	movlb	0	; () banked
  4984  0003BE  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4985  0003C0  0100               	movlb	0	; () banked
  4986  0003C2  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4987  0003C4  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4988  0003C6  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4989  0003C8  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4993  0003CA  C0D2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4997  0003CE  0E07               	movlw	7
  4998  0003D0  0100               	movlb	0	; () banked
  4999  0003D2  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5000  0003D4  0100               	movlb	0	; () banked
  5001  0003D6  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5002  0003D8  0E00               	movlw	0
  5003  0003DA  0100               	movlb	0	; () banked
  5004  0003DC  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5005  0003DE  0100               	movlb	0	; () banked
  5006  0003E0  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5007  0003E2  0E00               	movlw	0
  5008  0003E4  0100               	movlb	0	; () banked
  5009  0003E6  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5010  0003E8  0100               	movlb	0	; () banked
  5011  0003EA  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5012  0003EC  0E00               	movlw	0
  5013  0003EE  0100               	movlb	0	; () banked
  5014  0003F0  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5015  0003F2  0100               	movlb	0	; () banked
  5016  0003F4  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5020  0003F6  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5021  0003FA  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5022  0003FE  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5023  000402  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5024  000406  0E05               	movlw	5
  5025  000408                     u2825:
  5026  000408  90D8               	bcf	status,0,c
  5027  00040A  0100               	movlb	0	; () banked
  5028  00040C  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  5029  00040E  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5030  000410  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5031  000412  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5032  000414  2EE8               	decfsz	wreg,f,c
  5033  000416  D7F8               	goto	u2825
  5034  000418  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5035  00041C  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5036  000420  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5037  000424  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5041  000428  C0D2  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5042  00042C  D000               	goto	l2976
  5043  00042E                     l2976:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;inc\CANlib.h: 802: }
  5047                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5048  00042E  0E04               	movlw	4
  5049  000430  0100               	movlb	0	; () banked
  5050  000432  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5051  000434  A4D8               	btfss	status,2,c
  5052  000436  D059               	goto	l2994
  5053                           
  5054                           ; BSR set to: 0
  5055  000438  0100               	movlb	0	; () banked
  5056  00043A  29CC               	incf	CANSetFilter@type& (0+255),w,b
  5057  00043C  A4D8               	btfss	status,2,c
  5058  00043E  D055               	goto	l2994
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;inc\CANlib.h: 805: {
  5062                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5063  000440  010F               	movlb	15	; () banked
  5064  000442  9711               	bcf	17,3,b	;volatile
  5065                           
  5066                           ; BSR set to: 15
  5067                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5068  000444  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5069  000448  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5070  00044C  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5071  000450  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5072  000454  0E04               	movlw	4
  5073  000456  D006               	goto	u2850
  5074  000458                     u2855:
  5075  000458  0100               	movlb	0	; () banked
  5076  00045A  90D8               	bcf	status,0,c
  5077  00045C  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5078  00045E  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5079  000460  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5080  000462  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5081  000464                     u2850:
  5082  000464  2EE8               	decfsz	wreg,f,c
  5083  000466  D7F8               	goto	u2855
  5084  000468  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5085  00046C  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5086  000470  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5087  000474  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5091  000478  0100               	movlb	0	; () banked
  5092  00047A  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5093  00047C  0100               	movlb	0	; () banked
  5094  00047E  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5095  000480  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5096  000482  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5097  000484  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5101  000486  C0D2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5105  00048A  0E07               	movlw	7
  5106  00048C  0100               	movlb	0	; () banked
  5107  00048E  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5108  000490  0100               	movlb	0	; () banked
  5109  000492  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5110  000494  0E00               	movlw	0
  5111  000496  0100               	movlb	0	; () banked
  5112  000498  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5113  00049A  0100               	movlb	0	; () banked
  5114  00049C  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5115  00049E  0E00               	movlw	0
  5116  0004A0  0100               	movlb	0	; () banked
  5117  0004A2  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5118  0004A4  0100               	movlb	0	; () banked
  5119  0004A6  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5120  0004A8  0E00               	movlw	0
  5121  0004AA  0100               	movlb	0	; () banked
  5122  0004AC  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5123  0004AE  0100               	movlb	0	; () banked
  5124  0004B0  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5128  0004B2  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5129  0004B6  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5130  0004BA  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5131  0004BE  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5132  0004C2  0E05               	movlw	5
  5133  0004C4                     u2865:
  5134  0004C4  90D8               	bcf	status,0,c
  5135  0004C6  0100               	movlb	0	; () banked
  5136  0004C8  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  5137  0004CA  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5138  0004CC  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5139  0004CE  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5140  0004D0  2EE8               	decfsz	wreg,f,c
  5141  0004D2  D7F8               	goto	u2865
  5142  0004D4  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5143  0004D8  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5144  0004DC  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5145  0004E0  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5149  0004E4  C0D2  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5150  0004E8  D000               	goto	l2994
  5151  0004EA                     l2994:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;inc\CANlib.h: 815: }
  5155                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5156  0004EA  0E05               	movlw	5
  5157  0004EC  0100               	movlb	0	; () banked
  5158  0004EE  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5159  0004F0  A4D8               	btfss	status,2,c
  5160  0004F2  D059               	goto	l3012
  5161                           
  5162                           ; BSR set to: 0
  5163  0004F4  0100               	movlb	0	; () banked
  5164  0004F6  29CC               	incf	CANSetFilter@type& (0+255),w,b
  5165  0004F8  A4D8               	btfss	status,2,c
  5166  0004FA  D055               	goto	l3012
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;inc\CANlib.h: 818: {
  5170                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5171  0004FC  010F               	movlb	15	; () banked
  5172  0004FE  9715               	bcf	21,3,b	;volatile
  5173                           
  5174                           ; BSR set to: 15
  5175                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5176  000500  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5177  000504  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5178  000508  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5179  00050C  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5180  000510  0E04               	movlw	4
  5181  000512  D006               	goto	u2890
  5182  000514                     u2895:
  5183  000514  0100               	movlb	0	; () banked
  5184  000516  90D8               	bcf	status,0,c
  5185  000518  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5186  00051A  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5187  00051C  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5188  00051E  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5189  000520                     u2890:
  5190  000520  2EE8               	decfsz	wreg,f,c
  5191  000522  D7F8               	goto	u2895
  5192  000524  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5193  000528  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5194  00052C  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5195  000530  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5199  000534  0100               	movlb	0	; () banked
  5200  000536  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5201  000538  0100               	movlb	0	; () banked
  5202  00053A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5203  00053C  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5204  00053E  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5205  000540  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5209  000542  C0D2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5213  000546  0E07               	movlw	7
  5214  000548  0100               	movlb	0	; () banked
  5215  00054A  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5216  00054C  0100               	movlb	0	; () banked
  5217  00054E  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5218  000550  0E00               	movlw	0
  5219  000552  0100               	movlb	0	; () banked
  5220  000554  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5221  000556  0100               	movlb	0	; () banked
  5222  000558  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5223  00055A  0E00               	movlw	0
  5224  00055C  0100               	movlb	0	; () banked
  5225  00055E  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5226  000560  0100               	movlb	0	; () banked
  5227  000562  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5228  000564  0E00               	movlw	0
  5229  000566  0100               	movlb	0	; () banked
  5230  000568  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5231  00056A  0100               	movlb	0	; () banked
  5232  00056C  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5236  00056E  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5237  000572  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5238  000576  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5239  00057A  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5240  00057E  0E05               	movlw	5
  5241  000580                     u2905:
  5242  000580  90D8               	bcf	status,0,c
  5243  000582  0100               	movlb	0	; () banked
  5244  000584  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  5245  000586  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5246  000588  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5247  00058A  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5248  00058C  2EE8               	decfsz	wreg,f,c
  5249  00058E  D7F8               	goto	u2905
  5250  000590  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5251  000594  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5252  000598  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5253  00059C  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5257  0005A0  C0D2  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5258  0005A4  D000               	goto	l3012
  5259  0005A6                     l3012:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 828: }
  5263                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5264  0005A6  0100               	movlb	0	; () banked
  5265  0005A8  51D1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5266  0005AA  0100               	movlb	0	; () banked
  5267  0005AC  A4D8               	btfss	status,2,c
  5268  0005AE  D08B               	goto	l3046
  5269                           
  5270                           ; BSR set to: 0
  5271  0005B0  0EF7               	movlw	247
  5272  0005B2  0100               	movlb	0	; () banked
  5273  0005B4  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5274  0005B6  A4D8               	btfss	status,2,c
  5275  0005B8  D086               	goto	l3046
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;inc\CANlib.h: 832: {
  5279                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5280  0005BA  010F               	movlb	15	; () banked
  5281  0005BC  8701               	bsf	1,3,b	;volatile
  5282                           
  5283                           ; BSR set to: 15
  5284                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5285  0005BE  0100               	movlb	0	; () banked
  5286  0005C0  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5287  0005C2  0100               	movlb	0	; () banked
  5288  0005C4  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5289  0005C6  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5290  0005C8  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5291  0005CA  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5295  0005CC  C0D2  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5299  0005D0  0E00               	movlw	0
  5300  0005D2  0100               	movlb	0	; () banked
  5301  0005D4  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5302  0005D6  0100               	movlb	0	; () banked
  5303  0005D8  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5304  0005DA  0EFF               	movlw	255
  5305  0005DC  0100               	movlb	0	; () banked
  5306  0005DE  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5307  0005E0  0100               	movlb	0	; () banked
  5308  0005E2  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5309  0005E4  0E00               	movlw	0
  5310  0005E6  0100               	movlb	0	; () banked
  5311  0005E8  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5312  0005EA  0100               	movlb	0	; () banked
  5313  0005EC  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5314  0005EE  0E00               	movlw	0
  5315  0005F0  0100               	movlb	0	; () banked
  5316  0005F2  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5317  0005F4  0100               	movlb	0	; () banked
  5318  0005F6  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5322  0005F8  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5323  0005FC  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5324  000600  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5325  000604  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5326  000608  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5327  00060C  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5328  000610  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5329  000614  0100               	movlb	0	; () banked
  5330  000616  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5331  000618  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5332  00061C  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5333  000620  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5334  000624  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5338  000628  C0D2  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5342  00062C  0100               	movlb	0	; () banked
  5343  00062E  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5344  000630  D003               	goto	l481
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5348  000632  010F               	movlb	15	; () banked
  5349  000634  8101               	bsf	1,0,b	;volatile
  5350  000636  D002               	goto	l482
  5351  000638                     l481:
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;inc\CANlib.h: 844: else
  5355                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5356  000638  010F               	movlb	15	; () banked
  5357  00063A  9101               	bcf	1,0,b	;volatile
  5358  00063C                     l482:
  5359                           
  5360                           ; BSR set to: 15
  5361                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5362  00063C  0100               	movlb	0	; () banked
  5363  00063E  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5364  000640  D003               	goto	l483
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5368  000642  010F               	movlb	15	; () banked
  5369  000644  8301               	bsf	1,1,b	;volatile
  5370  000646  D002               	goto	l484
  5371  000648                     l483:
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;inc\CANlib.h: 849: else
  5375                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5376  000648  010F               	movlb	15	; () banked
  5377  00064A  9301               	bcf	1,1,b	;volatile
  5378  00064C                     l484:
  5379                           
  5380                           ; BSR set to: 15
  5381                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5382  00064C  0100               	movlb	0	; () banked
  5383  00064E  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5384  000650  D003               	goto	l485
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5388  000652  010F               	movlb	15	; () banked
  5389  000654  8B01               	bsf	1,5,b	;volatile
  5390  000656  D002               	goto	l486
  5391  000658                     l485:
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;inc\CANlib.h: 854: else
  5395                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5396  000658  010F               	movlb	15	; () banked
  5397  00065A  9B01               	bcf	1,5,b	;volatile
  5398  00065C                     l486:
  5399                           
  5400                           ; BSR set to: 15
  5401                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5402  00065C  0100               	movlb	0	; () banked
  5403  00065E  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5404  000660  D003               	goto	l487
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5408  000662  010F               	movlb	15	; () banked
  5409  000664  8D01               	bsf	1,6,b	;volatile
  5410  000666  D002               	goto	l488
  5411  000668                     l487:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;inc\CANlib.h: 859: else
  5415                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5416  000668  010F               	movlb	15	; () banked
  5417  00066A  9D01               	bcf	1,6,b	;volatile
  5418  00066C                     l488:
  5419                           
  5420                           ; BSR set to: 15
  5421                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5422  00066C  0100               	movlb	0	; () banked
  5423  00066E  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5424  000670  D003               	goto	l489
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5428  000672  010F               	movlb	15	; () banked
  5429  000674  8F01               	bsf	1,7,b	;volatile
  5430  000676  D003               	goto	l3040
  5431  000678                     l489:
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;inc\CANlib.h: 864: else
  5435                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5436  000678  010F               	movlb	15	; () banked
  5437  00067A  9F01               	bcf	1,7,b	;volatile
  5438  00067C  D000               	goto	l3040
  5439  00067E                     l3040:
  5440                           
  5441                           ; BSR set to: 15
  5442                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5443  00067E  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5444  000682  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5445  000686  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5446  00068A  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5447  00068E  0E16               	movlw	22
  5448  000690  D006               	goto	u2980
  5449  000692                     u2985:
  5450  000692  0100               	movlb	0	; () banked
  5451  000694  90D8               	bcf	status,0,c
  5452  000696  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5453  000698  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5454  00069A  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5455  00069C  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5456  00069E                     u2980:
  5457  00069E  2EE8               	decfsz	wreg,f,c
  5458  0006A0  D7F8               	goto	u2985
  5459  0006A2  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5460  0006A6  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5461  0006AA  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5462  0006AE  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5466  0006B2  0100               	movlb	0	; () banked
  5467  0006B4  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5468  0006B6  0100               	movlb	0	; () banked
  5469  0006B8  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5470  0006BA  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5471  0006BC  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5472  0006BE  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5476  0006C0  C0D2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5477  0006C4  D000               	goto	l3046
  5478  0006C6                     l3046:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;inc\CANlib.h: 870: }
  5482                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5483  0006C6  0100               	movlb	0	; () banked
  5484  0006C8  05D1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5485  0006CA  A4D8               	btfss	status,2,c
  5486  0006CC  D08B               	goto	l3080
  5487                           
  5488                           ; BSR set to: 0
  5489  0006CE  0EF7               	movlw	247
  5490  0006D0  0100               	movlb	0	; () banked
  5491  0006D2  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5492  0006D4  A4D8               	btfss	status,2,c
  5493  0006D6  D086               	goto	l3080
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;inc\CANlib.h: 873: {
  5497                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5498  0006D8  010F               	movlb	15	; () banked
  5499  0006DA  8705               	bsf	5,3,b	;volatile
  5500                           
  5501                           ; BSR set to: 15
  5502                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5503  0006DC  0100               	movlb	0	; () banked
  5504  0006DE  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5505  0006E0  0100               	movlb	0	; () banked
  5506  0006E2  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5507  0006E4  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5508  0006E6  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5509  0006E8  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5513  0006EA  C0D2  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5517  0006EE  0E00               	movlw	0
  5518  0006F0  0100               	movlb	0	; () banked
  5519  0006F2  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5520  0006F4  0100               	movlb	0	; () banked
  5521  0006F6  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5522  0006F8  0EFF               	movlw	255
  5523  0006FA  0100               	movlb	0	; () banked
  5524  0006FC  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5525  0006FE  0100               	movlb	0	; () banked
  5526  000700  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5527  000702  0E00               	movlw	0
  5528  000704  0100               	movlb	0	; () banked
  5529  000706  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5530  000708  0100               	movlb	0	; () banked
  5531  00070A  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5532  00070C  0E00               	movlw	0
  5533  00070E  0100               	movlb	0	; () banked
  5534  000710  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5535  000712  0100               	movlb	0	; () banked
  5536  000714  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5540  000716  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5541  00071A  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5542  00071E  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5543  000722  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5544  000726  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5545  00072A  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5546  00072E  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5547  000732  0100               	movlb	0	; () banked
  5548  000734  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5549  000736  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5550  00073A  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5551  00073E  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5552  000742  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5556  000746  C0D2  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5560  00074A  0100               	movlb	0	; () banked
  5561  00074C  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5562  00074E  D003               	goto	l492
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5566  000750  010F               	movlb	15	; () banked
  5567  000752  8105               	bsf	5,0,b	;volatile
  5568  000754  D002               	goto	l493
  5569  000756                     l492:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;inc\CANlib.h: 885: else
  5573                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5574  000756  010F               	movlb	15	; () banked
  5575  000758  9105               	bcf	5,0,b	;volatile
  5576  00075A                     l493:
  5577                           
  5578                           ; BSR set to: 15
  5579                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5580  00075A  0100               	movlb	0	; () banked
  5581  00075C  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5582  00075E  D003               	goto	l494
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5586  000760  010F               	movlb	15	; () banked
  5587  000762  8305               	bsf	5,1,b	;volatile
  5588  000764  D002               	goto	l495
  5589  000766                     l494:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;inc\CANlib.h: 890: else
  5593                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5594  000766  010F               	movlb	15	; () banked
  5595  000768  9305               	bcf	5,1,b	;volatile
  5596  00076A                     l495:
  5597                           
  5598                           ; BSR set to: 15
  5599                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5600  00076A  0100               	movlb	0	; () banked
  5601  00076C  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5602  00076E  D003               	goto	l496
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5606  000770  010F               	movlb	15	; () banked
  5607  000772  8B05               	bsf	5,5,b	;volatile
  5608  000774  D002               	goto	l497
  5609  000776                     l496:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;inc\CANlib.h: 895: else
  5613                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5614  000776  010F               	movlb	15	; () banked
  5615  000778  9B05               	bcf	5,5,b	;volatile
  5616  00077A                     l497:
  5617                           
  5618                           ; BSR set to: 15
  5619                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5620  00077A  0100               	movlb	0	; () banked
  5621  00077C  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5622  00077E  D003               	goto	l498
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5626  000780  010F               	movlb	15	; () banked
  5627  000782  8D05               	bsf	5,6,b	;volatile
  5628  000784  D002               	goto	l499
  5629  000786                     l498:
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;inc\CANlib.h: 900: else
  5633                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5634  000786  010F               	movlb	15	; () banked
  5635  000788  9D05               	bcf	5,6,b	;volatile
  5636  00078A                     l499:
  5637                           
  5638                           ; BSR set to: 15
  5639                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5640  00078A  0100               	movlb	0	; () banked
  5641  00078C  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5642  00078E  D003               	goto	l500
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5646  000790  010F               	movlb	15	; () banked
  5647  000792  8F05               	bsf	5,7,b	;volatile
  5648  000794  D003               	goto	l3074
  5649  000796                     l500:
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;inc\CANlib.h: 905: else
  5653                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5654  000796  010F               	movlb	15	; () banked
  5655  000798  9F05               	bcf	5,7,b	;volatile
  5656  00079A  D000               	goto	l3074
  5657  00079C                     l3074:
  5658                           
  5659                           ; BSR set to: 15
  5660                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5661  00079C  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5662  0007A0  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5663  0007A4  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5664  0007A8  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5665  0007AC  0E16               	movlw	22
  5666  0007AE  D006               	goto	u3060
  5667  0007B0                     u3065:
  5668  0007B0  0100               	movlb	0	; () banked
  5669  0007B2  90D8               	bcf	status,0,c
  5670  0007B4  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5671  0007B6  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5672  0007B8  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5673  0007BA  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5674  0007BC                     u3060:
  5675  0007BC  2EE8               	decfsz	wreg,f,c
  5676  0007BE  D7F8               	goto	u3065
  5677  0007C0  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5678  0007C4  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5679  0007C8  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5680  0007CC  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5684  0007D0  0100               	movlb	0	; () banked
  5685  0007D2  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5686  0007D4  0100               	movlb	0	; () banked
  5687  0007D6  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5688  0007D8  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5689  0007DA  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5690  0007DC  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5694  0007DE  C0D2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5695  0007E2  D000               	goto	l3080
  5696  0007E4                     l3080:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;inc\CANlib.h: 911: }
  5700                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5701  0007E4  0E02               	movlw	2
  5702  0007E6  0100               	movlb	0	; () banked
  5703  0007E8  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5704  0007EA  A4D8               	btfss	status,2,c
  5705  0007EC  D08B               	goto	l3114
  5706                           
  5707                           ; BSR set to: 0
  5708  0007EE  0EF7               	movlw	247
  5709  0007F0  0100               	movlb	0	; () banked
  5710  0007F2  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5711  0007F4  A4D8               	btfss	status,2,c
  5712  0007F6  D086               	goto	l3114
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 915: {
  5716                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5717  0007F8  010F               	movlb	15	; () banked
  5718  0007FA  8709               	bsf	9,3,b	;volatile
  5719                           
  5720                           ; BSR set to: 15
  5721                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5722  0007FC  0100               	movlb	0	; () banked
  5723  0007FE  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5724  000800  0100               	movlb	0	; () banked
  5725  000802  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5726  000804  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5727  000806  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5728  000808  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5732  00080A  C0D2  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5736  00080E  0E00               	movlw	0
  5737  000810  0100               	movlb	0	; () banked
  5738  000812  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5739  000814  0100               	movlb	0	; () banked
  5740  000816  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5741  000818  0EFF               	movlw	255
  5742  00081A  0100               	movlb	0	; () banked
  5743  00081C  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5744  00081E  0100               	movlb	0	; () banked
  5745  000820  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5746  000822  0E00               	movlw	0
  5747  000824  0100               	movlb	0	; () banked
  5748  000826  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5749  000828  0100               	movlb	0	; () banked
  5750  00082A  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5751  00082C  0E00               	movlw	0
  5752  00082E  0100               	movlb	0	; () banked
  5753  000830  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5754  000832  0100               	movlb	0	; () banked
  5755  000834  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5759  000836  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5760  00083A  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5761  00083E  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5762  000842  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5763  000846  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5764  00084A  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5765  00084E  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5766  000852  0100               	movlb	0	; () banked
  5767  000854  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5768  000856  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5769  00085A  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5770  00085E  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5771  000862  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5775  000866  C0D2  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5779  00086A  0100               	movlb	0	; () banked
  5780  00086C  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5781  00086E  D003               	goto	l503
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5785  000870  010F               	movlb	15	; () banked
  5786  000872  8109               	bsf	9,0,b	;volatile
  5787  000874  D002               	goto	l504
  5788  000876                     l503:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 927: else
  5792                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5793  000876  010F               	movlb	15	; () banked
  5794  000878  9109               	bcf	9,0,b	;volatile
  5795  00087A                     l504:
  5796                           
  5797                           ; BSR set to: 15
  5798                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5799  00087A  0100               	movlb	0	; () banked
  5800  00087C  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5801  00087E  D003               	goto	l505
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5805  000880  010F               	movlb	15	; () banked
  5806  000882  8309               	bsf	9,1,b	;volatile
  5807  000884  D002               	goto	l506
  5808  000886                     l505:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 932: else
  5812                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5813  000886  010F               	movlb	15	; () banked
  5814  000888  9309               	bcf	9,1,b	;volatile
  5815  00088A                     l506:
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5819  00088A  0100               	movlb	0	; () banked
  5820  00088C  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5821  00088E  D003               	goto	l507
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5825  000890  010F               	movlb	15	; () banked
  5826  000892  8B09               	bsf	9,5,b	;volatile
  5827  000894  D002               	goto	l508
  5828  000896                     l507:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 937: else
  5832                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5833  000896  010F               	movlb	15	; () banked
  5834  000898  9B09               	bcf	9,5,b	;volatile
  5835  00089A                     l508:
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5839  00089A  0100               	movlb	0	; () banked
  5840  00089C  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5841  00089E  D003               	goto	l509
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5845  0008A0  010F               	movlb	15	; () banked
  5846  0008A2  8D09               	bsf	9,6,b	;volatile
  5847  0008A4  D002               	goto	l510
  5848  0008A6                     l509:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;inc\CANlib.h: 942: else
  5852                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5853  0008A6  010F               	movlb	15	; () banked
  5854  0008A8  9D09               	bcf	9,6,b	;volatile
  5855  0008AA                     l510:
  5856                           
  5857                           ; BSR set to: 15
  5858                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5859  0008AA  0100               	movlb	0	; () banked
  5860  0008AC  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5861  0008AE  D003               	goto	l511
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5865  0008B0  010F               	movlb	15	; () banked
  5866  0008B2  8F09               	bsf	9,7,b	;volatile
  5867  0008B4  D003               	goto	l3108
  5868  0008B6                     l511:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;inc\CANlib.h: 947: else
  5872                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5873  0008B6  010F               	movlb	15	; () banked
  5874  0008B8  9F09               	bcf	9,7,b	;volatile
  5875  0008BA  D000               	goto	l3108
  5876  0008BC                     l3108:
  5877                           
  5878                           ; BSR set to: 15
  5879                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5880  0008BC  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5881  0008C0  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5882  0008C4  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5883  0008C8  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5884  0008CC  0E16               	movlw	22
  5885  0008CE  D006               	goto	u3140
  5886  0008D0                     u3145:
  5887  0008D0  0100               	movlb	0	; () banked
  5888  0008D2  90D8               	bcf	status,0,c
  5889  0008D4  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5890  0008D6  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5891  0008D8  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5892  0008DA  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5893  0008DC                     u3140:
  5894  0008DC  2EE8               	decfsz	wreg,f,c
  5895  0008DE  D7F8               	goto	u3145
  5896  0008E0  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5897  0008E4  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5898  0008E8  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5899  0008EC  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5903  0008F0  0100               	movlb	0	; () banked
  5904  0008F2  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5905  0008F4  0100               	movlb	0	; () banked
  5906  0008F6  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5907  0008F8  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5908  0008FA  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5909  0008FC  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5913  0008FE  C0D2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5914  000902  D000               	goto	l3114
  5915  000904                     l3114:
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;inc\CANlib.h: 953: }
  5919                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5920  000904  0E03               	movlw	3
  5921  000906  0100               	movlb	0	; () banked
  5922  000908  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5923  00090A  A4D8               	btfss	status,2,c
  5924  00090C  D08B               	goto	l3148
  5925                           
  5926                           ; BSR set to: 0
  5927  00090E  0EF7               	movlw	247
  5928  000910  0100               	movlb	0	; () banked
  5929  000912  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5930  000914  A4D8               	btfss	status,2,c
  5931  000916  D086               	goto	l3148
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;inc\CANlib.h: 956: {
  5935                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5936  000918  010F               	movlb	15	; () banked
  5937  00091A  870D               	bsf	13,3,b	;volatile
  5938                           
  5939                           ; BSR set to: 15
  5940                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5941  00091C  0100               	movlb	0	; () banked
  5942  00091E  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5943  000920  0100               	movlb	0	; () banked
  5944  000922  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5945  000924  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5946  000926  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5947  000928  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5951  00092A  C0D2  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5955  00092E  0E00               	movlw	0
  5956  000930  0100               	movlb	0	; () banked
  5957  000932  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5958  000934  0100               	movlb	0	; () banked
  5959  000936  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5960  000938  0EFF               	movlw	255
  5961  00093A  0100               	movlb	0	; () banked
  5962  00093C  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5963  00093E  0100               	movlb	0	; () banked
  5964  000940  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5965  000942  0E00               	movlw	0
  5966  000944  0100               	movlb	0	; () banked
  5967  000946  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5968  000948  0100               	movlb	0	; () banked
  5969  00094A  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5970  00094C  0E00               	movlw	0
  5971  00094E  0100               	movlb	0	; () banked
  5972  000950  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5973  000952  0100               	movlb	0	; () banked
  5974  000954  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5978  000956  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5979  00095A  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5980  00095E  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5981  000962  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5982  000966  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5983  00096A  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5984  00096E  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5985  000972  0100               	movlb	0	; () banked
  5986  000974  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5987  000976  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5988  00097A  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5989  00097E  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5990  000982  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5994  000986  C0D2  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5998  00098A  0100               	movlb	0	; () banked
  5999  00098C  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6000  00098E  D003               	goto	l514
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6004  000990  010F               	movlb	15	; () banked
  6005  000992  810D               	bsf	13,0,b	;volatile
  6006  000994  D002               	goto	l515
  6007  000996                     l514:
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 968: else
  6011                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6012  000996  010F               	movlb	15	; () banked
  6013  000998  910D               	bcf	13,0,b	;volatile
  6014  00099A                     l515:
  6015                           
  6016                           ; BSR set to: 15
  6017                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6018  00099A  0100               	movlb	0	; () banked
  6019  00099C  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6020  00099E  D003               	goto	l516
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6024  0009A0  010F               	movlb	15	; () banked
  6025  0009A2  830D               	bsf	13,1,b	;volatile
  6026  0009A4  D002               	goto	l517
  6027  0009A6                     l516:
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;inc\CANlib.h: 973: else
  6031                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6032  0009A6  010F               	movlb	15	; () banked
  6033  0009A8  930D               	bcf	13,1,b	;volatile
  6034  0009AA                     l517:
  6035                           
  6036                           ; BSR set to: 15
  6037                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6038  0009AA  0100               	movlb	0	; () banked
  6039  0009AC  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6040  0009AE  D003               	goto	l518
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6044  0009B0  010F               	movlb	15	; () banked
  6045  0009B2  8B0D               	bsf	13,5,b	;volatile
  6046  0009B4  D002               	goto	l519
  6047  0009B6                     l518:
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;inc\CANlib.h: 978: else
  6051                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6052  0009B6  010F               	movlb	15	; () banked
  6053  0009B8  9B0D               	bcf	13,5,b	;volatile
  6054  0009BA                     l519:
  6055                           
  6056                           ; BSR set to: 15
  6057                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6058  0009BA  0100               	movlb	0	; () banked
  6059  0009BC  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6060  0009BE  D003               	goto	l520
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6064  0009C0  010F               	movlb	15	; () banked
  6065  0009C2  8D0D               	bsf	13,6,b	;volatile
  6066  0009C4  D002               	goto	l521
  6067  0009C6                     l520:
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;inc\CANlib.h: 983: else
  6071                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6072  0009C6  010F               	movlb	15	; () banked
  6073  0009C8  9D0D               	bcf	13,6,b	;volatile
  6074  0009CA                     l521:
  6075                           
  6076                           ; BSR set to: 15
  6077                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6078  0009CA  0100               	movlb	0	; () banked
  6079  0009CC  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6080  0009CE  D003               	goto	l522
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6084  0009D0  010F               	movlb	15	; () banked
  6085  0009D2  8F0D               	bsf	13,7,b	;volatile
  6086  0009D4  D003               	goto	l3142
  6087  0009D6                     l522:
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;inc\CANlib.h: 988: else
  6091                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6092  0009D6  010F               	movlb	15	; () banked
  6093  0009D8  9F0D               	bcf	13,7,b	;volatile
  6094  0009DA  D000               	goto	l3142
  6095  0009DC                     l3142:
  6096                           
  6097                           ; BSR set to: 15
  6098                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6099  0009DC  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  6100  0009E0  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6101  0009E4  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6102  0009E8  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6103  0009EC  0E16               	movlw	22
  6104  0009EE  D006               	goto	u3220
  6105  0009F0                     u3225:
  6106  0009F0  0100               	movlb	0	; () banked
  6107  0009F2  90D8               	bcf	status,0,c
  6108  0009F4  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6109  0009F6  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6110  0009F8  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6111  0009FA  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  6112  0009FC                     u3220:
  6113  0009FC  2EE8               	decfsz	wreg,f,c
  6114  0009FE  D7F8               	goto	u3225
  6115  000A00  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6116  000A04  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6117  000A08  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6118  000A0C  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6122  000A10  0100               	movlb	0	; () banked
  6123  000A12  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  6124  000A14  0100               	movlb	0	; () banked
  6125  000A16  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6126  000A18  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6127  000A1A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6128  000A1C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6132  000A1E  C0D2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6133  000A22  D000               	goto	l3148
  6134  000A24                     l3148:
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;inc\CANlib.h: 994: }
  6138                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6139  000A24  0E04               	movlw	4
  6140  000A26  0100               	movlb	0	; () banked
  6141  000A28  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6142  000A2A  A4D8               	btfss	status,2,c
  6143  000A2C  D08B               	goto	l3182
  6144                           
  6145                           ; BSR set to: 0
  6146  000A2E  0EF7               	movlw	247
  6147  000A30  0100               	movlb	0	; () banked
  6148  000A32  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  6149  000A34  A4D8               	btfss	status,2,c
  6150  000A36  D086               	goto	l3182
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;inc\CANlib.h: 997: {
  6154                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6155  000A38  010F               	movlb	15	; () banked
  6156  000A3A  8711               	bsf	17,3,b	;volatile
  6157                           
  6158                           ; BSR set to: 15
  6159                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6160  000A3C  0100               	movlb	0	; () banked
  6161  000A3E  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  6162  000A40  0100               	movlb	0	; () banked
  6163  000A42  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6164  000A44  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6165  000A46  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6166  000A48  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6170  000A4A  C0D2  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6174  000A4E  0E00               	movlw	0
  6175  000A50  0100               	movlb	0	; () banked
  6176  000A52  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  6177  000A54  0100               	movlb	0	; () banked
  6178  000A56  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6179  000A58  0EFF               	movlw	255
  6180  000A5A  0100               	movlb	0	; () banked
  6181  000A5C  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6182  000A5E  0100               	movlb	0	; () banked
  6183  000A60  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6184  000A62  0E00               	movlw	0
  6185  000A64  0100               	movlb	0	; () banked
  6186  000A66  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6187  000A68  0100               	movlb	0	; () banked
  6188  000A6A  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6189  000A6C  0E00               	movlw	0
  6190  000A6E  0100               	movlb	0	; () banked
  6191  000A70  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6192  000A72  0100               	movlb	0	; () banked
  6193  000A74  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6197  000A76  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6198  000A7A  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6199  000A7E  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6200  000A82  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6201  000A86  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6202  000A8A  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6203  000A8E  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6204  000A92  0100               	movlb	0	; () banked
  6205  000A94  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6206  000A96  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6207  000A9A  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6208  000A9E  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6209  000AA2  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6213  000AA6  C0D2  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6217  000AAA  0100               	movlb	0	; () banked
  6218  000AAC  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6219  000AAE  D003               	goto	l525
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6223  000AB0  010F               	movlb	15	; () banked
  6224  000AB2  8111               	bsf	17,0,b	;volatile
  6225  000AB4  D002               	goto	l526
  6226  000AB6                     l525:
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;inc\CANlib.h: 1009: else
  6230                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6231  000AB6  010F               	movlb	15	; () banked
  6232  000AB8  9111               	bcf	17,0,b	;volatile
  6233  000ABA                     l526:
  6234                           
  6235                           ; BSR set to: 15
  6236                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6237  000ABA  0100               	movlb	0	; () banked
  6238  000ABC  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6239  000ABE  D003               	goto	l527
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6243  000AC0  010F               	movlb	15	; () banked
  6244  000AC2  8311               	bsf	17,1,b	;volatile
  6245  000AC4  D002               	goto	l528
  6246  000AC6                     l527:
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;inc\CANlib.h: 1014: else
  6250                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6251  000AC6  010F               	movlb	15	; () banked
  6252  000AC8  9311               	bcf	17,1,b	;volatile
  6253  000ACA                     l528:
  6254                           
  6255                           ; BSR set to: 15
  6256                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6257  000ACA  0100               	movlb	0	; () banked
  6258  000ACC  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6259  000ACE  D003               	goto	l529
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6263  000AD0  010F               	movlb	15	; () banked
  6264  000AD2  8B11               	bsf	17,5,b	;volatile
  6265  000AD4  D002               	goto	l530
  6266  000AD6                     l529:
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;inc\CANlib.h: 1019: else
  6270                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6271  000AD6  010F               	movlb	15	; () banked
  6272  000AD8  9B11               	bcf	17,5,b	;volatile
  6273  000ADA                     l530:
  6274                           
  6275                           ; BSR set to: 15
  6276                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6277  000ADA  0100               	movlb	0	; () banked
  6278  000ADC  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6279  000ADE  D003               	goto	l531
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6283  000AE0  010F               	movlb	15	; () banked
  6284  000AE2  8D11               	bsf	17,6,b	;volatile
  6285  000AE4  D002               	goto	l532
  6286  000AE6                     l531:
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;inc\CANlib.h: 1024: else
  6290                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6291  000AE6  010F               	movlb	15	; () banked
  6292  000AE8  9D11               	bcf	17,6,b	;volatile
  6293  000AEA                     l532:
  6294                           
  6295                           ; BSR set to: 15
  6296                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6297  000AEA  0100               	movlb	0	; () banked
  6298  000AEC  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6299  000AEE  D003               	goto	l533
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6303  000AF0  010F               	movlb	15	; () banked
  6304  000AF2  8F11               	bsf	17,7,b	;volatile
  6305  000AF4  D003               	goto	l3176
  6306  000AF6                     l533:
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;inc\CANlib.h: 1029: else
  6310                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6311  000AF6  010F               	movlb	15	; () banked
  6312  000AF8  9F11               	bcf	17,7,b	;volatile
  6313  000AFA  D000               	goto	l3176
  6314  000AFC                     l3176:
  6315                           
  6316                           ; BSR set to: 15
  6317                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6318  000AFC  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  6319  000B00  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6320  000B04  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6321  000B08  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6322  000B0C  0E16               	movlw	22
  6323  000B0E  D006               	goto	u3300
  6324  000B10                     u3305:
  6325  000B10  0100               	movlb	0	; () banked
  6326  000B12  90D8               	bcf	status,0,c
  6327  000B14  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6328  000B16  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6329  000B18  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6330  000B1A  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  6331  000B1C                     u3300:
  6332  000B1C  2EE8               	decfsz	wreg,f,c
  6333  000B1E  D7F8               	goto	u3305
  6334  000B20  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6335  000B24  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6336  000B28  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6337  000B2C  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6341  000B30  0100               	movlb	0	; () banked
  6342  000B32  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  6343  000B34  0100               	movlb	0	; () banked
  6344  000B36  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6345  000B38  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6346  000B3A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6347  000B3C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6351  000B3E  C0D2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6352  000B42  D000               	goto	l3182
  6353  000B44                     l3182:
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;inc\CANlib.h: 1035: }
  6357                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6358  000B44  0E05               	movlw	5
  6359  000B46  0100               	movlb	0	; () banked
  6360  000B48  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6361  000B4A  A4D8               	btfss	status,2,c
  6362  000B4C  D08B               	goto	l546
  6363                           
  6364                           ; BSR set to: 0
  6365  000B4E  0EF7               	movlw	247
  6366  000B50  0100               	movlb	0	; () banked
  6367  000B52  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  6368  000B54  A4D8               	btfss	status,2,c
  6369  000B56  D086               	goto	l546
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;inc\CANlib.h: 1038: {
  6373                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6374  000B58  010F               	movlb	15	; () banked
  6375  000B5A  8715               	bsf	21,3,b	;volatile
  6376                           
  6377                           ; BSR set to: 15
  6378                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6379  000B5C  0100               	movlb	0	; () banked
  6380  000B5E  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  6381  000B60  0100               	movlb	0	; () banked
  6382  000B62  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6383  000B64  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6384  000B66  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6385  000B68  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6389  000B6A  C0D2  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6393  000B6E  0E00               	movlw	0
  6394  000B70  0100               	movlb	0	; () banked
  6395  000B72  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  6396  000B74  0100               	movlb	0	; () banked
  6397  000B76  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6398  000B78  0EFF               	movlw	255
  6399  000B7A  0100               	movlb	0	; () banked
  6400  000B7C  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6401  000B7E  0100               	movlb	0	; () banked
  6402  000B80  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6403  000B82  0E00               	movlw	0
  6404  000B84  0100               	movlb	0	; () banked
  6405  000B86  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6406  000B88  0100               	movlb	0	; () banked
  6407  000B8A  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6408  000B8C  0E00               	movlw	0
  6409  000B8E  0100               	movlb	0	; () banked
  6410  000B90  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6411  000B92  0100               	movlb	0	; () banked
  6412  000B94  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6416  000B96  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6417  000B9A  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6418  000B9E  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6419  000BA2  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6420  000BA6  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6421  000BAA  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6422  000BAE  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6423  000BB2  0100               	movlb	0	; () banked
  6424  000BB4  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6425  000BB6  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6426  000BBA  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6427  000BBE  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6428  000BC2  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6432  000BC6  C0D2  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6436  000BCA  0100               	movlb	0	; () banked
  6437  000BCC  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6438  000BCE  D003               	goto	l536
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6442  000BD0  010F               	movlb	15	; () banked
  6443  000BD2  8115               	bsf	21,0,b	;volatile
  6444  000BD4  D002               	goto	l537
  6445  000BD6                     l536:
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;inc\CANlib.h: 1050: else
  6449                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6450  000BD6  010F               	movlb	15	; () banked
  6451  000BD8  9115               	bcf	21,0,b	;volatile
  6452  000BDA                     l537:
  6453                           
  6454                           ; BSR set to: 15
  6455                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6456  000BDA  0100               	movlb	0	; () banked
  6457  000BDC  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6458  000BDE  D003               	goto	l538
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6462  000BE0  010F               	movlb	15	; () banked
  6463  000BE2  8315               	bsf	21,1,b	;volatile
  6464  000BE4  D002               	goto	l539
  6465  000BE6                     l538:
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;inc\CANlib.h: 1055: else
  6469                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6470  000BE6  010F               	movlb	15	; () banked
  6471  000BE8  9315               	bcf	21,1,b	;volatile
  6472  000BEA                     l539:
  6473                           
  6474                           ; BSR set to: 15
  6475                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6476  000BEA  0100               	movlb	0	; () banked
  6477  000BEC  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6478  000BEE  D003               	goto	l540
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6482  000BF0  010F               	movlb	15	; () banked
  6483  000BF2  8B15               	bsf	21,5,b	;volatile
  6484  000BF4  D002               	goto	l541
  6485  000BF6                     l540:
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;inc\CANlib.h: 1060: else
  6489                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6490  000BF6  010F               	movlb	15	; () banked
  6491  000BF8  9B15               	bcf	21,5,b	;volatile
  6492  000BFA                     l541:
  6493                           
  6494                           ; BSR set to: 15
  6495                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6496  000BFA  0100               	movlb	0	; () banked
  6497  000BFC  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6498  000BFE  D003               	goto	l542
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6502  000C00  010F               	movlb	15	; () banked
  6503  000C02  8D15               	bsf	21,6,b	;volatile
  6504  000C04  D002               	goto	l543
  6505  000C06                     l542:
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;inc\CANlib.h: 1065: else
  6509                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6510  000C06  010F               	movlb	15	; () banked
  6511  000C08  9D15               	bcf	21,6,b	;volatile
  6512  000C0A                     l543:
  6513                           
  6514                           ; BSR set to: 15
  6515                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6516  000C0A  0100               	movlb	0	; () banked
  6517  000C0C  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6518  000C0E  D003               	goto	l544
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6522  000C10  010F               	movlb	15	; () banked
  6523  000C12  8F15               	bsf	21,7,b	;volatile
  6524  000C14  D003               	goto	l3210
  6525  000C16                     l544:
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;inc\CANlib.h: 1070: else
  6529                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6530  000C16  010F               	movlb	15	; () banked
  6531  000C18  9F15               	bcf	21,7,b	;volatile
  6532  000C1A  D000               	goto	l3210
  6533  000C1C                     l3210:
  6534                           
  6535                           ; BSR set to: 15
  6536                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6537  000C1C  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  6538  000C20  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6539  000C24  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6540  000C28  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6541  000C2C  0E16               	movlw	22
  6542  000C2E  D006               	goto	u3380
  6543  000C30                     u3385:
  6544  000C30  0100               	movlb	0	; () banked
  6545  000C32  90D8               	bcf	status,0,c
  6546  000C34  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6547  000C36  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6548  000C38  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6549  000C3A  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  6550  000C3C                     u3380:
  6551  000C3C  2EE8               	decfsz	wreg,f,c
  6552  000C3E  D7F8               	goto	u3385
  6553  000C40  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6554  000C44  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6555  000C48  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6556  000C4C  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6560  000C50  0100               	movlb	0	; () banked
  6561  000C52  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  6562  000C54  0100               	movlb	0	; () banked
  6563  000C56  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6564  000C58  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6565  000C5A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6566  000C5C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6570  000C5E  C0D2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6571  000C62  D000               	goto	l546
  6572  000C64                     l546:
  6573                           
  6574                           ; BSR set to: 0
  6575  000C64  0012               	return		;funcret
  6576  000C66                     __end_of_CANSetFilter:
  6577                           	opt stack 0
  6578                           tblptru	equ	0xFF8
  6579                           tblptrh	equ	0xFF7
  6580                           tblptrl	equ	0xFF6
  6581                           tablat	equ	0xFF5
  6582                           prodh	equ	0xFF4
  6583                           prodl	equ	0xFF3
  6584                           intcon	equ	0xFF2
  6585                           intcon2	equ	0xFF1
  6586                           intcon3	equ	0xFF0
  6587                           postinc0	equ	0xFEE
  6588                           wreg	equ	0xFE8
  6589                           postdec1	equ	0xFE5
  6590                           fsr1l	equ	0xFE1
  6591                           indf2	equ	0xFDF
  6592                           fsr2h	equ	0xFDA
  6593                           fsr2l	equ	0xFD9
  6594                           status	equ	0xFD8
  6595                           
  6596 ;; *************** function _CANOperationMode *****************
  6597 ;; Defined at:
  6598 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  mode            1    wreg     enum E16879
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  mode            1   30[BANK0 ] enum E16879
  6603 ;; Return value:  Size  Location     Type
  6604 ;;		None               void
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6612 ;;      Params:         0       0       0       0
  6613 ;;      Locals:         0       1       0       0
  6614 ;;      Temps:          0       0       0       0
  6615 ;;      Totals:         0       1       0       0
  6616 ;;Total ram usage:        1 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    4
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_CANInitialize
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text9
  6627  002AFC                     __ptext9:
  6628                           	opt stack 0
  6629  002AFC                     _CANOperationMode:
  6630                           	opt stack 24
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;incstack = 0
  6634                           ;CANOperationMode@mode stored from wreg
  6635  002AFC  0100               	movlb	0	; () banked
  6636  002AFE  6FC8               	movwf	CANOperationMode@mode& (0+255),b
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;inc\CANlib.h: 208: CANCON = mode;
  6640  002B00  C0C8  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6641                           
  6642                           ; BSR set to: 0
  6643                           
  6644                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6645  002B04  D000               	goto	l2806
  6646  002B06                     l2806:
  6647                           
  6648                           ; BSR set to: 0
  6649  002B06  506E               	movf	3950,w,c	;volatile
  6650  002B08  0BE0               	andlw	224
  6651  002B0A  0100               	movlb	0	; () banked
  6652  002B0C  19C8               	xorwf	CANOperationMode@mode& (0+255),w,b
  6653  002B0E  A4D8               	btfss	status,2,c
  6654  002B10  D7FA               	goto	l2806
  6655                           
  6656                           ; BSR set to: 0
  6657                           
  6658                           ; BSR set to: 0
  6659  002B12  0012               	return		;funcret
  6660  002B14                     __end_of_CANOperationMode:
  6661                           	opt stack 0
  6662                           tblptru	equ	0xFF8
  6663                           tblptrh	equ	0xFF7
  6664                           tblptrl	equ	0xFF6
  6665                           tablat	equ	0xFF5
  6666                           prodh	equ	0xFF4
  6667                           prodl	equ	0xFF3
  6668                           intcon	equ	0xFF2
  6669                           intcon2	equ	0xFF1
  6670                           intcon3	equ	0xFF0
  6671                           postinc0	equ	0xFEE
  6672                           wreg	equ	0xFE8
  6673                           postdec1	equ	0xFE5
  6674                           fsr1l	equ	0xFE1
  6675                           indf2	equ	0xFDF
  6676                           fsr2h	equ	0xFDA
  6677                           fsr2l	equ	0xFD9
  6678                           status	equ	0xFD8
  6679                           
  6680 ;; *************** function ___lmul *****************
  6681 ;; Defined at:
  6682 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  multiplier      4   30[BANK0 ] unsigned long 
  6685 ;;  multiplicand    4   34[BANK0 ] unsigned long 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  product         4   38[BANK0 ] unsigned long 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  4   30[BANK0 ] unsigned long 
  6690 ;; Registers used:
  6691 ;;		wreg, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6697 ;;      Params:         0       8       0       0
  6698 ;;      Locals:         0       4       0       0
  6699 ;;      Temps:          0       0       0       0
  6700 ;;      Totals:         0      12       0       0
  6701 ;;Total ram usage:       12 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    4
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text10
  6712  00295A                     __ptext10:
  6713                           	opt stack 0
  6714  00295A                     ___lmul:
  6715                           	opt stack 26
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;incstack = 0
  6719  00295A  0E00               	movlw	0
  6720  00295C  0100               	movlb	0	; () banked
  6721  00295E  6FD0               	movwf	___lmul@product& (0+255),b
  6722  002960  0E00               	movlw	0
  6723  002962  6FD1               	movwf	(___lmul@product+1)& (0+255),b
  6724  002964  0E00               	movlw	0
  6725  002966  6FD2               	movwf	(___lmul@product+2)& (0+255),b
  6726  002968  0E00               	movlw	0
  6727  00296A  6FD3               	movwf	(___lmul@product+3)& (0+255),b
  6728  00296C  D000               	goto	l3830
  6729  00296E                     l3830:
  6730                           
  6731                           ; BSR set to: 0
  6732  00296E  0100               	movlb	0	; () banked
  6733  002970  A1C8               	btfss	___lmul@multiplier& (0+255),0,b
  6734  002972  D011               	goto	l3834
  6735                           
  6736                           ; BSR set to: 0
  6737  002974  0100               	movlb	0	; () banked
  6738  002976  51CC               	movf	___lmul@multiplicand& (0+255),w,b
  6739  002978  0100               	movlb	0	; () banked
  6740  00297A  27D0               	addwf	___lmul@product& (0+255),f,b
  6741  00297C  0100               	movlb	0	; () banked
  6742  00297E  51CD               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6743  002980  0100               	movlb	0	; () banked
  6744  002982  23D1               	addwfc	(___lmul@product+1)& (0+255),f,b
  6745  002984  0100               	movlb	0	; () banked
  6746  002986  51CE               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6747  002988  0100               	movlb	0	; () banked
  6748  00298A  23D2               	addwfc	(___lmul@product+2)& (0+255),f,b
  6749  00298C  0100               	movlb	0	; () banked
  6750  00298E  51CF               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6751  002990  0100               	movlb	0	; () banked
  6752  002992  23D3               	addwfc	(___lmul@product+3)& (0+255),f,b
  6753  002994  D000               	goto	l3834
  6754  002996                     l3834:
  6755                           
  6756                           ; BSR set to: 0
  6757  002996  0100               	movlb	0	; () banked
  6758  002998  90D8               	bcf	status,0,c
  6759  00299A  37CC               	rlcf	___lmul@multiplicand& (0+255),f,b
  6760  00299C  37CD               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6761  00299E  37CE               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6762  0029A0  37CF               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6763                           
  6764                           ; BSR set to: 0
  6765  0029A2  0100               	movlb	0	; () banked
  6766  0029A4  90D8               	bcf	status,0,c
  6767  0029A6  33CB               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6768  0029A8  33CA               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6769  0029AA  33C9               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6770  0029AC  33C8               	rrcf	___lmul@multiplier& (0+255),f,b
  6771  0029AE  0100               	movlb	0	; () banked
  6772  0029B0  51C8               	movf	___lmul@multiplier& (0+255),w,b
  6773  0029B2  0100               	movlb	0	; () banked
  6774  0029B4  11C9               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6775  0029B6  0100               	movlb	0	; () banked
  6776  0029B8  11CA               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6777  0029BA  0100               	movlb	0	; () banked
  6778  0029BC  11CB               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6779  0029BE  A4D8               	btfss	status,2,c
  6780  0029C0  D7D6               	goto	l3830
  6781                           
  6782                           ; BSR set to: 0
  6783  0029C2  C0D0  F0C8         	movff	___lmul@product,?___lmul
  6784  0029C6  C0D1  F0C9         	movff	___lmul@product+1,?___lmul+1
  6785  0029CA  C0D2  F0CA         	movff	___lmul@product+2,?___lmul+2
  6786  0029CE  C0D3  F0CB         	movff	___lmul@product+3,?___lmul+3
  6787                           
  6788                           ; BSR set to: 0
  6789  0029D2  0012               	return		;funcret
  6790  0029D4                     __end_of___lmul:
  6791                           	opt stack 0
  6792                           tblptru	equ	0xFF8
  6793                           tblptrh	equ	0xFF7
  6794                           tblptrl	equ	0xFF6
  6795                           tablat	equ	0xFF5
  6796                           prodh	equ	0xFF4
  6797                           prodl	equ	0xFF3
  6798                           intcon	equ	0xFF2
  6799                           intcon2	equ	0xFF1
  6800                           intcon3	equ	0xFF0
  6801                           postinc0	equ	0xFEE
  6802                           wreg	equ	0xFE8
  6803                           postdec1	equ	0xFE5
  6804                           fsr1l	equ	0xFE1
  6805                           indf2	equ	0xFDF
  6806                           fsr2h	equ	0xFDA
  6807                           fsr2l	equ	0xFD9
  6808                           status	equ	0xFD8
  6809                           
  6810 ;; *************** function ___awdiv *****************
  6811 ;; Defined at:
  6812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  dividend        2   30[BANK0 ] int 
  6815 ;;  divisor         2   32[BANK0 ] int 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  quotient        2   36[BANK0 ] int 
  6818 ;;  sign            1   35[BANK0 ] unsigned char 
  6819 ;;  counter         1   34[BANK0 ] unsigned char 
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  2   30[BANK0 ] int 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6829 ;;      Params:         0       4       0       0
  6830 ;;      Locals:         0       4       0       0
  6831 ;;      Temps:          0       0       0       0
  6832 ;;      Totals:         0       8       0       0
  6833 ;;Total ram usage:        8 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    4
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_main
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text11
  6844  002702                     __ptext11:
  6845                           	opt stack 0
  6846  002702                     ___awdiv:
  6847                           	opt stack 26
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;incstack = 0
  6851  002702  0E00               	movlw	0
  6852  002704  0100               	movlb	0	; () banked
  6853  002706  6FCD               	movwf	___awdiv@sign& (0+255),b
  6854                           
  6855                           ; BSR set to: 0
  6856  002708  0100               	movlb	0	; () banked
  6857  00270A  AFCB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6858  00270C  D009               	goto	l3890
  6859                           
  6860                           ; BSR set to: 0
  6861  00270E  0100               	movlb	0	; () banked
  6862  002710  6DCA               	negf	___awdiv@divisor& (0+255),b
  6863  002712  1FCB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6864  002714  B0D8               	btfsc	status,0,c
  6865  002716  2BCB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6866                           
  6867                           ; BSR set to: 0
  6868  002718  0E01               	movlw	1
  6869  00271A  0100               	movlb	0	; () banked
  6870  00271C  6FCD               	movwf	___awdiv@sign& (0+255),b
  6871  00271E  D000               	goto	l3890
  6872  002720                     l3890:
  6873                           
  6874                           ; BSR set to: 0
  6875  002720  0100               	movlb	0	; () banked
  6876  002722  AFC9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6877  002724  D009               	goto	l3896
  6878                           
  6879                           ; BSR set to: 0
  6880  002726  0100               	movlb	0	; () banked
  6881  002728  6DC8               	negf	___awdiv@dividend& (0+255),b
  6882  00272A  1FC9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6883  00272C  B0D8               	btfsc	status,0,c
  6884  00272E  2BC9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6885                           
  6886                           ; BSR set to: 0
  6887  002730  0E01               	movlw	1
  6888  002732  0100               	movlb	0	; () banked
  6889  002734  1BCD               	xorwf	___awdiv@sign& (0+255),f,b
  6890  002736  D000               	goto	l3896
  6891  002738                     l3896:
  6892                           
  6893                           ; BSR set to: 0
  6894  002738  0E00               	movlw	0
  6895  00273A  0100               	movlb	0	; () banked
  6896  00273C  6FCF               	movwf	(___awdiv@quotient+1)& (0+255),b
  6897  00273E  0E00               	movlw	0
  6898  002740  6FCE               	movwf	___awdiv@quotient& (0+255),b
  6899                           
  6900                           ; BSR set to: 0
  6901  002742  0100               	movlb	0	; () banked
  6902  002744  51CA               	movf	___awdiv@divisor& (0+255),w,b
  6903  002746  0100               	movlb	0	; () banked
  6904  002748  11CB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6905  00274A  B4D8               	btfsc	status,2,c
  6906  00274C  D031               	goto	l3918
  6907                           
  6908                           ; BSR set to: 0
  6909  00274E  0E01               	movlw	1
  6910  002750  0100               	movlb	0	; () banked
  6911  002752  6FCC               	movwf	___awdiv@counter& (0+255),b
  6912  002754  D007               	goto	l3904
  6913  002756                     l3902:
  6914                           
  6915                           ; BSR set to: 0
  6916  002756  0100               	movlb	0	; () banked
  6917  002758  90D8               	bcf	status,0,c
  6918  00275A  37CA               	rlcf	___awdiv@divisor& (0+255),f,b
  6919  00275C  37CB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6920  00275E  0100               	movlb	0	; () banked
  6921  002760  2BCC               	incf	___awdiv@counter& (0+255),f,b
  6922  002762  D000               	goto	l3904
  6923  002764                     l3904:
  6924                           
  6925                           ; BSR set to: 0
  6926  002764  0100               	movlb	0	; () banked
  6927  002766  BFCB               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6928  002768  D002               	goto	l3906
  6929  00276A  D7F5               	goto	l3902
  6930                           
  6931                           ; BSR set to: 0
  6932  00276C  D000               	goto	l3906
  6933  00276E                     l3906:
  6934                           
  6935                           ; BSR set to: 0
  6936  00276E  0100               	movlb	0	; () banked
  6937  002770  90D8               	bcf	status,0,c
  6938  002772  37CE               	rlcf	___awdiv@quotient& (0+255),f,b
  6939  002774  37CF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6940                           
  6941                           ; BSR set to: 0
  6942  002776  0100               	movlb	0	; () banked
  6943  002778  51CA               	movf	___awdiv@divisor& (0+255),w,b
  6944  00277A  0100               	movlb	0	; () banked
  6945  00277C  5DC8               	subwf	___awdiv@dividend& (0+255),w,b
  6946  00277E  0100               	movlb	0	; () banked
  6947  002780  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6948  002782  0100               	movlb	0	; () banked
  6949  002784  59C9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6950  002786  A0D8               	btfss	status,0,c
  6951  002788  D00B               	goto	l3914
  6952                           
  6953                           ; BSR set to: 0
  6954  00278A  0100               	movlb	0	; () banked
  6955  00278C  51CA               	movf	___awdiv@divisor& (0+255),w,b
  6956  00278E  0100               	movlb	0	; () banked
  6957  002790  5FC8               	subwf	___awdiv@dividend& (0+255),f,b
  6958  002792  0100               	movlb	0	; () banked
  6959  002794  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6960  002796  0100               	movlb	0	; () banked
  6961  002798  5BC9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6962                           
  6963                           ; BSR set to: 0
  6964  00279A  0100               	movlb	0	; () banked
  6965  00279C  81CE               	bsf	___awdiv@quotient& (0+255),0,b
  6966  00279E  D000               	goto	l3914
  6967  0027A0                     l3914:
  6968                           
  6969                           ; BSR set to: 0
  6970  0027A0  0100               	movlb	0	; () banked
  6971  0027A2  90D8               	bcf	status,0,c
  6972  0027A4  33CB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6973  0027A6  33CA               	rrcf	___awdiv@divisor& (0+255),f,b
  6974                           
  6975                           ; BSR set to: 0
  6976  0027A8  0100               	movlb	0	; () banked
  6977  0027AA  2FCC               	decfsz	___awdiv@counter& (0+255),f,b
  6978  0027AC  D7E0               	goto	l3906
  6979                           
  6980                           ; BSR set to: 0
  6981  0027AE  D000               	goto	l3918
  6982  0027B0                     l3918:
  6983                           
  6984                           ; BSR set to: 0
  6985  0027B0  0100               	movlb	0	; () banked
  6986  0027B2  51CD               	movf	___awdiv@sign& (0+255),w,b
  6987  0027B4  0100               	movlb	0	; () banked
  6988  0027B6  B4D8               	btfsc	status,2,c
  6989  0027B8  D006               	goto	l3922
  6990                           
  6991                           ; BSR set to: 0
  6992  0027BA  0100               	movlb	0	; () banked
  6993  0027BC  6DCE               	negf	___awdiv@quotient& (0+255),b
  6994  0027BE  1FCF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6995  0027C0  B0D8               	btfsc	status,0,c
  6996  0027C2  2BCF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6997  0027C4  D000               	goto	l3922
  6998  0027C6                     l3922:
  6999                           
  7000                           ; BSR set to: 0
  7001  0027C6  C0CE  F0C8         	movff	___awdiv@quotient,?___awdiv
  7002  0027CA  C0CF  F0C9         	movff	___awdiv@quotient+1,?___awdiv+1
  7003  0027CE  D000               	goto	l964
  7004  0027D0                     l964:
  7005                           
  7006                           ; BSR set to: 0
  7007  0027D0  0012               	return		;funcret
  7008  0027D2                     __end_of___awdiv:
  7009                           	opt stack 0
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           prodh	equ	0xFF4
  7015                           prodl	equ	0xFF3
  7016                           intcon	equ	0xFF2
  7017                           intcon2	equ	0xFF1
  7018                           intcon3	equ	0xFF0
  7019                           postinc0	equ	0xFEE
  7020                           wreg	equ	0xFE8
  7021                           postdec1	equ	0xFE5
  7022                           fsr1l	equ	0xFE1
  7023                           indf2	equ	0xFDF
  7024                           fsr2h	equ	0xFDA
  7025                           fsr2l	equ	0xFD9
  7026                           status	equ	0xFD8
  7027                           
  7028 ;; *************** function ___aldiv *****************
  7029 ;; Defined at:
  7030 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  dividend        4    0[BANK1 ] long 
  7033 ;;  divisor         4    4[BANK1 ] long 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  quotient        4   10[BANK1 ] long 
  7036 ;;  sign            1    9[BANK1 ] unsigned char 
  7037 ;;  counter         1    8[BANK1 ] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  4    0[BANK1 ] long 
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7047 ;;      Params:         0       0       8       0
  7048 ;;      Locals:         0       0       6       0
  7049 ;;      Temps:          0       0       0       0
  7050 ;;      Totals:         0       0      14       0
  7051 ;;Total ram usage:       14 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    4
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text12
  7062  0025D6                     __ptext12:
  7063                           	opt stack 0
  7064  0025D6                     ___aldiv:
  7065                           	opt stack 26
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;incstack = 0
  7069  0025D6  0E00               	movlw	0
  7070  0025D8  0101               	movlb	1	; () banked
  7071  0025DA  6F09               	movwf	___aldiv@sign& (0+255),b
  7072                           
  7073                           ; BSR set to: 1
  7074  0025DC  0101               	movlb	1	; () banked
  7075  0025DE  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7076  0025E0  D00D               	goto	l4386
  7077                           
  7078                           ; BSR set to: 1
  7079  0025E2  0101               	movlb	1	; () banked
  7080  0025E4  1F07               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7081  0025E6  1F06               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7082  0025E8  1F05               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7083  0025EA  6D04               	negf	___aldiv@divisor& (0+255),b
  7084  0025EC  0E00               	movlw	0
  7085  0025EE  2305               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7086  0025F0  2306               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7087  0025F2  2307               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7088                           
  7089                           ; BSR set to: 1
  7090  0025F4  0E01               	movlw	1
  7091  0025F6  0101               	movlb	1	; () banked
  7092  0025F8  6F09               	movwf	___aldiv@sign& (0+255),b
  7093  0025FA  D000               	goto	l4386
  7094  0025FC                     l4386:
  7095                           
  7096                           ; BSR set to: 1
  7097  0025FC  0101               	movlb	1	; () banked
  7098  0025FE  AF03               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7099  002600  D00D               	goto	l4392
  7100                           
  7101                           ; BSR set to: 1
  7102  002602  0101               	movlb	1	; () banked
  7103  002604  1F03               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7104  002606  1F02               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7105  002608  1F01               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7106  00260A  6D00               	negf	___aldiv@dividend& (0+255),b
  7107  00260C  0E00               	movlw	0
  7108  00260E  2301               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7109  002610  2302               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7110  002612  2303               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7111                           
  7112                           ; BSR set to: 1
  7113  002614  0E01               	movlw	1
  7114  002616  0101               	movlb	1	; () banked
  7115  002618  1B09               	xorwf	___aldiv@sign& (0+255),f,b
  7116  00261A  D000               	goto	l4392
  7117  00261C                     l4392:
  7118                           
  7119                           ; BSR set to: 1
  7120  00261C  0E00               	movlw	0
  7121  00261E  0101               	movlb	1	; () banked
  7122  002620  6F0A               	movwf	___aldiv@quotient& (0+255),b
  7123  002622  0E00               	movlw	0
  7124  002624  6F0B               	movwf	(___aldiv@quotient+1)& (0+255),b
  7125  002626  0E00               	movlw	0
  7126  002628  6F0C               	movwf	(___aldiv@quotient+2)& (0+255),b
  7127  00262A  0E00               	movlw	0
  7128  00262C  6F0D               	movwf	(___aldiv@quotient+3)& (0+255),b
  7129                           
  7130                           ; BSR set to: 1
  7131  00262E  0101               	movlb	1	; () banked
  7132  002630  5104               	movf	___aldiv@divisor& (0+255),w,b
  7133  002632  0101               	movlb	1	; () banked
  7134  002634  1105               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7135  002636  0101               	movlb	1	; () banked
  7136  002638  1106               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7137  00263A  0101               	movlb	1	; () banked
  7138  00263C  1107               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7139  00263E  B4D8               	btfsc	status,2,c
  7140  002640  D047               	goto	l4414
  7141                           
  7142                           ; BSR set to: 1
  7143  002642  0E01               	movlw	1
  7144  002644  0101               	movlb	1	; () banked
  7145  002646  6F08               	movwf	___aldiv@counter& (0+255),b
  7146  002648  D009               	goto	l4400
  7147  00264A                     l4398:
  7148                           
  7149                           ; BSR set to: 1
  7150  00264A  0101               	movlb	1	; () banked
  7151  00264C  90D8               	bcf	status,0,c
  7152  00264E  3704               	rlcf	___aldiv@divisor& (0+255),f,b
  7153  002650  3705               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7154  002652  3706               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7155  002654  3707               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7156  002656  0101               	movlb	1	; () banked
  7157  002658  2B08               	incf	___aldiv@counter& (0+255),f,b
  7158  00265A  D000               	goto	l4400
  7159  00265C                     l4400:
  7160                           
  7161                           ; BSR set to: 1
  7162  00265C  0101               	movlb	1	; () banked
  7163  00265E  BF07               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  7164  002660  D002               	goto	l4402
  7165  002662  D7F3               	goto	l4398
  7166                           
  7167                           ; BSR set to: 1
  7168  002664  D000               	goto	l4402
  7169  002666                     l4402:
  7170                           
  7171                           ; BSR set to: 1
  7172  002666  0101               	movlb	1	; () banked
  7173  002668  90D8               	bcf	status,0,c
  7174  00266A  370A               	rlcf	___aldiv@quotient& (0+255),f,b
  7175  00266C  370B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7176  00266E  370C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7177  002670  370D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7178                           
  7179                           ; BSR set to: 1
  7180  002672  0101               	movlb	1	; () banked
  7181  002674  5104               	movf	___aldiv@divisor& (0+255),w,b
  7182  002676  0101               	movlb	1	; () banked
  7183  002678  5D00               	subwf	___aldiv@dividend& (0+255),w,b
  7184  00267A  0101               	movlb	1	; () banked
  7185  00267C  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7186  00267E  0101               	movlb	1	; () banked
  7187  002680  5901               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7188  002682  0101               	movlb	1	; () banked
  7189  002684  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7190  002686  0101               	movlb	1	; () banked
  7191  002688  5902               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7192  00268A  0101               	movlb	1	; () banked
  7193  00268C  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7194  00268E  0101               	movlb	1	; () banked
  7195  002690  5903               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7196  002692  A0D8               	btfss	status,0,c
  7197  002694  D013               	goto	l4410
  7198                           
  7199                           ; BSR set to: 1
  7200  002696  0101               	movlb	1	; () banked
  7201  002698  5104               	movf	___aldiv@divisor& (0+255),w,b
  7202  00269A  0101               	movlb	1	; () banked
  7203  00269C  5F00               	subwf	___aldiv@dividend& (0+255),f,b
  7204  00269E  0101               	movlb	1	; () banked
  7205  0026A0  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7206  0026A2  0101               	movlb	1	; () banked
  7207  0026A4  5B01               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7208  0026A6  0101               	movlb	1	; () banked
  7209  0026A8  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7210  0026AA  0101               	movlb	1	; () banked
  7211  0026AC  5B02               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7212  0026AE  0101               	movlb	1	; () banked
  7213  0026B0  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7214  0026B2  0101               	movlb	1	; () banked
  7215  0026B4  5B03               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7216                           
  7217                           ; BSR set to: 1
  7218  0026B6  0101               	movlb	1	; () banked
  7219  0026B8  810A               	bsf	___aldiv@quotient& (0+255),0,b
  7220  0026BA  D000               	goto	l4410
  7221  0026BC                     l4410:
  7222                           
  7223                           ; BSR set to: 1
  7224  0026BC  0101               	movlb	1	; () banked
  7225  0026BE  90D8               	bcf	status,0,c
  7226  0026C0  3307               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7227  0026C2  3306               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7228  0026C4  3305               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7229  0026C6  3304               	rrcf	___aldiv@divisor& (0+255),f,b
  7230                           
  7231                           ; BSR set to: 1
  7232  0026C8  0101               	movlb	1	; () banked
  7233  0026CA  2F08               	decfsz	___aldiv@counter& (0+255),f,b
  7234  0026CC  D7CC               	goto	l4402
  7235                           
  7236                           ; BSR set to: 1
  7237  0026CE  D000               	goto	l4414
  7238  0026D0                     l4414:
  7239                           
  7240                           ; BSR set to: 1
  7241  0026D0  0101               	movlb	1	; () banked
  7242  0026D2  5109               	movf	___aldiv@sign& (0+255),w,b
  7243  0026D4  0101               	movlb	1	; () banked
  7244  0026D6  B4D8               	btfsc	status,2,c
  7245  0026D8  D00A               	goto	l4418
  7246                           
  7247                           ; BSR set to: 1
  7248  0026DA  0101               	movlb	1	; () banked
  7249  0026DC  1F0D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7250  0026DE  1F0C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7251  0026E0  1F0B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7252  0026E2  6D0A               	negf	___aldiv@quotient& (0+255),b
  7253  0026E4  0E00               	movlw	0
  7254  0026E6  230B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7255  0026E8  230C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7256  0026EA  230D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7257  0026EC  D000               	goto	l4418
  7258  0026EE                     l4418:
  7259                           
  7260                           ; BSR set to: 1
  7261  0026EE  C10A  F100         	movff	___aldiv@quotient,?___aldiv
  7262  0026F2  C10B  F101         	movff	___aldiv@quotient+1,?___aldiv+1
  7263  0026F6  C10C  F102         	movff	___aldiv@quotient+2,?___aldiv+2
  7264  0026FA  C10D  F103         	movff	___aldiv@quotient+3,?___aldiv+3
  7265  0026FE  D000               	goto	l840
  7266  002700                     l840:
  7267                           
  7268                           ; BSR set to: 1
  7269  002700  0012               	return		;funcret
  7270  002702                     __end_of___aldiv:
  7271                           	opt stack 0
  7272                           tblptru	equ	0xFF8
  7273                           tblptrh	equ	0xFF7
  7274                           tblptrl	equ	0xFF6
  7275                           tablat	equ	0xFF5
  7276                           prodh	equ	0xFF4
  7277                           prodl	equ	0xFF3
  7278                           intcon	equ	0xFF2
  7279                           intcon2	equ	0xFF1
  7280                           intcon3	equ	0xFF0
  7281                           postinc0	equ	0xFEE
  7282                           wreg	equ	0xFE8
  7283                           postdec1	equ	0xFE5
  7284                           fsr1l	equ	0xFE1
  7285                           indf2	equ	0xFDF
  7286                           fsr2h	equ	0xFDA
  7287                           fsr2l	equ	0xFD9
  7288                           status	equ	0xFD8
  7289                           
  7290 ;; *************** function _CANisTXwarningON *****************
  7291 ;; Defined at:
  7292 ;;		line 1119 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      unsigned char 
  7299 ;; Registers used:
  7300 ;;		wreg
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7306 ;;      Params:         0       0       0       0
  7307 ;;      Locals:         0       0       0       0
  7308 ;;      Temps:          0       0       0       0
  7309 ;;      Totals:         0       0       0       0
  7310 ;;Total ram usage:        0 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    4
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_main
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           	psect	text13
  7321  002B3E                     __ptext13:
  7322                           	opt stack 0
  7323  002B3E                     _CANisTXwarningON:
  7324                           	opt stack 26
  7325                           
  7326                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7327                           
  7328                           ; BSR set to: 1
  7329                           ;incstack = 0
  7330  002B3E  A474               	btfss	3956,2,c	;volatile
  7331  002B40  D002               	goto	u4090
  7332  002B42  0E01               	movlw	1
  7333  002B44  D002               	goto	l561
  7334  002B46                     u4090:
  7335  002B46  0E00               	movlw	0
  7336  002B48  D000               	goto	l561
  7337  002B4A                     l561:
  7338  002B4A  0012               	return		;funcret
  7339  002B4C                     __end_of_CANisTXwarningON:
  7340                           	opt stack 0
  7341                           tblptru	equ	0xFF8
  7342                           tblptrh	equ	0xFF7
  7343                           tblptrl	equ	0xFF6
  7344                           tablat	equ	0xFF5
  7345                           prodh	equ	0xFF4
  7346                           prodl	equ	0xFF3
  7347                           intcon	equ	0xFF2
  7348                           intcon2	equ	0xFF1
  7349                           intcon3	equ	0xFF0
  7350                           postinc0	equ	0xFEE
  7351                           wreg	equ	0xFE8
  7352                           postdec1	equ	0xFE5
  7353                           fsr1l	equ	0xFE1
  7354                           indf2	equ	0xFDF
  7355                           fsr2h	equ	0xFDA
  7356                           fsr2l	equ	0xFD9
  7357                           status	equ	0xFD8
  7358                           
  7359 ;; *************** function _CANisRXwarningON *****************
  7360 ;; Defined at:
  7361 ;;		line 1127 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;		None
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;		None
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      unsigned char 
  7368 ;; Registers used:
  7369 ;;		wreg
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7375 ;;      Params:         0       0       0       0
  7376 ;;      Locals:         0       0       0       0
  7377 ;;      Temps:          0       0       0       0
  7378 ;;      Totals:         0       0       0       0
  7379 ;;Total ram usage:        0 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    4
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_main
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text14
  7390  002B4C                     __ptext14:
  7391                           	opt stack 0
  7392  002B4C                     _CANisRXwarningON:
  7393                           	opt stack 26
  7394                           
  7395                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7396                           
  7397                           ;incstack = 0
  7398  002B4C  A274               	btfss	3956,1,c	;volatile
  7399  002B4E  D002               	goto	u4100
  7400  002B50  0E01               	movlw	1
  7401  002B52  D002               	goto	l564
  7402  002B54                     u4100:
  7403  002B54  0E00               	movlw	0
  7404  002B56  D000               	goto	l564
  7405  002B58                     l564:
  7406  002B58  0012               	return		;funcret
  7407  002B5A                     __end_of_CANisRXwarningON:
  7408                           	opt stack 0
  7409                           tblptru	equ	0xFF8
  7410                           tblptrh	equ	0xFF7
  7411                           tblptrl	equ	0xFF6
  7412                           tablat	equ	0xFF5
  7413                           prodh	equ	0xFF4
  7414                           prodl	equ	0xFF3
  7415                           intcon	equ	0xFF2
  7416                           intcon2	equ	0xFF1
  7417                           intcon3	equ	0xFF0
  7418                           postinc0	equ	0xFEE
  7419                           wreg	equ	0xFE8
  7420                           postdec1	equ	0xFE5
  7421                           fsr1l	equ	0xFE1
  7422                           indf2	equ	0xFDF
  7423                           fsr2h	equ	0xFDA
  7424                           fsr2l	equ	0xFD9
  7425                           status	equ	0xFD8
  7426                           
  7427 ;; *************** function _ISR_Bassa *****************
  7428 ;; Defined at:
  7429 ;;		line 213 in file "ABS_Code.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;		None               void
  7436 ;; Registers used:
  7437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7443 ;;      Params:         0       0       0       0
  7444 ;;      Locals:         0       0       0       0
  7445 ;;      Temps:         17       0       0       0
  7446 ;;      Totals:        17       0       0       0
  7447 ;;Total ram usage:       17 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    3
  7450 ;; This function calls:
  7451 ;;		_CANisRxReady
  7452 ;;		_CANreceiveMessage
  7453 ;; This function is called by:
  7454 ;;		Interrupt level 1
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	intcodelo
  7459  000018                     __pintcodelo:
  7460                           	opt stack 0
  7461  000018                     _ISR_Bassa:
  7462                           	opt stack 24
  7463                           
  7464                           ;incstack = 0
  7465  000018  CFD8 F00D          	movff	status,??_ISR_Bassa
  7466  00001C  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7467  000020  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7468  000024  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7469  000028  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7470  00002C  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7471  000030  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7472  000034  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7473  000038  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7474  00003C  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7475  000040  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7476  000044  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7477  000048  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7478  00004C  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7479  000050  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7480  000054  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7481  000058  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7482                           
  7483                           ;ABS_Code.c: 215: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7484  00005C  B0A4               	btfsc	4004,0,c	;volatile
  7485  00005E  D002               	goto	i1l4084
  7486  000060  A2A4               	btfss	4004,1,c	;volatile
  7487  000062  D03E               	goto	i1l4108
  7488  000064                     i1l4084:
  7489                           
  7490                           ;ABS_Code.c: 216: if (CANisRxReady()) {
  7491  000064  EC8A  F015         	call	_CANisRxReady	;wreg free
  7492  000068  0900               	iorlw	0
  7493  00006A  B4D8               	btfsc	status,2,c
  7494  00006C  D036               	goto	i1l4104
  7495                           
  7496                           ;ABS_Code.c: 217: CANreceiveMessage(&msg);
  7497  00006E  0E31               	movlw	low _msg
  7498  000070  6E01               	movwf	CANreceiveMessage@msg,c
  7499  000072  0E00               	movlw	high _msg
  7500  000074  6E02               	movwf	CANreceiveMessage@msg+1,c
  7501  000076  EC03  F00A         	call	_CANreceiveMessage	;wreg free
  7502                           
  7503                           ;ABS_Code.c: 218: if (msg.RTR == 1) {
  7504  00007A  043F               	decf	_msg+14,w,c
  7505  00007C  A4D8               	btfss	status,2,c
  7506  00007E  D00A               	goto	i1l4092
  7507                           
  7508                           ;ABS_Code.c: 219: remote_frame_id = msg.identifier;
  7509  000080  C031  F074         	movff	_msg,_remote_frame_id	;volatile
  7510  000084  C032  F075         	movff	_msg+1,_remote_frame_id+1	;volatile
  7511  000088  C033  F076         	movff	_msg+2,_remote_frame_id+2	;volatile
  7512  00008C  C034  F077         	movff	_msg+3,_remote_frame_id+3	;volatile
  7513                           
  7514                           ;ABS_Code.c: 220: remote_frame = 1;
  7515  000090  8042               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7516  000092  D000               	goto	i1l4092
  7517  000094                     i1l4092:
  7518                           
  7519                           ;ABS_Code.c: 221: }
  7520                           ;ABS_Code.c: 222: if (msg.identifier == 0b00000000110) {
  7521  000094  0E06               	movlw	6
  7522  000096  1831               	xorwf	_msg,w,c
  7523  000098  1032               	iorwf	_msg+1,w,c
  7524  00009A  1033               	iorwf	_msg+2,w,c
  7525  00009C  1034               	iorwf	_msg+3,w,c
  7526  00009E  A4D8               	btfss	status,2,c
  7527  0000A0  D005               	goto	i1l4096
  7528                           
  7529                           ;ABS_Code.c: 223: brake_signal_CAN = msg.data[0];
  7530  0000A2  C035  F08D         	movff	_msg+4,_brake_signal_CAN	;volatile
  7531                           
  7532                           ;ABS_Code.c: 224: Analogic_Mode = msg.data[1];
  7533  0000A6  C036  F08C         	movff	_msg+5,_Analogic_Mode	;volatile
  7534  0000AA  D000               	goto	i1l4096
  7535  0000AC                     i1l4096:
  7536                           
  7537                           ;ABS_Code.c: 225: }
  7538                           ;ABS_Code.c: 226: if (msg.identifier == 0b00000001111) {
  7539  0000AC  0E0F               	movlw	15
  7540  0000AE  1831               	xorwf	_msg,w,c
  7541  0000B0  1032               	iorwf	_msg+1,w,c
  7542  0000B2  1033               	iorwf	_msg+2,w,c
  7543  0000B4  1034               	iorwf	_msg+3,w,c
  7544  0000B6  A4D8               	btfss	status,2,c
  7545  0000B8  D010               	goto	i1l4104
  7546                           
  7547                           ;ABS_Code.c: 227: distance_set_value = msg.data[0];
  7548  0000BA  C035  F08A         	movff	_msg+4,_distance_set_value	;volatile
  7549  0000BE  0100               	movlb	0	; () banked
  7550  0000C0  6B8B               	clrf	(_distance_set_value+1)& (0+255),b	;volatile
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;ABS_Code.c: 228: distance_set_counter_1 = 0;
  7554  0000C2  0E00               	movlw	0
  7555  0000C4  0100               	movlb	0	; () banked
  7556  0000C6  6F87               	movwf	(_distance_set_counter_1+1)& (0+255),b	;volatile
  7557  0000C8  0E00               	movlw	0
  7558  0000CA  6F86               	movwf	_distance_set_counter_1& (0+255),b	;volatile
  7559                           
  7560                           ;ABS_Code.c: 229: distance_set_counter_2 = 0;
  7561  0000CC  0E00               	movlw	0
  7562  0000CE  0100               	movlb	0	; () banked
  7563  0000D0  6F89               	movwf	(_distance_set_counter_2+1)& (0+255),b	;volatile
  7564  0000D2  0E00               	movlw	0
  7565  0000D4  6F88               	movwf	_distance_set_counter_2& (0+255),b	;volatile
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;ABS_Code.c: 230: distance_set_flag = 1;
  7569  0000D6  8E41               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  7570                           
  7571                           ; BSR set to: 0
  7572  0000D8  D000               	goto	i1l4104
  7573  0000DA                     i1l4104:
  7574                           
  7575                           ;ABS_Code.c: 231: }
  7576                           ;ABS_Code.c: 232: }
  7577                           ;ABS_Code.c: 233: PIR3bits.RXB0IF = 0;
  7578  0000DA  90A4               	bcf	4004,0,c	;volatile
  7579                           
  7580                           ;ABS_Code.c: 234: PIR3bits.RXB1IF = 0;
  7581  0000DC  92A4               	bcf	4004,1,c	;volatile
  7582  0000DE  D000               	goto	i1l4108
  7583  0000E0                     i1l4108:
  7584                           
  7585                           ;ABS_Code.c: 235: }
  7586                           ;ABS_Code.c: 238: if (PIR1bits.TMR1IF == 1) {
  7587  0000E0  A09E               	btfss	3998,0,c	;volatile
  7588  0000E2  D002               	goto	i1l703
  7589                           
  7590                           ;ABS_Code.c: 239: TMR1_overflow = 1;
  7591  0000E4  8441               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7592                           
  7593                           ;ABS_Code.c: 240: PIR1bits.TMR1IF = 0;
  7594  0000E6  909E               	bcf	3998,0,c	;volatile
  7595  0000E8                     i1l703:
  7596                           
  7597                           ;ABS_Code.c: 241: }
  7598                           ;ABS_Code.c: 244: if (PIR2bits.TMR3IF == 1) {
  7599  0000E8  A2A1               	btfss	4001,1,c	;volatile
  7600  0000EA  D003               	goto	i1l705
  7601                           
  7602                           ;ABS_Code.c: 245: TMR3_overflow = 1;
  7603  0000EC  8641               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7604                           
  7605                           ;ABS_Code.c: 246: PIR2bits.TMR3IF = 0;
  7606  0000EE  92A1               	bcf	4001,1,c	;volatile
  7607  0000F0  D000               	goto	i1l705
  7608  0000F2                     i1l705:
  7609  0000F2  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7610  0000F6  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7611  0000FA  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7612  0000FE  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7613  000102  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7614  000106  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7615  00010A  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7616  00010E  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7617  000112  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7618  000116  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7619  00011A  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7620  00011E  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7621  000122  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7622  000126  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7623  00012A  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7624  00012E  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7625  000132  C00D  FFD8         	movff	??_ISR_Bassa,status
  7626  000136  0010               	retfie	
  7627  000138                     __end_of_ISR_Bassa:
  7628                           	opt stack 0
  7629                           pclatu	equ	0xFFB
  7630                           pclath	equ	0xFFA
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           intcon2	equ	0xFF1
  7639                           intcon3	equ	0xFF0
  7640                           postinc0	equ	0xFEE
  7641                           fsr0h	equ	0xFEA
  7642                           fsr0l	equ	0xFE9
  7643                           wreg	equ	0xFE8
  7644                           postdec1	equ	0xFE5
  7645                           fsr1h	equ	0xFE2
  7646                           fsr1l	equ	0xFE1
  7647                           bsr	equ	0xFE0
  7648                           indf2	equ	0xFDF
  7649                           fsr2h	equ	0xFDA
  7650                           fsr2l	equ	0xFD9
  7651                           status	equ	0xFD8
  7652                           
  7653 ;; *************** function _CANreceiveMessage *****************
  7654 ;; Defined at:
  7655 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  msg             2    0[COMRAM] PTR struct .
  7658 ;;		 -> msg(15), 
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;  tamp            1   11[COMRAM] unsigned char 
  7661 ;;  error           1   10[COMRAM] unsigned char 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      unsigned char 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7671 ;;      Params:         2       0       0       0
  7672 ;;      Locals:         2       0       0       0
  7673 ;;      Temps:          8       0       0       0
  7674 ;;      Totals:        12       0       0       0
  7675 ;;Total ram usage:       12 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    2
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_ISR_Bassa
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text16
  7686  001406                     __ptext16:
  7687                           	opt stack 0
  7688  001406                     _CANreceiveMessage:
  7689                           	opt stack 24
  7690                           
  7691                           ;inc\CANlib.h: 530: BYTE tamp;
  7692                           ;inc\CANlib.h: 531: BYTE error = 0;
  7693                           
  7694                           ;incstack = 0
  7695  001406  0E00               	movlw	0
  7696  001408  6E0B               	movwf	CANreceiveMessage@error,c
  7697                           
  7698                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7699  00140A  AE74               	btfss	3956,7,c	;volatile
  7700  00140C  D002               	goto	i1l3522
  7701                           
  7702                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7703  00140E  800B               	bsf	CANreceiveMessage@error,0,c
  7704  001410  D000               	goto	i1l3522
  7705  001412                     i1l3522:
  7706                           
  7707                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7708  001412  AC74               	btfss	3956,6,c	;volatile
  7709  001414  D002               	goto	i1l3526
  7710                           
  7711                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7712  001416  820B               	bsf	CANreceiveMessage@error,1,c
  7713  001418  D000               	goto	i1l3526
  7714  00141A                     i1l3526:
  7715                           
  7716                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7717  00141A  010F               	movlb	15	; () banked
  7718  00141C  AF50               	btfss	80,7,b	;volatile
  7719  00141E  D149               	goto	i1l428
  7720                           
  7721                           ; BSR set to: 15
  7722                           ;inc\CANlib.h: 541: {
  7723                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7724  001420  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7725  001424  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7726  001428  6ADE               	clrf	postinc2,c
  7727  00142A  6ADE               	clrf	postinc2,c
  7728  00142C  6ADE               	clrf	postinc2,c
  7729  00142E  6ADD               	clrf	postdec2,c
  7730                           
  7731                           ; BSR set to: 15
  7732                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7733  001430  EE20 F004          	lfsr	2,4
  7734  001434  5001               	movf	CANreceiveMessage@msg,w,c
  7735  001436  26D9               	addwf	fsr2l,f,c
  7736  001438  5002               	movf	CANreceiveMessage@msg+1,w,c
  7737  00143A  22DA               	addwfc	fsr2h,f,c
  7738  00143C  CF56 FFDF          	movff	3926,indf2	;volatile
  7739                           
  7740                           ; BSR set to: 15
  7741                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7742  001440  EE20 F005          	lfsr	2,5
  7743  001444  5001               	movf	CANreceiveMessage@msg,w,c
  7744  001446  26D9               	addwf	fsr2l,f,c
  7745  001448  5002               	movf	CANreceiveMessage@msg+1,w,c
  7746  00144A  22DA               	addwfc	fsr2h,f,c
  7747  00144C  CF57 FFDF          	movff	3927,indf2	;volatile
  7748                           
  7749                           ; BSR set to: 15
  7750                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7751  001450  EE20 F006          	lfsr	2,6
  7752  001454  5001               	movf	CANreceiveMessage@msg,w,c
  7753  001456  26D9               	addwf	fsr2l,f,c
  7754  001458  5002               	movf	CANreceiveMessage@msg+1,w,c
  7755  00145A  22DA               	addwfc	fsr2h,f,c
  7756  00145C  CF58 FFDF          	movff	3928,indf2	;volatile
  7757                           
  7758                           ; BSR set to: 15
  7759                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7760  001460  EE20 F007          	lfsr	2,7
  7761  001464  5001               	movf	CANreceiveMessage@msg,w,c
  7762  001466  26D9               	addwf	fsr2l,f,c
  7763  001468  5002               	movf	CANreceiveMessage@msg+1,w,c
  7764  00146A  22DA               	addwfc	fsr2h,f,c
  7765  00146C  CF59 FFDF          	movff	3929,indf2	;volatile
  7766                           
  7767                           ; BSR set to: 15
  7768                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7769  001470  EE20 F008          	lfsr	2,8
  7770  001474  5001               	movf	CANreceiveMessage@msg,w,c
  7771  001476  26D9               	addwf	fsr2l,f,c
  7772  001478  5002               	movf	CANreceiveMessage@msg+1,w,c
  7773  00147A  22DA               	addwfc	fsr2h,f,c
  7774  00147C  CF5A FFDF          	movff	3930,indf2	;volatile
  7775                           
  7776                           ; BSR set to: 15
  7777                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7778  001480  EE20 F009          	lfsr	2,9
  7779  001484  5001               	movf	CANreceiveMessage@msg,w,c
  7780  001486  26D9               	addwf	fsr2l,f,c
  7781  001488  5002               	movf	CANreceiveMessage@msg+1,w,c
  7782  00148A  22DA               	addwfc	fsr2h,f,c
  7783  00148C  CF5B FFDF          	movff	3931,indf2	;volatile
  7784                           
  7785                           ; BSR set to: 15
  7786                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7787  001490  EE20 F00A          	lfsr	2,10
  7788  001494  5001               	movf	CANreceiveMessage@msg,w,c
  7789  001496  26D9               	addwf	fsr2l,f,c
  7790  001498  5002               	movf	CANreceiveMessage@msg+1,w,c
  7791  00149A  22DA               	addwfc	fsr2h,f,c
  7792  00149C  CF5C FFDF          	movff	3932,indf2	;volatile
  7793                           
  7794                           ; BSR set to: 15
  7795                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7796  0014A0  EE20 F00B          	lfsr	2,11
  7797  0014A4  5001               	movf	CANreceiveMessage@msg,w,c
  7798  0014A6  26D9               	addwf	fsr2l,f,c
  7799  0014A8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7800  0014AA  22DA               	addwfc	fsr2h,f,c
  7801  0014AC  CF5D FFDF          	movff	3933,indf2	;volatile
  7802                           
  7803                           ; BSR set to: 15
  7804                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7805  0014B0  EE20 F00E          	lfsr	2,14
  7806  0014B4  5001               	movf	CANreceiveMessage@msg,w,c
  7807  0014B6  26D9               	addwf	fsr2l,f,c
  7808  0014B8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7809  0014BA  22DA               	addwfc	fsr2h,f,c
  7810  0014BC  010F               	movlb	15	; () banked
  7811  0014BE  AD55               	btfss	85,6,b	;volatile
  7812  0014C0  D002               	goto	i1u388_20
  7813  0014C2  0E01               	movlw	1
  7814  0014C4  D001               	goto	i1u388_26
  7815  0014C6                     i1u388_20:
  7816  0014C6  0E00               	movlw	0
  7817  0014C8                     i1u388_26:
  7818  0014C8  6EDF               	movwf	indf2,c
  7819                           
  7820                           ; BSR set to: 15
  7821                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7822  0014CA  EE20 F00D          	lfsr	2,13
  7823  0014CE  5001               	movf	CANreceiveMessage@msg,w,c
  7824  0014D0  26D9               	addwf	fsr2l,f,c
  7825  0014D2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7826  0014D4  22DA               	addwfc	fsr2h,f,c
  7827  0014D6  010F               	movlb	15	; () banked
  7828  0014D8  5155               	movf	85,w,b	;volatile
  7829  0014DA  0B0F               	andlw	15
  7830  0014DC  6EDF               	movwf	indf2,c
  7831                           
  7832                           ; BSR set to: 15
  7833                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7834  0014DE  EE20 F00C          	lfsr	2,12
  7835  0014E2  5001               	movf	CANreceiveMessage@msg,w,c
  7836  0014E4  26D9               	addwf	fsr2l,f,c
  7837  0014E6  5002               	movf	CANreceiveMessage@msg+1,w,c
  7838  0014E8  22DA               	addwfc	fsr2h,f,c
  7839  0014EA  010F               	movlb	15	; () banked
  7840  0014EC  A752               	btfss	82,3,b	;volatile
  7841  0014EE  D002               	goto	i1u389_20
  7842  0014F0  0E01               	movlw	1
  7843  0014F2  D001               	goto	i1u389_26
  7844  0014F4                     i1u389_20:
  7845  0014F4  0E00               	movlw	0
  7846  0014F6                     i1u389_26:
  7847  0014F6  6EDF               	movwf	indf2,c
  7848                           
  7849                           ; BSR set to: 15
  7850                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7851  0014F8  010F               	movlb	15	; () banked
  7852  0014FA  B752               	btfsc	82,3,b	;volatile
  7853  0014FC  D044               	goto	i1l3560
  7854                           
  7855                           ; BSR set to: 15
  7856                           ;inc\CANlib.h: 559: {
  7857                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7858  0014FE  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7859  001502  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7860  001504  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7861  001506  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7862  001508  0E03               	movlw	3
  7863  00150A                     i1u391_25:
  7864  00150A  90D8               	bcf	status,0,c
  7865  00150C  3603               	rlcf	??_CANreceiveMessage,f,c
  7866  00150E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7867  001510  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7868  001512  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7869  001514  2EE8               	decfsz	wreg,f,c
  7870  001516  D7F9               	goto	i1u391_25
  7871  001518  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7872  00151C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7873  001520  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7874  001524  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7875  001528  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7876  00152C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7877                           
  7878                           ; BSR set to: 15
  7879                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7880  001530  010F               	movlb	15	; () banked
  7881  001532  3952               	swapf	82,w,b	;volatile
  7882  001534  42E8               	rrncf	wreg,f,c
  7883  001536  0B07               	andlw	7
  7884  001538  0B07               	andlw	7
  7885  00153A  6E0C               	movwf	CANreceiveMessage@tamp,c
  7886                           
  7887                           ; BSR set to: 15
  7888                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7889  00153C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7890  001540  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7891  001544  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7892  001548  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7893  00154C  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7894  001550  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7895  001554  500C               	movf	CANreceiveMessage@tamp,w,c
  7896  001556  2403               	addwf	??_CANreceiveMessage,w,c
  7897  001558  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7898  00155A  0E00               	movlw	0
  7899  00155C  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7900  00155E  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7901  001560  0E00               	movlw	0
  7902  001562  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7903  001564  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7904  001566  0E00               	movlw	0
  7905  001568  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7906  00156A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7907  00156C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7908  001570  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7909  001574  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7910  001578  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7911  00157C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7912  001580  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7913                           
  7914                           ;inc\CANlib.h: 563: }
  7915  001584  D093               	goto	i1l3586
  7916  001586                     i1l3560:
  7917                           
  7918                           ; BSR set to: 15
  7919                           ;inc\CANlib.h: 564: else
  7920                           ;inc\CANlib.h: 565: {
  7921                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7922  001586  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7923  00158A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7924  00158C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7925  00158E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7926  001590  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7927  001594  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7928  001598  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7929  00159C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7930  0015A0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7931  0015A4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7932                           
  7933                           ; BSR set to: 15
  7934                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7935  0015A8  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7936  0015AC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7937  0015AE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7938  0015B0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7939  0015B2  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7940  0015B6  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7941  0015BA  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7942  0015BE  6A03               	clrf	??_CANreceiveMessage,c
  7943  0015C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7944  0015C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7945  0015C8  5003               	movf	??_CANreceiveMessage,w,c
  7946  0015CA  26DE               	addwf	postinc2,f,c
  7947  0015CC  5004               	movf	??_CANreceiveMessage+1,w,c
  7948  0015CE  22DE               	addwfc	postinc2,f,c
  7949  0015D0  5005               	movf	??_CANreceiveMessage+2,w,c
  7950  0015D2  22DE               	addwfc	postinc2,f,c
  7951  0015D4  5006               	movf	??_CANreceiveMessage+3,w,c
  7952  0015D6  22DE               	addwfc	postinc2,f,c
  7953                           
  7954                           ; BSR set to: 15
  7955                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7956  0015D8  010F               	movlb	15	; () banked
  7957  0015DA  A152               	btfss	82,0,b	;volatile
  7958  0015DC  D00D               	goto	i1l3568
  7959                           
  7960                           ; BSR set to: 15
  7961                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7962  0015DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7963  0015E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7964  0015E6  0E00               	movlw	0
  7965  0015E8  12DE               	iorwf	postinc2,f,c
  7966  0015EA  0E00               	movlw	0
  7967  0015EC  12DE               	iorwf	postinc2,f,c
  7968  0015EE  0E01               	movlw	1
  7969  0015F0  12DE               	iorwf	postinc2,f,c
  7970  0015F2  0E00               	movlw	0
  7971  0015F4  12DE               	iorwf	postinc2,f,c
  7972  0015F6  D000               	goto	i1l3568
  7973  0015F8                     i1l3568:
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7977  0015F8  010F               	movlb	15	; () banked
  7978  0015FA  A352               	btfss	82,1,b	;volatile
  7979  0015FC  D00D               	goto	i1l3572
  7980                           
  7981                           ; BSR set to: 15
  7982                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7983  0015FE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7984  001602  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7985  001606  0E00               	movlw	0
  7986  001608  12DE               	iorwf	postinc2,f,c
  7987  00160A  0E00               	movlw	0
  7988  00160C  12DE               	iorwf	postinc2,f,c
  7989  00160E  0E02               	movlw	2
  7990  001610  12DE               	iorwf	postinc2,f,c
  7991  001612  0E00               	movlw	0
  7992  001614  12DE               	iorwf	postinc2,f,c
  7993  001616  D000               	goto	i1l3572
  7994  001618                     i1l3572:
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7998  001618  010F               	movlb	15	; () banked
  7999  00161A  AB52               	btfss	82,5,b	;volatile
  8000  00161C  D00D               	goto	i1l3576
  8001                           
  8002                           ; BSR set to: 15
  8003                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8004  00161E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8005  001622  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8006  001626  0E00               	movlw	0
  8007  001628  12DE               	iorwf	postinc2,f,c
  8008  00162A  0E00               	movlw	0
  8009  00162C  12DE               	iorwf	postinc2,f,c
  8010  00162E  0E04               	movlw	4
  8011  001630  12DE               	iorwf	postinc2,f,c
  8012  001632  0E00               	movlw	0
  8013  001634  12DE               	iorwf	postinc2,f,c
  8014  001636  D000               	goto	i1l3576
  8015  001638                     i1l3576:
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8019  001638  010F               	movlb	15	; () banked
  8020  00163A  AD52               	btfss	82,6,b	;volatile
  8021  00163C  D00D               	goto	i1l3580
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8025  00163E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8026  001642  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8027  001646  0E00               	movlw	0
  8028  001648  12DE               	iorwf	postinc2,f,c
  8029  00164A  0E00               	movlw	0
  8030  00164C  12DE               	iorwf	postinc2,f,c
  8031  00164E  0E08               	movlw	8
  8032  001650  12DE               	iorwf	postinc2,f,c
  8033  001652  0E00               	movlw	0
  8034  001654  12DE               	iorwf	postinc2,f,c
  8035  001656  D000               	goto	i1l3580
  8036  001658                     i1l3580:
  8037                           
  8038                           ; BSR set to: 15
  8039                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8040  001658  010F               	movlb	15	; () banked
  8041  00165A  AF52               	btfss	82,7,b	;volatile
  8042  00165C  D00D               	goto	i1l3584
  8043                           
  8044                           ; BSR set to: 15
  8045                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8046  00165E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8047  001662  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8048  001666  0E00               	movlw	0
  8049  001668  12DE               	iorwf	postinc2,f,c
  8050  00166A  0E00               	movlw	0
  8051  00166C  12DE               	iorwf	postinc2,f,c
  8052  00166E  0E10               	movlw	16
  8053  001670  12DE               	iorwf	postinc2,f,c
  8054  001672  0E00               	movlw	0
  8055  001674  12DE               	iorwf	postinc2,f,c
  8056  001676  D000               	goto	i1l3584
  8057  001678                     i1l3584:
  8058                           
  8059                           ; BSR set to: 15
  8060                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8061  001678  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8062  00167C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8063  00167E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8064  001680  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8065  001682  0E15               	movlw	21
  8066  001684                     i1u397_25:
  8067  001684  90D8               	bcf	status,0,c
  8068  001686  3603               	rlcf	??_CANreceiveMessage,f,c
  8069  001688  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8070  00168A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8071  00168C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8072  00168E  2EE8               	decfsz	wreg,f,c
  8073  001690  D7F9               	goto	i1u397_25
  8074  001692  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8075  001696  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8076  00169A  5003               	movf	??_CANreceiveMessage,w,c
  8077  00169C  12DE               	iorwf	postinc2,f,c
  8078  00169E  5004               	movf	??_CANreceiveMessage+1,w,c
  8079  0016A0  12DE               	iorwf	postinc2,f,c
  8080  0016A2  5005               	movf	??_CANreceiveMessage+2,w,c
  8081  0016A4  12DE               	iorwf	postinc2,f,c
  8082  0016A6  5006               	movf	??_CANreceiveMessage+3,w,c
  8083  0016A8  12DE               	iorwf	postinc2,f,c
  8084  0016AA  D000               	goto	i1l3586
  8085  0016AC                     i1l3586:
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;inc\CANlib.h: 581: }
  8089                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8090  0016AC  010F               	movlb	15	; () banked
  8091  0016AE  9F50               	bcf	80,7,b	;volatile
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;inc\CANlib.h: 584: return (error);
  8095                           ;	Return value of _CANreceiveMessage is never used
  8096  0016B0  D140               	goto	i1l436
  8097  0016B2                     i1l428:
  8098                           
  8099                           ; BSR set to: 15
  8100                           ;inc\CANlib.h: 585: }
  8101                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8102  0016B2  AE60               	btfss	3936,7,c	;volatile
  8103  0016B4  D13E               	goto	i1l436
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;inc\CANlib.h: 588: {
  8107                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8108  0016B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8109  0016BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8110  0016BE  6ADE               	clrf	postinc2,c
  8111  0016C0  6ADE               	clrf	postinc2,c
  8112  0016C2  6ADE               	clrf	postinc2,c
  8113  0016C4  6ADD               	clrf	postdec2,c
  8114                           
  8115                           ; BSR set to: 15
  8116                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8117  0016C6  EE20 F004          	lfsr	2,4
  8118  0016CA  5001               	movf	CANreceiveMessage@msg,w,c
  8119  0016CC  26D9               	addwf	fsr2l,f,c
  8120  0016CE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8121  0016D0  22DA               	addwfc	fsr2h,f,c
  8122  0016D2  CF66 FFDF          	movff	3942,indf2	;volatile
  8123                           
  8124                           ; BSR set to: 15
  8125                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8126  0016D6  EE20 F005          	lfsr	2,5
  8127  0016DA  5001               	movf	CANreceiveMessage@msg,w,c
  8128  0016DC  26D9               	addwf	fsr2l,f,c
  8129  0016DE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8130  0016E0  22DA               	addwfc	fsr2h,f,c
  8131  0016E2  CF67 FFDF          	movff	3943,indf2	;volatile
  8132                           
  8133                           ; BSR set to: 15
  8134                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8135  0016E6  EE20 F006          	lfsr	2,6
  8136  0016EA  5001               	movf	CANreceiveMessage@msg,w,c
  8137  0016EC  26D9               	addwf	fsr2l,f,c
  8138  0016EE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8139  0016F0  22DA               	addwfc	fsr2h,f,c
  8140  0016F2  CF68 FFDF          	movff	3944,indf2	;volatile
  8141                           
  8142                           ; BSR set to: 15
  8143                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8144  0016F6  EE20 F007          	lfsr	2,7
  8145  0016FA  5001               	movf	CANreceiveMessage@msg,w,c
  8146  0016FC  26D9               	addwf	fsr2l,f,c
  8147  0016FE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8148  001700  22DA               	addwfc	fsr2h,f,c
  8149  001702  CF69 FFDF          	movff	3945,indf2	;volatile
  8150                           
  8151                           ; BSR set to: 15
  8152                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8153  001706  EE20 F008          	lfsr	2,8
  8154  00170A  5001               	movf	CANreceiveMessage@msg,w,c
  8155  00170C  26D9               	addwf	fsr2l,f,c
  8156  00170E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8157  001710  22DA               	addwfc	fsr2h,f,c
  8158  001712  CF6A FFDF          	movff	3946,indf2	;volatile
  8159                           
  8160                           ; BSR set to: 15
  8161                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8162  001716  EE20 F009          	lfsr	2,9
  8163  00171A  5001               	movf	CANreceiveMessage@msg,w,c
  8164  00171C  26D9               	addwf	fsr2l,f,c
  8165  00171E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8166  001720  22DA               	addwfc	fsr2h,f,c
  8167  001722  CF6B FFDF          	movff	3947,indf2	;volatile
  8168                           
  8169                           ; BSR set to: 15
  8170                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8171  001726  EE20 F00A          	lfsr	2,10
  8172  00172A  5001               	movf	CANreceiveMessage@msg,w,c
  8173  00172C  26D9               	addwf	fsr2l,f,c
  8174  00172E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8175  001730  22DA               	addwfc	fsr2h,f,c
  8176  001732  CF6C FFDF          	movff	3948,indf2	;volatile
  8177                           
  8178                           ; BSR set to: 15
  8179                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8180  001736  EE20 F00B          	lfsr	2,11
  8181  00173A  5001               	movf	CANreceiveMessage@msg,w,c
  8182  00173C  26D9               	addwf	fsr2l,f,c
  8183  00173E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8184  001740  22DA               	addwfc	fsr2h,f,c
  8185  001742  CF6D FFDF          	movff	3949,indf2	;volatile
  8186                           
  8187                           ; BSR set to: 15
  8188                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8189  001746  EE20 F00E          	lfsr	2,14
  8190  00174A  5001               	movf	CANreceiveMessage@msg,w,c
  8191  00174C  26D9               	addwf	fsr2l,f,c
  8192  00174E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8193  001750  22DA               	addwfc	fsr2h,f,c
  8194  001752  AC65               	btfss	3941,6,c	;volatile
  8195  001754  D002               	goto	i1u399_20
  8196  001756  0E01               	movlw	1
  8197  001758  D001               	goto	i1u399_26
  8198  00175A                     i1u399_20:
  8199  00175A  0E00               	movlw	0
  8200  00175C                     i1u399_26:
  8201  00175C  6EDF               	movwf	indf2,c
  8202                           
  8203                           ; BSR set to: 15
  8204                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8205  00175E  EE20 F00D          	lfsr	2,13
  8206  001762  5001               	movf	CANreceiveMessage@msg,w,c
  8207  001764  26D9               	addwf	fsr2l,f,c
  8208  001766  5002               	movf	CANreceiveMessage@msg+1,w,c
  8209  001768  22DA               	addwfc	fsr2h,f,c
  8210  00176A  5065               	movf	3941,w,c	;volatile
  8211  00176C  0B0F               	andlw	15
  8212  00176E  6EDF               	movwf	indf2,c
  8213                           
  8214                           ; BSR set to: 15
  8215                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8216  001770  EE20 F00C          	lfsr	2,12
  8217  001774  5001               	movf	CANreceiveMessage@msg,w,c
  8218  001776  26D9               	addwf	fsr2l,f,c
  8219  001778  5002               	movf	CANreceiveMessage@msg+1,w,c
  8220  00177A  22DA               	addwfc	fsr2h,f,c
  8221  00177C  A662               	btfss	3938,3,c	;volatile
  8222  00177E  D002               	goto	i1u400_20
  8223  001780  0E01               	movlw	1
  8224  001782  D001               	goto	i1u400_26
  8225  001784                     i1u400_20:
  8226  001784  0E00               	movlw	0
  8227  001786                     i1u400_26:
  8228  001786  6EDF               	movwf	indf2,c
  8229                           
  8230                           ; BSR set to: 15
  8231                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8232  001788  B662               	btfsc	3938,3,c	;volatile
  8233  00178A  D043               	goto	i1l3622
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;inc\CANlib.h: 606: {
  8237                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8238  00178C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8239  001790  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8240  001792  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8241  001794  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8242  001796  0E03               	movlw	3
  8243  001798                     i1u402_25:
  8244  001798  90D8               	bcf	status,0,c
  8245  00179A  3603               	rlcf	??_CANreceiveMessage,f,c
  8246  00179C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8247  00179E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8248  0017A0  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8249  0017A2  2EE8               	decfsz	wreg,f,c
  8250  0017A4  D7F9               	goto	i1u402_25
  8251  0017A6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8252  0017AA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8253  0017AE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8254  0017B2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8255  0017B6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8256  0017BA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8257                           
  8258                           ; BSR set to: 15
  8259                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8260  0017BE  3862               	swapf	3938,w,c	;volatile
  8261  0017C0  42E8               	rrncf	wreg,f,c
  8262  0017C2  0B07               	andlw	7
  8263  0017C4  0B07               	andlw	7
  8264  0017C6  6E0C               	movwf	CANreceiveMessage@tamp,c
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8268  0017C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8269  0017CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8270  0017D0  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8271  0017D4  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8272  0017D8  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8273  0017DC  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8274  0017E0  500C               	movf	CANreceiveMessage@tamp,w,c
  8275  0017E2  2403               	addwf	??_CANreceiveMessage,w,c
  8276  0017E4  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8277  0017E6  0E00               	movlw	0
  8278  0017E8  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8279  0017EA  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8280  0017EC  0E00               	movlw	0
  8281  0017EE  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8282  0017F0  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8283  0017F2  0E00               	movlw	0
  8284  0017F4  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8285  0017F6  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8286  0017F8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8287  0017FC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8288  001800  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8289  001804  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8290  001808  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8291  00180C  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8292                           
  8293                           ;inc\CANlib.h: 610: }
  8294  001810  D08E               	goto	i1l3648
  8295  001812                     i1l3622:
  8296                           
  8297                           ; BSR set to: 15
  8298                           ;inc\CANlib.h: 611: else
  8299                           ;inc\CANlib.h: 612: {
  8300                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8301  001812  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8302  001816  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8303  001818  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8304  00181A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8305  00181C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8306  001820  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8307  001824  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8308  001828  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8309  00182C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8310  001830  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8311                           
  8312                           ; BSR set to: 15
  8313                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8314  001834  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8315  001838  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8316  00183A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8317  00183C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8318  00183E  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8319  001842  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8320  001846  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8321  00184A  6A03               	clrf	??_CANreceiveMessage,c
  8322  00184C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8323  001850  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8324  001854  5003               	movf	??_CANreceiveMessage,w,c
  8325  001856  26DE               	addwf	postinc2,f,c
  8326  001858  5004               	movf	??_CANreceiveMessage+1,w,c
  8327  00185A  22DE               	addwfc	postinc2,f,c
  8328  00185C  5005               	movf	??_CANreceiveMessage+2,w,c
  8329  00185E  22DE               	addwfc	postinc2,f,c
  8330  001860  5006               	movf	??_CANreceiveMessage+3,w,c
  8331  001862  22DE               	addwfc	postinc2,f,c
  8332                           
  8333                           ; BSR set to: 15
  8334                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8335  001864  A062               	btfss	3938,0,c	;volatile
  8336  001866  D00D               	goto	i1l3630
  8337                           
  8338                           ; BSR set to: 15
  8339                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8340  001868  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8341  00186C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8342  001870  0E00               	movlw	0
  8343  001872  12DE               	iorwf	postinc2,f,c
  8344  001874  0E00               	movlw	0
  8345  001876  12DE               	iorwf	postinc2,f,c
  8346  001878  0E01               	movlw	1
  8347  00187A  12DE               	iorwf	postinc2,f,c
  8348  00187C  0E00               	movlw	0
  8349  00187E  12DE               	iorwf	postinc2,f,c
  8350  001880  D000               	goto	i1l3630
  8351  001882                     i1l3630:
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8355  001882  A262               	btfss	3938,1,c	;volatile
  8356  001884  D00D               	goto	i1l3634
  8357                           
  8358                           ; BSR set to: 15
  8359                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8360  001886  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8361  00188A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8362  00188E  0E00               	movlw	0
  8363  001890  12DE               	iorwf	postinc2,f,c
  8364  001892  0E00               	movlw	0
  8365  001894  12DE               	iorwf	postinc2,f,c
  8366  001896  0E02               	movlw	2
  8367  001898  12DE               	iorwf	postinc2,f,c
  8368  00189A  0E00               	movlw	0
  8369  00189C  12DE               	iorwf	postinc2,f,c
  8370  00189E  D000               	goto	i1l3634
  8371  0018A0                     i1l3634:
  8372                           
  8373                           ; BSR set to: 15
  8374                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8375  0018A0  AA62               	btfss	3938,5,c	;volatile
  8376  0018A2  D00D               	goto	i1l3638
  8377                           
  8378                           ; BSR set to: 15
  8379                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8380  0018A4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8381  0018A8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8382  0018AC  0E00               	movlw	0
  8383  0018AE  12DE               	iorwf	postinc2,f,c
  8384  0018B0  0E00               	movlw	0
  8385  0018B2  12DE               	iorwf	postinc2,f,c
  8386  0018B4  0E04               	movlw	4
  8387  0018B6  12DE               	iorwf	postinc2,f,c
  8388  0018B8  0E00               	movlw	0
  8389  0018BA  12DE               	iorwf	postinc2,f,c
  8390  0018BC  D000               	goto	i1l3638
  8391  0018BE                     i1l3638:
  8392                           
  8393                           ; BSR set to: 15
  8394                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8395  0018BE  AC62               	btfss	3938,6,c	;volatile
  8396  0018C0  D00D               	goto	i1l3642
  8397                           
  8398                           ; BSR set to: 15
  8399                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8400  0018C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8401  0018C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8402  0018CA  0E00               	movlw	0
  8403  0018CC  12DE               	iorwf	postinc2,f,c
  8404  0018CE  0E00               	movlw	0
  8405  0018D0  12DE               	iorwf	postinc2,f,c
  8406  0018D2  0E08               	movlw	8
  8407  0018D4  12DE               	iorwf	postinc2,f,c
  8408  0018D6  0E00               	movlw	0
  8409  0018D8  12DE               	iorwf	postinc2,f,c
  8410  0018DA  D000               	goto	i1l3642
  8411  0018DC                     i1l3642:
  8412                           
  8413                           ; BSR set to: 15
  8414                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8415  0018DC  AE62               	btfss	3938,7,c	;volatile
  8416  0018DE  D00D               	goto	i1l3646
  8417                           
  8418                           ; BSR set to: 15
  8419                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8420  0018E0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8421  0018E4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8422  0018E8  0E00               	movlw	0
  8423  0018EA  12DE               	iorwf	postinc2,f,c
  8424  0018EC  0E00               	movlw	0
  8425  0018EE  12DE               	iorwf	postinc2,f,c
  8426  0018F0  0E10               	movlw	16
  8427  0018F2  12DE               	iorwf	postinc2,f,c
  8428  0018F4  0E00               	movlw	0
  8429  0018F6  12DE               	iorwf	postinc2,f,c
  8430  0018F8  D000               	goto	i1l3646
  8431  0018FA                     i1l3646:
  8432                           
  8433                           ; BSR set to: 15
  8434                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8435  0018FA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8436  0018FE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8437  001900  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8438  001902  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8439  001904  0E15               	movlw	21
  8440  001906                     i1u408_25:
  8441  001906  90D8               	bcf	status,0,c
  8442  001908  3603               	rlcf	??_CANreceiveMessage,f,c
  8443  00190A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8444  00190C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8445  00190E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8446  001910  2EE8               	decfsz	wreg,f,c
  8447  001912  D7F9               	goto	i1u408_25
  8448  001914  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8449  001918  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8450  00191C  5003               	movf	??_CANreceiveMessage,w,c
  8451  00191E  12DE               	iorwf	postinc2,f,c
  8452  001920  5004               	movf	??_CANreceiveMessage+1,w,c
  8453  001922  12DE               	iorwf	postinc2,f,c
  8454  001924  5005               	movf	??_CANreceiveMessage+2,w,c
  8455  001926  12DE               	iorwf	postinc2,f,c
  8456  001928  5006               	movf	??_CANreceiveMessage+3,w,c
  8457  00192A  12DE               	iorwf	postinc2,f,c
  8458  00192C  D000               	goto	i1l3648
  8459  00192E                     i1l3648:
  8460                           
  8461                           ; BSR set to: 15
  8462                           ;inc\CANlib.h: 629: }
  8463                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8464  00192E  9E60               	bcf	3936,7,c	;volatile
  8465                           
  8466                           ; BSR set to: 15
  8467                           ;inc\CANlib.h: 632: return (error);
  8468                           ;	Return value of _CANreceiveMessage is never used
  8469  001930  D000               	goto	i1l436
  8470  001932                     i1l436:
  8471                           
  8472                           ; BSR set to: 15
  8473  001932  0012               	return		;funcret
  8474  001934                     __end_of_CANreceiveMessage:
  8475                           	opt stack 0
  8476                           pclatu	equ	0xFFB
  8477                           pclath	equ	0xFFA
  8478                           tblptru	equ	0xFF8
  8479                           tblptrh	equ	0xFF7
  8480                           tblptrl	equ	0xFF6
  8481                           tablat	equ	0xFF5
  8482                           prodh	equ	0xFF4
  8483                           prodl	equ	0xFF3
  8484                           intcon	equ	0xFF2
  8485                           intcon2	equ	0xFF1
  8486                           intcon3	equ	0xFF0
  8487                           postinc0	equ	0xFEE
  8488                           fsr0h	equ	0xFEA
  8489                           fsr0l	equ	0xFE9
  8490                           wreg	equ	0xFE8
  8491                           postdec1	equ	0xFE5
  8492                           fsr1h	equ	0xFE2
  8493                           fsr1l	equ	0xFE1
  8494                           bsr	equ	0xFE0
  8495                           indf2	equ	0xFDF
  8496                           postinc2	equ	0xFDE
  8497                           postdec2	equ	0xFDD
  8498                           fsr2h	equ	0xFDA
  8499                           fsr2l	equ	0xFD9
  8500                           status	equ	0xFD8
  8501                           
  8502 ;; *************** function _CANisRxReady *****************
  8503 ;; Defined at:
  8504 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      unsigned char 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8518 ;;      Params:         0       0       0       0
  8519 ;;      Locals:         1       0       0       0
  8520 ;;      Temps:          0       0       0       0
  8521 ;;      Totals:         1       0       0       0
  8522 ;;Total ram usage:        1 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    2
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_ISR_Bassa
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text17
  8533  002B14                     __ptext17:
  8534                           	opt stack 0
  8535  002B14                     _CANisRxReady:
  8536                           	opt stack 24
  8537                           
  8538                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8539                           
  8540                           ; BSR set to: 15
  8541                           ;incstack = 0
  8542  002B14  0E01               	movlw	1
  8543  002B16  6E01               	movwf	_CANisRxReady$3280,c
  8544  002B18  BE60               	btfsc	3936,7,c	;volatile
  8545  002B1A  D005               	goto	i1l579
  8546  002B1C  010F               	movlb	15	; () banked
  8547  002B1E  BF50               	btfsc	80,7,b	;volatile
  8548  002B20  D002               	goto	i1l579
  8549                           
  8550                           ; BSR set to: 15
  8551  002B22  0E00               	movlw	0
  8552  002B24  6E01               	movwf	_CANisRxReady$3280,c
  8553  002B26                     i1l579:
  8554  002B26  5001               	movf	_CANisRxReady$3280,w,c
  8555  002B28  D000               	goto	i1l580
  8556  002B2A                     i1l580:
  8557  002B2A  0012               	return		;funcret
  8558  002B2C                     __end_of_CANisRxReady:
  8559                           	opt stack 0
  8560                           pclatu	equ	0xFFB
  8561                           pclath	equ	0xFFA
  8562                           tblptru	equ	0xFF8
  8563                           tblptrh	equ	0xFF7
  8564                           tblptrl	equ	0xFF6
  8565                           tablat	equ	0xFF5
  8566                           prodh	equ	0xFF4
  8567                           prodl	equ	0xFF3
  8568                           intcon	equ	0xFF2
  8569                           intcon2	equ	0xFF1
  8570                           intcon3	equ	0xFF0
  8571                           postinc0	equ	0xFEE
  8572                           fsr0h	equ	0xFEA
  8573                           fsr0l	equ	0xFE9
  8574                           wreg	equ	0xFE8
  8575                           postdec1	equ	0xFE5
  8576                           fsr1h	equ	0xFE2
  8577                           fsr1l	equ	0xFE1
  8578                           bsr	equ	0xFE0
  8579                           indf2	equ	0xFDF
  8580                           postinc2	equ	0xFDE
  8581                           postdec2	equ	0xFDD
  8582                           fsr2h	equ	0xFDA
  8583                           fsr2l	equ	0xFD9
  8584                           status	equ	0xFD8
  8585                           
  8586 ;; *************** function _ISR_Alta *****************
  8587 ;; Defined at:
  8588 ;;		line 148 in file "ABS_Code.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;		None               void
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8602 ;;      Params:         0       0       0       0
  8603 ;;      Locals:         0       0       0       0
  8604 ;;      Temps:          0      22       0       0
  8605 ;;      Totals:         0      22       0       0
  8606 ;;Total ram usage:       22 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; Hardware stack levels required when called:    1
  8609 ;; This function calls:
  8610 ;;		_WriteTimer0
  8611 ;;		___lwdiv
  8612 ;;		i2___awdiv
  8613 ;;		i2___wmul
  8614 ;; This function is called by:
  8615 ;;		Interrupt level 2
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	intcode
  8620  000008                     __pintcode:
  8621                           	opt stack 0
  8622  000008                     _ISR_Alta:
  8623                           	opt stack 24
  8624                           
  8625                           ;incstack = 0
  8626  000008  CFFA F0BA          	movff	pclath,??_ISR_Alta+8
  8627  00000C  CFFB F0BB          	movff	pclatu,??_ISR_Alta+9
  8628  000010  CFE9 F0BC          	movff	fsr0l,??_ISR_Alta+10
  8629  000014  EDD3  F00F         	call	int_func,f	;refresh shadow registers
  8630                           pclatu	equ	0xFFB
  8631                           pclath	equ	0xFFA
  8632                           tblptru	equ	0xFF8
  8633                           tblptrh	equ	0xFF7
  8634                           tblptrl	equ	0xFF6
  8635                           tablat	equ	0xFF5
  8636                           prodh	equ	0xFF4
  8637                           prodl	equ	0xFF3
  8638                           intcon	equ	0xFF2
  8639                           intcon2	equ	0xFF1
  8640                           intcon3	equ	0xFF0
  8641                           postinc0	equ	0xFEE
  8642                           fsr0h	equ	0xFEA
  8643                           fsr0l	equ	0xFE9
  8644                           wreg	equ	0xFE8
  8645                           postdec1	equ	0xFE5
  8646                           fsr1h	equ	0xFE2
  8647                           fsr1l	equ	0xFE1
  8648                           bsr	equ	0xFE0
  8649                           indf2	equ	0xFDF
  8650                           postinc2	equ	0xFDE
  8651                           postdec2	equ	0xFDD
  8652                           fsr2h	equ	0xFDA
  8653                           fsr2l	equ	0xFD9
  8654                           status	equ	0xFD8
  8655                           
  8656                           	psect	intcode_body
  8657  001FA6                     __pintcode_body:
  8658                           	opt stack 24
  8659  001FA6                     int_func:
  8660                           	opt stack 24
  8661  001FA6  0006               	pop		; remove dummy address from shadow register refresh
  8662  001FA8  CFEA F0BD          	movff	fsr0h,??_ISR_Alta+11
  8663  001FAC  CFE1 F0BE          	movff	fsr1l,??_ISR_Alta+12
  8664  001FB0  CFE2 F0BF          	movff	fsr1h,??_ISR_Alta+13
  8665  001FB4  CFD9 F0C0          	movff	fsr2l,??_ISR_Alta+14
  8666  001FB8  CFDA F0C1          	movff	fsr2h,??_ISR_Alta+15
  8667  001FBC  CFF3 F0C2          	movff	prodl,??_ISR_Alta+16
  8668  001FC0  CFF4 F0C3          	movff	prodh,??_ISR_Alta+17
  8669  001FC4  CFF6 F0C4          	movff	tblptrl,??_ISR_Alta+18
  8670  001FC8  CFF7 F0C5          	movff	tblptrh,??_ISR_Alta+19
  8671  001FCC  CFF8 F0C6          	movff	tblptru,??_ISR_Alta+20
  8672  001FD0  CFF5 F0C7          	movff	tablat,??_ISR_Alta+21
  8673                           
  8674                           ;ABS_Code.c: 150: if (INTCONbits.TMR0IF == 1) {
  8675  001FD4  A4F2               	btfss	intcon,2,c	;volatile
  8676  001FD6  D0A7               	goto	i2l4482
  8677                           
  8678                           ;ABS_Code.c: 151: PORTCbits.RC0 = ~PORTCbits.RC0;
  8679  001FD8  7082               	btg	3970,0,c	;volatile
  8680                           
  8681                           ;ABS_Code.c: 152: if (PORTCbits.RC0 == 1) {
  8682  001FDA  A082               	btfss	3970,0,c	;volatile
  8683  001FDC  D09B               	goto	i2l4478
  8684                           
  8685                           ;ABS_Code.c: 153: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8686  001FDE  0E40               	movlw	64
  8687  001FE0  0100               	movlb	0	; () banked
  8688  001FE2  6FB2               	movwf	??_ISR_Alta& (0+255),b
  8689  001FE4  0E06               	movlw	6
  8690  001FE6  0100               	movlb	0	; () banked
  8691  001FE8  6FB3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8692  001FEA  C040  F01E         	movff	_brake_value_degree,i2___wmul@multiplier	;volatile
  8693  001FEE  6A1F               	clrf	i2___wmul@multiplier+1,c
  8694  001FF0  0E05               	movlw	5
  8695  001FF2  6E21               	movwf	i2___wmul@multiplicand+1,c
  8696  001FF4  0E78               	movlw	120
  8697  001FF6  6E20               	movwf	i2___wmul@multiplicand,c
  8698  001FF8  EC57  F015         	call	i2___wmul	;wreg free
  8699  001FFC  C01E  F0AA         	movff	?i2___wmul,i2___awdiv@dividend
  8700  002000  C01F  F0AB         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8701  002004  0E00               	movlw	0
  8702  002006  0100               	movlb	0	; () banked
  8703  002008  6FAD               	movwf	(i2___awdiv@divisor+1)& (0+255),b
  8704  00200A  0EB4               	movlw	180
  8705  00200C  6FAC               	movwf	i2___awdiv@divisor& (0+255),b
  8706  00200E  ECE9  F013         	call	i2___awdiv	;wreg free
  8707  002012  90D8               	bcf	status,0,c
  8708  002014  0100               	movlb	0	; () banked
  8709  002016  37AA               	rlcf	?i2___awdiv& (0+255),f,b
  8710  002018  0100               	movlb	0	; () banked
  8711  00201A  37AB               	rlcf	(?i2___awdiv+1)& (0+255),f,b
  8712  00201C  0100               	movlb	0	; () banked
  8713  00201E  51B2               	movf	??_ISR_Alta& (0+255),w,b
  8714  002020  0100               	movlb	0	; () banked
  8715  002022  27AA               	addwf	?i2___awdiv& (0+255),f,b
  8716  002024  0100               	movlb	0	; () banked
  8717  002026  51B3               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8718  002028  0100               	movlb	0	; () banked
  8719  00202A  23AB               	addwfc	(?i2___awdiv+1)& (0+255),f,b
  8720  00202C  0100               	movlb	0	; () banked
  8721  00202E  C0AA  F029         	movff	?i2___awdiv,_timer_on	;volatile
  8722  002032  0100               	movlb	0	; () banked
  8723  002034  C0AB  F02A         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8724  002038  0E00               	movlw	0
  8725  00203A  BE2A               	btfsc	_timer_on+1,7,c	;volatile
  8726  00203C  0EFF               	movlw	-1
  8727  00203E  6E2B               	movwf	_timer_on+2,c	;volatile
  8728  002040  6E2C               	movwf	_timer_on+3,c	;volatile
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;ABS_Code.c: 154: timer_off = 65536 - (40000 - timer_on);
  8732  002042  C029  F0B2         	movff	_timer_on,??_ISR_Alta	;volatile
  8733  002046  C02A  F0B3         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8734  00204A  C02B  F0B4         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8735  00204E  C02C  F0B5         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8736  002052  0100               	movlb	0	; () banked
  8737  002054  1FB2               	comf	??_ISR_Alta& (0+255),f,b
  8738  002056  1FB3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8739  002058  1FB4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8740  00205A  1FB5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8741  00205C  2BB2               	incf	??_ISR_Alta& (0+255),f,b
  8742  00205E  0E00               	movlw	0
  8743  002060  23B3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8744  002062  23B4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8745  002064  23B5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8746  002066  0E40               	movlw	64
  8747  002068  0100               	movlb	0	; () banked
  8748  00206A  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8749  00206C  0100               	movlb	0	; () banked
  8750  00206E  6FB6               	movwf	(??_ISR_Alta+4)& (0+255),b
  8751  002070  0E9C               	movlw	156
  8752  002072  0100               	movlb	0	; () banked
  8753  002074  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8754  002076  0100               	movlb	0	; () banked
  8755  002078  6FB7               	movwf	(??_ISR_Alta+5)& (0+255),b
  8756  00207A  0E00               	movlw	0
  8757  00207C  0100               	movlb	0	; () banked
  8758  00207E  21B4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8759  002080  0100               	movlb	0	; () banked
  8760  002082  6FB8               	movwf	(??_ISR_Alta+6)& (0+255),b
  8761  002084  0E00               	movlw	0
  8762  002086  0100               	movlb	0	; () banked
  8763  002088  21B5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8764  00208A  0100               	movlb	0	; () banked
  8765  00208C  6FB9               	movwf	(??_ISR_Alta+7)& (0+255),b
  8766  00208E  0100               	movlb	0	; () banked
  8767  002090  1FB6               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8768  002092  1FB7               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8769  002094  1FB8               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8770  002096  1FB9               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8771  002098  2BB6               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8772  00209A  0E00               	movlw	0
  8773  00209C  23B7               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8774  00209E  23B8               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8775  0020A0  23B9               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8776  0020A2  0E00               	movlw	0
  8777  0020A4  0100               	movlb	0	; () banked
  8778  0020A6  25B6               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8779  0020A8  6E25               	movwf	_timer_off,c	;volatile
  8780  0020AA  0E00               	movlw	0
  8781  0020AC  0100               	movlb	0	; () banked
  8782  0020AE  21B7               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8783  0020B0  6E26               	movwf	_timer_off+1,c	;volatile
  8784  0020B2  0E01               	movlw	1
  8785  0020B4  0100               	movlb	0	; () banked
  8786  0020B6  21B8               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8787  0020B8  6E27               	movwf	_timer_off+2,c	;volatile
  8788  0020BA  0E00               	movlw	0
  8789  0020BC  0100               	movlb	0	; () banked
  8790  0020BE  21B9               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8791  0020C0  6E28               	movwf	_timer_off+3,c	;volatile
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;ABS_Code.c: 155: timer_on = 65536 - timer_on;
  8795  0020C2  C029  F0B2         	movff	_timer_on,??_ISR_Alta	;volatile
  8796  0020C6  C02A  F0B3         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8797  0020CA  C02B  F0B4         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8798  0020CE  C02C  F0B5         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8799  0020D2  0100               	movlb	0	; () banked
  8800  0020D4  1FB2               	comf	??_ISR_Alta& (0+255),f,b
  8801  0020D6  1FB3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8802  0020D8  1FB4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8803  0020DA  1FB5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8804  0020DC  2BB2               	incf	??_ISR_Alta& (0+255),f,b
  8805  0020DE  0E00               	movlw	0
  8806  0020E0  23B3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8807  0020E2  23B4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8808  0020E4  23B5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8809  0020E6  0E00               	movlw	0
  8810  0020E8  0100               	movlb	0	; () banked
  8811  0020EA  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8812  0020EC  6E29               	movwf	_timer_on,c	;volatile
  8813  0020EE  0E00               	movlw	0
  8814  0020F0  0100               	movlb	0	; () banked
  8815  0020F2  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8816  0020F4  6E2A               	movwf	_timer_on+1,c	;volatile
  8817  0020F6  0E01               	movlw	1
  8818  0020F8  0100               	movlb	0	; () banked
  8819  0020FA  21B4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8820  0020FC  6E2B               	movwf	_timer_on+2,c	;volatile
  8821  0020FE  0E00               	movlw	0
  8822  002100  0100               	movlb	0	; () banked
  8823  002102  21B5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8824  002104  6E2C               	movwf	_timer_on+3,c	;volatile
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;ABS_Code.c: 156: WriteTimer0(timer_on);
  8828  002106  C029  F01E         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8829  00210A  C02A  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8830  00210E  EC96  F015         	call	_WriteTimer0	;wreg free
  8831                           
  8832                           ;ABS_Code.c: 157: } else {
  8833  002112  D007               	goto	i2l4480
  8834  002114                     i2l4478:
  8835                           
  8836                           ;ABS_Code.c: 158: WriteTimer0(timer_off);
  8837  002114  C025  F01E         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8838  002118  C026  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8839  00211C  EC96  F015         	call	_WriteTimer0	;wreg free
  8840  002120  D000               	goto	i2l4480
  8841  002122                     i2l4480:
  8842                           
  8843                           ;ABS_Code.c: 159: }
  8844                           ;ABS_Code.c: 160: INTCONbits.TMR0IF = 0;
  8845  002122  94F2               	bcf	intcon,2,c	;volatile
  8846  002124  D000               	goto	i2l4482
  8847  002126                     i2l4482:
  8848                           
  8849                           ;ABS_Code.c: 161: }
  8850                           ;ABS_Code.c: 164: if (INTCONbits.INT0IF == 1) {
  8851  002126  A2F2               	btfss	intcon,1,c	;volatile
  8852  002128  D039               	goto	i2l4510
  8853                           
  8854                           ;ABS_Code.c: 165: if (x == 0) {
  8855  00212A  B242               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8856  00212C  D006               	goto	i2l4490
  8857                           
  8858                           ;ABS_Code.c: 166: TMR1H = 0x00;
  8859  00212E  0E00               	movlw	0
  8860  002130  6ECF               	movwf	4047,c	;volatile
  8861                           
  8862                           ;ABS_Code.c: 167: TMR1L = 0x00;
  8863  002132  0E00               	movlw	0
  8864  002134  6ECE               	movwf	4046,c	;volatile
  8865                           
  8866                           ;ABS_Code.c: 168: x = 1;
  8867  002136  8242               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8868                           
  8869                           ;ABS_Code.c: 169: } else {
  8870  002138  D02F               	goto	i2l4508
  8871  00213A                     i2l4490:
  8872                           
  8873                           ;ABS_Code.c: 170: gap_time_1 = (TMR1H << 8) + TMR1L;
  8874  00213A  50CF               	movf	4047,w,c	;volatile
  8875  00213C  0100               	movlb	0	; () banked
  8876  00213E  6FB3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8877  002140  6BB2               	clrf	??_ISR_Alta& (0+255),b
  8878  002142  50CE               	movf	4046,w,c	;volatile
  8879  002144  0100               	movlb	0	; () banked
  8880  002146  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8881  002148  6E2D               	movwf	_gap_time_1,c	;volatile
  8882  00214A  0E00               	movlw	0
  8883  00214C  0100               	movlb	0	; () banked
  8884  00214E  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8885  002150  6E2E               	movwf	_gap_time_1+1,c	;volatile
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;ABS_Code.c: 171: gap_time_1 = gap_time_1 / 500;
  8889  002152  C02D  F01E         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8890  002156  C02E  F01F         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8891  00215A  0E01               	movlw	1
  8892  00215C  6E21               	movwf	___lwdiv@divisor+1,c
  8893  00215E  0EF4               	movlw	244
  8894  002160  6E20               	movwf	___lwdiv@divisor,c
  8895  002162  ECEA  F014         	call	___lwdiv	;wreg free
  8896  002166  C01E  F02D         	movff	?___lwdiv,_gap_time_1	;volatile
  8897  00216A  C01F  F02E         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8898                           
  8899                           ;ABS_Code.c: 172: ENC1_measure = 1;
  8900  00216E  8041               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8901                           
  8902                           ;ABS_Code.c: 173: TMR1H = 0x00;
  8903  002170  0E00               	movlw	0
  8904  002172  6ECF               	movwf	4047,c	;volatile
  8905                           
  8906                           ;ABS_Code.c: 174: TMR1L = 0x00;
  8907  002174  0E00               	movlw	0
  8908  002176  6ECE               	movwf	4046,c	;volatile
  8909                           
  8910                           ;ABS_Code.c: 175: if (count_flag == 1) {
  8911  002178  AA41               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8912  00217A  D008               	goto	i2l4504
  8913                           
  8914                           ;ABS_Code.c: 176: int_counter_1++;
  8915  00217C  0E01               	movlw	1
  8916  00217E  0100               	movlb	0	; () banked
  8917  002180  276C               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8918  002182  0E00               	movlw	0
  8919  002184  236D               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8920  002186  236E               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8921  002188  236F               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8922  00218A  D000               	goto	i2l4504
  8923  00218C                     i2l4504:
  8924                           
  8925                           ;ABS_Code.c: 177: }
  8926                           ;ABS_Code.c: 178: if (distance_set_flag == 1) {
  8927  00218C  AE41               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  8928  00218E  D004               	goto	i2l4508
  8929                           
  8930                           ;ABS_Code.c: 179: distance_set_counter_1++;
  8931  002190  0100               	movlb	0	; () banked
  8932  002192  4B86               	infsnz	_distance_set_counter_1& (0+255),f,b	;volatile
  8933  002194  2B87               	incf	(_distance_set_counter_1+1)& (0+255),f,b	;volatile
  8934                           
  8935                           ; BSR set to: 0
  8936  002196  D000               	goto	i2l4508
  8937  002198                     i2l4508:
  8938                           
  8939                           ;ABS_Code.c: 180: }
  8940                           ;ABS_Code.c: 181: }
  8941                           ;ABS_Code.c: 182: INTCONbits.INT0IF = 0;
  8942  002198  92F2               	bcf	intcon,1,c	;volatile
  8943  00219A  D000               	goto	i2l4510
  8944  00219C                     i2l4510:
  8945                           
  8946                           ;ABS_Code.c: 183: }
  8947                           ;ABS_Code.c: 186: if (INTCON3bits.INT1IF == 1) {
  8948  00219C  A0F0               	btfss	intcon3,0,c	;volatile
  8949  00219E  D039               	goto	i2l693
  8950                           
  8951                           ;ABS_Code.c: 187: if (y == 0) {
  8952  0021A0  B442               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  8953  0021A2  D006               	goto	i2l4518
  8954                           
  8955                           ;ABS_Code.c: 188: TMR3H = 0x00;
  8956  0021A4  0E00               	movlw	0
  8957  0021A6  6EB3               	movwf	4019,c	;volatile
  8958                           
  8959                           ;ABS_Code.c: 189: TMR3L = 0x00;
  8960  0021A8  0E00               	movlw	0
  8961  0021AA  6EB2               	movwf	4018,c	;volatile
  8962                           
  8963                           ;ABS_Code.c: 190: y = 1;
  8964  0021AC  8442               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  8965                           
  8966                           ;ABS_Code.c: 191: } else {
  8967  0021AE  D02F               	goto	i2l4536
  8968  0021B0                     i2l4518:
  8969                           
  8970                           ;ABS_Code.c: 192: gap_time_2 = (TMR3H << 8) + TMR3L;
  8971  0021B0  50B3               	movf	4019,w,c	;volatile
  8972  0021B2  0100               	movlb	0	; () banked
  8973  0021B4  6FB3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8974  0021B6  6BB2               	clrf	??_ISR_Alta& (0+255),b
  8975  0021B8  50B2               	movf	4018,w,c	;volatile
  8976  0021BA  0100               	movlb	0	; () banked
  8977  0021BC  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8978  0021BE  6E2F               	movwf	_gap_time_2,c	;volatile
  8979  0021C0  0E00               	movlw	0
  8980  0021C2  0100               	movlb	0	; () banked
  8981  0021C4  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8982  0021C6  6E30               	movwf	_gap_time_2+1,c	;volatile
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;ABS_Code.c: 193: gap_time_2 = gap_time_2 / 500;
  8986  0021C8  C02F  F01E         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  8987  0021CC  C030  F01F         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  8988  0021D0  0E01               	movlw	1
  8989  0021D2  6E21               	movwf	___lwdiv@divisor+1,c
  8990  0021D4  0EF4               	movlw	244
  8991  0021D6  6E20               	movwf	___lwdiv@divisor,c
  8992  0021D8  ECEA  F014         	call	___lwdiv	;wreg free
  8993  0021DC  C01E  F02F         	movff	?___lwdiv,_gap_time_2	;volatile
  8994  0021E0  C01F  F030         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  8995                           
  8996                           ;ABS_Code.c: 194: ENC2_measure = 1;
  8997  0021E4  8241               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  8998                           
  8999                           ;ABS_Code.c: 195: TMR3H = 0x00;
  9000  0021E6  0E00               	movlw	0
  9001  0021E8  6EB3               	movwf	4019,c	;volatile
  9002                           
  9003                           ;ABS_Code.c: 196: TMR3L = 0x00;
  9004  0021EA  0E00               	movlw	0
  9005  0021EC  6EB2               	movwf	4018,c	;volatile
  9006                           
  9007                           ;ABS_Code.c: 197: if (count_flag == 1) {
  9008  0021EE  AA41               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9009  0021F0  D008               	goto	i2l4532
  9010                           
  9011                           ;ABS_Code.c: 198: int_counter_2++;
  9012  0021F2  0E01               	movlw	1
  9013  0021F4  0100               	movlb	0	; () banked
  9014  0021F6  2770               	addwf	_int_counter_2& (0+255),f,b	;volatile
  9015  0021F8  0E00               	movlw	0
  9016  0021FA  2371               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  9017  0021FC  2372               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  9018  0021FE  2373               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9019  002200  D000               	goto	i2l4532
  9020  002202                     i2l4532:
  9021                           
  9022                           ;ABS_Code.c: 199: }
  9023                           ;ABS_Code.c: 200: if (distance_set_flag == 1) {
  9024  002202  AE41               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  9025  002204  D004               	goto	i2l4536
  9026                           
  9027                           ;ABS_Code.c: 201: distance_set_counter_2++;
  9028  002206  0100               	movlb	0	; () banked
  9029  002208  4B88               	infsnz	_distance_set_counter_2& (0+255),f,b	;volatile
  9030  00220A  2B89               	incf	(_distance_set_counter_2+1)& (0+255),f,b	;volatile
  9031                           
  9032                           ; BSR set to: 0
  9033  00220C  D000               	goto	i2l4536
  9034  00220E                     i2l4536:
  9035                           
  9036                           ;ABS_Code.c: 202: }
  9037                           ;ABS_Code.c: 203: }
  9038                           ;ABS_Code.c: 204: INTCON3bits.INT1IF = 0;
  9039  00220E  90F0               	bcf	intcon3,0,c	;volatile
  9040  002210  D000               	goto	i2l693
  9041  002212                     i2l693:
  9042  002212  C0C7  FFF5         	movff	??_ISR_Alta+21,tablat
  9043  002216  C0C6  FFF8         	movff	??_ISR_Alta+20,tblptru
  9044  00221A  C0C5  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9045  00221E  C0C4  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9046  002222  C0C3  FFF4         	movff	??_ISR_Alta+17,prodh
  9047  002226  C0C2  FFF3         	movff	??_ISR_Alta+16,prodl
  9048  00222A  C0C1  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9049  00222E  C0C0  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9050  002232  C0BF  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9051  002236  C0BE  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9052  00223A  C0BD  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9053  00223E  C0BC  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9054  002242  C0BB  FFFB         	movff	??_ISR_Alta+9,pclatu
  9055  002246  C0BA  FFFA         	movff	??_ISR_Alta+8,pclath
  9056  00224A  0011               	retfie		f
  9057  00224C                     __end_of_ISR_Alta:
  9058                           	opt stack 0
  9059                           pclatu	equ	0xFFB
  9060                           pclath	equ	0xFFA
  9061                           tblptru	equ	0xFF8
  9062                           tblptrh	equ	0xFF7
  9063                           tblptrl	equ	0xFF6
  9064                           tablat	equ	0xFF5
  9065                           prodh	equ	0xFF4
  9066                           prodl	equ	0xFF3
  9067                           intcon	equ	0xFF2
  9068                           intcon2	equ	0xFF1
  9069                           intcon3	equ	0xFF0
  9070                           postinc0	equ	0xFEE
  9071                           fsr0h	equ	0xFEA
  9072                           fsr0l	equ	0xFE9
  9073                           wreg	equ	0xFE8
  9074                           postdec1	equ	0xFE5
  9075                           fsr1h	equ	0xFE2
  9076                           fsr1l	equ	0xFE1
  9077                           bsr	equ	0xFE0
  9078                           indf2	equ	0xFDF
  9079                           postinc2	equ	0xFDE
  9080                           postdec2	equ	0xFDD
  9081                           fsr2h	equ	0xFDA
  9082                           fsr2l	equ	0xFD9
  9083                           status	equ	0xFD8
  9084                           
  9085 ;; *************** function i2___wmul *****************
  9086 ;; Defined at:
  9087 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  multiplier      2   29[COMRAM] unsigned int 
  9090 ;;  multiplicand    2   31[COMRAM] unsigned int 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  __wmul          2   33[COMRAM] unsigned int 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  2   29[COMRAM] unsigned int 
  9095 ;; Registers used:
  9096 ;;		wreg, status,2, status,0, prodl, prodh
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9102 ;;      Params:         4       0       0       0
  9103 ;;      Locals:         2       0       0       0
  9104 ;;      Temps:          0       0       0       0
  9105 ;;      Totals:         6       0       0       0
  9106 ;;Total ram usage:        6 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; This function calls:
  9109 ;;		Nothing
  9110 ;; This function is called by:
  9111 ;;		_ISR_Alta
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text19
  9116  002AAE                     __ptext19:
  9117                           	opt stack 0
  9118  002AAE                     i2___wmul:
  9119                           	opt stack 24
  9120                           
  9121                           ;incstack = 0
  9122  002AAE  501E               	movf	i2___wmul@multiplier,w,c
  9123  002AB0  0220               	mulwf	i2___wmul@multiplicand,c
  9124  002AB2  CFF3 F022          	movff	prodl,i2___wmul@product
  9125  002AB6  CFF4 F023          	movff	prodh,i2___wmul@product+1
  9126  002ABA  501E               	movf	i2___wmul@multiplier,w,c
  9127  002ABC  0221               	mulwf	i2___wmul@multiplicand+1,c
  9128  002ABE  50F3               	movf	prodl,w,c
  9129  002AC0  2623               	addwf	i2___wmul@product+1,f,c
  9130  002AC2  501F               	movf	i2___wmul@multiplier+1,w,c
  9131  002AC4  0220               	mulwf	i2___wmul@multiplicand,c
  9132  002AC6  50F3               	movf	prodl,w,c
  9133  002AC8  2623               	addwf	i2___wmul@product+1,f,c
  9134  002ACA  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  9135  002ACE  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  9136  002AD2  D000               	goto	i2l771
  9137  002AD4                     i2l771:
  9138  002AD4  0012               	return		;funcret
  9139  002AD6                     __end_ofi2___wmul:
  9140                           	opt stack 0
  9141                           pclatu	equ	0xFFB
  9142                           pclath	equ	0xFFA
  9143                           tblptru	equ	0xFF8
  9144                           tblptrh	equ	0xFF7
  9145                           tblptrl	equ	0xFF6
  9146                           tablat	equ	0xFF5
  9147                           prodh	equ	0xFF4
  9148                           prodl	equ	0xFF3
  9149                           intcon	equ	0xFF2
  9150                           intcon2	equ	0xFF1
  9151                           intcon3	equ	0xFF0
  9152                           postinc0	equ	0xFEE
  9153                           fsr0h	equ	0xFEA
  9154                           fsr0l	equ	0xFE9
  9155                           wreg	equ	0xFE8
  9156                           postdec1	equ	0xFE5
  9157                           fsr1h	equ	0xFE2
  9158                           fsr1l	equ	0xFE1
  9159                           bsr	equ	0xFE0
  9160                           indf2	equ	0xFDF
  9161                           postinc2	equ	0xFDE
  9162                           postdec2	equ	0xFDD
  9163                           fsr2h	equ	0xFDA
  9164                           fsr2l	equ	0xFD9
  9165                           status	equ	0xFD8
  9166                           
  9167 ;; *************** function i2___awdiv *****************
  9168 ;; Defined at:
  9169 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  dividend        2    0[BANK0 ] int 
  9172 ;;  divisor         2    2[BANK0 ] int 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;  __awdiv         2    6[BANK0 ] int 
  9175 ;;  __awdiv         1    5[BANK0 ] unsigned char 
  9176 ;;  __awdiv         1    4[BANK0 ] unsigned char 
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  2    0[BANK0 ] int 
  9179 ;; Registers used:
  9180 ;;		wreg, status,2, status,0
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9186 ;;      Params:         0       4       0       0
  9187 ;;      Locals:         0       4       0       0
  9188 ;;      Temps:          0       0       0       0
  9189 ;;      Totals:         0       8       0       0
  9190 ;;Total ram usage:        8 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_ISR_Alta
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           	psect	text20
  9200  0027D2                     __ptext20:
  9201                           	opt stack 0
  9202  0027D2                     i2___awdiv:
  9203                           	opt stack 24
  9204                           
  9205                           ;incstack = 0
  9206  0027D2  0E00               	movlw	0
  9207  0027D4  0100               	movlb	0	; () banked
  9208  0027D6  6FAF               	movwf	i2___awdiv@sign& (0+255),b
  9209                           
  9210                           ; BSR set to: 0
  9211  0027D8  0100               	movlb	0	; () banked
  9212  0027DA  AFAD               	btfss	(i2___awdiv@divisor+1)& (0+255),7,b
  9213  0027DC  D009               	goto	i2l4430
  9214                           
  9215                           ; BSR set to: 0
  9216  0027DE  0100               	movlb	0	; () banked
  9217  0027E0  6DAC               	negf	i2___awdiv@divisor& (0+255),b
  9218  0027E2  1FAD               	comf	(i2___awdiv@divisor+1)& (0+255),f,b
  9219  0027E4  B0D8               	btfsc	status,0,c
  9220  0027E6  2BAD               	incf	(i2___awdiv@divisor+1)& (0+255),f,b
  9221                           
  9222                           ; BSR set to: 0
  9223  0027E8  0E01               	movlw	1
  9224  0027EA  0100               	movlb	0	; () banked
  9225  0027EC  6FAF               	movwf	i2___awdiv@sign& (0+255),b
  9226  0027EE  D000               	goto	i2l4430
  9227  0027F0                     i2l4430:
  9228                           
  9229                           ; BSR set to: 0
  9230  0027F0  0100               	movlb	0	; () banked
  9231  0027F2  AFAB               	btfss	(i2___awdiv@dividend+1)& (0+255),7,b
  9232  0027F4  D009               	goto	i2l4436
  9233                           
  9234                           ; BSR set to: 0
  9235  0027F6  0100               	movlb	0	; () banked
  9236  0027F8  6DAA               	negf	i2___awdiv@dividend& (0+255),b
  9237  0027FA  1FAB               	comf	(i2___awdiv@dividend+1)& (0+255),f,b
  9238  0027FC  B0D8               	btfsc	status,0,c
  9239  0027FE  2BAB               	incf	(i2___awdiv@dividend+1)& (0+255),f,b
  9240                           
  9241                           ; BSR set to: 0
  9242  002800  0E01               	movlw	1
  9243  002802  0100               	movlb	0	; () banked
  9244  002804  1BAF               	xorwf	i2___awdiv@sign& (0+255),f,b
  9245  002806  D000               	goto	i2l4436
  9246  002808                     i2l4436:
  9247                           
  9248                           ; BSR set to: 0
  9249  002808  0E00               	movlw	0
  9250  00280A  0100               	movlb	0	; () banked
  9251  00280C  6FB1               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9252  00280E  0E00               	movlw	0
  9253  002810  6FB0               	movwf	i2___awdiv@quotient& (0+255),b
  9254                           
  9255                           ; BSR set to: 0
  9256  002812  0100               	movlb	0	; () banked
  9257  002814  51AC               	movf	i2___awdiv@divisor& (0+255),w,b
  9258  002816  0100               	movlb	0	; () banked
  9259  002818  11AD               	iorwf	(i2___awdiv@divisor+1)& (0+255),w,b
  9260  00281A  B4D8               	btfsc	status,2,c
  9261  00281C  D031               	goto	i2l4458
  9262                           
  9263                           ; BSR set to: 0
  9264  00281E  0E01               	movlw	1
  9265  002820  0100               	movlb	0	; () banked
  9266  002822  6FAE               	movwf	i2___awdiv@counter& (0+255),b
  9267  002824  D007               	goto	i2l4444
  9268  002826                     i2l4442:
  9269                           
  9270                           ; BSR set to: 0
  9271  002826  0100               	movlb	0	; () banked
  9272  002828  90D8               	bcf	status,0,c
  9273  00282A  37AC               	rlcf	i2___awdiv@divisor& (0+255),f,b
  9274  00282C  37AD               	rlcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9275  00282E  0100               	movlb	0	; () banked
  9276  002830  2BAE               	incf	i2___awdiv@counter& (0+255),f,b
  9277  002832  D000               	goto	i2l4444
  9278  002834                     i2l4444:
  9279                           
  9280                           ; BSR set to: 0
  9281  002834  0100               	movlb	0	; () banked
  9282  002836  BFAD               	btfsc	(i2___awdiv@divisor+1)& (0+255),7,b
  9283  002838  D002               	goto	i2l4446
  9284  00283A  D7F5               	goto	i2l4442
  9285                           
  9286                           ; BSR set to: 0
  9287  00283C  D000               	goto	i2l4446
  9288  00283E                     i2l4446:
  9289                           
  9290                           ; BSR set to: 0
  9291  00283E  0100               	movlb	0	; () banked
  9292  002840  90D8               	bcf	status,0,c
  9293  002842  37B0               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9294  002844  37B1               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9295                           
  9296                           ; BSR set to: 0
  9297  002846  0100               	movlb	0	; () banked
  9298  002848  51AC               	movf	i2___awdiv@divisor& (0+255),w,b
  9299  00284A  0100               	movlb	0	; () banked
  9300  00284C  5DAA               	subwf	i2___awdiv@dividend& (0+255),w,b
  9301  00284E  0100               	movlb	0	; () banked
  9302  002850  51AD               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9303  002852  0100               	movlb	0	; () banked
  9304  002854  59AB               	subwfb	(i2___awdiv@dividend+1)& (0+255),w,b
  9305  002856  A0D8               	btfss	status,0,c
  9306  002858  D00B               	goto	i2l4454
  9307                           
  9308                           ; BSR set to: 0
  9309  00285A  0100               	movlb	0	; () banked
  9310  00285C  51AC               	movf	i2___awdiv@divisor& (0+255),w,b
  9311  00285E  0100               	movlb	0	; () banked
  9312  002860  5FAA               	subwf	i2___awdiv@dividend& (0+255),f,b
  9313  002862  0100               	movlb	0	; () banked
  9314  002864  51AD               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9315  002866  0100               	movlb	0	; () banked
  9316  002868  5BAB               	subwfb	(i2___awdiv@dividend+1)& (0+255),f,b
  9317                           
  9318                           ; BSR set to: 0
  9319  00286A  0100               	movlb	0	; () banked
  9320  00286C  81B0               	bsf	i2___awdiv@quotient& (0+255),0,b
  9321  00286E  D000               	goto	i2l4454
  9322  002870                     i2l4454:
  9323                           
  9324                           ; BSR set to: 0
  9325  002870  0100               	movlb	0	; () banked
  9326  002872  90D8               	bcf	status,0,c
  9327  002874  33AD               	rrcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9328  002876  33AC               	rrcf	i2___awdiv@divisor& (0+255),f,b
  9329                           
  9330                           ; BSR set to: 0
  9331  002878  0100               	movlb	0	; () banked
  9332  00287A  2FAE               	decfsz	i2___awdiv@counter& (0+255),f,b
  9333  00287C  D7E0               	goto	i2l4446
  9334                           
  9335                           ; BSR set to: 0
  9336  00287E  D000               	goto	i2l4458
  9337  002880                     i2l4458:
  9338                           
  9339                           ; BSR set to: 0
  9340  002880  0100               	movlb	0	; () banked
  9341  002882  51AF               	movf	i2___awdiv@sign& (0+255),w,b
  9342  002884  0100               	movlb	0	; () banked
  9343  002886  B4D8               	btfsc	status,2,c
  9344  002888  D006               	goto	i2l4462
  9345                           
  9346                           ; BSR set to: 0
  9347  00288A  0100               	movlb	0	; () banked
  9348  00288C  6DB0               	negf	i2___awdiv@quotient& (0+255),b
  9349  00288E  1FB1               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9350  002890  B0D8               	btfsc	status,0,c
  9351  002892  2BB1               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9352  002894  D000               	goto	i2l4462
  9353  002896                     i2l4462:
  9354                           
  9355                           ; BSR set to: 0
  9356  002896  C0B0  F0AA         	movff	i2___awdiv@quotient,?i2___awdiv
  9357  00289A  C0B1  F0AB         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9358  00289E  D000               	goto	i2l964
  9359  0028A0                     i2l964:
  9360                           
  9361                           ; BSR set to: 0
  9362  0028A0  0012               	return		;funcret
  9363  0028A2                     __end_ofi2___awdiv:
  9364                           	opt stack 0
  9365                           pclatu	equ	0xFFB
  9366                           pclath	equ	0xFFA
  9367                           tblptru	equ	0xFF8
  9368                           tblptrh	equ	0xFF7
  9369                           tblptrl	equ	0xFF6
  9370                           tablat	equ	0xFF5
  9371                           prodh	equ	0xFF4
  9372                           prodl	equ	0xFF3
  9373                           intcon	equ	0xFF2
  9374                           intcon2	equ	0xFF1
  9375                           intcon3	equ	0xFF0
  9376                           postinc0	equ	0xFEE
  9377                           fsr0h	equ	0xFEA
  9378                           fsr0l	equ	0xFE9
  9379                           wreg	equ	0xFE8
  9380                           postdec1	equ	0xFE5
  9381                           fsr1h	equ	0xFE2
  9382                           fsr1l	equ	0xFE1
  9383                           bsr	equ	0xFE0
  9384                           indf2	equ	0xFDF
  9385                           postinc2	equ	0xFDE
  9386                           postdec2	equ	0xFDD
  9387                           fsr2h	equ	0xFDA
  9388                           fsr2l	equ	0xFD9
  9389                           status	equ	0xFD8
  9390                           
  9391 ;; *************** function ___lwdiv *****************
  9392 ;; Defined at:
  9393 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;  dividend        2   29[COMRAM] unsigned int 
  9396 ;;  divisor         2   31[COMRAM] unsigned int 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  quotient        2   33[COMRAM] unsigned int 
  9399 ;;  counter         1   35[COMRAM] unsigned char 
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  2   29[COMRAM] unsigned int 
  9402 ;; Registers used:
  9403 ;;		wreg, status,2, status,0
  9404 ;; Tracked objects:
  9405 ;;		On entry : 0/0
  9406 ;;		On exit  : 0/0
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9409 ;;      Params:         4       0       0       0
  9410 ;;      Locals:         3       0       0       0
  9411 ;;      Temps:          0       0       0       0
  9412 ;;      Totals:         7       0       0       0
  9413 ;;Total ram usage:        7 bytes
  9414 ;; Hardware stack levels used:    1
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_ISR_Alta
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text21
  9423  0029D4                     __ptext21:
  9424                           	opt stack 0
  9425  0029D4                     ___lwdiv:
  9426                           	opt stack 24
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;incstack = 0
  9430  0029D4  0E00               	movlw	0
  9431  0029D6  6E23               	movwf	___lwdiv@quotient+1,c
  9432  0029D8  0E00               	movlw	0
  9433  0029DA  6E22               	movwf	___lwdiv@quotient,c
  9434  0029DC  5020               	movf	___lwdiv@divisor,w,c
  9435  0029DE  1021               	iorwf	___lwdiv@divisor+1,w,c
  9436  0029E0  B4D8               	btfsc	status,2,c
  9437  0029E2  D021               	goto	i2l1289
  9438  0029E4  0E01               	movlw	1
  9439  0029E6  6E24               	movwf	___lwdiv@counter,c
  9440  0029E8  D005               	goto	i2l3934
  9441  0029EA                     i2l3932:
  9442  0029EA  90D8               	bcf	status,0,c
  9443  0029EC  3620               	rlcf	___lwdiv@divisor,f,c
  9444  0029EE  3621               	rlcf	___lwdiv@divisor+1,f,c
  9445  0029F0  2A24               	incf	___lwdiv@counter,f,c
  9446  0029F2  D000               	goto	i2l3934
  9447  0029F4                     i2l3934:
  9448  0029F4  BE21               	btfsc	___lwdiv@divisor+1,7,c
  9449  0029F6  D002               	goto	i2l3936
  9450  0029F8  D7F8               	goto	i2l3932
  9451  0029FA  D000               	goto	i2l3936
  9452  0029FC                     i2l3936:
  9453  0029FC  90D8               	bcf	status,0,c
  9454  0029FE  3622               	rlcf	___lwdiv@quotient,f,c
  9455  002A00  3623               	rlcf	___lwdiv@quotient+1,f,c
  9456  002A02  5020               	movf	___lwdiv@divisor,w,c
  9457  002A04  5C1E               	subwf	___lwdiv@dividend,w,c
  9458  002A06  5021               	movf	___lwdiv@divisor+1,w,c
  9459  002A08  581F               	subwfb	___lwdiv@dividend+1,w,c
  9460  002A0A  A0D8               	btfss	status,0,c
  9461  002A0C  D006               	goto	i2l3944
  9462  002A0E  5020               	movf	___lwdiv@divisor,w,c
  9463  002A10  5E1E               	subwf	___lwdiv@dividend,f,c
  9464  002A12  5021               	movf	___lwdiv@divisor+1,w,c
  9465  002A14  5A1F               	subwfb	___lwdiv@dividend+1,f,c
  9466  002A16  8022               	bsf	___lwdiv@quotient,0,c
  9467  002A18  D000               	goto	i2l3944
  9468  002A1A                     i2l3944:
  9469  002A1A  90D8               	bcf	status,0,c
  9470  002A1C  3221               	rrcf	___lwdiv@divisor+1,f,c
  9471  002A1E  3220               	rrcf	___lwdiv@divisor,f,c
  9472  002A20  2E24               	decfsz	___lwdiv@counter,f,c
  9473  002A22  D7EC               	goto	i2l3936
  9474  002A24  D000               	goto	i2l1289
  9475  002A26                     i2l1289:
  9476  002A26  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  9477  002A2A  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9478  002A2E  0012               	return		;funcret
  9479  002A30                     __end_of___lwdiv:
  9480                           	opt stack 0
  9481                           pclatu	equ	0xFFB
  9482                           pclath	equ	0xFFA
  9483                           tblptru	equ	0xFF8
  9484                           tblptrh	equ	0xFF7
  9485                           tblptrl	equ	0xFF6
  9486                           tablat	equ	0xFF5
  9487                           prodh	equ	0xFF4
  9488                           prodl	equ	0xFF3
  9489                           intcon	equ	0xFF2
  9490                           intcon2	equ	0xFF1
  9491                           intcon3	equ	0xFF0
  9492                           postinc0	equ	0xFEE
  9493                           fsr0h	equ	0xFEA
  9494                           fsr0l	equ	0xFE9
  9495                           wreg	equ	0xFE8
  9496                           postdec1	equ	0xFE5
  9497                           fsr1h	equ	0xFE2
  9498                           fsr1l	equ	0xFE1
  9499                           bsr	equ	0xFE0
  9500                           indf2	equ	0xFDF
  9501                           postinc2	equ	0xFDE
  9502                           postdec2	equ	0xFDD
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8
  9506                           
  9507 ;; *************** function _WriteTimer0 *****************
  9508 ;; Defined at:
  9509 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  timer0          2   29[COMRAM] unsigned int 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;  timer           2   31[COMRAM] struct Timers
  9514 ;; Return value:  Size  Location     Type
  9515 ;;		None               void
  9516 ;; Registers used:
  9517 ;;		None
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9523 ;;      Params:         2       0       0       0
  9524 ;;      Locals:         2       0       0       0
  9525 ;;      Temps:          0       0       0       0
  9526 ;;      Totals:         4       0       0       0
  9527 ;;Total ram usage:        4 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_ISR_Alta
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text22
  9537  002B2C                     __ptext22:
  9538                           	opt stack 0
  9539  002B2C                     _WriteTimer0:
  9540                           	opt stack 24
  9541                           
  9542                           ;incstack = 0
  9543  002B2C  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9544  002B30  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9545  002B34  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9546  002B38  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9547  002B3C  0012               	return		;funcret
  9548  002B3E                     __end_of_WriteTimer0:
  9549                           	opt stack 0
  9550  0000                     pclatu	equ	0xFFB
  9551                           pclath	equ	0xFFA
  9552                           tblptru	equ	0xFF8
  9553                           tblptrh	equ	0xFF7
  9554                           tblptrl	equ	0xFF6
  9555                           tablat	equ	0xFF5
  9556                           prodh	equ	0xFF4
  9557                           prodl	equ	0xFF3
  9558                           intcon	equ	0xFF2
  9559                           intcon2	equ	0xFF1
  9560                           intcon3	equ	0xFF0
  9561                           postinc0	equ	0xFEE
  9562                           fsr0h	equ	0xFEA
  9563                           fsr0l	equ	0xFE9
  9564                           wreg	equ	0xFE8
  9565                           postdec1	equ	0xFE5
  9566                           fsr1h	equ	0xFE2
  9567                           fsr1l	equ	0xFE1
  9568                           bsr	equ	0xFE0
  9569                           indf2	equ	0xFDF
  9570                           postinc2	equ	0xFDE
  9571                           postdec2	equ	0xFDD
  9572                           fsr2h	equ	0xFDA
  9573                           fsr2l	equ	0xFD9
  9574                           status	equ	0xFD8
  9575                           pclatu	equ	0xFFB
  9576                           pclath	equ	0xFFA
  9577                           tblptru	equ	0xFF8
  9578                           tblptrh	equ	0xFF7
  9579                           tblptrl	equ	0xFF6
  9580                           tablat	equ	0xFF5
  9581                           prodh	equ	0xFF4
  9582                           prodl	equ	0xFF3
  9583                           intcon	equ	0xFF2
  9584                           intcon2	equ	0xFF1
  9585                           intcon3	equ	0xFF0
  9586                           postinc0	equ	0xFEE
  9587                           fsr0h	equ	0xFEA
  9588                           fsr0l	equ	0xFE9
  9589                           wreg	equ	0xFE8
  9590                           postdec1	equ	0xFE5
  9591                           fsr1h	equ	0xFE2
  9592                           fsr1l	equ	0xFE1
  9593                           bsr	equ	0xFE0
  9594                           indf2	equ	0xFDF
  9595                           postinc2	equ	0xFDE
  9596                           postdec2	equ	0xFDD
  9597                           fsr2h	equ	0xFDA
  9598                           fsr2l	equ	0xFD9
  9599                           status	equ	0xFD8
  9600                           
  9601                           	psect	rparam
  9602  0000                     pclatu	equ	0xFFB
  9603                           pclath	equ	0xFFA
  9604                           tblptru	equ	0xFF8
  9605                           tblptrh	equ	0xFF7
  9606                           tblptrl	equ	0xFF6
  9607                           tablat	equ	0xFF5
  9608                           prodh	equ	0xFF4
  9609                           prodl	equ	0xFF3
  9610                           intcon	equ	0xFF2
  9611                           intcon2	equ	0xFF1
  9612                           intcon3	equ	0xFF0
  9613                           postinc0	equ	0xFEE
  9614                           fsr0h	equ	0xFEA
  9615                           fsr0l	equ	0xFE9
  9616                           wreg	equ	0xFE8
  9617                           postdec1	equ	0xFE5
  9618                           fsr1h	equ	0xFE2
  9619                           fsr1l	equ	0xFE1
  9620                           bsr	equ	0xFE0
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           postdec2	equ	0xFDD
  9624                           fsr2h	equ	0xFDA
  9625                           fsr2l	equ	0xFD9
  9626                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      66
    BANK0           160     47     130
    BANK1           256     18      18
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> remote_frame_array(BANK0[8]), distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->___lwdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->_CANInitialize
    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _board_initialization->_CANInitialize

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   19790
                                             14 BANK1      4     4      0
                      _CANInitialize
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___aldiv
                            ___awdiv
                             ___lmul
                             ___wmul
               _board_initialization
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 0     0      0    3936
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     749
                                             30 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3163
                                             30 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6571
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6571
                                             44 BANK0      3     3      0
                                              0 BANK1      9     4      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             30 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             30 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     450
                                             30 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             30 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                              0 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1338
                                              8 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                              0 BANK0      8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANInitialize
     _CANOperationMode
     _CANSetFilter
     _CANSetMask
   _CANisRXwarningON
   _CANisTXwarningON
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     12      12       6        7.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2F      82       4       81.3%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     24      42       1       69.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6       9        0.0%
DATA                 0      0      D6      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Jun 05 21:09:50 2016

           ??_CANisTXwarningON 00C8                              _x 0211                              _y 0212  
         __end_of_CANSetFilter 0C66                   ___awdiv@sign 00CD                             bsr 000FE0  
          ___wmul@multiplicand 00CA                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 0F92  
                          l401 0F9C                            l402 0FA6                            l411 1190  
                          l403 0FB0                            l500 0796                            l420 134E  
                          l412 1194                            l421 1352                            l413 128E  
                          l510 08AA                            l422 135E                            l414 121C  
                          l406 10C4                            l511 08B6                            l503 0876  
                          l415 1226                            l407 10C8                            l520 09C6  
                          l504 087A                            l416 1230                            l408 10D4  
                          l521 09CA                            l505 0886                            l417 123A  
                          l530 0ADA                            l522 09D6                            l514 0996  
                          l506 088A                            l450 1B32                            l531 0AE6  
                          l515 099A                            l507 0896                            l451 1B36  
                          l540 0BF6                            l532 0AEA                            l516 09A6  
                          l508 089A                            l452 1B42                            l541 0BFA  
                          l533 0AF6                            l525 0AB6                            l517 09AA  
                          l509 08A6                            l461 1C4E                            l453 1B46  
                          l381 0EF0                            l542 0C06                            l526 0ABA  
                          l518 09B6                            l462 1C52                            l454 1B52  
                          l382 0C7C                            l543 0C0A                            l527 0AC6  
                          l519 09BA                            l463 1C5E                            l471 1CDC  
                          l455 1B56                            l391 0E3A                            l383 0C80  
                          l711 1CFE                            l544 0C16                            l536 0BD6  
                          l528 0ACA                            l464 1C62                            l456 1B62  
                          l376 2310                            l392 0E3E                            l384 0D7A  
                          l712 1D2C                            l561 2B4A                            l537 0BDA  
                          l529 0AD6                            l481 0638                            l465 1C6E  
                          l457 1B66                            l377 231A                            l393 0E4A  
                          l385 0D08                            l713 1DB8                            l538 0BE6  
                          l546 0C64                            l482 063C                            l466 1C72  
                          l458 1B72                            l386 0D12                            l539 0BEA  
                          l483 0648                            l467 1C7E                            l395 1404  
                          l387 0D1C                            l564 2B58                            l492 0756  
                          l484 064C                            l468 1C82                            l396 117A  
                          l388 0D26                            l493 075A                            l485 0658  
                          l469 1C8E                            l397 0F06                            l741 25D0  
                          l733 1F24                            l717 1DC0                            l709 1D2A  
                          l494 0766                            l486 065C                            l574 2AF4  
                          l398 0F0A                            l718 1E12                            l495 076A  
                          l487 0668                            l575 2AFA                            l399 1004  
                          l840 2700                            l496 0776                            l488 066C  
                          l752 25D4                            l728 1E9E                            l497 077A  
                          l489 0678                            l498 0786                            l499 078A  
                          l771 2AAC                            l964 27D0                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012                            _msg 0031  
                          wreg 000FE8                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l3012 05A6                           l3040 067E                           l3210 0C1C  
                         l3114 0904                           l3108 08BC                           l3300 0D32  
                         l3142 09DC                           l3046 06C6                           l3080 07E4  
                         l3320 0E2E                           l3074 079C                           l3402 10DA  
                         l3148 0A24                           l3182 0B44                           l3326 0E50  
                         l4400 265C                           l3176 0AFC                           l4410 26BC  
                         l4402 2666                           l4260 231E                           l4252 22B2  
                         l3452 1246                           l4414 26D0                           l2806 2B06  
                         l4246 22A2                           l2840 1AA6                           l2824 19EE  
                         l4264 2326                           l3472 1342                           l3376 0FBC  
                         l4600 1F10                           l4418 26EE                           l2922 01FC  
                         l4266 236A                           l4258 2308                           l2940 02B6  
                         l3396 10B8                           l3820 258A                           l3804 24F4  
                         l3902 2756                           l3830 296E                           l3478 1364  
                         l4614 1F3E                           l4606 1F1C                           l4542 1CEA  
                         l4392 261C                           l3904 2764                           l2872 1BC0  
                         l3824 25BE                           l4616 1F96                           l4386 25FC  
                         l3922 27C6                           l3914 27A0                           l3906 276E  
                         l3834 2996                           l2866 1B78                           l4562 1DC8  
                         l4580 1E18                           l4572 1DF0                           l4398 264A  
                         l3918 27B0                           l2958 0372                           l4590 1E96  
                         l2976 042E                           l4576 1E02                           l4568 1DE0  
                         l3890 2720                           l2994 04EA                           l2898 1C94  
                         l3794 2472                           l4586 1E52                           l3798 24B6  
                         l4598 1EB8                           l3896 2738                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u4100 2B54                           u3300 0B1C  
                         u3220 09FC                           u3140 08DC                           u3060 07BC  
                         u3305 0B10                           u3225 09F0                           u3145 08D0  
                         u3065 07B0                           u2505 1A80                           u2450 1968  
                         u3510 0D52                           u2455 195C                           u3520 0D9E  
                         u2705 01D6                           u2465 19C8                           u4090 2B46  
                         u2810 03A8                           u2730 0230                           u2490 1A20  
                         u3515 0D46                           u3380 0C3C                           u2660 1CB4  
                         u2580 1B98                           u3525 0D92                           u2815 039C  
                         u2735 0224                           u2495 1A14                           u3535 0DFE  
                         u3640 0FDC                           u3385 0C30                           u2905 0580  
                         u2825 0408                           u2745 0290                           u2665 1CA8  
                         u2585 1B8C                           u2850 0464                           u2770 02EC  
                         u2690 0176                           u3650 1028                           u3645 0FD0  
                         u2855 0458                           u2775 02E0                           u2695 016A  
                         u3655 101C                           u2865 04C4                           u2785 034C  
                         u3665 1088                           u2890 0520                           u3770 1266  
                         u2980 069E                           u3780 12B2                           u2895 0514  
                         u3775 125A                           u2985 0692                           u3785 12A6  
                         u3795 1312            __size_of_CANSetMask 03AA                           _main 1CDE  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           _step 0090                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 0138  
                __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000                   ___param_bank 000010  
             _CANOperationMode 2AFC                   _status_array 00A1                _brake_value_inc 008E  
         _remote_frame_handler 241A     __size_of_CANreceiveMessage 052E                __end_of___aldiv 2702  
                        ?_main 0001                __end_of___awdiv 27D2                          _T0CON 000FD5  
              ___awdiv@divisor 00CA                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 0120                __end_of___lwdiv 2A30                          i1l436 1932  
                        i1l428 16B2                          i1l703 00E8                          i1l705 00F2  
                        i1l580 2B2A                          i1l579 2B26                          i2l771 2AD4  
                        i2l693 2212                          i2l964 28A0                ___awdiv@counter 00CC  
                        _TMR0H 000FD7                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR3H 000FB3                          _TMR1L 000FCE                          _TMR3L 000FB2  
            _CANisRxReady$3280 0001                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 224C                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000            ___lmul@multiplicand 00CC                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 0104  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0208           __end_of_CANisRxReady 2B2C  
                        tablat 000FF5         _distance_set_counter_1 0086         _distance_set_counter_2 0088  
         __end_of_CANisTxReady 2AFC               __end_ofi2___wmul 2AD6                          status 000FD8  
           __size_ofi2___awdiv 00D0                 __CFG_PBADEN$ON 000000                __initialization 2A30  
                 __end_of_main 1FA6  __size_of_board_initialization 00B8               _brake_signal_CAN 008D  
        ?_remote_frame_handler 0001                         ??_main 010E                  __activetblptr 000002  
            _CANisTxReady$3278 00C8                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 00C8                __CFG_BBSIZ$1024 000000  
                       i1l4104 00DA                         i1l4108 00E0                         i1l3522 1412  
                       i1l4092 0094                         i1l4084 0064                         i1l3630 1882  
                       i1l3622 1812                         i1l3526 141A                         i1l3560 1586  
                       i1l4096 00AC                         i1l3642 18DC                         i1l3634 18A0  
                       i1l3580 1658                         i1l3572 1618                         i1l3646 18FA  
                       i1l3638 18BE                         i1l3648 192E                         i1l3584 1678  
                       i1l3576 1638                         i1l3568 15F8                         i1l3586 16AC  
                       i2l1289 2A26                         i2l4430 27F0                         i2l4510 219C  
                       i2l4504 218C                         i2l4442 2826                         i2l4444 2834  
                       i2l4436 2808                         i2l4532 2202                         i2l4508 2198  
                       i2l4462 2896                         i2l4454 2870                         i2l4446 283E  
                       i2l4518 21B0                         i2l4536 220E                         i2l4480 2122  
                       i2l4458 2880                         i2l4490 213A                         i2l4482 2126  
                       i2l3932 29EA                         i2l3934 29F4                         i2l4478 2114  
                       i2l3944 2A1A                         i2l3936 29FC                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 00CC             CANsendMessage@tamp 00D4              __end_of_ISR_Bassa 0138  
        __size_of_CANSetFilter 0B2A             _distance_set_value 008A                 __CFG_XINST$OFF 000000  
                       ___lmul 295A                      ??___aldiv 00D4                         ___wmul 2A76  
                    ??___awdiv 00CC                 __CFG_STVREN$ON 000000                      ??___lwdiv 0022  
                 ??_CANSetMask 00CD                         clear_0 2A36                         clear_1 2A46  
             ___awdiv@quotient 00CE                 i2___awdiv@sign 00AF                __CFG_BOREN$BOHW 000000  
            __end_ofi2___awdiv 28A2                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 008F                   _CANSetFilter 013C  
                   __accesstop 0060        __end_of__initialization 2A6C             __end_of_CANSetMask 1CDE  
                ___rparam_used 000001      __size_of_CANisRXwarningON 000E                 __pcstackCOMRAM 0001  
                    ?_ISR_Alta 0001                   __pidataBANK0 2B5A         ??_remote_frame_handler 00D8  
                 _ENC1_measure 0208          CANSetFilter@numBuffer 00D1                      ?i2___wmul 001E  
    __size_of_CANisTXwarningON 000E                   _ENC2_measure 0209          __size_of_CANisRxReady 0018  
        __size_of_CANisTxReady 0026       __end_of_CANOperationMode 2B14                     __pbssBANK0 0060  
      __size_of_CANsendMessage 07A0                     ??_ISR_Alta 00B2                        ?___lmul 00C8  
                      ?___wmul 00C8                     _gap_time_1 002D                     _gap_time_2 002F  
             WriteTimer0@timer 0020                  ??_WriteTimer0 0020                 ___lmul@product 00D0  
                 _CANisRxReady 2B14                        _CANSTAT 000F6E                   _CANisTxReady 2AD6  
                      _BRGCON1 000F70                        _BRGCON2 000F71                        _BRGCON3 000F72  
                   ??i2___wmul 0022                  _int_counter_1 006C                  _int_counter_2 0070  
       __size_of_CANInitialize 01CE          _distance_reached_flag 020E                        _RXB0DLC 000F65  
                      _RXB1DLC 000F55                        _RXB0CON 000F60                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
                   _distance_1 0082                     _distance_2 0084            CANsendMessage@flags 00CF  
                   _count_flag 020D                        __Hparam 0000                        __Lparam 0000  
                      ___aldiv 25D6                        ___awdiv 2702                __size_of___lmul 007A  
              __size_of___wmul 0038                        ___lwdiv 29D4           CANInitialize@propSeg 00D6  
                      __pcinit 2A30                        __ramtop 0300                        __ptext0 1CDE  
                      __ptext1 241A                        __ptext2 2A76                        __ptext3 0C66  
                      __ptext4 2AD6                        __ptext5 28A2                        __ptext6 224C  
                      __ptext7 1934                        __ptext8 013C                        __ptext9 2AFC  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T3CONbits 000FB1  
             ___aldiv@dividend 0100            __end_of_WriteTimer0 2B3E         CANreceiveMessage@error 000B  
 __end_of_board_initialization 295A                 __pintcode_body 1FA6           end_of_initialization 2A6C  
                _Analogic_Mode 008C                  __Lmediumconst 0000                        int_func 1FA6  
          i2___wmul@multiplier 001E               _CANisRXwarningON 2B4C                  _CANInitialize 224C  
             ___aldiv@quotient 010A                      _ISR_Bassa 0018                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                    _PORTAbits 000F80                 CANSetMask@mask 00C8                      _PORTCbits 000F82  
               CANSetMask@tamp 00D2                 CANSetMask@type 00CC               _CANisTXwarningON 2B3E  
                    i2___awdiv 27D2        _clock_counter_reference 0080                 _CANsendMessage 0C66  
           _remote_frame_array 00DA               CANInitialize@BRP 0103               CANInitialize@SJW 0102  
               ?_CANInitialize 0100             i2___awdiv@dividend 00AA                     ?_ISR_Bassa 0001  
               __end_of___lmul 29D4              __size_of_ISR_Alta 2244                 __end_of___wmul 2AAE  
                  _WriteTimer0 2B2C               i2___wmul@product 0022            start_initialization 2A30  
           i2___awdiv@quotient 00B0              __size_ofi2___wmul 0028            CANSetMask@numBuffer 00D1  
                   ?i2___awdiv 00AA         __end_of_CANsendMessage 1406              ?_CANOperationMode 0001  
           ??_CANOperationMode 00C8     CANInitialize@FilterConfig1 00D7     CANInitialize@FilterConfig2 00D8  
            _distance_set_flag 020F                       ??___lmul 00D0           _board_initialization 28A2  
                     ??___wmul 00CC                    __pdataBANK0 00D9               __CFG_LPT1OSC$OFF 000000  
__size_of_remote_frame_handler 01BC             _brake_value_degree 0040         CANInitialize@phaseSeg1 0100  
       CANInitialize@phaseSeg2 0101                    __pbssCOMRAM 0025                  __pcstackBANK0 00AA  
                __pcstackBANK1 0100                    _data_debug1 0060                    _BRGCON2bits 000F71  
                  _BRGCON3bits 000F72                ?_CANsendMessage 00C8                ??_CANInitialize 0105  
           CANSetFilter@filter 00C8               ___lwdiv@dividend 001E          ?_board_initialization 0001  
                  ??_ISR_Bassa 000D                      __pintcode 0008                       ?___aldiv 0100  
                     ?___awdiv 00C8                       ?___lwdiv 001E                    __pintcodelo 0018  
            WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2B5A                    _brake_value 00A9  
                  _COMSTATbits 000F74               ___lwdiv@quotient 0022                    ??i2___awdiv 0024  
              ___aldiv@divisor 0104          CANreceiveMessage@tamp 000C                ___aldiv@counter 0108  
               ___wmul@product 00CC                       _IPR1bits 000F9F                       _IPR2bits 000FA2  
 _delay_quartz_frequency_value 00D9                       _PIE1bits 000F9D                       _IPR3bits 000FA5  
                     _PIE2bits 000FA0                       _PIE3bits 000FA3       __end_of_CANisTXwarningON 2B4C  
                     i1u400_20 1784                       i1u400_26 1786                       i1u402_25 1798  
                     i1u408_25 1906                       i1u391_25 150A                       i1u388_20 14C6  
                     i1u388_26 14C8                       i1u389_20 14F4                       i1u397_25 1684  
                     i1u389_26 14F6                       i1u399_20 175A                       i1u399_26 175C  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       _PIR3bits 000FA4  
                     _RXB0EIDH 000F63                       _RXB0EIDL 000F64                       _RXB1EIDH 000F53  
                     _RXB1EIDL 000F54                       _ISR_Alta 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0EIDH 000F02                       _RXB1SIDH 000F51                       _RXF0EIDL 000F03  
                     _RXB1SIDL 000F52                       _RXF1EIDH 000F06                       _RXF1EIDL 000F07  
                     _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E  
                     _RXF3EIDL 000F0F                       _RXF4EIDH 000F12                       _RXF4EIDL 000F13  
                     _RXF5EIDH 000F16                       _RXF5EIDL 000F17                       _RXF0SIDH 000F00  
                     _RXF0SIDL 000F01                       _TXB0EIDH 000F43                       _RXF1SIDH 000F04  
                     _TXB0EIDL 000F44                       _RXF1SIDL 000F05                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 0025                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 00C8                       i2___wmul 2AAE              i2___awdiv@divisor 00AC  
            i2___awdiv@counter 00AE                  ?_CANSetFilter 00C8              ___lmul@multiplier 00C8  
                  _INTCON2bits 000FF1                    _INTCON3bits 000FF0                      copy_data0 2A60  
                   _CANCONbits 000F6F                       __Hrparam 0000                   _RXB0SIDLbits 000F62  
       ??_board_initialization 00D9                       __Lrparam 0000                   _RXB1SIDLbits 000F52  
             __size_of___aldiv 012C                     _CANSetMask 1934               __size_of___awdiv 00D0  
        i2___wmul@multiplicand 0020               __size_of___lwdiv 005C                _remote_frame_id 0074  
                     _Tx_retry 020C                   ?_WriteTimer0 001E                   _RXF0SIDLbits 000F01  
              ___lwdiv@divisor 0020                   _RXF1SIDLbits 000F05                  _TMR1_overflow 020A  
              ___lwdiv@counter 0024                 ??_CANSetFilter 00CD                       __ptext10 295A  
                     __ptext11 2702                       __ptext20 27D2                       __ptext12 25D6  
                     __ptext21 29D4                       __ptext13 2B3E                       __ptext22 2B2C  
                     __ptext14 2B4C                       __ptext16 1406                       __ptext17 2B14  
                     __ptext19 2AAE                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00CE  
                 _remote_frame 0210                  _TMR3_overflow 020B                  __size_of_main 02C8  
         CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32  
                     _timer_on 0029                   _TXB2SIDLbits 000F22      __size_of_CANOperationMode 0018  
                ?_CANisRxReady 0001                  ?_CANisTxReady 0001                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 1406                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 00D0                  _wheel_speed_1 0078  
                _wheel_speed_2 007C             ?_CANreceiveMessage 0001       CANsendMessage@identifier 00C8  
 __end_of_remote_frame_handler 25D6                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 00D2               CANSetFilter@type 00CC            ??_CANreceiveMessage 0003  
                  _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35                    _TXB0CONbits 000F40  
                  _TXB2DLCbits 000F25                    _TXB1CONbits 000F30                    _TXB2CONbits 000F20  
         CANOperationMode@mode 00C8                 ??_CANisRxReady 0001                    ?_CANSetMask 00C8  
               ??_CANisTxReady 00C8                 _distance_array 0091      __end_of_CANreceiveMessage 1934  
            ?_CANisRXwarningON 0001                    _speed_array 0099                   ___aldiv@sign 0109  
           ??_CANisRXwarningON 00C8          _distance_actual_value 0068          __end_of_CANInitialize 241A  
            ?_CANisTXwarningON 0001  
