

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun May 01 21:20:07 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataBANK0
    44  002AA2                     __pidataBANK0:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _delay_quartz_frequency_value
    48  002AA2  10                 	db	16
    49                           
    50                           ;initializer for _remote_frame_array
    51  002AA3  01                 	db	1
    52  002AA4  00                 	db	0
    53  002AA5  00                 	db	0
    54  002AA6  00                 	db	0
    55  002AA7  00                 	db	0
    56  002AA8  00                 	db	0
    57  002AA9  00                 	db	0
    58  002AAA  00                 	db	0
    59  0000                     _RXB1CON	set	3920
    60  0000                     _RXB1CONbits	set	3920
    61  0000                     _RXB1D0	set	3926
    62  0000                     _RXB1D1	set	3927
    63  0000                     _RXB1D2	set	3928
    64  0000                     _RXB1D3	set	3929
    65  0000                     _RXB1D4	set	3930
    66  0000                     _RXB1D5	set	3931
    67  0000                     _RXB1D6	set	3932
    68  0000                     _RXB1D7	set	3933
    69  0000                     _RXB1DLC	set	3925
    70  0000                     _RXB1DLCbits	set	3925
    71  0000                     _RXB1EIDH	set	3923
    72  0000                     _RXB1EIDL	set	3924
    73  0000                     _RXB1SIDH	set	3921
    74  0000                     _RXB1SIDL	set	3922
    75  0000                     _RXB1SIDLbits	set	3922
    76  0000                     _RXF0EIDH	set	3842
    77  0000                     _RXF0EIDL	set	3843
    78  0000                     _RXF0SIDH	set	3840
    79  0000                     _RXF0SIDL	set	3841
    80  0000                     _RXF0SIDLbits	set	3841
    81  0000                     _RXF1EIDH	set	3846
    82  0000                     _RXF1EIDL	set	3847
    83  0000                     _RXF1SIDH	set	3844
    84  0000                     _RXF1SIDL	set	3845
    85  0000                     _RXF1SIDLbits	set	3845
    86  0000                     _RXF2EIDH	set	3850
    87  0000                     _RXF2EIDL	set	3851
    88  0000                     _RXF2SIDH	set	3848
    89  0000                     _RXF2SIDL	set	3849
    90  0000                     _RXF2SIDLbits	set	3849
    91  0000                     _RXF3EIDH	set	3854
    92  0000                     _RXF3EIDL	set	3855
    93  0000                     _RXF3SIDH	set	3852
    94  0000                     _RXF3SIDL	set	3853
    95  0000                     _RXF3SIDLbits	set	3853
    96  0000                     _RXF4EIDH	set	3858
    97  0000                     _RXF4EIDL	set	3859
    98  0000                     _RXF4SIDH	set	3856
    99  0000                     _RXF4SIDL	set	3857
   100  0000                     _RXF4SIDLbits	set	3857
   101  0000                     _RXF5EIDH	set	3862
   102  0000                     _RXF5EIDL	set	3863
   103  0000                     _RXF5SIDH	set	3860
   104  0000                     _RXF5SIDL	set	3861
   105  0000                     _RXF5SIDLbits	set	3861
   106  0000                     _RXM0EIDH	set	3866
   107  0000                     _RXM0EIDL	set	3867
   108  0000                     _RXM0SIDH	set	3864
   109  0000                     _RXM0SIDL	set	3865
   110  0000                     _RXM0SIDLbits	set	3865
   111  0000                     _RXM1EIDH	set	3870
   112  0000                     _RXM1EIDL	set	3871
   113  0000                     _RXM1SIDH	set	3868
   114  0000                     _RXM1SIDL	set	3869
   115  0000                     _RXM1SIDLbits	set	3869
   116  0000                     _TXB0CONbits	set	3904
   117  0000                     _TXB0D0	set	3910
   118  0000                     _TXB0D1	set	3911
   119  0000                     _TXB0D2	set	3912
   120  0000                     _TXB0D3	set	3913
   121  0000                     _TXB0D4	set	3914
   122  0000                     _TXB0D5	set	3915
   123  0000                     _TXB0D6	set	3916
   124  0000                     _TXB0D7	set	3917
   125  0000                     _TXB0DLC	set	3909
   126  0000                     _TXB0DLCbits	set	3909
   127  0000                     _TXB0EIDH	set	3907
   128  0000                     _TXB0EIDL	set	3908
   129  0000                     _TXB0SIDH	set	3905
   130  0000                     _TXB0SIDL	set	3906
   131  0000                     _TXB0SIDLbits	set	3906
   132  0000                     _TXB1CONbits	set	3888
   133  0000                     _TXB1D0	set	3894
   134  0000                     _TXB1D1	set	3895
   135  0000                     _TXB1D2	set	3896
   136  0000                     _TXB1D3	set	3897
   137  0000                     _TXB1D4	set	3898
   138  0000                     _TXB1D5	set	3899
   139  0000                     _TXB1D6	set	3900
   140  0000                     _TXB1D7	set	3901
   141  0000                     _TXB1DLC	set	3893
   142  0000                     _TXB1DLCbits	set	3893
   143  0000                     _TXB1EIDH	set	3891
   144  0000                     _TXB1EIDL	set	3892
   145  0000                     _TXB1SIDH	set	3889
   146  0000                     _TXB1SIDL	set	3890
   147  0000                     _TXB1SIDLbits	set	3890
   148  0000                     _TXB2CONbits	set	3872
   149  0000                     _TXB2D0	set	3878
   150  0000                     _TXB2D1	set	3879
   151  0000                     _TXB2D2	set	3880
   152  0000                     _TXB2D3	set	3881
   153  0000                     _TXB2D4	set	3882
   154  0000                     _TXB2D5	set	3883
   155  0000                     _TXB2D6	set	3884
   156  0000                     _TXB2D7	set	3885
   157  0000                     _TXB2DLC	set	3877
   158  0000                     _TXB2DLCbits	set	3877
   159  0000                     _TXB2EIDH	set	3875
   160  0000                     _TXB2EIDL	set	3876
   161  0000                     _TXB2SIDH	set	3873
   162  0000                     _TXB2SIDL	set	3874
   163  0000                     _TXB2SIDLbits	set	3874
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON1	set	4033
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADRESH	set	4036
   168  0000                     _BRGCON1	set	3952
   169  0000                     _BRGCON2	set	3953
   170  0000                     _BRGCON2bits	set	3953
   171  0000                     _BRGCON3	set	3954
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _CANCON	set	3951
   174  0000                     _CANCONbits	set	3951
   175  0000                     _CANSTAT	set	3950
   176  0000                     _COMSTATbits	set	3956
   177  0000                     _INTCON2bits	set	4081
   178  0000                     _INTCON3bits	set	4080
   179  0000                     _INTCONbits	set	4082
   180  0000                     _IPR1bits	set	3999
   181  0000                     _IPR2bits	set	4002
   182  0000                     _IPR3bits	set	4005
   183  0000                     _LATA	set	3977
   184  0000                     _LATB	set	3978
   185  0000                     _LATC	set	3979
   186  0000                     _LATD	set	3980
   187  0000                     _LATE	set	3981
   188  0000                     _PIE1bits	set	3997
   189  0000                     _PIE2bits	set	4000
   190  0000                     _PIE3bits	set	4003
   191  0000                     _PIR1bits	set	3998
   192  0000                     _PIR2bits	set	4001
   193  0000                     _PIR3bits	set	4004
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PORTCbits	set	3970
   196  0000                     _RCONbits	set	4048
   197  0000                     _RXB0CON	set	3936
   198  0000                     _RXB0CONbits	set	3936
   199  0000                     _RXB0D0	set	3942
   200  0000                     _RXB0D1	set	3943
   201  0000                     _RXB0D2	set	3944
   202  0000                     _RXB0D3	set	3945
   203  0000                     _RXB0D4	set	3946
   204  0000                     _RXB0D5	set	3947
   205  0000                     _RXB0D6	set	3948
   206  0000                     _RXB0D7	set	3949
   207  0000                     _RXB0DLC	set	3941
   208  0000                     _RXB0DLCbits	set	3941
   209  0000                     _RXB0EIDH	set	3939
   210  0000                     _RXB0EIDL	set	3940
   211  0000                     _RXB0SIDH	set	3937
   212  0000                     _RXB0SIDL	set	3938
   213  0000                     _RXB0SIDLbits	set	3938
   214  0000                     _RXERRCNT	set	3957
   215  0000                     _T0CON	set	4053
   216  0000                     _T0CONbits	set	4053
   217  0000                     _T1CON	set	4045
   218  0000                     _T1CONbits	set	4045
   219  0000                     _T3CON	set	4017
   220  0000                     _T3CONbits	set	4017
   221  0000                     _TMR0H	set	4055
   222  0000                     _TMR0L	set	4054
   223  0000                     _TMR1H	set	4047
   224  0000                     _TMR1L	set	4046
   225  0000                     _TMR3H	set	4019
   226  0000                     _TMR3L	set	4018
   227  0000                     _TRISA	set	3986
   228  0000                     _TRISB	set	3987
   229  0000                     _TRISC	set	3988
   230  0000                     _TRISD	set	3989
   231  0000                     _TRISE	set	3990
   232  0000                     _TXERRCNT	set	3958
   233                           
   234                           ; #config settings
   235  0000                     
   236                           	psect	cinit
   237  002948                     __pcinit:
   238                           	opt stack 0
   239  002948                     start_initialization:
   240                           	opt stack 0
   241  002948                     __initialization:
   242                           	opt stack 0
   243                           
   244                           ; Clear objects allocated to BANK0 (81 bytes)
   245  002948  EE00  F060         	lfsr	0,__pbssBANK0
   246  00294C  0E51               	movlw	81
   247  00294E                     clear_0:
   248  00294E  6AEE               	clrf	postinc0,c
   249  002950  06E8               	decf	wreg,f,c
   250  002952  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   253  002954  6A3E               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   254  002956  6A3D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   255                           
   256                           ; Clear objects allocated to COMRAM (21 bytes)
   257  002958  EE00  F028         	lfsr	0,__pbssCOMRAM
   258  00295C  0E15               	movlw	21
   259  00295E                     clear_1:
   260  00295E  6AEE               	clrf	postinc0,c
   261  002960  06E8               	decf	wreg,f,c
   262  002962  E1FD               	bnz	clear_1
   263                           
   264                           ; Initialize objects allocated to BANK0 (9 bytes)
   265                           ; load TBLPTR registers with __pidataBANK0
   266  002964  0EA2               	movlw	low __pidataBANK0
   267  002966  6EF6               	movwf	tblptrl,c
   268  002968  0E2A               	movlw	high __pidataBANK0
   269  00296A  6EF7               	movwf	tblptrh,c
   270  00296C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   271  00296E  6EF8               	movwf	tblptru,c
   272  002970  EE00  F0DD         	lfsr	0,__pdataBANK0
   273  002974  EE10 F009          	lfsr	1,9
   274  002978                     copy_data0:
   275  002978  0009               	tblrd		*+
   276  00297A  CFF5 FFEE          	movff	tablat,postinc0
   277  00297E  50E5               	movf	postdec1,w,c
   278  002980  50E1               	movf	fsr1l,w,c
   279  002982  E1FA               	bnz	copy_data0
   280  002984                     end_of_initialization:
   281                           	opt stack 0
   282  002984                     __end_of__initialization:
   283                           	opt stack 0
   284  002984  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  002986  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  002988  0E00               	movlw	low (__Lmediumconst shr (0+16))
   287  00298A  6EF8               	movwf	tblptru,c
   288  00298C  0100               	movlb	0
   289  00298E  EF96  F00F         	goto	_main	;jump to C main() function
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	bitbssCOMRAM
   300  0001E8                     __pbitbssCOMRAM:
   301                           	opt stack 0
   302  0001E8                     _ENC1_measure:
   303                           	opt stack 0
   304  0001E8                     	ds	1
   305  0001E9                     _ENC2_measure:
   306                           	opt stack 0
   307  0001E9                     	ds	1
   308  0001EA                     _TMR1_overflow:
   309                           	opt stack 0
   310  0001EA                     	ds	1
   311  0001EB                     _TMR3_overflow:
   312                           	opt stack 0
   313  0001EB                     	ds	1
   314  0001EC                     _Tx_retry:
   315                           	opt stack 0
   316  0001EC                     	ds	1
   317  0001ED                     _count_flag:
   318                           	opt stack 0
   319  0001ED                     	ds	1
   320  0001EE                     _distance_reached_flag:
   321                           	opt stack 0
   322  0001EE                     	ds	1
   323  0001EF                     _distance_set_flag:
   324                           	opt stack 0
   325  0001EF                     	ds	1
   326  0001F0                     _remote_frame:
   327                           	opt stack 0
   328  0001F0                     	ds	1
   329  0001F1                     _x:
   330                           	opt stack 0
   331  0001F1                     	ds	1
   332  0001F2                     _y:
   333                           	opt stack 0
   334  0001F2                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssCOMRAM
   345  000028                     __pbssCOMRAM:
   346                           	opt stack 0
   347  000028                     _data_debug1:
   348                           	opt stack 0
   349  000028                     	ds	8
   350  000030                     _timer_off:
   351                           	opt stack 0
   352  000030                     	ds	4
   353  000034                     _timer_on:
   354                           	opt stack 0
   355  000034                     	ds	4
   356  000038                     _gap_time_1:
   357                           	opt stack 0
   358  000038                     	ds	2
   359  00003A                     _gap_time_2:
   360                           	opt stack 0
   361  00003A                     	ds	2
   362  00003C                     _brake_value_degree:
   363                           	opt stack 0
   364  00003C                     	ds	1
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	bssBANK0
   375  000060                     __pbssBANK0:
   376                           	opt stack 0
   377  000060                     _distance_actual_value:
   378                           	opt stack 0
   379  000060                     	ds	4
   380  000064                     _int_counter_1:
   381                           	opt stack 0
   382  000064                     	ds	4
   383  000068                     _int_counter_2:
   384                           	opt stack 0
   385  000068                     	ds	4
   386  00006C                     _remote_frame_id:
   387                           	opt stack 0
   388  00006C                     	ds	4
   389  000070                     _wheel_speed_1:
   390                           	opt stack 0
   391  000070                     	ds	4
   392  000074                     _wheel_speed_2:
   393                           	opt stack 0
   394  000074                     	ds	4
   395  000078                     _clock_counter_reference:
   396                           	opt stack 0
   397  000078                     	ds	2
   398  00007A                     _distance_1:
   399                           	opt stack 0
   400  00007A                     	ds	2
   401  00007C                     _distance_2:
   402                           	opt stack 0
   403  00007C                     	ds	2
   404  00007E                     _distance_set_counter_1:
   405                           	opt stack 0
   406  00007E                     	ds	2
   407  000080                     _distance_set_counter_2:
   408                           	opt stack 0
   409  000080                     	ds	2
   410  000082                     _distance_set_value:
   411                           	opt stack 0
   412  000082                     	ds	2
   413  000084                     _Analogic_Mode:
   414                           	opt stack 0
   415  000084                     	ds	1
   416  000085                     _brake_signal_CAN:
   417                           	opt stack 0
   418  000085                     	ds	1
   419  000086                     _brake_value_inc:
   420                           	opt stack 0
   421  000086                     	ds	1
   422  000087                     _home_position:
   423                           	opt stack 0
   424  000087                     	ds	1
   425  000088                     _step:
   426                           	opt stack 0
   427  000088                     	ds	1
   428  000089                     _msg:
   429                           	opt stack 0
   430  000089                     	ds	15
   431  000098                     _distance_array:
   432                           	opt stack 0
   433  000098                     	ds	8
   434  0000A0                     _speed_array:
   435                           	opt stack 0
   436  0000A0                     	ds	8
   437  0000A8                     _status_array:
   438                           	opt stack 0
   439  0000A8                     	ds	8
   440  0000B0                     _brake_value:
   441                           	opt stack 0
   442  0000B0                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	dataBANK0
   453  0000DD                     __pdataBANK0:
   454                           	opt stack 0
   455  0000DD                     _delay_quartz_frequency_value:
   456                           	opt stack 0
   457  0000DD                     	ds	1
   458  0000DE                     _remote_frame_array:
   459                           	opt stack 0
   460  0000DE                     	ds	8
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           
   470                           	psect	cstackBANK1
   471  000100                     __pcstackBANK1:
   472                           	opt stack 0
   473  000100                     ?___aldiv:
   474                           	opt stack 0
   475  000100                     CANInitialize@phaseSeg1:
   476                           	opt stack 0
   477  000100                     ___aldiv@dividend:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x0
   481  000100                     	ds	1
   482  000101                     CANInitialize@phaseSeg2:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x1
   486  000101                     	ds	1
   487  000102                     CANInitialize@SJW:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x2
   491  000102                     	ds	1
   492  000103                     CANInitialize@BRP:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x3
   496  000103                     	ds	1
   497  000104                     CANInitialize@flags:
   498                           	opt stack 0
   499  000104                     ___aldiv@divisor:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x4
   503  000104                     	ds	1
   504  000105                     CANInitialize@propSeg:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x5
   508  000105                     	ds	1
   509  000106                     CANInitialize@FilterConfig1:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x6
   513  000106                     	ds	1
   514  000107                     CANInitialize@FilterConfig2:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x7
   518  000107                     	ds	1
   519  000108                     ??_main:
   520                           
   521                           ; 0 bytes @ 0x8
   522  000108                     	ds	4
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	cstackBANK0
   533  0000B1                     __pcstackBANK0:
   534                           	opt stack 0
   535  0000B1                     i2___awdiv@counter:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x0
   539  0000B1                     	ds	1
   540  0000B2                     i2___awdiv@sign:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x1
   544  0000B2                     	ds	1
   545  0000B3                     i2___awdiv@quotient:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x2
   549  0000B3                     	ds	2
   550  0000B5                     ??_ISR_Alta:
   551                           
   552                           ; 0 bytes @ 0x4
   553  0000B5                     	ds	22
   554  0000CB                     ?___wmul:
   555                           	opt stack 0
   556  0000CB                     ?___awdiv:
   557                           	opt stack 0
   558  0000CB                     ?___lmul:
   559                           	opt stack 0
   560  0000CB                     CANOperationMode@mode:
   561                           	opt stack 0
   562  0000CB                     _CANisTxReady$3278:
   563                           	opt stack 0
   564  0000CB                     ___wmul@multiplier:
   565                           	opt stack 0
   566  0000CB                     ___awdiv@dividend:
   567                           	opt stack 0
   568  0000CB                     CANsendMessage@identifier:
   569                           	opt stack 0
   570  0000CB                     CANSetMask@mask:
   571                           	opt stack 0
   572  0000CB                     CANSetFilter@filter:
   573                           	opt stack 0
   574  0000CB                     ___lmul@multiplier:
   575                           	opt stack 0
   576                           
   577                           ; 4 bytes @ 0x1A
   578  0000CB                     	ds	2
   579  0000CD                     ___wmul@multiplicand:
   580                           	opt stack 0
   581  0000CD                     ___awdiv@divisor:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x1C
   585  0000CD                     	ds	2
   586  0000CF                     CANSetMask@type:
   587                           	opt stack 0
   588  0000CF                     CANSetFilter@type:
   589                           	opt stack 0
   590  0000CF                     ___awdiv@counter:
   591                           	opt stack 0
   592  0000CF                     CANsendMessage@data:
   593                           	opt stack 0
   594  0000CF                     ___wmul@product:
   595                           	opt stack 0
   596  0000CF                     ___lmul@multiplicand:
   597                           	opt stack 0
   598                           
   599                           ; 4 bytes @ 0x1E
   600  0000CF                     	ds	1
   601  0000D0                     ??_CANSetMask:
   602  0000D0                     ??_CANSetFilter:
   603  0000D0                     ___awdiv@sign:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x1F
   607  0000D0                     	ds	1
   608  0000D1                     CANsendMessage@dataLength:
   609                           	opt stack 0
   610  0000D1                     delay_ms@value_ms:
   611                           	opt stack 0
   612  0000D1                     ___awdiv@quotient:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x20
   616  0000D1                     	ds	1
   617  0000D2                     CANsendMessage@flags:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x21
   621  0000D2                     	ds	1
   622  0000D3                     ??_CANsendMessage:
   623  0000D3                     ___lmul@product:
   624                           	opt stack 0
   625                           
   626                           ; 4 bytes @ 0x22
   627  0000D3                     	ds	1
   628  0000D4                     CANSetMask@numBuffer:
   629                           	opt stack 0
   630  0000D4                     CANSetFilter@numBuffer:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x23
   634  0000D4                     	ds	1
   635  0000D5                     CANSetMask@tamp:
   636                           	opt stack 0
   637  0000D5                     CANSetFilter@tamp:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x24
   641  0000D5                     	ds	2
   642  0000D7                     ___aldiv@counter:
   643                           	opt stack 0
   644  0000D7                     CANsendMessage@tamp:
   645                           	opt stack 0
   646                           
   647                           ; 4 bytes @ 0x26
   648  0000D7                     	ds	1
   649  0000D8                     ___aldiv@sign:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x27
   653  0000D8                     	ds	1
   654  0000D9                     ??_CANInitialize:
   655  0000D9                     ___aldiv@quotient:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x28
   659  0000D9                     	ds	2
   660  0000DB                     ??_remote_frame_handler:
   661                           
   662                           ; 0 bytes @ 0x2A
   663  0000DB                     	ds	2
   664  0000DD                     tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           ; 0 bytes @ 0x2C
   674                           
   675                           	psect	cstackCOMRAM
   676  000001                     __pcstackCOMRAM:
   677                           	opt stack 0
   678  000001                     _CANisRxReady$3280:
   679                           	opt stack 0
   680  000001                     CANreceiveMessage@msg:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x0
   684  000001                     	ds	2
   685  000003                     ??_CANreceiveMessage:
   686                           
   687                           ; 0 bytes @ 0x2
   688  000003                     	ds	8
   689  00000B                     CANreceiveMessage@error:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0xA
   693  00000B                     	ds	1
   694  00000C                     CANreceiveMessage@tamp:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0xB
   698  00000C                     	ds	1
   699  00000D                     ??_ISR_Bassa:
   700                           
   701                           ; 0 bytes @ 0xC
   702  00000D                     	ds	17
   703  00001E                     ?___lwdiv:
   704                           	opt stack 0
   705  00001E                     ?i2___wmul:
   706                           	opt stack 0
   707  00001E                     WriteTimer0@timer0:
   708                           	opt stack 0
   709  00001E                     ___lwdiv@dividend:
   710                           	opt stack 0
   711  00001E                     i2___wmul@multiplier:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x1D
   715  00001E                     	ds	2
   716  000020                     WriteTimer0@timer:
   717                           	opt stack 0
   718  000020                     ___lwdiv@divisor:
   719                           	opt stack 0
   720  000020                     i2___wmul@multiplicand:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x1F
   724  000020                     	ds	2
   725  000022                     ___lwdiv@quotient:
   726                           	opt stack 0
   727  000022                     i2___wmul@product:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x21
   731  000022                     	ds	2
   732  000024                     ?i2___awdiv:
   733                           	opt stack 0
   734  000024                     ___lwdiv@counter:
   735                           	opt stack 0
   736  000024                     i2___awdiv@dividend:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x23
   740  000024                     	ds	2
   741  000026                     i2___awdiv@divisor:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x25
   745  000026                     	ds	2
   746  000028                     tblptru	equ	0xFF8
   747                           tblptrh	equ	0xFF7
   748                           tblptrl	equ	0xFF6
   749                           tablat	equ	0xFF5
   750                           postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           postdec1	equ	0xFE5
   753                           fsr1l	equ	0xFE1
   754                           
   755                           ; 0 bytes @ 0x27
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 254 in file "ABS_Code.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  2  707[None  ] int 
   768 ;; Registers used:
   769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   775 ;;      Params:         0       0       0       0
   776 ;;      Locals:         0       0       0       0
   777 ;;      Temps:          0       0       4       0
   778 ;;      Totals:         0       0       4       0
   779 ;;Total ram usage:        4 bytes
   780 ;; Hardware stack levels required when called:    7
   781 ;; This function calls:
   782 ;;		_CANisRXwarningON
   783 ;;		_CANisTXwarningON
   784 ;;		___aldiv
   785 ;;		___awdiv
   786 ;;		___lmul
   787 ;;		___wmul
   788 ;;		_board_initialization
   789 ;;		_delay_ms
   790 ;;		_remote_frame_handler
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797  001F2C                     __ptext0:
   798                           	opt stack 0
   799  001F2C                     _main:
   800                           	opt stack 24
   801                           
   802                           ;ABS_Code.c: 255: board_initialization();
   803                           
   804                           ;incstack = 0
   805  001F2C  EC96  F013         	call	_board_initialization	;wreg free
   806                           
   807                           ;ABS_Code.c: 256: step = (11 * (3.1415)) / 16;
   808  001F30  0E02               	movlw	2
   809  001F32  0100               	movlb	0	; () banked
   810  001F34  6F88               	movwf	_step& (0+255),b
   811                           
   812                           ; BSR set to: 0
   813                           ;ABS_Code.c: 259: PORTAbits.RA1 = 1;
   814  001F36  8280               	bsf	3968,1,c	;volatile
   815                           
   816                           ; BSR set to: 0
   817                           ;ABS_Code.c: 260: PORTCbits.RC1 = 1;
   818  001F38  8282               	bsf	3970,1,c	;volatile
   819                           
   820                           ; BSR set to: 0
   821                           ;ABS_Code.c: 261: delay_ms(500);
   822  001F3A  0E01               	movlw	1
   823  001F3C  0100               	movlb	0	; () banked
   824  001F3E  6FD2               	movwf	(delay_ms@value_ms+1)& (0+255),b
   825  001F40  0EF4               	movlw	244
   826  001F42  6FD1               	movwf	delay_ms@value_ms& (0+255),b
   827  001F44  ECC9  F014         	call	_delay_ms	;wreg free
   828                           
   829                           ;ABS_Code.c: 262: PORTAbits.RA1 = 0;
   830  001F48  9280               	bcf	3968,1,c	;volatile
   831                           
   832                           ;ABS_Code.c: 263: PORTCbits.RC1 = 0;
   833  001F4A  9282               	bcf	3970,1,c	;volatile
   834                           
   835                           ;ABS_Code.c: 264: delay_ms(100);
   836  001F4C  0E00               	movlw	0
   837  001F4E  0100               	movlb	0	; () banked
   838  001F50  6FD2               	movwf	(delay_ms@value_ms+1)& (0+255),b
   839  001F52  0E64               	movlw	100
   840  001F54  6FD1               	movwf	delay_ms@value_ms& (0+255),b
   841  001F56  ECC9  F014         	call	_delay_ms	;wreg free
   842  001F5A                     l5002:
   843                           
   844                           ;ABS_Code.c: 268: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   845  001F5A  EC45  F015         	call	_CANisTXwarningON	;wreg free
   846  001F5E  06E8               	decf	wreg,f,c
   847  001F60  B4D8               	btfsc	status,2,c
   848  001F62  D005               	goto	l711
   849  001F64  EC4B  F015         	call	_CANisRXwarningON	;wreg free
   850  001F68  06E8               	decf	wreg,f,c
   851  001F6A  A4D8               	btfss	status,2,c
   852  001F6C  D004               	goto	l709
   853  001F6E                     l711:
   854                           
   855                           ;ABS_Code.c: 269: PORTAbits.RA1 = 1;
   856  001F6E  8280               	bsf	3968,1,c	;volatile
   857                           
   858                           ;ABS_Code.c: 270: COMSTATbits.TXWARN = 0;
   859  001F70  9474               	bcf	3956,2,c	;volatile
   860                           
   861                           ;ABS_Code.c: 271: COMSTATbits.RXWARN = 0;
   862  001F72  9274               	bcf	3956,1,c	;volatile
   863                           
   864                           ;ABS_Code.c: 272: } else {
   865  001F74  D001               	goto	l712
   866  001F76                     l709:
   867                           
   868                           ;ABS_Code.c: 273: PORTAbits.RA1 = 0;
   869  001F76  9280               	bcf	3968,1,c	;volatile
   870  001F78                     l712:
   871                           
   872                           ;ABS_Code.c: 274: }
   873                           ;ABS_Code.c: 277: if (distance_set_flag == 1) {
   874  001F78  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   875  001F7A  D043               	goto	l713
   876                           
   877                           ;ABS_Code.c: 278: distance_actual_value = (step * (distance_set_counter_1 + distance_set
      +                          _counter_2)) / 2;
   878  001F7C  0100               	movlb	0	; () banked
   879  001F7E  5180               	movf	_distance_set_counter_2& (0+255),w,b	;volatile
   880  001F80  0100               	movlb	0	; () banked
   881  001F82  257E               	addwf	_distance_set_counter_1& (0+255),w,b	;volatile
   882  001F84  0100               	movlb	0	; () banked
   883  001F86  6FCB               	movwf	___wmul@multiplier& (0+255),b
   884  001F88  0100               	movlb	0	; () banked
   885  001F8A  5181               	movf	(_distance_set_counter_2+1)& (0+255),w,b	;volatile
   886  001F8C  0100               	movlb	0	; () banked
   887  001F8E  217F               	addwfc	(_distance_set_counter_1+1)& (0+255),w,b	;volatile
   888  001F90  0100               	movlb	0	; () banked
   889  001F92  6FCC               	movwf	(___wmul@multiplier+1)& (0+255),b
   890  001F94  C088  F0CD         	movff	_step,___wmul@multiplicand
   891  001F98  0100               	movlb	0	; () banked
   892  001F9A  6BCE               	clrf	(___wmul@multiplicand+1)& (0+255),b
   893  001F9C  ECE6  F014         	call	___wmul	;wreg free
   894  001FA0  90D8               	bcf	status,0,c
   895  001FA2  0100               	movlb	0	; () banked
   896  001FA4  31CC               	rrcf	(?___wmul+1)& (0+255),w,b
   897  001FA6  0101               	movlb	1	; () banked
   898  001FA8  6F09               	movwf	(??_main+1)& (0+255),b
   899  001FAA  0100               	movlb	0	; () banked
   900  001FAC  31CB               	rrcf	?___wmul& (0+255),w,b
   901  001FAE  0101               	movlb	1	; () banked
   902  001FB0  6F08               	movwf	??_main& (0+255),b
   903  001FB2  C108  F060         	movff	??_main,_distance_actual_value	;volatile
   904  001FB6  C109  F061         	movff	??_main+1,_distance_actual_value+1	;volatile
   905  001FBA  0100               	movlb	0	; () banked
   906  001FBC  6B62               	clrf	(_distance_actual_value+2)& (0+255),b	;volatile
   907  001FBE  6B63               	clrf	(_distance_actual_value+3)& (0+255),b	;volatile
   908                           
   909                           ; BSR set to: 0
   910                           ;ABS_Code.c: 279: if (distance_actual_value >= distance_set_value) {
   911  001FC0  0100               	movlb	0	; () banked
   912  001FC2  5182               	movf	_distance_set_value& (0+255),w,b	;volatile
   913  001FC4  0101               	movlb	1	; () banked
   914  001FC6  6F08               	movwf	??_main& (0+255),b
   915  001FC8  0100               	movlb	0	; () banked
   916  001FCA  5183               	movf	(_distance_set_value+1)& (0+255),w,b	;volatile
   917  001FCC  0101               	movlb	1	; () banked
   918  001FCE  6F09               	movwf	(??_main+1)& (0+255),b
   919  001FD0  0101               	movlb	1	; () banked
   920  001FD2  6B0A               	clrf	(??_main+2)& (0+255),b
   921  001FD4  0101               	movlb	1	; () banked
   922  001FD6  6B0B               	clrf	(??_main+3)& (0+255),b
   923  001FD8  0101               	movlb	1	; () banked
   924  001FDA  5108               	movf	??_main& (0+255),w,b
   925  001FDC  0100               	movlb	0	; () banked
   926  001FDE  5D60               	subwf	_distance_actual_value& (0+255),w,b	;volatile
   927  001FE0  0101               	movlb	1	; () banked
   928  001FE2  5109               	movf	(??_main+1)& (0+255),w,b
   929  001FE4  0100               	movlb	0	; () banked
   930  001FE6  5961               	subwfb	(_distance_actual_value+1)& (0+255),w,b	;volatile
   931  001FE8  0101               	movlb	1	; () banked
   932  001FEA  510A               	movf	(??_main+2)& (0+255),w,b
   933  001FEC  0100               	movlb	0	; () banked
   934  001FEE  5962               	subwfb	(_distance_actual_value+2)& (0+255),w,b	;volatile
   935  001FF0  0101               	movlb	1	; () banked
   936  001FF2  510B               	movf	(??_main+3)& (0+255),w,b
   937  001FF4  0100               	movlb	0	; () banked
   938  001FF6  5963               	subwfb	(_distance_actual_value+3)& (0+255),w,b	;volatile
   939  001FF8  A0D8               	btfss	status,0,c
   940  001FFA  D003               	goto	l713
   941                           
   942                           ; BSR set to: 0
   943                           ;ABS_Code.c: 280: distance_set_flag = 0;
   944  001FFC  9E3D               	bcf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   945                           
   946                           ;ABS_Code.c: 281: distance_reached_flag = 1;
   947  001FFE  8C3D               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
   948                           
   949                           ;ABS_Code.c: 282: Tx_retry = 1;
   950  002000  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   951  002002                     l713:
   952                           
   953                           ;ABS_Code.c: 283: }
   954                           ;ABS_Code.c: 284: }
   955                           ;ABS_Code.c: 286: if ((remote_frame == 1) || (Tx_retry == 1)) {
   956  002002  B03E               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   957  002004  D002               	goto	l717
   958  002006  A83D               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   959  002008  D003               	goto	l5016
   960  00200A                     l717:
   961                           
   962                           ;ABS_Code.c: 287: remote_frame = 0;
   963  00200A  903E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   964                           
   965                           ;ABS_Code.c: 288: remote_frame_handler();
   966  00200C  ECDE  F010         	call	_remote_frame_handler	;wreg free
   967  002010                     l5016:
   968                           
   969                           ;ABS_Code.c: 289: }
   970                           ;ABS_Code.c: 292: if (Analogic_Mode == 0b00000000) {
   971  002010  0100               	movlb	0	; () banked
   972  002012  5184               	movf	_Analogic_Mode& (0+255),w,b	;volatile
   973  002014  A4D8               	btfss	status,2,c
   974  002016  D01E               	goto	l5034
   975                           
   976                           ; BSR set to: 0
   977                           ;ABS_Code.c: 293: if (brake_signal_CAN == 0b00000000) {
   978  002018  0100               	movlb	0	; () banked
   979  00201A  5185               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
   980  00201C  A4D8               	btfss	status,2,c
   981  00201E  D003               	goto	l5022
   982                           
   983                           ; BSR set to: 0
   984                           ;ABS_Code.c: 294: brake_value_inc = 0;
   985  002020  0E00               	movlw	0
   986  002022  0100               	movlb	0	; () banked
   987  002024  6F86               	movwf	_brake_value_inc& (0+255),b
   988  002026                     l5022:
   989                           
   990                           ; BSR set to: 0
   991                           ;ABS_Code.c: 295: }
   992                           ;ABS_Code.c: 296: if (brake_signal_CAN == 0b00000001) {
   993  002026  0100               	movlb	0	; () banked
   994  002028  0585               	decf	_brake_signal_CAN& (0+255),w,b	;volatile
   995  00202A  A4D8               	btfss	status,2,c
   996  00202C  D003               	goto	l5026
   997                           
   998                           ; BSR set to: 0
   999                           ;ABS_Code.c: 297: brake_value_inc = 150;
  1000  00202E  0E96               	movlw	150
  1001  002030  0100               	movlb	0	; () banked
  1002  002032  6F86               	movwf	_brake_value_inc& (0+255),b
  1003  002034                     l5026:
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;ABS_Code.c: 298: }
  1007                           ;ABS_Code.c: 299: if (brake_signal_CAN == 0b00000010) {
  1008  002034  0E02               	movlw	2
  1009  002036  0100               	movlb	0	; () banked
  1010  002038  1985               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1011  00203A  A4D8               	btfss	status,2,c
  1012  00203C  D003               	goto	l5030
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;ABS_Code.c: 300: brake_value_inc = 200;
  1016  00203E  0EC8               	movlw	200
  1017  002040  0100               	movlb	0	; () banked
  1018  002042  6F86               	movwf	_brake_value_inc& (0+255),b
  1019  002044                     l5030:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;ABS_Code.c: 301: }
  1023                           ;ABS_Code.c: 302: if (brake_signal_CAN == 0b00000011) {
  1024  002044  0E03               	movlw	3
  1025  002046  0100               	movlb	0	; () banked
  1026  002048  1985               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1027  00204A  A4D8               	btfss	status,2,c
  1028  00204C  D009               	goto	l723
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;ABS_Code.c: 303: brake_value_inc = 255;
  1032  00204E  0100               	movlb	0	; () banked
  1033  002050  6986               	setf	_brake_value_inc& (0+255),b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;ABS_Code.c: 304: }
  1037                           ;ABS_Code.c: 305: } else {
  1038  002052  D006               	goto	l723
  1039  002054                     l5034:
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;ABS_Code.c: 306: brake_value_inc = 180-brake_signal_CAN;
  1043  002054  0100               	movlb	0	; () banked
  1044  002056  5185               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
  1045  002058  0800               	sublw	0
  1046  00205A  0FB4               	addlw	180
  1047  00205C  0100               	movlb	0	; () banked
  1048  00205E  6F86               	movwf	_brake_value_inc& (0+255),b
  1049  002060                     l723:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;ABS_Code.c: 307: }
  1053                           ;ABS_Code.c: 310: if (((brake_value_inc / 1) + home_position) > 255) {
  1054  002060  0100               	movlb	0	; () banked
  1055  002062  5187               	movf	_home_position& (0+255),w,b
  1056  002064  C086  F108         	movff	_brake_value_inc,??_main
  1057  002068  0101               	movlb	1	; () banked
  1058  00206A  6B09               	clrf	(??_main+1)& (0+255),b
  1059  00206C  0101               	movlb	1	; () banked
  1060  00206E  2708               	addwf	??_main& (0+255),f,b
  1061  002070  0E00               	movlw	0
  1062  002072  2309               	addwfc	(??_main+1)& (0+255),f,b
  1063  002074  0101               	movlb	1	; () banked
  1064  002076  BF09               	btfsc	(??_main+1)& (0+255),7,b
  1065  002078  D008               	goto	l5040
  1066  00207A  0101               	movlb	1	; () banked
  1067  00207C  0509               	decf	(??_main+1)& (0+255),w,b
  1068  00207E  A0D8               	btfss	status,0,c
  1069  002080  D004               	goto	l5040
  1070                           
  1071                           ; BSR set to: 1
  1072                           ;ABS_Code.c: 311: brake_value = 255;
  1073  002082  0100               	movlb	0	; () banked
  1074  002084  69B0               	setf	_brake_value& (0+255),b
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;ABS_Code.c: 312: brake_value_degree = 180;
  1078  002086  0EB4               	movlw	180
  1079  002088  D015               	goto	L1
  1080  00208A                     l5040:
  1081                           
  1082                           ;ABS_Code.c: 314: brake_value = (brake_value_inc / 1) + home_position;
  1083  00208A  0100               	movlb	0	; () banked
  1084  00208C  5186               	movf	_brake_value_inc& (0+255),w,b
  1085  00208E  0100               	movlb	0	; () banked
  1086  002090  2587               	addwf	_home_position& (0+255),w,b
  1087  002092  0100               	movlb	0	; () banked
  1088  002094  6FB0               	movwf	_brake_value& (0+255),b
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;ABS_Code.c: 315: brake_value_degree = (180 * brake_value) / 255;
  1092  002096  0100               	movlb	0	; () banked
  1093  002098  51B0               	movf	_brake_value& (0+255),w,b
  1094  00209A  0DB4               	mullw	180
  1095  00209C  CFF3 F0CB          	movff	prodl,___awdiv@dividend
  1096  0020A0  CFF4 F0CC          	movff	prodh,___awdiv@dividend+1
  1097  0020A4  0E00               	movlw	0
  1098  0020A6  0100               	movlb	0	; () banked
  1099  0020A8  6FCE               	movwf	(___awdiv@divisor+1)& (0+255),b
  1100  0020AA  69CD               	setf	___awdiv@divisor& (0+255),b
  1101  0020AC  EC37  F013         	call	___awdiv	;wreg free
  1102  0020B0  0100               	movlb	0	; () banked
  1103  0020B2  51CB               	movf	?___awdiv& (0+255),w,b
  1104  0020B4                     L1:
  1105  0020B4  6E3C               	movwf	_brake_value_degree,c
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;ABS_Code.c: 316: }
  1109                           ;ABS_Code.c: 319: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1110                           
  1111                           ; BSR set to: 0
  1112  0020B6  B03D               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1113  0020B8  D002               	goto	l728
  1114                           
  1115                           ; BSR set to: 0
  1116  0020BA  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1117  0020BC  D03D               	goto	l5060
  1118  0020BE                     l728:
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;ABS_Code.c: 320: if (TMR1_overflow == 1) {
  1122  0020BE  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1123  0020C0  D00B               	goto	l5052
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;ABS_Code.c: 321: wheel_speed_1 = 0;
  1127  0020C2  0E00               	movlw	0
  1128  0020C4  0100               	movlb	0	; () banked
  1129  0020C6  6F70               	movwf	_wheel_speed_1& (0+255),b	;volatile
  1130  0020C8  0E00               	movlw	0
  1131  0020CA  6F71               	movwf	(_wheel_speed_1+1)& (0+255),b	;volatile
  1132  0020CC  0E00               	movlw	0
  1133  0020CE  6F72               	movwf	(_wheel_speed_1+2)& (0+255),b	;volatile
  1134  0020D0  0E00               	movlw	0
  1135  0020D2  6F73               	movwf	(_wheel_speed_1+3)& (0+255),b	;volatile
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;ABS_Code.c: 322: TMR1_overflow = 0;
  1139  0020D4  943D               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1140                           
  1141                           ;ABS_Code.c: 323: } else {
  1142  0020D6  D02B               	goto	l5054
  1143  0020D8                     l5052:
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;ABS_Code.c: 324: wheel_speed_1 = (step * 100000) / gap_time_1;
  1147  0020D8  0100               	movlb	0	; () banked
  1148  0020DA  5188               	movf	_step& (0+255),w,b
  1149  0020DC  0100               	movlb	0	; () banked
  1150  0020DE  6FCB               	movwf	___lmul@multiplier& (0+255),b
  1151  0020E0  6BCC               	clrf	(___lmul@multiplier+1)& (0+255),b
  1152  0020E2  6BCD               	clrf	(___lmul@multiplier+2)& (0+255),b
  1153  0020E4  6BCE               	clrf	(___lmul@multiplier+3)& (0+255),b
  1154  0020E6  0EA0               	movlw	160
  1155  0020E8  0100               	movlb	0	; () banked
  1156  0020EA  6FCF               	movwf	___lmul@multiplicand& (0+255),b
  1157  0020EC  0E86               	movlw	134
  1158  0020EE  6FD0               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1159  0020F0  0E01               	movlw	1
  1160  0020F2  6FD1               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1161  0020F4  0E00               	movlw	0
  1162  0020F6  6FD2               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1163  0020F8  EC40  F014         	call	___lmul	;wreg free
  1164  0020FC  C0CB  F100         	movff	?___lmul,___aldiv@dividend
  1165  002100  C0CC  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1166  002104  C0CD  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1167  002108  C0CE  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1168  00210C  C038  F104         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1169  002110  C039  F105         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1170  002114  0101               	movlb	1	; () banked
  1171  002116  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1172  002118  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1173  00211A  ECAA  F012         	call	___aldiv	;wreg free
  1174  00211E  C100  F070         	movff	?___aldiv,_wheel_speed_1	;volatile
  1175  002122  C101  F071         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1176  002126  C102  F072         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1177  00212A  C103  F073         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1178  00212E                     l5054:
  1179                           
  1180                           ;ABS_Code.c: 325: }
  1181                           ;ABS_Code.c: 326: speed_array[3] = wheel_speed_1 >> 8;
  1182  00212E  C071  F0A3         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1183                           
  1184                           ;ABS_Code.c: 327: speed_array[2] = wheel_speed_1;
  1185  002132  C070  F0A2         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1186                           
  1187                           ;ABS_Code.c: 328: ENC1_measure = 0;
  1188  002136  903D               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1189  002138                     l5060:
  1190                           
  1191                           ;ABS_Code.c: 329: }
  1192                           ;ABS_Code.c: 332: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1193  002138  B23D               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1194  00213A  D002               	goto	l733
  1195  00213C  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1196  00213E  D70D               	goto	l5002
  1197  002140                     l733:
  1198                           
  1199                           ;ABS_Code.c: 333: if (TMR3_overflow == 1) {
  1200  002140  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1201  002142  D00B               	goto	l5068
  1202                           
  1203                           ;ABS_Code.c: 334: wheel_speed_2 = 0;
  1204  002144  0E00               	movlw	0
  1205  002146  0100               	movlb	0	; () banked
  1206  002148  6F74               	movwf	_wheel_speed_2& (0+255),b	;volatile
  1207  00214A  0E00               	movlw	0
  1208  00214C  6F75               	movwf	(_wheel_speed_2+1)& (0+255),b	;volatile
  1209  00214E  0E00               	movlw	0
  1210  002150  6F76               	movwf	(_wheel_speed_2+2)& (0+255),b	;volatile
  1211  002152  0E00               	movlw	0
  1212  002154  6F77               	movwf	(_wheel_speed_2+3)& (0+255),b	;volatile
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;ABS_Code.c: 335: TMR3_overflow = 0;
  1216  002156  963D               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1217                           
  1218                           ;ABS_Code.c: 336: } else {
  1219  002158  D02B               	goto	l5070
  1220  00215A                     l5068:
  1221                           
  1222                           ;ABS_Code.c: 337: wheel_speed_2 = (step * 100000) / gap_time_2;
  1223  00215A  0100               	movlb	0	; () banked
  1224  00215C  5188               	movf	_step& (0+255),w,b
  1225  00215E  0100               	movlb	0	; () banked
  1226  002160  6FCB               	movwf	___lmul@multiplier& (0+255),b
  1227  002162  6BCC               	clrf	(___lmul@multiplier+1)& (0+255),b
  1228  002164  6BCD               	clrf	(___lmul@multiplier+2)& (0+255),b
  1229  002166  6BCE               	clrf	(___lmul@multiplier+3)& (0+255),b
  1230  002168  0EA0               	movlw	160
  1231  00216A  0100               	movlb	0	; () banked
  1232  00216C  6FCF               	movwf	___lmul@multiplicand& (0+255),b
  1233  00216E  0E86               	movlw	134
  1234  002170  6FD0               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1235  002172  0E01               	movlw	1
  1236  002174  6FD1               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1237  002176  0E00               	movlw	0
  1238  002178  6FD2               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1239  00217A  EC40  F014         	call	___lmul	;wreg free
  1240  00217E  C0CB  F100         	movff	?___lmul,___aldiv@dividend
  1241  002182  C0CC  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1242  002186  C0CD  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1243  00218A  C0CE  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1244  00218E  C03A  F104         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1245  002192  C03B  F105         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1246  002196  0101               	movlb	1	; () banked
  1247  002198  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1248  00219A  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1249  00219C  ECAA  F012         	call	___aldiv	;wreg free
  1250  0021A0  C100  F074         	movff	?___aldiv,_wheel_speed_2	;volatile
  1251  0021A4  C101  F075         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1252  0021A8  C102  F076         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1253  0021AC  C103  F077         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1254  0021B0                     l5070:
  1255                           
  1256                           ;ABS_Code.c: 338: }
  1257                           ;ABS_Code.c: 339: speed_array[1] = wheel_speed_2 >> 8;
  1258  0021B0  C075  F0A1         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1259                           
  1260                           ;ABS_Code.c: 340: speed_array[0] = wheel_speed_2;
  1261  0021B4  C074  F0A0         	movff	_wheel_speed_2,_speed_array	;volatile
  1262                           
  1263                           ;ABS_Code.c: 341: ENC2_measure = 0;
  1264  0021B8  923D               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1265  0021BA  D6CF               	goto	l5002
  1266  0021BC                     __end_of_main:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           prodh	equ	0xFF4
  1273                           prodl	equ	0xFF3
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           postdec1	equ	0xFE5
  1277                           fsr1l	equ	0xFE1
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _remote_frame_handler *****************
  1281 ;; Defined at:
  1282 ;;		line 351 in file "ABS_Code.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1296 ;;      Params:         0       0       0       0
  1297 ;;      Locals:         0       0       0       0
  1298 ;;      Temps:          0       1       0       0
  1299 ;;      Totals:         0       1       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    5
  1303 ;; This function calls:
  1304 ;;		_CANisTxReady
  1305 ;;		_CANsendMessage
  1306 ;;		___wmul
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text1
  1313  0021BC                     __ptext1:
  1314                           	opt stack 0
  1315  0021BC                     _remote_frame_handler:
  1316                           	opt stack 25
  1317                           
  1318                           ;ABS_Code.c: 352: if (CANisTxReady()) {
  1319                           
  1320                           ;incstack = 0
  1321  0021BC  EC14  F015         	call	_CANisTxReady	;wreg free
  1322  0021C0  0900               	iorlw	0
  1323  0021C2  B4D8               	btfsc	status,2,c
  1324  0021C4  D0E2               	goto	l741
  1325                           
  1326                           ;ABS_Code.c: 353: if (remote_frame_id == 0b00000000010) {
  1327  0021C6  0E02               	movlw	2
  1328  0021C8  0100               	movlb	0	; () banked
  1329  0021CA  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1330  0021CC  0100               	movlb	0	; () banked
  1331  0021CE  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1332  0021D0  0100               	movlb	0	; () banked
  1333  0021D2  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1334  0021D4  0100               	movlb	0	; () banked
  1335  0021D6  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1336  0021D8  A4D8               	btfss	status,2,c
  1337  0021DA  D02A               	goto	l3818
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;ABS_Code.c: 354: status_array[0] = 0x01;
  1341  0021DC  0E01               	movlw	1
  1342  0021DE  0100               	movlb	0	; () banked
  1343  0021E0  6FA8               	movwf	_status_array& (0+255),b
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;ABS_Code.c: 355: CANsendMessage(0b00000000010, status_array, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1347  0021E2  0E02               	movlw	2
  1348  0021E4  0100               	movlb	0	; () banked
  1349  0021E6  6FCB               	movwf	CANsendMessage@identifier& (0+255),b
  1350  0021E8  0E00               	movlw	0
  1351  0021EA  6FCC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1352  0021EC  0E00               	movlw	0
  1353  0021EE  6FCD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1354  0021F0  0E00               	movlw	0
  1355  0021F2  6FCE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1356  0021F4  0EA8               	movlw	low _status_array
  1357  0021F6  0100               	movlb	0	; () banked
  1358  0021F8  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1359  0021FA  0E00               	movlw	high _status_array
  1360  0021FC  0100               	movlb	0	; () banked
  1361  0021FE  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1362  002200  0E08               	movlw	8
  1363  002202  0100               	movlb	0	; () banked
  1364  002204  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1365  002206  0EBC               	movlw	188
  1366  002208  0100               	movlb	0	; () banked
  1367  00220A  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1368  00220C  EC27  F006         	call	_CANsendMessage	;wreg free
  1369                           
  1370                           ;ABS_Code.c: 356: PORTCbits.RC1 = ~PORTCbits.RC1;
  1371  002210  A282               	btfss	3970,1,c	;volatile
  1372  002212  D002               	goto	u4180
  1373  002214  0E01               	movlw	1
  1374  002216  D001               	goto	u4186
  1375  002218                     u4180:
  1376  002218  0E00               	movlw	0
  1377  00221A                     u4186:
  1378  00221A  0AFF               	xorlw	255
  1379  00221C  0100               	movlb	0	; () banked
  1380  00221E  6FDB               	movwf	??_remote_frame_handler& (0+255),b
  1381  002220  0100               	movlb	0	; () banked
  1382  002222  47DB               	rlncf	??_remote_frame_handler& (0+255),f,b
  1383  002224  5082               	movf	3970,w,c	;volatile
  1384  002226  0100               	movlb	0	; () banked
  1385  002228  19DB               	xorwf	??_remote_frame_handler& (0+255),w,b
  1386  00222A  0BFD               	andlw	-3
  1387  00222C  19DB               	xorwf	??_remote_frame_handler& (0+255),w,b
  1388  00222E  6E82               	movwf	3970,c	;volatile
  1389  002230                     l3818:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;ABS_Code.c: 357: }
  1393                           ;ABS_Code.c: 358: if (remote_frame_id == 0b00000000110) {
  1394  002230  0E06               	movlw	6
  1395  002232  0100               	movlb	0	; () banked
  1396  002234  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1397  002236  0100               	movlb	0	; () banked
  1398  002238  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1399  00223A  0100               	movlb	0	; () banked
  1400  00223C  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1401  00223E  0100               	movlb	0	; () banked
  1402  002240  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1403  002242  A4D8               	btfss	status,2,c
  1404  002244  D016               	goto	l3822
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;ABS_Code.c: 359: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1408  002246  C06C  F0CB         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1409  00224A  C06D  F0CC         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1410  00224E  C06E  F0CD         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1411  002252  C06F  F0CE         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1412  002256  0EA0               	movlw	low _speed_array
  1413  002258  0100               	movlb	0	; () banked
  1414  00225A  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1415  00225C  0E00               	movlw	high _speed_array
  1416  00225E  0100               	movlb	0	; () banked
  1417  002260  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1418  002262  0E08               	movlw	8
  1419  002264  0100               	movlb	0	; () banked
  1420  002266  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1421  002268  0EBC               	movlw	188
  1422  00226A  0100               	movlb	0	; () banked
  1423  00226C  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1424  00226E  EC27  F006         	call	_CANsendMessage	;wreg free
  1425  002272                     l3822:
  1426                           
  1427                           ;ABS_Code.c: 360: }
  1428                           ;ABS_Code.c: 361: if (remote_frame_id == 0b00000001000) {
  1429  002272  0E08               	movlw	8
  1430  002274  0100               	movlb	0	; () banked
  1431  002276  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1432  002278  0100               	movlb	0	; () banked
  1433  00227A  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1434  00227C  0100               	movlb	0	; () banked
  1435  00227E  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1436  002280  0100               	movlb	0	; () banked
  1437  002282  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1438  002284  A4D8               	btfss	status,2,c
  1439  002286  D013               	goto	l3828
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;ABS_Code.c: 362: int_counter_1 = 0;
  1443  002288  0E00               	movlw	0
  1444  00228A  0100               	movlb	0	; () banked
  1445  00228C  6F64               	movwf	_int_counter_1& (0+255),b	;volatile
  1446  00228E  0E00               	movlw	0
  1447  002290  6F65               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1448  002292  0E00               	movlw	0
  1449  002294  6F66               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1450  002296  0E00               	movlw	0
  1451  002298  6F67               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1452                           
  1453                           ;ABS_Code.c: 363: int_counter_2 = 0;
  1454  00229A  0E00               	movlw	0
  1455  00229C  0100               	movlb	0	; () banked
  1456  00229E  6F68               	movwf	_int_counter_2& (0+255),b	;volatile
  1457  0022A0  0E00               	movlw	0
  1458  0022A2  6F69               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1459  0022A4  0E00               	movlw	0
  1460  0022A6  6F6A               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1461  0022A8  0E00               	movlw	0
  1462  0022AA  6F6B               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;ABS_Code.c: 364: count_flag = 1;
  1466  0022AC  8A3D               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1467  0022AE                     l3828:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;ABS_Code.c: 365: }
  1471                           ;ABS_Code.c: 366: if (remote_frame_id == 0b00000000111) {
  1472  0022AE  0E07               	movlw	7
  1473  0022B0  0100               	movlb	0	; () banked
  1474  0022B2  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1475  0022B4  0100               	movlb	0	; () banked
  1476  0022B6  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1477  0022B8  0100               	movlb	0	; () banked
  1478  0022BA  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1479  0022BC  0100               	movlb	0	; () banked
  1480  0022BE  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1481  0022C0  A4D8               	btfss	status,2,c
  1482  0022C2  D03F               	goto	l3844
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;ABS_Code.c: 367: distance_1 = step * (int_counter_1);
  1486  0022C4  C088  F0CB         	movff	_step,___wmul@multiplier
  1487  0022C8  0100               	movlb	0	; () banked
  1488  0022CA  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  1489  0022CC  C064  F0CD         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1490  0022D0  C065  F0CE         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1491  0022D4  ECE6  F014         	call	___wmul	;wreg free
  1492  0022D8  C0CB  F07A         	movff	?___wmul,_distance_1	;volatile
  1493  0022DC  C0CC  F07B         	movff	?___wmul+1,_distance_1+1	;volatile
  1494                           
  1495                           ;ABS_Code.c: 368: distance_2 = step * (int_counter_2);
  1496  0022E0  C088  F0CB         	movff	_step,___wmul@multiplier
  1497  0022E4  0100               	movlb	0	; () banked
  1498  0022E6  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  1499  0022E8  C068  F0CD         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1500  0022EC  C069  F0CE         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1501  0022F0  ECE6  F014         	call	___wmul	;wreg free
  1502  0022F4  C0CB  F07C         	movff	?___wmul,_distance_2	;volatile
  1503  0022F8  C0CC  F07D         	movff	?___wmul+1,_distance_2+1	;volatile
  1504                           
  1505                           ;ABS_Code.c: 369: count_flag = 0;
  1506  0022FC  9A3D               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1507                           
  1508                           ;ABS_Code.c: 370: distance_array[0] = distance_1;
  1509  0022FE  C07A  F098         	movff	_distance_1,_distance_array	;volatile
  1510                           
  1511                           ;ABS_Code.c: 371: distance_array[1] = distance_1 >> 8;
  1512  002302  0100               	movlb	0	; () banked
  1513  002304  517B               	movf	(_distance_1+1)& (0+255),w,b	;volatile
  1514  002306  0100               	movlb	0	; () banked
  1515  002308  6F99               	movwf	(_distance_array+1)& (0+255),b
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;ABS_Code.c: 372: distance_array[2] = distance_2;
  1519  00230A  C07C  F09A         	movff	_distance_2,_distance_array+2	;volatile
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;ABS_Code.c: 373: distance_array[3] = distance_2 >> 8;
  1523  00230E  0100               	movlb	0	; () banked
  1524  002310  517D               	movf	(_distance_2+1)& (0+255),w,b	;volatile
  1525  002312  0100               	movlb	0	; () banked
  1526  002314  6F9B               	movwf	(_distance_array+3)& (0+255),b
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;ABS_Code.c: 374: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1530  002316  C06C  F0CB         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1531  00231A  C06D  F0CC         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1532  00231E  C06E  F0CD         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1533  002322  C06F  F0CE         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1534  002326  0E98               	movlw	low _distance_array
  1535  002328  0100               	movlb	0	; () banked
  1536  00232A  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1537  00232C  0E00               	movlw	high _distance_array
  1538  00232E  0100               	movlb	0	; () banked
  1539  002330  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1540  002332  0E08               	movlw	8
  1541  002334  0100               	movlb	0	; () banked
  1542  002336  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1543  002338  0EBC               	movlw	188
  1544  00233A  0100               	movlb	0	; () banked
  1545  00233C  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1546  00233E  EC27  F006         	call	_CANsendMessage	;wreg free
  1547  002342                     l3844:
  1548                           
  1549                           ;ABS_Code.c: 375: }
  1550                           ;ABS_Code.c: 376: if (distance_reached_flag == 1) {
  1551  002342  AC3D               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1552  002344  D017               	goto	l3848
  1553                           
  1554                           ;ABS_Code.c: 377: CANsendMessage(0b00000001101, remote_frame_array, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1555  002346  0E0D               	movlw	13
  1556  002348  0100               	movlb	0	; () banked
  1557  00234A  6FCB               	movwf	CANsendMessage@identifier& (0+255),b
  1558  00234C  0E00               	movlw	0
  1559  00234E  6FCC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1560  002350  0E00               	movlw	0
  1561  002352  6FCD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1562  002354  0E00               	movlw	0
  1563  002356  6FCE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1564  002358  0EDE               	movlw	low _remote_frame_array
  1565  00235A  0100               	movlb	0	; () banked
  1566  00235C  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1567  00235E  0E00               	movlw	high _remote_frame_array
  1568  002360  0100               	movlb	0	; () banked
  1569  002362  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1570  002364  0E08               	movlw	8
  1571  002366  0100               	movlb	0	; () banked
  1572  002368  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1573  00236A  0EFC               	movlw	252
  1574  00236C  0100               	movlb	0	; () banked
  1575  00236E  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1576  002370  EC27  F006         	call	_CANsendMessage	;wreg free
  1577  002374                     l3848:
  1578                           
  1579                           ;ABS_Code.c: 378: }
  1580                           ;ABS_Code.c: 379: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1581  002374  010F               	movlb	15	; () banked
  1582  002376  BD40               	btfsc	64,6,b	;volatile
  1583  002378  D003               	goto	l749
  1584                           
  1585                           ; BSR set to: 15
  1586  00237A  010F               	movlb	15	; () banked
  1587  00237C  AD30               	btfss	48,6,b	;volatile
  1588  00237E  D002               	goto	l747
  1589  002380                     l749:
  1590                           
  1591                           ; BSR set to: 15
  1592                           ;ABS_Code.c: 380: Tx_retry = 1;
  1593  002380  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1594                           
  1595                           ;ABS_Code.c: 381: } else {
  1596  002382  0012               	return	
  1597  002384                     l747:
  1598                           
  1599                           ; BSR set to: 15
  1600                           ;ABS_Code.c: 382: Tx_retry = 0;
  1601  002384  983D               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1602                           
  1603                           ;ABS_Code.c: 383: distance_reached_flag = 0;
  1604  002386  9C3D               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1605                           
  1606                           ; BSR set to: 15
  1607                           ;ABS_Code.c: 384: }
  1608                           ;ABS_Code.c: 385: } else {
  1609  002388  0012               	return	
  1610  00238A                     l741:
  1611                           
  1612                           ;ABS_Code.c: 386: Tx_retry = 1;
  1613  00238A  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1614  00238C  0012               	return	
  1615  00238E                     __end_of_remote_frame_handler:
  1616                           	opt stack 0
  1617                           tblptru	equ	0xFF8
  1618                           tblptrh	equ	0xFF7
  1619                           tblptrl	equ	0xFF6
  1620                           tablat	equ	0xFF5
  1621                           prodh	equ	0xFF4
  1622                           prodl	equ	0xFF3
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           postdec1	equ	0xFE5
  1626                           fsr1l	equ	0xFE1
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _CANsendMessage *****************
  1630 ;; Defined at:
  1631 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  identifier      4   26[BANK0 ] unsigned long 
  1634 ;;  data            2   30[BANK0 ] PTR unsigned char 
  1635 ;;		 -> remote_frame_array(8), distance_array(8), status_array(8), speed_array(8), 
  1636 ;;  dataLength      1   32[BANK0 ] unsigned char 
  1637 ;;  flags           1   33[BANK0 ] enum E16866
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  tamp            4   38[BANK0 ] unsigned long 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;		None               void
  1642 ;; Registers used:
  1643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1649 ;;      Params:         0       8       0       0
  1650 ;;      Locals:         0       4       0       0
  1651 ;;      Temps:          0       4       0       0
  1652 ;;      Totals:         0      16       0       0
  1653 ;;Total ram usage:       16 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    4
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_remote_frame_handler
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text2
  1664  000C4E                     __ptext2:
  1665                           	opt stack 0
  1666  000C4E                     _CANsendMessage:
  1667                           	opt stack 25
  1668                           
  1669                           ;inc\CANlib.h: 297: unsigned long tamp;
  1670                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  1671                           
  1672                           ;incstack = 0
  1673  000C4E  010F               	movlb	15	; () banked
  1674  000C50  B740               	btfsc	64,3,b	;volatile
  1675  000C52  D13F               	goto	l381
  1676                           
  1677                           ; BSR set to: 15
  1678                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  1679  000C54  C0D1  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1680                           
  1681                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  1682  000C58  0100               	movlb	0	; () banked
  1683  000C5A  ADD2               	btfss	CANsendMessage@flags& (0+255),6,b
  1684  000C5C  D003               	goto	l382
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  1688  000C5E  010F               	movlb	15	; () banked
  1689  000C60  8D45               	bsf	69,6,b	;volatile
  1690  000C62  D002               	goto	l383
  1691  000C64                     l382:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;inc\CANlib.h: 303: else
  1695                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  1696  000C64  010F               	movlb	15	; () banked
  1697  000C66  9D45               	bcf	69,6,b	;volatile
  1698  000C68                     l383:
  1699                           
  1700                           ; BSR set to: 15
  1701                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  1702  000C68  0100               	movlb	0	; () banked
  1703  000C6A  A7D2               	btfss	CANsendMessage@flags& (0+255),3,b
  1704  000C6C  D079               	goto	l384
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;inc\CANlib.h: 307: {
  1708                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  1709  000C6E  0100               	movlb	0	; () banked
  1710  000C70  51CB               	movf	CANsendMessage@identifier& (0+255),w,b
  1711  000C72  0100               	movlb	0	; () banked
  1712  000C74  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1713  000C76  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1714  000C78  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1715  000C7A  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  1719  000C7C  C0D7  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  1723  000C80  0E00               	movlw	0
  1724  000C82  0100               	movlb	0	; () banked
  1725  000C84  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  1726  000C86  0100               	movlb	0	; () banked
  1727  000C88  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1728  000C8A  0EFF               	movlw	255
  1729  000C8C  0100               	movlb	0	; () banked
  1730  000C8E  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1731  000C90  0100               	movlb	0	; () banked
  1732  000C92  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1733  000C94  0E00               	movlw	0
  1734  000C96  0100               	movlb	0	; () banked
  1735  000C98  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1736  000C9A  0100               	movlb	0	; () banked
  1737  000C9C  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1738  000C9E  0E00               	movlw	0
  1739  000CA0  0100               	movlb	0	; () banked
  1740  000CA2  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1741  000CA4  0100               	movlb	0	; () banked
  1742  000CA6  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  1746  000CA8  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  1747  000CAC  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1748  000CB0  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1749  000CB4  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1750  000CB8  C0D4  F0D3         	movff	??_CANsendMessage+1,??_CANsendMessage
  1751  000CBC  C0D5  F0D4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1752  000CC0  C0D6  F0D5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1753  000CC4  0100               	movlb	0	; () banked
  1754  000CC6  6BD6               	clrf	(??_CANsendMessage+3)& (0+255),b
  1755  000CC8  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1756  000CCC  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1757  000CD0  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1758  000CD4  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  1762  000CD8  C0D7  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  1766  000CDC  0E00               	movlw	0
  1767  000CDE  010F               	movlb	15	; () banked
  1768  000CE0  6F42               	movwf	66,b	;volatile
  1769                           
  1770                           ; BSR set to: 15
  1771                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  1772  000CE2  010F               	movlb	15	; () banked
  1773  000CE4  8742               	bsf	66,3,b	;volatile
  1774                           
  1775                           ; BSR set to: 15
  1776                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  1777  000CE6  0100               	movlb	0	; () banked
  1778  000CE8  A1CD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1779  000CEA  D002               	goto	l385
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  1783  000CEC  010F               	movlb	15	; () banked
  1784  000CEE  8142               	bsf	66,0,b	;volatile
  1785  000CF0                     l385:
  1786                           
  1787                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  1788  000CF0  0100               	movlb	0	; () banked
  1789  000CF2  A3CD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1790  000CF4  D002               	goto	l386
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  1794  000CF6  010F               	movlb	15	; () banked
  1795  000CF8  8342               	bsf	66,1,b	;volatile
  1796  000CFA                     l386:
  1797                           
  1798                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  1799  000CFA  0100               	movlb	0	; () banked
  1800  000CFC  A5CD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1801  000CFE  D002               	goto	l387
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  1805  000D00  010F               	movlb	15	; () banked
  1806  000D02  8B42               	bsf	66,5,b	;volatile
  1807  000D04                     l387:
  1808                           
  1809                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  1810  000D04  0100               	movlb	0	; () banked
  1811  000D06  A7CD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1812  000D08  D002               	goto	l388
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  1816  000D0A  010F               	movlb	15	; () banked
  1817  000D0C  8D42               	bsf	66,6,b	;volatile
  1818  000D0E                     l388:
  1819                           
  1820                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  1821  000D0E  0100               	movlb	0	; () banked
  1822  000D10  A9CD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1823  000D12  D002               	goto	l3324
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  1827  000D14  010F               	movlb	15	; () banked
  1828  000D16  8F42               	bsf	66,7,b	;volatile
  1829  000D18                     l3324:
  1830                           
  1831                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  1832  000D18  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  1833  000D1C  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1834  000D20  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1835  000D24  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1836  000D28  0E16               	movlw	22
  1837  000D2A  D006               	goto	u3530
  1838  000D2C                     u3535:
  1839  000D2C  0100               	movlb	0	; () banked
  1840  000D2E  90D8               	bcf	status,0,c
  1841  000D30  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1842  000D32  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1843  000D34  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1844  000D36  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  1845  000D38                     u3530:
  1846  000D38  2EE8               	decfsz	wreg,f,c
  1847  000D3A  D7F8               	goto	u3535
  1848  000D3C  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1849  000D40  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1850  000D44  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1851  000D48  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  1855  000D4C  0100               	movlb	0	; () banked
  1856  000D4E  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  1857  000D50  0100               	movlb	0	; () banked
  1858  000D52  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1859  000D54  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1860  000D56  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1861  000D58  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  1865  000D5A  C0D7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1866                           
  1867                           ;inc\CANlib.h: 333: }
  1868  000D5E  D059               	goto	l3344
  1869  000D60                     l384:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;inc\CANlib.h: 335: else
  1873                           ;inc\CANlib.h: 337: {
  1874                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  1875  000D60  010F               	movlb	15	; () banked
  1876  000D62  9742               	bcf	66,3,b	;volatile
  1877                           
  1878                           ; BSR set to: 15
  1879                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  1880  000D64  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  1881  000D68  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1882  000D6C  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1883  000D70  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1884  000D74  0E04               	movlw	4
  1885  000D76  D006               	goto	u3540
  1886  000D78                     u3545:
  1887  000D78  0100               	movlb	0	; () banked
  1888  000D7A  90D8               	bcf	status,0,c
  1889  000D7C  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1890  000D7E  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1891  000D80  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1892  000D82  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  1893  000D84                     u3540:
  1894  000D84  2EE8               	decfsz	wreg,f,c
  1895  000D86  D7F8               	goto	u3545
  1896  000D88  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1897  000D8C  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1898  000D90  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1899  000D94  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  1903  000D98  0100               	movlb	0	; () banked
  1904  000D9A  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  1905  000D9C  0100               	movlb	0	; () banked
  1906  000D9E  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1907  000DA0  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1908  000DA2  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1909  000DA4  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  1913  000DA6  C0D7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  1917  000DAA  0E07               	movlw	7
  1918  000DAC  0100               	movlb	0	; () banked
  1919  000DAE  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  1920  000DB0  0100               	movlb	0	; () banked
  1921  000DB2  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1922  000DB4  0E00               	movlw	0
  1923  000DB6  0100               	movlb	0	; () banked
  1924  000DB8  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1925  000DBA  0100               	movlb	0	; () banked
  1926  000DBC  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1927  000DBE  0E00               	movlw	0
  1928  000DC0  0100               	movlb	0	; () banked
  1929  000DC2  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1930  000DC4  0100               	movlb	0	; () banked
  1931  000DC6  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1932  000DC8  0E00               	movlw	0
  1933  000DCA  0100               	movlb	0	; () banked
  1934  000DCC  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1935  000DCE  0100               	movlb	0	; () banked
  1936  000DD0  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  1940  000DD2  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  1941  000DD6  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1942  000DDA  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1943  000DDE  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1944  000DE2  0E05               	movlw	5
  1945  000DE4                     u3555:
  1946  000DE4  90D8               	bcf	status,0,c
  1947  000DE6  0100               	movlb	0	; () banked
  1948  000DE8  37D3               	rlcf	??_CANsendMessage& (0+255),f,b
  1949  000DEA  37D4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1950  000DEC  37D5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1951  000DEE  37D6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1952  000DF0  2EE8               	decfsz	wreg,f,c
  1953  000DF2  D7F8               	goto	u3555
  1954  000DF4  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1955  000DF8  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1956  000DFC  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1957  000E00  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  1961  000E04  010F               	movlb	15	; () banked
  1962  000E06  5142               	movf	66,w,b	;volatile
  1963  000E08  0B1F               	andlw	31
  1964  000E0A  010F               	movlb	15	; () banked
  1965  000E0C  6F42               	movwf	66,b	;volatile
  1966                           
  1967                           ; BSR set to: 15
  1968                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  1969  000E0E  C0D7  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1970  000E12                     l3344:
  1971                           
  1972                           ;inc\CANlib.h: 348: }
  1973                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  1974  000E12  0100               	movlb	0	; () banked
  1975  000E14  A1D2               	btfss	CANsendMessage@flags& (0+255),0,b
  1976  000E16  D003               	goto	l391
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  1980  000E18  010F               	movlb	15	; () banked
  1981  000E1A  8140               	bsf	64,0,b	;volatile
  1982  000E1C  D002               	goto	l392
  1983  000E1E                     l391:
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;inc\CANlib.h: 352: else
  1987                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  1988  000E1E  010F               	movlb	15	; () banked
  1989  000E20  9140               	bcf	64,0,b	;volatile
  1990  000E22                     l392:
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  1994  000E22  0100               	movlb	0	; () banked
  1995  000E24  A3D2               	btfss	CANsendMessage@flags& (0+255),1,b
  1996  000E26  D003               	goto	l393
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  2000  000E28  010F               	movlb	15	; () banked
  2001  000E2A  8340               	bsf	64,1,b	;volatile
  2002  000E2C  D002               	goto	l3350
  2003  000E2E                     l393:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;inc\CANlib.h: 356: else
  2007                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  2008  000E2E  010F               	movlb	15	; () banked
  2009  000E30  9340               	bcf	64,1,b	;volatile
  2010  000E32                     l3350:
  2011                           
  2012                           ; BSR set to: 15
  2013                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  2014  000E32  C0CF  FFD9         	movff	CANsendMessage@data,fsr2l
  2015  000E36  C0D0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2016  000E3A  50DF               	movf	indf2,w,c
  2017  000E3C  010F               	movlb	15	; () banked
  2018  000E3E  6F46               	movwf	70,b	;volatile
  2019                           
  2020                           ; BSR set to: 15
  2021                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  2022  000E40  0100               	movlb	0	; () banked
  2023  000E42  EE20 F001          	lfsr	2,1
  2024  000E46  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2025  000E48  26D9               	addwf	fsr2l,f,c
  2026  000E4A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2027  000E4C  22DA               	addwfc	fsr2h,f,c
  2028  000E4E  50DF               	movf	indf2,w,c
  2029  000E50  010F               	movlb	15	; () banked
  2030  000E52  6F47               	movwf	71,b	;volatile
  2031                           
  2032                           ; BSR set to: 15
  2033                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  2034  000E54  0100               	movlb	0	; () banked
  2035  000E56  EE20 F002          	lfsr	2,2
  2036  000E5A  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2037  000E5C  26D9               	addwf	fsr2l,f,c
  2038  000E5E  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2039  000E60  22DA               	addwfc	fsr2h,f,c
  2040  000E62  50DF               	movf	indf2,w,c
  2041  000E64  010F               	movlb	15	; () banked
  2042  000E66  6F48               	movwf	72,b	;volatile
  2043                           
  2044                           ; BSR set to: 15
  2045                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  2046  000E68  0100               	movlb	0	; () banked
  2047  000E6A  EE20 F003          	lfsr	2,3
  2048  000E6E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2049  000E70  26D9               	addwf	fsr2l,f,c
  2050  000E72  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2051  000E74  22DA               	addwfc	fsr2h,f,c
  2052  000E76  50DF               	movf	indf2,w,c
  2053  000E78  010F               	movlb	15	; () banked
  2054  000E7A  6F49               	movwf	73,b	;volatile
  2055                           
  2056                           ; BSR set to: 15
  2057                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  2058  000E7C  0100               	movlb	0	; () banked
  2059  000E7E  EE20 F004          	lfsr	2,4
  2060  000E82  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2061  000E84  26D9               	addwf	fsr2l,f,c
  2062  000E86  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2063  000E88  22DA               	addwfc	fsr2h,f,c
  2064  000E8A  50DF               	movf	indf2,w,c
  2065  000E8C  010F               	movlb	15	; () banked
  2066  000E8E  6F4A               	movwf	74,b	;volatile
  2067                           
  2068                           ; BSR set to: 15
  2069                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  2070  000E90  0100               	movlb	0	; () banked
  2071  000E92  EE20 F005          	lfsr	2,5
  2072  000E96  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2073  000E98  26D9               	addwf	fsr2l,f,c
  2074  000E9A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2075  000E9C  22DA               	addwfc	fsr2h,f,c
  2076  000E9E  50DF               	movf	indf2,w,c
  2077  000EA0  010F               	movlb	15	; () banked
  2078  000EA2  6F4B               	movwf	75,b	;volatile
  2079                           
  2080                           ; BSR set to: 15
  2081                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  2082  000EA4  0100               	movlb	0	; () banked
  2083  000EA6  EE20 F006          	lfsr	2,6
  2084  000EAA  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2085  000EAC  26D9               	addwf	fsr2l,f,c
  2086  000EAE  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2087  000EB0  22DA               	addwfc	fsr2h,f,c
  2088  000EB2  50DF               	movf	indf2,w,c
  2089  000EB4  010F               	movlb	15	; () banked
  2090  000EB6  6F4C               	movwf	76,b	;volatile
  2091                           
  2092                           ; BSR set to: 15
  2093                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  2094  000EB8  0100               	movlb	0	; () banked
  2095  000EBA  EE20 F007          	lfsr	2,7
  2096  000EBE  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2097  000EC0  26D9               	addwf	fsr2l,f,c
  2098  000EC2  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2099  000EC4  22DA               	addwfc	fsr2h,f,c
  2100  000EC6  50DF               	movf	indf2,w,c
  2101  000EC8  010F               	movlb	15	; () banked
  2102  000ECA  6F4D               	movwf	77,b	;volatile
  2103                           
  2104                           ; BSR set to: 15
  2105                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  2106  000ECC  010F               	movlb	15	; () banked
  2107  000ECE  8740               	bsf	64,3,b	;volatile
  2108                           
  2109                           ; BSR set to: 15
  2110                           ;inc\CANlib.h: 369: return;
  2111  000ED0  0012               	return	
  2112  000ED2                     l381:
  2113                           
  2114                           ; BSR set to: 15
  2115                           ;inc\CANlib.h: 370: }
  2116                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  2117  000ED2  010F               	movlb	15	; () banked
  2118  000ED4  B730               	btfsc	48,3,b	;volatile
  2119  000ED6  D13F               	goto	l396
  2120                           
  2121                           ; BSR set to: 15
  2122                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  2123  000ED8  C0D1  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2124                           
  2125                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  2126  000EDC  0100               	movlb	0	; () banked
  2127  000EDE  ADD2               	btfss	CANsendMessage@flags& (0+255),6,b
  2128  000EE0  D003               	goto	l397
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  2132  000EE2  010F               	movlb	15	; () banked
  2133  000EE4  8D35               	bsf	53,6,b	;volatile
  2134  000EE6  D002               	goto	l398
  2135  000EE8                     l397:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;inc\CANlib.h: 379: else
  2139                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  2140  000EE8  010F               	movlb	15	; () banked
  2141  000EEA  9D35               	bcf	53,6,b	;volatile
  2142  000EEC                     l398:
  2143                           
  2144                           ; BSR set to: 15
  2145                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  2146  000EEC  0100               	movlb	0	; () banked
  2147  000EEE  A7D2               	btfss	CANsendMessage@flags& (0+255),3,b
  2148  000EF0  D079               	goto	l399
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;inc\CANlib.h: 383: {
  2152                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  2153  000EF2  0100               	movlb	0	; () banked
  2154  000EF4  51CB               	movf	CANsendMessage@identifier& (0+255),w,b
  2155  000EF6  0100               	movlb	0	; () banked
  2156  000EF8  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2157  000EFA  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2158  000EFC  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2159  000EFE  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  2163  000F00  C0D7  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  2167  000F04  0E00               	movlw	0
  2168  000F06  0100               	movlb	0	; () banked
  2169  000F08  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2170  000F0A  0100               	movlb	0	; () banked
  2171  000F0C  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2172  000F0E  0EFF               	movlw	255
  2173  000F10  0100               	movlb	0	; () banked
  2174  000F12  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2175  000F14  0100               	movlb	0	; () banked
  2176  000F16  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2177  000F18  0E00               	movlw	0
  2178  000F1A  0100               	movlb	0	; () banked
  2179  000F1C  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2180  000F1E  0100               	movlb	0	; () banked
  2181  000F20  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2182  000F22  0E00               	movlw	0
  2183  000F24  0100               	movlb	0	; () banked
  2184  000F26  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2185  000F28  0100               	movlb	0	; () banked
  2186  000F2A  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  2190  000F2C  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2191  000F30  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2192  000F34  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2193  000F38  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2194  000F3C  C0D4  F0D3         	movff	??_CANsendMessage+1,??_CANsendMessage
  2195  000F40  C0D5  F0D4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2196  000F44  C0D6  F0D5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2197  000F48  0100               	movlb	0	; () banked
  2198  000F4A  6BD6               	clrf	(??_CANsendMessage+3)& (0+255),b
  2199  000F4C  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2200  000F50  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2201  000F54  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2202  000F58  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  2206  000F5C  C0D7  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  2210  000F60  0E00               	movlw	0
  2211  000F62  010F               	movlb	15	; () banked
  2212  000F64  6F32               	movwf	50,b	;volatile
  2213                           
  2214                           ; BSR set to: 15
  2215                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  2216  000F66  010F               	movlb	15	; () banked
  2217  000F68  8732               	bsf	50,3,b	;volatile
  2218                           
  2219                           ; BSR set to: 15
  2220                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  2221  000F6A  0100               	movlb	0	; () banked
  2222  000F6C  A1CD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2223  000F6E  D002               	goto	l400
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  2227  000F70  010F               	movlb	15	; () banked
  2228  000F72  8132               	bsf	50,0,b	;volatile
  2229  000F74                     l400:
  2230                           
  2231                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  2232  000F74  0100               	movlb	0	; () banked
  2233  000F76  A3CD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2234  000F78  D002               	goto	l401
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  2238  000F7A  010F               	movlb	15	; () banked
  2239  000F7C  8332               	bsf	50,1,b	;volatile
  2240  000F7E                     l401:
  2241                           
  2242                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  2243  000F7E  0100               	movlb	0	; () banked
  2244  000F80  A5CD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2245  000F82  D002               	goto	l402
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  2249  000F84  010F               	movlb	15	; () banked
  2250  000F86  8B32               	bsf	50,5,b	;volatile
  2251  000F88                     l402:
  2252                           
  2253                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  2254  000F88  0100               	movlb	0	; () banked
  2255  000F8A  A7CD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2256  000F8C  D002               	goto	l403
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  2260  000F8E  010F               	movlb	15	; () banked
  2261  000F90  8D32               	bsf	50,6,b	;volatile
  2262  000F92                     l403:
  2263                           
  2264                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  2265  000F92  0100               	movlb	0	; () banked
  2266  000F94  A9CD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2267  000F96  D002               	goto	l3400
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  2271  000F98  010F               	movlb	15	; () banked
  2272  000F9A  8F32               	bsf	50,7,b	;volatile
  2273  000F9C                     l3400:
  2274                           
  2275                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  2276  000F9C  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2277  000FA0  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2278  000FA4  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2279  000FA8  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2280  000FAC  0E16               	movlw	22
  2281  000FAE  D006               	goto	u3660
  2282  000FB0                     u3665:
  2283  000FB0  0100               	movlb	0	; () banked
  2284  000FB2  90D8               	bcf	status,0,c
  2285  000FB4  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2286  000FB6  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2287  000FB8  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2288  000FBA  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2289  000FBC                     u3660:
  2290  000FBC  2EE8               	decfsz	wreg,f,c
  2291  000FBE  D7F8               	goto	u3665
  2292  000FC0  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2293  000FC4  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2294  000FC8  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2295  000FCC  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  2299  000FD0  0100               	movlb	0	; () banked
  2300  000FD2  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2301  000FD4  0100               	movlb	0	; () banked
  2302  000FD6  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2303  000FD8  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2304  000FDA  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2305  000FDC  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  2309  000FDE  C0D7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2310                           
  2311                           ;inc\CANlib.h: 408: }
  2312  000FE2  D059               	goto	l3420
  2313  000FE4                     l399:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;inc\CANlib.h: 410: else
  2317                           ;inc\CANlib.h: 412: {
  2318                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  2319  000FE4  010F               	movlb	15	; () banked
  2320  000FE6  9732               	bcf	50,3,b	;volatile
  2321                           
  2322                           ; BSR set to: 15
  2323                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  2324  000FE8  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2325  000FEC  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2326  000FF0  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2327  000FF4  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2328  000FF8  0E04               	movlw	4
  2329  000FFA  D006               	goto	u3670
  2330  000FFC                     u3675:
  2331  000FFC  0100               	movlb	0	; () banked
  2332  000FFE  90D8               	bcf	status,0,c
  2333  001000  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2334  001002  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2335  001004  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2336  001006  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2337  001008                     u3670:
  2338  001008  2EE8               	decfsz	wreg,f,c
  2339  00100A  D7F8               	goto	u3675
  2340  00100C  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2341  001010  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2342  001014  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2343  001018  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  2347  00101C  0100               	movlb	0	; () banked
  2348  00101E  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2349  001020  0100               	movlb	0	; () banked
  2350  001022  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2351  001024  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2352  001026  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2353  001028  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  2357  00102A  C0D7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  2361  00102E  0E07               	movlw	7
  2362  001030  0100               	movlb	0	; () banked
  2363  001032  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2364  001034  0100               	movlb	0	; () banked
  2365  001036  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2366  001038  0E00               	movlw	0
  2367  00103A  0100               	movlb	0	; () banked
  2368  00103C  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2369  00103E  0100               	movlb	0	; () banked
  2370  001040  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2371  001042  0E00               	movlw	0
  2372  001044  0100               	movlb	0	; () banked
  2373  001046  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2374  001048  0100               	movlb	0	; () banked
  2375  00104A  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2376  00104C  0E00               	movlw	0
  2377  00104E  0100               	movlb	0	; () banked
  2378  001050  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2379  001052  0100               	movlb	0	; () banked
  2380  001054  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  2384  001056  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2385  00105A  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2386  00105E  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2387  001062  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2388  001066  0E05               	movlw	5
  2389  001068                     u3685:
  2390  001068  90D8               	bcf	status,0,c
  2391  00106A  0100               	movlb	0	; () banked
  2392  00106C  37D3               	rlcf	??_CANsendMessage& (0+255),f,b
  2393  00106E  37D4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2394  001070  37D5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2395  001072  37D6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2396  001074  2EE8               	decfsz	wreg,f,c
  2397  001076  D7F8               	goto	u3685
  2398  001078  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2399  00107C  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2400  001080  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2401  001084  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  2405  001088  010F               	movlb	15	; () banked
  2406  00108A  5132               	movf	50,w,b	;volatile
  2407  00108C  0B1F               	andlw	31
  2408  00108E  010F               	movlb	15	; () banked
  2409  001090  6F32               	movwf	50,b	;volatile
  2410                           
  2411                           ; BSR set to: 15
  2412                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  2413  001092  C0D7  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2414  001096                     l3420:
  2415                           
  2416                           ;inc\CANlib.h: 423: }
  2417                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  2418  001096  0100               	movlb	0	; () banked
  2419  001098  A1D2               	btfss	CANsendMessage@flags& (0+255),0,b
  2420  00109A  D003               	goto	l406
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  2424  00109C  010F               	movlb	15	; () banked
  2425  00109E  8130               	bsf	48,0,b	;volatile
  2426  0010A0  D002               	goto	l407
  2427  0010A2                     l406:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;inc\CANlib.h: 427: else
  2431                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  2432  0010A2  010F               	movlb	15	; () banked
  2433  0010A4  9130               	bcf	48,0,b	;volatile
  2434  0010A6                     l407:
  2435                           
  2436                           ; BSR set to: 15
  2437                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  2438  0010A6  0100               	movlb	0	; () banked
  2439  0010A8  A3D2               	btfss	CANsendMessage@flags& (0+255),1,b
  2440  0010AA  D003               	goto	l408
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  2444  0010AC  010F               	movlb	15	; () banked
  2445  0010AE  8330               	bsf	48,1,b	;volatile
  2446  0010B0  D002               	goto	l3426
  2447  0010B2                     l408:
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;inc\CANlib.h: 431: else
  2451                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  2452  0010B2  010F               	movlb	15	; () banked
  2453  0010B4  9330               	bcf	48,1,b	;volatile
  2454  0010B6                     l3426:
  2455                           
  2456                           ; BSR set to: 15
  2457                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  2458  0010B6  C0CF  FFD9         	movff	CANsendMessage@data,fsr2l
  2459  0010BA  C0D0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2460  0010BE  50DF               	movf	indf2,w,c
  2461  0010C0  010F               	movlb	15	; () banked
  2462  0010C2  6F36               	movwf	54,b	;volatile
  2463                           
  2464                           ; BSR set to: 15
  2465                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  2466  0010C4  0100               	movlb	0	; () banked
  2467  0010C6  EE20 F001          	lfsr	2,1
  2468  0010CA  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2469  0010CC  26D9               	addwf	fsr2l,f,c
  2470  0010CE  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2471  0010D0  22DA               	addwfc	fsr2h,f,c
  2472  0010D2  50DF               	movf	indf2,w,c
  2473  0010D4  010F               	movlb	15	; () banked
  2474  0010D6  6F37               	movwf	55,b	;volatile
  2475                           
  2476                           ; BSR set to: 15
  2477                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  2478  0010D8  0100               	movlb	0	; () banked
  2479  0010DA  EE20 F002          	lfsr	2,2
  2480  0010DE  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2481  0010E0  26D9               	addwf	fsr2l,f,c
  2482  0010E2  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2483  0010E4  22DA               	addwfc	fsr2h,f,c
  2484  0010E6  50DF               	movf	indf2,w,c
  2485  0010E8  010F               	movlb	15	; () banked
  2486  0010EA  6F38               	movwf	56,b	;volatile
  2487                           
  2488                           ; BSR set to: 15
  2489                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  2490  0010EC  0100               	movlb	0	; () banked
  2491  0010EE  EE20 F003          	lfsr	2,3
  2492  0010F2  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2493  0010F4  26D9               	addwf	fsr2l,f,c
  2494  0010F6  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2495  0010F8  22DA               	addwfc	fsr2h,f,c
  2496  0010FA  50DF               	movf	indf2,w,c
  2497  0010FC  010F               	movlb	15	; () banked
  2498  0010FE  6F39               	movwf	57,b	;volatile
  2499                           
  2500                           ; BSR set to: 15
  2501                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  2502  001100  0100               	movlb	0	; () banked
  2503  001102  EE20 F004          	lfsr	2,4
  2504  001106  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2505  001108  26D9               	addwf	fsr2l,f,c
  2506  00110A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2507  00110C  22DA               	addwfc	fsr2h,f,c
  2508  00110E  50DF               	movf	indf2,w,c
  2509  001110  010F               	movlb	15	; () banked
  2510  001112  6F3A               	movwf	58,b	;volatile
  2511                           
  2512                           ; BSR set to: 15
  2513                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  2514  001114  0100               	movlb	0	; () banked
  2515  001116  EE20 F005          	lfsr	2,5
  2516  00111A  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2517  00111C  26D9               	addwf	fsr2l,f,c
  2518  00111E  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2519  001120  22DA               	addwfc	fsr2h,f,c
  2520  001122  50DF               	movf	indf2,w,c
  2521  001124  010F               	movlb	15	; () banked
  2522  001126  6F3B               	movwf	59,b	;volatile
  2523                           
  2524                           ; BSR set to: 15
  2525                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  2526  001128  0100               	movlb	0	; () banked
  2527  00112A  EE20 F006          	lfsr	2,6
  2528  00112E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2529  001130  26D9               	addwf	fsr2l,f,c
  2530  001132  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2531  001134  22DA               	addwfc	fsr2h,f,c
  2532  001136  50DF               	movf	indf2,w,c
  2533  001138  010F               	movlb	15	; () banked
  2534  00113A  6F3C               	movwf	60,b	;volatile
  2535                           
  2536                           ; BSR set to: 15
  2537                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  2538  00113C  0100               	movlb	0	; () banked
  2539  00113E  EE20 F007          	lfsr	2,7
  2540  001142  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2541  001144  26D9               	addwf	fsr2l,f,c
  2542  001146  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2543  001148  22DA               	addwfc	fsr2h,f,c
  2544  00114A  50DF               	movf	indf2,w,c
  2545  00114C  010F               	movlb	15	; () banked
  2546  00114E  6F3D               	movwf	61,b	;volatile
  2547                           
  2548                           ; BSR set to: 15
  2549                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  2550  001150  010F               	movlb	15	; () banked
  2551  001152  8730               	bsf	48,3,b	;volatile
  2552                           
  2553                           ; BSR set to: 15
  2554                           ;inc\CANlib.h: 445: return;
  2555  001154  0012               	return	
  2556  001156                     l396:
  2557                           
  2558                           ; BSR set to: 15
  2559                           ;inc\CANlib.h: 446: }
  2560                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  2561  001156  010F               	movlb	15	; () banked
  2562  001158  B720               	btfsc	32,3,b	;volatile
  2563  00115A  0012               	return	
  2564                           
  2565                           ; BSR set to: 15
  2566                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  2567  00115C  C0D1  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2568                           
  2569                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  2570  001160  0100               	movlb	0	; () banked
  2571  001162  ADD2               	btfss	CANsendMessage@flags& (0+255),6,b
  2572  001164  D003               	goto	l411
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  2576  001166  010F               	movlb	15	; () banked
  2577  001168  8D25               	bsf	37,6,b	;volatile
  2578  00116A  D002               	goto	l412
  2579  00116C                     l411:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;inc\CANlib.h: 455: else
  2583                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  2584  00116C  010F               	movlb	15	; () banked
  2585  00116E  9D25               	bcf	37,6,b	;volatile
  2586  001170                     l412:
  2587                           
  2588                           ; BSR set to: 15
  2589                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  2590  001170  0100               	movlb	0	; () banked
  2591  001172  A7D2               	btfss	CANsendMessage@flags& (0+255),3,b
  2592  001174  D079               	goto	l413
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;inc\CANlib.h: 459: {
  2596                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  2597  001176  0100               	movlb	0	; () banked
  2598  001178  51CB               	movf	CANsendMessage@identifier& (0+255),w,b
  2599  00117A  0100               	movlb	0	; () banked
  2600  00117C  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2601  00117E  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2602  001180  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2603  001182  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  2607  001184  C0D7  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  2611  001188  0E00               	movlw	0
  2612  00118A  0100               	movlb	0	; () banked
  2613  00118C  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2614  00118E  0100               	movlb	0	; () banked
  2615  001190  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2616  001192  0EFF               	movlw	255
  2617  001194  0100               	movlb	0	; () banked
  2618  001196  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2619  001198  0100               	movlb	0	; () banked
  2620  00119A  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2621  00119C  0E00               	movlw	0
  2622  00119E  0100               	movlb	0	; () banked
  2623  0011A0  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2624  0011A2  0100               	movlb	0	; () banked
  2625  0011A4  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2626  0011A6  0E00               	movlw	0
  2627  0011A8  0100               	movlb	0	; () banked
  2628  0011AA  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2629  0011AC  0100               	movlb	0	; () banked
  2630  0011AE  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  2634  0011B0  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2635  0011B4  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2636  0011B8  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2637  0011BC  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2638  0011C0  C0D4  F0D3         	movff	??_CANsendMessage+1,??_CANsendMessage
  2639  0011C4  C0D5  F0D4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2640  0011C8  C0D6  F0D5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2641  0011CC  0100               	movlb	0	; () banked
  2642  0011CE  6BD6               	clrf	(??_CANsendMessage+3)& (0+255),b
  2643  0011D0  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2644  0011D4  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2645  0011D8  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2646  0011DC  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  2650  0011E0  C0D7  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  2654  0011E4  0E00               	movlw	0
  2655  0011E6  010F               	movlb	15	; () banked
  2656  0011E8  6F22               	movwf	34,b	;volatile
  2657                           
  2658                           ; BSR set to: 15
  2659                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  2660  0011EA  010F               	movlb	15	; () banked
  2661  0011EC  8722               	bsf	34,3,b	;volatile
  2662                           
  2663                           ; BSR set to: 15
  2664                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  2665  0011EE  0100               	movlb	0	; () banked
  2666  0011F0  A1CD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2667  0011F2  D002               	goto	l414
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  2671  0011F4  010F               	movlb	15	; () banked
  2672  0011F6  8122               	bsf	34,0,b	;volatile
  2673  0011F8                     l414:
  2674                           
  2675                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  2676  0011F8  0100               	movlb	0	; () banked
  2677  0011FA  A3CD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2678  0011FC  D002               	goto	l415
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  2682  0011FE  010F               	movlb	15	; () banked
  2683  001200  8322               	bsf	34,1,b	;volatile
  2684  001202                     l415:
  2685                           
  2686                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  2687  001202  0100               	movlb	0	; () banked
  2688  001204  A5CD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2689  001206  D002               	goto	l416
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  2693  001208  010F               	movlb	15	; () banked
  2694  00120A  8B22               	bsf	34,5,b	;volatile
  2695  00120C                     l416:
  2696                           
  2697                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  2698  00120C  0100               	movlb	0	; () banked
  2699  00120E  A7CD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2700  001210  D002               	goto	l417
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  2704  001212  010F               	movlb	15	; () banked
  2705  001214  8D22               	bsf	34,6,b	;volatile
  2706  001216                     l417:
  2707                           
  2708                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  2709  001216  0100               	movlb	0	; () banked
  2710  001218  A9CD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2711  00121A  D002               	goto	l3476
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  2715  00121C  010F               	movlb	15	; () banked
  2716  00121E  8F22               	bsf	34,7,b	;volatile
  2717  001220                     l3476:
  2718                           
  2719                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  2720  001220  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2721  001224  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2722  001228  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2723  00122C  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2724  001230  0E16               	movlw	22
  2725  001232  D006               	goto	u3790
  2726  001234                     u3795:
  2727  001234  0100               	movlb	0	; () banked
  2728  001236  90D8               	bcf	status,0,c
  2729  001238  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2730  00123A  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2731  00123C  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2732  00123E  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2733  001240                     u3790:
  2734  001240  2EE8               	decfsz	wreg,f,c
  2735  001242  D7F8               	goto	u3795
  2736  001244  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2737  001248  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2738  00124C  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2739  001250  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  2743  001254  0100               	movlb	0	; () banked
  2744  001256  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2745  001258  0100               	movlb	0	; () banked
  2746  00125A  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2747  00125C  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2748  00125E  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2749  001260  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  2753  001262  C0D7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2754                           
  2755                           ;inc\CANlib.h: 484: }
  2756  001266  D059               	goto	l3496
  2757  001268                     l413:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;inc\CANlib.h: 486: else
  2761                           ;inc\CANlib.h: 488: {
  2762                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  2763  001268  010F               	movlb	15	; () banked
  2764  00126A  9722               	bcf	34,3,b	;volatile
  2765                           
  2766                           ; BSR set to: 15
  2767                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  2768  00126C  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2769  001270  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2770  001274  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2771  001278  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2772  00127C  0E04               	movlw	4
  2773  00127E  D006               	goto	u3800
  2774  001280                     u3805:
  2775  001280  0100               	movlb	0	; () banked
  2776  001282  90D8               	bcf	status,0,c
  2777  001284  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2778  001286  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2779  001288  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2780  00128A  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2781  00128C                     u3800:
  2782  00128C  2EE8               	decfsz	wreg,f,c
  2783  00128E  D7F8               	goto	u3805
  2784  001290  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2785  001294  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2786  001298  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2787  00129C  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  2791  0012A0  0100               	movlb	0	; () banked
  2792  0012A2  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2793  0012A4  0100               	movlb	0	; () banked
  2794  0012A6  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2795  0012A8  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2796  0012AA  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2797  0012AC  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  2801  0012AE  C0D7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  2805  0012B2  0E07               	movlw	7
  2806  0012B4  0100               	movlb	0	; () banked
  2807  0012B6  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2808  0012B8  0100               	movlb	0	; () banked
  2809  0012BA  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2810  0012BC  0E00               	movlw	0
  2811  0012BE  0100               	movlb	0	; () banked
  2812  0012C0  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2813  0012C2  0100               	movlb	0	; () banked
  2814  0012C4  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2815  0012C6  0E00               	movlw	0
  2816  0012C8  0100               	movlb	0	; () banked
  2817  0012CA  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2818  0012CC  0100               	movlb	0	; () banked
  2819  0012CE  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2820  0012D0  0E00               	movlw	0
  2821  0012D2  0100               	movlb	0	; () banked
  2822  0012D4  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2823  0012D6  0100               	movlb	0	; () banked
  2824  0012D8  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  2828  0012DA  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2829  0012DE  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2830  0012E2  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2831  0012E6  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2832  0012EA  0E05               	movlw	5
  2833  0012EC                     u3815:
  2834  0012EC  90D8               	bcf	status,0,c
  2835  0012EE  0100               	movlb	0	; () banked
  2836  0012F0  37D3               	rlcf	??_CANsendMessage& (0+255),f,b
  2837  0012F2  37D4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2838  0012F4  37D5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2839  0012F6  37D6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2840  0012F8  2EE8               	decfsz	wreg,f,c
  2841  0012FA  D7F8               	goto	u3815
  2842  0012FC  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2843  001300  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2844  001304  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2845  001308  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  2849  00130C  010F               	movlb	15	; () banked
  2850  00130E  5122               	movf	34,w,b	;volatile
  2851  001310  0B1F               	andlw	31
  2852  001312  010F               	movlb	15	; () banked
  2853  001314  6F22               	movwf	34,b	;volatile
  2854                           
  2855                           ; BSR set to: 15
  2856                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  2857  001316  C0D7  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2858  00131A                     l3496:
  2859                           
  2860                           ;inc\CANlib.h: 499: }
  2861                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  2862  00131A  0100               	movlb	0	; () banked
  2863  00131C  A1D2               	btfss	CANsendMessage@flags& (0+255),0,b
  2864  00131E  D003               	goto	l420
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  2868  001320  010F               	movlb	15	; () banked
  2869  001322  8120               	bsf	32,0,b	;volatile
  2870  001324  D002               	goto	l421
  2871  001326                     l420:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;inc\CANlib.h: 503: else
  2875                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  2876  001326  010F               	movlb	15	; () banked
  2877  001328  9120               	bcf	32,0,b	;volatile
  2878  00132A                     l421:
  2879                           
  2880                           ; BSR set to: 15
  2881                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  2882  00132A  0100               	movlb	0	; () banked
  2883  00132C  A3D2               	btfss	CANsendMessage@flags& (0+255),1,b
  2884  00132E  D003               	goto	l422
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  2888  001330  010F               	movlb	15	; () banked
  2889  001332  8320               	bsf	32,1,b	;volatile
  2890  001334  D002               	goto	l3502
  2891  001336                     l422:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;inc\CANlib.h: 507: else
  2895                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  2896  001336  010F               	movlb	15	; () banked
  2897  001338  9320               	bcf	32,1,b	;volatile
  2898  00133A                     l3502:
  2899                           
  2900                           ; BSR set to: 15
  2901                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  2902  00133A  C0CF  FFD9         	movff	CANsendMessage@data,fsr2l
  2903  00133E  C0D0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2904  001342  50DF               	movf	indf2,w,c
  2905  001344  010F               	movlb	15	; () banked
  2906  001346  6F26               	movwf	38,b	;volatile
  2907                           
  2908                           ; BSR set to: 15
  2909                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  2910  001348  0100               	movlb	0	; () banked
  2911  00134A  EE20 F001          	lfsr	2,1
  2912  00134E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2913  001350  26D9               	addwf	fsr2l,f,c
  2914  001352  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2915  001354  22DA               	addwfc	fsr2h,f,c
  2916  001356  50DF               	movf	indf2,w,c
  2917  001358  010F               	movlb	15	; () banked
  2918  00135A  6F27               	movwf	39,b	;volatile
  2919                           
  2920                           ; BSR set to: 15
  2921                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  2922  00135C  0100               	movlb	0	; () banked
  2923  00135E  EE20 F002          	lfsr	2,2
  2924  001362  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2925  001364  26D9               	addwf	fsr2l,f,c
  2926  001366  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2927  001368  22DA               	addwfc	fsr2h,f,c
  2928  00136A  50DF               	movf	indf2,w,c
  2929  00136C  010F               	movlb	15	; () banked
  2930  00136E  6F28               	movwf	40,b	;volatile
  2931                           
  2932                           ; BSR set to: 15
  2933                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  2934  001370  0100               	movlb	0	; () banked
  2935  001372  EE20 F003          	lfsr	2,3
  2936  001376  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2937  001378  26D9               	addwf	fsr2l,f,c
  2938  00137A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2939  00137C  22DA               	addwfc	fsr2h,f,c
  2940  00137E  50DF               	movf	indf2,w,c
  2941  001380  010F               	movlb	15	; () banked
  2942  001382  6F29               	movwf	41,b	;volatile
  2943                           
  2944                           ; BSR set to: 15
  2945                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  2946  001384  0100               	movlb	0	; () banked
  2947  001386  EE20 F004          	lfsr	2,4
  2948  00138A  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2949  00138C  26D9               	addwf	fsr2l,f,c
  2950  00138E  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2951  001390  22DA               	addwfc	fsr2h,f,c
  2952  001392  50DF               	movf	indf2,w,c
  2953  001394  010F               	movlb	15	; () banked
  2954  001396  6F2A               	movwf	42,b	;volatile
  2955                           
  2956                           ; BSR set to: 15
  2957                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  2958  001398  0100               	movlb	0	; () banked
  2959  00139A  EE20 F005          	lfsr	2,5
  2960  00139E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2961  0013A0  26D9               	addwf	fsr2l,f,c
  2962  0013A2  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2963  0013A4  22DA               	addwfc	fsr2h,f,c
  2964  0013A6  50DF               	movf	indf2,w,c
  2965  0013A8  010F               	movlb	15	; () banked
  2966  0013AA  6F2B               	movwf	43,b	;volatile
  2967                           
  2968                           ; BSR set to: 15
  2969                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  2970  0013AC  0100               	movlb	0	; () banked
  2971  0013AE  EE20 F006          	lfsr	2,6
  2972  0013B2  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2973  0013B4  26D9               	addwf	fsr2l,f,c
  2974  0013B6  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2975  0013B8  22DA               	addwfc	fsr2h,f,c
  2976  0013BA  50DF               	movf	indf2,w,c
  2977  0013BC  010F               	movlb	15	; () banked
  2978  0013BE  6F2C               	movwf	44,b	;volatile
  2979                           
  2980                           ; BSR set to: 15
  2981                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  2982  0013C0  0100               	movlb	0	; () banked
  2983  0013C2  EE20 F007          	lfsr	2,7
  2984  0013C6  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2985  0013C8  26D9               	addwf	fsr2l,f,c
  2986  0013CA  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2987  0013CC  22DA               	addwfc	fsr2h,f,c
  2988  0013CE  50DF               	movf	indf2,w,c
  2989  0013D0  010F               	movlb	15	; () banked
  2990  0013D2  6F2D               	movwf	45,b	;volatile
  2991                           
  2992                           ; BSR set to: 15
  2993                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  2994  0013D4  010F               	movlb	15	; () banked
  2995  0013D6  8720               	bsf	32,3,b	;volatile
  2996                           
  2997                           ; BSR set to: 15
  2998                           ;inc\CANlib.h: 521: return;
  2999  0013D8  0012               	return	
  3000  0013DA                     __end_of_CANsendMessage:
  3001                           	opt stack 0
  3002                           tblptru	equ	0xFF8
  3003                           tblptrh	equ	0xFF7
  3004                           tblptrl	equ	0xFF6
  3005                           tablat	equ	0xFF5
  3006                           prodh	equ	0xFF4
  3007                           prodl	equ	0xFF3
  3008                           postinc0	equ	0xFEE
  3009                           wreg	equ	0xFE8
  3010                           postdec1	equ	0xFE5
  3011                           fsr1l	equ	0xFE1
  3012                           indf2	equ	0xFDF
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _CANisTxReady *****************
  3018 ;; Defined at:
  3019 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      unsigned char 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3033 ;;      Params:         0       0       0       0
  3034 ;;      Locals:         0       1       0       0
  3035 ;;      Temps:          0       0       0       0
  3036 ;;      Totals:         0       1       0       0
  3037 ;;Total ram usage:        1 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    4
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_remote_frame_handler
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text3
  3048  002A28                     __ptext3:
  3049                           	opt stack 0
  3050  002A28                     _CANisTxReady:
  3051                           	opt stack 25
  3052                           
  3053                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3054                           
  3055                           ; BSR set to: 15
  3056                           ;incstack = 0
  3057  002A28  0E01               	movlw	1
  3058  002A2A  0100               	movlb	0	; () banked
  3059  002A2C  6FCB               	movwf	_CANisTxReady$3278& (0+255),b
  3060                           
  3061                           ; BSR set to: 0
  3062  002A2E  010F               	movlb	15	; () banked
  3063  002A30  A740               	btfss	64,3,b	;volatile
  3064  002A32  D009               	goto	l574
  3065                           
  3066                           ; BSR set to: 15
  3067  002A34  010F               	movlb	15	; () banked
  3068  002A36  A730               	btfss	48,3,b	;volatile
  3069  002A38  D006               	goto	l574
  3070                           
  3071                           ; BSR set to: 15
  3072  002A3A  010F               	movlb	15	; () banked
  3073  002A3C  A720               	btfss	32,3,b	;volatile
  3074  002A3E  D003               	goto	l574
  3075                           
  3076                           ; BSR set to: 15
  3077  002A40  0E00               	movlw	0
  3078  002A42  0100               	movlb	0	; () banked
  3079  002A44  6FCB               	movwf	_CANisTxReady$3278& (0+255),b
  3080  002A46                     l574:
  3081  002A46  0100               	movlb	0	; () banked
  3082  002A48  51CB               	movf	_CANisTxReady$3278& (0+255),w,b
  3083  002A4A  0012               	return	
  3084  002A4C                     __end_of_CANisTxReady:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           postinc0	equ	0xFEE
  3093                           wreg	equ	0xFE8
  3094                           postdec1	equ	0xFE5
  3095                           fsr1l	equ	0xFE1
  3096                           indf2	equ	0xFDF
  3097                           fsr2h	equ	0xFDA
  3098                           fsr2l	equ	0xFD9
  3099                           status	equ	0xFD8
  3100                           
  3101 ;; *************** function _delay_ms *****************
  3102 ;; Defined at:
  3103 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  value_ms        2   32[BANK0 ] unsigned int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;		None               void
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3117 ;;      Params:         0       2       0       0
  3118 ;;      Locals:         0       0       0       0
  3119 ;;      Temps:          0       0       0       0
  3120 ;;      Totals:         0       2       0       0
  3121 ;;Total ram usage:        2 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    5
  3124 ;; This function calls:
  3125 ;;		___wmul
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;;		_delay_s
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           	psect	text4
  3133  002992                     __ptext4:
  3134                           	opt stack 0
  3135  002992                     _delay_ms:
  3136                           	opt stack 25
  3137                           
  3138                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;incstack = 0
  3142  002992  C0DD  F0CB         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3143  002996  0100               	movlb	0	; () banked
  3144  002998  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  3145  00299A  C0D1  F0CD         	movff	delay_ms@value_ms,___wmul@multiplicand
  3146  00299E  C0D2  F0CE         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3147  0029A2  ECE6  F014         	call	___wmul	;wreg free
  3148  0029A6  C0CB  F078         	movff	?___wmul,_clock_counter_reference	;volatile
  3149  0029AA  C0CC  F079         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3150                           
  3151                           ;src\delay.c: 75: while (clock_counter_reference) {
  3152  0029AE  D007               	goto	l587
  3153  0029B0                     l3696:
  3154                           
  3155                           ;src\delay.c: 85: _delay(240);
  3156  0029B0  0E50               	movlw	80
  3157  0029B2                     u6297:
  3158  0029B2  2EE8               	decfsz	wreg,f,c
  3159  0029B4  D7FE               	goto	u6297
  3160                           
  3161                           ;src\delay.c: 88: clock_counter_reference--;
  3162  0029B6  0100               	movlb	0	; () banked
  3163  0029B8  0778               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3164  0029BA  A0D8               	btfss	status,0,c
  3165  0029BC  0779               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3166  0029BE                     l587:
  3167  0029BE  0100               	movlb	0	; () banked
  3168  0029C0  5178               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3169  0029C2  0100               	movlb	0	; () banked
  3170  0029C4  1179               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3171  0029C6  B4D8               	btfsc	status,2,c
  3172  0029C8  0012               	return	
  3173  0029CA  D7F2               	goto	l3696
  3174  0029CC                     __end_of_delay_ms:
  3175                           	opt stack 0
  3176                           tblptru	equ	0xFF8
  3177                           tblptrh	equ	0xFF7
  3178                           tblptrl	equ	0xFF6
  3179                           tablat	equ	0xFF5
  3180                           prodh	equ	0xFF4
  3181                           prodl	equ	0xFF3
  3182                           postinc0	equ	0xFEE
  3183                           wreg	equ	0xFE8
  3184                           postdec1	equ	0xFE5
  3185                           fsr1l	equ	0xFE1
  3186                           indf2	equ	0xFDF
  3187                           fsr2h	equ	0xFDA
  3188                           fsr2l	equ	0xFD9
  3189                           status	equ	0xFD8
  3190                           
  3191 ;; *************** function ___wmul *****************
  3192 ;; Defined at:
  3193 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  multiplier      2   26[BANK0 ] unsigned int 
  3196 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  product         2   30[BANK0 ] unsigned int 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2   26[BANK0 ] unsigned int 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, prodl, prodh
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3208 ;;      Params:         0       4       0       0
  3209 ;;      Locals:         0       2       0       0
  3210 ;;      Temps:          0       0       0       0
  3211 ;;      Totals:         0       6       0       0
  3212 ;;Total ram usage:        6 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    4
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_delay_ms
  3219 ;;		_main
  3220 ;;		_remote_frame_handler
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text5
  3225  0029CC                     __ptext5:
  3226                           	opt stack 0
  3227  0029CC                     ___wmul:
  3228                           	opt stack 25
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;incstack = 0
  3232  0029CC  0100               	movlb	0	; () banked
  3233  0029CE  51CB               	movf	___wmul@multiplier& (0+255),w,b
  3234  0029D0  0100               	movlb	0	; () banked
  3235  0029D2  03CD               	mulwf	___wmul@multiplicand& (0+255),b
  3236  0029D4  CFF3 F0CF          	movff	prodl,___wmul@product
  3237  0029D8  CFF4 F0D0          	movff	prodh,___wmul@product+1
  3238  0029DC  0100               	movlb	0	; () banked
  3239  0029DE  51CB               	movf	___wmul@multiplier& (0+255),w,b
  3240  0029E0  0100               	movlb	0	; () banked
  3241  0029E2  03CE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3242  0029E4  50F3               	movf	prodl,w,c
  3243  0029E6  0100               	movlb	0	; () banked
  3244  0029E8  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
  3245  0029EA  0100               	movlb	0	; () banked
  3246  0029EC  51CC               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3247  0029EE  0100               	movlb	0	; () banked
  3248  0029F0  03CD               	mulwf	___wmul@multiplicand& (0+255),b
  3249  0029F2  50F3               	movf	prodl,w,c
  3250  0029F4  0100               	movlb	0	; () banked
  3251  0029F6  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
  3252                           
  3253                           ; BSR set to: 0
  3254  0029F8  C0CF  F0CB         	movff	___wmul@product,?___wmul
  3255  0029FC  C0D0  F0CC         	movff	___wmul@product+1,?___wmul+1
  3256  002A00  0012               	return	
  3257  002A02                     __end_of___wmul:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           postdec1	equ	0xFE5
  3268                           fsr1l	equ	0xFE1
  3269                           indf2	equ	0xFDF
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _board_initialization *****************
  3275 ;; Defined at:
  3276 ;;		line 396 in file "ABS_Code.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;		None
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;		None
  3281 ;; Return value:  Size  Location     Type
  3282 ;;		None               void
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3290 ;;      Params:         0       0       0       0
  3291 ;;      Locals:         0       0       0       0
  3292 ;;      Temps:          0       0       0       0
  3293 ;;      Totals:         0       0       0       0
  3294 ;;Total ram usage:        0 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    6
  3297 ;; This function calls:
  3298 ;;		_CANInitialize
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text6
  3305  00272C                     __ptext6:
  3306                           	opt stack 0
  3307  00272C                     _board_initialization:
  3308                           	opt stack 24
  3309                           
  3310                           ;ABS_Code.c: 398: LATA = 0x00;
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;incstack = 0
  3314  00272C  0E00               	movlw	0
  3315  00272E  6E89               	movwf	3977,c	;volatile
  3316                           
  3317                           ;ABS_Code.c: 399: TRISA = 0b11111101;
  3318  002730  0EFD               	movlw	253
  3319  002732  6E92               	movwf	3986,c	;volatile
  3320                           
  3321                           ;ABS_Code.c: 400: LATB = 0x00;
  3322  002734  0E00               	movlw	0
  3323  002736  6E8A               	movwf	3978,c	;volatile
  3324                           
  3325                           ;ABS_Code.c: 401: TRISB = 0b11111111;
  3326  002738  6893               	setf	3987,c	;volatile
  3327                           
  3328                           ;ABS_Code.c: 402: LATC = 0x00;
  3329  00273A  0E00               	movlw	0
  3330  00273C  6E8B               	movwf	3979,c	;volatile
  3331                           
  3332                           ;ABS_Code.c: 403: TRISC = 0b11111100;
  3333  00273E  0EFC               	movlw	252
  3334  002740  6E94               	movwf	3988,c	;volatile
  3335                           
  3336                           ;ABS_Code.c: 404: LATD = 0x00;
  3337  002742  0E00               	movlw	0
  3338  002744  6E8C               	movwf	3980,c	;volatile
  3339                           
  3340                           ;ABS_Code.c: 405: TRISD = 0xFF;
  3341  002746  6895               	setf	3989,c	;volatile
  3342                           
  3343                           ;ABS_Code.c: 406: LATE = 0x00;
  3344  002748  0E00               	movlw	0
  3345  00274A  6E8D               	movwf	3981,c	;volatile
  3346                           
  3347                           ;ABS_Code.c: 407: TRISE = 0xFF;
  3348  00274C  6896               	setf	3990,c	;volatile
  3349                           
  3350                           ;ABS_Code.c: 409: ADCON1 = 0b11111110;
  3351  00274E  0EFE               	movlw	254
  3352  002750  6EC1               	movwf	4033,c	;volatile
  3353                           
  3354                           ;ABS_Code.c: 412: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3355  002752  0E06               	movlw	6
  3356  002754  0101               	movlb	1	; () banked
  3357  002756  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3358  002758  0E05               	movlw	5
  3359  00275A  0101               	movlb	1	; () banked
  3360  00275C  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3361  00275E  0E01               	movlw	1
  3362  002760  0101               	movlb	1	; () banked
  3363  002762  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3364  002764  0E03               	movlw	3
  3365  002766  0101               	movlb	1	; () banked
  3366  002768  6F03               	movwf	CANInitialize@BRP& (0+255),b
  3367  00276A  0E9D               	movlw	157
  3368  00276C  0101               	movlb	1	; () banked
  3369  00276E  6F04               	movwf	CANInitialize@flags& (0+255),b
  3370  002770  0E04               	movlw	4
  3371  002772  ECC7  F011         	call	_CANInitialize
  3372                           
  3373                           ;ABS_Code.c: 415: PIR3bits.RXB1IF = 0;
  3374  002776  92A4               	bcf	4004,1,c	;volatile
  3375                           
  3376                           ;ABS_Code.c: 416: PIR3bits.RXB0IF = 0;
  3377  002778  90A4               	bcf	4004,0,c	;volatile
  3378                           
  3379                           ;ABS_Code.c: 417: INTCONbits.TMR0IF = 0;
  3380  00277A  94F2               	bcf	intcon,2,c	;volatile
  3381                           
  3382                           ;ABS_Code.c: 418: PIR1bits.TMR1IF = 0;
  3383  00277C  909E               	bcf	3998,0,c	;volatile
  3384                           
  3385                           ;ABS_Code.c: 419: PIR2bits.TMR3IF = 0;
  3386  00277E  92A1               	bcf	4001,1,c	;volatile
  3387                           
  3388                           ;ABS_Code.c: 420: INTCONbits.INT0IF = 0;
  3389  002780  92F2               	bcf	intcon,1,c	;volatile
  3390                           
  3391                           ;ABS_Code.c: 421: INTCON3bits.INT1IF = 0;
  3392  002782  90F0               	bcf	intcon3,0,c	;volatile
  3393                           
  3394                           ;ABS_Code.c: 425: RCONbits.IPEN = 1;
  3395  002784  8ED0               	bsf	4048,7,c	;volatile
  3396                           
  3397                           ;ABS_Code.c: 426: IPR3bits.RXB1IP = 0;
  3398  002786  92A5               	bcf	4005,1,c	;volatile
  3399                           
  3400                           ;ABS_Code.c: 427: IPR3bits.RXB0IP = 0;
  3401  002788  90A5               	bcf	4005,0,c	;volatile
  3402                           
  3403                           ;ABS_Code.c: 428: INTCON2bits.TMR0IP = 1;
  3404  00278A  84F1               	bsf	intcon2,2,c	;volatile
  3405                           
  3406                           ;ABS_Code.c: 429: INTCON3bits.INT1IP = 1;
  3407  00278C  8CF0               	bsf	intcon3,6,c	;volatile
  3408                           
  3409                           ;ABS_Code.c: 430: IPR1bits.TMR1IP = 0;
  3410  00278E  909F               	bcf	3999,0,c	;volatile
  3411                           
  3412                           ;ABS_Code.c: 431: IPR2bits.TMR3IP = 0;
  3413  002790  92A2               	bcf	4002,1,c	;volatile
  3414                           
  3415                           ;ABS_Code.c: 434: T0CON = 0x80;
  3416  002792  0E80               	movlw	128
  3417  002794  6ED5               	movwf	4053,c	;volatile
  3418                           
  3419                           ;ABS_Code.c: 441: TMR0H = 0xFF;
  3420  002796  68D7               	setf	4055,c	;volatile
  3421                           
  3422                           ;ABS_Code.c: 442: TMR0L = 0xFE;
  3423  002798  0EFE               	movlw	254
  3424  00279A  6ED6               	movwf	4054,c	;volatile
  3425                           
  3426                           ;ABS_Code.c: 443: PORTCbits.RC0 = 0;
  3427  00279C  9082               	bcf	3970,0,c	;volatile
  3428                           
  3429                           ;ABS_Code.c: 444: brake_value_degree = 90;
  3430  00279E  0E5A               	movlw	90
  3431  0027A0  6E3C               	movwf	_brake_value_degree,c
  3432                           
  3433                           ;ABS_Code.c: 445: T1CON = 00110000;
  3434  0027A2  0E00               	movlw	0
  3435  0027A4  6ECD               	movwf	4045,c	;volatile
  3436                           
  3437                           ;ABS_Code.c: 446: T3CON = 01110000;
  3438  0027A6  0E00               	movlw	0
  3439  0027A8  6EB1               	movwf	4017,c	;volatile
  3440                           
  3441                           ;ABS_Code.c: 447: INTCON2bits.INTEDG0 = 1;
  3442  0027AA  8CF1               	bsf	intcon2,6,c	;volatile
  3443                           
  3444                           ;ABS_Code.c: 448: INTCON2bits.INTEDG1 = 1;
  3445  0027AC  8AF1               	bsf	intcon2,5,c	;volatile
  3446                           
  3447                           ;ABS_Code.c: 451: ADCON1 = 0b00001110;
  3448  0027AE  0E0E               	movlw	14
  3449  0027B0  6EC1               	movwf	4033,c	;volatile
  3450                           
  3451                           ;ABS_Code.c: 452: ADCON0bits.CHS3 = 0;
  3452  0027B2  9AC2               	bcf	4034,5,c	;volatile
  3453                           
  3454                           ;ABS_Code.c: 453: ADCON0bits.CHS2 = 0;
  3455  0027B4  98C2               	bcf	4034,4,c	;volatile
  3456                           
  3457                           ;ABS_Code.c: 454: ADCON0bits.CHS1 = 0;
  3458  0027B6  96C2               	bcf	4034,3,c	;volatile
  3459                           
  3460                           ;ABS_Code.c: 455: ADCON0bits.CHS0 = 0;
  3461  0027B8  94C2               	bcf	4034,2,c	;volatile
  3462                           
  3463                           ;ABS_Code.c: 456: ADCON2bits.ACQT2 = 1;
  3464  0027BA  8AC0               	bsf	4032,5,c	;volatile
  3465                           
  3466                           ;ABS_Code.c: 457: ADCON2bits.ACQT1 = 1;
  3467  0027BC  88C0               	bsf	4032,4,c	;volatile
  3468                           
  3469                           ;ABS_Code.c: 458: ADCON2bits.ACQT0 = 0;
  3470  0027BE  96C0               	bcf	4032,3,c	;volatile
  3471                           
  3472                           ;ABS_Code.c: 459: ADCON2bits.ADCS2 = 1;
  3473  0027C0  84C0               	bsf	4032,2,c	;volatile
  3474                           
  3475                           ;ABS_Code.c: 460: ADCON2bits.ADCS1 = 0;
  3476  0027C2  92C0               	bcf	4032,1,c	;volatile
  3477                           
  3478                           ;ABS_Code.c: 461: ADCON2bits.ADCS0 = 1;
  3479  0027C4  80C0               	bsf	4032,0,c	;volatile
  3480                           
  3481                           ;ABS_Code.c: 462: ADCON2bits.ADFM = 0;
  3482  0027C6  9EC0               	bcf	4032,7,c	;volatile
  3483                           
  3484                           ;ABS_Code.c: 463: ADCON0bits.ADON = 1;
  3485  0027C8  80C2               	bsf	4034,0,c	;volatile
  3486                           
  3487                           ;ABS_Code.c: 466: PIE3bits.RXB1IE = 1;
  3488  0027CA  82A3               	bsf	4003,1,c	;volatile
  3489                           
  3490                           ;ABS_Code.c: 467: PIE3bits.RXB0IE = 1;
  3491  0027CC  80A3               	bsf	4003,0,c	;volatile
  3492                           
  3493                           ;ABS_Code.c: 468: INTCONbits.TMR0IE = 1;
  3494  0027CE  8AF2               	bsf	intcon,5,c	;volatile
  3495                           
  3496                           ;ABS_Code.c: 469: PIE1bits.TMR1IE = 1;
  3497  0027D0  809D               	bsf	3997,0,c	;volatile
  3498                           
  3499                           ;ABS_Code.c: 470: PIE2bits.TMR3IE = 1;
  3500  0027D2  82A0               	bsf	4000,1,c	;volatile
  3501                           
  3502                           ;ABS_Code.c: 471: INTCONbits.INT0IE = 1;
  3503  0027D4  88F2               	bsf	intcon,4,c	;volatile
  3504                           
  3505                           ;ABS_Code.c: 472: INTCON3bits.INT1IE = 1;
  3506  0027D6  86F0               	bsf	intcon3,3,c	;volatile
  3507                           
  3508                           ;ABS_Code.c: 473: INTCONbits.GIEH = 1;
  3509  0027D8  8EF2               	bsf	intcon,7,c	;volatile
  3510                           
  3511                           ;ABS_Code.c: 474: INTCONbits.GIEL = 1;
  3512  0027DA  8CF2               	bsf	intcon,6,c	;volatile
  3513                           
  3514                           ;ABS_Code.c: 477: T1CONbits.TMR1ON = 1;
  3515  0027DC  80CD               	bsf	4045,0,c	;volatile
  3516                           
  3517                           ;ABS_Code.c: 478: T3CONbits.TMR3ON = 1;
  3518  0027DE  80B1               	bsf	4017,0,c	;volatile
  3519                           
  3520                           ;ABS_Code.c: 479: T0CONbits.TMR0ON = 1;
  3521  0027E0  8ED5               	bsf	4053,7,c	;volatile
  3522  0027E2  0012               	return		;funcret
  3523  0027E4                     __end_of_board_initialization:
  3524                           	opt stack 0
  3525                           tblptru	equ	0xFF8
  3526                           tblptrh	equ	0xFF7
  3527                           tblptrl	equ	0xFF6
  3528                           tablat	equ	0xFF5
  3529                           prodh	equ	0xFF4
  3530                           prodl	equ	0xFF3
  3531                           intcon	equ	0xFF2
  3532                           intcon2	equ	0xFF1
  3533                           intcon3	equ	0xFF0
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postdec1	equ	0xFE5
  3537                           fsr1l	equ	0xFE1
  3538                           indf2	equ	0xFDF
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function _CANInitialize *****************
  3544 ;; Defined at:
  3545 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  propSeg         1    wreg     unsigned char 
  3548 ;;  phaseSeg1       1    0[BANK1 ] unsigned char 
  3549 ;;  phaseSeg2       1    1[BANK1 ] unsigned char 
  3550 ;;  SJW             1    2[BANK1 ] unsigned char 
  3551 ;;  BRP             1    3[BANK1 ] unsigned char 
  3552 ;;  flags           1    4[BANK1 ] enum E16844
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  propSeg         1    5[BANK1 ] unsigned char 
  3555 ;;  FilterConfig    1    7[BANK1 ] unsigned char 
  3556 ;;  FilterConfig    1    6[BANK1 ] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;		None               void
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3566 ;;      Params:         0       0       5       0
  3567 ;;      Locals:         0       0       3       0
  3568 ;;      Temps:          0       4       0       0
  3569 ;;      Totals:         0       4       8       0
  3570 ;;Total ram usage:       12 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    5
  3573 ;; This function calls:
  3574 ;;		_CANOperationMode
  3575 ;;		_CANSetFilter
  3576 ;;		_CANSetMask
  3577 ;; This function is called by:
  3578 ;;		_board_initialization
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text7
  3583  00238E                     __ptext7:
  3584                           	opt stack 0
  3585  00238E                     _CANInitialize:
  3586                           	opt stack 24
  3587                           
  3588                           ;incstack = 0
  3589                           ;CANInitialize@propSeg stored from wreg
  3590  00238E  0101               	movlb	1	; () banked
  3591  002390  6F05               	movwf	CANInitialize@propSeg& (0+255),b
  3592                           
  3593                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  3594                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  3595                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  3596  002392  0E80               	movlw	128
  3597  002394  EC26  F015         	call	_CANOperationMode
  3598                           
  3599                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  3600  002398  0E00               	movlw	0
  3601  00239A  6E70               	movwf	3952,c	;volatile
  3602                           
  3603                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  3604  00239C  0E00               	movlw	0
  3605  00239E  6E71               	movwf	3953,c	;volatile
  3606                           
  3607                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  3608  0023A0  0E00               	movlw	0
  3609  0023A2  6E72               	movwf	3954,c	;volatile
  3610                           
  3611                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  3612  0023A4  0101               	movlb	1	; () banked
  3613  0023A6  4102               	rrncf	CANInitialize@SJW& (0+255),w,b
  3614  0023A8  42E8               	rrncf	wreg,f,c
  3615  0023AA  0BC0               	andlw	192
  3616  0023AC  0101               	movlb	1	; () banked
  3617  0023AE  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3618                           
  3619                           ; BSR set to: 1
  3620                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  3621  0023B0  0101               	movlb	1	; () banked
  3622  0023B2  5102               	movf	CANInitialize@SJW& (0+255),w,b
  3623  0023B4  1270               	iorwf	3952,f,c	;volatile
  3624                           
  3625                           ; BSR set to: 1
  3626                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  3627  0023B6  0101               	movlb	1	; () banked
  3628  0023B8  5103               	movf	CANInitialize@BRP& (0+255),w,b
  3629  0023BA  1270               	iorwf	3952,f,c	;volatile
  3630                           
  3631                           ; BSR set to: 1
  3632                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  3633  0023BC  0101               	movlb	1	; () banked
  3634  0023BE  5105               	movf	CANInitialize@propSeg& (0+255),w,b
  3635  0023C0  1271               	iorwf	3953,f,c	;volatile
  3636                           
  3637                           ; BSR set to: 1
  3638                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  3639  0023C2  0101               	movlb	1	; () banked
  3640  0023C4  3900               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3641  0023C6  42E8               	rrncf	wreg,f,c
  3642  0023C8  0BF8               	andlw	248
  3643  0023CA  0101               	movlb	1	; () banked
  3644  0023CC  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3645                           
  3646                           ; BSR set to: 1
  3647                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  3648  0023CE  0101               	movlb	1	; () banked
  3649  0023D0  5100               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3650  0023D2  1271               	iorwf	3953,f,c	;volatile
  3651                           
  3652                           ; BSR set to: 1
  3653                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3654  0023D4  0101               	movlb	1	; () banked
  3655  0023D6  A504               	btfss	CANInitialize@flags& (0+255),2,b
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  3659  0023D8  8C71               	bsf	3953,6,c	;volatile
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3663  0023DA  0101               	movlb	1	; () banked
  3664  0023DC  B104               	btfsc	CANInitialize@flags& (0+255),0,b
  3665                           
  3666                           ; BSR set to: 1
  3667                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  3668  0023DE  8E71               	bsf	3953,7,c	;volatile
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  3672                           
  3673                           ; BSR set to: 1
  3674  0023E0  0101               	movlb	1	; () banked
  3675  0023E2  5101               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3676  0023E4  1272               	iorwf	3954,f,c	;volatile
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3680  0023E6  0101               	movlb	1	; () banked
  3681  0023E8  B304               	btfsc	CANInitialize@flags& (0+255),1,b
  3682                           
  3683                           ; BSR set to: 1
  3684                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  3685  0023EA  8C72               	bsf	3954,6,c	;volatile
  3686                           
  3687                           ; BSR set to: 1
  3688                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3689                           
  3690                           ; BSR set to: 1
  3691  0023EC  0101               	movlb	1	; () banked
  3692  0023EE  5104               	movf	CANInitialize@flags& (0+255),w,b
  3693  0023F0  0B60               	andlw	96
  3694  0023F2  6E60               	movwf	3936,c	;volatile
  3695                           
  3696                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3697  0023F4  0101               	movlb	1	; () banked
  3698  0023F6  5104               	movf	CANInitialize@flags& (0+255),w,b
  3699  0023F8  0B10               	andlw	16
  3700  0023FA  0AFF               	xorlw	255
  3701  0023FC  B4D8               	btfsc	status,2,c
  3702                           
  3703                           ; BSR set to: 1
  3704                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  3705  0023FE  8460               	bsf	3936,2,c	;volatile
  3706                           
  3707                           ; BSR set to: 1
  3708                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  3709  002400  CF60 FF50          	movff	3936,3920	;volatile
  3710                           
  3711                           ; BSR set to: 1
  3712                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3713  002404  0E00               	movlw	0
  3714  002406  0100               	movlb	0	; () banked
  3715  002408  6FCB               	movwf	CANSetMask@mask& (0+255),b
  3716  00240A  0E00               	movlw	0
  3717  00240C  6FCC               	movwf	(CANSetMask@mask+1)& (0+255),b
  3718  00240E  0E00               	movlw	0
  3719  002410  6FCD               	movwf	(CANSetMask@mask+2)& (0+255),b
  3720  002412  0E00               	movlw	0
  3721  002414  6FCE               	movwf	(CANSetMask@mask+3)& (0+255),b
  3722  002416  0EF7               	movlw	247
  3723  002418  0100               	movlb	0	; () banked
  3724  00241A  6FCF               	movwf	CANSetMask@type& (0+255),b
  3725  00241C  0E01               	movlw	1
  3726  00241E  EC73  F00C         	call	_CANSetMask
  3727                           
  3728                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3729  002422  0E00               	movlw	0
  3730  002424  0100               	movlb	0	; () banked
  3731  002426  6FCB               	movwf	CANSetMask@mask& (0+255),b
  3732  002428  0E00               	movlw	0
  3733  00242A  6FCC               	movwf	(CANSetMask@mask+1)& (0+255),b
  3734  00242C  0E00               	movlw	0
  3735  00242E  6FCD               	movwf	(CANSetMask@mask+2)& (0+255),b
  3736  002430  0E00               	movlw	0
  3737  002432  6FCE               	movwf	(CANSetMask@mask+3)& (0+255),b
  3738  002434  0EF7               	movlw	247
  3739  002436  0100               	movlb	0	; () banked
  3740  002438  6FCF               	movwf	CANSetMask@type& (0+255),b
  3741  00243A  0E02               	movlw	2
  3742  00243C  EC73  F00C         	call	_CANSetMask
  3743                           
  3744                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3745  002440  D00F               	goto	l4708
  3746  002442                     l4702:
  3747                           
  3748                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3749  002442  0EF7               	movlw	247
  3750  002444  0101               	movlb	1	; () banked
  3751  002446  6F06               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3752  002448  D007               	goto	l4704
  3753  00244A                     l376:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3757  00244A  0101               	movlb	1	; () banked
  3758  00244C  6906               	setf	CANInitialize@FilterConfig1& (0+255),b
  3759                           
  3760                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3761  00244E  0101               	movlb	1	; () banked
  3762  002450  6907               	setf	CANInitialize@FilterConfig2& (0+255),b
  3763                           
  3764                           ;inc\CANlib.h: 274: break;
  3765  002452  D028               	goto	l4710
  3766  002454                     l377:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3770  002454  0101               	movlb	1	; () banked
  3771  002456  6906               	setf	CANInitialize@FilterConfig1& (0+255),b
  3772  002458                     l4704:
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3776  002458  0EF7               	movlw	247
  3777  00245A  0101               	movlb	1	; () banked
  3778  00245C  6F07               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3779                           
  3780                           ; BSR set to: 1
  3781                           ;inc\CANlib.h: 279: }
  3782                           
  3783                           ;inc\CANlib.h: 278: break;
  3784  00245E  D022               	goto	l4710
  3785  002460                     l4708:
  3786  002460  0E9F               	movlw	159
  3787  002462  0100               	movlb	0	; () banked
  3788  002464  6FD9               	movwf	??_CANInitialize& (0+255),b
  3789  002466  0EFF               	movlw	255
  3790  002468  0100               	movlb	0	; () banked
  3791  00246A  6FDA               	movwf	(??_CANInitialize+1)& (0+255),b
  3792  00246C  0101               	movlb	1	; () banked
  3793  00246E  5104               	movf	CANInitialize@flags& (0+255),w,b
  3794  002470  0B60               	andlw	96
  3795  002472  0100               	movlb	0	; () banked
  3796  002474  6FDB               	movwf	(??_CANInitialize+2)& (0+255),b
  3797  002476  6BDC               	clrf	(??_CANInitialize+3)& (0+255),b
  3798  002478  0100               	movlb	0	; () banked
  3799  00247A  51D9               	movf	??_CANInitialize& (0+255),w,b
  3800  00247C  0100               	movlb	0	; () banked
  3801  00247E  13DB               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3802  002480  0100               	movlb	0	; () banked
  3803  002482  51DA               	movf	(??_CANInitialize+1)& (0+255),w,b
  3804  002484  0100               	movlb	0	; () banked
  3805  002486  13DC               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3806                           
  3807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3808                           ; Switch size 1, requested type "space"
  3809                           ; Number of cases is 1, Range of values is 0 to 0
  3810                           ; switch strategies available:
  3811                           ; Name         Instructions Cycles
  3812                           ; simple_byte            4     3 (average)
  3813                           ;	Chosen strategy is simple_byte
  3814  002488  0100               	movlb	0	; () banked
  3815  00248A  51DC               	movf	(??_CANInitialize+3)& (0+255),w,b
  3816  00248C  0A00               	xorlw	0	; case 0
  3817  00248E  A4D8               	btfss	status,2,c
  3818  002490  D7E1               	goto	l377
  3819                           
  3820                           ; BSR set to: 0
  3821                           ; Switch size 1, requested type "space"
  3822                           ; Number of cases is 2, Range of values is 191 to 223
  3823                           ; switch strategies available:
  3824                           ; Name         Instructions Cycles
  3825                           ; simple_byte            7     4 (average)
  3826                           ;	Chosen strategy is simple_byte
  3827  002492  0100               	movlb	0	; () banked
  3828  002494  51DB               	movf	(??_CANInitialize+2)& (0+255),w,b
  3829  002496  0ABF               	xorlw	191	; case 191
  3830  002498  B4D8               	btfsc	status,2,c
  3831  00249A  D7D7               	goto	l376
  3832  00249C  0A60               	xorlw	96	; case 223
  3833  00249E  B4D8               	btfsc	status,2,c
  3834  0024A0  D7D0               	goto	l4702
  3835  0024A2  D7D8               	goto	l377
  3836  0024A4                     l4710:
  3837                           
  3838                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3839  0024A4  0E00               	movlw	0
  3840  0024A6  0100               	movlb	0	; () banked
  3841  0024A8  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3842  0024AA  0E00               	movlw	0
  3843  0024AC  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3844  0024AE  0E00               	movlw	0
  3845  0024B0  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3846  0024B2  0E00               	movlw	0
  3847  0024B4  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3848  0024B6  C106  F0CF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3849  0024BA  0E00               	movlw	0
  3850  0024BC  ECA4  F000         	call	_CANSetFilter
  3851                           
  3852                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3853  0024C0  0E00               	movlw	0
  3854  0024C2  0100               	movlb	0	; () banked
  3855  0024C4  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3856  0024C6  0E00               	movlw	0
  3857  0024C8  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3858  0024CA  0E00               	movlw	0
  3859  0024CC  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3860  0024CE  0E00               	movlw	0
  3861  0024D0  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3862  0024D2  C106  F0CF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3863  0024D6  0E01               	movlw	1
  3864  0024D8  ECA4  F000         	call	_CANSetFilter
  3865                           
  3866                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3867  0024DC  0E00               	movlw	0
  3868  0024DE  0100               	movlb	0	; () banked
  3869  0024E0  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3870  0024E2  0E00               	movlw	0
  3871  0024E4  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3872  0024E6  0E00               	movlw	0
  3873  0024E8  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3874  0024EA  0E00               	movlw	0
  3875  0024EC  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3876  0024EE  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3877  0024F2  0E02               	movlw	2
  3878  0024F4  ECA4  F000         	call	_CANSetFilter
  3879                           
  3880                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3881  0024F8  0E00               	movlw	0
  3882  0024FA  0100               	movlb	0	; () banked
  3883  0024FC  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3884  0024FE  0E00               	movlw	0
  3885  002500  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3886  002502  0E00               	movlw	0
  3887  002504  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3888  002506  0E00               	movlw	0
  3889  002508  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3890  00250A  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3891  00250E  0E03               	movlw	3
  3892  002510  ECA4  F000         	call	_CANSetFilter
  3893                           
  3894                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3895  002514  0E00               	movlw	0
  3896  002516  0100               	movlb	0	; () banked
  3897  002518  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3898  00251A  0E00               	movlw	0
  3899  00251C  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3900  00251E  0E00               	movlw	0
  3901  002520  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3902  002522  0E00               	movlw	0
  3903  002524  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3904  002526  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3905  00252A  0E04               	movlw	4
  3906  00252C  ECA4  F000         	call	_CANSetFilter
  3907                           
  3908                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3909  002530  0E00               	movlw	0
  3910  002532  0100               	movlb	0	; () banked
  3911  002534  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3912  002536  0E00               	movlw	0
  3913  002538  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3914  00253A  0E00               	movlw	0
  3915  00253C  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3916  00253E  0E00               	movlw	0
  3917  002540  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3918  002542  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3919  002546  0E05               	movlw	5
  3920  002548  ECA4  F000         	call	_CANSetFilter
  3921                           
  3922                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  3923  00254C  0E00               	movlw	0
  3924  00254E  EC26  F015         	call	_CANOperationMode
  3925  002552  0012               	return		;funcret
  3926  002554                     __end_of_CANInitialize:
  3927                           	opt stack 0
  3928                           tblptru	equ	0xFF8
  3929                           tblptrh	equ	0xFF7
  3930                           tblptrl	equ	0xFF6
  3931                           tablat	equ	0xFF5
  3932                           prodh	equ	0xFF4
  3933                           prodl	equ	0xFF3
  3934                           intcon	equ	0xFF2
  3935                           intcon2	equ	0xFF1
  3936                           intcon3	equ	0xFF0
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           postdec1	equ	0xFE5
  3940                           fsr1l	equ	0xFE1
  3941                           indf2	equ	0xFDF
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           
  3946 ;; *************** function _CANSetMask *****************
  3947 ;; Defined at:
  3948 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  numBuffer       1    wreg     enum E16878
  3951 ;;  mask            4   26[BANK0 ] unsigned long 
  3952 ;;  type            1   30[BANK0 ] enum E16844
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  numBuffer       1   35[BANK0 ] enum E16878
  3955 ;;  tamp            4   36[BANK0 ] unsigned long 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;		None               void
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3965 ;;      Params:         0       5       0       0
  3966 ;;      Locals:         0       5       0       0
  3967 ;;      Temps:          0       4       0       0
  3968 ;;      Totals:         0      14       0       0
  3969 ;;Total ram usage:       14 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_CANInitialize
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text8
  3980  0018E6                     __ptext8:
  3981                           	opt stack 0
  3982  0018E6                     _CANSetMask:
  3983                           	opt stack 24
  3984                           
  3985                           ;incstack = 0
  3986                           ;CANSetMask@numBuffer stored from wreg
  3987  0018E6  0100               	movlb	0	; () banked
  3988  0018E8  6FD4               	movwf	CANSetMask@numBuffer& (0+255),b
  3989                           
  3990                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3991  0018EA  0100               	movlb	0	; () banked
  3992  0018EC  05D4               	decf	CANSetMask@numBuffer& (0+255),w,b
  3993  0018EE  A4D8               	btfss	status,2,c
  3994  0018F0  D056               	goto	l4272
  3995                           
  3996                           ; BSR set to: 0
  3997  0018F2  0100               	movlb	0	; () banked
  3998  0018F4  29CF               	incf	CANSetMask@type& (0+255),w,b
  3999  0018F6  A4D8               	btfss	status,2,c
  4000  0018F8  D052               	goto	l4272
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;inc\CANlib.h: 645: {
  4004                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  4005  0018FA  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4006  0018FE  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4007  001902  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4008  001906  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4009  00190A  0E04               	movlw	4
  4010  00190C  D006               	goto	u4900
  4011  00190E                     u4905:
  4012  00190E  0100               	movlb	0	; () banked
  4013  001910  90D8               	bcf	status,0,c
  4014  001912  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4015  001914  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4016  001916  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4017  001918  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4018  00191A                     u4900:
  4019  00191A  2EE8               	decfsz	wreg,f,c
  4020  00191C  D7F8               	goto	u4905
  4021  00191E  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4022  001922  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4023  001926  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4024  00192A  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  4028  00192E  0100               	movlb	0	; () banked
  4029  001930  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4030  001932  0100               	movlb	0	; () banked
  4031  001934  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4032  001936  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4033  001938  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4034  00193A  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  4038  00193C  C0D5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  4042  001940  0E07               	movlw	7
  4043  001942  0100               	movlb	0	; () banked
  4044  001944  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4045  001946  0100               	movlb	0	; () banked
  4046  001948  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4047  00194A  0E00               	movlw	0
  4048  00194C  0100               	movlb	0	; () banked
  4049  00194E  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4050  001950  0100               	movlb	0	; () banked
  4051  001952  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4052  001954  0E00               	movlw	0
  4053  001956  0100               	movlb	0	; () banked
  4054  001958  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4055  00195A  0100               	movlb	0	; () banked
  4056  00195C  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4057  00195E  0E00               	movlw	0
  4058  001960  0100               	movlb	0	; () banked
  4059  001962  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4060  001964  0100               	movlb	0	; () banked
  4061  001966  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  4065  001968  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4066  00196C  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4067  001970  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4068  001974  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4069  001978  0E05               	movlw	5
  4070  00197A                     u4915:
  4071  00197A  90D8               	bcf	status,0,c
  4072  00197C  0100               	movlb	0	; () banked
  4073  00197E  37D0               	rlcf	??_CANSetMask& (0+255),f,b
  4074  001980  37D1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4075  001982  37D2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4076  001984  37D3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4077  001986  2EE8               	decfsz	wreg,f,c
  4078  001988  D7F8               	goto	u4915
  4079  00198A  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4080  00198E  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4081  001992  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4082  001996  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  4086  00199A  C0D5  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4087  00199E                     l4272:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;inc\CANlib.h: 653: }
  4091                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4092  00199E  0E02               	movlw	2
  4093  0019A0  0100               	movlb	0	; () banked
  4094  0019A2  19D4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4095  0019A4  A4D8               	btfss	status,2,c
  4096  0019A6  D056               	goto	l4288
  4097                           
  4098                           ; BSR set to: 0
  4099  0019A8  0100               	movlb	0	; () banked
  4100  0019AA  29CF               	incf	CANSetMask@type& (0+255),w,b
  4101  0019AC  A4D8               	btfss	status,2,c
  4102  0019AE  D052               	goto	l4288
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;inc\CANlib.h: 656: {
  4106                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  4107  0019B0  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4108  0019B4  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4109  0019B8  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4110  0019BC  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4111  0019C0  0E04               	movlw	4
  4112  0019C2  D006               	goto	u4940
  4113  0019C4                     u4945:
  4114  0019C4  0100               	movlb	0	; () banked
  4115  0019C6  90D8               	bcf	status,0,c
  4116  0019C8  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4117  0019CA  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4118  0019CC  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4119  0019CE  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4120  0019D0                     u4940:
  4121  0019D0  2EE8               	decfsz	wreg,f,c
  4122  0019D2  D7F8               	goto	u4945
  4123  0019D4  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4124  0019D8  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4125  0019DC  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4126  0019E0  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  4130  0019E4  0100               	movlb	0	; () banked
  4131  0019E6  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4132  0019E8  0100               	movlb	0	; () banked
  4133  0019EA  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4134  0019EC  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4135  0019EE  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4136  0019F0  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  4140  0019F2  C0D5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  4144  0019F6  0E07               	movlw	7
  4145  0019F8  0100               	movlb	0	; () banked
  4146  0019FA  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4147  0019FC  0100               	movlb	0	; () banked
  4148  0019FE  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4149  001A00  0E00               	movlw	0
  4150  001A02  0100               	movlb	0	; () banked
  4151  001A04  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4152  001A06  0100               	movlb	0	; () banked
  4153  001A08  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4154  001A0A  0E00               	movlw	0
  4155  001A0C  0100               	movlb	0	; () banked
  4156  001A0E  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4157  001A10  0100               	movlb	0	; () banked
  4158  001A12  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4159  001A14  0E00               	movlw	0
  4160  001A16  0100               	movlb	0	; () banked
  4161  001A18  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4162  001A1A  0100               	movlb	0	; () banked
  4163  001A1C  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  4167  001A1E  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4168  001A22  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4169  001A26  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4170  001A2A  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4171  001A2E  0E05               	movlw	5
  4172  001A30                     u4955:
  4173  001A30  90D8               	bcf	status,0,c
  4174  001A32  0100               	movlb	0	; () banked
  4175  001A34  37D0               	rlcf	??_CANSetMask& (0+255),f,b
  4176  001A36  37D1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4177  001A38  37D2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4178  001A3A  37D3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4179  001A3C  2EE8               	decfsz	wreg,f,c
  4180  001A3E  D7F8               	goto	u4955
  4181  001A40  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4182  001A44  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4183  001A48  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4184  001A4C  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  4188  001A50  C0D5  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4189  001A54                     l4288:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;inc\CANlib.h: 664: }
  4193                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4194  001A54  0100               	movlb	0	; () banked
  4195  001A56  05D4               	decf	CANSetMask@numBuffer& (0+255),w,b
  4196  001A58  A4D8               	btfss	status,2,c
  4197  001A5A  D087               	goto	l4320
  4198                           
  4199                           ; BSR set to: 0
  4200  001A5C  0EF7               	movlw	247
  4201  001A5E  0100               	movlb	0	; () banked
  4202  001A60  19CF               	xorwf	CANSetMask@type& (0+255),w,b
  4203  001A62  A4D8               	btfss	status,2,c
  4204  001A64  D082               	goto	l4320
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 667: {
  4208                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  4209  001A66  0100               	movlb	0	; () banked
  4210  001A68  51CB               	movf	CANSetMask@mask& (0+255),w,b
  4211  001A6A  0100               	movlb	0	; () banked
  4212  001A6C  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4213  001A6E  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4214  001A70  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4215  001A72  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  4219  001A74  C0D5  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  4223  001A78  0E00               	movlw	0
  4224  001A7A  0100               	movlb	0	; () banked
  4225  001A7C  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4226  001A7E  0100               	movlb	0	; () banked
  4227  001A80  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4228  001A82  0EFF               	movlw	255
  4229  001A84  0100               	movlb	0	; () banked
  4230  001A86  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4231  001A88  0100               	movlb	0	; () banked
  4232  001A8A  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4233  001A8C  0E00               	movlw	0
  4234  001A8E  0100               	movlb	0	; () banked
  4235  001A90  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4236  001A92  0100               	movlb	0	; () banked
  4237  001A94  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4238  001A96  0E00               	movlw	0
  4239  001A98  0100               	movlb	0	; () banked
  4240  001A9A  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4241  001A9C  0100               	movlb	0	; () banked
  4242  001A9E  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  4246  001AA0  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4247  001AA4  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4248  001AA8  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4249  001AAC  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4250  001AB0  C0D1  F0D0         	movff	??_CANSetMask+1,??_CANSetMask
  4251  001AB4  C0D2  F0D1         	movff	??_CANSetMask+2,??_CANSetMask+1
  4252  001AB8  C0D3  F0D2         	movff	??_CANSetMask+3,??_CANSetMask+2
  4253  001ABC  0100               	movlb	0	; () banked
  4254  001ABE  6BD3               	clrf	(??_CANSetMask+3)& (0+255),b
  4255  001AC0  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4256  001AC4  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4257  001AC8  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4258  001ACC  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  4262  001AD0  C0D5  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  4266  001AD4  0100               	movlb	0	; () banked
  4267  001AD6  A1CD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4268  001AD8  D003               	goto	l450
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  4272  001ADA  010F               	movlb	15	; () banked
  4273  001ADC  8119               	bsf	25,0,b	;volatile
  4274  001ADE  D002               	goto	l451
  4275  001AE0                     l450:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;inc\CANlib.h: 677: else
  4279                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  4280  001AE0  010F               	movlb	15	; () banked
  4281  001AE2  9119               	bcf	25,0,b	;volatile
  4282  001AE4                     l451:
  4283                           
  4284                           ; BSR set to: 15
  4285                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  4286  001AE4  0100               	movlb	0	; () banked
  4287  001AE6  A3CD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4288  001AE8  D003               	goto	l452
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  4292  001AEA  010F               	movlb	15	; () banked
  4293  001AEC  8319               	bsf	25,1,b	;volatile
  4294  001AEE  D002               	goto	l453
  4295  001AF0                     l452:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;inc\CANlib.h: 682: else
  4299                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  4300  001AF0  010F               	movlb	15	; () banked
  4301  001AF2  9319               	bcf	25,1,b	;volatile
  4302  001AF4                     l453:
  4303                           
  4304                           ; BSR set to: 15
  4305                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  4306  001AF4  0100               	movlb	0	; () banked
  4307  001AF6  A5CD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4308  001AF8  D003               	goto	l454
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  4312  001AFA  010F               	movlb	15	; () banked
  4313  001AFC  8B19               	bsf	25,5,b	;volatile
  4314  001AFE  D002               	goto	l455
  4315  001B00                     l454:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;inc\CANlib.h: 687: else
  4319                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  4320  001B00  010F               	movlb	15	; () banked
  4321  001B02  9B19               	bcf	25,5,b	;volatile
  4322  001B04                     l455:
  4323                           
  4324                           ; BSR set to: 15
  4325                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  4326  001B04  0100               	movlb	0	; () banked
  4327  001B06  A7CD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4328  001B08  D003               	goto	l456
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  4332  001B0A  010F               	movlb	15	; () banked
  4333  001B0C  8D19               	bsf	25,6,b	;volatile
  4334  001B0E  D002               	goto	l457
  4335  001B10                     l456:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;inc\CANlib.h: 692: else
  4339                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  4340  001B10  010F               	movlb	15	; () banked
  4341  001B12  9D19               	bcf	25,6,b	;volatile
  4342  001B14                     l457:
  4343                           
  4344                           ; BSR set to: 15
  4345                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  4346  001B14  0100               	movlb	0	; () banked
  4347  001B16  A9CD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4348  001B18  D003               	goto	l458
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  4352  001B1A  010F               	movlb	15	; () banked
  4353  001B1C  8F19               	bsf	25,7,b	;volatile
  4354  001B1E  D002               	goto	l4314
  4355  001B20                     l458:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;inc\CANlib.h: 697: else
  4359                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  4360  001B20  010F               	movlb	15	; () banked
  4361  001B22  9F19               	bcf	25,7,b	;volatile
  4362  001B24                     l4314:
  4363                           
  4364                           ; BSR set to: 15
  4365                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  4366  001B24  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4367  001B28  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4368  001B2C  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4369  001B30  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4370  001B34  0E16               	movlw	22
  4371  001B36  D006               	goto	u5030
  4372  001B38                     u5035:
  4373  001B38  0100               	movlb	0	; () banked
  4374  001B3A  90D8               	bcf	status,0,c
  4375  001B3C  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4376  001B3E  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4377  001B40  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4378  001B42  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4379  001B44                     u5030:
  4380  001B44  2EE8               	decfsz	wreg,f,c
  4381  001B46  D7F8               	goto	u5035
  4382  001B48  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4383  001B4C  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4384  001B50  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4385  001B54  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  4389  001B58  0100               	movlb	0	; () banked
  4390  001B5A  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4391  001B5C  0100               	movlb	0	; () banked
  4392  001B5E  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4393  001B60  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4394  001B62  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4395  001B64  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  4399  001B66  C0D5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4400  001B6A                     l4320:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 703: }
  4404                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4405  001B6A  0E02               	movlw	2
  4406  001B6C  0100               	movlb	0	; () banked
  4407  001B6E  19D4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4408  001B70  A4D8               	btfss	status,2,c
  4409  001B72  0012               	return	
  4410                           
  4411                           ; BSR set to: 0
  4412  001B74  0EF7               	movlw	247
  4413  001B76  0100               	movlb	0	; () banked
  4414  001B78  19CF               	xorwf	CANSetMask@type& (0+255),w,b
  4415  001B7A  A4D8               	btfss	status,2,c
  4416  001B7C  0012               	return	
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;inc\CANlib.h: 706: {
  4420                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  4421  001B7E  0100               	movlb	0	; () banked
  4422  001B80  51CB               	movf	CANSetMask@mask& (0+255),w,b
  4423  001B82  0100               	movlb	0	; () banked
  4424  001B84  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4425  001B86  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4426  001B88  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4427  001B8A  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  4431  001B8C  C0D5  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  4435  001B90  0E00               	movlw	0
  4436  001B92  0100               	movlb	0	; () banked
  4437  001B94  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4438  001B96  0100               	movlb	0	; () banked
  4439  001B98  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4440  001B9A  0EFF               	movlw	255
  4441  001B9C  0100               	movlb	0	; () banked
  4442  001B9E  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4443  001BA0  0100               	movlb	0	; () banked
  4444  001BA2  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4445  001BA4  0E00               	movlw	0
  4446  001BA6  0100               	movlb	0	; () banked
  4447  001BA8  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4448  001BAA  0100               	movlb	0	; () banked
  4449  001BAC  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4450  001BAE  0E00               	movlw	0
  4451  001BB0  0100               	movlb	0	; () banked
  4452  001BB2  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4453  001BB4  0100               	movlb	0	; () banked
  4454  001BB6  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  4458  001BB8  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4459  001BBC  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4460  001BC0  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4461  001BC4  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4462  001BC8  C0D1  F0D0         	movff	??_CANSetMask+1,??_CANSetMask
  4463  001BCC  C0D2  F0D1         	movff	??_CANSetMask+2,??_CANSetMask+1
  4464  001BD0  C0D3  F0D2         	movff	??_CANSetMask+3,??_CANSetMask+2
  4465  001BD4  0100               	movlb	0	; () banked
  4466  001BD6  6BD3               	clrf	(??_CANSetMask+3)& (0+255),b
  4467  001BD8  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4468  001BDC  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4469  001BE0  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4470  001BE4  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  4474  001BE8  C0D5  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  4478  001BEC  0100               	movlb	0	; () banked
  4479  001BEE  A1CD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4480  001BF0  D003               	goto	l461
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  4484  001BF2  010F               	movlb	15	; () banked
  4485  001BF4  811D               	bsf	29,0,b	;volatile
  4486  001BF6  D002               	goto	l462
  4487  001BF8                     l461:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 716: else
  4491                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  4492  001BF8  010F               	movlb	15	; () banked
  4493  001BFA  911D               	bcf	29,0,b	;volatile
  4494  001BFC                     l462:
  4495                           
  4496                           ; BSR set to: 15
  4497                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  4498  001BFC  0100               	movlb	0	; () banked
  4499  001BFE  A3CD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4500  001C00  D003               	goto	l463
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  4504  001C02  010F               	movlb	15	; () banked
  4505  001C04  831D               	bsf	29,1,b	;volatile
  4506  001C06  D002               	goto	l464
  4507  001C08                     l463:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;inc\CANlib.h: 721: else
  4511                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  4512  001C08  010F               	movlb	15	; () banked
  4513  001C0A  931D               	bcf	29,1,b	;volatile
  4514  001C0C                     l464:
  4515                           
  4516                           ; BSR set to: 15
  4517                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  4518  001C0C  0100               	movlb	0	; () banked
  4519  001C0E  A5CD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4520  001C10  D003               	goto	l465
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  4524  001C12  010F               	movlb	15	; () banked
  4525  001C14  8B1D               	bsf	29,5,b	;volatile
  4526  001C16  D002               	goto	l466
  4527  001C18                     l465:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;inc\CANlib.h: 726: else
  4531                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  4532  001C18  010F               	movlb	15	; () banked
  4533  001C1A  9B1D               	bcf	29,5,b	;volatile
  4534  001C1C                     l466:
  4535                           
  4536                           ; BSR set to: 15
  4537                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  4538  001C1C  0100               	movlb	0	; () banked
  4539  001C1E  A7CD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4540  001C20  D003               	goto	l467
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  4544  001C22  010F               	movlb	15	; () banked
  4545  001C24  8D1D               	bsf	29,6,b	;volatile
  4546  001C26  D002               	goto	l468
  4547  001C28                     l467:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;inc\CANlib.h: 731: else
  4551                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  4552  001C28  010F               	movlb	15	; () banked
  4553  001C2A  9D1D               	bcf	29,6,b	;volatile
  4554  001C2C                     l468:
  4555                           
  4556                           ; BSR set to: 15
  4557                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  4558  001C2C  0100               	movlb	0	; () banked
  4559  001C2E  A9CD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4560  001C30  D003               	goto	l469
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  4564  001C32  010F               	movlb	15	; () banked
  4565  001C34  8F1D               	bsf	29,7,b	;volatile
  4566  001C36  D002               	goto	l4346
  4567  001C38                     l469:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;inc\CANlib.h: 736: else
  4571                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  4572  001C38  010F               	movlb	15	; () banked
  4573  001C3A  9F1D               	bcf	29,7,b	;volatile
  4574  001C3C                     l4346:
  4575                           
  4576                           ; BSR set to: 15
  4577                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  4578  001C3C  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4579  001C40  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4580  001C44  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4581  001C48  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4582  001C4C  0E16               	movlw	22
  4583  001C4E  D006               	goto	u5110
  4584  001C50                     u5115:
  4585  001C50  0100               	movlb	0	; () banked
  4586  001C52  90D8               	bcf	status,0,c
  4587  001C54  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4588  001C56  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4589  001C58  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4590  001C5A  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4591  001C5C                     u5110:
  4592  001C5C  2EE8               	decfsz	wreg,f,c
  4593  001C5E  D7F8               	goto	u5115
  4594  001C60  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4595  001C64  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4596  001C68  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4597  001C6C  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  4601  001C70  0100               	movlb	0	; () banked
  4602  001C72  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4603  001C74  0100               	movlb	0	; () banked
  4604  001C76  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4605  001C78  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4606  001C7A  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4607  001C7C  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  4611  001C7E  C0D5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4612  001C82  0012               	return	
  4613  001C84                     __end_of_CANSetMask:
  4614                           	opt stack 0
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           prodh	equ	0xFF4
  4620                           prodl	equ	0xFF3
  4621                           intcon	equ	0xFF2
  4622                           intcon2	equ	0xFF1
  4623                           intcon3	equ	0xFF0
  4624                           postinc0	equ	0xFEE
  4625                           wreg	equ	0xFE8
  4626                           postdec1	equ	0xFE5
  4627                           fsr1l	equ	0xFE1
  4628                           indf2	equ	0xFDF
  4629                           fsr2h	equ	0xFDA
  4630                           fsr2l	equ	0xFD9
  4631                           status	equ	0xFD8
  4632                           
  4633 ;; *************** function _CANSetFilter *****************
  4634 ;; Defined at:
  4635 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  numBuffer       1    wreg     enum E16881
  4638 ;;  filter          4   26[BANK0 ] unsigned long 
  4639 ;;  type            1   30[BANK0 ] enum E16844
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  numBuffer       1   35[BANK0 ] enum E16881
  4642 ;;  tamp            4   36[BANK0 ] unsigned long 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;		None               void
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4652 ;;      Params:         0       5       0       0
  4653 ;;      Locals:         0       5       0       0
  4654 ;;      Temps:          0       4       0       0
  4655 ;;      Totals:         0      14       0       0
  4656 ;;Total ram usage:       14 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    4
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_CANInitialize
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text9
  4667  000148                     __ptext9:
  4668                           	opt stack 0
  4669  000148                     _CANSetFilter:
  4670                           	opt stack 24
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;incstack = 0
  4674                           ;CANSetFilter@numBuffer stored from wreg
  4675  000148  0100               	movlb	0	; () banked
  4676  00014A  6FD4               	movwf	CANSetFilter@numBuffer& (0+255),b
  4677                           
  4678                           ;inc\CANlib.h: 751: unsigned long tamp;
  4679                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4680  00014C  0100               	movlb	0	; () banked
  4681  00014E  51D4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4682  000150  0100               	movlb	0	; () banked
  4683  000152  A4D8               	btfss	status,2,c
  4684  000154  D058               	goto	l4370
  4685                           
  4686                           ; BSR set to: 0
  4687  000156  0100               	movlb	0	; () banked
  4688  000158  29CF               	incf	CANSetFilter@type& (0+255),w,b
  4689  00015A  A4D8               	btfss	status,2,c
  4690  00015C  D054               	goto	l4370
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;inc\CANlib.h: 754: {
  4694                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  4695  00015E  010F               	movlb	15	; () banked
  4696  000160  9701               	bcf	1,3,b	;volatile
  4697                           
  4698                           ; BSR set to: 15
  4699                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  4700  000162  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  4701  000166  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4702  00016A  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4703  00016E  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4704  000172  0E04               	movlw	4
  4705  000174  D006               	goto	u5140
  4706  000176                     u5145:
  4707  000176  0100               	movlb	0	; () banked
  4708  000178  90D8               	bcf	status,0,c
  4709  00017A  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4710  00017C  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4711  00017E  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4712  000180  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  4713  000182                     u5140:
  4714  000182  2EE8               	decfsz	wreg,f,c
  4715  000184  D7F8               	goto	u5145
  4716  000186  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4717  00018A  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4718  00018E  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4719  000192  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  4723  000196  0100               	movlb	0	; () banked
  4724  000198  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  4725  00019A  0100               	movlb	0	; () banked
  4726  00019C  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4727  00019E  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4728  0001A0  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4729  0001A2  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  4733  0001A4  C0D5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  4737  0001A8  0E07               	movlw	7
  4738  0001AA  0100               	movlb	0	; () banked
  4739  0001AC  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  4740  0001AE  0100               	movlb	0	; () banked
  4741  0001B0  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4742  0001B2  0E00               	movlw	0
  4743  0001B4  0100               	movlb	0	; () banked
  4744  0001B6  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4745  0001B8  0100               	movlb	0	; () banked
  4746  0001BA  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4747  0001BC  0E00               	movlw	0
  4748  0001BE  0100               	movlb	0	; () banked
  4749  0001C0  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4750  0001C2  0100               	movlb	0	; () banked
  4751  0001C4  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4752  0001C6  0E00               	movlw	0
  4753  0001C8  0100               	movlb	0	; () banked
  4754  0001CA  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4755  0001CC  0100               	movlb	0	; () banked
  4756  0001CE  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  4760  0001D0  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4761  0001D4  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4762  0001D8  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4763  0001DC  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4764  0001E0  0E05               	movlw	5
  4765  0001E2                     u5155:
  4766  0001E2  90D8               	bcf	status,0,c
  4767  0001E4  0100               	movlb	0	; () banked
  4768  0001E6  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  4769  0001E8  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4770  0001EA  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4771  0001EC  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4772  0001EE  2EE8               	decfsz	wreg,f,c
  4773  0001F0  D7F8               	goto	u5155
  4774  0001F2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4775  0001F6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4776  0001FA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4777  0001FE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  4781  000202  C0D5  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4782  000206                     l4370:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;inc\CANlib.h: 764: }
  4786                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4787  000206  0100               	movlb	0	; () banked
  4788  000208  05D4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4789  00020A  A4D8               	btfss	status,2,c
  4790  00020C  D058               	goto	l4388
  4791                           
  4792                           ; BSR set to: 0
  4793  00020E  0100               	movlb	0	; () banked
  4794  000210  29CF               	incf	CANSetFilter@type& (0+255),w,b
  4795  000212  A4D8               	btfss	status,2,c
  4796  000214  D054               	goto	l4388
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;inc\CANlib.h: 767: {
  4800                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  4801  000216  010F               	movlb	15	; () banked
  4802  000218  9705               	bcf	5,3,b	;volatile
  4803                           
  4804                           ; BSR set to: 15
  4805                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  4806  00021A  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  4807  00021E  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4808  000222  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4809  000226  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4810  00022A  0E04               	movlw	4
  4811  00022C  D006               	goto	u5180
  4812  00022E                     u5185:
  4813  00022E  0100               	movlb	0	; () banked
  4814  000230  90D8               	bcf	status,0,c
  4815  000232  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4816  000234  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4817  000236  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4818  000238  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  4819  00023A                     u5180:
  4820  00023A  2EE8               	decfsz	wreg,f,c
  4821  00023C  D7F8               	goto	u5185
  4822  00023E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4823  000242  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4824  000246  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4825  00024A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  4829  00024E  0100               	movlb	0	; () banked
  4830  000250  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  4831  000252  0100               	movlb	0	; () banked
  4832  000254  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4833  000256  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4834  000258  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4835  00025A  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  4839  00025C  C0D5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  4843  000260  0E07               	movlw	7
  4844  000262  0100               	movlb	0	; () banked
  4845  000264  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  4846  000266  0100               	movlb	0	; () banked
  4847  000268  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4848  00026A  0E00               	movlw	0
  4849  00026C  0100               	movlb	0	; () banked
  4850  00026E  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4851  000270  0100               	movlb	0	; () banked
  4852  000272  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4853  000274  0E00               	movlw	0
  4854  000276  0100               	movlb	0	; () banked
  4855  000278  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4856  00027A  0100               	movlb	0	; () banked
  4857  00027C  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4858  00027E  0E00               	movlw	0
  4859  000280  0100               	movlb	0	; () banked
  4860  000282  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4861  000284  0100               	movlb	0	; () banked
  4862  000286  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  4866  000288  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4867  00028C  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4868  000290  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4869  000294  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4870  000298  0E05               	movlw	5
  4871  00029A                     u5195:
  4872  00029A  90D8               	bcf	status,0,c
  4873  00029C  0100               	movlb	0	; () banked
  4874  00029E  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  4875  0002A0  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4876  0002A2  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4877  0002A4  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4878  0002A6  2EE8               	decfsz	wreg,f,c
  4879  0002A8  D7F8               	goto	u5195
  4880  0002AA  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4881  0002AE  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4882  0002B2  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4883  0002B6  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  4887  0002BA  C0D5  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4888  0002BE                     l4388:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 777: }
  4892                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4893  0002BE  0E02               	movlw	2
  4894  0002C0  0100               	movlb	0	; () banked
  4895  0002C2  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4896  0002C4  A4D8               	btfss	status,2,c
  4897  0002C6  D058               	goto	l4406
  4898                           
  4899                           ; BSR set to: 0
  4900  0002C8  0100               	movlb	0	; () banked
  4901  0002CA  29CF               	incf	CANSetFilter@type& (0+255),w,b
  4902  0002CC  A4D8               	btfss	status,2,c
  4903  0002CE  D054               	goto	l4406
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 780: {
  4907                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  4908  0002D0  010F               	movlb	15	; () banked
  4909  0002D2  9709               	bcf	9,3,b	;volatile
  4910                           
  4911                           ; BSR set to: 15
  4912                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  4913  0002D4  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  4914  0002D8  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4915  0002DC  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4916  0002E0  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4917  0002E4  0E04               	movlw	4
  4918  0002E6  D006               	goto	u5220
  4919  0002E8                     u5225:
  4920  0002E8  0100               	movlb	0	; () banked
  4921  0002EA  90D8               	bcf	status,0,c
  4922  0002EC  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4923  0002EE  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4924  0002F0  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4925  0002F2  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  4926  0002F4                     u5220:
  4927  0002F4  2EE8               	decfsz	wreg,f,c
  4928  0002F6  D7F8               	goto	u5225
  4929  0002F8  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4930  0002FC  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4931  000300  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4932  000304  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  4936  000308  0100               	movlb	0	; () banked
  4937  00030A  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  4938  00030C  0100               	movlb	0	; () banked
  4939  00030E  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4940  000310  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4941  000312  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4942  000314  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  4946  000316  C0D5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  4950  00031A  0E07               	movlw	7
  4951  00031C  0100               	movlb	0	; () banked
  4952  00031E  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  4953  000320  0100               	movlb	0	; () banked
  4954  000322  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4955  000324  0E00               	movlw	0
  4956  000326  0100               	movlb	0	; () banked
  4957  000328  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4958  00032A  0100               	movlb	0	; () banked
  4959  00032C  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4960  00032E  0E00               	movlw	0
  4961  000330  0100               	movlb	0	; () banked
  4962  000332  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4963  000334  0100               	movlb	0	; () banked
  4964  000336  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4965  000338  0E00               	movlw	0
  4966  00033A  0100               	movlb	0	; () banked
  4967  00033C  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4968  00033E  0100               	movlb	0	; () banked
  4969  000340  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  4973  000342  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4974  000346  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4975  00034A  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4976  00034E  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4977  000352  0E05               	movlw	5
  4978  000354                     u5235:
  4979  000354  90D8               	bcf	status,0,c
  4980  000356  0100               	movlb	0	; () banked
  4981  000358  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  4982  00035A  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4983  00035C  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4984  00035E  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4985  000360  2EE8               	decfsz	wreg,f,c
  4986  000362  D7F8               	goto	u5235
  4987  000364  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4988  000368  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4989  00036C  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4990  000370  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  4994  000374  C0D5  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4995  000378                     l4406:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 790: }
  4999                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5000  000378  0E03               	movlw	3
  5001  00037A  0100               	movlb	0	; () banked
  5002  00037C  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5003  00037E  A4D8               	btfss	status,2,c
  5004  000380  D058               	goto	l4424
  5005                           
  5006                           ; BSR set to: 0
  5007  000382  0100               	movlb	0	; () banked
  5008  000384  29CF               	incf	CANSetFilter@type& (0+255),w,b
  5009  000386  A4D8               	btfss	status,2,c
  5010  000388  D054               	goto	l4424
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;inc\CANlib.h: 793: {
  5014                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  5015  00038A  010F               	movlb	15	; () banked
  5016  00038C  970D               	bcf	13,3,b	;volatile
  5017                           
  5018                           ; BSR set to: 15
  5019                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  5020  00038E  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5021  000392  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5022  000396  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5023  00039A  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5024  00039E  0E04               	movlw	4
  5025  0003A0  D006               	goto	u5260
  5026  0003A2                     u5265:
  5027  0003A2  0100               	movlb	0	; () banked
  5028  0003A4  90D8               	bcf	status,0,c
  5029  0003A6  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5030  0003A8  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5031  0003AA  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5032  0003AC  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5033  0003AE                     u5260:
  5034  0003AE  2EE8               	decfsz	wreg,f,c
  5035  0003B0  D7F8               	goto	u5265
  5036  0003B2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5037  0003B6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5038  0003BA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5039  0003BE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  5043  0003C2  0100               	movlb	0	; () banked
  5044  0003C4  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5045  0003C6  0100               	movlb	0	; () banked
  5046  0003C8  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5047  0003CA  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5048  0003CC  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5049  0003CE  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  5053  0003D0  C0D5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  5057  0003D4  0E07               	movlw	7
  5058  0003D6  0100               	movlb	0	; () banked
  5059  0003D8  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5060  0003DA  0100               	movlb	0	; () banked
  5061  0003DC  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5062  0003DE  0E00               	movlw	0
  5063  0003E0  0100               	movlb	0	; () banked
  5064  0003E2  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5065  0003E4  0100               	movlb	0	; () banked
  5066  0003E6  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5067  0003E8  0E00               	movlw	0
  5068  0003EA  0100               	movlb	0	; () banked
  5069  0003EC  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5070  0003EE  0100               	movlb	0	; () banked
  5071  0003F0  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5072  0003F2  0E00               	movlw	0
  5073  0003F4  0100               	movlb	0	; () banked
  5074  0003F6  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5075  0003F8  0100               	movlb	0	; () banked
  5076  0003FA  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  5080  0003FC  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5081  000400  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5082  000404  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5083  000408  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5084  00040C  0E05               	movlw	5
  5085  00040E                     u5275:
  5086  00040E  90D8               	bcf	status,0,c
  5087  000410  0100               	movlb	0	; () banked
  5088  000412  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  5089  000414  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5090  000416  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5091  000418  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5092  00041A  2EE8               	decfsz	wreg,f,c
  5093  00041C  D7F8               	goto	u5275
  5094  00041E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5095  000422  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5096  000426  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5097  00042A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  5101  00042E  C0D5  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5102  000432                     l4424:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;inc\CANlib.h: 803: }
  5106                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5107  000432  0E04               	movlw	4
  5108  000434  0100               	movlb	0	; () banked
  5109  000436  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5110  000438  A4D8               	btfss	status,2,c
  5111  00043A  D058               	goto	l4442
  5112                           
  5113                           ; BSR set to: 0
  5114  00043C  0100               	movlb	0	; () banked
  5115  00043E  29CF               	incf	CANSetFilter@type& (0+255),w,b
  5116  000440  A4D8               	btfss	status,2,c
  5117  000442  D054               	goto	l4442
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;inc\CANlib.h: 806: {
  5121                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  5122  000444  010F               	movlb	15	; () banked
  5123  000446  9711               	bcf	17,3,b	;volatile
  5124                           
  5125                           ; BSR set to: 15
  5126                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  5127  000448  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5128  00044C  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5129  000450  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5130  000454  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5131  000458  0E04               	movlw	4
  5132  00045A  D006               	goto	u5300
  5133  00045C                     u5305:
  5134  00045C  0100               	movlb	0	; () banked
  5135  00045E  90D8               	bcf	status,0,c
  5136  000460  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5137  000462  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5138  000464  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5139  000466  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5140  000468                     u5300:
  5141  000468  2EE8               	decfsz	wreg,f,c
  5142  00046A  D7F8               	goto	u5305
  5143  00046C  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5144  000470  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5145  000474  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5146  000478  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  5150  00047C  0100               	movlb	0	; () banked
  5151  00047E  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5152  000480  0100               	movlb	0	; () banked
  5153  000482  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5154  000484  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5155  000486  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5156  000488  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  5160  00048A  C0D5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  5164  00048E  0E07               	movlw	7
  5165  000490  0100               	movlb	0	; () banked
  5166  000492  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5167  000494  0100               	movlb	0	; () banked
  5168  000496  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5169  000498  0E00               	movlw	0
  5170  00049A  0100               	movlb	0	; () banked
  5171  00049C  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5172  00049E  0100               	movlb	0	; () banked
  5173  0004A0  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5174  0004A2  0E00               	movlw	0
  5175  0004A4  0100               	movlb	0	; () banked
  5176  0004A6  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5177  0004A8  0100               	movlb	0	; () banked
  5178  0004AA  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5179  0004AC  0E00               	movlw	0
  5180  0004AE  0100               	movlb	0	; () banked
  5181  0004B0  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5182  0004B2  0100               	movlb	0	; () banked
  5183  0004B4  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  5187  0004B6  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5188  0004BA  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5189  0004BE  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5190  0004C2  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5191  0004C6  0E05               	movlw	5
  5192  0004C8                     u5315:
  5193  0004C8  90D8               	bcf	status,0,c
  5194  0004CA  0100               	movlb	0	; () banked
  5195  0004CC  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  5196  0004CE  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5197  0004D0  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5198  0004D2  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5199  0004D4  2EE8               	decfsz	wreg,f,c
  5200  0004D6  D7F8               	goto	u5315
  5201  0004D8  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5202  0004DC  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5203  0004E0  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5204  0004E4  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  5208  0004E8  C0D5  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5209  0004EC                     l4442:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;inc\CANlib.h: 816: }
  5213                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5214  0004EC  0E05               	movlw	5
  5215  0004EE  0100               	movlb	0	; () banked
  5216  0004F0  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5217  0004F2  A4D8               	btfss	status,2,c
  5218  0004F4  D058               	goto	l4460
  5219                           
  5220                           ; BSR set to: 0
  5221  0004F6  0100               	movlb	0	; () banked
  5222  0004F8  29CF               	incf	CANSetFilter@type& (0+255),w,b
  5223  0004FA  A4D8               	btfss	status,2,c
  5224  0004FC  D054               	goto	l4460
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;inc\CANlib.h: 819: {
  5228                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  5229  0004FE  010F               	movlb	15	; () banked
  5230  000500  9715               	bcf	21,3,b	;volatile
  5231                           
  5232                           ; BSR set to: 15
  5233                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  5234  000502  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5235  000506  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5236  00050A  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5237  00050E  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5238  000512  0E04               	movlw	4
  5239  000514  D006               	goto	u5340
  5240  000516                     u5345:
  5241  000516  0100               	movlb	0	; () banked
  5242  000518  90D8               	bcf	status,0,c
  5243  00051A  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5244  00051C  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5245  00051E  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5246  000520  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5247  000522                     u5340:
  5248  000522  2EE8               	decfsz	wreg,f,c
  5249  000524  D7F8               	goto	u5345
  5250  000526  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5251  00052A  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5252  00052E  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5253  000532  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  5257  000536  0100               	movlb	0	; () banked
  5258  000538  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5259  00053A  0100               	movlb	0	; () banked
  5260  00053C  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5261  00053E  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5262  000540  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5263  000542  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  5267  000544  C0D5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  5271  000548  0E07               	movlw	7
  5272  00054A  0100               	movlb	0	; () banked
  5273  00054C  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5274  00054E  0100               	movlb	0	; () banked
  5275  000550  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5276  000552  0E00               	movlw	0
  5277  000554  0100               	movlb	0	; () banked
  5278  000556  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5279  000558  0100               	movlb	0	; () banked
  5280  00055A  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5281  00055C  0E00               	movlw	0
  5282  00055E  0100               	movlb	0	; () banked
  5283  000560  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5284  000562  0100               	movlb	0	; () banked
  5285  000564  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5286  000566  0E00               	movlw	0
  5287  000568  0100               	movlb	0	; () banked
  5288  00056A  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5289  00056C  0100               	movlb	0	; () banked
  5290  00056E  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  5294  000570  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5295  000574  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5296  000578  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5297  00057C  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5298  000580  0E05               	movlw	5
  5299  000582                     u5355:
  5300  000582  90D8               	bcf	status,0,c
  5301  000584  0100               	movlb	0	; () banked
  5302  000586  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  5303  000588  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5304  00058A  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5305  00058C  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5306  00058E  2EE8               	decfsz	wreg,f,c
  5307  000590  D7F8               	goto	u5355
  5308  000592  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5309  000596  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5310  00059A  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5311  00059E  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  5315  0005A2  C0D5  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5316  0005A6                     l4460:
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 829: }
  5320                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5321  0005A6  0100               	movlb	0	; () banked
  5322  0005A8  51D4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5323  0005AA  0100               	movlb	0	; () banked
  5324  0005AC  A4D8               	btfss	status,2,c
  5325  0005AE  D089               	goto	l4494
  5326                           
  5327                           ; BSR set to: 0
  5328  0005B0  0EF7               	movlw	247
  5329  0005B2  0100               	movlb	0	; () banked
  5330  0005B4  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5331  0005B6  A4D8               	btfss	status,2,c
  5332  0005B8  D084               	goto	l4494
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;inc\CANlib.h: 833: {
  5336                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  5337  0005BA  010F               	movlb	15	; () banked
  5338  0005BC  8701               	bsf	1,3,b	;volatile
  5339                           
  5340                           ; BSR set to: 15
  5341                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  5342  0005BE  0100               	movlb	0	; () banked
  5343  0005C0  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  5344  0005C2  0100               	movlb	0	; () banked
  5345  0005C4  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5346  0005C6  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5347  0005C8  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5348  0005CA  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  5352  0005CC  C0D5  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  5356  0005D0  0E00               	movlw	0
  5357  0005D2  0100               	movlb	0	; () banked
  5358  0005D4  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5359  0005D6  0100               	movlb	0	; () banked
  5360  0005D8  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5361  0005DA  0EFF               	movlw	255
  5362  0005DC  0100               	movlb	0	; () banked
  5363  0005DE  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5364  0005E0  0100               	movlb	0	; () banked
  5365  0005E2  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5366  0005E4  0E00               	movlw	0
  5367  0005E6  0100               	movlb	0	; () banked
  5368  0005E8  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5369  0005EA  0100               	movlb	0	; () banked
  5370  0005EC  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5371  0005EE  0E00               	movlw	0
  5372  0005F0  0100               	movlb	0	; () banked
  5373  0005F2  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5374  0005F4  0100               	movlb	0	; () banked
  5375  0005F6  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  5379  0005F8  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5380  0005FC  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5381  000600  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5382  000604  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5383  000608  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  5384  00060C  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5385  000610  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5386  000614  0100               	movlb	0	; () banked
  5387  000616  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  5388  000618  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5389  00061C  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5390  000620  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5391  000624  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  5395  000628  C0D5  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  5399  00062C  0100               	movlb	0	; () banked
  5400  00062E  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5401  000630  D003               	goto	l481
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  5405  000632  010F               	movlb	15	; () banked
  5406  000634  8101               	bsf	1,0,b	;volatile
  5407  000636  D002               	goto	l482
  5408  000638                     l481:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;inc\CANlib.h: 845: else
  5412                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  5413  000638  010F               	movlb	15	; () banked
  5414  00063A  9101               	bcf	1,0,b	;volatile
  5415  00063C                     l482:
  5416                           
  5417                           ; BSR set to: 15
  5418                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  5419  00063C  0100               	movlb	0	; () banked
  5420  00063E  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5421  000640  D003               	goto	l483
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  5425  000642  010F               	movlb	15	; () banked
  5426  000644  8301               	bsf	1,1,b	;volatile
  5427  000646  D002               	goto	l484
  5428  000648                     l483:
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 850: else
  5432                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  5433  000648  010F               	movlb	15	; () banked
  5434  00064A  9301               	bcf	1,1,b	;volatile
  5435  00064C                     l484:
  5436                           
  5437                           ; BSR set to: 15
  5438                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  5439  00064C  0100               	movlb	0	; () banked
  5440  00064E  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5441  000650  D003               	goto	l485
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  5445  000652  010F               	movlb	15	; () banked
  5446  000654  8B01               	bsf	1,5,b	;volatile
  5447  000656  D002               	goto	l486
  5448  000658                     l485:
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 855: else
  5452                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  5453  000658  010F               	movlb	15	; () banked
  5454  00065A  9B01               	bcf	1,5,b	;volatile
  5455  00065C                     l486:
  5456                           
  5457                           ; BSR set to: 15
  5458                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  5459  00065C  0100               	movlb	0	; () banked
  5460  00065E  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5461  000660  D003               	goto	l487
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  5465  000662  010F               	movlb	15	; () banked
  5466  000664  8D01               	bsf	1,6,b	;volatile
  5467  000666  D002               	goto	l488
  5468  000668                     l487:
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 860: else
  5472                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  5473  000668  010F               	movlb	15	; () banked
  5474  00066A  9D01               	bcf	1,6,b	;volatile
  5475  00066C                     l488:
  5476                           
  5477                           ; BSR set to: 15
  5478                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  5479  00066C  0100               	movlb	0	; () banked
  5480  00066E  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5481  000670  D003               	goto	l489
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  5485  000672  010F               	movlb	15	; () banked
  5486  000674  8F01               	bsf	1,7,b	;volatile
  5487  000676  D002               	goto	l4488
  5488  000678                     l489:
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;inc\CANlib.h: 865: else
  5492                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  5493  000678  010F               	movlb	15	; () banked
  5494  00067A  9F01               	bcf	1,7,b	;volatile
  5495  00067C                     l4488:
  5496                           
  5497                           ; BSR set to: 15
  5498                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  5499  00067C  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5500  000680  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5501  000684  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5502  000688  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5503  00068C  0E16               	movlw	22
  5504  00068E  D006               	goto	u5430
  5505  000690                     u5435:
  5506  000690  0100               	movlb	0	; () banked
  5507  000692  90D8               	bcf	status,0,c
  5508  000694  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5509  000696  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5510  000698  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5511  00069A  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5512  00069C                     u5430:
  5513  00069C  2EE8               	decfsz	wreg,f,c
  5514  00069E  D7F8               	goto	u5435
  5515  0006A0  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5516  0006A4  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5517  0006A8  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5518  0006AC  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  5522  0006B0  0100               	movlb	0	; () banked
  5523  0006B2  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5524  0006B4  0100               	movlb	0	; () banked
  5525  0006B6  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5526  0006B8  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5527  0006BA  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5528  0006BC  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  5532  0006BE  C0D5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5533  0006C2                     l4494:
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 871: }
  5537                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5538  0006C2  0100               	movlb	0	; () banked
  5539  0006C4  05D4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5540  0006C6  A4D8               	btfss	status,2,c
  5541  0006C8  D089               	goto	l4528
  5542                           
  5543                           ; BSR set to: 0
  5544  0006CA  0EF7               	movlw	247
  5545  0006CC  0100               	movlb	0	; () banked
  5546  0006CE  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5547  0006D0  A4D8               	btfss	status,2,c
  5548  0006D2  D084               	goto	l4528
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;inc\CANlib.h: 874: {
  5552                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  5553  0006D4  010F               	movlb	15	; () banked
  5554  0006D6  8705               	bsf	5,3,b	;volatile
  5555                           
  5556                           ; BSR set to: 15
  5557                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  5558  0006D8  0100               	movlb	0	; () banked
  5559  0006DA  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  5560  0006DC  0100               	movlb	0	; () banked
  5561  0006DE  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5562  0006E0  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5563  0006E2  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5564  0006E4  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  5568  0006E6  C0D5  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  5572  0006EA  0E00               	movlw	0
  5573  0006EC  0100               	movlb	0	; () banked
  5574  0006EE  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5575  0006F0  0100               	movlb	0	; () banked
  5576  0006F2  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5577  0006F4  0EFF               	movlw	255
  5578  0006F6  0100               	movlb	0	; () banked
  5579  0006F8  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5580  0006FA  0100               	movlb	0	; () banked
  5581  0006FC  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5582  0006FE  0E00               	movlw	0
  5583  000700  0100               	movlb	0	; () banked
  5584  000702  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5585  000704  0100               	movlb	0	; () banked
  5586  000706  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5587  000708  0E00               	movlw	0
  5588  00070A  0100               	movlb	0	; () banked
  5589  00070C  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5590  00070E  0100               	movlb	0	; () banked
  5591  000710  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  5595  000712  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5596  000716  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5597  00071A  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5598  00071E  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5599  000722  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  5600  000726  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5601  00072A  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5602  00072E  0100               	movlb	0	; () banked
  5603  000730  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  5604  000732  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5605  000736  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5606  00073A  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5607  00073E  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  5611  000742  C0D5  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  5615  000746  0100               	movlb	0	; () banked
  5616  000748  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5617  00074A  D003               	goto	l492
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  5621  00074C  010F               	movlb	15	; () banked
  5622  00074E  8105               	bsf	5,0,b	;volatile
  5623  000750  D002               	goto	l493
  5624  000752                     l492:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 886: else
  5628                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  5629  000752  010F               	movlb	15	; () banked
  5630  000754  9105               	bcf	5,0,b	;volatile
  5631  000756                     l493:
  5632                           
  5633                           ; BSR set to: 15
  5634                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  5635  000756  0100               	movlb	0	; () banked
  5636  000758  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5637  00075A  D003               	goto	l494
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  5641  00075C  010F               	movlb	15	; () banked
  5642  00075E  8305               	bsf	5,1,b	;volatile
  5643  000760  D002               	goto	l495
  5644  000762                     l494:
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;inc\CANlib.h: 891: else
  5648                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  5649  000762  010F               	movlb	15	; () banked
  5650  000764  9305               	bcf	5,1,b	;volatile
  5651  000766                     l495:
  5652                           
  5653                           ; BSR set to: 15
  5654                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  5655  000766  0100               	movlb	0	; () banked
  5656  000768  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5657  00076A  D003               	goto	l496
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  5661  00076C  010F               	movlb	15	; () banked
  5662  00076E  8B05               	bsf	5,5,b	;volatile
  5663  000770  D002               	goto	l497
  5664  000772                     l496:
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;inc\CANlib.h: 896: else
  5668                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  5669  000772  010F               	movlb	15	; () banked
  5670  000774  9B05               	bcf	5,5,b	;volatile
  5671  000776                     l497:
  5672                           
  5673                           ; BSR set to: 15
  5674                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  5675  000776  0100               	movlb	0	; () banked
  5676  000778  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5677  00077A  D003               	goto	l498
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  5681  00077C  010F               	movlb	15	; () banked
  5682  00077E  8D05               	bsf	5,6,b	;volatile
  5683  000780  D002               	goto	l499
  5684  000782                     l498:
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;inc\CANlib.h: 901: else
  5688                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  5689  000782  010F               	movlb	15	; () banked
  5690  000784  9D05               	bcf	5,6,b	;volatile
  5691  000786                     l499:
  5692                           
  5693                           ; BSR set to: 15
  5694                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  5695  000786  0100               	movlb	0	; () banked
  5696  000788  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5697  00078A  D003               	goto	l500
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  5701  00078C  010F               	movlb	15	; () banked
  5702  00078E  8F05               	bsf	5,7,b	;volatile
  5703  000790  D002               	goto	l4522
  5704  000792                     l500:
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;inc\CANlib.h: 906: else
  5708                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  5709  000792  010F               	movlb	15	; () banked
  5710  000794  9F05               	bcf	5,7,b	;volatile
  5711  000796                     l4522:
  5712                           
  5713                           ; BSR set to: 15
  5714                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  5715  000796  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5716  00079A  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5717  00079E  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5718  0007A2  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5719  0007A6  0E16               	movlw	22
  5720  0007A8  D006               	goto	u5510
  5721  0007AA                     u5515:
  5722  0007AA  0100               	movlb	0	; () banked
  5723  0007AC  90D8               	bcf	status,0,c
  5724  0007AE  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5725  0007B0  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5726  0007B2  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5727  0007B4  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5728  0007B6                     u5510:
  5729  0007B6  2EE8               	decfsz	wreg,f,c
  5730  0007B8  D7F8               	goto	u5515
  5731  0007BA  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5732  0007BE  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5733  0007C2  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5734  0007C6  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  5738  0007CA  0100               	movlb	0	; () banked
  5739  0007CC  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5740  0007CE  0100               	movlb	0	; () banked
  5741  0007D0  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5742  0007D2  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5743  0007D4  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5744  0007D6  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  5748  0007D8  C0D5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5749  0007DC                     l4528:
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;inc\CANlib.h: 912: }
  5753                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5754  0007DC  0E02               	movlw	2
  5755  0007DE  0100               	movlb	0	; () banked
  5756  0007E0  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5757  0007E2  A4D8               	btfss	status,2,c
  5758  0007E4  D089               	goto	l4562
  5759                           
  5760                           ; BSR set to: 0
  5761  0007E6  0EF7               	movlw	247
  5762  0007E8  0100               	movlb	0	; () banked
  5763  0007EA  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5764  0007EC  A4D8               	btfss	status,2,c
  5765  0007EE  D084               	goto	l4562
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;inc\CANlib.h: 916: {
  5769                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  5770  0007F0  010F               	movlb	15	; () banked
  5771  0007F2  8709               	bsf	9,3,b	;volatile
  5772                           
  5773                           ; BSR set to: 15
  5774                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  5775  0007F4  0100               	movlb	0	; () banked
  5776  0007F6  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  5777  0007F8  0100               	movlb	0	; () banked
  5778  0007FA  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5779  0007FC  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5780  0007FE  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5781  000800  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  5785  000802  C0D5  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  5789  000806  0E00               	movlw	0
  5790  000808  0100               	movlb	0	; () banked
  5791  00080A  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5792  00080C  0100               	movlb	0	; () banked
  5793  00080E  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5794  000810  0EFF               	movlw	255
  5795  000812  0100               	movlb	0	; () banked
  5796  000814  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5797  000816  0100               	movlb	0	; () banked
  5798  000818  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5799  00081A  0E00               	movlw	0
  5800  00081C  0100               	movlb	0	; () banked
  5801  00081E  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5802  000820  0100               	movlb	0	; () banked
  5803  000822  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5804  000824  0E00               	movlw	0
  5805  000826  0100               	movlb	0	; () banked
  5806  000828  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5807  00082A  0100               	movlb	0	; () banked
  5808  00082C  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  5812  00082E  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5813  000832  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5814  000836  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5815  00083A  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5816  00083E  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  5817  000842  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5818  000846  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5819  00084A  0100               	movlb	0	; () banked
  5820  00084C  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  5821  00084E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5822  000852  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5823  000856  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5824  00085A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  5828  00085E  C0D5  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  5832  000862  0100               	movlb	0	; () banked
  5833  000864  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5834  000866  D003               	goto	l503
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  5838  000868  010F               	movlb	15	; () banked
  5839  00086A  8109               	bsf	9,0,b	;volatile
  5840  00086C  D002               	goto	l504
  5841  00086E                     l503:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 928: else
  5845                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  5846  00086E  010F               	movlb	15	; () banked
  5847  000870  9109               	bcf	9,0,b	;volatile
  5848  000872                     l504:
  5849                           
  5850                           ; BSR set to: 15
  5851                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  5852  000872  0100               	movlb	0	; () banked
  5853  000874  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5854  000876  D003               	goto	l505
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  5858  000878  010F               	movlb	15	; () banked
  5859  00087A  8309               	bsf	9,1,b	;volatile
  5860  00087C  D002               	goto	l506
  5861  00087E                     l505:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 933: else
  5865                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  5866  00087E  010F               	movlb	15	; () banked
  5867  000880  9309               	bcf	9,1,b	;volatile
  5868  000882                     l506:
  5869                           
  5870                           ; BSR set to: 15
  5871                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  5872  000882  0100               	movlb	0	; () banked
  5873  000884  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5874  000886  D003               	goto	l507
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  5878  000888  010F               	movlb	15	; () banked
  5879  00088A  8B09               	bsf	9,5,b	;volatile
  5880  00088C  D002               	goto	l508
  5881  00088E                     l507:
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;inc\CANlib.h: 938: else
  5885                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  5886  00088E  010F               	movlb	15	; () banked
  5887  000890  9B09               	bcf	9,5,b	;volatile
  5888  000892                     l508:
  5889                           
  5890                           ; BSR set to: 15
  5891                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  5892  000892  0100               	movlb	0	; () banked
  5893  000894  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5894  000896  D003               	goto	l509
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  5898  000898  010F               	movlb	15	; () banked
  5899  00089A  8D09               	bsf	9,6,b	;volatile
  5900  00089C  D002               	goto	l510
  5901  00089E                     l509:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;inc\CANlib.h: 943: else
  5905                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  5906  00089E  010F               	movlb	15	; () banked
  5907  0008A0  9D09               	bcf	9,6,b	;volatile
  5908  0008A2                     l510:
  5909                           
  5910                           ; BSR set to: 15
  5911                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  5912  0008A2  0100               	movlb	0	; () banked
  5913  0008A4  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5914  0008A6  D003               	goto	l511
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  5918  0008A8  010F               	movlb	15	; () banked
  5919  0008AA  8F09               	bsf	9,7,b	;volatile
  5920  0008AC  D002               	goto	l4556
  5921  0008AE                     l511:
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;inc\CANlib.h: 948: else
  5925                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  5926  0008AE  010F               	movlb	15	; () banked
  5927  0008B0  9F09               	bcf	9,7,b	;volatile
  5928  0008B2                     l4556:
  5929                           
  5930                           ; BSR set to: 15
  5931                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  5932  0008B2  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5933  0008B6  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5934  0008BA  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5935  0008BE  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5936  0008C2  0E16               	movlw	22
  5937  0008C4  D006               	goto	u5590
  5938  0008C6                     u5595:
  5939  0008C6  0100               	movlb	0	; () banked
  5940  0008C8  90D8               	bcf	status,0,c
  5941  0008CA  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5942  0008CC  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5943  0008CE  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5944  0008D0  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5945  0008D2                     u5590:
  5946  0008D2  2EE8               	decfsz	wreg,f,c
  5947  0008D4  D7F8               	goto	u5595
  5948  0008D6  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5949  0008DA  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5950  0008DE  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5951  0008E2  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  5955  0008E6  0100               	movlb	0	; () banked
  5956  0008E8  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5957  0008EA  0100               	movlb	0	; () banked
  5958  0008EC  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5959  0008EE  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5960  0008F0  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5961  0008F2  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  5965  0008F4  C0D5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5966  0008F8                     l4562:
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;inc\CANlib.h: 954: }
  5970                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5971  0008F8  0E03               	movlw	3
  5972  0008FA  0100               	movlb	0	; () banked
  5973  0008FC  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5974  0008FE  A4D8               	btfss	status,2,c
  5975  000900  D089               	goto	l4596
  5976                           
  5977                           ; BSR set to: 0
  5978  000902  0EF7               	movlw	247
  5979  000904  0100               	movlb	0	; () banked
  5980  000906  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5981  000908  A4D8               	btfss	status,2,c
  5982  00090A  D084               	goto	l4596
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;inc\CANlib.h: 957: {
  5986                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  5987  00090C  010F               	movlb	15	; () banked
  5988  00090E  870D               	bsf	13,3,b	;volatile
  5989                           
  5990                           ; BSR set to: 15
  5991                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  5992  000910  0100               	movlb	0	; () banked
  5993  000912  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  5994  000914  0100               	movlb	0	; () banked
  5995  000916  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5996  000918  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5997  00091A  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5998  00091C  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  6002  00091E  C0D5  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  6006  000922  0E00               	movlw	0
  6007  000924  0100               	movlb	0	; () banked
  6008  000926  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  6009  000928  0100               	movlb	0	; () banked
  6010  00092A  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6011  00092C  0EFF               	movlw	255
  6012  00092E  0100               	movlb	0	; () banked
  6013  000930  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6014  000932  0100               	movlb	0	; () banked
  6015  000934  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6016  000936  0E00               	movlw	0
  6017  000938  0100               	movlb	0	; () banked
  6018  00093A  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6019  00093C  0100               	movlb	0	; () banked
  6020  00093E  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6021  000940  0E00               	movlw	0
  6022  000942  0100               	movlb	0	; () banked
  6023  000944  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6024  000946  0100               	movlb	0	; () banked
  6025  000948  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  6029  00094A  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  6030  00094E  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6031  000952  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6032  000956  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6033  00095A  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  6034  00095E  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6035  000962  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6036  000966  0100               	movlb	0	; () banked
  6037  000968  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  6038  00096A  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6039  00096E  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6040  000972  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6041  000976  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  6045  00097A  C0D5  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  6049  00097E  0100               	movlb	0	; () banked
  6050  000980  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6051  000982  D003               	goto	l514
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  6055  000984  010F               	movlb	15	; () banked
  6056  000986  810D               	bsf	13,0,b	;volatile
  6057  000988  D002               	goto	l515
  6058  00098A                     l514:
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;inc\CANlib.h: 969: else
  6062                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  6063  00098A  010F               	movlb	15	; () banked
  6064  00098C  910D               	bcf	13,0,b	;volatile
  6065  00098E                     l515:
  6066                           
  6067                           ; BSR set to: 15
  6068                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  6069  00098E  0100               	movlb	0	; () banked
  6070  000990  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6071  000992  D003               	goto	l516
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  6075  000994  010F               	movlb	15	; () banked
  6076  000996  830D               	bsf	13,1,b	;volatile
  6077  000998  D002               	goto	l517
  6078  00099A                     l516:
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;inc\CANlib.h: 974: else
  6082                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  6083  00099A  010F               	movlb	15	; () banked
  6084  00099C  930D               	bcf	13,1,b	;volatile
  6085  00099E                     l517:
  6086                           
  6087                           ; BSR set to: 15
  6088                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  6089  00099E  0100               	movlb	0	; () banked
  6090  0009A0  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6091  0009A2  D003               	goto	l518
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  6095  0009A4  010F               	movlb	15	; () banked
  6096  0009A6  8B0D               	bsf	13,5,b	;volatile
  6097  0009A8  D002               	goto	l519
  6098  0009AA                     l518:
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;inc\CANlib.h: 979: else
  6102                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  6103  0009AA  010F               	movlb	15	; () banked
  6104  0009AC  9B0D               	bcf	13,5,b	;volatile
  6105  0009AE                     l519:
  6106                           
  6107                           ; BSR set to: 15
  6108                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  6109  0009AE  0100               	movlb	0	; () banked
  6110  0009B0  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6111  0009B2  D003               	goto	l520
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  6115  0009B4  010F               	movlb	15	; () banked
  6116  0009B6  8D0D               	bsf	13,6,b	;volatile
  6117  0009B8  D002               	goto	l521
  6118  0009BA                     l520:
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;inc\CANlib.h: 984: else
  6122                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  6123  0009BA  010F               	movlb	15	; () banked
  6124  0009BC  9D0D               	bcf	13,6,b	;volatile
  6125  0009BE                     l521:
  6126                           
  6127                           ; BSR set to: 15
  6128                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  6129  0009BE  0100               	movlb	0	; () banked
  6130  0009C0  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6131  0009C2  D003               	goto	l522
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  6135  0009C4  010F               	movlb	15	; () banked
  6136  0009C6  8F0D               	bsf	13,7,b	;volatile
  6137  0009C8  D002               	goto	l4590
  6138  0009CA                     l522:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;inc\CANlib.h: 989: else
  6142                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  6143  0009CA  010F               	movlb	15	; () banked
  6144  0009CC  9F0D               	bcf	13,7,b	;volatile
  6145  0009CE                     l4590:
  6146                           
  6147                           ; BSR set to: 15
  6148                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  6149  0009CE  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  6150  0009D2  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6151  0009D6  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6152  0009DA  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6153  0009DE  0E16               	movlw	22
  6154  0009E0  D006               	goto	u5670
  6155  0009E2                     u5675:
  6156  0009E2  0100               	movlb	0	; () banked
  6157  0009E4  90D8               	bcf	status,0,c
  6158  0009E6  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6159  0009E8  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6160  0009EA  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6161  0009EC  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  6162  0009EE                     u5670:
  6163  0009EE  2EE8               	decfsz	wreg,f,c
  6164  0009F0  D7F8               	goto	u5675
  6165  0009F2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6166  0009F6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6167  0009FA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6168  0009FE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  6172  000A02  0100               	movlb	0	; () banked
  6173  000A04  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  6174  000A06  0100               	movlb	0	; () banked
  6175  000A08  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6176  000A0A  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6177  000A0C  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6178  000A0E  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  6182  000A10  C0D5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6183  000A14                     l4596:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;inc\CANlib.h: 995: }
  6187                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6188  000A14  0E04               	movlw	4
  6189  000A16  0100               	movlb	0	; () banked
  6190  000A18  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6191  000A1A  A4D8               	btfss	status,2,c
  6192  000A1C  D089               	goto	l4630
  6193                           
  6194                           ; BSR set to: 0
  6195  000A1E  0EF7               	movlw	247
  6196  000A20  0100               	movlb	0	; () banked
  6197  000A22  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  6198  000A24  A4D8               	btfss	status,2,c
  6199  000A26  D084               	goto	l4630
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;inc\CANlib.h: 998: {
  6203                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  6204  000A28  010F               	movlb	15	; () banked
  6205  000A2A  8711               	bsf	17,3,b	;volatile
  6206                           
  6207                           ; BSR set to: 15
  6208                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  6209  000A2C  0100               	movlb	0	; () banked
  6210  000A2E  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  6211  000A30  0100               	movlb	0	; () banked
  6212  000A32  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6213  000A34  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6214  000A36  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6215  000A38  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  6219  000A3A  C0D5  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  6223  000A3E  0E00               	movlw	0
  6224  000A40  0100               	movlb	0	; () banked
  6225  000A42  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  6226  000A44  0100               	movlb	0	; () banked
  6227  000A46  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6228  000A48  0EFF               	movlw	255
  6229  000A4A  0100               	movlb	0	; () banked
  6230  000A4C  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6231  000A4E  0100               	movlb	0	; () banked
  6232  000A50  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6233  000A52  0E00               	movlw	0
  6234  000A54  0100               	movlb	0	; () banked
  6235  000A56  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6236  000A58  0100               	movlb	0	; () banked
  6237  000A5A  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6238  000A5C  0E00               	movlw	0
  6239  000A5E  0100               	movlb	0	; () banked
  6240  000A60  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6241  000A62  0100               	movlb	0	; () banked
  6242  000A64  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  6246  000A66  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  6247  000A6A  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6248  000A6E  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6249  000A72  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6250  000A76  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  6251  000A7A  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6252  000A7E  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6253  000A82  0100               	movlb	0	; () banked
  6254  000A84  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  6255  000A86  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6256  000A8A  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6257  000A8E  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6258  000A92  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  6262  000A96  C0D5  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  6266  000A9A  0100               	movlb	0	; () banked
  6267  000A9C  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6268  000A9E  D003               	goto	l525
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  6272  000AA0  010F               	movlb	15	; () banked
  6273  000AA2  8111               	bsf	17,0,b	;volatile
  6274  000AA4  D002               	goto	l526
  6275  000AA6                     l525:
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;inc\CANlib.h: 1010: else
  6279                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  6280  000AA6  010F               	movlb	15	; () banked
  6281  000AA8  9111               	bcf	17,0,b	;volatile
  6282  000AAA                     l526:
  6283                           
  6284                           ; BSR set to: 15
  6285                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  6286  000AAA  0100               	movlb	0	; () banked
  6287  000AAC  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6288  000AAE  D003               	goto	l527
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  6292  000AB0  010F               	movlb	15	; () banked
  6293  000AB2  8311               	bsf	17,1,b	;volatile
  6294  000AB4  D002               	goto	l528
  6295  000AB6                     l527:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;inc\CANlib.h: 1015: else
  6299                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  6300  000AB6  010F               	movlb	15	; () banked
  6301  000AB8  9311               	bcf	17,1,b	;volatile
  6302  000ABA                     l528:
  6303                           
  6304                           ; BSR set to: 15
  6305                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  6306  000ABA  0100               	movlb	0	; () banked
  6307  000ABC  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6308  000ABE  D003               	goto	l529
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  6312  000AC0  010F               	movlb	15	; () banked
  6313  000AC2  8B11               	bsf	17,5,b	;volatile
  6314  000AC4  D002               	goto	l530
  6315  000AC6                     l529:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;inc\CANlib.h: 1020: else
  6319                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  6320  000AC6  010F               	movlb	15	; () banked
  6321  000AC8  9B11               	bcf	17,5,b	;volatile
  6322  000ACA                     l530:
  6323                           
  6324                           ; BSR set to: 15
  6325                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  6326  000ACA  0100               	movlb	0	; () banked
  6327  000ACC  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6328  000ACE  D003               	goto	l531
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  6332  000AD0  010F               	movlb	15	; () banked
  6333  000AD2  8D11               	bsf	17,6,b	;volatile
  6334  000AD4  D002               	goto	l532
  6335  000AD6                     l531:
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;inc\CANlib.h: 1025: else
  6339                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  6340  000AD6  010F               	movlb	15	; () banked
  6341  000AD8  9D11               	bcf	17,6,b	;volatile
  6342  000ADA                     l532:
  6343                           
  6344                           ; BSR set to: 15
  6345                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  6346  000ADA  0100               	movlb	0	; () banked
  6347  000ADC  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6348  000ADE  D003               	goto	l533
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  6352  000AE0  010F               	movlb	15	; () banked
  6353  000AE2  8F11               	bsf	17,7,b	;volatile
  6354  000AE4  D002               	goto	l4624
  6355  000AE6                     l533:
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;inc\CANlib.h: 1030: else
  6359                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  6360  000AE6  010F               	movlb	15	; () banked
  6361  000AE8  9F11               	bcf	17,7,b	;volatile
  6362  000AEA                     l4624:
  6363                           
  6364                           ; BSR set to: 15
  6365                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  6366  000AEA  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  6367  000AEE  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6368  000AF2  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6369  000AF6  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6370  000AFA  0E16               	movlw	22
  6371  000AFC  D006               	goto	u5750
  6372  000AFE                     u5755:
  6373  000AFE  0100               	movlb	0	; () banked
  6374  000B00  90D8               	bcf	status,0,c
  6375  000B02  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6376  000B04  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6377  000B06  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6378  000B08  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  6379  000B0A                     u5750:
  6380  000B0A  2EE8               	decfsz	wreg,f,c
  6381  000B0C  D7F8               	goto	u5755
  6382  000B0E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6383  000B12  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6384  000B16  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6385  000B1A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  6389  000B1E  0100               	movlb	0	; () banked
  6390  000B20  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  6391  000B22  0100               	movlb	0	; () banked
  6392  000B24  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6393  000B26  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6394  000B28  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6395  000B2A  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  6399  000B2C  C0D5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6400  000B30                     l4630:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;inc\CANlib.h: 1036: }
  6404                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6405  000B30  0E05               	movlw	5
  6406  000B32  0100               	movlb	0	; () banked
  6407  000B34  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6408  000B36  A4D8               	btfss	status,2,c
  6409  000B38  0012               	return	
  6410                           
  6411                           ; BSR set to: 0
  6412  000B3A  0EF7               	movlw	247
  6413  000B3C  0100               	movlb	0	; () banked
  6414  000B3E  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  6415  000B40  A4D8               	btfss	status,2,c
  6416  000B42  0012               	return	
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;inc\CANlib.h: 1039: {
  6420                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  6421  000B44  010F               	movlb	15	; () banked
  6422  000B46  8715               	bsf	21,3,b	;volatile
  6423                           
  6424                           ; BSR set to: 15
  6425                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  6426  000B48  0100               	movlb	0	; () banked
  6427  000B4A  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  6428  000B4C  0100               	movlb	0	; () banked
  6429  000B4E  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6430  000B50  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6431  000B52  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6432  000B54  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  6436  000B56  C0D5  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  6440  000B5A  0E00               	movlw	0
  6441  000B5C  0100               	movlb	0	; () banked
  6442  000B5E  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  6443  000B60  0100               	movlb	0	; () banked
  6444  000B62  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6445  000B64  0EFF               	movlw	255
  6446  000B66  0100               	movlb	0	; () banked
  6447  000B68  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6448  000B6A  0100               	movlb	0	; () banked
  6449  000B6C  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6450  000B6E  0E00               	movlw	0
  6451  000B70  0100               	movlb	0	; () banked
  6452  000B72  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6453  000B74  0100               	movlb	0	; () banked
  6454  000B76  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6455  000B78  0E00               	movlw	0
  6456  000B7A  0100               	movlb	0	; () banked
  6457  000B7C  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6458  000B7E  0100               	movlb	0	; () banked
  6459  000B80  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  6463  000B82  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  6464  000B86  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6465  000B8A  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6466  000B8E  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6467  000B92  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  6468  000B96  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6469  000B9A  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6470  000B9E  0100               	movlb	0	; () banked
  6471  000BA0  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  6472  000BA2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6473  000BA6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6474  000BAA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6475  000BAE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  6479  000BB2  C0D5  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  6483  000BB6  0100               	movlb	0	; () banked
  6484  000BB8  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6485  000BBA  D003               	goto	l536
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  6489  000BBC  010F               	movlb	15	; () banked
  6490  000BBE  8115               	bsf	21,0,b	;volatile
  6491  000BC0  D002               	goto	l537
  6492  000BC2                     l536:
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;inc\CANlib.h: 1051: else
  6496                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  6497  000BC2  010F               	movlb	15	; () banked
  6498  000BC4  9115               	bcf	21,0,b	;volatile
  6499  000BC6                     l537:
  6500                           
  6501                           ; BSR set to: 15
  6502                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  6503  000BC6  0100               	movlb	0	; () banked
  6504  000BC8  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6505  000BCA  D003               	goto	l538
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  6509  000BCC  010F               	movlb	15	; () banked
  6510  000BCE  8315               	bsf	21,1,b	;volatile
  6511  000BD0  D002               	goto	l539
  6512  000BD2                     l538:
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;inc\CANlib.h: 1056: else
  6516                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  6517  000BD2  010F               	movlb	15	; () banked
  6518  000BD4  9315               	bcf	21,1,b	;volatile
  6519  000BD6                     l539:
  6520                           
  6521                           ; BSR set to: 15
  6522                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  6523  000BD6  0100               	movlb	0	; () banked
  6524  000BD8  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6525  000BDA  D003               	goto	l540
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  6529  000BDC  010F               	movlb	15	; () banked
  6530  000BDE  8B15               	bsf	21,5,b	;volatile
  6531  000BE0  D002               	goto	l541
  6532  000BE2                     l540:
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;inc\CANlib.h: 1061: else
  6536                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  6537  000BE2  010F               	movlb	15	; () banked
  6538  000BE4  9B15               	bcf	21,5,b	;volatile
  6539  000BE6                     l541:
  6540                           
  6541                           ; BSR set to: 15
  6542                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  6543  000BE6  0100               	movlb	0	; () banked
  6544  000BE8  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6545  000BEA  D003               	goto	l542
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  6549  000BEC  010F               	movlb	15	; () banked
  6550  000BEE  8D15               	bsf	21,6,b	;volatile
  6551  000BF0  D002               	goto	l543
  6552  000BF2                     l542:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;inc\CANlib.h: 1066: else
  6556                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  6557  000BF2  010F               	movlb	15	; () banked
  6558  000BF4  9D15               	bcf	21,6,b	;volatile
  6559  000BF6                     l543:
  6560                           
  6561                           ; BSR set to: 15
  6562                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  6563  000BF6  0100               	movlb	0	; () banked
  6564  000BF8  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6565  000BFA  D003               	goto	l544
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  6569  000BFC  010F               	movlb	15	; () banked
  6570  000BFE  8F15               	bsf	21,7,b	;volatile
  6571  000C00  D002               	goto	l4658
  6572  000C02                     l544:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;inc\CANlib.h: 1071: else
  6576                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  6577  000C02  010F               	movlb	15	; () banked
  6578  000C04  9F15               	bcf	21,7,b	;volatile
  6579  000C06                     l4658:
  6580                           
  6581                           ; BSR set to: 15
  6582                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  6583  000C06  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  6584  000C0A  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6585  000C0E  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6586  000C12  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6587  000C16  0E16               	movlw	22
  6588  000C18  D006               	goto	u5830
  6589  000C1A                     u5835:
  6590  000C1A  0100               	movlb	0	; () banked
  6591  000C1C  90D8               	bcf	status,0,c
  6592  000C1E  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6593  000C20  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6594  000C22  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6595  000C24  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  6596  000C26                     u5830:
  6597  000C26  2EE8               	decfsz	wreg,f,c
  6598  000C28  D7F8               	goto	u5835
  6599  000C2A  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6600  000C2E  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6601  000C32  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6602  000C36  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  6606  000C3A  0100               	movlb	0	; () banked
  6607  000C3C  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  6608  000C3E  0100               	movlb	0	; () banked
  6609  000C40  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6610  000C42  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6611  000C44  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6612  000C46  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  6616  000C48  C0D5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6617  000C4C  0012               	return	
  6618  000C4E                     __end_of_CANSetFilter:
  6619                           	opt stack 0
  6620                           tblptru	equ	0xFF8
  6621                           tblptrh	equ	0xFF7
  6622                           tblptrl	equ	0xFF6
  6623                           tablat	equ	0xFF5
  6624                           prodh	equ	0xFF4
  6625                           prodl	equ	0xFF3
  6626                           intcon	equ	0xFF2
  6627                           intcon2	equ	0xFF1
  6628                           intcon3	equ	0xFF0
  6629                           postinc0	equ	0xFEE
  6630                           wreg	equ	0xFE8
  6631                           postdec1	equ	0xFE5
  6632                           fsr1l	equ	0xFE1
  6633                           indf2	equ	0xFDF
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function _CANOperationMode *****************
  6639 ;; Defined at:
  6640 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  mode            1    wreg     enum E16838
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  mode            1   26[BANK0 ] enum E16838
  6645 ;; Return value:  Size  Location     Type
  6646 ;;		None               void
  6647 ;; Registers used:
  6648 ;;		wreg, status,2, status,0
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6654 ;;      Params:         0       0       0       0
  6655 ;;      Locals:         0       1       0       0
  6656 ;;      Temps:          0       0       0       0
  6657 ;;      Totals:         0       1       0       0
  6658 ;;Total ram usage:        1 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:    4
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_CANInitialize
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text10
  6669  002A4C                     __ptext10:
  6670                           	opt stack 0
  6671  002A4C                     _CANOperationMode:
  6672                           	opt stack 24
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;incstack = 0
  6676                           ;CANOperationMode@mode stored from wreg
  6677  002A4C  0100               	movlb	0	; () banked
  6678  002A4E  6FCB               	movwf	CANOperationMode@mode& (0+255),b
  6679                           
  6680                           ;inc\CANlib.h: 209: CANCON = mode;
  6681  002A50  C0CB  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6682  002A54                     l4254:
  6683  002A54  506E               	movf	3950,w,c	;volatile
  6684  002A56  0BE0               	andlw	224
  6685  002A58  0100               	movlb	0	; () banked
  6686  002A5A  19CB               	xorwf	CANOperationMode@mode& (0+255),w,b
  6687  002A5C  B4D8               	btfsc	status,2,c
  6688  002A5E  0012               	return	
  6689  002A60  D7F9               	goto	l4254
  6690  002A62                     __end_of_CANOperationMode:
  6691                           	opt stack 0
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           prodh	equ	0xFF4
  6697                           prodl	equ	0xFF3
  6698                           intcon	equ	0xFF2
  6699                           intcon2	equ	0xFF1
  6700                           intcon3	equ	0xFF0
  6701                           postinc0	equ	0xFEE
  6702                           wreg	equ	0xFE8
  6703                           postdec1	equ	0xFE5
  6704                           fsr1l	equ	0xFE1
  6705                           indf2	equ	0xFDF
  6706                           fsr2h	equ	0xFDA
  6707                           fsr2l	equ	0xFD9
  6708                           status	equ	0xFD8
  6709                           
  6710 ;; *************** function ___lmul *****************
  6711 ;; Defined at:
  6712 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  multiplier      4   26[BANK0 ] unsigned long 
  6715 ;;  multiplicand    4   30[BANK0 ] unsigned long 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  product         4   34[BANK0 ] unsigned long 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  4   26[BANK0 ] unsigned long 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6727 ;;      Params:         0       8       0       0
  6728 ;;      Locals:         0       4       0       0
  6729 ;;      Temps:          0       0       0       0
  6730 ;;      Totals:         0      12       0       0
  6731 ;;Total ram usage:       12 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    4
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_main
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text11
  6742  002880                     __ptext11:
  6743                           	opt stack 0
  6744  002880                     ___lmul:
  6745                           	opt stack 26
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;incstack = 0
  6749  002880  0E00               	movlw	0
  6750  002882  0100               	movlb	0	; () banked
  6751  002884  6FD3               	movwf	___lmul@product& (0+255),b
  6752  002886  0E00               	movlw	0
  6753  002888  6FD4               	movwf	(___lmul@product+1)& (0+255),b
  6754  00288A  0E00               	movlw	0
  6755  00288C  6FD5               	movwf	(___lmul@product+2)& (0+255),b
  6756  00288E  0E00               	movlw	0
  6757  002890  6FD6               	movwf	(___lmul@product+3)& (0+255),b
  6758  002892                     l3854:
  6759                           
  6760                           ; BSR set to: 0
  6761  002892  0100               	movlb	0	; () banked
  6762  002894  A1CB               	btfss	___lmul@multiplier& (0+255),0,b
  6763  002896  D010               	goto	l3858
  6764                           
  6765                           ; BSR set to: 0
  6766  002898  0100               	movlb	0	; () banked
  6767  00289A  51CF               	movf	___lmul@multiplicand& (0+255),w,b
  6768  00289C  0100               	movlb	0	; () banked
  6769  00289E  27D3               	addwf	___lmul@product& (0+255),f,b
  6770  0028A0  0100               	movlb	0	; () banked
  6771  0028A2  51D0               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6772  0028A4  0100               	movlb	0	; () banked
  6773  0028A6  23D4               	addwfc	(___lmul@product+1)& (0+255),f,b
  6774  0028A8  0100               	movlb	0	; () banked
  6775  0028AA  51D1               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6776  0028AC  0100               	movlb	0	; () banked
  6777  0028AE  23D5               	addwfc	(___lmul@product+2)& (0+255),f,b
  6778  0028B0  0100               	movlb	0	; () banked
  6779  0028B2  51D2               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6780  0028B4  0100               	movlb	0	; () banked
  6781  0028B6  23D6               	addwfc	(___lmul@product+3)& (0+255),f,b
  6782  0028B8                     l3858:
  6783                           
  6784                           ; BSR set to: 0
  6785  0028B8  0100               	movlb	0	; () banked
  6786  0028BA  90D8               	bcf	status,0,c
  6787  0028BC  37CF               	rlcf	___lmul@multiplicand& (0+255),f,b
  6788  0028BE  37D0               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6789  0028C0  37D1               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6790  0028C2  37D2               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6791                           
  6792                           ; BSR set to: 0
  6793  0028C4  0100               	movlb	0	; () banked
  6794  0028C6  90D8               	bcf	status,0,c
  6795  0028C8  33CE               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6796  0028CA  33CD               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6797  0028CC  33CC               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6798  0028CE  33CB               	rrcf	___lmul@multiplier& (0+255),f,b
  6799  0028D0  0100               	movlb	0	; () banked
  6800  0028D2  51CB               	movf	___lmul@multiplier& (0+255),w,b
  6801  0028D4  0100               	movlb	0	; () banked
  6802  0028D6  11CC               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6803  0028D8  0100               	movlb	0	; () banked
  6804  0028DA  11CD               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6805  0028DC  0100               	movlb	0	; () banked
  6806  0028DE  11CE               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6807  0028E0  A4D8               	btfss	status,2,c
  6808  0028E2  D7D7               	goto	l3854
  6809                           
  6810                           ; BSR set to: 0
  6811  0028E4  C0D3  F0CB         	movff	___lmul@product,?___lmul
  6812  0028E8  C0D4  F0CC         	movff	___lmul@product+1,?___lmul+1
  6813  0028EC  C0D5  F0CD         	movff	___lmul@product+2,?___lmul+2
  6814  0028F0  C0D6  F0CE         	movff	___lmul@product+3,?___lmul+3
  6815                           
  6816                           ; BSR set to: 0
  6817  0028F4  0012               	return		;funcret
  6818  0028F6                     __end_of___lmul:
  6819                           	opt stack 0
  6820                           tblptru	equ	0xFF8
  6821                           tblptrh	equ	0xFF7
  6822                           tblptrl	equ	0xFF6
  6823                           tablat	equ	0xFF5
  6824                           prodh	equ	0xFF4
  6825                           prodl	equ	0xFF3
  6826                           intcon	equ	0xFF2
  6827                           intcon2	equ	0xFF1
  6828                           intcon3	equ	0xFF0
  6829                           postinc0	equ	0xFEE
  6830                           wreg	equ	0xFE8
  6831                           postdec1	equ	0xFE5
  6832                           fsr1l	equ	0xFE1
  6833                           indf2	equ	0xFDF
  6834                           fsr2h	equ	0xFDA
  6835                           fsr2l	equ	0xFD9
  6836                           status	equ	0xFD8
  6837                           
  6838 ;; *************** function ___awdiv *****************
  6839 ;; Defined at:
  6840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  dividend        2   26[BANK0 ] int 
  6843 ;;  divisor         2   28[BANK0 ] int 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  quotient        2   32[BANK0 ] int 
  6846 ;;  sign            1   31[BANK0 ] unsigned char 
  6847 ;;  counter         1   30[BANK0 ] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2   26[BANK0 ] int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6857 ;;      Params:         0       4       0       0
  6858 ;;      Locals:         0       4       0       0
  6859 ;;      Temps:          0       0       0       0
  6860 ;;      Totals:         0       8       0       0
  6861 ;;Total ram usage:        8 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    4
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_main
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text12
  6872  00266E                     __ptext12:
  6873                           	opt stack 0
  6874  00266E                     ___awdiv:
  6875                           	opt stack 26
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;incstack = 0
  6879  00266E  0E00               	movlw	0
  6880  002670  0100               	movlb	0	; () banked
  6881  002672  6FD0               	movwf	___awdiv@sign& (0+255),b
  6882                           
  6883                           ; BSR set to: 0
  6884  002674  0100               	movlb	0	; () banked
  6885  002676  AFCE               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6886  002678  D008               	goto	l3914
  6887                           
  6888                           ; BSR set to: 0
  6889  00267A  0100               	movlb	0	; () banked
  6890  00267C  6DCD               	negf	___awdiv@divisor& (0+255),b
  6891  00267E  1FCE               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6892  002680  B0D8               	btfsc	status,0,c
  6893  002682  2BCE               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6894                           
  6895                           ; BSR set to: 0
  6896  002684  0E01               	movlw	1
  6897  002686  0100               	movlb	0	; () banked
  6898  002688  6FD0               	movwf	___awdiv@sign& (0+255),b
  6899  00268A                     l3914:
  6900                           
  6901                           ; BSR set to: 0
  6902  00268A  0100               	movlb	0	; () banked
  6903  00268C  AFCC               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6904  00268E  D008               	goto	l3920
  6905                           
  6906                           ; BSR set to: 0
  6907  002690  0100               	movlb	0	; () banked
  6908  002692  6DCB               	negf	___awdiv@dividend& (0+255),b
  6909  002694  1FCC               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6910  002696  B0D8               	btfsc	status,0,c
  6911  002698  2BCC               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6912                           
  6913                           ; BSR set to: 0
  6914  00269A  0E01               	movlw	1
  6915  00269C  0100               	movlb	0	; () banked
  6916  00269E  1BD0               	xorwf	___awdiv@sign& (0+255),f,b
  6917  0026A0                     l3920:
  6918                           
  6919                           ; BSR set to: 0
  6920  0026A0  0E00               	movlw	0
  6921  0026A2  0100               	movlb	0	; () banked
  6922  0026A4  6FD2               	movwf	(___awdiv@quotient+1)& (0+255),b
  6923  0026A6  0E00               	movlw	0
  6924  0026A8  6FD1               	movwf	___awdiv@quotient& (0+255),b
  6925                           
  6926                           ; BSR set to: 0
  6927  0026AA  0100               	movlb	0	; () banked
  6928  0026AC  51CD               	movf	___awdiv@divisor& (0+255),w,b
  6929  0026AE  0100               	movlb	0	; () banked
  6930  0026B0  11CE               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6931  0026B2  B4D8               	btfsc	status,2,c
  6932  0026B4  D02C               	goto	l3942
  6933                           
  6934                           ; BSR set to: 0
  6935  0026B6  0E01               	movlw	1
  6936  0026B8  0100               	movlb	0	; () banked
  6937  0026BA  6FCF               	movwf	___awdiv@counter& (0+255),b
  6938  0026BC  D006               	goto	l3928
  6939  0026BE                     l3926:
  6940                           
  6941                           ; BSR set to: 0
  6942  0026BE  0100               	movlb	0	; () banked
  6943  0026C0  90D8               	bcf	status,0,c
  6944  0026C2  37CD               	rlcf	___awdiv@divisor& (0+255),f,b
  6945  0026C4  37CE               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6946  0026C6  0100               	movlb	0	; () banked
  6947  0026C8  2BCF               	incf	___awdiv@counter& (0+255),f,b
  6948  0026CA                     l3928:
  6949                           
  6950                           ; BSR set to: 0
  6951  0026CA  0100               	movlb	0	; () banked
  6952  0026CC  AFCE               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6953  0026CE  D7F7               	goto	l3926
  6954  0026D0                     l3930:
  6955                           
  6956                           ; BSR set to: 0
  6957  0026D0  0100               	movlb	0	; () banked
  6958  0026D2  90D8               	bcf	status,0,c
  6959  0026D4  37D1               	rlcf	___awdiv@quotient& (0+255),f,b
  6960  0026D6  37D2               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6961                           
  6962                           ; BSR set to: 0
  6963  0026D8  0100               	movlb	0	; () banked
  6964  0026DA  51CD               	movf	___awdiv@divisor& (0+255),w,b
  6965  0026DC  0100               	movlb	0	; () banked
  6966  0026DE  5DCB               	subwf	___awdiv@dividend& (0+255),w,b
  6967  0026E0  0100               	movlb	0	; () banked
  6968  0026E2  51CE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6969  0026E4  0100               	movlb	0	; () banked
  6970  0026E6  59CC               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6971  0026E8  A0D8               	btfss	status,0,c
  6972  0026EA  D00A               	goto	l3938
  6973                           
  6974                           ; BSR set to: 0
  6975  0026EC  0100               	movlb	0	; () banked
  6976  0026EE  51CD               	movf	___awdiv@divisor& (0+255),w,b
  6977  0026F0  0100               	movlb	0	; () banked
  6978  0026F2  5FCB               	subwf	___awdiv@dividend& (0+255),f,b
  6979  0026F4  0100               	movlb	0	; () banked
  6980  0026F6  51CE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6981  0026F8  0100               	movlb	0	; () banked
  6982  0026FA  5BCC               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6983                           
  6984                           ; BSR set to: 0
  6985  0026FC  0100               	movlb	0	; () banked
  6986  0026FE  81D1               	bsf	___awdiv@quotient& (0+255),0,b
  6987  002700                     l3938:
  6988                           
  6989                           ; BSR set to: 0
  6990  002700  0100               	movlb	0	; () banked
  6991  002702  90D8               	bcf	status,0,c
  6992  002704  33CE               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6993  002706  33CD               	rrcf	___awdiv@divisor& (0+255),f,b
  6994                           
  6995                           ; BSR set to: 0
  6996  002708  0100               	movlb	0	; () banked
  6997  00270A  2FCF               	decfsz	___awdiv@counter& (0+255),f,b
  6998  00270C  D7E1               	goto	l3930
  6999  00270E                     l3942:
  7000                           
  7001                           ; BSR set to: 0
  7002  00270E  0100               	movlb	0	; () banked
  7003  002710  51D0               	movf	___awdiv@sign& (0+255),w,b
  7004  002712  0100               	movlb	0	; () banked
  7005  002714  B4D8               	btfsc	status,2,c
  7006  002716  D005               	goto	l3946
  7007                           
  7008                           ; BSR set to: 0
  7009  002718  0100               	movlb	0	; () banked
  7010  00271A  6DD1               	negf	___awdiv@quotient& (0+255),b
  7011  00271C  1FD2               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7012  00271E  B0D8               	btfsc	status,0,c
  7013  002720  2BD2               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7014  002722                     l3946:
  7015                           
  7016                           ; BSR set to: 0
  7017  002722  C0D1  F0CB         	movff	___awdiv@quotient,?___awdiv
  7018  002726  C0D2  F0CC         	movff	___awdiv@quotient+1,?___awdiv+1
  7019  00272A  0012               	return	
  7020  00272C                     __end_of___awdiv:
  7021                           	opt stack 0
  7022                           tblptru	equ	0xFF8
  7023                           tblptrh	equ	0xFF7
  7024                           tblptrl	equ	0xFF6
  7025                           tablat	equ	0xFF5
  7026                           prodh	equ	0xFF4
  7027                           prodl	equ	0xFF3
  7028                           intcon	equ	0xFF2
  7029                           intcon2	equ	0xFF1
  7030                           intcon3	equ	0xFF0
  7031                           postinc0	equ	0xFEE
  7032                           wreg	equ	0xFE8
  7033                           postdec1	equ	0xFE5
  7034                           fsr1l	equ	0xFE1
  7035                           indf2	equ	0xFDF
  7036                           fsr2h	equ	0xFDA
  7037                           fsr2l	equ	0xFD9
  7038                           status	equ	0xFD8
  7039                           
  7040 ;; *************** function ___aldiv *****************
  7041 ;; Defined at:
  7042 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  dividend        4    0[BANK1 ] long 
  7045 ;;  divisor         4    4[BANK1 ] long 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  quotient        4   40[BANK0 ] long 
  7048 ;;  sign            1   39[BANK0 ] unsigned char 
  7049 ;;  counter         1   38[BANK0 ] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  4    0[BANK1 ] long 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7059 ;;      Params:         0       0       8       0
  7060 ;;      Locals:         0       6       0       0
  7061 ;;      Temps:          0       0       0       0
  7062 ;;      Totals:         0       6       8       0
  7063 ;;Total ram usage:       14 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    4
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_main
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text13
  7074  002554                     __ptext13:
  7075                           	opt stack 0
  7076  002554                     ___aldiv:
  7077                           	opt stack 26
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;incstack = 0
  7081  002554  0E00               	movlw	0
  7082  002556  0100               	movlb	0	; () banked
  7083  002558  6FD8               	movwf	___aldiv@sign& (0+255),b
  7084                           
  7085                           ; BSR set to: 0
  7086  00255A  0101               	movlb	1	; () banked
  7087  00255C  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7088  00255E  D00C               	goto	l4832
  7089                           
  7090                           ; BSR set to: 1
  7091  002560  0101               	movlb	1	; () banked
  7092  002562  1F07               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7093  002564  1F06               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7094  002566  1F05               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7095  002568  6D04               	negf	___aldiv@divisor& (0+255),b
  7096  00256A  0E00               	movlw	0
  7097  00256C  2305               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7098  00256E  2306               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7099  002570  2307               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7100                           
  7101                           ; BSR set to: 1
  7102  002572  0E01               	movlw	1
  7103  002574  0100               	movlb	0	; () banked
  7104  002576  6FD8               	movwf	___aldiv@sign& (0+255),b
  7105  002578                     l4832:
  7106  002578  0101               	movlb	1	; () banked
  7107  00257A  AF03               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7108  00257C  D00C               	goto	l4838
  7109                           
  7110                           ; BSR set to: 1
  7111  00257E  0101               	movlb	1	; () banked
  7112  002580  1F03               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7113  002582  1F02               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7114  002584  1F01               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7115  002586  6D00               	negf	___aldiv@dividend& (0+255),b
  7116  002588  0E00               	movlw	0
  7117  00258A  2301               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7118  00258C  2302               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7119  00258E  2303               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7120                           
  7121                           ; BSR set to: 1
  7122  002590  0E01               	movlw	1
  7123  002592  0100               	movlb	0	; () banked
  7124  002594  1BD8               	xorwf	___aldiv@sign& (0+255),f,b
  7125  002596                     l4838:
  7126  002596  0E00               	movlw	0
  7127  002598  0100               	movlb	0	; () banked
  7128  00259A  6FD9               	movwf	___aldiv@quotient& (0+255),b
  7129  00259C  0E00               	movlw	0
  7130  00259E  6FDA               	movwf	(___aldiv@quotient+1)& (0+255),b
  7131  0025A0  0E00               	movlw	0
  7132  0025A2  6FDB               	movwf	(___aldiv@quotient+2)& (0+255),b
  7133  0025A4  0E00               	movlw	0
  7134  0025A6  6FDC               	movwf	(___aldiv@quotient+3)& (0+255),b
  7135                           
  7136                           ; BSR set to: 0
  7137  0025A8  0101               	movlb	1	; () banked
  7138  0025AA  5104               	movf	___aldiv@divisor& (0+255),w,b
  7139  0025AC  0101               	movlb	1	; () banked
  7140  0025AE  1105               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7141  0025B0  0101               	movlb	1	; () banked
  7142  0025B2  1106               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7143  0025B4  0101               	movlb	1	; () banked
  7144  0025B6  1107               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7145  0025B8  B4D8               	btfsc	status,2,c
  7146  0025BA  D042               	goto	l4860
  7147                           
  7148                           ; BSR set to: 1
  7149  0025BC  0E01               	movlw	1
  7150  0025BE  0100               	movlb	0	; () banked
  7151  0025C0  6FD7               	movwf	___aldiv@counter& (0+255),b
  7152  0025C2  D008               	goto	l4846
  7153  0025C4                     l4844:
  7154  0025C4  0101               	movlb	1	; () banked
  7155  0025C6  90D8               	bcf	status,0,c
  7156  0025C8  3704               	rlcf	___aldiv@divisor& (0+255),f,b
  7157  0025CA  3705               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7158  0025CC  3706               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7159  0025CE  3707               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7160  0025D0  0100               	movlb	0	; () banked
  7161  0025D2  2BD7               	incf	___aldiv@counter& (0+255),f,b
  7162  0025D4                     l4846:
  7163                           
  7164                           ; BSR set to: 0
  7165  0025D4  0101               	movlb	1	; () banked
  7166  0025D6  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7167  0025D8  D7F5               	goto	l4844
  7168  0025DA                     l4848:
  7169  0025DA  0100               	movlb	0	; () banked
  7170  0025DC  90D8               	bcf	status,0,c
  7171  0025DE  37D9               	rlcf	___aldiv@quotient& (0+255),f,b
  7172  0025E0  37DA               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7173  0025E2  37DB               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7174  0025E4  37DC               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7175                           
  7176                           ; BSR set to: 0
  7177  0025E6  0101               	movlb	1	; () banked
  7178  0025E8  5104               	movf	___aldiv@divisor& (0+255),w,b
  7179  0025EA  0101               	movlb	1	; () banked
  7180  0025EC  5D00               	subwf	___aldiv@dividend& (0+255),w,b
  7181  0025EE  0101               	movlb	1	; () banked
  7182  0025F0  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7183  0025F2  0101               	movlb	1	; () banked
  7184  0025F4  5901               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7185  0025F6  0101               	movlb	1	; () banked
  7186  0025F8  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7187  0025FA  0101               	movlb	1	; () banked
  7188  0025FC  5902               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7189  0025FE  0101               	movlb	1	; () banked
  7190  002600  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7191  002602  0101               	movlb	1	; () banked
  7192  002604  5903               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7193  002606  A0D8               	btfss	status,0,c
  7194  002608  D012               	goto	l4856
  7195                           
  7196                           ; BSR set to: 1
  7197  00260A  0101               	movlb	1	; () banked
  7198  00260C  5104               	movf	___aldiv@divisor& (0+255),w,b
  7199  00260E  0101               	movlb	1	; () banked
  7200  002610  5F00               	subwf	___aldiv@dividend& (0+255),f,b
  7201  002612  0101               	movlb	1	; () banked
  7202  002614  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7203  002616  0101               	movlb	1	; () banked
  7204  002618  5B01               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7205  00261A  0101               	movlb	1	; () banked
  7206  00261C  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7207  00261E  0101               	movlb	1	; () banked
  7208  002620  5B02               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7209  002622  0101               	movlb	1	; () banked
  7210  002624  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7211  002626  0101               	movlb	1	; () banked
  7212  002628  5B03               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7213                           
  7214                           ; BSR set to: 1
  7215  00262A  0100               	movlb	0	; () banked
  7216  00262C  81D9               	bsf	___aldiv@quotient& (0+255),0,b
  7217  00262E                     l4856:
  7218  00262E  0101               	movlb	1	; () banked
  7219  002630  90D8               	bcf	status,0,c
  7220  002632  3307               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7221  002634  3306               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7222  002636  3305               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7223  002638  3304               	rrcf	___aldiv@divisor& (0+255),f,b
  7224                           
  7225                           ; BSR set to: 1
  7226  00263A  0100               	movlb	0	; () banked
  7227  00263C  2FD7               	decfsz	___aldiv@counter& (0+255),f,b
  7228  00263E  D7CD               	goto	l4848
  7229  002640                     l4860:
  7230  002640  0100               	movlb	0	; () banked
  7231  002642  51D8               	movf	___aldiv@sign& (0+255),w,b
  7232  002644  0100               	movlb	0	; () banked
  7233  002646  B4D8               	btfsc	status,2,c
  7234  002648  D009               	goto	l4864
  7235                           
  7236                           ; BSR set to: 0
  7237  00264A  0100               	movlb	0	; () banked
  7238  00264C  1FDC               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7239  00264E  1FDB               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7240  002650  1FDA               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7241  002652  6DD9               	negf	___aldiv@quotient& (0+255),b
  7242  002654  0E00               	movlw	0
  7243  002656  23DA               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7244  002658  23DB               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7245  00265A  23DC               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7246  00265C                     l4864:
  7247                           
  7248                           ; BSR set to: 0
  7249  00265C  C0D9  F100         	movff	___aldiv@quotient,?___aldiv
  7250  002660  C0DA  F101         	movff	___aldiv@quotient+1,?___aldiv+1
  7251  002664  C0DB  F102         	movff	___aldiv@quotient+2,?___aldiv+2
  7252  002668  C0DC  F103         	movff	___aldiv@quotient+3,?___aldiv+3
  7253  00266C  0012               	return	
  7254  00266E                     __end_of___aldiv:
  7255                           	opt stack 0
  7256                           tblptru	equ	0xFF8
  7257                           tblptrh	equ	0xFF7
  7258                           tblptrl	equ	0xFF6
  7259                           tablat	equ	0xFF5
  7260                           prodh	equ	0xFF4
  7261                           prodl	equ	0xFF3
  7262                           intcon	equ	0xFF2
  7263                           intcon2	equ	0xFF1
  7264                           intcon3	equ	0xFF0
  7265                           postinc0	equ	0xFEE
  7266                           wreg	equ	0xFE8
  7267                           postdec1	equ	0xFE5
  7268                           fsr1l	equ	0xFE1
  7269                           indf2	equ	0xFDF
  7270                           fsr2h	equ	0xFDA
  7271                           fsr2l	equ	0xFD9
  7272                           status	equ	0xFD8
  7273                           
  7274 ;; *************** function _CANisTXwarningON *****************
  7275 ;; Defined at:
  7276 ;;		line 1120 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;		None
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;		None
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  1    wreg      unsigned char 
  7283 ;; Registers used:
  7284 ;;		wreg
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7290 ;;      Params:         0       0       0       0
  7291 ;;      Locals:         0       0       0       0
  7292 ;;      Temps:          0       0       0       0
  7293 ;;      Totals:         0       0       0       0
  7294 ;;Total ram usage:        0 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; Hardware stack levels required when called:    4
  7297 ;; This function calls:
  7298 ;;		Nothing
  7299 ;; This function is called by:
  7300 ;;		_main
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text14
  7305  002A8A                     __ptext14:
  7306                           	opt stack 0
  7307  002A8A                     _CANisTXwarningON:
  7308                           	opt stack 26
  7309                           
  7310                           ;inc\CANlib.h: 1122: return (COMSTATbits.TXWARN);
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;incstack = 0
  7314  002A8A  A474               	btfss	3956,2,c	;volatile
  7315  002A8C  D002               	goto	u4110
  7316  002A8E  0E01               	movlw	1
  7317  002A90  0012               	return	
  7318  002A92                     u4110:
  7319  002A92  0E00               	movlw	0
  7320  002A94  0012               	return	
  7321  002A96                     __end_of_CANisTXwarningON:
  7322                           	opt stack 0
  7323                           tblptru	equ	0xFF8
  7324                           tblptrh	equ	0xFF7
  7325                           tblptrl	equ	0xFF6
  7326                           tablat	equ	0xFF5
  7327                           prodh	equ	0xFF4
  7328                           prodl	equ	0xFF3
  7329                           intcon	equ	0xFF2
  7330                           intcon2	equ	0xFF1
  7331                           intcon3	equ	0xFF0
  7332                           postinc0	equ	0xFEE
  7333                           wreg	equ	0xFE8
  7334                           postdec1	equ	0xFE5
  7335                           fsr1l	equ	0xFE1
  7336                           indf2	equ	0xFDF
  7337                           fsr2h	equ	0xFDA
  7338                           fsr2l	equ	0xFD9
  7339                           status	equ	0xFD8
  7340                           
  7341 ;; *************** function _CANisRXwarningON *****************
  7342 ;; Defined at:
  7343 ;;		line 1128 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;		None
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;		None
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  1    wreg      unsigned char 
  7350 ;; Registers used:
  7351 ;;		wreg
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7357 ;;      Params:         0       0       0       0
  7358 ;;      Locals:         0       0       0       0
  7359 ;;      Temps:          0       0       0       0
  7360 ;;      Totals:         0       0       0       0
  7361 ;;Total ram usage:        0 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:    4
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_main
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text15
  7372  002A96                     __ptext15:
  7373                           	opt stack 0
  7374  002A96                     _CANisRXwarningON:
  7375                           	opt stack 26
  7376                           
  7377                           ;inc\CANlib.h: 1130: return (COMSTATbits.RXWARN);
  7378                           
  7379                           ;incstack = 0
  7380  002A96  A274               	btfss	3956,1,c	;volatile
  7381  002A98  D002               	goto	u4120
  7382  002A9A  0E01               	movlw	1
  7383  002A9C  0012               	return	
  7384  002A9E                     u4120:
  7385  002A9E  0E00               	movlw	0
  7386  002AA0  0012               	return	
  7387  002AA2                     __end_of_CANisRXwarningON:
  7388                           	opt stack 0
  7389                           tblptru	equ	0xFF8
  7390                           tblptrh	equ	0xFF7
  7391                           tblptrl	equ	0xFF6
  7392                           tablat	equ	0xFF5
  7393                           prodh	equ	0xFF4
  7394                           prodl	equ	0xFF3
  7395                           intcon	equ	0xFF2
  7396                           intcon2	equ	0xFF1
  7397                           intcon3	equ	0xFF0
  7398                           postinc0	equ	0xFEE
  7399                           wreg	equ	0xFE8
  7400                           postdec1	equ	0xFE5
  7401                           fsr1l	equ	0xFE1
  7402                           indf2	equ	0xFDF
  7403                           fsr2h	equ	0xFDA
  7404                           fsr2l	equ	0xFD9
  7405                           status	equ	0xFD8
  7406                           
  7407 ;; *************** function _ISR_Bassa *****************
  7408 ;; Defined at:
  7409 ;;		line 213 in file "ABS_Code.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;		None               void
  7416 ;; Registers used:
  7417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7423 ;;      Params:         0       0       0       0
  7424 ;;      Locals:         0       0       0       0
  7425 ;;      Temps:         17       0       0       0
  7426 ;;      Totals:        17       0       0       0
  7427 ;;Total ram usage:       17 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:    3
  7430 ;; This function calls:
  7431 ;;		_CANisRxReady
  7432 ;;		_CANreceiveMessage
  7433 ;; This function is called by:
  7434 ;;		Interrupt level 1
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	intcodelo
  7439  000018                     __pintcodelo:
  7440                           	opt stack 0
  7441  000018                     _ISR_Bassa:
  7442                           	opt stack 24
  7443                           
  7444                           ;incstack = 0
  7445  000018  803F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7446  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7447  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7448  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7449  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7450  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7451  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7452  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7453  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7454  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7455  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7456  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7457  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7458  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7459  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7460  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7461  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7462  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7463                           
  7464                           ;ABS_Code.c: 215: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7465  00005E  A0A4               	btfss	4004,0,c	;volatile
  7466  000060  B2A4               	btfsc	4004,1,c	;volatile
  7467  000062  D001               	goto	i1l4110
  7468  000064  D043               	goto	i1l4134
  7469  000066                     i1l4110:
  7470                           
  7471                           ;ABS_Code.c: 216: if (CANisRxReady()) {
  7472  000066  EC31  F015         	call	_CANisRxReady	;wreg free
  7473  00006A  0900               	iorlw	0
  7474  00006C  B4D8               	btfsc	status,2,c
  7475  00006E  D03C               	goto	i1l4130
  7476                           
  7477                           ;ABS_Code.c: 217: CANreceiveMessage(&msg);
  7478  000070  0E89               	movlw	low _msg
  7479  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7480  000074  0E00               	movlw	high _msg
  7481  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7482  000078  ECED  F009         	call	_CANreceiveMessage	;wreg free
  7483                           
  7484                           ;ABS_Code.c: 218: if (msg.RTR == 1) {
  7485  00007C  0100               	movlb	0	; () banked
  7486  00007E  0597               	decf	(_msg+14)& (0+255),w,b
  7487  000080  A4D8               	btfss	status,2,c
  7488  000082  D009               	goto	i1l4118
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;ABS_Code.c: 219: remote_frame_id = msg.identifier;
  7492  000084  C089  F06C         	movff	_msg,_remote_frame_id	;volatile
  7493  000088  C08A  F06D         	movff	_msg+1,_remote_frame_id+1	;volatile
  7494  00008C  C08B  F06E         	movff	_msg+2,_remote_frame_id+2	;volatile
  7495  000090  C08C  F06F         	movff	_msg+3,_remote_frame_id+3	;volatile
  7496                           
  7497                           ;ABS_Code.c: 220: remote_frame = 1;
  7498  000094  803E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7499  000096                     i1l4118:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;ABS_Code.c: 221: }
  7503                           ;ABS_Code.c: 222: if (msg.identifier == 0b00000000100) {
  7504  000096  0E04               	movlw	4
  7505  000098  0100               	movlb	0	; () banked
  7506  00009A  1989               	xorwf	_msg& (0+255),w,b
  7507  00009C  0100               	movlb	0	; () banked
  7508  00009E  118A               	iorwf	(_msg+1)& (0+255),w,b
  7509  0000A0  0100               	movlb	0	; () banked
  7510  0000A2  118B               	iorwf	(_msg+2)& (0+255),w,b
  7511  0000A4  0100               	movlb	0	; () banked
  7512  0000A6  118C               	iorwf	(_msg+3)& (0+255),w,b
  7513  0000A8  A4D8               	btfss	status,2,c
  7514  0000AA  D004               	goto	i1l4122
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;ABS_Code.c: 223: brake_signal_CAN = msg.data[0];
  7518  0000AC  C08D  F085         	movff	_msg+4,_brake_signal_CAN	;volatile
  7519                           
  7520                           ;ABS_Code.c: 224: Analogic_Mode = msg.data[1];
  7521  0000B0  C08E  F084         	movff	_msg+5,_Analogic_Mode	;volatile
  7522  0000B4                     i1l4122:
  7523                           
  7524                           ; BSR set to: 0
  7525                           ;ABS_Code.c: 225: }
  7526                           ;ABS_Code.c: 226: if (msg.identifier == 0b00000001101) {
  7527  0000B4  0E0D               	movlw	13
  7528  0000B6  0100               	movlb	0	; () banked
  7529  0000B8  1989               	xorwf	_msg& (0+255),w,b
  7530  0000BA  0100               	movlb	0	; () banked
  7531  0000BC  118A               	iorwf	(_msg+1)& (0+255),w,b
  7532  0000BE  0100               	movlb	0	; () banked
  7533  0000C0  118B               	iorwf	(_msg+2)& (0+255),w,b
  7534  0000C2  0100               	movlb	0	; () banked
  7535  0000C4  118C               	iorwf	(_msg+3)& (0+255),w,b
  7536  0000C6  A4D8               	btfss	status,2,c
  7537  0000C8  D00F               	goto	i1l4130
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;ABS_Code.c: 227: distance_set_value = msg.data[0];
  7541  0000CA  C08D  F082         	movff	_msg+4,_distance_set_value	;volatile
  7542  0000CE  0100               	movlb	0	; () banked
  7543  0000D0  6B83               	clrf	(_distance_set_value+1)& (0+255),b	;volatile
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;ABS_Code.c: 228: distance_set_counter_1 = 0;
  7547  0000D2  0E00               	movlw	0
  7548  0000D4  0100               	movlb	0	; () banked
  7549  0000D6  6F7F               	movwf	(_distance_set_counter_1+1)& (0+255),b	;volatile
  7550  0000D8  0E00               	movlw	0
  7551  0000DA  6F7E               	movwf	_distance_set_counter_1& (0+255),b	;volatile
  7552                           
  7553                           ;ABS_Code.c: 229: distance_set_counter_2 = 0;
  7554  0000DC  0E00               	movlw	0
  7555  0000DE  0100               	movlb	0	; () banked
  7556  0000E0  6F81               	movwf	(_distance_set_counter_2+1)& (0+255),b	;volatile
  7557  0000E2  0E00               	movlw	0
  7558  0000E4  6F80               	movwf	_distance_set_counter_2& (0+255),b	;volatile
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;ABS_Code.c: 230: distance_set_flag = 1;
  7562  0000E6  8E3D               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  7563  0000E8                     i1l4130:
  7564                           
  7565                           ;ABS_Code.c: 231: }
  7566                           ;ABS_Code.c: 232: }
  7567                           ;ABS_Code.c: 233: PIR3bits.RXB0IF = 0;
  7568  0000E8  90A4               	bcf	4004,0,c	;volatile
  7569                           
  7570                           ;ABS_Code.c: 234: PIR3bits.RXB1IF = 0;
  7571  0000EA  92A4               	bcf	4004,1,c	;volatile
  7572  0000EC                     i1l4134:
  7573                           
  7574                           ;ABS_Code.c: 235: }
  7575                           ;ABS_Code.c: 238: if (PIR1bits.TMR1IF == 1) {
  7576  0000EC  A09E               	btfss	3998,0,c	;volatile
  7577  0000EE  D002               	goto	i1l703
  7578                           
  7579                           ;ABS_Code.c: 239: TMR1_overflow = 1;
  7580  0000F0  843D               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7581                           
  7582                           ;ABS_Code.c: 240: PIR1bits.TMR1IF = 0;
  7583  0000F2  909E               	bcf	3998,0,c	;volatile
  7584  0000F4                     i1l703:
  7585                           
  7586                           ;ABS_Code.c: 241: }
  7587                           ;ABS_Code.c: 244: if (PIR2bits.TMR3IF == 1) {
  7588  0000F4  A2A1               	btfss	4001,1,c	;volatile
  7589  0000F6  D002               	goto	i1l705
  7590                           
  7591                           ;ABS_Code.c: 245: TMR3_overflow = 1;
  7592  0000F8  863D               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7593                           
  7594                           ;ABS_Code.c: 246: PIR2bits.TMR3IF = 0;
  7595  0000FA  92A1               	bcf	4001,1,c	;volatile
  7596  0000FC                     i1l705:
  7597  0000FC  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7598  000100  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7599  000104  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7600  000108  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7601  00010C  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7602  000110  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7603  000114  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7604  000118  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7605  00011C  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7606  000120  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7607  000124  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7608  000128  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7609  00012C  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7610  000130  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7611  000134  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7612  000138  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7613  00013C  C00D  FFD8         	movff	??_ISR_Bassa,status
  7614  000140  903F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7615  000142  0010               	retfie	
  7616  000144                     __end_of_ISR_Bassa:
  7617                           	opt stack 0
  7618                           pclatu	equ	0xFFB
  7619                           pclath	equ	0xFFA
  7620                           tblptru	equ	0xFF8
  7621                           tblptrh	equ	0xFF7
  7622                           tblptrl	equ	0xFF6
  7623                           tablat	equ	0xFF5
  7624                           prodh	equ	0xFF4
  7625                           prodl	equ	0xFF3
  7626                           intcon	equ	0xFF2
  7627                           intcon2	equ	0xFF1
  7628                           intcon3	equ	0xFF0
  7629                           postinc0	equ	0xFEE
  7630                           fsr0h	equ	0xFEA
  7631                           fsr0l	equ	0xFE9
  7632                           wreg	equ	0xFE8
  7633                           postdec1	equ	0xFE5
  7634                           fsr1h	equ	0xFE2
  7635                           fsr1l	equ	0xFE1
  7636                           bsr	equ	0xFE0
  7637                           indf2	equ	0xFDF
  7638                           fsr2h	equ	0xFDA
  7639                           fsr2l	equ	0xFD9
  7640                           status	equ	0xFD8
  7641                           
  7642 ;; *************** function _CANreceiveMessage *****************
  7643 ;; Defined at:
  7644 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  msg             2    0[COMRAM] PTR struct .
  7647 ;;		 -> msg(15), 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  tamp            1   11[COMRAM] unsigned char 
  7650 ;;  error           1   10[COMRAM] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      unsigned char 
  7653 ;; Registers used:
  7654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7660 ;;      Params:         2       0       0       0
  7661 ;;      Locals:         2       0       0       0
  7662 ;;      Temps:          8       0       0       0
  7663 ;;      Totals:        12       0       0       0
  7664 ;;Total ram usage:       12 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    2
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_ISR_Bassa
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text17
  7675  0013DA                     __ptext17:
  7676                           	opt stack 0
  7677  0013DA                     _CANreceiveMessage:
  7678                           	opt stack 24
  7679                           
  7680                           ;inc\CANlib.h: 531: BYTE tamp;
  7681                           ;inc\CANlib.h: 532: BYTE error = 0;
  7682                           
  7683                           ;incstack = 0
  7684  0013DA  0E00               	movlw	0
  7685  0013DC  6E0B               	movwf	CANreceiveMessage@error,c
  7686                           
  7687                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  7688  0013DE  BE74               	btfsc	3956,7,c	;volatile
  7689                           
  7690                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  7691  0013E0  800B               	bsf	CANreceiveMessage@error,0,c
  7692                           
  7693                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  7694  0013E2  BC74               	btfsc	3956,6,c	;volatile
  7695                           
  7696                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  7697  0013E4  820B               	bsf	CANreceiveMessage@error,1,c
  7698                           
  7699                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  7700  0013E6  010F               	movlb	15	; () banked
  7701  0013E8  AF50               	btfss	80,7,b	;volatile
  7702  0013EA  D143               	goto	i1l428
  7703                           
  7704                           ; BSR set to: 15
  7705                           ;inc\CANlib.h: 542: {
  7706                           ;inc\CANlib.h: 543: msg->identifier = 0;
  7707  0013EC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7708  0013F0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7709  0013F4  6ADE               	clrf	postinc2,c
  7710  0013F6  6ADE               	clrf	postinc2,c
  7711  0013F8  6ADE               	clrf	postinc2,c
  7712  0013FA  6ADD               	clrf	postdec2,c
  7713                           
  7714                           ; BSR set to: 15
  7715                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  7716  0013FC  EE20 F004          	lfsr	2,4
  7717  001400  5001               	movf	CANreceiveMessage@msg,w,c
  7718  001402  26D9               	addwf	fsr2l,f,c
  7719  001404  5002               	movf	CANreceiveMessage@msg+1,w,c
  7720  001406  22DA               	addwfc	fsr2h,f,c
  7721  001408  CF56 FFDF          	movff	3926,indf2	;volatile
  7722                           
  7723                           ; BSR set to: 15
  7724                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  7725  00140C  EE20 F005          	lfsr	2,5
  7726  001410  5001               	movf	CANreceiveMessage@msg,w,c
  7727  001412  26D9               	addwf	fsr2l,f,c
  7728  001414  5002               	movf	CANreceiveMessage@msg+1,w,c
  7729  001416  22DA               	addwfc	fsr2h,f,c
  7730  001418  CF57 FFDF          	movff	3927,indf2	;volatile
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  7734  00141C  EE20 F006          	lfsr	2,6
  7735  001420  5001               	movf	CANreceiveMessage@msg,w,c
  7736  001422  26D9               	addwf	fsr2l,f,c
  7737  001424  5002               	movf	CANreceiveMessage@msg+1,w,c
  7738  001426  22DA               	addwfc	fsr2h,f,c
  7739  001428  CF58 FFDF          	movff	3928,indf2	;volatile
  7740                           
  7741                           ; BSR set to: 15
  7742                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  7743  00142C  EE20 F007          	lfsr	2,7
  7744  001430  5001               	movf	CANreceiveMessage@msg,w,c
  7745  001432  26D9               	addwf	fsr2l,f,c
  7746  001434  5002               	movf	CANreceiveMessage@msg+1,w,c
  7747  001436  22DA               	addwfc	fsr2h,f,c
  7748  001438  CF59 FFDF          	movff	3929,indf2	;volatile
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  7752  00143C  EE20 F008          	lfsr	2,8
  7753  001440  5001               	movf	CANreceiveMessage@msg,w,c
  7754  001442  26D9               	addwf	fsr2l,f,c
  7755  001444  5002               	movf	CANreceiveMessage@msg+1,w,c
  7756  001446  22DA               	addwfc	fsr2h,f,c
  7757  001448  CF5A FFDF          	movff	3930,indf2	;volatile
  7758                           
  7759                           ; BSR set to: 15
  7760                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  7761  00144C  EE20 F009          	lfsr	2,9
  7762  001450  5001               	movf	CANreceiveMessage@msg,w,c
  7763  001452  26D9               	addwf	fsr2l,f,c
  7764  001454  5002               	movf	CANreceiveMessage@msg+1,w,c
  7765  001456  22DA               	addwfc	fsr2h,f,c
  7766  001458  CF5B FFDF          	movff	3931,indf2	;volatile
  7767                           
  7768                           ; BSR set to: 15
  7769                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  7770  00145C  EE20 F00A          	lfsr	2,10
  7771  001460  5001               	movf	CANreceiveMessage@msg,w,c
  7772  001462  26D9               	addwf	fsr2l,f,c
  7773  001464  5002               	movf	CANreceiveMessage@msg+1,w,c
  7774  001466  22DA               	addwfc	fsr2h,f,c
  7775  001468  CF5C FFDF          	movff	3932,indf2	;volatile
  7776                           
  7777                           ; BSR set to: 15
  7778                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  7779  00146C  EE20 F00B          	lfsr	2,11
  7780  001470  5001               	movf	CANreceiveMessage@msg,w,c
  7781  001472  26D9               	addwf	fsr2l,f,c
  7782  001474  5002               	movf	CANreceiveMessage@msg+1,w,c
  7783  001476  22DA               	addwfc	fsr2h,f,c
  7784  001478  CF5D FFDF          	movff	3933,indf2	;volatile
  7785                           
  7786                           ; BSR set to: 15
  7787                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  7788  00147C  EE20 F00E          	lfsr	2,14
  7789  001480  5001               	movf	CANreceiveMessage@msg,w,c
  7790  001482  26D9               	addwf	fsr2l,f,c
  7791  001484  5002               	movf	CANreceiveMessage@msg+1,w,c
  7792  001486  22DA               	addwfc	fsr2h,f,c
  7793  001488  010F               	movlb	15	; () banked
  7794  00148A  AD55               	btfss	85,6,b	;volatile
  7795  00148C  D002               	goto	i1u390_20
  7796  00148E  0E01               	movlw	1
  7797  001490  D001               	goto	i1u390_26
  7798  001492                     i1u390_20:
  7799  001492  0E00               	movlw	0
  7800  001494                     i1u390_26:
  7801  001494  6EDF               	movwf	indf2,c
  7802                           
  7803                           ; BSR set to: 15
  7804                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  7805  001496  EE20 F00D          	lfsr	2,13
  7806  00149A  5001               	movf	CANreceiveMessage@msg,w,c
  7807  00149C  26D9               	addwf	fsr2l,f,c
  7808  00149E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7809  0014A0  22DA               	addwfc	fsr2h,f,c
  7810  0014A2  010F               	movlb	15	; () banked
  7811  0014A4  5155               	movf	85,w,b	;volatile
  7812  0014A6  0B0F               	andlw	15
  7813  0014A8  6EDF               	movwf	indf2,c
  7814                           
  7815                           ; BSR set to: 15
  7816                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  7817  0014AA  EE20 F00C          	lfsr	2,12
  7818  0014AE  5001               	movf	CANreceiveMessage@msg,w,c
  7819  0014B0  26D9               	addwf	fsr2l,f,c
  7820  0014B2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7821  0014B4  22DA               	addwfc	fsr2h,f,c
  7822  0014B6  010F               	movlb	15	; () banked
  7823  0014B8  A752               	btfss	82,3,b	;volatile
  7824  0014BA  D002               	goto	i1u391_20
  7825  0014BC  0E01               	movlw	1
  7826  0014BE  D001               	goto	i1u391_26
  7827  0014C0                     i1u391_20:
  7828  0014C0  0E00               	movlw	0
  7829  0014C2                     i1u391_26:
  7830  0014C2  6EDF               	movwf	indf2,c
  7831                           
  7832                           ; BSR set to: 15
  7833                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  7834  0014C4  010F               	movlb	15	; () banked
  7835  0014C6  B752               	btfsc	82,3,b	;volatile
  7836  0014C8  D044               	goto	i1l3584
  7837                           
  7838                           ; BSR set to: 15
  7839                           ;inc\CANlib.h: 560: {
  7840                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7841  0014CA  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7842  0014CE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7843  0014D0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7844  0014D2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7845  0014D4  0E03               	movlw	3
  7846  0014D6                     i1u393_25:
  7847  0014D6  90D8               	bcf	status,0,c
  7848  0014D8  3603               	rlcf	??_CANreceiveMessage,f,c
  7849  0014DA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7850  0014DC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7851  0014DE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7852  0014E0  2EE8               	decfsz	wreg,f,c
  7853  0014E2  D7F9               	goto	i1u393_25
  7854  0014E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7855  0014E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7856  0014EC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7857  0014F0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7858  0014F4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7859  0014F8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7860                           
  7861                           ; BSR set to: 15
  7862                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7863  0014FC  010F               	movlb	15	; () banked
  7864  0014FE  3952               	swapf	82,w,b	;volatile
  7865  001500  42E8               	rrncf	wreg,f,c
  7866  001502  0B07               	andlw	7
  7867  001504  0B07               	andlw	7
  7868  001506  6E0C               	movwf	CANreceiveMessage@tamp,c
  7869                           
  7870                           ; BSR set to: 15
  7871                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  7872  001508  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7873  00150C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7874  001510  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7875  001514  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7876  001518  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7877  00151C  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7878  001520  500C               	movf	CANreceiveMessage@tamp,w,c
  7879  001522  2403               	addwf	??_CANreceiveMessage,w,c
  7880  001524  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7881  001526  0E00               	movlw	0
  7882  001528  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7883  00152A  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7884  00152C  0E00               	movlw	0
  7885  00152E  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7886  001530  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7887  001532  0E00               	movlw	0
  7888  001534  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7889  001536  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7890  001538  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7891  00153C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7892  001540  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7893  001544  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7894  001548  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7895  00154C  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7896                           
  7897                           ;inc\CANlib.h: 564: }
  7898  001550  D08D               	goto	i1l3610
  7899  001552                     i1l3584:
  7900                           
  7901                           ; BSR set to: 15
  7902                           ;inc\CANlib.h: 565: else
  7903                           ;inc\CANlib.h: 566: {
  7904                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  7905  001552  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7906  001556  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7907  001558  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7908  00155A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7909  00155C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7910  001560  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7911  001564  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7912  001568  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7913  00156C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7914  001570  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7915                           
  7916                           ; BSR set to: 15
  7917                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7918  001574  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7919  001578  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7920  00157A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7921  00157C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7922  00157E  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7923  001582  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7924  001586  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7925  00158A  6A03               	clrf	??_CANreceiveMessage,c
  7926  00158C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7927  001590  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7928  001594  5003               	movf	??_CANreceiveMessage,w,c
  7929  001596  26DE               	addwf	postinc2,f,c
  7930  001598  5004               	movf	??_CANreceiveMessage+1,w,c
  7931  00159A  22DE               	addwfc	postinc2,f,c
  7932  00159C  5005               	movf	??_CANreceiveMessage+2,w,c
  7933  00159E  22DE               	addwfc	postinc2,f,c
  7934  0015A0  5006               	movf	??_CANreceiveMessage+3,w,c
  7935  0015A2  22DE               	addwfc	postinc2,f,c
  7936                           
  7937                           ; BSR set to: 15
  7938                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  7939  0015A4  010F               	movlb	15	; () banked
  7940  0015A6  A152               	btfss	82,0,b	;volatile
  7941  0015A8  D00C               	goto	i1l3592
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  7945  0015AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7946  0015AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7947  0015B2  0E00               	movlw	0
  7948  0015B4  12DE               	iorwf	postinc2,f,c
  7949  0015B6  0E00               	movlw	0
  7950  0015B8  12DE               	iorwf	postinc2,f,c
  7951  0015BA  0E01               	movlw	1
  7952  0015BC  12DE               	iorwf	postinc2,f,c
  7953  0015BE  0E00               	movlw	0
  7954  0015C0  12DE               	iorwf	postinc2,f,c
  7955  0015C2                     i1l3592:
  7956                           
  7957                           ; BSR set to: 15
  7958                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  7959  0015C2  010F               	movlb	15	; () banked
  7960  0015C4  A352               	btfss	82,1,b	;volatile
  7961  0015C6  D00C               	goto	i1l3596
  7962                           
  7963                           ; BSR set to: 15
  7964                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  7965  0015C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7966  0015CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7967  0015D0  0E00               	movlw	0
  7968  0015D2  12DE               	iorwf	postinc2,f,c
  7969  0015D4  0E00               	movlw	0
  7970  0015D6  12DE               	iorwf	postinc2,f,c
  7971  0015D8  0E02               	movlw	2
  7972  0015DA  12DE               	iorwf	postinc2,f,c
  7973  0015DC  0E00               	movlw	0
  7974  0015DE  12DE               	iorwf	postinc2,f,c
  7975  0015E0                     i1l3596:
  7976                           
  7977                           ; BSR set to: 15
  7978                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  7979  0015E0  010F               	movlb	15	; () banked
  7980  0015E2  AB52               	btfss	82,5,b	;volatile
  7981  0015E4  D00C               	goto	i1l3600
  7982                           
  7983                           ; BSR set to: 15
  7984                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  7985  0015E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7986  0015EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7987  0015EE  0E00               	movlw	0
  7988  0015F0  12DE               	iorwf	postinc2,f,c
  7989  0015F2  0E00               	movlw	0
  7990  0015F4  12DE               	iorwf	postinc2,f,c
  7991  0015F6  0E04               	movlw	4
  7992  0015F8  12DE               	iorwf	postinc2,f,c
  7993  0015FA  0E00               	movlw	0
  7994  0015FC  12DE               	iorwf	postinc2,f,c
  7995  0015FE                     i1l3600:
  7996                           
  7997                           ; BSR set to: 15
  7998                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  7999  0015FE  010F               	movlb	15	; () banked
  8000  001600  AD52               	btfss	82,6,b	;volatile
  8001  001602  D00C               	goto	i1l3604
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  8005  001604  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8006  001608  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8007  00160C  0E00               	movlw	0
  8008  00160E  12DE               	iorwf	postinc2,f,c
  8009  001610  0E00               	movlw	0
  8010  001612  12DE               	iorwf	postinc2,f,c
  8011  001614  0E08               	movlw	8
  8012  001616  12DE               	iorwf	postinc2,f,c
  8013  001618  0E00               	movlw	0
  8014  00161A  12DE               	iorwf	postinc2,f,c
  8015  00161C                     i1l3604:
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  8019  00161C  010F               	movlb	15	; () banked
  8020  00161E  AF52               	btfss	82,7,b	;volatile
  8021  001620  D00C               	goto	i1l3608
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  8025  001622  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8026  001626  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8027  00162A  0E00               	movlw	0
  8028  00162C  12DE               	iorwf	postinc2,f,c
  8029  00162E  0E00               	movlw	0
  8030  001630  12DE               	iorwf	postinc2,f,c
  8031  001632  0E10               	movlw	16
  8032  001634  12DE               	iorwf	postinc2,f,c
  8033  001636  0E00               	movlw	0
  8034  001638  12DE               	iorwf	postinc2,f,c
  8035  00163A                     i1l3608:
  8036                           
  8037                           ; BSR set to: 15
  8038                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8039  00163A  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8040  00163E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8041  001640  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8042  001642  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8043  001644  0E15               	movlw	21
  8044  001646                     i1u399_25:
  8045  001646  90D8               	bcf	status,0,c
  8046  001648  3603               	rlcf	??_CANreceiveMessage,f,c
  8047  00164A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8048  00164C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8049  00164E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8050  001650  2EE8               	decfsz	wreg,f,c
  8051  001652  D7F9               	goto	i1u399_25
  8052  001654  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8053  001658  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8054  00165C  5003               	movf	??_CANreceiveMessage,w,c
  8055  00165E  12DE               	iorwf	postinc2,f,c
  8056  001660  5004               	movf	??_CANreceiveMessage+1,w,c
  8057  001662  12DE               	iorwf	postinc2,f,c
  8058  001664  5005               	movf	??_CANreceiveMessage+2,w,c
  8059  001666  12DE               	iorwf	postinc2,f,c
  8060  001668  5006               	movf	??_CANreceiveMessage+3,w,c
  8061  00166A  12DE               	iorwf	postinc2,f,c
  8062  00166C                     i1l3610:
  8063                           
  8064                           ; BSR set to: 15
  8065                           ;inc\CANlib.h: 582: }
  8066                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  8067  00166C  010F               	movlb	15	; () banked
  8068  00166E  9F50               	bcf	80,7,b	;volatile
  8069                           
  8070                           ; BSR set to: 15
  8071                           ;inc\CANlib.h: 585: return (error);
  8072                           ;	Return value of _CANreceiveMessage is never used
  8073  001670  0012               	return	
  8074  001672                     i1l428:
  8075                           
  8076                           ; BSR set to: 15
  8077                           ;inc\CANlib.h: 586: }
  8078                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  8079  001672  AE60               	btfss	3936,7,c	;volatile
  8080  001674  0012               	return	
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;inc\CANlib.h: 589: {
  8084                           ;inc\CANlib.h: 590: msg->identifier = 0;
  8085  001676  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8086  00167A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8087  00167E  6ADE               	clrf	postinc2,c
  8088  001680  6ADE               	clrf	postinc2,c
  8089  001682  6ADE               	clrf	postinc2,c
  8090  001684  6ADD               	clrf	postdec2,c
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  8094  001686  EE20 F004          	lfsr	2,4
  8095  00168A  5001               	movf	CANreceiveMessage@msg,w,c
  8096  00168C  26D9               	addwf	fsr2l,f,c
  8097  00168E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8098  001690  22DA               	addwfc	fsr2h,f,c
  8099  001692  CF66 FFDF          	movff	3942,indf2	;volatile
  8100                           
  8101                           ; BSR set to: 15
  8102                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  8103  001696  EE20 F005          	lfsr	2,5
  8104  00169A  5001               	movf	CANreceiveMessage@msg,w,c
  8105  00169C  26D9               	addwf	fsr2l,f,c
  8106  00169E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8107  0016A0  22DA               	addwfc	fsr2h,f,c
  8108  0016A2  CF67 FFDF          	movff	3943,indf2	;volatile
  8109                           
  8110                           ; BSR set to: 15
  8111                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  8112  0016A6  EE20 F006          	lfsr	2,6
  8113  0016AA  5001               	movf	CANreceiveMessage@msg,w,c
  8114  0016AC  26D9               	addwf	fsr2l,f,c
  8115  0016AE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8116  0016B0  22DA               	addwfc	fsr2h,f,c
  8117  0016B2  CF68 FFDF          	movff	3944,indf2	;volatile
  8118                           
  8119                           ; BSR set to: 15
  8120                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  8121  0016B6  EE20 F007          	lfsr	2,7
  8122  0016BA  5001               	movf	CANreceiveMessage@msg,w,c
  8123  0016BC  26D9               	addwf	fsr2l,f,c
  8124  0016BE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8125  0016C0  22DA               	addwfc	fsr2h,f,c
  8126  0016C2  CF69 FFDF          	movff	3945,indf2	;volatile
  8127                           
  8128                           ; BSR set to: 15
  8129                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  8130  0016C6  EE20 F008          	lfsr	2,8
  8131  0016CA  5001               	movf	CANreceiveMessage@msg,w,c
  8132  0016CC  26D9               	addwf	fsr2l,f,c
  8133  0016CE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8134  0016D0  22DA               	addwfc	fsr2h,f,c
  8135  0016D2  CF6A FFDF          	movff	3946,indf2	;volatile
  8136                           
  8137                           ; BSR set to: 15
  8138                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  8139  0016D6  EE20 F009          	lfsr	2,9
  8140  0016DA  5001               	movf	CANreceiveMessage@msg,w,c
  8141  0016DC  26D9               	addwf	fsr2l,f,c
  8142  0016DE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8143  0016E0  22DA               	addwfc	fsr2h,f,c
  8144  0016E2  CF6B FFDF          	movff	3947,indf2	;volatile
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  8148  0016E6  EE20 F00A          	lfsr	2,10
  8149  0016EA  5001               	movf	CANreceiveMessage@msg,w,c
  8150  0016EC  26D9               	addwf	fsr2l,f,c
  8151  0016EE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8152  0016F0  22DA               	addwfc	fsr2h,f,c
  8153  0016F2  CF6C FFDF          	movff	3948,indf2	;volatile
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  8157  0016F6  EE20 F00B          	lfsr	2,11
  8158  0016FA  5001               	movf	CANreceiveMessage@msg,w,c
  8159  0016FC  26D9               	addwf	fsr2l,f,c
  8160  0016FE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8161  001700  22DA               	addwfc	fsr2h,f,c
  8162  001702  CF6D FFDF          	movff	3949,indf2	;volatile
  8163                           
  8164                           ; BSR set to: 15
  8165                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  8166  001706  EE20 F00E          	lfsr	2,14
  8167  00170A  5001               	movf	CANreceiveMessage@msg,w,c
  8168  00170C  26D9               	addwf	fsr2l,f,c
  8169  00170E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8170  001710  22DA               	addwfc	fsr2h,f,c
  8171  001712  AC65               	btfss	3941,6,c	;volatile
  8172  001714  D002               	goto	i1u401_20
  8173  001716  0E01               	movlw	1
  8174  001718  D001               	goto	i1u401_26
  8175  00171A                     i1u401_20:
  8176  00171A  0E00               	movlw	0
  8177  00171C                     i1u401_26:
  8178  00171C  6EDF               	movwf	indf2,c
  8179                           
  8180                           ; BSR set to: 15
  8181                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  8182  00171E  EE20 F00D          	lfsr	2,13
  8183  001722  5001               	movf	CANreceiveMessage@msg,w,c
  8184  001724  26D9               	addwf	fsr2l,f,c
  8185  001726  5002               	movf	CANreceiveMessage@msg+1,w,c
  8186  001728  22DA               	addwfc	fsr2h,f,c
  8187  00172A  5065               	movf	3941,w,c	;volatile
  8188  00172C  0B0F               	andlw	15
  8189  00172E  6EDF               	movwf	indf2,c
  8190                           
  8191                           ; BSR set to: 15
  8192                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  8193  001730  EE20 F00C          	lfsr	2,12
  8194  001734  5001               	movf	CANreceiveMessage@msg,w,c
  8195  001736  26D9               	addwf	fsr2l,f,c
  8196  001738  5002               	movf	CANreceiveMessage@msg+1,w,c
  8197  00173A  22DA               	addwfc	fsr2h,f,c
  8198  00173C  A662               	btfss	3938,3,c	;volatile
  8199  00173E  D002               	goto	i1u402_20
  8200  001740  0E01               	movlw	1
  8201  001742  D001               	goto	i1u402_26
  8202  001744                     i1u402_20:
  8203  001744  0E00               	movlw	0
  8204  001746                     i1u402_26:
  8205  001746  6EDF               	movwf	indf2,c
  8206                           
  8207                           ; BSR set to: 15
  8208                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  8209  001748  B662               	btfsc	3938,3,c	;volatile
  8210  00174A  D043               	goto	i1l3646
  8211                           
  8212                           ; BSR set to: 15
  8213                           ;inc\CANlib.h: 607: {
  8214                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8215  00174C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8216  001750  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8217  001752  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8218  001754  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8219  001756  0E03               	movlw	3
  8220  001758                     i1u404_25:
  8221  001758  90D8               	bcf	status,0,c
  8222  00175A  3603               	rlcf	??_CANreceiveMessage,f,c
  8223  00175C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8224  00175E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8225  001760  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8226  001762  2EE8               	decfsz	wreg,f,c
  8227  001764  D7F9               	goto	i1u404_25
  8228  001766  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8229  00176A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8230  00176E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8231  001772  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8232  001776  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8233  00177A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8237  00177E  3862               	swapf	3938,w,c	;volatile
  8238  001780  42E8               	rrncf	wreg,f,c
  8239  001782  0B07               	andlw	7
  8240  001784  0B07               	andlw	7
  8241  001786  6E0C               	movwf	CANreceiveMessage@tamp,c
  8242                           
  8243                           ; BSR set to: 15
  8244                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  8245  001788  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8246  00178C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8247  001790  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8248  001794  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8249  001798  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8250  00179C  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8251  0017A0  500C               	movf	CANreceiveMessage@tamp,w,c
  8252  0017A2  2403               	addwf	??_CANreceiveMessage,w,c
  8253  0017A4  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8254  0017A6  0E00               	movlw	0
  8255  0017A8  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8256  0017AA  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8257  0017AC  0E00               	movlw	0
  8258  0017AE  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8259  0017B0  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8260  0017B2  0E00               	movlw	0
  8261  0017B4  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8262  0017B6  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8263  0017B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8264  0017BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8265  0017C0  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8266  0017C4  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8267  0017C8  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8268  0017CC  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8269                           
  8270                           ;inc\CANlib.h: 611: }
  8271  0017D0  D088               	goto	i1l3672
  8272  0017D2                     i1l3646:
  8273                           
  8274                           ; BSR set to: 15
  8275                           ;inc\CANlib.h: 612: else
  8276                           ;inc\CANlib.h: 613: {
  8277                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  8278  0017D2  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8279  0017D6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8280  0017D8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8281  0017DA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8282  0017DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8283  0017E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8284  0017E4  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8285  0017E8  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8286  0017EC  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8287  0017F0  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8288                           
  8289                           ; BSR set to: 15
  8290                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8291  0017F4  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8292  0017F8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8293  0017FA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8294  0017FC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8295  0017FE  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8296  001802  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8297  001806  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8298  00180A  6A03               	clrf	??_CANreceiveMessage,c
  8299  00180C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8300  001810  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8301  001814  5003               	movf	??_CANreceiveMessage,w,c
  8302  001816  26DE               	addwf	postinc2,f,c
  8303  001818  5004               	movf	??_CANreceiveMessage+1,w,c
  8304  00181A  22DE               	addwfc	postinc2,f,c
  8305  00181C  5005               	movf	??_CANreceiveMessage+2,w,c
  8306  00181E  22DE               	addwfc	postinc2,f,c
  8307  001820  5006               	movf	??_CANreceiveMessage+3,w,c
  8308  001822  22DE               	addwfc	postinc2,f,c
  8309                           
  8310                           ; BSR set to: 15
  8311                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  8312  001824  A062               	btfss	3938,0,c	;volatile
  8313  001826  D00C               	goto	i1l3654
  8314                           
  8315                           ; BSR set to: 15
  8316                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  8317  001828  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8318  00182C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8319  001830  0E00               	movlw	0
  8320  001832  12DE               	iorwf	postinc2,f,c
  8321  001834  0E00               	movlw	0
  8322  001836  12DE               	iorwf	postinc2,f,c
  8323  001838  0E01               	movlw	1
  8324  00183A  12DE               	iorwf	postinc2,f,c
  8325  00183C  0E00               	movlw	0
  8326  00183E  12DE               	iorwf	postinc2,f,c
  8327  001840                     i1l3654:
  8328                           
  8329                           ; BSR set to: 15
  8330                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  8331  001840  A262               	btfss	3938,1,c	;volatile
  8332  001842  D00C               	goto	i1l3658
  8333                           
  8334                           ; BSR set to: 15
  8335                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  8336  001844  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8337  001848  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8338  00184C  0E00               	movlw	0
  8339  00184E  12DE               	iorwf	postinc2,f,c
  8340  001850  0E00               	movlw	0
  8341  001852  12DE               	iorwf	postinc2,f,c
  8342  001854  0E02               	movlw	2
  8343  001856  12DE               	iorwf	postinc2,f,c
  8344  001858  0E00               	movlw	0
  8345  00185A  12DE               	iorwf	postinc2,f,c
  8346  00185C                     i1l3658:
  8347                           
  8348                           ; BSR set to: 15
  8349                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  8350  00185C  AA62               	btfss	3938,5,c	;volatile
  8351  00185E  D00C               	goto	i1l3662
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  8355  001860  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8356  001864  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8357  001868  0E00               	movlw	0
  8358  00186A  12DE               	iorwf	postinc2,f,c
  8359  00186C  0E00               	movlw	0
  8360  00186E  12DE               	iorwf	postinc2,f,c
  8361  001870  0E04               	movlw	4
  8362  001872  12DE               	iorwf	postinc2,f,c
  8363  001874  0E00               	movlw	0
  8364  001876  12DE               	iorwf	postinc2,f,c
  8365  001878                     i1l3662:
  8366                           
  8367                           ; BSR set to: 15
  8368                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  8369  001878  AC62               	btfss	3938,6,c	;volatile
  8370  00187A  D00C               	goto	i1l3666
  8371                           
  8372                           ; BSR set to: 15
  8373                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  8374  00187C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8375  001880  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8376  001884  0E00               	movlw	0
  8377  001886  12DE               	iorwf	postinc2,f,c
  8378  001888  0E00               	movlw	0
  8379  00188A  12DE               	iorwf	postinc2,f,c
  8380  00188C  0E08               	movlw	8
  8381  00188E  12DE               	iorwf	postinc2,f,c
  8382  001890  0E00               	movlw	0
  8383  001892  12DE               	iorwf	postinc2,f,c
  8384  001894                     i1l3666:
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  8388  001894  AE62               	btfss	3938,7,c	;volatile
  8389  001896  D00C               	goto	i1l3670
  8390                           
  8391                           ; BSR set to: 15
  8392                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  8393  001898  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8394  00189C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8395  0018A0  0E00               	movlw	0
  8396  0018A2  12DE               	iorwf	postinc2,f,c
  8397  0018A4  0E00               	movlw	0
  8398  0018A6  12DE               	iorwf	postinc2,f,c
  8399  0018A8  0E10               	movlw	16
  8400  0018AA  12DE               	iorwf	postinc2,f,c
  8401  0018AC  0E00               	movlw	0
  8402  0018AE  12DE               	iorwf	postinc2,f,c
  8403  0018B0                     i1l3670:
  8404                           
  8405                           ; BSR set to: 15
  8406                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8407  0018B0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8408  0018B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8409  0018B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8410  0018B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8411  0018BA  0E15               	movlw	21
  8412  0018BC                     i1u410_25:
  8413  0018BC  90D8               	bcf	status,0,c
  8414  0018BE  3603               	rlcf	??_CANreceiveMessage,f,c
  8415  0018C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8416  0018C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8417  0018C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8418  0018C6  2EE8               	decfsz	wreg,f,c
  8419  0018C8  D7F9               	goto	i1u410_25
  8420  0018CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8421  0018CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8422  0018D2  5003               	movf	??_CANreceiveMessage,w,c
  8423  0018D4  12DE               	iorwf	postinc2,f,c
  8424  0018D6  5004               	movf	??_CANreceiveMessage+1,w,c
  8425  0018D8  12DE               	iorwf	postinc2,f,c
  8426  0018DA  5005               	movf	??_CANreceiveMessage+2,w,c
  8427  0018DC  12DE               	iorwf	postinc2,f,c
  8428  0018DE  5006               	movf	??_CANreceiveMessage+3,w,c
  8429  0018E0  12DE               	iorwf	postinc2,f,c
  8430  0018E2                     i1l3672:
  8431                           
  8432                           ; BSR set to: 15
  8433                           ;inc\CANlib.h: 630: }
  8434                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  8435  0018E2  9E60               	bcf	3936,7,c	;volatile
  8436                           
  8437                           ; BSR set to: 15
  8438                           ;inc\CANlib.h: 633: return (error);
  8439                           ;	Return value of _CANreceiveMessage is never used
  8440  0018E4  0012               	return	
  8441  0018E6                     __end_of_CANreceiveMessage:
  8442                           	opt stack 0
  8443                           pclatu	equ	0xFFB
  8444                           pclath	equ	0xFFA
  8445                           tblptru	equ	0xFF8
  8446                           tblptrh	equ	0xFF7
  8447                           tblptrl	equ	0xFF6
  8448                           tablat	equ	0xFF5
  8449                           prodh	equ	0xFF4
  8450                           prodl	equ	0xFF3
  8451                           intcon	equ	0xFF2
  8452                           intcon2	equ	0xFF1
  8453                           intcon3	equ	0xFF0
  8454                           postinc0	equ	0xFEE
  8455                           fsr0h	equ	0xFEA
  8456                           fsr0l	equ	0xFE9
  8457                           wreg	equ	0xFE8
  8458                           postdec1	equ	0xFE5
  8459                           fsr1h	equ	0xFE2
  8460                           fsr1l	equ	0xFE1
  8461                           bsr	equ	0xFE0
  8462                           indf2	equ	0xFDF
  8463                           postinc2	equ	0xFDE
  8464                           postdec2	equ	0xFDD
  8465                           fsr2h	equ	0xFDA
  8466                           fsr2l	equ	0xFD9
  8467                           status	equ	0xFD8
  8468                           
  8469 ;; *************** function _CANisRxReady *****************
  8470 ;; Defined at:
  8471 ;;		line 1164 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;		None
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  1    wreg      unsigned char 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8485 ;;      Params:         0       0       0       0
  8486 ;;      Locals:         1       0       0       0
  8487 ;;      Temps:          0       0       0       0
  8488 ;;      Totals:         1       0       0       0
  8489 ;;Total ram usage:        1 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    2
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_ISR_Bassa
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text18
  8500  002A62                     __ptext18:
  8501                           	opt stack 0
  8502  002A62                     _CANisRxReady:
  8503                           	opt stack 24
  8504                           
  8505                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8506                           
  8507                           ; BSR set to: 15
  8508                           ;incstack = 0
  8509  002A62  0E01               	movlw	1
  8510  002A64  6E01               	movwf	_CANisRxReady$3280,c
  8511  002A66  BE60               	btfsc	3936,7,c	;volatile
  8512  002A68  D005               	goto	i1l579
  8513  002A6A  010F               	movlb	15	; () banked
  8514  002A6C  BF50               	btfsc	80,7,b	;volatile
  8515  002A6E  D002               	goto	i1l579
  8516                           
  8517                           ; BSR set to: 15
  8518  002A70  0E00               	movlw	0
  8519  002A72  6E01               	movwf	_CANisRxReady$3280,c
  8520  002A74                     i1l579:
  8521  002A74  5001               	movf	_CANisRxReady$3280,w,c
  8522  002A76  0012               	return	
  8523  002A78                     __end_of_CANisRxReady:
  8524                           	opt stack 0
  8525                           pclatu	equ	0xFFB
  8526                           pclath	equ	0xFFA
  8527                           tblptru	equ	0xFF8
  8528                           tblptrh	equ	0xFF7
  8529                           tblptrl	equ	0xFF6
  8530                           tablat	equ	0xFF5
  8531                           prodh	equ	0xFF4
  8532                           prodl	equ	0xFF3
  8533                           intcon	equ	0xFF2
  8534                           intcon2	equ	0xFF1
  8535                           intcon3	equ	0xFF0
  8536                           postinc0	equ	0xFEE
  8537                           fsr0h	equ	0xFEA
  8538                           fsr0l	equ	0xFE9
  8539                           wreg	equ	0xFE8
  8540                           postdec1	equ	0xFE5
  8541                           fsr1h	equ	0xFE2
  8542                           fsr1l	equ	0xFE1
  8543                           bsr	equ	0xFE0
  8544                           indf2	equ	0xFDF
  8545                           postinc2	equ	0xFDE
  8546                           postdec2	equ	0xFDD
  8547                           fsr2h	equ	0xFDA
  8548                           fsr2l	equ	0xFD9
  8549                           status	equ	0xFD8
  8550                           
  8551 ;; *************** function _ISR_Alta *****************
  8552 ;; Defined at:
  8553 ;;		line 147 in file "ABS_Code.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;		None
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;		None
  8558 ;; Return value:  Size  Location     Type
  8559 ;;		None               void
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8567 ;;      Params:         0       0       0       0
  8568 ;;      Locals:         0       0       0       0
  8569 ;;      Temps:          0      22       0       0
  8570 ;;      Totals:         0      22       0       0
  8571 ;;Total ram usage:       22 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    1
  8574 ;; This function calls:
  8575 ;;		_WriteTimer0
  8576 ;;		___lwdiv
  8577 ;;		i2___awdiv
  8578 ;;		i2___wmul
  8579 ;; This function is called by:
  8580 ;;		Interrupt level 2
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	intcode
  8585  000008                     __pintcode:
  8586                           	opt stack 0
  8587  000008                     _ISR_Alta:
  8588                           	opt stack 24
  8589                           
  8590                           ;incstack = 0
  8591  000008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8592  00000A  CFFA F0BD          	movff	pclath,??_ISR_Alta+8
  8593  00000E  CFFB F0BE          	movff	pclatu,??_ISR_Alta+9
  8594  000012  ED42  F00E         	call	int_func,f	;refresh shadow registers
  8595                           pclatu	equ	0xFFB
  8596                           pclath	equ	0xFFA
  8597                           tblptru	equ	0xFF8
  8598                           tblptrh	equ	0xFF7
  8599                           tblptrl	equ	0xFF6
  8600                           tablat	equ	0xFF5
  8601                           prodh	equ	0xFF4
  8602                           prodl	equ	0xFF3
  8603                           intcon	equ	0xFF2
  8604                           intcon2	equ	0xFF1
  8605                           intcon3	equ	0xFF0
  8606                           postinc0	equ	0xFEE
  8607                           fsr0h	equ	0xFEA
  8608                           fsr0l	equ	0xFE9
  8609                           wreg	equ	0xFE8
  8610                           postdec1	equ	0xFE5
  8611                           fsr1h	equ	0xFE2
  8612                           fsr1l	equ	0xFE1
  8613                           bsr	equ	0xFE0
  8614                           indf2	equ	0xFDF
  8615                           postinc2	equ	0xFDE
  8616                           postdec2	equ	0xFDD
  8617                           fsr2h	equ	0xFDA
  8618                           fsr2l	equ	0xFD9
  8619                           status	equ	0xFD8
  8620                           
  8621                           	psect	intcode_body
  8622  001C84                     __pintcode_body:
  8623                           	opt stack 24
  8624  001C84                     int_func:
  8625                           	opt stack 24
  8626  001C84  0006               	pop		; remove dummy address from shadow register refresh
  8627  001C86  CFE9 F0BF          	movff	fsr0l,??_ISR_Alta+10
  8628  001C8A  CFEA F0C0          	movff	fsr0h,??_ISR_Alta+11
  8629  001C8E  CFE1 F0C1          	movff	fsr1l,??_ISR_Alta+12
  8630  001C92  CFE2 F0C2          	movff	fsr1h,??_ISR_Alta+13
  8631  001C96  CFD9 F0C3          	movff	fsr2l,??_ISR_Alta+14
  8632  001C9A  CFDA F0C4          	movff	fsr2h,??_ISR_Alta+15
  8633  001C9E  CFF3 F0C5          	movff	prodl,??_ISR_Alta+16
  8634  001CA2  CFF4 F0C6          	movff	prodh,??_ISR_Alta+17
  8635  001CA6  CFF6 F0C7          	movff	tblptrl,??_ISR_Alta+18
  8636  001CAA  CFF7 F0C8          	movff	tblptrh,??_ISR_Alta+19
  8637  001CAE  CFF8 F0C9          	movff	tblptru,??_ISR_Alta+20
  8638  001CB2  CFF5 F0CA          	movff	tablat,??_ISR_Alta+21
  8639                           
  8640                           ;ABS_Code.c: 149: if (INTCONbits.TMR0IF == 1) {
  8641  001CB6  A4F2               	btfss	intcon,2,c	;volatile
  8642  001CB8  D0AB               	goto	i2l4930
  8643                           
  8644                           ;ABS_Code.c: 150: PORTCbits.RC0 = ~PORTCbits.RC0;
  8645  001CBA  A082               	btfss	3970,0,c	;volatile
  8646  001CBC  D002               	goto	i2u601_40
  8647  001CBE  0E01               	movlw	1
  8648  001CC0  D001               	goto	i2u601_46
  8649  001CC2                     i2u601_40:
  8650  001CC2  0E00               	movlw	0
  8651  001CC4                     i2u601_46:
  8652  001CC4  0AFF               	xorlw	255
  8653  001CC6  0100               	movlb	0	; () banked
  8654  001CC8  6FB5               	movwf	??_ISR_Alta& (0+255),b
  8655  001CCA  5082               	movf	3970,w,c	;volatile
  8656  001CCC  0100               	movlb	0	; () banked
  8657  001CCE  19B5               	xorwf	??_ISR_Alta& (0+255),w,b
  8658  001CD0  0BFE               	andlw	-2
  8659  001CD2  19B5               	xorwf	??_ISR_Alta& (0+255),w,b
  8660  001CD4  6E82               	movwf	3970,c	;volatile
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;ABS_Code.c: 151: if (PORTCbits.RC0 == 1) {
  8664  001CD6  A082               	btfss	3970,0,c	;volatile
  8665  001CD8  D094               	goto	i2l4926
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;ABS_Code.c: 152: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8669  001CDA  0E40               	movlw	64
  8670  001CDC  0100               	movlb	0	; () banked
  8671  001CDE  6FB5               	movwf	??_ISR_Alta& (0+255),b
  8672  001CE0  0E06               	movlw	6
  8673  001CE2  0100               	movlb	0	; () banked
  8674  001CE4  6FB6               	movwf	(??_ISR_Alta+1)& (0+255),b
  8675  001CE6  C03C  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8676  001CEA  6A1F               	clrf	i2___wmul@multiplier+1,c
  8677  001CEC  0E05               	movlw	5
  8678  001CEE  6E21               	movwf	i2___wmul@multiplicand+1,c
  8679  001CF0  0E78               	movlw	120
  8680  001CF2  6E20               	movwf	i2___wmul@multiplicand,c
  8681  001CF4  EC01  F015         	call	i2___wmul	;wreg free
  8682  001CF8  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8683  001CFC  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8684  001D00  0E00               	movlw	0
  8685  001D02  6E27               	movwf	i2___awdiv@divisor+1,c
  8686  001D04  0EB4               	movlw	180
  8687  001D06  6E26               	movwf	i2___awdiv@divisor,c
  8688  001D08  ECF2  F013         	call	i2___awdiv	;wreg free
  8689  001D0C  90D8               	bcf	status,0,c
  8690  001D0E  3624               	rlcf	?i2___awdiv,f,c
  8691  001D10  3625               	rlcf	?i2___awdiv+1,f,c
  8692  001D12  0100               	movlb	0	; () banked
  8693  001D14  51B5               	movf	??_ISR_Alta& (0+255),w,b
  8694  001D16  2624               	addwf	?i2___awdiv,f,c
  8695  001D18  0100               	movlb	0	; () banked
  8696  001D1A  51B6               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8697  001D1C  2225               	addwfc	?i2___awdiv+1,f,c
  8698  001D1E  C024  F034         	movff	?i2___awdiv,_timer_on	;volatile
  8699  001D22  C025  F035         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8700  001D26  0E00               	movlw	0
  8701  001D28  BE35               	btfsc	_timer_on+1,7,c	;volatile
  8702  001D2A  0EFF               	movlw	-1
  8703  001D2C  6E36               	movwf	_timer_on+2,c	;volatile
  8704  001D2E  6E37               	movwf	_timer_on+3,c	;volatile
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;ABS_Code.c: 153: timer_off = 65536 - (40000 - timer_on);
  8708  001D30  C034  F0B5         	movff	_timer_on,??_ISR_Alta	;volatile
  8709  001D34  C035  F0B6         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8710  001D38  C036  F0B7         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8711  001D3C  C037  F0B8         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8712  001D40  0100               	movlb	0	; () banked
  8713  001D42  1FB5               	comf	??_ISR_Alta& (0+255),f,b
  8714  001D44  1FB6               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8715  001D46  1FB7               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8716  001D48  1FB8               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8717  001D4A  2BB5               	incf	??_ISR_Alta& (0+255),f,b
  8718  001D4C  0E00               	movlw	0
  8719  001D4E  23B6               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8720  001D50  23B7               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8721  001D52  23B8               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8722  001D54  0E40               	movlw	64
  8723  001D56  0100               	movlb	0	; () banked
  8724  001D58  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8725  001D5A  0100               	movlb	0	; () banked
  8726  001D5C  6FB9               	movwf	(??_ISR_Alta+4)& (0+255),b
  8727  001D5E  0E9C               	movlw	156
  8728  001D60  0100               	movlb	0	; () banked
  8729  001D62  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8730  001D64  0100               	movlb	0	; () banked
  8731  001D66  6FBA               	movwf	(??_ISR_Alta+5)& (0+255),b
  8732  001D68  0E00               	movlw	0
  8733  001D6A  0100               	movlb	0	; () banked
  8734  001D6C  21B7               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8735  001D6E  0100               	movlb	0	; () banked
  8736  001D70  6FBB               	movwf	(??_ISR_Alta+6)& (0+255),b
  8737  001D72  0E00               	movlw	0
  8738  001D74  0100               	movlb	0	; () banked
  8739  001D76  21B8               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8740  001D78  0100               	movlb	0	; () banked
  8741  001D7A  6FBC               	movwf	(??_ISR_Alta+7)& (0+255),b
  8742  001D7C  0100               	movlb	0	; () banked
  8743  001D7E  1FB9               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8744  001D80  1FBA               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8745  001D82  1FBB               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8746  001D84  1FBC               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8747  001D86  2BB9               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8748  001D88  0E00               	movlw	0
  8749  001D8A  23BA               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8750  001D8C  23BB               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8751  001D8E  23BC               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8752  001D90  0E00               	movlw	0
  8753  001D92  0100               	movlb	0	; () banked
  8754  001D94  25B9               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8755  001D96  6E30               	movwf	_timer_off,c	;volatile
  8756  001D98  0E00               	movlw	0
  8757  001D9A  0100               	movlb	0	; () banked
  8758  001D9C  21BA               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8759  001D9E  6E31               	movwf	_timer_off+1,c	;volatile
  8760  001DA0  0E01               	movlw	1
  8761  001DA2  0100               	movlb	0	; () banked
  8762  001DA4  21BB               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8763  001DA6  6E32               	movwf	_timer_off+2,c	;volatile
  8764  001DA8  0E00               	movlw	0
  8765  001DAA  0100               	movlb	0	; () banked
  8766  001DAC  21BC               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8767  001DAE  6E33               	movwf	_timer_off+3,c	;volatile
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;ABS_Code.c: 154: timer_on = 65536 - timer_on;
  8771  001DB0  C034  F0B5         	movff	_timer_on,??_ISR_Alta	;volatile
  8772  001DB4  C035  F0B6         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8773  001DB8  C036  F0B7         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8774  001DBC  C037  F0B8         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8775  001DC0  0100               	movlb	0	; () banked
  8776  001DC2  1FB5               	comf	??_ISR_Alta& (0+255),f,b
  8777  001DC4  1FB6               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8778  001DC6  1FB7               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8779  001DC8  1FB8               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8780  001DCA  2BB5               	incf	??_ISR_Alta& (0+255),f,b
  8781  001DCC  0E00               	movlw	0
  8782  001DCE  23B6               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8783  001DD0  23B7               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8784  001DD2  23B8               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8785  001DD4  0E00               	movlw	0
  8786  001DD6  0100               	movlb	0	; () banked
  8787  001DD8  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8788  001DDA  6E34               	movwf	_timer_on,c	;volatile
  8789  001DDC  0E00               	movlw	0
  8790  001DDE  0100               	movlb	0	; () banked
  8791  001DE0  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8792  001DE2  6E35               	movwf	_timer_on+1,c	;volatile
  8793  001DE4  0E01               	movlw	1
  8794  001DE6  0100               	movlb	0	; () banked
  8795  001DE8  21B7               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8796  001DEA  6E36               	movwf	_timer_on+2,c	;volatile
  8797  001DEC  0E00               	movlw	0
  8798  001DEE  0100               	movlb	0	; () banked
  8799  001DF0  21B8               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8800  001DF2  6E37               	movwf	_timer_on+3,c	;volatile
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;ABS_Code.c: 155: WriteTimer0(timer_on);
  8804  001DF4  C034  F01E         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8805  001DF8  C035  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8806  001DFC  EC3C  F015         	call	_WriteTimer0	;wreg free
  8807                           
  8808                           ;ABS_Code.c: 156: } else {
  8809  001E00  D006               	goto	i2l4928
  8810  001E02                     i2l4926:
  8811                           
  8812                           ;ABS_Code.c: 157: WriteTimer0(timer_off);
  8813  001E02  C030  F01E         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8814  001E06  C031  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8815  001E0A  EC3C  F015         	call	_WriteTimer0	;wreg free
  8816  001E0E                     i2l4928:
  8817                           
  8818                           ;ABS_Code.c: 158: }
  8819                           ;ABS_Code.c: 159: INTCONbits.TMR0IF = 0;
  8820  001E0E  94F2               	bcf	intcon,2,c	;volatile
  8821  001E10                     i2l4930:
  8822                           
  8823                           ;ABS_Code.c: 160: }
  8824                           ;ABS_Code.c: 163: if (INTCONbits.INT0IF == 1) {
  8825  001E10  A2F2               	btfss	intcon,1,c	;volatile
  8826  001E12  D036               	goto	i2l4958
  8827                           
  8828                           ;ABS_Code.c: 164: if (x == 0) {
  8829  001E14  B23E               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8830  001E16  D006               	goto	i2l4938
  8831                           
  8832                           ;ABS_Code.c: 165: TMR1H = 0x00;
  8833  001E18  0E00               	movlw	0
  8834  001E1A  6ECF               	movwf	4047,c	;volatile
  8835                           
  8836                           ;ABS_Code.c: 166: TMR1L = 0x00;
  8837  001E1C  0E00               	movlw	0
  8838  001E1E  6ECE               	movwf	4046,c	;volatile
  8839                           
  8840                           ;ABS_Code.c: 167: x = 1;
  8841  001E20  823E               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8842                           
  8843                           ;ABS_Code.c: 168: } else {
  8844  001E22  D02D               	goto	i2l4956
  8845  001E24                     i2l4938:
  8846                           
  8847                           ;ABS_Code.c: 169: gap_time_1 = (TMR1H << 8) + TMR1L;
  8848  001E24  50CF               	movf	4047,w,c	;volatile
  8849  001E26  0100               	movlb	0	; () banked
  8850  001E28  6FB6               	movwf	(??_ISR_Alta+1)& (0+255),b
  8851  001E2A  6BB5               	clrf	??_ISR_Alta& (0+255),b
  8852  001E2C  50CE               	movf	4046,w,c	;volatile
  8853  001E2E  0100               	movlb	0	; () banked
  8854  001E30  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8855  001E32  6E38               	movwf	_gap_time_1,c	;volatile
  8856  001E34  0E00               	movlw	0
  8857  001E36  0100               	movlb	0	; () banked
  8858  001E38  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8859  001E3A  6E39               	movwf	_gap_time_1+1,c	;volatile
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;ABS_Code.c: 170: gap_time_1 = gap_time_1 / 500;
  8863  001E3C  C038  F01E         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8864  001E40  C039  F01F         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8865  001E44  0E01               	movlw	1
  8866  001E46  6E21               	movwf	___lwdiv@divisor+1,c
  8867  001E48  0EF4               	movlw	244
  8868  001E4A  6E20               	movwf	___lwdiv@divisor,c
  8869  001E4C  EC7B  F014         	call	___lwdiv	;wreg free
  8870  001E50  C01E  F038         	movff	?___lwdiv,_gap_time_1	;volatile
  8871  001E54  C01F  F039         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8872                           
  8873                           ;ABS_Code.c: 171: ENC1_measure = 1;
  8874  001E58  803D               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8875                           
  8876                           ;ABS_Code.c: 172: TMR1H = 0x00;
  8877  001E5A  0E00               	movlw	0
  8878  001E5C  6ECF               	movwf	4047,c	;volatile
  8879                           
  8880                           ;ABS_Code.c: 173: TMR1H = 0x00;
  8881  001E5E  0E00               	movlw	0
  8882  001E60  6ECF               	movwf	4047,c	;volatile
  8883                           
  8884                           ;ABS_Code.c: 174: if (count_flag == 1) {
  8885  001E62  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8886  001E64  D007               	goto	i2l4952
  8887                           
  8888                           ;ABS_Code.c: 175: int_counter_1++;
  8889  001E66  0E01               	movlw	1
  8890  001E68  0100               	movlb	0	; () banked
  8891  001E6A  2764               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8892  001E6C  0E00               	movlw	0
  8893  001E6E  2365               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8894  001E70  2366               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8895  001E72  2367               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8896  001E74                     i2l4952:
  8897                           
  8898                           ;ABS_Code.c: 176: }
  8899                           ;ABS_Code.c: 177: if (distance_set_flag == 1) {
  8900  001E74  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  8901  001E76  D003               	goto	i2l4956
  8902                           
  8903                           ;ABS_Code.c: 178: distance_set_counter_1++;
  8904  001E78  0100               	movlb	0	; () banked
  8905  001E7A  4B7E               	infsnz	_distance_set_counter_1& (0+255),f,b	;volatile
  8906  001E7C  2B7F               	incf	(_distance_set_counter_1+1)& (0+255),f,b	;volatile
  8907  001E7E                     i2l4956:
  8908                           
  8909                           ;ABS_Code.c: 179: }
  8910                           ;ABS_Code.c: 180: }
  8911                           ;ABS_Code.c: 181: INTCONbits.INT0IF = 0;
  8912  001E7E  92F2               	bcf	intcon,1,c	;volatile
  8913  001E80                     i2l4958:
  8914                           
  8915                           ;ABS_Code.c: 182: }
  8916                           ;ABS_Code.c: 185: if (INTCON3bits.INT1IF == 1) {
  8917  001E80  A0F0               	btfss	intcon3,0,c	;volatile
  8918  001E82  D036               	goto	i2l693
  8919                           
  8920                           ;ABS_Code.c: 186: if (y == 0) {
  8921  001E84  B43E               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  8922  001E86  D006               	goto	i2l4966
  8923                           
  8924                           ;ABS_Code.c: 187: TMR3H = 0x00;
  8925  001E88  0E00               	movlw	0
  8926  001E8A  6EB3               	movwf	4019,c	;volatile
  8927                           
  8928                           ;ABS_Code.c: 188: TMR3L = 0x00;
  8929  001E8C  0E00               	movlw	0
  8930  001E8E  6EB2               	movwf	4018,c	;volatile
  8931                           
  8932                           ;ABS_Code.c: 189: y = 1;
  8933  001E90  843E               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  8934                           
  8935                           ;ABS_Code.c: 190: } else {
  8936  001E92  D02D               	goto	i2l4984
  8937  001E94                     i2l4966:
  8938                           
  8939                           ;ABS_Code.c: 191: gap_time_2 = (TMR3H << 8) + TMR3L;
  8940  001E94  50B3               	movf	4019,w,c	;volatile
  8941  001E96  0100               	movlb	0	; () banked
  8942  001E98  6FB6               	movwf	(??_ISR_Alta+1)& (0+255),b
  8943  001E9A  6BB5               	clrf	??_ISR_Alta& (0+255),b
  8944  001E9C  50B2               	movf	4018,w,c	;volatile
  8945  001E9E  0100               	movlb	0	; () banked
  8946  001EA0  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8947  001EA2  6E3A               	movwf	_gap_time_2,c	;volatile
  8948  001EA4  0E00               	movlw	0
  8949  001EA6  0100               	movlb	0	; () banked
  8950  001EA8  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8951  001EAA  6E3B               	movwf	_gap_time_2+1,c	;volatile
  8952                           
  8953                           ; BSR set to: 0
  8954                           ;ABS_Code.c: 192: gap_time_2 = gap_time_2 / 500;
  8955  001EAC  C03A  F01E         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  8956  001EB0  C03B  F01F         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  8957  001EB4  0E01               	movlw	1
  8958  001EB6  6E21               	movwf	___lwdiv@divisor+1,c
  8959  001EB8  0EF4               	movlw	244
  8960  001EBA  6E20               	movwf	___lwdiv@divisor,c
  8961  001EBC  EC7B  F014         	call	___lwdiv	;wreg free
  8962  001EC0  C01E  F03A         	movff	?___lwdiv,_gap_time_2	;volatile
  8963  001EC4  C01F  F03B         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  8964                           
  8965                           ;ABS_Code.c: 193: ENC2_measure = 1;
  8966  001EC8  823D               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  8967                           
  8968                           ;ABS_Code.c: 194: TMR3H = 0x00;
  8969  001ECA  0E00               	movlw	0
  8970  001ECC  6EB3               	movwf	4019,c	;volatile
  8971                           
  8972                           ;ABS_Code.c: 195: TMR3H = 0x00;
  8973  001ECE  0E00               	movlw	0
  8974  001ED0  6EB3               	movwf	4019,c	;volatile
  8975                           
  8976                           ;ABS_Code.c: 196: if (count_flag == 1) {
  8977  001ED2  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8978  001ED4  D007               	goto	i2l4980
  8979                           
  8980                           ;ABS_Code.c: 197: int_counter_2++;
  8981  001ED6  0E01               	movlw	1
  8982  001ED8  0100               	movlb	0	; () banked
  8983  001EDA  2768               	addwf	_int_counter_2& (0+255),f,b	;volatile
  8984  001EDC  0E00               	movlw	0
  8985  001EDE  2369               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  8986  001EE0  236A               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  8987  001EE2  236B               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  8988  001EE4                     i2l4980:
  8989                           
  8990                           ;ABS_Code.c: 198: }
  8991                           ;ABS_Code.c: 199: if (distance_set_flag == 1) {
  8992  001EE4  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  8993  001EE6  D003               	goto	i2l4984
  8994                           
  8995                           ;ABS_Code.c: 200: distance_set_counter_2++;
  8996  001EE8  0100               	movlb	0	; () banked
  8997  001EEA  4B80               	infsnz	_distance_set_counter_2& (0+255),f,b	;volatile
  8998  001EEC  2B81               	incf	(_distance_set_counter_2+1)& (0+255),f,b	;volatile
  8999  001EEE                     i2l4984:
  9000                           
  9001                           ;ABS_Code.c: 201: }
  9002                           ;ABS_Code.c: 202: }
  9003                           ;ABS_Code.c: 203: INTCON3bits.INT1IF = 0;
  9004  001EEE  90F0               	bcf	intcon3,0,c	;volatile
  9005  001EF0                     i2l693:
  9006  001EF0  C0CA  FFF5         	movff	??_ISR_Alta+21,tablat
  9007  001EF4  C0C9  FFF8         	movff	??_ISR_Alta+20,tblptru
  9008  001EF8  C0C8  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9009  001EFC  C0C7  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9010  001F00  C0C6  FFF4         	movff	??_ISR_Alta+17,prodh
  9011  001F04  C0C5  FFF3         	movff	??_ISR_Alta+16,prodl
  9012  001F08  C0C4  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9013  001F0C  C0C3  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9014  001F10  C0C2  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9015  001F14  C0C1  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9016  001F18  C0C0  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9017  001F1C  C0BF  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9018  001F20  C0BE  FFFB         	movff	??_ISR_Alta+9,pclatu
  9019  001F24  C0BD  FFFA         	movff	??_ISR_Alta+8,pclath
  9020  001F28  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9021  001F2A  0011               	retfie		f
  9022  001F2C                     __end_of_ISR_Alta:
  9023                           	opt stack 0
  9024                           pclatu	equ	0xFFB
  9025                           pclath	equ	0xFFA
  9026                           tblptru	equ	0xFF8
  9027                           tblptrh	equ	0xFF7
  9028                           tblptrl	equ	0xFF6
  9029                           tablat	equ	0xFF5
  9030                           prodh	equ	0xFF4
  9031                           prodl	equ	0xFF3
  9032                           intcon	equ	0xFF2
  9033                           intcon2	equ	0xFF1
  9034                           intcon3	equ	0xFF0
  9035                           postinc0	equ	0xFEE
  9036                           fsr0h	equ	0xFEA
  9037                           fsr0l	equ	0xFE9
  9038                           wreg	equ	0xFE8
  9039                           postdec1	equ	0xFE5
  9040                           fsr1h	equ	0xFE2
  9041                           fsr1l	equ	0xFE1
  9042                           bsr	equ	0xFE0
  9043                           indf2	equ	0xFDF
  9044                           postinc2	equ	0xFDE
  9045                           postdec2	equ	0xFDD
  9046                           fsr2h	equ	0xFDA
  9047                           fsr2l	equ	0xFD9
  9048                           status	equ	0xFD8
  9049                           
  9050 ;; *************** function i2___wmul *****************
  9051 ;; Defined at:
  9052 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  multiplier      2   29[COMRAM] unsigned int 
  9055 ;;  multiplicand    2   31[COMRAM] unsigned int 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  __wmul          2   33[COMRAM] unsigned int 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  2   29[COMRAM] unsigned int 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, prodl, prodh
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9067 ;;      Params:         4       0       0       0
  9068 ;;      Locals:         2       0       0       0
  9069 ;;      Temps:          0       0       0       0
  9070 ;;      Totals:         6       0       0       0
  9071 ;;Total ram usage:        6 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_ISR_Alta
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text20
  9081  002A02                     __ptext20:
  9082                           	opt stack 0
  9083  002A02                     i2___wmul:
  9084                           	opt stack 24
  9085                           
  9086                           ;incstack = 0
  9087  002A02  501E               	movf	i2___wmul@multiplier,w,c
  9088  002A04  0220               	mulwf	i2___wmul@multiplicand,c
  9089  002A06  CFF3 F022          	movff	prodl,i2___wmul@product
  9090  002A0A  CFF4 F023          	movff	prodh,i2___wmul@product+1
  9091  002A0E  501E               	movf	i2___wmul@multiplier,w,c
  9092  002A10  0221               	mulwf	i2___wmul@multiplicand+1,c
  9093  002A12  50F3               	movf	prodl,w,c
  9094  002A14  2623               	addwf	i2___wmul@product+1,f,c
  9095  002A16  501F               	movf	i2___wmul@multiplier+1,w,c
  9096  002A18  0220               	mulwf	i2___wmul@multiplicand,c
  9097  002A1A  50F3               	movf	prodl,w,c
  9098  002A1C  2623               	addwf	i2___wmul@product+1,f,c
  9099  002A1E  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  9100  002A22  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  9101  002A26  0012               	return	
  9102  002A28                     __end_ofi2___wmul:
  9103                           	opt stack 0
  9104                           pclatu	equ	0xFFB
  9105                           pclath	equ	0xFFA
  9106                           tblptru	equ	0xFF8
  9107                           tblptrh	equ	0xFF7
  9108                           tblptrl	equ	0xFF6
  9109                           tablat	equ	0xFF5
  9110                           prodh	equ	0xFF4
  9111                           prodl	equ	0xFF3
  9112                           intcon	equ	0xFF2
  9113                           intcon2	equ	0xFF1
  9114                           intcon3	equ	0xFF0
  9115                           postinc0	equ	0xFEE
  9116                           fsr0h	equ	0xFEA
  9117                           fsr0l	equ	0xFE9
  9118                           wreg	equ	0xFE8
  9119                           postdec1	equ	0xFE5
  9120                           fsr1h	equ	0xFE2
  9121                           fsr1l	equ	0xFE1
  9122                           bsr	equ	0xFE0
  9123                           indf2	equ	0xFDF
  9124                           postinc2	equ	0xFDE
  9125                           postdec2	equ	0xFDD
  9126                           fsr2h	equ	0xFDA
  9127                           fsr2l	equ	0xFD9
  9128                           status	equ	0xFD8
  9129                           
  9130 ;; *************** function i2___awdiv *****************
  9131 ;; Defined at:
  9132 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  dividend        2   35[COMRAM] int 
  9135 ;;  divisor         2   37[COMRAM] int 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  __awdiv         2    2[BANK0 ] int 
  9138 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  9139 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  2   35[COMRAM] int 
  9142 ;; Registers used:
  9143 ;;		wreg, status,2, status,0
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9149 ;;      Params:         4       0       0       0
  9150 ;;      Locals:         0       4       0       0
  9151 ;;      Temps:          0       0       0       0
  9152 ;;      Totals:         4       4       0       0
  9153 ;;Total ram usage:        8 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_ISR_Alta
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text21
  9163  0027E4                     __ptext21:
  9164                           	opt stack 0
  9165  0027E4                     i2___awdiv:
  9166                           	opt stack 24
  9167                           
  9168                           ;incstack = 0
  9169  0027E4  0E00               	movlw	0
  9170  0027E6  0100               	movlb	0	; () banked
  9171  0027E8  6FB2               	movwf	i2___awdiv@sign& (0+255),b
  9172                           
  9173                           ; BSR set to: 0
  9174  0027EA  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9175  0027EC  D007               	goto	i2l4876
  9176                           
  9177                           ; BSR set to: 0
  9178  0027EE  6C26               	negf	i2___awdiv@divisor,c
  9179  0027F0  1E27               	comf	i2___awdiv@divisor+1,f,c
  9180  0027F2  B0D8               	btfsc	status,0,c
  9181  0027F4  2A27               	incf	i2___awdiv@divisor+1,f,c
  9182                           
  9183                           ; BSR set to: 0
  9184  0027F6  0E01               	movlw	1
  9185  0027F8  0100               	movlb	0	; () banked
  9186  0027FA  6FB2               	movwf	i2___awdiv@sign& (0+255),b
  9187  0027FC                     i2l4876:
  9188                           
  9189                           ; BSR set to: 0
  9190  0027FC  AE25               	btfss	i2___awdiv@dividend+1,7,c
  9191  0027FE  D007               	goto	i2l4882
  9192                           
  9193                           ; BSR set to: 0
  9194  002800  6C24               	negf	i2___awdiv@dividend,c
  9195  002802  1E25               	comf	i2___awdiv@dividend+1,f,c
  9196  002804  B0D8               	btfsc	status,0,c
  9197  002806  2A25               	incf	i2___awdiv@dividend+1,f,c
  9198                           
  9199                           ; BSR set to: 0
  9200  002808  0E01               	movlw	1
  9201  00280A  0100               	movlb	0	; () banked
  9202  00280C  1BB2               	xorwf	i2___awdiv@sign& (0+255),f,b
  9203  00280E                     i2l4882:
  9204                           
  9205                           ; BSR set to: 0
  9206  00280E  0E00               	movlw	0
  9207  002810  0100               	movlb	0	; () banked
  9208  002812  6FB4               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9209  002814  0E00               	movlw	0
  9210  002816  6FB3               	movwf	i2___awdiv@quotient& (0+255),b
  9211                           
  9212                           ; BSR set to: 0
  9213  002818  5026               	movf	i2___awdiv@divisor,w,c
  9214  00281A  1027               	iorwf	i2___awdiv@divisor+1,w,c
  9215  00281C  B4D8               	btfsc	status,2,c
  9216  00281E  D021               	goto	i2l4904
  9217                           
  9218                           ; BSR set to: 0
  9219  002820  0E01               	movlw	1
  9220  002822  0100               	movlb	0	; () banked
  9221  002824  6FB1               	movwf	i2___awdiv@counter& (0+255),b
  9222  002826  D005               	goto	i2l4890
  9223  002828                     i2l4888:
  9224                           
  9225                           ; BSR set to: 0
  9226  002828  90D8               	bcf	status,0,c
  9227  00282A  3626               	rlcf	i2___awdiv@divisor,f,c
  9228  00282C  3627               	rlcf	i2___awdiv@divisor+1,f,c
  9229  00282E  0100               	movlb	0	; () banked
  9230  002830  2BB1               	incf	i2___awdiv@counter& (0+255),f,b
  9231  002832                     i2l4890:
  9232                           
  9233                           ; BSR set to: 0
  9234  002832  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9235  002834  D7F9               	goto	i2l4888
  9236  002836                     i2l4892:
  9237                           
  9238                           ; BSR set to: 0
  9239  002836  0100               	movlb	0	; () banked
  9240  002838  90D8               	bcf	status,0,c
  9241  00283A  37B3               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9242  00283C  37B4               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9243                           
  9244                           ; BSR set to: 0
  9245  00283E  5026               	movf	i2___awdiv@divisor,w,c
  9246  002840  5C24               	subwf	i2___awdiv@dividend,w,c
  9247  002842  5027               	movf	i2___awdiv@divisor+1,w,c
  9248  002844  5825               	subwfb	i2___awdiv@dividend+1,w,c
  9249  002846  A0D8               	btfss	status,0,c
  9250  002848  D006               	goto	i2l4900
  9251                           
  9252                           ; BSR set to: 0
  9253  00284A  5026               	movf	i2___awdiv@divisor,w,c
  9254  00284C  5E24               	subwf	i2___awdiv@dividend,f,c
  9255  00284E  5027               	movf	i2___awdiv@divisor+1,w,c
  9256  002850  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  9257                           
  9258                           ; BSR set to: 0
  9259  002852  0100               	movlb	0	; () banked
  9260  002854  81B3               	bsf	i2___awdiv@quotient& (0+255),0,b
  9261  002856                     i2l4900:
  9262                           
  9263                           ; BSR set to: 0
  9264  002856  90D8               	bcf	status,0,c
  9265  002858  3227               	rrcf	i2___awdiv@divisor+1,f,c
  9266  00285A  3226               	rrcf	i2___awdiv@divisor,f,c
  9267                           
  9268                           ; BSR set to: 0
  9269  00285C  0100               	movlb	0	; () banked
  9270  00285E  2FB1               	decfsz	i2___awdiv@counter& (0+255),f,b
  9271  002860  D7EA               	goto	i2l4892
  9272  002862                     i2l4904:
  9273                           
  9274                           ; BSR set to: 0
  9275  002862  0100               	movlb	0	; () banked
  9276  002864  51B2               	movf	i2___awdiv@sign& (0+255),w,b
  9277  002866  0100               	movlb	0	; () banked
  9278  002868  B4D8               	btfsc	status,2,c
  9279  00286A  D005               	goto	i2l4908
  9280                           
  9281                           ; BSR set to: 0
  9282  00286C  0100               	movlb	0	; () banked
  9283  00286E  6DB3               	negf	i2___awdiv@quotient& (0+255),b
  9284  002870  1FB4               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9285  002872  B0D8               	btfsc	status,0,c
  9286  002874  2BB4               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9287  002876                     i2l4908:
  9288                           
  9289                           ; BSR set to: 0
  9290  002876  C0B3  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  9291  00287A  C0B4  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9292  00287E  0012               	return	
  9293  002880                     __end_ofi2___awdiv:
  9294                           	opt stack 0
  9295                           pclatu	equ	0xFFB
  9296                           pclath	equ	0xFFA
  9297                           tblptru	equ	0xFF8
  9298                           tblptrh	equ	0xFF7
  9299                           tblptrl	equ	0xFF6
  9300                           tablat	equ	0xFF5
  9301                           prodh	equ	0xFF4
  9302                           prodl	equ	0xFF3
  9303                           intcon	equ	0xFF2
  9304                           intcon2	equ	0xFF1
  9305                           intcon3	equ	0xFF0
  9306                           postinc0	equ	0xFEE
  9307                           fsr0h	equ	0xFEA
  9308                           fsr0l	equ	0xFE9
  9309                           wreg	equ	0xFE8
  9310                           postdec1	equ	0xFE5
  9311                           fsr1h	equ	0xFE2
  9312                           fsr1l	equ	0xFE1
  9313                           bsr	equ	0xFE0
  9314                           indf2	equ	0xFDF
  9315                           postinc2	equ	0xFDE
  9316                           postdec2	equ	0xFDD
  9317                           fsr2h	equ	0xFDA
  9318                           fsr2l	equ	0xFD9
  9319                           status	equ	0xFD8
  9320                           
  9321 ;; *************** function ___lwdiv *****************
  9322 ;; Defined at:
  9323 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;  dividend        2   29[COMRAM] unsigned int 
  9326 ;;  divisor         2   31[COMRAM] unsigned int 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;  quotient        2   33[COMRAM] unsigned int 
  9329 ;;  counter         1   35[COMRAM] unsigned char 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  2   29[COMRAM] unsigned int 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9339 ;;      Params:         4       0       0       0
  9340 ;;      Locals:         3       0       0       0
  9341 ;;      Temps:          0       0       0       0
  9342 ;;      Totals:         7       0       0       0
  9343 ;;Total ram usage:        7 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		_ISR_Alta
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352                           	psect	text22
  9353  0028F6                     __ptext22:
  9354                           	opt stack 0
  9355  0028F6                     ___lwdiv:
  9356                           	opt stack 24
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;incstack = 0
  9360  0028F6  0E00               	movlw	0
  9361  0028F8  6E23               	movwf	___lwdiv@quotient+1,c
  9362  0028FA  0E00               	movlw	0
  9363  0028FC  6E22               	movwf	___lwdiv@quotient,c
  9364  0028FE  5020               	movf	___lwdiv@divisor,w,c
  9365  002900  1021               	iorwf	___lwdiv@divisor+1,w,c
  9366  002902  B4D8               	btfsc	status,2,c
  9367  002904  D01C               	goto	i2l1171
  9368  002906  0E01               	movlw	1
  9369  002908  6E24               	movwf	___lwdiv@counter,c
  9370  00290A  D004               	goto	i2l3958
  9371  00290C                     i2l3956:
  9372  00290C  90D8               	bcf	status,0,c
  9373  00290E  3620               	rlcf	___lwdiv@divisor,f,c
  9374  002910  3621               	rlcf	___lwdiv@divisor+1,f,c
  9375  002912  2A24               	incf	___lwdiv@counter,f,c
  9376  002914                     i2l3958:
  9377  002914  AE21               	btfss	___lwdiv@divisor+1,7,c
  9378  002916  D7FA               	goto	i2l3956
  9379  002918                     i2l3960:
  9380  002918  90D8               	bcf	status,0,c
  9381  00291A  3622               	rlcf	___lwdiv@quotient,f,c
  9382  00291C  3623               	rlcf	___lwdiv@quotient+1,f,c
  9383  00291E  5020               	movf	___lwdiv@divisor,w,c
  9384  002920  5C1E               	subwf	___lwdiv@dividend,w,c
  9385  002922  5021               	movf	___lwdiv@divisor+1,w,c
  9386  002924  581F               	subwfb	___lwdiv@dividend+1,w,c
  9387  002926  A0D8               	btfss	status,0,c
  9388  002928  D005               	goto	i2l3968
  9389  00292A  5020               	movf	___lwdiv@divisor,w,c
  9390  00292C  5E1E               	subwf	___lwdiv@dividend,f,c
  9391  00292E  5021               	movf	___lwdiv@divisor+1,w,c
  9392  002930  5A1F               	subwfb	___lwdiv@dividend+1,f,c
  9393  002932  8022               	bsf	___lwdiv@quotient,0,c
  9394  002934                     i2l3968:
  9395  002934  90D8               	bcf	status,0,c
  9396  002936  3221               	rrcf	___lwdiv@divisor+1,f,c
  9397  002938  3220               	rrcf	___lwdiv@divisor,f,c
  9398  00293A  2E24               	decfsz	___lwdiv@counter,f,c
  9399  00293C  D7ED               	goto	i2l3960
  9400  00293E                     i2l1171:
  9401  00293E  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  9402  002942  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9403  002946  0012               	return		;funcret
  9404  002948                     __end_of___lwdiv:
  9405                           	opt stack 0
  9406                           pclatu	equ	0xFFB
  9407                           pclath	equ	0xFFA
  9408                           tblptru	equ	0xFF8
  9409                           tblptrh	equ	0xFF7
  9410                           tblptrl	equ	0xFF6
  9411                           tablat	equ	0xFF5
  9412                           prodh	equ	0xFF4
  9413                           prodl	equ	0xFF3
  9414                           intcon	equ	0xFF2
  9415                           intcon2	equ	0xFF1
  9416                           intcon3	equ	0xFF0
  9417                           postinc0	equ	0xFEE
  9418                           fsr0h	equ	0xFEA
  9419                           fsr0l	equ	0xFE9
  9420                           wreg	equ	0xFE8
  9421                           postdec1	equ	0xFE5
  9422                           fsr1h	equ	0xFE2
  9423                           fsr1l	equ	0xFE1
  9424                           bsr	equ	0xFE0
  9425                           indf2	equ	0xFDF
  9426                           postinc2	equ	0xFDE
  9427                           postdec2	equ	0xFDD
  9428                           fsr2h	equ	0xFDA
  9429                           fsr2l	equ	0xFD9
  9430                           status	equ	0xFD8
  9431                           
  9432 ;; *************** function _WriteTimer0 *****************
  9433 ;; Defined at:
  9434 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  timer0          2   29[COMRAM] unsigned int 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;  timer           2   31[COMRAM] struct Timers
  9439 ;; Return value:  Size  Location     Type
  9440 ;;		None               void
  9441 ;; Registers used:
  9442 ;;		None
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9448 ;;      Params:         2       0       0       0
  9449 ;;      Locals:         2       0       0       0
  9450 ;;      Temps:          0       0       0       0
  9451 ;;      Totals:         4       0       0       0
  9452 ;;Total ram usage:        4 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_ISR_Alta
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           	psect	text23
  9462  002A78                     __ptext23:
  9463                           	opt stack 0
  9464  002A78                     _WriteTimer0:
  9465                           	opt stack 24
  9466                           
  9467                           ;incstack = 0
  9468  002A78  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9469  002A7C  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9470  002A80  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9471  002A84  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9472  002A88  0012               	return		;funcret
  9473  002A8A                     __end_of_WriteTimer0:
  9474                           	opt stack 0
  9475  0000                     pclatu	equ	0xFFB
  9476                           pclath	equ	0xFFA
  9477                           tblptru	equ	0xFF8
  9478                           tblptrh	equ	0xFF7
  9479                           tblptrl	equ	0xFF6
  9480                           tablat	equ	0xFF5
  9481                           prodh	equ	0xFF4
  9482                           prodl	equ	0xFF3
  9483                           intcon	equ	0xFF2
  9484                           intcon2	equ	0xFF1
  9485                           intcon3	equ	0xFF0
  9486                           postinc0	equ	0xFEE
  9487                           fsr0h	equ	0xFEA
  9488                           fsr0l	equ	0xFE9
  9489                           wreg	equ	0xFE8
  9490                           postdec1	equ	0xFE5
  9491                           fsr1h	equ	0xFE2
  9492                           fsr1l	equ	0xFE1
  9493                           bsr	equ	0xFE0
  9494                           indf2	equ	0xFDF
  9495                           postinc2	equ	0xFDE
  9496                           postdec2	equ	0xFDD
  9497                           fsr2h	equ	0xFDA
  9498                           fsr2l	equ	0xFD9
  9499                           status	equ	0xFD8
  9500                           pclatu	equ	0xFFB
  9501                           pclath	equ	0xFFA
  9502                           tblptru	equ	0xFF8
  9503                           tblptrh	equ	0xFF7
  9504                           tblptrl	equ	0xFF6
  9505                           tablat	equ	0xFF5
  9506                           prodh	equ	0xFF4
  9507                           prodl	equ	0xFF3
  9508                           intcon	equ	0xFF2
  9509                           intcon2	equ	0xFF1
  9510                           intcon3	equ	0xFF0
  9511                           postinc0	equ	0xFEE
  9512                           fsr0h	equ	0xFEA
  9513                           fsr0l	equ	0xFE9
  9514                           wreg	equ	0xFE8
  9515                           postdec1	equ	0xFE5
  9516                           fsr1h	equ	0xFE2
  9517                           fsr1l	equ	0xFE1
  9518                           bsr	equ	0xFE0
  9519                           indf2	equ	0xFDF
  9520                           postinc2	equ	0xFDE
  9521                           postdec2	equ	0xFDD
  9522                           fsr2h	equ	0xFDA
  9523                           fsr2l	equ	0xFD9
  9524                           status	equ	0xFD8
  9525                           
  9526                           	psect	rparam
  9527  0000                     pclatu	equ	0xFFB
  9528                           pclath	equ	0xFFA
  9529                           tblptru	equ	0xFF8
  9530                           tblptrh	equ	0xFF7
  9531                           tblptrl	equ	0xFF6
  9532                           tablat	equ	0xFF5
  9533                           prodh	equ	0xFF4
  9534                           prodl	equ	0xFF3
  9535                           intcon	equ	0xFF2
  9536                           intcon2	equ	0xFF1
  9537                           intcon3	equ	0xFF0
  9538                           postinc0	equ	0xFEE
  9539                           fsr0h	equ	0xFEA
  9540                           fsr0l	equ	0xFE9
  9541                           wreg	equ	0xFE8
  9542                           postdec1	equ	0xFE5
  9543                           fsr1h	equ	0xFE2
  9544                           fsr1l	equ	0xFE1
  9545                           bsr	equ	0xFE0
  9546                           indf2	equ	0xFDF
  9547                           postinc2	equ	0xFDE
  9548                           postdec2	equ	0xFDD
  9549                           fsr2h	equ	0xFDA
  9550                           fsr2l	equ	0xFD9
  9551                           status	equ	0xFD8
  9552                           
  9553                           	psect	temp
  9554  00003F                     btemp:
  9555                           	opt stack 0
  9556  00003F                     	ds	1
  9557  0000                     int$flags	set	btemp
  9558                           pclatu	equ	0xFFB
  9559                           pclath	equ	0xFFA
  9560                           tblptru	equ	0xFF8
  9561                           tblptrh	equ	0xFF7
  9562                           tblptrl	equ	0xFF6
  9563                           tablat	equ	0xFF5
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           intcon	equ	0xFF2
  9567                           intcon2	equ	0xFF1
  9568                           intcon3	equ	0xFF0
  9569                           postinc0	equ	0xFEE
  9570                           fsr0h	equ	0xFEA
  9571                           fsr0l	equ	0xFE9
  9572                           wreg	equ	0xFE8
  9573                           postdec1	equ	0xFE5
  9574                           fsr1h	equ	0xFE2
  9575                           fsr1l	equ	0xFE1
  9576                           bsr	equ	0xFE0
  9577                           indf2	equ	0xFDF
  9578                           postinc2	equ	0xFDE
  9579                           postdec2	equ	0xFDD
  9580                           fsr2h	equ	0xFDA
  9581                           fsr2l	equ	0xFD9
  9582                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      62
    BANK0           160     44     134
    BANK1           256     12      12
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> remote_frame_array(BANK0[8]), distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->___aldiv
    _remote_frame_handler->_CANsendMessage
    _delay_ms->___wmul
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _board_initialization->_CANInitialize

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15567
                                              8 BANK1      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___aldiv
                            ___awdiv
                             ___lmul
                             ___wmul
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    3936
                                             42 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3163
                                             26 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     963
                                             32 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     749
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             40 BANK0      4     4      0
                                              0 BANK1      8     3      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     450
                                             26 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     504
                                             26 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                             38 BANK0      6     6      0
                                              0 BANK1      8     0      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1338
                                              4 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                             35 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      C       C       6        4.7%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2C      86       4       83.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      3E       1       66.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0       9        0.0%
DATA                 0      0      D0      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun May 01 21:20:07 2016

           ??_CANisTXwarningON 00CB                              _x 01F1                              _y 01F2  
         __end_of_CANSetFilter 0C4E                   ___awdiv@sign 00D0                             bsr 000FE0  
          ___wmul@multiplicand 00CD                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 0F74  
                          l401 0F7E                            l402 0F88                            l411 116C  
                          l403 0F92                            l500 0792                            l420 1326  
                          l412 1170                            l421 132A                            l413 1268  
                          l510 08A2                            l422 1336                            l414 11F8  
                          l406 10A2                            l511 08AE                            l503 086E  
                          l415 1202                            l407 10A6                            l520 09BA  
                          l504 0872                            l416 120C                            l408 10B2  
                          l521 09BE                            l505 087E                            l417 1216  
                          l530 0ACA                            l522 09CA                            l514 098A  
                          l506 0882                            l450 1AE0                            l531 0AD6  
                          l515 098E                            l507 088E                            l451 1AE4  
                          l540 0BE2                            l532 0ADA                            l516 099A  
                          l508 0892                            l452 1AF0                            l541 0BE6  
                          l533 0AE6                            l525 0AA6                            l517 099E  
                          l509 089E                            l461 1BF8                            l453 1AF4  
                          l381 0ED2                            l542 0BF2                            l526 0AAA  
                          l518 09AA                            l462 1BFC                            l454 1B00  
                          l382 0C64                            l543 0BF6                            l527 0AB6  
                          l519 09AE                            l463 1C08                            l455 1B04  
                          l391 0E1E                            l383 0C68                            l711 1F6E  
                          l544 0C02                            l536 0BC2                            l528 0ABA  
                          l464 1C0C                            l456 1B10                            l376 244A  
                          l392 0E22                            l384 0D60                            l712 1F78  
                          l537 0BC6                            l529 0AC6                            l481 0638  
                          l465 1C18                            l457 1B14                            l377 2454  
                          l393 0E2E                            l385 0CF0                            l713 2002  
                          l538 0BD2                            l482 063C                            l466 1C1C  
                          l458 1B20                            l386 0CFA                            l539 0BD6  
                          l483 0648                            l467 1C28                            l387 0D04  
                          l723 2060                            l492 0752                            l484 064C  
                          l468 1C2C                            l396 1156                            l388 0D0E  
                          l493 0756                            l485 0658                            l469 1C38  
                          l397 0EE8                            l741 238A                            l733 2140  
                          l717 200A                            l709 1F76                            l494 0762  
                          l486 065C                            l574 2A46                            l398 0EEC  
                          l495 0766                            l487 0668                            l399 0FE4  
                          l496 0772                            l488 066C                            l728 20BE  
                          l497 0776                            l489 0678                            l498 0782  
                          l499 0786                            l587 29BE                            l747 2384  
                          l749 2380                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
         __size_of_WriteTimer0 0012                            _msg 0089                            wreg 000FE8  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l3400 0F9C  
                         l5002 1F5A                           l3420 1096                           l3324 0D18  
                         l3502 133A                           l3350 0E32                           l5030 2044  
                         l5022 2026                           l4320 1B6A                           l3344 0E12  
                         l5040 208A                           l5016 2010                           l4314 1B24  
                         l3426 10B6                           l5026 2034                           l5034 2054  
                         l5052 20D8                           l5060 2138                           l4254 2A54  
                         l4406 0378                           l5070 21B0                           l5054 212E  
                         l4424 0432                           l4272 199E                           l4522 0796  
                         l4442 04EC                           l4370 0206                           l4346 1C3C  
                         l4460 05A6                           l3476 1220                           l5068 215A  
                         l4630 0B30                           l4710 24A4                           l4702 2442  
                         l3822 2272                           l3920 26A0                           l4624 0AEA  
                         l4528 07DC                           l4288 1A54                           l4704 2458  
                         l3496 131A                           l3930 26D0                           l3914 268A  
                         l4562 08F8                           l3818 2230                           l4556 08B2  
                         l4388 02BE                           l4708 2460                           l3844 2342  
                         l3828 22AE                           l3926 26BE                           l3942 270E  
                         l3854 2892                           l4590 09CE                           l4494 06C2  
                         l4832 2578                           l3928 26CA                           l4488 067C  
                         l3696 29B0                           l3848 2374                           l3946 2722  
                         l3938 2700                           l3858 28B8                           l4658 0C06  
                         l4844 25C4                           l4860 2640                           l4596 0A14  
                         l4846 25D4                           l4838 2596                           l4864 265C  
                         l4856 262E                           l4848 25DA                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u4110 2A92                           u4120 2A9E  
                         u5110 1C5C                           u5030 1B44                           u3530 0D38  
                         u5115 1C50                           u5035 1B38                           u5300 0468  
                         u5220 02F4                           u5140 0182                           u3540 0D84  
                         u4180 2218                           u3535 0D2C                           u3800 128C  
                         u5305 045C                           u5225 02E8                           u5145 0176  
                         u3545 0D78                           u4186 221A                           u5315 04C8  
                         u5235 0354                           u5155 01E2                           u3555 0DE4  
                         u5340 0522                           u5260 03AE                           u5180 023A  
                         u3660 0FBC                           u3805 1280                           u5510 07B6  
                         u5430 069C                           u3670 1008                           u3815 12EC  
                         u5345 0516                           u5265 03A2                           u5185 022E  
                         u3665 0FB0                           u5515 07AA                           u5435 0690  
                         u5355 0582                           u5275 040E                           u5195 029A  
                         u3675 0FFC                           u4900 191A                           u3685 1068  
                         u3790 1240                           u4905 190E                           u4915 197A  
                         u3795 1234                           u4940 19D0                           u5830 0C26  
                         u5750 0B0A                           u5670 09EE                           u5590 08D2  
                         u4945 19C4                           u6297 29B2                           u5835 0C1A  
                         u5755 0AFE                           u5675 09E2                           u5595 08C6  
                         u4955 1A30            __size_of_CANSetMask 039E                           _main 1F2C  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           _step 0088                           btemp 003F  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0144                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 2A4C                   _status_array 00A8  
              _brake_value_inc 0086           _remote_frame_handler 21BC     __size_of_CANreceiveMessage 050C  
              __end_of___aldiv 266E                          ?_main 0001                __end_of___awdiv 272C  
                        _T0CON 000FD5                ___awdiv@divisor 00CD                          _T1CON 000FCD  
                        _T3CON 000FB1             __size_of_ISR_Bassa 012C                __end_of___lwdiv 2948  
                        i1l428 1672                          i1l703 00F4                          i1l705 00FC  
                        i1l579 2A74                          i2l693 1EF0                ___awdiv@counter 00CF  
                        _TMR0H 000FD7                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR3H 000FB3                          _TMR1L 000FCE                          _TMR3L 000FB2  
            _CANisRxReady$3280 0001                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1F2C                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000            ___lmul@multiplicand 00CF                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 0104  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 01E8           __end_of_CANisRxReady 2A78  
                        tablat 000FF5         _distance_set_counter_1 007E         _distance_set_counter_2 0080  
         __end_of_CANisTxReady 2A4C               __end_ofi2___wmul 2A28                          status 000FD8  
           __size_ofi2___awdiv 009C                 __CFG_PBADEN$ON 000000                __initialization 2948  
                 __end_of_main 21BC  __size_of_board_initialization 00B8               _brake_signal_CAN 0085  
        ?_remote_frame_handler 0001                         ??_main 0108                  __activetblptr 000002  
            _CANisTxReady$3278 00CB                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 00CB                __CFG_BBSIZ$1024 000000  
                       i1l4110 0066                         i1l4122 00B4                         i1l4130 00E8  
                       i1l4118 0096                         i1l4134 00EC                         i1l3600 15FE  
                       i1l3610 166C                         i1l3604 161C                         i1l3608 163A  
                       i2l1171 293E                         i1l3670 18B0                         i1l3662 1878  
                       i1l3654 1840                         i1l3646 17D2                         i1l3672 18E2  
                       i1l3592 15C2                         i1l3584 1552                         i1l3666 1894  
                       i1l3658 185C                         i1l3596 15E0                         i2l4900 2856  
                       i2l3960 2918                         i2l4904 2862                         i2l4930 1E10  
                       i2l3956 290C                         i2l4908 2876                         i2l3958 2914  
                       i2l4926 1E02                         i2l3968 2934                         i2l4952 1E74  
                       i2l4928 1E0E                         i2l4890 2832                         i2l4882 280E  
                       i2l4938 1E24                         i2l4892 2836                         i2l4876 27FC  
                       i2l4980 1EE4                         i2l4956 1E7E                         i2l4966 1E94  
                       i2l4958 1E80                         i2l4888 2828                         i2l4984 1EEE  
                       _RXB0D0 000F66                         _RXB0D1 000F67                         _RXB0D2 000F68  
                       _RXB0D3 000F69                         _RXB0D4 000F6A                         _RXB1D0 000F56  
                       _RXB0D5 000F6B                         _RXB1D1 000F57                         _RXB0D6 000F6C  
                       _RXB1D2 000F58                         _RXB0D7 000F6D                         _RXB1D3 000F59  
                       _RXB1D4 000F5A                         _RXB1D5 000F5B                         _RXB1D6 000F5C  
                       _RXB1D7 000F5D                         _TXB0D0 000F46                         _TXB0D1 000F47  
                       _TXB0D2 000F48                         _TXB0D3 000F49                         _TXB1D0 000F36  
                       _TXB0D4 000F4A                         _TXB1D1 000F37                         _TXB0D5 000F4B  
                       _TXB1D2 000F38                         _TXB0D6 000F4C                         _TXB1D3 000F39  
                       _TXB0D7 000F4D                         _TXB2D0 000F26                         _TXB1D4 000F3A  
                       _TXB2D1 000F27                         _TXB1D5 000F3B                         _TXB2D2 000F28  
                       _TXB1D6 000F3C                         _TXB2D3 000F29                         _TXB1D7 000F3D  
                       _TXB2D4 000F2A                         _TXB2D5 000F2B                         _TXB2D6 000F2C  
                       _TXB2D7 000F2D             CANsendMessage@data 00CF             CANsendMessage@tamp 00D7  
            __end_of_ISR_Bassa 0144               __end_of_delay_ms 29CC          __size_of_CANSetFilter 0B06  
           _distance_set_value 0082                 __CFG_XINST$OFF 000000                         ___lmul 2880  
                    ??___aldiv 00D7                         ___wmul 29CC                      ??___awdiv 00CF  
               __CFG_STVREN$ON 000000                      ??___lwdiv 0022                   ??_CANSetMask 00D0  
                       clear_0 294E                         clear_1 295E               ___awdiv@quotient 00D1  
               i2___awdiv@sign 00B2                __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 2880  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                _home_position 0087                   _CANSetFilter 0148                     __accesstop 0060  
      __end_of__initialization 2984             __end_of_CANSetMask 1C84                  ___rparam_used 000001  
    __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001                      ?_ISR_Alta 0001  
                 __pidataBANK0 2AA2         ??_remote_frame_handler 00DB                   _ENC1_measure 01E8  
        CANSetFilter@numBuffer 00D4                      ?i2___wmul 001E      __size_of_CANisTXwarningON 000C  
                 _ENC2_measure 01E9          __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024  
     __end_of_CANOperationMode 2A62                     __pbssBANK0 0060        __size_of_CANsendMessage 078C  
                   ??_ISR_Alta 00B5                        ?___lmul 00CB                        ?___wmul 00CB  
                   _gap_time_1 0038                     _gap_time_2 003A               WriteTimer0@timer 0020  
                ??_WriteTimer0 0020                 ___lmul@product 00D3                   _CANisRxReady 2A62  
                      _CANSTAT 000F6E                   _CANisTxReady 2A28                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72                     ??i2___wmul 0022  
                _int_counter_1 0064                  _int_counter_2 0068         __size_of_CANInitialize 01C6  
        _distance_reached_flag 01EE                      ?_delay_ms 00D1                        _RXB0DLC 000F65  
                      _RXB1DLC 000F55                        _RXB0CON 000F60                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
                   _distance_1 007A                     _distance_2 007C            CANsendMessage@flags 00D2  
                   _count_flag 01ED                        __Hparam 0000                        __Lparam 0000  
             delay_ms@value_ms 00D1                        ___aldiv 2554                        ___awdiv 266E  
              __size_of___lmul 0076                __size_of___wmul 0036                        ___lwdiv 28F6  
         CANInitialize@propSeg 0105                        __pcinit 2948                        __ramtop 0300  
                      __ptext0 1F2C                        __ptext1 21BC                        __ptext2 0C4E  
                      __ptext3 2A28                        __ptext4 2992                        __ptext5 29CC  
                      __ptext6 272C                        __ptext7 238E                        __ptext8 18E6  
                      __ptext9 0148                      _T0CONbits 000FD5                      _T1CONbits 000FCD  
                    _T3CONbits 000FB1               ___aldiv@dividend 0100            __end_of_WriteTimer0 2A8A  
                   ??_delay_ms 00D3         CANreceiveMessage@error 000B   __end_of_board_initialization 27E4  
               __pintcode_body 1C84           end_of_initialization 2984                  _Analogic_Mode 0084  
                __Lmediumconst 0000                        int_func 1C84            i2___wmul@multiplier 001E  
             _CANisRXwarningON 2A96                  _CANInitialize 238E               ___aldiv@quotient 00D9  
                    _ISR_Bassa 0018                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                      _PORTAbits 000F80  
               CANSetMask@mask 00CB                      _PORTCbits 000F82                 CANSetMask@tamp 00D5  
               CANSetMask@type 00CF               _CANisTXwarningON 2A8A                      i2___awdiv 27E4  
      _clock_counter_reference 0078                 _CANsendMessage 0C4E             _remote_frame_array 00DE  
             CANInitialize@BRP 0103               CANInitialize@SJW 0102                 ?_CANInitialize 0100  
           i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001                 __end_of___lmul 28F6  
            __size_of_ISR_Alta 1F24                 __end_of___wmul 2A02                    _WriteTimer0 2A78  
             i2___wmul@product 0022            start_initialization 2948             i2___awdiv@quotient 00B3  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 00D4                     ?i2___awdiv 0024  
       __end_of_CANsendMessage 13DA              ?_CANOperationMode 0001             ??_CANOperationMode 00CB  
   CANInitialize@FilterConfig1 0106     CANInitialize@FilterConfig2 0107              _distance_set_flag 01EF  
                     ??___lmul 00D3           _board_initialization 272C                       ??___wmul 00CF  
                  __pdataBANK0 00DD               __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 01D2  
           _brake_value_degree 003C         CANInitialize@phaseSeg1 0100         CANInitialize@phaseSeg2 0101  
                  __pbssCOMRAM 0028                  __pcstackBANK0 00B1                  __pcstackBANK1 0100  
                  _data_debug1 0028                    _BRGCON2bits 000F71                    _BRGCON3bits 000F72  
            __size_of_delay_ms 003A                ?_CANsendMessage 00CB                ??_CANInitialize 00D9  
           CANSetFilter@filter 00CB               ___lwdiv@dividend 001E          ?_board_initialization 0001  
                  ??_ISR_Bassa 000D                      __pintcode 0008                       ?___aldiv 0100  
                     ?___awdiv 00CB                       ?___lwdiv 001E                    __pintcodelo 0018  
            WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2AA2                    _brake_value 00B0  
                  _COMSTATbits 000F74               ___lwdiv@quotient 0022                    ??i2___awdiv 0028  
              ___aldiv@divisor 0104          CANreceiveMessage@tamp 000C                ___aldiv@counter 00D7  
               ___wmul@product 00CF                       _IPR1bits 000F9F                       _IPR2bits 000FA2  
 _delay_quartz_frequency_value 00DD                       _PIE1bits 000F9D                       _IPR3bits 000FA5  
                     _PIE2bits 000FA0                       _PIE3bits 000FA3       __end_of_CANisTXwarningON 2A96  
                     i1u401_20 171A                       i1u401_26 171C                       i1u402_20 1744  
                     i1u410_25 18BC                       i1u402_26 1746                       i1u404_25 1758  
                     i1u390_20 1492                       i1u390_26 1494                       i1u391_20 14C0  
                     i1u391_26 14C2                       i1u393_25 14D6                       i1u399_25 1646  
                     i2u601_40 1CC2                       _PIR1bits 000F9E                       i2u601_46 1CC4  
                     _PIR2bits 000FA1                       _PIR3bits 000FA4                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                      _timer_off 0030  
                     _RXM0SIDH 000F18                       _RXM0SIDL 000F19                       _RXM1SIDH 000F1C  
                     _RXM1SIDL 000F1D                       _RXERRCNT 000F75                       _TXERRCNT 000F76  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0              ___wmul@multiplier 00CB  
                     i2___wmul 2A02              i2___awdiv@divisor 0026              i2___awdiv@counter 00B1  
                ?_CANSetFilter 00CB              ___lmul@multiplier 00CB                    _INTCON2bits 000FF1  
                  _INTCON3bits 000FF0                      copy_data0 2978                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00DD  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52               __size_of___aldiv 011A  
                   _CANSetMask 18E6               __size_of___awdiv 00BE          i2___wmul@multiplicand 0020  
             __size_of___lwdiv 0052                _remote_frame_id 006C                       _Tx_retry 01EC  
                 ?_WriteTimer0 001E                   _RXF0SIDLbits 000F01                       _delay_ms 2992  
              ___lwdiv@divisor 0020                   _RXF1SIDLbits 000F05                  _TMR1_overflow 01EA  
              ___lwdiv@counter 0024                 ??_CANSetFilter 00D0                       __ptext10 2A4C  
                     __ptext11 2880                       __ptext20 2A02                       __ptext12 266E  
                     __ptext21 27E4                       __ptext13 2554                       __ptext22 28F6  
                     __ptext14 2A8A                       __ptext23 2A78                       __ptext15 2A96  
                     __ptext17 13DA                       __ptext18 2A62                   _RXF2SIDLbits 000F09  
                 _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15  
     CANsendMessage@dataLength 00D1                   _remote_frame 01F0                  _TMR3_overflow 01EB  
                __size_of_main 0290           CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42  
                 _TXB1SIDLbits 000F32                       _timer_on 0034                   _TXB2SIDLbits 000F22  
                     int$flags 003F      __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001  
                ?_CANisTxReady 0001                    _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55  
                 _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60                    _RXB1CONbits 000F50  
            _CANreceiveMessage 13DA                   _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2  
             ??_CANsendMessage 00D3                  _wheel_speed_1 0070                  _wheel_speed_2 0074  
           ?_CANreceiveMessage 0001       CANsendMessage@identifier 00CB   __end_of_remote_frame_handler 238E  
                     intlevel1 0000                       intlevel2 0000               CANSetFilter@tamp 00D5  
             CANSetFilter@type 00CF            ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45  
                  _TXB1DLCbits 000F35                    _TXB0CONbits 000F40                    _TXB2DLCbits 000F25  
                  _TXB1CONbits 000F30                    _TXB2CONbits 000F20           CANOperationMode@mode 00CB  
               ??_CANisRxReady 0001                    ?_CANSetMask 00CB                 ??_CANisTxReady 00CB  
               _distance_array 0098      __end_of_CANreceiveMessage 18E6              ?_CANisRXwarningON 0001  
                  _speed_array 00A0                   ___aldiv@sign 00D8             ??_CANisRXwarningON 00CB  
        _distance_actual_value 0060          __end_of_CANInitialize 2554              ?_CANisTXwarningON 0001  
