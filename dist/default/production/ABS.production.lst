

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Jan 31 19:32:31 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  00290B                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _data_array_1
    49  00290B  00                 	db	0
    50  00290C  00                 	db	0
    51  00290D  00                 	db	0
    52  00290E  00                 	db	0
    53  00290F  00                 	db	0
    54  002910  00                 	db	0
    55  002911  01                 	db	1
    56  002912  05                 	db	5
    57                           
    58                           	psect	idataBANK0
    59  002902                     __pidataBANK0:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _delay_quartz_frequency_value
    63  002902  14                 	db	20
    64                           
    65                           ;initializer for _status_array
    66  002903  00                 	db	0
    67  002904  00                 	db	0
    68  002905  00                 	db	0
    69  002906  00                 	db	0
    70  002907  00                 	db	0
    71  002908  00                 	db	0
    72  002909  00                 	db	0
    73  00290A  01                 	db	1
    74  0000                     _RXB1CON	set	3920
    75  0000                     _RXB1CONbits	set	3920
    76  0000                     _RXB1D0	set	3926
    77  0000                     _RXB1D1	set	3927
    78  0000                     _RXB1D2	set	3928
    79  0000                     _RXB1D3	set	3929
    80  0000                     _RXB1D4	set	3930
    81  0000                     _RXB1D5	set	3931
    82  0000                     _RXB1D6	set	3932
    83  0000                     _RXB1D7	set	3933
    84  0000                     _RXB1DLC	set	3925
    85  0000                     _RXB1DLCbits	set	3925
    86  0000                     _RXB1EIDH	set	3923
    87  0000                     _RXB1EIDL	set	3924
    88  0000                     _RXB1SIDH	set	3921
    89  0000                     _RXB1SIDL	set	3922
    90  0000                     _RXB1SIDLbits	set	3922
    91  0000                     _RXF0EIDH	set	3842
    92  0000                     _RXF0EIDL	set	3843
    93  0000                     _RXF0SIDH	set	3840
    94  0000                     _RXF0SIDL	set	3841
    95  0000                     _RXF0SIDLbits	set	3841
    96  0000                     _RXF1EIDH	set	3846
    97  0000                     _RXF1EIDL	set	3847
    98  0000                     _RXF1SIDH	set	3844
    99  0000                     _RXF1SIDL	set	3845
   100  0000                     _RXF1SIDLbits	set	3845
   101  0000                     _RXF2EIDH	set	3850
   102  0000                     _RXF2EIDL	set	3851
   103  0000                     _RXF2SIDH	set	3848
   104  0000                     _RXF2SIDL	set	3849
   105  0000                     _RXF2SIDLbits	set	3849
   106  0000                     _RXF3EIDH	set	3854
   107  0000                     _RXF3EIDL	set	3855
   108  0000                     _RXF3SIDH	set	3852
   109  0000                     _RXF3SIDL	set	3853
   110  0000                     _RXF3SIDLbits	set	3853
   111  0000                     _RXF4EIDH	set	3858
   112  0000                     _RXF4EIDL	set	3859
   113  0000                     _RXF4SIDH	set	3856
   114  0000                     _RXF4SIDL	set	3857
   115  0000                     _RXF4SIDLbits	set	3857
   116  0000                     _RXF5EIDH	set	3862
   117  0000                     _RXF5EIDL	set	3863
   118  0000                     _RXF5SIDH	set	3860
   119  0000                     _RXF5SIDL	set	3861
   120  0000                     _RXF5SIDLbits	set	3861
   121  0000                     _RXM0EIDH	set	3866
   122  0000                     _RXM0EIDL	set	3867
   123  0000                     _RXM0SIDH	set	3864
   124  0000                     _RXM0SIDL	set	3865
   125  0000                     _RXM0SIDLbits	set	3865
   126  0000                     _RXM1EIDH	set	3870
   127  0000                     _RXM1EIDL	set	3871
   128  0000                     _RXM1SIDH	set	3868
   129  0000                     _RXM1SIDL	set	3869
   130  0000                     _RXM1SIDLbits	set	3869
   131  0000                     _TXB0CONbits	set	3904
   132  0000                     _TXB0D0	set	3910
   133  0000                     _TXB0D1	set	3911
   134  0000                     _TXB0D2	set	3912
   135  0000                     _TXB0D3	set	3913
   136  0000                     _TXB0D4	set	3914
   137  0000                     _TXB0D5	set	3915
   138  0000                     _TXB0D6	set	3916
   139  0000                     _TXB0D7	set	3917
   140  0000                     _TXB0DLC	set	3909
   141  0000                     _TXB0DLCbits	set	3909
   142  0000                     _TXB0EIDH	set	3907
   143  0000                     _TXB0EIDL	set	3908
   144  0000                     _TXB0SIDH	set	3905
   145  0000                     _TXB0SIDL	set	3906
   146  0000                     _TXB0SIDLbits	set	3906
   147  0000                     _TXB1CONbits	set	3888
   148  0000                     _TXB1D0	set	3894
   149  0000                     _TXB1D1	set	3895
   150  0000                     _TXB1D2	set	3896
   151  0000                     _TXB1D3	set	3897
   152  0000                     _TXB1D4	set	3898
   153  0000                     _TXB1D5	set	3899
   154  0000                     _TXB1D6	set	3900
   155  0000                     _TXB1D7	set	3901
   156  0000                     _TXB1DLC	set	3893
   157  0000                     _TXB1DLCbits	set	3893
   158  0000                     _TXB1EIDH	set	3891
   159  0000                     _TXB1EIDL	set	3892
   160  0000                     _TXB1SIDH	set	3889
   161  0000                     _TXB1SIDL	set	3890
   162  0000                     _TXB1SIDLbits	set	3890
   163  0000                     _TXB2CONbits	set	3872
   164  0000                     _TXB2D0	set	3878
   165  0000                     _TXB2D1	set	3879
   166  0000                     _TXB2D2	set	3880
   167  0000                     _TXB2D3	set	3881
   168  0000                     _TXB2D4	set	3882
   169  0000                     _TXB2D5	set	3883
   170  0000                     _TXB2D6	set	3884
   171  0000                     _TXB2D7	set	3885
   172  0000                     _TXB2DLC	set	3877
   173  0000                     _TXB2DLCbits	set	3877
   174  0000                     _TXB2EIDH	set	3875
   175  0000                     _TXB2EIDL	set	3876
   176  0000                     _TXB2SIDH	set	3873
   177  0000                     _TXB2SIDL	set	3874
   178  0000                     _TXB2SIDLbits	set	3874
   179  0000                     _ADCON0bits	set	4034
   180  0000                     _ADCON1	set	4033
   181  0000                     _ADCON2bits	set	4032
   182  0000                     _ADRESH	set	4036
   183  0000                     _BRGCON1	set	3952
   184  0000                     _BRGCON2	set	3953
   185  0000                     _BRGCON2bits	set	3953
   186  0000                     _BRGCON3	set	3954
   187  0000                     _BRGCON3bits	set	3954
   188  0000                     _CANCON	set	3951
   189  0000                     _CANCONbits	set	3951
   190  0000                     _CANSTAT	set	3950
   191  0000                     _COMSTATbits	set	3956
   192  0000                     _INTCON2bits	set	4081
   193  0000                     _INTCON3bits	set	4080
   194  0000                     _INTCONbits	set	4082
   195  0000                     _IPR3bits	set	4005
   196  0000                     _LATA	set	3977
   197  0000                     _LATB	set	3978
   198  0000                     _LATC	set	3979
   199  0000                     _LATD	set	3980
   200  0000                     _LATE	set	3981
   201  0000                     _PIE3bits	set	4003
   202  0000                     _PIR2bits	set	4001
   203  0000                     _PIR3bits	set	4004
   204  0000                     _PORTAbits	set	3968
   205  0000                     _PORTCbits	set	3970
   206  0000                     _RCONbits	set	4048
   207  0000                     _RXB0CON	set	3936
   208  0000                     _RXB0CONbits	set	3936
   209  0000                     _RXB0D0	set	3942
   210  0000                     _RXB0D1	set	3943
   211  0000                     _RXB0D2	set	3944
   212  0000                     _RXB0D3	set	3945
   213  0000                     _RXB0D4	set	3946
   214  0000                     _RXB0D5	set	3947
   215  0000                     _RXB0D6	set	3948
   216  0000                     _RXB0D7	set	3949
   217  0000                     _RXB0DLC	set	3941
   218  0000                     _RXB0DLCbits	set	3941
   219  0000                     _RXB0EIDH	set	3939
   220  0000                     _RXB0EIDL	set	3940
   221  0000                     _RXB0SIDH	set	3937
   222  0000                     _RXB0SIDL	set	3938
   223  0000                     _RXB0SIDLbits	set	3938
   224  0000                     _RXERRCNT	set	3957
   225  0000                     _T0CON	set	4053
   226  0000                     _T0CONbits	set	4053
   227  0000                     _T1CON	set	4045
   228  0000                     _T1CONbits	set	4045
   229  0000                     _T3CON	set	4017
   230  0000                     _T3CONbits	set	4017
   231  0000                     _TMR0H	set	4055
   232  0000                     _TMR0L	set	4054
   233  0000                     _TMR1H	set	4047
   234  0000                     _TMR1L	set	4046
   235  0000                     _TMR3H	set	4019
   236  0000                     _TMR3L	set	4018
   237  0000                     _TRISA	set	3986
   238  0000                     _TRISB	set	3987
   239  0000                     _TRISC	set	3988
   240  0000                     _TRISD	set	3989
   241  0000                     _TRISE	set	3990
   242  0000                     _TXERRCNT	set	3958
   243                           
   244                           ; #config settings
   245  0000                     
   246                           	psect	cinit
   247  00274C                     __pcinit:
   248                           	opt stack 0
   249  00274C                     start_initialization:
   250                           	opt stack 0
   251  00274C                     __initialization:
   252                           	opt stack 0
   253                           
   254                           ; Clear objects allocated to BANK0 (60 bytes)
   255  00274C  EE00  F060         	lfsr	0,__pbssBANK0
   256  002750  0E3C               	movlw	60
   257  002752                     clear_0:
   258  002752  6AEE               	clrf	postinc0,c
   259  002754  06E8               	decf	wreg,f,c
   260  002756  E1FD               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   263  002758  6A41               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   264                           
   265                           ; Clear objects allocated to COMRAM (17 bytes)
   266  00275A  EE00  F028         	lfsr	0,__pbssCOMRAM
   267  00275E  0E11               	movlw	17
   268  002760                     clear_1:
   269  002760  6AEE               	clrf	postinc0,c
   270  002762  06E8               	decf	wreg,f,c
   271  002764  E1FD               	bnz	clear_1
   272                           
   273                           ; Initialize objects allocated to BANK0 (9 bytes)
   274                           ; load TBLPTR registers with __pidataBANK0
   275  002766  0E02               	movlw	low __pidataBANK0
   276  002768  6EF6               	movwf	tblptrl,c
   277  00276A  0E29               	movlw	high __pidataBANK0
   278  00276C  6EF7               	movwf	tblptrh,c
   279  00276E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   280  002770  6EF8               	movwf	tblptru,c
   281  002772  EE00  F0D1         	lfsr	0,__pdataBANK0
   282  002776  EE10 F009          	lfsr	1,9
   283  00277A                     copy_data0:
   284  00277A  0009               	tblrd		*+
   285  00277C  CFF5 FFEE          	movff	tablat,postinc0
   286  002780  50E5               	movf	postdec1,w,c
   287  002782  50E1               	movf	fsr1l,w,c
   288  002784  E1FA               	bnz	copy_data0
   289                           
   290                           ; Initialize objects allocated to COMRAM (8 bytes)
   291                           ; load TBLPTR registers with __pidataCOMRAM
   292  002786  0E0B               	movlw	low __pidataCOMRAM
   293  002788  6EF6               	movwf	tblptrl,c
   294  00278A  0E29               	movlw	high __pidataCOMRAM
   295  00278C  6EF7               	movwf	tblptrh,c
   296  00278E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   297  002790  6EF8               	movwf	tblptru,c
   298  002792  EE00  F039         	lfsr	0,__pdataCOMRAM
   299  002796  EE10 F008          	lfsr	1,8
   300  00279A                     copy_data1:
   301  00279A  0009               	tblrd		*+
   302  00279C  CFF5 FFEE          	movff	tablat,postinc0
   303  0027A0  50E5               	movf	postdec1,w,c
   304  0027A2  50E1               	movf	fsr1l,w,c
   305  0027A4  E1FA               	bnz	copy_data1
   306  0027A6                     end_of_initialization:
   307                           	opt stack 0
   308  0027A6                     __end_of__initialization:
   309                           	opt stack 0
   310  0027A6  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   311  0027A8  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   312  0027AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   313  0027AC  6EF8               	movwf	tblptru,c
   314  0027AE  0100               	movlb	0
   315  0027B0  EF44  F011         	goto	_main	;jump to C main() function
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	bitbssCOMRAM
   326  000208                     __pbitbssCOMRAM:
   327                           	opt stack 0
   328  000208                     _ENC1_measure:
   329                           	opt stack 0
   330  000208                     	ds	1
   331  000209                     _ENC2_measure:
   332                           	opt stack 0
   333  000209                     	ds	1
   334  00020A                     _Tx_retry:
   335                           	opt stack 0
   336  00020A                     	ds	1
   337  00020B                     _count_flag:
   338                           	opt stack 0
   339  00020B                     	ds	1
   340  00020C                     _remote_frame:
   341                           	opt stack 0
   342  00020C                     	ds	1
   343  00020D                     _x:
   344                           	opt stack 0
   345  00020D                     	ds	1
   346  00020E                     _y:
   347                           	opt stack 0
   348  00020E                     	ds	1
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           postdec1	equ	0xFE5
   356                           fsr1l	equ	0xFE1
   357                           
   358                           	psect	bssCOMRAM
   359  000028                     __pbssCOMRAM:
   360                           	opt stack 0
   361  000028                     _gap_time_1:
   362                           	opt stack 0
   363  000028                     	ds	4
   364  00002C                     _gap_time_2:
   365                           	opt stack 0
   366  00002C                     	ds	4
   367  000030                     _timer_off:
   368                           	opt stack 0
   369  000030                     	ds	4
   370  000034                     _timer_on:
   371                           	opt stack 0
   372  000034                     	ds	4
   373  000038                     _brake_value_degree:
   374                           	opt stack 0
   375  000038                     	ds	1
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	dataCOMRAM
   386  000039                     __pdataCOMRAM:
   387                           	opt stack 0
   388  000039                     _data_array_1:
   389                           	opt stack 0
   390  000039                     	ds	8
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	bssBANK0
   401  000060                     __pbssBANK0:
   402                           	opt stack 0
   403  000060                     _int_counter_1:
   404                           	opt stack 0
   405  000060                     	ds	4
   406  000064                     _int_counter_2:
   407                           	opt stack 0
   408  000064                     	ds	4
   409  000068                     _remote_frame_id:
   410                           	opt stack 0
   411  000068                     	ds	4
   412  00006C                     _clock_counter_reference:
   413                           	opt stack 0
   414  00006C                     	ds	2
   415  00006E                     _correction_factor:
   416                           	opt stack 0
   417  00006E                     	ds	2
   418  000070                     _distance_1:
   419                           	opt stack 0
   420  000070                     	ds	2
   421  000072                     _distance_2:
   422                           	opt stack 0
   423  000072                     	ds	2
   424  000074                     _Analogic_Mode:
   425                           	opt stack 0
   426  000074                     	ds	1
   427  000075                     _brake_signal_CAN:
   428                           	opt stack 0
   429  000075                     	ds	1
   430  000076                     _brake_value_inc:
   431                           	opt stack 0
   432  000076                     	ds	1
   433  000077                     _home_position:
   434                           	opt stack 0
   435  000077                     	ds	1
   436  000078                     _read:
   437                           	opt stack 0
   438  000078                     	ds	1
   439  000079                     _step:
   440                           	opt stack 0
   441  000079                     	ds	1
   442  00007A                     _wheel_speed_1:
   443                           	opt stack 0
   444  00007A                     	ds	1
   445  00007B                     _wheel_speed_2:
   446                           	opt stack 0
   447  00007B                     	ds	1
   448  00007C                     _msg:
   449                           	opt stack 0
   450  00007C                     	ds	15
   451  00008B                     _distance_array:
   452                           	opt stack 0
   453  00008B                     	ds	8
   454  000093                     _speed_array:
   455                           	opt stack 0
   456  000093                     	ds	8
   457  00009B                     _brake_value:
   458                           	opt stack 0
   459  00009B                     	ds	1
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           postdec1	equ	0xFE5
   467                           fsr1l	equ	0xFE1
   468                           
   469                           	psect	dataBANK0
   470  0000D1                     __pdataBANK0:
   471                           	opt stack 0
   472  0000D1                     _delay_quartz_frequency_value:
   473                           	opt stack 0
   474  0000D1                     	ds	1
   475  0000D2                     _status_array:
   476                           	opt stack 0
   477  0000D2                     	ds	8
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487                           	psect	cstackBANK0
   488  00009C                     __pcstackBANK0:
   489                           	opt stack 0
   490  00009C                     i2___awdiv@counter:
   491                           	opt stack 0
   492  00009C                     i2___lldiv@quotient:
   493                           	opt stack 0
   494                           
   495                           ; 4 bytes @ 0x0
   496  00009C                     	ds	1
   497  00009D                     i2___awdiv@sign:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x1
   501  00009D                     	ds	1
   502  00009E                     i2___awdiv@quotient:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x2
   506  00009E                     	ds	2
   507  0000A0                     i2___lldiv@counter:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x4
   511  0000A0                     	ds	1
   512  0000A1                     ??_ISR_Alta:
   513                           
   514                           ; 0 bytes @ 0x5
   515  0000A1                     	ds	22
   516  0000B7                     ?___wmul:
   517                           	opt stack 0
   518  0000B7                     ?___awdiv:
   519                           	opt stack 0
   520  0000B7                     ?___lldiv:
   521                           	opt stack 0
   522  0000B7                     CANOperationMode@mode:
   523                           	opt stack 0
   524  0000B7                     _CANisTxReady$3114:
   525                           	opt stack 0
   526  0000B7                     ___wmul@multiplier:
   527                           	opt stack 0
   528  0000B7                     ___awdiv@dividend:
   529                           	opt stack 0
   530  0000B7                     CANsendMessage@identifier:
   531                           	opt stack 0
   532  0000B7                     CANSetMask@mask:
   533                           	opt stack 0
   534  0000B7                     CANSetFilter@filter:
   535                           	opt stack 0
   536  0000B7                     ___lldiv@dividend:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x1B
   540  0000B7                     	ds	2
   541  0000B9                     ___wmul@multiplicand:
   542                           	opt stack 0
   543  0000B9                     ___awdiv@divisor:
   544                           	opt stack 0
   545                           
   546                           ; 2 bytes @ 0x1D
   547  0000B9                     	ds	2
   548  0000BB                     CANSetMask@type:
   549                           	opt stack 0
   550  0000BB                     CANSetFilter@type:
   551                           	opt stack 0
   552  0000BB                     ___awdiv@counter:
   553                           	opt stack 0
   554  0000BB                     CANsendMessage@data:
   555                           	opt stack 0
   556  0000BB                     ___wmul@product:
   557                           	opt stack 0
   558  0000BB                     ___lldiv@divisor:
   559                           	opt stack 0
   560                           
   561                           ; 4 bytes @ 0x1F
   562  0000BB                     	ds	1
   563  0000BC                     ??_CANSetMask:
   564  0000BC                     ??_CANSetFilter:
   565  0000BC                     ___awdiv@sign:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x20
   569  0000BC                     	ds	1
   570  0000BD                     CANsendMessage@dataLength:
   571                           	opt stack 0
   572  0000BD                     delay_ms@value_ms:
   573                           	opt stack 0
   574  0000BD                     ___awdiv@quotient:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x21
   578  0000BD                     	ds	1
   579  0000BE                     CANsendMessage@flags:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x22
   583  0000BE                     	ds	1
   584  0000BF                     ??_CANsendMessage:
   585  0000BF                     ___lldiv@quotient:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x23
   589  0000BF                     	ds	1
   590  0000C0                     CANSetMask@numBuffer:
   591                           	opt stack 0
   592  0000C0                     CANSetFilter@numBuffer:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x24
   596  0000C0                     	ds	1
   597  0000C1                     CANSetMask@tamp:
   598                           	opt stack 0
   599  0000C1                     CANSetFilter@tamp:
   600                           	opt stack 0
   601                           
   602                           ; 4 bytes @ 0x25
   603  0000C1                     	ds	2
   604  0000C3                     ___lldiv@counter:
   605                           	opt stack 0
   606  0000C3                     CANsendMessage@tamp:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x27
   610  0000C3                     	ds	2
   611  0000C5                     CANInitialize@phaseSeg1:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x29
   615  0000C5                     	ds	1
   616  0000C6                     CANInitialize@phaseSeg2:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x2A
   620  0000C6                     	ds	1
   621  0000C7                     ??_remote_frame_handler:
   622  0000C7                     CANInitialize@SJW:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x2B
   626  0000C7                     	ds	1
   627  0000C8                     CANInitialize@BRP:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x2C
   631  0000C8                     	ds	1
   632  0000C9                     CANInitialize@flags:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x2D
   636  0000C9                     	ds	1
   637  0000CA                     ??_CANInitialize:
   638                           
   639                           ; 0 bytes @ 0x2E
   640  0000CA                     	ds	4
   641  0000CE                     CANInitialize@propSeg:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x32
   645  0000CE                     	ds	1
   646  0000CF                     CANInitialize@FilterConfig1:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x33
   650  0000CF                     	ds	1
   651  0000D0                     CANInitialize@FilterConfig2:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x34
   655  0000D0                     	ds	1
   656  0000D1                     tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           
   665                           ; 0 bytes @ 0x35
   666                           
   667                           	psect	cstackCOMRAM
   668  000001                     __pcstackCOMRAM:
   669                           	opt stack 0
   670  000001                     _CANisRxReady$3116:
   671                           	opt stack 0
   672  000001                     CANreceiveMessage@msg:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x0
   676  000001                     	ds	2
   677  000003                     ??_CANreceiveMessage:
   678                           
   679                           ; 0 bytes @ 0x2
   680  000003                     	ds	8
   681  00000B                     CANreceiveMessage@error:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0xA
   685  00000B                     	ds	1
   686  00000C                     CANreceiveMessage@tamp:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0xB
   690  00000C                     	ds	1
   691  00000D                     ??_ISR_Bassa:
   692                           
   693                           ; 0 bytes @ 0xC
   694  00000D                     	ds	17
   695  00001E                     ?i2___wmul:
   696                           	opt stack 0
   697  00001E                     ?i2___lldiv:
   698                           	opt stack 0
   699  00001E                     WriteTimer0@timer0:
   700                           	opt stack 0
   701  00001E                     i2___wmul@multiplier:
   702                           	opt stack 0
   703  00001E                     i2___lldiv@dividend:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x1D
   707  00001E                     	ds	2
   708  000020                     WriteTimer0@timer:
   709                           	opt stack 0
   710  000020                     i2___wmul@multiplicand:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x1F
   714  000020                     	ds	2
   715  000022                     i2___wmul@product:
   716                           	opt stack 0
   717  000022                     i2___lldiv@divisor:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0x21
   721  000022                     	ds	2
   722  000024                     ?i2___awdiv:
   723                           	opt stack 0
   724  000024                     i2___awdiv@dividend:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x23
   728  000024                     	ds	2
   729  000026                     i2___awdiv@divisor:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x25
   733  000026                     	ds	2
   734  000028                     tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           postinc0	equ	0xFEE
   739                           wreg	equ	0xFE8
   740                           postdec1	equ	0xFE5
   741                           fsr1l	equ	0xFE1
   742                           
   743                           ; 0 bytes @ 0x27
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 213 in file "ABS_Code.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  2  680[None  ] int 
   756 ;; Registers used:
   757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   763 ;;      Params:         0       0       0       0
   764 ;;      Locals:         0       0       0       0
   765 ;;      Temps:          0       0       0       0
   766 ;;      Totals:         0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels required when called:    7
   769 ;; This function calls:
   770 ;;		_ADC_Read
   771 ;;		_CANisRXwarningON
   772 ;;		_CANisTXwarningON
   773 ;;		___awdiv
   774 ;;		___lldiv
   775 ;;		_board_initialization
   776 ;;		_delay_ms
   777 ;;		_remote_frame_handler
   778 ;; This function is called by:
   779 ;;		Startup code after reset
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text0
   784  002288                     __ptext0:
   785                           	opt stack 0
   786  002288                     _main:
   787                           	opt stack 24
   788                           
   789                           ;ABS_Code.c: 214: board_initialization();
   790                           
   791                           ;incstack = 0
   792  002288  ECB4  F012         	call	_board_initialization	;wreg free
   793                           
   794                           ;ABS_Code.c: 215: step = (11 * (3,1415)) / 16;
   795  00228C  0ECC               	movlw	204
   796  00228E  0100               	movlb	0	; () banked
   797  002290  6F79               	movwf	_step& (0+255),b
   798                           
   799                           ; BSR set to: 0
   800                           ;ABS_Code.c: 216: PORTAbits.RA1 = 1;
   801  002292  8280               	bsf	3968,1,c	;volatile
   802                           
   803                           ; BSR set to: 0
   804                           ;ABS_Code.c: 217: PORTCbits.RC1 = 1;
   805  002294  8282               	bsf	3970,1,c	;volatile
   806                           
   807                           ; BSR set to: 0
   808                           ;ABS_Code.c: 218: delay_ms(500);
   809  002296  0E01               	movlw	1
   810  002298  0100               	movlb	0	; () banked
   811  00229A  6FBE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   812  00229C  0EF4               	movlw	244
   813  00229E  6FBD               	movwf	delay_ms@value_ms& (0+255),b
   814  0022A0  ECF9  F013         	call	_delay_ms	;wreg free
   815                           
   816                           ;ABS_Code.c: 219: PORTAbits.RA1 = 0;
   817  0022A4  9280               	bcf	3968,1,c	;volatile
   818                           
   819                           ;ABS_Code.c: 220: PORTCbits.RC1 = 0;
   820  0022A6  9282               	bcf	3970,1,c	;volatile
   821                           
   822                           ;ABS_Code.c: 221: delay_ms(100);
   823  0022A8  0E00               	movlw	0
   824  0022AA  0100               	movlb	0	; () banked
   825  0022AC  6FBE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   826  0022AE  0E64               	movlw	100
   827  0022B0  6FBD               	movwf	delay_ms@value_ms& (0+255),b
   828  0022B2  ECF9  F013         	call	_delay_ms	;wreg free
   829  0022B6                     l3948:
   830                           
   831                           ;ABS_Code.c: 223: ADC_Read();
   832  0022B6  ECDA  F013         	call	_ADC_Read	;wreg free
   833                           
   834                           ;ABS_Code.c: 224: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   835  0022BA  EC75  F014         	call	_CANisTXwarningON	;wreg free
   836  0022BE  06E8               	decf	wreg,f,c
   837  0022C0  B4D8               	btfsc	status,2,c
   838  0022C2  D005               	goto	l684
   839  0022C4  EC7B  F014         	call	_CANisRXwarningON	;wreg free
   840  0022C8  06E8               	decf	wreg,f,c
   841  0022CA  A4D8               	btfss	status,2,c
   842  0022CC  D002               	goto	l682
   843  0022CE                     l684:
   844                           
   845                           ;ABS_Code.c: 225: PORTAbits.RA1 = 1;
   846  0022CE  8280               	bsf	3968,1,c	;volatile
   847                           
   848                           ;ABS_Code.c: 226: } else {
   849  0022D0  D001               	goto	l685
   850  0022D2                     l682:
   851                           
   852                           ;ABS_Code.c: 227: PORTAbits.RA1 = 0;
   853  0022D2  9280               	bcf	3968,1,c	;volatile
   854  0022D4                     l685:
   855                           
   856                           ;ABS_Code.c: 228: }
   857                           ;ABS_Code.c: 230: if ((remote_frame == 1) || (Tx_retry == 1)) {
   858  0022D4  B841               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
   859  0022D6  D002               	goto	l688
   860  0022D8  A441               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   861  0022DA  D003               	goto	l3958
   862  0022DC                     l688:
   863                           
   864                           ;ABS_Code.c: 231: remote_frame = 0;
   865  0022DC  9841               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   866                           
   867                           ;ABS_Code.c: 232: remote_frame_handler();
   868  0022DE  EC7B  F010         	call	_remote_frame_handler	;wreg free
   869  0022E2                     l3958:
   870                           
   871                           ;ABS_Code.c: 233: }
   872                           ;ABS_Code.c: 235: if (Analogic_Mode == 0) {
   873  0022E2  0100               	movlb	0	; () banked
   874  0022E4  5174               	movf	_Analogic_Mode& (0+255),w,b
   875  0022E6  A4D8               	btfss	status,2,c
   876  0022E8  D01E               	goto	l689
   877                           
   878                           ; BSR set to: 0
   879                           ;ABS_Code.c: 236: if (brake_signal_CAN == 00) {
   880  0022EA  0100               	movlb	0	; () banked
   881  0022EC  5175               	movf	_brake_signal_CAN& (0+255),w,b
   882  0022EE  A4D8               	btfss	status,2,c
   883  0022F0  D003               	goto	l3964
   884                           
   885                           ; BSR set to: 0
   886                           ;ABS_Code.c: 237: brake_value_inc = 0;
   887  0022F2  0E00               	movlw	0
   888  0022F4  0100               	movlb	0	; () banked
   889  0022F6  6F76               	movwf	_brake_value_inc& (0+255),b
   890  0022F8                     l3964:
   891                           
   892                           ; BSR set to: 0
   893                           ;ABS_Code.c: 238: }
   894                           ;ABS_Code.c: 239: if (brake_signal_CAN == 01) {
   895  0022F8  0100               	movlb	0	; () banked
   896  0022FA  0575               	decf	_brake_signal_CAN& (0+255),w,b
   897  0022FC  A4D8               	btfss	status,2,c
   898  0022FE  D003               	goto	l3968
   899                           
   900                           ; BSR set to: 0
   901                           ;ABS_Code.c: 240: brake_value_inc = 150;
   902  002300  0E96               	movlw	150
   903  002302  0100               	movlb	0	; () banked
   904  002304  6F76               	movwf	_brake_value_inc& (0+255),b
   905  002306                     l3968:
   906                           
   907                           ; BSR set to: 0
   908                           ;ABS_Code.c: 241: }
   909                           ;ABS_Code.c: 242: if (brake_signal_CAN == 10) {
   910  002306  0E0A               	movlw	10
   911  002308  0100               	movlb	0	; () banked
   912  00230A  1975               	xorwf	_brake_signal_CAN& (0+255),w,b
   913  00230C  A4D8               	btfss	status,2,c
   914  00230E  D003               	goto	l3972
   915                           
   916                           ; BSR set to: 0
   917                           ;ABS_Code.c: 243: brake_value_inc = 200;
   918  002310  0EC8               	movlw	200
   919  002312  0100               	movlb	0	; () banked
   920  002314  6F76               	movwf	_brake_value_inc& (0+255),b
   921  002316                     l3972:
   922                           
   923                           ; BSR set to: 0
   924                           ;ABS_Code.c: 244: }
   925                           ;ABS_Code.c: 245: if (brake_signal_CAN == 11) {
   926  002316  0E0B               	movlw	11
   927  002318  0100               	movlb	0	; () banked
   928  00231A  1975               	xorwf	_brake_signal_CAN& (0+255),w,b
   929  00231C  A4D8               	btfss	status,2,c
   930  00231E  D005               	goto	l3976
   931                           
   932                           ; BSR set to: 0
   933                           ;ABS_Code.c: 246: brake_value_inc = 255;
   934  002320  0100               	movlb	0	; () banked
   935  002322  6976               	setf	_brake_value_inc& (0+255),b
   936                           
   937                           ; BSR set to: 0
   938                           ;ABS_Code.c: 247: }
   939                           ;ABS_Code.c: 248: } else {
   940  002324  D002               	goto	l3976
   941  002326                     l689:
   942                           
   943                           ; BSR set to: 0
   944                           ;ABS_Code.c: 249: brake_value_inc = brake_signal_CAN;
   945  002326  C075  F076         	movff	_brake_signal_CAN,_brake_value_inc
   946  00232A                     l3976:
   947                           
   948                           ; BSR set to: 0
   949                           ;ABS_Code.c: 250: }
   950                           ;ABS_Code.c: 252: brake_value = (brake_value_inc / 17) + home_position;
   951  00232A  C076  F0B7         	movff	_brake_value_inc,___awdiv@dividend
   952  00232E  0100               	movlb	0	; () banked
   953  002330  6BB8               	clrf	(___awdiv@dividend+1)& (0+255),b
   954  002332  0E00               	movlw	0
   955  002334  0100               	movlb	0	; () banked
   956  002336  6FBA               	movwf	(___awdiv@divisor+1)& (0+255),b
   957  002338  0E11               	movlw	17
   958  00233A  6FB9               	movwf	___awdiv@divisor& (0+255),b
   959  00233C  ECF7  F011         	call	___awdiv	;wreg free
   960  002340  0100               	movlb	0	; () banked
   961  002342  51B7               	movf	?___awdiv& (0+255),w,b
   962  002344  0100               	movlb	0	; () banked
   963  002346  2577               	addwf	_home_position& (0+255),w,b
   964  002348  0100               	movlb	0	; () banked
   965  00234A  6F9B               	movwf	_brake_value& (0+255),b
   966                           
   967                           ; BSR set to: 0
   968                           ;ABS_Code.c: 253: brake_value_degree = (180 * brake_value) / 255;
   969  00234C  0100               	movlb	0	; () banked
   970  00234E  519B               	movf	_brake_value& (0+255),w,b
   971  002350  0DB4               	mullw	180
   972  002352  CFF3 F0B7          	movff	prodl,___awdiv@dividend
   973  002356  CFF4 F0B8          	movff	prodh,___awdiv@dividend+1
   974  00235A  0E00               	movlw	0
   975  00235C  0100               	movlb	0	; () banked
   976  00235E  6FBA               	movwf	(___awdiv@divisor+1)& (0+255),b
   977  002360  69B9               	setf	___awdiv@divisor& (0+255),b
   978  002362  ECF7  F011         	call	___awdiv	;wreg free
   979  002366  0100               	movlb	0	; () banked
   980  002368  51B7               	movf	?___awdiv& (0+255),w,b
   981  00236A  6E38               	movwf	_brake_value_degree,c
   982                           
   983                           ; BSR set to: 0
   984                           ;ABS_Code.c: 255: if (ENC1_measure == 1) {
   985  00236C  A041               	btfss	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   986  00236E  D01E               	goto	l3988
   987                           
   988                           ; BSR set to: 0
   989                           ;ABS_Code.c: 256: wheel_speed_1 = (step * 36) / gap_time_1;
   990  002370  0100               	movlb	0	; () banked
   991  002372  5179               	movf	_step& (0+255),w,b
   992  002374  0D24               	mullw	36
   993  002376  CFF3 F0B7          	movff	prodl,___lldiv@dividend
   994  00237A  CFF4 F0B8          	movff	prodh,___lldiv@dividend+1
   995  00237E  0100               	movlb	0	; () banked
   996  002380  0E00               	movlw	0
   997  002382  BFB8               	btfsc	(___lldiv@dividend+1)& (0+255),7,b
   998  002384  0EFF               	movlw	-1
   999  002386  6FB9               	movwf	(___lldiv@dividend+2)& (0+255),b
  1000  002388  6FBA               	movwf	(___lldiv@dividend+3)& (0+255),b
  1001  00238A  C028  F0BB         	movff	_gap_time_1,___lldiv@divisor
  1002  00238E  C029  F0BC         	movff	_gap_time_1+1,___lldiv@divisor+1
  1003  002392  C02A  F0BD         	movff	_gap_time_1+2,___lldiv@divisor+2
  1004  002396  C02B  F0BE         	movff	_gap_time_1+3,___lldiv@divisor+3
  1005  00239A  EC56  F012         	call	___lldiv	;wreg free
  1006  00239E  0100               	movlb	0	; () banked
  1007  0023A0  51B7               	movf	?___lldiv& (0+255),w,b
  1008  0023A2  0100               	movlb	0	; () banked
  1009  0023A4  6F7A               	movwf	_wheel_speed_1& (0+255),b
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;ABS_Code.c: 257: speed_array[1] = wheel_speed_1;
  1013  0023A6  C07A  F094         	movff	_wheel_speed_1,_speed_array+1
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;ABS_Code.c: 258: ENC1_measure = 0;
  1017  0023AA  9041               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  1018  0023AC                     l3988:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;ABS_Code.c: 259: }
  1022                           ;ABS_Code.c: 261: if (ENC2_measure == 1) {
  1023  0023AC  A241               	btfss	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1024  0023AE  D783               	goto	l3948
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;ABS_Code.c: 262: wheel_speed_2 = (step * 36) / gap_time_2;
  1028  0023B0  0100               	movlb	0	; () banked
  1029  0023B2  5179               	movf	_step& (0+255),w,b
  1030  0023B4  0D24               	mullw	36
  1031  0023B6  CFF3 F0B7          	movff	prodl,___lldiv@dividend
  1032  0023BA  CFF4 F0B8          	movff	prodh,___lldiv@dividend+1
  1033  0023BE  0100               	movlb	0	; () banked
  1034  0023C0  0E00               	movlw	0
  1035  0023C2  BFB8               	btfsc	(___lldiv@dividend+1)& (0+255),7,b
  1036  0023C4  0EFF               	movlw	-1
  1037  0023C6  6FB9               	movwf	(___lldiv@dividend+2)& (0+255),b
  1038  0023C8  6FBA               	movwf	(___lldiv@dividend+3)& (0+255),b
  1039  0023CA  C02C  F0BB         	movff	_gap_time_2,___lldiv@divisor
  1040  0023CE  C02D  F0BC         	movff	_gap_time_2+1,___lldiv@divisor+1
  1041  0023D2  C02E  F0BD         	movff	_gap_time_2+2,___lldiv@divisor+2
  1042  0023D6  C02F  F0BE         	movff	_gap_time_2+3,___lldiv@divisor+3
  1043  0023DA  EC56  F012         	call	___lldiv	;wreg free
  1044  0023DE  0100               	movlb	0	; () banked
  1045  0023E0  51B7               	movf	?___lldiv& (0+255),w,b
  1046  0023E2  0100               	movlb	0	; () banked
  1047  0023E4  6F7B               	movwf	_wheel_speed_2& (0+255),b
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;ABS_Code.c: 263: speed_array[0] = wheel_speed_2;
  1051  0023E6  C07B  F093         	movff	_wheel_speed_2,_speed_array
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;ABS_Code.c: 264: ENC2_measure = 0;
  1055  0023EA  9241               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1056                           
  1057                           ; BSR set to: 0
  1058                           
  1059                           ; BSR set to: 0
  1060  0023EC  D764               	goto	l3948
  1061  0023EE                     __end_of_main:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec1	equ	0xFE5
  1072                           fsr1l	equ	0xFE1
  1073                           status	equ	0xFD8
  1074                           
  1075 ;; *************** function _remote_frame_handler *****************
  1076 ;; Defined at:
  1077 ;;		line 274 in file "ABS_Code.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1091 ;;      Params:         0       0       0       0
  1092 ;;      Locals:         0       0       0       0
  1093 ;;      Temps:          0       1       0       0
  1094 ;;      Totals:         0       1       0       0
  1095 ;;Total ram usage:        1 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    5
  1098 ;; This function calls:
  1099 ;;		_CANisTxReady
  1100 ;;		_CANsendMessage
  1101 ;;		___wmul
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text1
  1108  0020F6                     __ptext1:
  1109                           	opt stack 0
  1110  0020F6                     _remote_frame_handler:
  1111                           	opt stack 25
  1112                           
  1113                           ;ABS_Code.c: 275: if (CANisTxReady()) {
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;incstack = 0
  1117  0020F6  EC44  F014         	call	_CANisTxReady	;wreg free
  1118  0020FA  0900               	iorlw	0
  1119  0020FC  B4D8               	btfsc	status,2,c
  1120  0020FE  D0C2               	goto	l702
  1121                           
  1122                           ;ABS_Code.c: 276: if (remote_frame_id == 0b00000000000000000000000000010) {
  1123  002100  0E02               	movlw	2
  1124  002102  0100               	movlb	0	; () banked
  1125  002104  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1126  002106  0100               	movlb	0	; () banked
  1127  002108  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1128  00210A  0100               	movlb	0	; () banked
  1129  00210C  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1130  00210E  0100               	movlb	0	; () banked
  1131  002110  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1132  002112  A4D8               	btfss	status,2,c
  1133  002114  D016               	goto	l3716
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;ABS_Code.c: 277: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1137  002116  C068  F0B7         	movff	_remote_frame_id,CANsendMessage@identifier
  1138  00211A  C069  F0B8         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1139  00211E  C06A  F0B9         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1140  002122  C06B  F0BA         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1141  002126  0ED2               	movlw	low _status_array
  1142  002128  0100               	movlb	0	; () banked
  1143  00212A  6FBB               	movwf	CANsendMessage@data& (0+255),b
  1144  00212C  0E00               	movlw	high _status_array
  1145  00212E  0100               	movlb	0	; () banked
  1146  002130  6FBC               	movwf	(CANsendMessage@data+1)& (0+255),b
  1147  002132  0E08               	movlw	8
  1148  002134  0100               	movlb	0	; () banked
  1149  002136  6FBD               	movwf	CANsendMessage@dataLength& (0+255),b
  1150  002138  0EBC               	movlw	188
  1151  00213A  0100               	movlb	0	; () banked
  1152  00213C  6FBE               	movwf	CANsendMessage@flags& (0+255),b
  1153  00213E  EC05  F006         	call	_CANsendMessage	;wreg free
  1154  002142                     l3716:
  1155                           
  1156                           ;ABS_Code.c: 278: }
  1157                           ;ABS_Code.c: 279: if (remote_frame_id == 0b00000000000000000000000000110) {
  1158  002142  0E06               	movlw	6
  1159  002144  0100               	movlb	0	; () banked
  1160  002146  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1161  002148  0100               	movlb	0	; () banked
  1162  00214A  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1163  00214C  0100               	movlb	0	; () banked
  1164  00214E  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1165  002150  0100               	movlb	0	; () banked
  1166  002152  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1167  002154  A4D8               	btfss	status,2,c
  1168  002156  D024               	goto	l3722
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;ABS_Code.c: 280: PORTCbits.RC0 = ~PORTCbits.RC0;
  1172  002158  A082               	btfss	3970,0,c	;volatile
  1173  00215A  D002               	goto	u4080
  1174  00215C  0E01               	movlw	1
  1175  00215E  D001               	goto	u4086
  1176  002160                     u4080:
  1177  002160  0E00               	movlw	0
  1178  002162                     u4086:
  1179  002162  0AFF               	xorlw	255
  1180  002164  0100               	movlb	0	; () banked
  1181  002166  6FC7               	movwf	??_remote_frame_handler& (0+255),b
  1182  002168  5082               	movf	3970,w,c	;volatile
  1183  00216A  0100               	movlb	0	; () banked
  1184  00216C  19C7               	xorwf	??_remote_frame_handler& (0+255),w,b
  1185  00216E  0BFE               	andlw	-2
  1186  002170  19C7               	xorwf	??_remote_frame_handler& (0+255),w,b
  1187  002172  6E82               	movwf	3970,c	;volatile
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;ABS_Code.c: 281: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1191  002174  C068  F0B7         	movff	_remote_frame_id,CANsendMessage@identifier
  1192  002178  C069  F0B8         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1193  00217C  C06A  F0B9         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1194  002180  C06B  F0BA         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1195  002184  0E93               	movlw	low _speed_array
  1196  002186  0100               	movlb	0	; () banked
  1197  002188  6FBB               	movwf	CANsendMessage@data& (0+255),b
  1198  00218A  0E00               	movlw	high _speed_array
  1199  00218C  0100               	movlb	0	; () banked
  1200  00218E  6FBC               	movwf	(CANsendMessage@data+1)& (0+255),b
  1201  002190  0E08               	movlw	8
  1202  002192  0100               	movlb	0	; () banked
  1203  002194  6FBD               	movwf	CANsendMessage@dataLength& (0+255),b
  1204  002196  0EBC               	movlw	188
  1205  002198  0100               	movlb	0	; () banked
  1206  00219A  6FBE               	movwf	CANsendMessage@flags& (0+255),b
  1207  00219C  EC05  F006         	call	_CANsendMessage	;wreg free
  1208  0021A0                     l3722:
  1209                           
  1210                           ;ABS_Code.c: 282: }
  1211                           ;ABS_Code.c: 283: if (remote_frame_id == 0b00000000000000000000000001000) {
  1212  0021A0  0E08               	movlw	8
  1213  0021A2  0100               	movlb	0	; () banked
  1214  0021A4  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1215  0021A6  0100               	movlb	0	; () banked
  1216  0021A8  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1217  0021AA  0100               	movlb	0	; () banked
  1218  0021AC  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1219  0021AE  0100               	movlb	0	; () banked
  1220  0021B0  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1221  0021B2  A4D8               	btfss	status,2,c
  1222  0021B4  D013               	goto	l3728
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;ABS_Code.c: 284: int_counter_1 = 0;
  1226  0021B6  0E00               	movlw	0
  1227  0021B8  0100               	movlb	0	; () banked
  1228  0021BA  6F60               	movwf	_int_counter_1& (0+255),b
  1229  0021BC  0E00               	movlw	0
  1230  0021BE  6F61               	movwf	(_int_counter_1+1)& (0+255),b
  1231  0021C0  0E00               	movlw	0
  1232  0021C2  6F62               	movwf	(_int_counter_1+2)& (0+255),b
  1233  0021C4  0E00               	movlw	0
  1234  0021C6  6F63               	movwf	(_int_counter_1+3)& (0+255),b
  1235                           
  1236                           ;ABS_Code.c: 285: int_counter_2 = 0;
  1237  0021C8  0E00               	movlw	0
  1238  0021CA  0100               	movlb	0	; () banked
  1239  0021CC  6F64               	movwf	_int_counter_2& (0+255),b
  1240  0021CE  0E00               	movlw	0
  1241  0021D0  6F65               	movwf	(_int_counter_2+1)& (0+255),b
  1242  0021D2  0E00               	movlw	0
  1243  0021D4  6F66               	movwf	(_int_counter_2+2)& (0+255),b
  1244  0021D6  0E00               	movlw	0
  1245  0021D8  6F67               	movwf	(_int_counter_2+3)& (0+255),b
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;ABS_Code.c: 286: count_flag = 1;
  1249  0021DA  8641               	bsf	_count_flag/(0+8),_count_flag& (0+7),c
  1250  0021DC                     l3728:
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;ABS_Code.c: 287: }
  1254                           ;ABS_Code.c: 288: if (remote_frame_id == 0b00000000000000000000000000111) {
  1255  0021DC  0E07               	movlw	7
  1256  0021DE  0100               	movlb	0	; () banked
  1257  0021E0  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1258  0021E2  0100               	movlb	0	; () banked
  1259  0021E4  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1260  0021E6  0100               	movlb	0	; () banked
  1261  0021E8  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1262  0021EA  0100               	movlb	0	; () banked
  1263  0021EC  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1264  0021EE  A4D8               	btfss	status,2,c
  1265  0021F0  D03F               	goto	l3744
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;ABS_Code.c: 289: distance_1 = step * (int_counter_1);
  1269  0021F2  C079  F0B7         	movff	_step,___wmul@multiplier
  1270  0021F6  0100               	movlb	0	; () banked
  1271  0021F8  6BB8               	clrf	(___wmul@multiplier+1)& (0+255),b
  1272  0021FA  C060  F0B9         	movff	_int_counter_1,___wmul@multiplicand
  1273  0021FE  C061  F0BA         	movff	_int_counter_1+1,___wmul@multiplicand+1
  1274  002202  EC16  F014         	call	___wmul	;wreg free
  1275  002206  C0B7  F070         	movff	?___wmul,_distance_1
  1276  00220A  C0B8  F071         	movff	?___wmul+1,_distance_1+1
  1277                           
  1278                           ;ABS_Code.c: 290: distance_2 = step * (int_counter_2);
  1279  00220E  C079  F0B7         	movff	_step,___wmul@multiplier
  1280  002212  0100               	movlb	0	; () banked
  1281  002214  6BB8               	clrf	(___wmul@multiplier+1)& (0+255),b
  1282  002216  C064  F0B9         	movff	_int_counter_2,___wmul@multiplicand
  1283  00221A  C065  F0BA         	movff	_int_counter_2+1,___wmul@multiplicand+1
  1284  00221E  EC16  F014         	call	___wmul	;wreg free
  1285  002222  C0B7  F072         	movff	?___wmul,_distance_2
  1286  002226  C0B8  F073         	movff	?___wmul+1,_distance_2+1
  1287                           
  1288                           ;ABS_Code.c: 291: count_flag = 0;
  1289  00222A  9641               	bcf	_count_flag/(0+8),_count_flag& (0+7),c
  1290                           
  1291                           ;ABS_Code.c: 292: distance_array[0] = distance_1;
  1292  00222C  C070  F08B         	movff	_distance_1,_distance_array
  1293                           
  1294                           ;ABS_Code.c: 293: distance_array[1] = distance_1 >> 8;
  1295  002230  0100               	movlb	0	; () banked
  1296  002232  5171               	movf	(_distance_1+1)& (0+255),w,b
  1297  002234  0100               	movlb	0	; () banked
  1298  002236  6F8C               	movwf	(_distance_array+1)& (0+255),b
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;ABS_Code.c: 294: distance_array[2] = distance_2;
  1302  002238  C072  F08D         	movff	_distance_2,_distance_array+2
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;ABS_Code.c: 295: distance_array[3] = distance_2 >> 8;
  1306  00223C  0100               	movlb	0	; () banked
  1307  00223E  5173               	movf	(_distance_2+1)& (0+255),w,b
  1308  002240  0100               	movlb	0	; () banked
  1309  002242  6F8E               	movwf	(_distance_array+3)& (0+255),b
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;ABS_Code.c: 296: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1313  002244  C068  F0B7         	movff	_remote_frame_id,CANsendMessage@identifier
  1314  002248  C069  F0B8         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1315  00224C  C06A  F0B9         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1316  002250  C06B  F0BA         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1317  002254  0E8B               	movlw	low _distance_array
  1318  002256  0100               	movlb	0	; () banked
  1319  002258  6FBB               	movwf	CANsendMessage@data& (0+255),b
  1320  00225A  0E00               	movlw	high _distance_array
  1321  00225C  0100               	movlb	0	; () banked
  1322  00225E  6FBC               	movwf	(CANsendMessage@data+1)& (0+255),b
  1323  002260  0E08               	movlw	8
  1324  002262  0100               	movlb	0	; () banked
  1325  002264  6FBD               	movwf	CANsendMessage@dataLength& (0+255),b
  1326  002266  0EBC               	movlw	188
  1327  002268  0100               	movlb	0	; () banked
  1328  00226A  6FBE               	movwf	CANsendMessage@flags& (0+255),b
  1329  00226C  EC05  F006         	call	_CANsendMessage	;wreg free
  1330  002270                     l3744:
  1331                           
  1332                           ;ABS_Code.c: 297: }
  1333                           ;ABS_Code.c: 298: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1334  002270  010F               	movlb	15	; () banked
  1335  002272  BD40               	btfsc	64,6,b	;volatile
  1336  002274  D003               	goto	l709
  1337                           
  1338                           ; BSR set to: 15
  1339  002276  010F               	movlb	15	; () banked
  1340  002278  AD30               	btfss	48,6,b	;volatile
  1341  00227A  D002               	goto	l707
  1342  00227C                     l709:
  1343                           
  1344                           ; BSR set to: 15
  1345                           ;ABS_Code.c: 299: Tx_retry = 1;
  1346  00227C  8441               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1347                           
  1348                           ;ABS_Code.c: 300: } else {
  1349  00227E  0012               	return	
  1350  002280                     l707:
  1351                           
  1352                           ; BSR set to: 15
  1353                           ;ABS_Code.c: 301: Tx_retry = 0;
  1354  002280  9441               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;ABS_Code.c: 302: }
  1358                           ;ABS_Code.c: 303: } else {
  1359  002282  0012               	return	
  1360  002284                     l702:
  1361                           
  1362                           ;ABS_Code.c: 304: Tx_retry = 1;
  1363  002284  8441               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1364  002286  0012               	return	
  1365  002288                     __end_of_remote_frame_handler:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           prodh	equ	0xFF4
  1372                           prodl	equ	0xFF3
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           postdec1	equ	0xFE5
  1376                           fsr1l	equ	0xFE1
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _CANsendMessage *****************
  1380 ;; Defined at:
  1381 ;;		line 294 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  identifier      4   27[BANK0 ] unsigned long 
  1384 ;;  data            2   31[BANK0 ] PTR unsigned char 
  1385 ;;		 -> distance_array(8), status_array(8), speed_array(8), 
  1386 ;;  dataLength      1   33[BANK0 ] unsigned char 
  1387 ;;  flags           1   34[BANK0 ] enum E16866
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  tamp            4   39[BANK0 ] unsigned long 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1399 ;;      Params:         0       8       0       0
  1400 ;;      Locals:         0       4       0       0
  1401 ;;      Temps:          0       4       0       0
  1402 ;;      Totals:         0      16       0       0
  1403 ;;Total ram usage:       16 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    4
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_remote_frame_handler
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text2
  1414  000C0A                     __ptext2:
  1415                           	opt stack 0
  1416  000C0A                     _CANsendMessage:
  1417                           	opt stack 25
  1418                           
  1419                           ;inc\CANlib.h: 296: unsigned long tamp;
  1420                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1421                           
  1422                           ;incstack = 0
  1423  000C0A  010F               	movlb	15	; () banked
  1424  000C0C  B740               	btfsc	64,3,b	;volatile
  1425  000C0E  D13F               	goto	l373
  1426                           
  1427                           ; BSR set to: 15
  1428                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1429  000C10  C0BD  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1430                           
  1431                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1432  000C14  0100               	movlb	0	; () banked
  1433  000C16  ADBE               	btfss	CANsendMessage@flags& (0+255),6,b
  1434  000C18  D003               	goto	l374
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1438  000C1A  010F               	movlb	15	; () banked
  1439  000C1C  8D45               	bsf	69,6,b	;volatile
  1440  000C1E  D002               	goto	l375
  1441  000C20                     l374:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;inc\CANlib.h: 302: else
  1445                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1446  000C20  010F               	movlb	15	; () banked
  1447  000C22  9D45               	bcf	69,6,b	;volatile
  1448  000C24                     l375:
  1449                           
  1450                           ; BSR set to: 15
  1451                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1452  000C24  0100               	movlb	0	; () banked
  1453  000C26  A7BE               	btfss	CANsendMessage@flags& (0+255),3,b
  1454  000C28  D079               	goto	l376
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;inc\CANlib.h: 306: {
  1458                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1459  000C2A  0100               	movlb	0	; () banked
  1460  000C2C  51B7               	movf	CANsendMessage@identifier& (0+255),w,b
  1461  000C2E  0100               	movlb	0	; () banked
  1462  000C30  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  1463  000C32  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1464  000C34  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1465  000C36  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1469  000C38  C0C3  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1473  000C3C  0E00               	movlw	0
  1474  000C3E  0100               	movlb	0	; () banked
  1475  000C40  15B7               	andwf	CANsendMessage@identifier& (0+255),w,b
  1476  000C42  0100               	movlb	0	; () banked
  1477  000C44  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  1478  000C46  0EFF               	movlw	255
  1479  000C48  0100               	movlb	0	; () banked
  1480  000C4A  15B8               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1481  000C4C  0100               	movlb	0	; () banked
  1482  000C4E  6FC4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1483  000C50  0E00               	movlw	0
  1484  000C52  0100               	movlb	0	; () banked
  1485  000C54  15B9               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1486  000C56  0100               	movlb	0	; () banked
  1487  000C58  6FC5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1488  000C5A  0E00               	movlw	0
  1489  000C5C  0100               	movlb	0	; () banked
  1490  000C5E  15BA               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1491  000C60  0100               	movlb	0	; () banked
  1492  000C62  6FC6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1496  000C64  C0C3  F0BF         	movff	CANsendMessage@tamp,??_CANsendMessage
  1497  000C68  C0C4  F0C0         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1498  000C6C  C0C5  F0C1         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1499  000C70  C0C6  F0C2         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1500  000C74  C0C0  F0BF         	movff	??_CANsendMessage+1,??_CANsendMessage
  1501  000C78  C0C1  F0C0         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1502  000C7C  C0C2  F0C1         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1503  000C80  0100               	movlb	0	; () banked
  1504  000C82  6BC2               	clrf	(??_CANsendMessage+3)& (0+255),b
  1505  000C84  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  1506  000C88  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1507  000C8C  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1508  000C90  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1512  000C94  C0C3  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1516  000C98  0E00               	movlw	0
  1517  000C9A  010F               	movlb	15	; () banked
  1518  000C9C  6F42               	movwf	66,b	;volatile
  1519                           
  1520                           ; BSR set to: 15
  1521                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1522  000C9E  010F               	movlb	15	; () banked
  1523  000CA0  8742               	bsf	66,3,b	;volatile
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1527  000CA2  0100               	movlb	0	; () banked
  1528  000CA4  A1B9               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1529  000CA6  D002               	goto	l377
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1533  000CA8  010F               	movlb	15	; () banked
  1534  000CAA  8142               	bsf	66,0,b	;volatile
  1535  000CAC                     l377:
  1536                           
  1537                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1538  000CAC  0100               	movlb	0	; () banked
  1539  000CAE  A3B9               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1540  000CB0  D002               	goto	l378
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1544  000CB2  010F               	movlb	15	; () banked
  1545  000CB4  8342               	bsf	66,1,b	;volatile
  1546  000CB6                     l378:
  1547                           
  1548                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1549  000CB6  0100               	movlb	0	; () banked
  1550  000CB8  A5B9               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1551  000CBA  D002               	goto	l379
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1555  000CBC  010F               	movlb	15	; () banked
  1556  000CBE  8B42               	bsf	66,5,b	;volatile
  1557  000CC0                     l379:
  1558                           
  1559                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1560  000CC0  0100               	movlb	0	; () banked
  1561  000CC2  A7B9               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1562  000CC4  D002               	goto	l380
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1566  000CC6  010F               	movlb	15	; () banked
  1567  000CC8  8D42               	bsf	66,6,b	;volatile
  1568  000CCA                     l380:
  1569                           
  1570                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1571  000CCA  0100               	movlb	0	; () banked
  1572  000CCC  A9B9               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1573  000CCE  D002               	goto	l3192
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1577  000CD0  010F               	movlb	15	; () banked
  1578  000CD2  8F42               	bsf	66,7,b	;volatile
  1579  000CD4                     l3192:
  1580                           
  1581                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1582  000CD4  C0B7  F0BF         	movff	CANsendMessage@identifier,??_CANsendMessage
  1583  000CD8  C0B8  F0C0         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1584  000CDC  C0B9  F0C1         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1585  000CE0  C0BA  F0C2         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1586  000CE4  0E16               	movlw	22
  1587  000CE6  D006               	goto	u3350
  1588  000CE8                     u3355:
  1589  000CE8  0100               	movlb	0	; () banked
  1590  000CEA  90D8               	bcf	status,0,c
  1591  000CEC  33C2               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1592  000CEE  33C1               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1593  000CF0  33C0               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1594  000CF2  33BF               	rrcf	??_CANsendMessage& (0+255),f,b
  1595  000CF4                     u3350:
  1596  000CF4  2EE8               	decfsz	wreg,f,c
  1597  000CF6  D7F8               	goto	u3355
  1598  000CF8  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  1599  000CFC  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1600  000D00  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1601  000D04  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1605  000D08  0100               	movlb	0	; () banked
  1606  000D0A  51C3               	movf	CANsendMessage@tamp& (0+255),w,b
  1607  000D0C  0100               	movlb	0	; () banked
  1608  000D0E  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  1609  000D10  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1610  000D12  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1611  000D14  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1615  000D16  C0C3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1616                           
  1617                           ;inc\CANlib.h: 332: }
  1618  000D1A  D059               	goto	l3212
  1619  000D1C                     l376:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;inc\CANlib.h: 334: else
  1623                           ;inc\CANlib.h: 336: {
  1624                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1625  000D1C  010F               	movlb	15	; () banked
  1626  000D1E  9742               	bcf	66,3,b	;volatile
  1627                           
  1628                           ; BSR set to: 15
  1629                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1630  000D20  C0B7  F0BF         	movff	CANsendMessage@identifier,??_CANsendMessage
  1631  000D24  C0B8  F0C0         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1632  000D28  C0B9  F0C1         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1633  000D2C  C0BA  F0C2         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1634  000D30  0E04               	movlw	4
  1635  000D32  D006               	goto	u3360
  1636  000D34                     u3365:
  1637  000D34  0100               	movlb	0	; () banked
  1638  000D36  90D8               	bcf	status,0,c
  1639  000D38  33C2               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1640  000D3A  33C1               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1641  000D3C  33C0               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1642  000D3E  33BF               	rrcf	??_CANsendMessage& (0+255),f,b
  1643  000D40                     u3360:
  1644  000D40  2EE8               	decfsz	wreg,f,c
  1645  000D42  D7F8               	goto	u3365
  1646  000D44  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  1647  000D48  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1648  000D4C  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1649  000D50  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1653  000D54  0100               	movlb	0	; () banked
  1654  000D56  51C3               	movf	CANsendMessage@tamp& (0+255),w,b
  1655  000D58  0100               	movlb	0	; () banked
  1656  000D5A  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  1657  000D5C  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1658  000D5E  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1659  000D60  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1663  000D62  C0C3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1667  000D66  0E07               	movlw	7
  1668  000D68  0100               	movlb	0	; () banked
  1669  000D6A  15B7               	andwf	CANsendMessage@identifier& (0+255),w,b
  1670  000D6C  0100               	movlb	0	; () banked
  1671  000D6E  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  1672  000D70  0E00               	movlw	0
  1673  000D72  0100               	movlb	0	; () banked
  1674  000D74  15B8               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1675  000D76  0100               	movlb	0	; () banked
  1676  000D78  6FC4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1677  000D7A  0E00               	movlw	0
  1678  000D7C  0100               	movlb	0	; () banked
  1679  000D7E  15B9               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1680  000D80  0100               	movlb	0	; () banked
  1681  000D82  6FC5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1682  000D84  0E00               	movlw	0
  1683  000D86  0100               	movlb	0	; () banked
  1684  000D88  15BA               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1685  000D8A  0100               	movlb	0	; () banked
  1686  000D8C  6FC6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1690  000D8E  C0C3  F0BF         	movff	CANsendMessage@tamp,??_CANsendMessage
  1691  000D92  C0C4  F0C0         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1692  000D96  C0C5  F0C1         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1693  000D9A  C0C6  F0C2         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1694  000D9E  0E05               	movlw	5
  1695  000DA0                     u3375:
  1696  000DA0  90D8               	bcf	status,0,c
  1697  000DA2  0100               	movlb	0	; () banked
  1698  000DA4  37BF               	rlcf	??_CANsendMessage& (0+255),f,b
  1699  000DA6  37C0               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1700  000DA8  37C1               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1701  000DAA  37C2               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1702  000DAC  2EE8               	decfsz	wreg,f,c
  1703  000DAE  D7F8               	goto	u3375
  1704  000DB0  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  1705  000DB4  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1706  000DB8  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1707  000DBC  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1711  000DC0  010F               	movlb	15	; () banked
  1712  000DC2  5142               	movf	66,w,b	;volatile
  1713  000DC4  0B1F               	andlw	31
  1714  000DC6  010F               	movlb	15	; () banked
  1715  000DC8  6F42               	movwf	66,b	;volatile
  1716                           
  1717                           ; BSR set to: 15
  1718                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1719  000DCA  C0C3  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1720  000DCE                     l3212:
  1721                           
  1722                           ;inc\CANlib.h: 347: }
  1723                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1724  000DCE  0100               	movlb	0	; () banked
  1725  000DD0  A1BE               	btfss	CANsendMessage@flags& (0+255),0,b
  1726  000DD2  D003               	goto	l383
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1730  000DD4  010F               	movlb	15	; () banked
  1731  000DD6  8140               	bsf	64,0,b	;volatile
  1732  000DD8  D002               	goto	l384
  1733  000DDA                     l383:
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;inc\CANlib.h: 351: else
  1737                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1738  000DDA  010F               	movlb	15	; () banked
  1739  000DDC  9140               	bcf	64,0,b	;volatile
  1740  000DDE                     l384:
  1741                           
  1742                           ; BSR set to: 15
  1743                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1744  000DDE  0100               	movlb	0	; () banked
  1745  000DE0  A3BE               	btfss	CANsendMessage@flags& (0+255),1,b
  1746  000DE2  D003               	goto	l385
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1750  000DE4  010F               	movlb	15	; () banked
  1751  000DE6  8340               	bsf	64,1,b	;volatile
  1752  000DE8  D002               	goto	l3218
  1753  000DEA                     l385:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;inc\CANlib.h: 355: else
  1757                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1758  000DEA  010F               	movlb	15	; () banked
  1759  000DEC  9340               	bcf	64,1,b	;volatile
  1760  000DEE                     l3218:
  1761                           
  1762                           ; BSR set to: 15
  1763                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1764  000DEE  C0BB  FFD9         	movff	CANsendMessage@data,fsr2l
  1765  000DF2  C0BC  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1766  000DF6  50DF               	movf	indf2,w,c
  1767  000DF8  010F               	movlb	15	; () banked
  1768  000DFA  6F46               	movwf	70,b	;volatile
  1769                           
  1770                           ; BSR set to: 15
  1771                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1772  000DFC  0100               	movlb	0	; () banked
  1773  000DFE  EE20 F001          	lfsr	2,1
  1774  000E02  51BB               	movf	CANsendMessage@data& (0+255),w,b
  1775  000E04  26D9               	addwf	fsr2l,f,c
  1776  000E06  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1777  000E08  22DA               	addwfc	fsr2h,f,c
  1778  000E0A  50DF               	movf	indf2,w,c
  1779  000E0C  010F               	movlb	15	; () banked
  1780  000E0E  6F47               	movwf	71,b	;volatile
  1781                           
  1782                           ; BSR set to: 15
  1783                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1784  000E10  0100               	movlb	0	; () banked
  1785  000E12  EE20 F002          	lfsr	2,2
  1786  000E16  51BB               	movf	CANsendMessage@data& (0+255),w,b
  1787  000E18  26D9               	addwf	fsr2l,f,c
  1788  000E1A  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1789  000E1C  22DA               	addwfc	fsr2h,f,c
  1790  000E1E  50DF               	movf	indf2,w,c
  1791  000E20  010F               	movlb	15	; () banked
  1792  000E22  6F48               	movwf	72,b	;volatile
  1793                           
  1794                           ; BSR set to: 15
  1795                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1796  000E24  0100               	movlb	0	; () banked
  1797  000E26  EE20 F003          	lfsr	2,3
  1798  000E2A  51BB               	movf	CANsendMessage@data& (0+255),w,b
  1799  000E2C  26D9               	addwf	fsr2l,f,c
  1800  000E2E  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1801  000E30  22DA               	addwfc	fsr2h,f,c
  1802  000E32  50DF               	movf	indf2,w,c
  1803  000E34  010F               	movlb	15	; () banked
  1804  000E36  6F49               	movwf	73,b	;volatile
  1805                           
  1806                           ; BSR set to: 15
  1807                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1808  000E38  0100               	movlb	0	; () banked
  1809  000E3A  EE20 F004          	lfsr	2,4
  1810  000E3E  51BB               	movf	CANsendMessage@data& (0+255),w,b
  1811  000E40  26D9               	addwf	fsr2l,f,c
  1812  000E42  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1813  000E44  22DA               	addwfc	fsr2h,f,c
  1814  000E46  50DF               	movf	indf2,w,c
  1815  000E48  010F               	movlb	15	; () banked
  1816  000E4A  6F4A               	movwf	74,b	;volatile
  1817                           
  1818                           ; BSR set to: 15
  1819                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1820  000E4C  0100               	movlb	0	; () banked
  1821  000E4E  EE20 F005          	lfsr	2,5
  1822  000E52  51BB               	movf	CANsendMessage@data& (0+255),w,b
  1823  000E54  26D9               	addwf	fsr2l,f,c
  1824  000E56  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1825  000E58  22DA               	addwfc	fsr2h,f,c
  1826  000E5A  50DF               	movf	indf2,w,c
  1827  000E5C  010F               	movlb	15	; () banked
  1828  000E5E  6F4B               	movwf	75,b	;volatile
  1829                           
  1830                           ; BSR set to: 15
  1831                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1832  000E60  0100               	movlb	0	; () banked
  1833  000E62  EE20 F006          	lfsr	2,6
  1834  000E66  51BB               	movf	CANsendMessage@data& (0+255),w,b
  1835  000E68  26D9               	addwf	fsr2l,f,c
  1836  000E6A  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1837  000E6C  22DA               	addwfc	fsr2h,f,c
  1838  000E6E  50DF               	movf	indf2,w,c
  1839  000E70  010F               	movlb	15	; () banked
  1840  000E72  6F4C               	movwf	76,b	;volatile
  1841                           
  1842                           ; BSR set to: 15
  1843                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1844  000E74  0100               	movlb	0	; () banked
  1845  000E76  EE20 F007          	lfsr	2,7
  1846  000E7A  51BB               	movf	CANsendMessage@data& (0+255),w,b
  1847  000E7C  26D9               	addwf	fsr2l,f,c
  1848  000E7E  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1849  000E80  22DA               	addwfc	fsr2h,f,c
  1850  000E82  50DF               	movf	indf2,w,c
  1851  000E84  010F               	movlb	15	; () banked
  1852  000E86  6F4D               	movwf	77,b	;volatile
  1853                           
  1854                           ; BSR set to: 15
  1855                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1856  000E88  010F               	movlb	15	; () banked
  1857  000E8A  8740               	bsf	64,3,b	;volatile
  1858                           
  1859                           ; BSR set to: 15
  1860                           ;inc\CANlib.h: 368: return;
  1861  000E8C  0012               	return	
  1862  000E8E                     l373:
  1863                           
  1864                           ; BSR set to: 15
  1865                           ;inc\CANlib.h: 369: }
  1866                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1867  000E8E  010F               	movlb	15	; () banked
  1868  000E90  B730               	btfsc	48,3,b	;volatile
  1869  000E92  D13F               	goto	l388
  1870                           
  1871                           ; BSR set to: 15
  1872                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1873  000E94  C0BD  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1874                           
  1875                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1876  000E98  0100               	movlb	0	; () banked
  1877  000E9A  ADBE               	btfss	CANsendMessage@flags& (0+255),6,b
  1878  000E9C  D003               	goto	l389
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1882  000E9E  010F               	movlb	15	; () banked
  1883  000EA0  8D35               	bsf	53,6,b	;volatile
  1884  000EA2  D002               	goto	l390
  1885  000EA4                     l389:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;inc\CANlib.h: 378: else
  1889                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1890  000EA4  010F               	movlb	15	; () banked
  1891  000EA6  9D35               	bcf	53,6,b	;volatile
  1892  000EA8                     l390:
  1893                           
  1894                           ; BSR set to: 15
  1895                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1896  000EA8  0100               	movlb	0	; () banked
  1897  000EAA  A7BE               	btfss	CANsendMessage@flags& (0+255),3,b
  1898  000EAC  D079               	goto	l391
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;inc\CANlib.h: 382: {
  1902                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1903  000EAE  0100               	movlb	0	; () banked
  1904  000EB0  51B7               	movf	CANsendMessage@identifier& (0+255),w,b
  1905  000EB2  0100               	movlb	0	; () banked
  1906  000EB4  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  1907  000EB6  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1908  000EB8  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1909  000EBA  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1913  000EBC  C0C3  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1917  000EC0  0E00               	movlw	0
  1918  000EC2  0100               	movlb	0	; () banked
  1919  000EC4  15B7               	andwf	CANsendMessage@identifier& (0+255),w,b
  1920  000EC6  0100               	movlb	0	; () banked
  1921  000EC8  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  1922  000ECA  0EFF               	movlw	255
  1923  000ECC  0100               	movlb	0	; () banked
  1924  000ECE  15B8               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1925  000ED0  0100               	movlb	0	; () banked
  1926  000ED2  6FC4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1927  000ED4  0E00               	movlw	0
  1928  000ED6  0100               	movlb	0	; () banked
  1929  000ED8  15B9               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1930  000EDA  0100               	movlb	0	; () banked
  1931  000EDC  6FC5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1932  000EDE  0E00               	movlw	0
  1933  000EE0  0100               	movlb	0	; () banked
  1934  000EE2  15BA               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1935  000EE4  0100               	movlb	0	; () banked
  1936  000EE6  6FC6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1940  000EE8  C0C3  F0BF         	movff	CANsendMessage@tamp,??_CANsendMessage
  1941  000EEC  C0C4  F0C0         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1942  000EF0  C0C5  F0C1         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1943  000EF4  C0C6  F0C2         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1944  000EF8  C0C0  F0BF         	movff	??_CANsendMessage+1,??_CANsendMessage
  1945  000EFC  C0C1  F0C0         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1946  000F00  C0C2  F0C1         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1947  000F04  0100               	movlb	0	; () banked
  1948  000F06  6BC2               	clrf	(??_CANsendMessage+3)& (0+255),b
  1949  000F08  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  1950  000F0C  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1951  000F10  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1952  000F14  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1956  000F18  C0C3  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1960  000F1C  0E00               	movlw	0
  1961  000F1E  010F               	movlb	15	; () banked
  1962  000F20  6F32               	movwf	50,b	;volatile
  1963                           
  1964                           ; BSR set to: 15
  1965                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1966  000F22  010F               	movlb	15	; () banked
  1967  000F24  8732               	bsf	50,3,b	;volatile
  1968                           
  1969                           ; BSR set to: 15
  1970                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1971  000F26  0100               	movlb	0	; () banked
  1972  000F28  A1B9               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1973  000F2A  D002               	goto	l392
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1977  000F2C  010F               	movlb	15	; () banked
  1978  000F2E  8132               	bsf	50,0,b	;volatile
  1979  000F30                     l392:
  1980                           
  1981                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1982  000F30  0100               	movlb	0	; () banked
  1983  000F32  A3B9               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1984  000F34  D002               	goto	l393
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1988  000F36  010F               	movlb	15	; () banked
  1989  000F38  8332               	bsf	50,1,b	;volatile
  1990  000F3A                     l393:
  1991                           
  1992                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1993  000F3A  0100               	movlb	0	; () banked
  1994  000F3C  A5B9               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1995  000F3E  D002               	goto	l394
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1999  000F40  010F               	movlb	15	; () banked
  2000  000F42  8B32               	bsf	50,5,b	;volatile
  2001  000F44                     l394:
  2002                           
  2003                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2004  000F44  0100               	movlb	0	; () banked
  2005  000F46  A7B9               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2006  000F48  D002               	goto	l395
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2010  000F4A  010F               	movlb	15	; () banked
  2011  000F4C  8D32               	bsf	50,6,b	;volatile
  2012  000F4E                     l395:
  2013                           
  2014                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2015  000F4E  0100               	movlb	0	; () banked
  2016  000F50  A9B9               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2017  000F52  D002               	goto	l3268
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2021  000F54  010F               	movlb	15	; () banked
  2022  000F56  8F32               	bsf	50,7,b	;volatile
  2023  000F58                     l3268:
  2024                           
  2025                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2026  000F58  C0B7  F0BF         	movff	CANsendMessage@identifier,??_CANsendMessage
  2027  000F5C  C0B8  F0C0         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2028  000F60  C0B9  F0C1         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2029  000F64  C0BA  F0C2         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2030  000F68  0E16               	movlw	22
  2031  000F6A  D006               	goto	u3480
  2032  000F6C                     u3485:
  2033  000F6C  0100               	movlb	0	; () banked
  2034  000F6E  90D8               	bcf	status,0,c
  2035  000F70  33C2               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2036  000F72  33C1               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2037  000F74  33C0               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2038  000F76  33BF               	rrcf	??_CANsendMessage& (0+255),f,b
  2039  000F78                     u3480:
  2040  000F78  2EE8               	decfsz	wreg,f,c
  2041  000F7A  D7F8               	goto	u3485
  2042  000F7C  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2043  000F80  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2044  000F84  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2045  000F88  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2049  000F8C  0100               	movlb	0	; () banked
  2050  000F8E  51C3               	movf	CANsendMessage@tamp& (0+255),w,b
  2051  000F90  0100               	movlb	0	; () banked
  2052  000F92  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2053  000F94  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2054  000F96  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2055  000F98  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2059  000F9A  C0C3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2060                           
  2061                           ;inc\CANlib.h: 407: }
  2062  000F9E  D059               	goto	l3288
  2063  000FA0                     l391:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;inc\CANlib.h: 409: else
  2067                           ;inc\CANlib.h: 411: {
  2068                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2069  000FA0  010F               	movlb	15	; () banked
  2070  000FA2  9732               	bcf	50,3,b	;volatile
  2071                           
  2072                           ; BSR set to: 15
  2073                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2074  000FA4  C0B7  F0BF         	movff	CANsendMessage@identifier,??_CANsendMessage
  2075  000FA8  C0B8  F0C0         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2076  000FAC  C0B9  F0C1         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2077  000FB0  C0BA  F0C2         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2078  000FB4  0E04               	movlw	4
  2079  000FB6  D006               	goto	u3490
  2080  000FB8                     u3495:
  2081  000FB8  0100               	movlb	0	; () banked
  2082  000FBA  90D8               	bcf	status,0,c
  2083  000FBC  33C2               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2084  000FBE  33C1               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2085  000FC0  33C0               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2086  000FC2  33BF               	rrcf	??_CANsendMessage& (0+255),f,b
  2087  000FC4                     u3490:
  2088  000FC4  2EE8               	decfsz	wreg,f,c
  2089  000FC6  D7F8               	goto	u3495
  2090  000FC8  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2091  000FCC  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2092  000FD0  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2093  000FD4  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2097  000FD8  0100               	movlb	0	; () banked
  2098  000FDA  51C3               	movf	CANsendMessage@tamp& (0+255),w,b
  2099  000FDC  0100               	movlb	0	; () banked
  2100  000FDE  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2101  000FE0  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2102  000FE2  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2103  000FE4  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2107  000FE6  C0C3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2111  000FEA  0E07               	movlw	7
  2112  000FEC  0100               	movlb	0	; () banked
  2113  000FEE  15B7               	andwf	CANsendMessage@identifier& (0+255),w,b
  2114  000FF0  0100               	movlb	0	; () banked
  2115  000FF2  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2116  000FF4  0E00               	movlw	0
  2117  000FF6  0100               	movlb	0	; () banked
  2118  000FF8  15B8               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2119  000FFA  0100               	movlb	0	; () banked
  2120  000FFC  6FC4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2121  000FFE  0E00               	movlw	0
  2122  001000  0100               	movlb	0	; () banked
  2123  001002  15B9               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2124  001004  0100               	movlb	0	; () banked
  2125  001006  6FC5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2126  001008  0E00               	movlw	0
  2127  00100A  0100               	movlb	0	; () banked
  2128  00100C  15BA               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2129  00100E  0100               	movlb	0	; () banked
  2130  001010  6FC6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2134  001012  C0C3  F0BF         	movff	CANsendMessage@tamp,??_CANsendMessage
  2135  001016  C0C4  F0C0         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2136  00101A  C0C5  F0C1         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2137  00101E  C0C6  F0C2         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2138  001022  0E05               	movlw	5
  2139  001024                     u3505:
  2140  001024  90D8               	bcf	status,0,c
  2141  001026  0100               	movlb	0	; () banked
  2142  001028  37BF               	rlcf	??_CANsendMessage& (0+255),f,b
  2143  00102A  37C0               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2144  00102C  37C1               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2145  00102E  37C2               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2146  001030  2EE8               	decfsz	wreg,f,c
  2147  001032  D7F8               	goto	u3505
  2148  001034  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2149  001038  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2150  00103C  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2151  001040  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2155  001044  010F               	movlb	15	; () banked
  2156  001046  5132               	movf	50,w,b	;volatile
  2157  001048  0B1F               	andlw	31
  2158  00104A  010F               	movlb	15	; () banked
  2159  00104C  6F32               	movwf	50,b	;volatile
  2160                           
  2161                           ; BSR set to: 15
  2162                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2163  00104E  C0C3  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2164  001052                     l3288:
  2165                           
  2166                           ;inc\CANlib.h: 422: }
  2167                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2168  001052  0100               	movlb	0	; () banked
  2169  001054  A1BE               	btfss	CANsendMessage@flags& (0+255),0,b
  2170  001056  D003               	goto	l398
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2174  001058  010F               	movlb	15	; () banked
  2175  00105A  8130               	bsf	48,0,b	;volatile
  2176  00105C  D002               	goto	l399
  2177  00105E                     l398:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;inc\CANlib.h: 426: else
  2181                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2182  00105E  010F               	movlb	15	; () banked
  2183  001060  9130               	bcf	48,0,b	;volatile
  2184  001062                     l399:
  2185                           
  2186                           ; BSR set to: 15
  2187                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2188  001062  0100               	movlb	0	; () banked
  2189  001064  A3BE               	btfss	CANsendMessage@flags& (0+255),1,b
  2190  001066  D003               	goto	l400
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2194  001068  010F               	movlb	15	; () banked
  2195  00106A  8330               	bsf	48,1,b	;volatile
  2196  00106C  D002               	goto	l3294
  2197  00106E                     l400:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;inc\CANlib.h: 430: else
  2201                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2202  00106E  010F               	movlb	15	; () banked
  2203  001070  9330               	bcf	48,1,b	;volatile
  2204  001072                     l3294:
  2205                           
  2206                           ; BSR set to: 15
  2207                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2208  001072  C0BB  FFD9         	movff	CANsendMessage@data,fsr2l
  2209  001076  C0BC  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2210  00107A  50DF               	movf	indf2,w,c
  2211  00107C  010F               	movlb	15	; () banked
  2212  00107E  6F36               	movwf	54,b	;volatile
  2213                           
  2214                           ; BSR set to: 15
  2215                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2216  001080  0100               	movlb	0	; () banked
  2217  001082  EE20 F001          	lfsr	2,1
  2218  001086  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2219  001088  26D9               	addwf	fsr2l,f,c
  2220  00108A  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2221  00108C  22DA               	addwfc	fsr2h,f,c
  2222  00108E  50DF               	movf	indf2,w,c
  2223  001090  010F               	movlb	15	; () banked
  2224  001092  6F37               	movwf	55,b	;volatile
  2225                           
  2226                           ; BSR set to: 15
  2227                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2228  001094  0100               	movlb	0	; () banked
  2229  001096  EE20 F002          	lfsr	2,2
  2230  00109A  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2231  00109C  26D9               	addwf	fsr2l,f,c
  2232  00109E  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2233  0010A0  22DA               	addwfc	fsr2h,f,c
  2234  0010A2  50DF               	movf	indf2,w,c
  2235  0010A4  010F               	movlb	15	; () banked
  2236  0010A6  6F38               	movwf	56,b	;volatile
  2237                           
  2238                           ; BSR set to: 15
  2239                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2240  0010A8  0100               	movlb	0	; () banked
  2241  0010AA  EE20 F003          	lfsr	2,3
  2242  0010AE  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2243  0010B0  26D9               	addwf	fsr2l,f,c
  2244  0010B2  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2245  0010B4  22DA               	addwfc	fsr2h,f,c
  2246  0010B6  50DF               	movf	indf2,w,c
  2247  0010B8  010F               	movlb	15	; () banked
  2248  0010BA  6F39               	movwf	57,b	;volatile
  2249                           
  2250                           ; BSR set to: 15
  2251                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2252  0010BC  0100               	movlb	0	; () banked
  2253  0010BE  EE20 F004          	lfsr	2,4
  2254  0010C2  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2255  0010C4  26D9               	addwf	fsr2l,f,c
  2256  0010C6  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2257  0010C8  22DA               	addwfc	fsr2h,f,c
  2258  0010CA  50DF               	movf	indf2,w,c
  2259  0010CC  010F               	movlb	15	; () banked
  2260  0010CE  6F3A               	movwf	58,b	;volatile
  2261                           
  2262                           ; BSR set to: 15
  2263                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2264  0010D0  0100               	movlb	0	; () banked
  2265  0010D2  EE20 F005          	lfsr	2,5
  2266  0010D6  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2267  0010D8  26D9               	addwf	fsr2l,f,c
  2268  0010DA  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2269  0010DC  22DA               	addwfc	fsr2h,f,c
  2270  0010DE  50DF               	movf	indf2,w,c
  2271  0010E0  010F               	movlb	15	; () banked
  2272  0010E2  6F3B               	movwf	59,b	;volatile
  2273                           
  2274                           ; BSR set to: 15
  2275                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2276  0010E4  0100               	movlb	0	; () banked
  2277  0010E6  EE20 F006          	lfsr	2,6
  2278  0010EA  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2279  0010EC  26D9               	addwf	fsr2l,f,c
  2280  0010EE  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2281  0010F0  22DA               	addwfc	fsr2h,f,c
  2282  0010F2  50DF               	movf	indf2,w,c
  2283  0010F4  010F               	movlb	15	; () banked
  2284  0010F6  6F3C               	movwf	60,b	;volatile
  2285                           
  2286                           ; BSR set to: 15
  2287                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2288  0010F8  0100               	movlb	0	; () banked
  2289  0010FA  EE20 F007          	lfsr	2,7
  2290  0010FE  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2291  001100  26D9               	addwf	fsr2l,f,c
  2292  001102  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2293  001104  22DA               	addwfc	fsr2h,f,c
  2294  001106  50DF               	movf	indf2,w,c
  2295  001108  010F               	movlb	15	; () banked
  2296  00110A  6F3D               	movwf	61,b	;volatile
  2297                           
  2298                           ; BSR set to: 15
  2299                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2300  00110C  010F               	movlb	15	; () banked
  2301  00110E  8730               	bsf	48,3,b	;volatile
  2302                           
  2303                           ; BSR set to: 15
  2304                           ;inc\CANlib.h: 444: return;
  2305  001110  0012               	return	
  2306  001112                     l388:
  2307                           
  2308                           ; BSR set to: 15
  2309                           ;inc\CANlib.h: 445: }
  2310                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2311  001112  010F               	movlb	15	; () banked
  2312  001114  B720               	btfsc	32,3,b	;volatile
  2313  001116  0012               	return	
  2314                           
  2315                           ; BSR set to: 15
  2316                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2317  001118  C0BD  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2318                           
  2319                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2320  00111C  0100               	movlb	0	; () banked
  2321  00111E  ADBE               	btfss	CANsendMessage@flags& (0+255),6,b
  2322  001120  D003               	goto	l403
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2326  001122  010F               	movlb	15	; () banked
  2327  001124  8D25               	bsf	37,6,b	;volatile
  2328  001126  D002               	goto	l404
  2329  001128                     l403:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;inc\CANlib.h: 454: else
  2333                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2334  001128  010F               	movlb	15	; () banked
  2335  00112A  9D25               	bcf	37,6,b	;volatile
  2336  00112C                     l404:
  2337                           
  2338                           ; BSR set to: 15
  2339                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2340  00112C  0100               	movlb	0	; () banked
  2341  00112E  A7BE               	btfss	CANsendMessage@flags& (0+255),3,b
  2342  001130  D079               	goto	l405
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;inc\CANlib.h: 458: {
  2346                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2347  001132  0100               	movlb	0	; () banked
  2348  001134  51B7               	movf	CANsendMessage@identifier& (0+255),w,b
  2349  001136  0100               	movlb	0	; () banked
  2350  001138  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2351  00113A  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2352  00113C  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2353  00113E  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2357  001140  C0C3  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2361  001144  0E00               	movlw	0
  2362  001146  0100               	movlb	0	; () banked
  2363  001148  15B7               	andwf	CANsendMessage@identifier& (0+255),w,b
  2364  00114A  0100               	movlb	0	; () banked
  2365  00114C  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2366  00114E  0EFF               	movlw	255
  2367  001150  0100               	movlb	0	; () banked
  2368  001152  15B8               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2369  001154  0100               	movlb	0	; () banked
  2370  001156  6FC4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2371  001158  0E00               	movlw	0
  2372  00115A  0100               	movlb	0	; () banked
  2373  00115C  15B9               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2374  00115E  0100               	movlb	0	; () banked
  2375  001160  6FC5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2376  001162  0E00               	movlw	0
  2377  001164  0100               	movlb	0	; () banked
  2378  001166  15BA               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2379  001168  0100               	movlb	0	; () banked
  2380  00116A  6FC6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2384  00116C  C0C3  F0BF         	movff	CANsendMessage@tamp,??_CANsendMessage
  2385  001170  C0C4  F0C0         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2386  001174  C0C5  F0C1         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2387  001178  C0C6  F0C2         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2388  00117C  C0C0  F0BF         	movff	??_CANsendMessage+1,??_CANsendMessage
  2389  001180  C0C1  F0C0         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2390  001184  C0C2  F0C1         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2391  001188  0100               	movlb	0	; () banked
  2392  00118A  6BC2               	clrf	(??_CANsendMessage+3)& (0+255),b
  2393  00118C  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2394  001190  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2395  001194  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2396  001198  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2400  00119C  C0C3  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2404  0011A0  0E00               	movlw	0
  2405  0011A2  010F               	movlb	15	; () banked
  2406  0011A4  6F22               	movwf	34,b	;volatile
  2407                           
  2408                           ; BSR set to: 15
  2409                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2410  0011A6  010F               	movlb	15	; () banked
  2411  0011A8  8722               	bsf	34,3,b	;volatile
  2412                           
  2413                           ; BSR set to: 15
  2414                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2415  0011AA  0100               	movlb	0	; () banked
  2416  0011AC  A1B9               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2417  0011AE  D002               	goto	l406
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2421  0011B0  010F               	movlb	15	; () banked
  2422  0011B2  8122               	bsf	34,0,b	;volatile
  2423  0011B4                     l406:
  2424                           
  2425                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2426  0011B4  0100               	movlb	0	; () banked
  2427  0011B6  A3B9               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2428  0011B8  D002               	goto	l407
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2432  0011BA  010F               	movlb	15	; () banked
  2433  0011BC  8322               	bsf	34,1,b	;volatile
  2434  0011BE                     l407:
  2435                           
  2436                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2437  0011BE  0100               	movlb	0	; () banked
  2438  0011C0  A5B9               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2439  0011C2  D002               	goto	l408
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2443  0011C4  010F               	movlb	15	; () banked
  2444  0011C6  8B22               	bsf	34,5,b	;volatile
  2445  0011C8                     l408:
  2446                           
  2447                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2448  0011C8  0100               	movlb	0	; () banked
  2449  0011CA  A7B9               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2450  0011CC  D002               	goto	l409
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2454  0011CE  010F               	movlb	15	; () banked
  2455  0011D0  8D22               	bsf	34,6,b	;volatile
  2456  0011D2                     l409:
  2457                           
  2458                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2459  0011D2  0100               	movlb	0	; () banked
  2460  0011D4  A9B9               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2461  0011D6  D002               	goto	l3344
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2465  0011D8  010F               	movlb	15	; () banked
  2466  0011DA  8F22               	bsf	34,7,b	;volatile
  2467  0011DC                     l3344:
  2468                           
  2469                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2470  0011DC  C0B7  F0BF         	movff	CANsendMessage@identifier,??_CANsendMessage
  2471  0011E0  C0B8  F0C0         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2472  0011E4  C0B9  F0C1         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2473  0011E8  C0BA  F0C2         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2474  0011EC  0E16               	movlw	22
  2475  0011EE  D006               	goto	u3610
  2476  0011F0                     u3615:
  2477  0011F0  0100               	movlb	0	; () banked
  2478  0011F2  90D8               	bcf	status,0,c
  2479  0011F4  33C2               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2480  0011F6  33C1               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2481  0011F8  33C0               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2482  0011FA  33BF               	rrcf	??_CANsendMessage& (0+255),f,b
  2483  0011FC                     u3610:
  2484  0011FC  2EE8               	decfsz	wreg,f,c
  2485  0011FE  D7F8               	goto	u3615
  2486  001200  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2487  001204  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2488  001208  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2489  00120C  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2493  001210  0100               	movlb	0	; () banked
  2494  001212  51C3               	movf	CANsendMessage@tamp& (0+255),w,b
  2495  001214  0100               	movlb	0	; () banked
  2496  001216  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2497  001218  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2498  00121A  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2499  00121C  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2503  00121E  C0C3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2504                           
  2505                           ;inc\CANlib.h: 483: }
  2506  001222  D059               	goto	l3364
  2507  001224                     l405:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;inc\CANlib.h: 485: else
  2511                           ;inc\CANlib.h: 487: {
  2512                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2513  001224  010F               	movlb	15	; () banked
  2514  001226  9722               	bcf	34,3,b	;volatile
  2515                           
  2516                           ; BSR set to: 15
  2517                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2518  001228  C0B7  F0BF         	movff	CANsendMessage@identifier,??_CANsendMessage
  2519  00122C  C0B8  F0C0         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2520  001230  C0B9  F0C1         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2521  001234  C0BA  F0C2         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2522  001238  0E04               	movlw	4
  2523  00123A  D006               	goto	u3620
  2524  00123C                     u3625:
  2525  00123C  0100               	movlb	0	; () banked
  2526  00123E  90D8               	bcf	status,0,c
  2527  001240  33C2               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2528  001242  33C1               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2529  001244  33C0               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2530  001246  33BF               	rrcf	??_CANsendMessage& (0+255),f,b
  2531  001248                     u3620:
  2532  001248  2EE8               	decfsz	wreg,f,c
  2533  00124A  D7F8               	goto	u3625
  2534  00124C  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2535  001250  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2536  001254  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2537  001258  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2541  00125C  0100               	movlb	0	; () banked
  2542  00125E  51C3               	movf	CANsendMessage@tamp& (0+255),w,b
  2543  001260  0100               	movlb	0	; () banked
  2544  001262  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2545  001264  6BC4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2546  001266  6BC5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2547  001268  6BC6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2551  00126A  C0C3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2555  00126E  0E07               	movlw	7
  2556  001270  0100               	movlb	0	; () banked
  2557  001272  15B7               	andwf	CANsendMessage@identifier& (0+255),w,b
  2558  001274  0100               	movlb	0	; () banked
  2559  001276  6FC3               	movwf	CANsendMessage@tamp& (0+255),b
  2560  001278  0E00               	movlw	0
  2561  00127A  0100               	movlb	0	; () banked
  2562  00127C  15B8               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2563  00127E  0100               	movlb	0	; () banked
  2564  001280  6FC4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2565  001282  0E00               	movlw	0
  2566  001284  0100               	movlb	0	; () banked
  2567  001286  15B9               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2568  001288  0100               	movlb	0	; () banked
  2569  00128A  6FC5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2570  00128C  0E00               	movlw	0
  2571  00128E  0100               	movlb	0	; () banked
  2572  001290  15BA               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2573  001292  0100               	movlb	0	; () banked
  2574  001294  6FC6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2578  001296  C0C3  F0BF         	movff	CANsendMessage@tamp,??_CANsendMessage
  2579  00129A  C0C4  F0C0         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2580  00129E  C0C5  F0C1         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2581  0012A2  C0C6  F0C2         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2582  0012A6  0E05               	movlw	5
  2583  0012A8                     u3635:
  2584  0012A8  90D8               	bcf	status,0,c
  2585  0012AA  0100               	movlb	0	; () banked
  2586  0012AC  37BF               	rlcf	??_CANsendMessage& (0+255),f,b
  2587  0012AE  37C0               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2588  0012B0  37C1               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2589  0012B2  37C2               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2590  0012B4  2EE8               	decfsz	wreg,f,c
  2591  0012B6  D7F8               	goto	u3635
  2592  0012B8  C0BF  F0C3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2593  0012BC  C0C0  F0C4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2594  0012C0  C0C1  F0C5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2595  0012C4  C0C2  F0C6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2599  0012C8  010F               	movlb	15	; () banked
  2600  0012CA  5122               	movf	34,w,b	;volatile
  2601  0012CC  0B1F               	andlw	31
  2602  0012CE  010F               	movlb	15	; () banked
  2603  0012D0  6F22               	movwf	34,b	;volatile
  2604                           
  2605                           ; BSR set to: 15
  2606                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2607  0012D2  C0C3  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2608  0012D6                     l3364:
  2609                           
  2610                           ;inc\CANlib.h: 498: }
  2611                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2612  0012D6  0100               	movlb	0	; () banked
  2613  0012D8  A1BE               	btfss	CANsendMessage@flags& (0+255),0,b
  2614  0012DA  D003               	goto	l412
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2618  0012DC  010F               	movlb	15	; () banked
  2619  0012DE  8120               	bsf	32,0,b	;volatile
  2620  0012E0  D002               	goto	l413
  2621  0012E2                     l412:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;inc\CANlib.h: 502: else
  2625                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2626  0012E2  010F               	movlb	15	; () banked
  2627  0012E4  9120               	bcf	32,0,b	;volatile
  2628  0012E6                     l413:
  2629                           
  2630                           ; BSR set to: 15
  2631                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2632  0012E6  0100               	movlb	0	; () banked
  2633  0012E8  A3BE               	btfss	CANsendMessage@flags& (0+255),1,b
  2634  0012EA  D003               	goto	l414
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2638  0012EC  010F               	movlb	15	; () banked
  2639  0012EE  8320               	bsf	32,1,b	;volatile
  2640  0012F0  D002               	goto	l3370
  2641  0012F2                     l414:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;inc\CANlib.h: 506: else
  2645                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2646  0012F2  010F               	movlb	15	; () banked
  2647  0012F4  9320               	bcf	32,1,b	;volatile
  2648  0012F6                     l3370:
  2649                           
  2650                           ; BSR set to: 15
  2651                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2652  0012F6  C0BB  FFD9         	movff	CANsendMessage@data,fsr2l
  2653  0012FA  C0BC  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2654  0012FE  50DF               	movf	indf2,w,c
  2655  001300  010F               	movlb	15	; () banked
  2656  001302  6F26               	movwf	38,b	;volatile
  2657                           
  2658                           ; BSR set to: 15
  2659                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2660  001304  0100               	movlb	0	; () banked
  2661  001306  EE20 F001          	lfsr	2,1
  2662  00130A  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2663  00130C  26D9               	addwf	fsr2l,f,c
  2664  00130E  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2665  001310  22DA               	addwfc	fsr2h,f,c
  2666  001312  50DF               	movf	indf2,w,c
  2667  001314  010F               	movlb	15	; () banked
  2668  001316  6F27               	movwf	39,b	;volatile
  2669                           
  2670                           ; BSR set to: 15
  2671                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2672  001318  0100               	movlb	0	; () banked
  2673  00131A  EE20 F002          	lfsr	2,2
  2674  00131E  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2675  001320  26D9               	addwf	fsr2l,f,c
  2676  001322  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2677  001324  22DA               	addwfc	fsr2h,f,c
  2678  001326  50DF               	movf	indf2,w,c
  2679  001328  010F               	movlb	15	; () banked
  2680  00132A  6F28               	movwf	40,b	;volatile
  2681                           
  2682                           ; BSR set to: 15
  2683                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2684  00132C  0100               	movlb	0	; () banked
  2685  00132E  EE20 F003          	lfsr	2,3
  2686  001332  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2687  001334  26D9               	addwf	fsr2l,f,c
  2688  001336  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2689  001338  22DA               	addwfc	fsr2h,f,c
  2690  00133A  50DF               	movf	indf2,w,c
  2691  00133C  010F               	movlb	15	; () banked
  2692  00133E  6F29               	movwf	41,b	;volatile
  2693                           
  2694                           ; BSR set to: 15
  2695                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2696  001340  0100               	movlb	0	; () banked
  2697  001342  EE20 F004          	lfsr	2,4
  2698  001346  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2699  001348  26D9               	addwf	fsr2l,f,c
  2700  00134A  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2701  00134C  22DA               	addwfc	fsr2h,f,c
  2702  00134E  50DF               	movf	indf2,w,c
  2703  001350  010F               	movlb	15	; () banked
  2704  001352  6F2A               	movwf	42,b	;volatile
  2705                           
  2706                           ; BSR set to: 15
  2707                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2708  001354  0100               	movlb	0	; () banked
  2709  001356  EE20 F005          	lfsr	2,5
  2710  00135A  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2711  00135C  26D9               	addwf	fsr2l,f,c
  2712  00135E  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2713  001360  22DA               	addwfc	fsr2h,f,c
  2714  001362  50DF               	movf	indf2,w,c
  2715  001364  010F               	movlb	15	; () banked
  2716  001366  6F2B               	movwf	43,b	;volatile
  2717                           
  2718                           ; BSR set to: 15
  2719                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2720  001368  0100               	movlb	0	; () banked
  2721  00136A  EE20 F006          	lfsr	2,6
  2722  00136E  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2723  001370  26D9               	addwf	fsr2l,f,c
  2724  001372  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2725  001374  22DA               	addwfc	fsr2h,f,c
  2726  001376  50DF               	movf	indf2,w,c
  2727  001378  010F               	movlb	15	; () banked
  2728  00137A  6F2C               	movwf	44,b	;volatile
  2729                           
  2730                           ; BSR set to: 15
  2731                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2732  00137C  0100               	movlb	0	; () banked
  2733  00137E  EE20 F007          	lfsr	2,7
  2734  001382  51BB               	movf	CANsendMessage@data& (0+255),w,b
  2735  001384  26D9               	addwf	fsr2l,f,c
  2736  001386  51BC               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2737  001388  22DA               	addwfc	fsr2h,f,c
  2738  00138A  50DF               	movf	indf2,w,c
  2739  00138C  010F               	movlb	15	; () banked
  2740  00138E  6F2D               	movwf	45,b	;volatile
  2741                           
  2742                           ; BSR set to: 15
  2743                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2744  001390  010F               	movlb	15	; () banked
  2745  001392  8720               	bsf	32,3,b	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748                           ;inc\CANlib.h: 520: return;
  2749  001394  0012               	return	
  2750  001396                     __end_of_CANsendMessage:
  2751                           	opt stack 0
  2752                           tblptru	equ	0xFF8
  2753                           tblptrh	equ	0xFF7
  2754                           tblptrl	equ	0xFF6
  2755                           tablat	equ	0xFF5
  2756                           prodh	equ	0xFF4
  2757                           prodl	equ	0xFF3
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           postdec1	equ	0xFE5
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           fsr2h	equ	0xFDA
  2764                           fsr2l	equ	0xFD9
  2765                           status	equ	0xFD8
  2766                           
  2767 ;; *************** function _CANisTxReady *****************
  2768 ;; Defined at:
  2769 ;;		line 1154 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2783 ;;      Params:         0       0       0       0
  2784 ;;      Locals:         0       1       0       0
  2785 ;;      Temps:          0       0       0       0
  2786 ;;      Totals:         0       1       0       0
  2787 ;;Total ram usage:        1 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_remote_frame_handler
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text3
  2798  002888                     __ptext3:
  2799                           	opt stack 0
  2800  002888                     _CANisTxReady:
  2801                           	opt stack 25
  2802                           
  2803                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2804                           
  2805                           ; BSR set to: 15
  2806                           ;incstack = 0
  2807  002888  0E01               	movlw	1
  2808  00288A  0100               	movlb	0	; () banked
  2809  00288C  6FB7               	movwf	_CANisTxReady$3114& (0+255),b
  2810                           
  2811                           ; BSR set to: 0
  2812  00288E  010F               	movlb	15	; () banked
  2813  002890  A740               	btfss	64,3,b	;volatile
  2814  002892  D009               	goto	l566
  2815                           
  2816                           ; BSR set to: 15
  2817  002894  010F               	movlb	15	; () banked
  2818  002896  A730               	btfss	48,3,b	;volatile
  2819  002898  D006               	goto	l566
  2820                           
  2821                           ; BSR set to: 15
  2822  00289A  010F               	movlb	15	; () banked
  2823  00289C  A720               	btfss	32,3,b	;volatile
  2824  00289E  D003               	goto	l566
  2825                           
  2826                           ; BSR set to: 15
  2827  0028A0  0E00               	movlw	0
  2828  0028A2  0100               	movlb	0	; () banked
  2829  0028A4  6FB7               	movwf	_CANisTxReady$3114& (0+255),b
  2830  0028A6                     l566:
  2831  0028A6  0100               	movlb	0	; () banked
  2832  0028A8  51B7               	movf	_CANisTxReady$3114& (0+255),w,b
  2833  0028AA  0012               	return	
  2834  0028AC                     __end_of_CANisTxReady:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           prodh	equ	0xFF4
  2841                           prodl	equ	0xFF3
  2842                           postinc0	equ	0xFEE
  2843                           wreg	equ	0xFE8
  2844                           postdec1	equ	0xFE5
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _board_initialization *****************
  2852 ;; Defined at:
  2853 ;;		line 316 in file "ABS_Code.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;		None               void
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2867 ;;      Params:         0       0       0       0
  2868 ;;      Locals:         0       0       0       0
  2869 ;;      Temps:          0       0       0       0
  2870 ;;      Totals:         0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    6
  2874 ;; This function calls:
  2875 ;;		_CANInitialize
  2876 ;;		_delay_ms
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text4
  2883  002568                     __ptext4:
  2884                           	opt stack 0
  2885  002568                     _board_initialization:
  2886                           	opt stack 24
  2887                           
  2888                           ;ABS_Code.c: 318: LATA = 0x00;
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;incstack = 0
  2892  002568  0E00               	movlw	0
  2893  00256A  6E89               	movwf	3977,c	;volatile
  2894                           
  2895                           ;ABS_Code.c: 319: TRISA = 0b11111101;
  2896  00256C  0EFD               	movlw	253
  2897  00256E  6E92               	movwf	3986,c	;volatile
  2898                           
  2899                           ;ABS_Code.c: 320: LATB = 0x00;
  2900  002570  0E00               	movlw	0
  2901  002572  6E8A               	movwf	3978,c	;volatile
  2902                           
  2903                           ;ABS_Code.c: 321: TRISB = 0b11111111;
  2904  002574  6893               	setf	3987,c	;volatile
  2905                           
  2906                           ;ABS_Code.c: 322: LATC = 0x00;
  2907  002576  0E00               	movlw	0
  2908  002578  6E8B               	movwf	3979,c	;volatile
  2909                           
  2910                           ;ABS_Code.c: 323: TRISC = 0b11111100;
  2911  00257A  0EFC               	movlw	252
  2912  00257C  6E94               	movwf	3988,c	;volatile
  2913                           
  2914                           ;ABS_Code.c: 324: LATD = 0x00;
  2915  00257E  0E00               	movlw	0
  2916  002580  6E8C               	movwf	3980,c	;volatile
  2917                           
  2918                           ;ABS_Code.c: 325: TRISD = 0xFF;
  2919  002582  6895               	setf	3989,c	;volatile
  2920                           
  2921                           ;ABS_Code.c: 326: LATE = 0x00;
  2922  002584  0E00               	movlw	0
  2923  002586  6E8D               	movwf	3981,c	;volatile
  2924                           
  2925                           ;ABS_Code.c: 327: TRISE = 0xFF;
  2926  002588  6896               	setf	3990,c	;volatile
  2927                           
  2928                           ;ABS_Code.c: 329: ADCON1 = 0x11111110;
  2929  00258A  0E10               	movlw	16
  2930  00258C  6EC1               	movwf	4033,c	;volatile
  2931                           
  2932                           ;ABS_Code.c: 332: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2933  00258E  0E06               	movlw	6
  2934  002590  0100               	movlb	0	; () banked
  2935  002592  6FC5               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2936  002594  0E05               	movlw	5
  2937  002596  0100               	movlb	0	; () banked
  2938  002598  6FC6               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2939  00259A  0E01               	movlw	1
  2940  00259C  0100               	movlb	0	; () banked
  2941  00259E  6FC7               	movwf	CANInitialize@SJW& (0+255),b
  2942  0025A0  0E03               	movlw	3
  2943  0025A2  0100               	movlb	0	; () banked
  2944  0025A4  6FC8               	movwf	CANInitialize@BRP& (0+255),b
  2945  0025A6  0E9D               	movlw	157
  2946  0025A8  0100               	movlb	0	; () banked
  2947  0025AA  6FC9               	movwf	CANInitialize@flags& (0+255),b
  2948  0025AC  0E04               	movlw	4
  2949  0025AE  EC98  F00F         	call	_CANInitialize
  2950                           
  2951                           ;ABS_Code.c: 335: PIR3bits.RXB1IF = 0;
  2952  0025B2  92A4               	bcf	4004,1,c	;volatile
  2953                           
  2954                           ;ABS_Code.c: 336: PIR3bits.RXB0IF = 0;
  2955  0025B4  90A4               	bcf	4004,0,c	;volatile
  2956                           
  2957                           ;ABS_Code.c: 337: INTCONbits.TMR0IF = 0;
  2958  0025B6  94F2               	bcf	intcon,2,c	;volatile
  2959                           
  2960                           ;ABS_Code.c: 338: INTCONbits.INT0IF = 0;
  2961  0025B8  92F2               	bcf	intcon,1,c	;volatile
  2962                           
  2963                           ;ABS_Code.c: 339: INTCON3bits.INT1IF = 0;
  2964  0025BA  90F0               	bcf	intcon3,0,c	;volatile
  2965                           
  2966                           ;ABS_Code.c: 340: PIR2bits.TMR3IF = 0;
  2967  0025BC  92A1               	bcf	4001,1,c	;volatile
  2968                           
  2969                           ;ABS_Code.c: 343: RCONbits.IPEN = 1;
  2970  0025BE  8ED0               	bsf	4048,7,c	;volatile
  2971                           
  2972                           ;ABS_Code.c: 344: IPR3bits.RXB1IP = 0;
  2973  0025C0  92A5               	bcf	4005,1,c	;volatile
  2974                           
  2975                           ;ABS_Code.c: 345: IPR3bits.RXB0IP = 0;
  2976  0025C2  90A5               	bcf	4005,0,c	;volatile
  2977                           
  2978                           ;ABS_Code.c: 346: INTCON2bits.TMR0IP = 1;
  2979  0025C4  84F1               	bsf	intcon2,2,c	;volatile
  2980                           
  2981                           ;ABS_Code.c: 347: INTCON3bits.INT1IP = 1;
  2982  0025C6  8CF0               	bsf	intcon3,6,c	;volatile
  2983                           
  2984                           ;ABS_Code.c: 350: T0CON = 0x80;
  2985  0025C8  0E80               	movlw	128
  2986  0025CA  6ED5               	movwf	4053,c	;volatile
  2987                           
  2988                           ;ABS_Code.c: 357: TMR0H = 0xFF;
  2989  0025CC  68D7               	setf	4055,c	;volatile
  2990                           
  2991                           ;ABS_Code.c: 358: TMR0L = 0xFE;
  2992  0025CE  0EFE               	movlw	254
  2993  0025D0  6ED6               	movwf	4054,c	;volatile
  2994                           
  2995                           ;ABS_Code.c: 359: PORTCbits.RC0 = 0;
  2996  0025D2  9082               	bcf	3970,0,c	;volatile
  2997                           
  2998                           ;ABS_Code.c: 360: brake_value_degree = 90;
  2999  0025D4  0E5A               	movlw	90
  3000  0025D6  6E38               	movwf	_brake_value_degree,c
  3001                           
  3002                           ;ABS_Code.c: 361: T1CON = 00010000;
  3003  0025D8  0E00               	movlw	0
  3004  0025DA  6ECD               	movwf	4045,c	;volatile
  3005                           
  3006                           ;ABS_Code.c: 362: T3CON = 01010000;
  3007  0025DC  0E00               	movlw	0
  3008  0025DE  6EB1               	movwf	4017,c	;volatile
  3009                           
  3010                           ;ABS_Code.c: 363: INTCON2bits.INTEDG0 = 1;
  3011  0025E0  8CF1               	bsf	intcon2,6,c	;volatile
  3012                           
  3013                           ;ABS_Code.c: 364: INTCON2bits.INTEDG1 = 1;
  3014  0025E2  8AF1               	bsf	intcon2,5,c	;volatile
  3015                           
  3016                           ;ABS_Code.c: 367: ADCON1 = 0b01110111;
  3017  0025E4  0E77               	movlw	119
  3018  0025E6  6EC1               	movwf	4033,c	;volatile
  3019                           
  3020                           ;ABS_Code.c: 368: ADCON0bits.CHS2 = 0;
  3021  0025E8  98C2               	bcf	4034,4,c	;volatile
  3022                           
  3023                           ;ABS_Code.c: 369: ADCON0bits.CHS1 = 0;
  3024  0025EA  96C2               	bcf	4034,3,c	;volatile
  3025                           
  3026                           ;ABS_Code.c: 370: ADCON0bits.CHS0 = 0;
  3027  0025EC  94C2               	bcf	4034,2,c	;volatile
  3028                           
  3029                           ;ABS_Code.c: 371: ADCON2bits.ACQT2 = 1;
  3030  0025EE  8AC0               	bsf	4032,5,c	;volatile
  3031                           
  3032                           ;ABS_Code.c: 372: ADCON2bits.ACQT1 = 1;
  3033  0025F0  88C0               	bsf	4032,4,c	;volatile
  3034                           
  3035                           ;ABS_Code.c: 373: ADCON2bits.ACQT0 = 0;
  3036  0025F2  96C0               	bcf	4032,3,c	;volatile
  3037                           
  3038                           ;ABS_Code.c: 374: ADCON2bits.ADCS2 = 1;
  3039  0025F4  84C0               	bsf	4032,2,c	;volatile
  3040                           
  3041                           ;ABS_Code.c: 375: ADCON2bits.ADCS1 = 0;
  3042  0025F6  92C0               	bcf	4032,1,c	;volatile
  3043                           
  3044                           ;ABS_Code.c: 376: ADCON2bits.ADCS0 = 1;
  3045  0025F8  80C0               	bsf	4032,0,c	;volatile
  3046                           
  3047                           ;ABS_Code.c: 377: ADCON2bits.ADFM = 0;
  3048  0025FA  9EC0               	bcf	4032,7,c	;volatile
  3049                           
  3050                           ;ABS_Code.c: 378: ADCON0bits.ADON = 1;
  3051  0025FC  80C2               	bsf	4034,0,c	;volatile
  3052                           
  3053                           ;ABS_Code.c: 381: PIE3bits.RXB1IE = 1;
  3054  0025FE  82A3               	bsf	4003,1,c	;volatile
  3055                           
  3056                           ;ABS_Code.c: 382: PIE3bits.RXB0IE = 1;
  3057  002600  80A3               	bsf	4003,0,c	;volatile
  3058                           
  3059                           ;ABS_Code.c: 383: INTCONbits.TMR0IE = 1;
  3060  002602  8AF2               	bsf	intcon,5,c	;volatile
  3061                           
  3062                           ;ABS_Code.c: 384: INTCONbits.INT0IE = 1;
  3063  002604  88F2               	bsf	intcon,4,c	;volatile
  3064                           
  3065                           ;ABS_Code.c: 385: INTCON3bits.INT1IE = 1;
  3066  002606  86F0               	bsf	intcon3,3,c	;volatile
  3067                           
  3068                           ;ABS_Code.c: 386: INTCONbits.GIEH = 1;
  3069  002608  8EF2               	bsf	intcon,7,c	;volatile
  3070                           
  3071                           ;ABS_Code.c: 387: INTCONbits.GIEL = 1;
  3072  00260A  8CF2               	bsf	intcon,6,c	;volatile
  3073                           
  3074                           ;ABS_Code.c: 390: T1CONbits.TMR1ON = 1;
  3075  00260C  80CD               	bsf	4045,0,c	;volatile
  3076                           
  3077                           ;ABS_Code.c: 391: T3CONbits.TMR3ON = 1;
  3078  00260E  80B1               	bsf	4017,0,c	;volatile
  3079                           
  3080                           ;ABS_Code.c: 392: T0CONbits.TMR0ON = 1;
  3081  002610  8ED5               	bsf	4053,7,c	;volatile
  3082                           
  3083                           ;ABS_Code.c: 393: delay_ms(2);
  3084  002612  0E00               	movlw	0
  3085  002614  0100               	movlb	0	; () banked
  3086  002616  6FBE               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3087  002618  0E02               	movlw	2
  3088  00261A  6FBD               	movwf	delay_ms@value_ms& (0+255),b
  3089  00261C  ECF9  F013         	call	_delay_ms	;wreg free
  3090  002620  0012               	return		;funcret
  3091  002622                     __end_of_board_initialization:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon	equ	0xFF2
  3100                           intcon2	equ	0xFF1
  3101                           intcon3	equ	0xFF0
  3102                           postinc0	equ	0xFEE
  3103                           wreg	equ	0xFE8
  3104                           postdec1	equ	0xFE5
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8
  3110                           
  3111 ;; *************** function _delay_ms *****************
  3112 ;; Defined at:
  3113 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  value_ms        2   33[BANK0 ] unsigned int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;		None               void
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3127 ;;      Params:         0       2       0       0
  3128 ;;      Locals:         0       0       0       0
  3129 ;;      Temps:          0       0       0       0
  3130 ;;      Totals:         0       2       0       0
  3131 ;;Total ram usage:        2 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    5
  3134 ;; This function calls:
  3135 ;;		___wmul
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;;		_board_initialization
  3139 ;;		_delay_s
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text5
  3144  0027F2                     __ptext5:
  3145                           	opt stack 0
  3146  0027F2                     _delay_ms:
  3147                           	opt stack 25
  3148                           
  3149                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3150                           
  3151                           ;incstack = 0
  3152  0027F2  C0D1  F0B7         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3153  0027F6  0100               	movlb	0	; () banked
  3154  0027F8  6BB8               	clrf	(___wmul@multiplier+1)& (0+255),b
  3155  0027FA  C0BD  F0B9         	movff	delay_ms@value_ms,___wmul@multiplicand
  3156  0027FE  C0BE  F0BA         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3157  002802  EC16  F014         	call	___wmul	;wreg free
  3158  002806  C0B7  F06C         	movff	?___wmul,_clock_counter_reference	;volatile
  3159  00280A  C0B8  F06D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3160                           
  3161                           ;src\delay.c: 75: while (clock_counter_reference) {
  3162  00280E  D007               	goto	l579
  3163  002810                     l3404:
  3164                           
  3165                           ;src\delay.c: 85: _delay(240);
  3166  002810  0E50               	movlw	80
  3167  002812                     u4697:
  3168  002812  2EE8               	decfsz	wreg,f,c
  3169  002814  D7FE               	goto	u4697
  3170                           
  3171                           ;src\delay.c: 88: clock_counter_reference--;
  3172  002816  0100               	movlb	0	; () banked
  3173  002818  076C               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3174  00281A  A0D8               	btfss	status,0,c
  3175  00281C  076D               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3176  00281E                     l579:
  3177  00281E  0100               	movlb	0	; () banked
  3178  002820  516C               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3179  002822  0100               	movlb	0	; () banked
  3180  002824  116D               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3181  002826  B4D8               	btfsc	status,2,c
  3182  002828  0012               	return	
  3183  00282A  D7F2               	goto	l3404
  3184  00282C                     __end_of_delay_ms:
  3185                           	opt stack 0
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           prodh	equ	0xFF4
  3191                           prodl	equ	0xFF3
  3192                           intcon	equ	0xFF2
  3193                           intcon2	equ	0xFF1
  3194                           intcon3	equ	0xFF0
  3195                           postinc0	equ	0xFEE
  3196                           wreg	equ	0xFE8
  3197                           postdec1	equ	0xFE5
  3198                           fsr1l	equ	0xFE1
  3199                           indf2	equ	0xFDF
  3200                           fsr2h	equ	0xFDA
  3201                           fsr2l	equ	0xFD9
  3202                           status	equ	0xFD8
  3203                           
  3204 ;; *************** function ___wmul *****************
  3205 ;; Defined at:
  3206 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  multiplier      2   27[BANK0 ] unsigned int 
  3209 ;;  multiplicand    2   29[BANK0 ] unsigned int 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  product         2   31[BANK0 ] unsigned int 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  2   27[BANK0 ] unsigned int 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0, prodl, prodh
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3221 ;;      Params:         0       4       0       0
  3222 ;;      Locals:         0       2       0       0
  3223 ;;      Temps:          0       0       0       0
  3224 ;;      Totals:         0       6       0       0
  3225 ;;Total ram usage:        6 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    4
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_delay_ms
  3232 ;;		_remote_frame_handler
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text6
  3237  00282C                     __ptext6:
  3238                           	opt stack 0
  3239  00282C                     ___wmul:
  3240                           	opt stack 25
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;incstack = 0
  3244  00282C  0100               	movlb	0	; () banked
  3245  00282E  51B7               	movf	___wmul@multiplier& (0+255),w,b
  3246  002830  0100               	movlb	0	; () banked
  3247  002832  03B9               	mulwf	___wmul@multiplicand& (0+255),b
  3248  002834  CFF3 F0BB          	movff	prodl,___wmul@product
  3249  002838  CFF4 F0BC          	movff	prodh,___wmul@product+1
  3250  00283C  0100               	movlb	0	; () banked
  3251  00283E  51B7               	movf	___wmul@multiplier& (0+255),w,b
  3252  002840  0100               	movlb	0	; () banked
  3253  002842  03BA               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3254  002844  50F3               	movf	prodl,w,c
  3255  002846  0100               	movlb	0	; () banked
  3256  002848  27BC               	addwf	(___wmul@product+1)& (0+255),f,b
  3257  00284A  0100               	movlb	0	; () banked
  3258  00284C  51B8               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3259  00284E  0100               	movlb	0	; () banked
  3260  002850  03B9               	mulwf	___wmul@multiplicand& (0+255),b
  3261  002852  50F3               	movf	prodl,w,c
  3262  002854  0100               	movlb	0	; () banked
  3263  002856  27BC               	addwf	(___wmul@product+1)& (0+255),f,b
  3264                           
  3265                           ; BSR set to: 0
  3266  002858  C0BB  F0B7         	movff	___wmul@product,?___wmul
  3267  00285C  C0BC  F0B8         	movff	___wmul@product+1,?___wmul+1
  3268  002860  0012               	return	
  3269  002862                     __end_of___wmul:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           intcon	equ	0xFF2
  3278                           intcon2	equ	0xFF1
  3279                           intcon3	equ	0xFF0
  3280                           postinc0	equ	0xFEE
  3281                           wreg	equ	0xFE8
  3282                           postdec1	equ	0xFE5
  3283                           fsr1l	equ	0xFE1
  3284                           indf2	equ	0xFDF
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _CANInitialize *****************
  3290 ;; Defined at:
  3291 ;;		line 218 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  propSeg         1    wreg     unsigned char 
  3294 ;;  phaseSeg1       1   41[BANK0 ] unsigned char 
  3295 ;;  phaseSeg2       1   42[BANK0 ] unsigned char 
  3296 ;;  SJW             1   43[BANK0 ] unsigned char 
  3297 ;;  BRP             1   44[BANK0 ] unsigned char 
  3298 ;;  flags           1   45[BANK0 ] enum E16844
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  propSeg         1   50[BANK0 ] unsigned char 
  3301 ;;  FilterConfig    1   52[BANK0 ] unsigned char 
  3302 ;;  FilterConfig    1   51[BANK0 ] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;		None               void
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3312 ;;      Params:         0       5       0       0
  3313 ;;      Locals:         0       3       0       0
  3314 ;;      Temps:          0       4       0       0
  3315 ;;      Totals:         0      12       0       0
  3316 ;;Total ram usage:       12 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    5
  3319 ;; This function calls:
  3320 ;;		_CANOperationMode
  3321 ;;		_CANSetFilter
  3322 ;;		_CANSetMask
  3323 ;; This function is called by:
  3324 ;;		_board_initialization
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text7
  3329  001F30                     __ptext7:
  3330                           	opt stack 0
  3331  001F30                     _CANInitialize:
  3332                           	opt stack 24
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;incstack = 0
  3336                           ;CANInitialize@propSeg stored from wreg
  3337  001F30  0100               	movlb	0	; () banked
  3338  001F32  6FCE               	movwf	CANInitialize@propSeg& (0+255),b
  3339                           
  3340                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3341                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3342                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3343  001F34  0E80               	movlw	128
  3344  001F36  EC56  F014         	call	_CANOperationMode
  3345                           
  3346                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3347  001F3A  0E00               	movlw	0
  3348  001F3C  6E70               	movwf	3952,c	;volatile
  3349                           
  3350                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3351  001F3E  0E00               	movlw	0
  3352  001F40  6E71               	movwf	3953,c	;volatile
  3353                           
  3354                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3355  001F42  0E00               	movlw	0
  3356  001F44  6E72               	movwf	3954,c	;volatile
  3357                           
  3358                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3359  001F46  0100               	movlb	0	; () banked
  3360  001F48  41C7               	rrncf	CANInitialize@SJW& (0+255),w,b
  3361  001F4A  42E8               	rrncf	wreg,f,c
  3362  001F4C  0BC0               	andlw	192
  3363  001F4E  0100               	movlb	0	; () banked
  3364  001F50  6FC7               	movwf	CANInitialize@SJW& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3368  001F52  0100               	movlb	0	; () banked
  3369  001F54  51C7               	movf	CANInitialize@SJW& (0+255),w,b
  3370  001F56  1270               	iorwf	3952,f,c	;volatile
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3374  001F58  0100               	movlb	0	; () banked
  3375  001F5A  51C8               	movf	CANInitialize@BRP& (0+255),w,b
  3376  001F5C  1270               	iorwf	3952,f,c	;volatile
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3380  001F5E  0100               	movlb	0	; () banked
  3381  001F60  51CE               	movf	CANInitialize@propSeg& (0+255),w,b
  3382  001F62  1271               	iorwf	3953,f,c	;volatile
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3386  001F64  0100               	movlb	0	; () banked
  3387  001F66  39C5               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3388  001F68  42E8               	rrncf	wreg,f,c
  3389  001F6A  0BF8               	andlw	248
  3390  001F6C  0100               	movlb	0	; () banked
  3391  001F6E  6FC5               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3395  001F70  0100               	movlb	0	; () banked
  3396  001F72  51C5               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3397  001F74  1271               	iorwf	3953,f,c	;volatile
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3401  001F76  0100               	movlb	0	; () banked
  3402  001F78  A5C9               	btfss	CANInitialize@flags& (0+255),2,b
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3406  001F7A  8C71               	bsf	3953,6,c	;volatile
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3410  001F7C  0100               	movlb	0	; () banked
  3411  001F7E  B1C9               	btfsc	CANInitialize@flags& (0+255),0,b
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3415  001F80  8E71               	bsf	3953,7,c	;volatile
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3419                           
  3420                           ; BSR set to: 0
  3421  001F82  0100               	movlb	0	; () banked
  3422  001F84  51C6               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3423  001F86  1272               	iorwf	3954,f,c	;volatile
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3427  001F88  0100               	movlb	0	; () banked
  3428  001F8A  B3C9               	btfsc	CANInitialize@flags& (0+255),1,b
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3432  001F8C  8C72               	bsf	3954,6,c	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3436                           
  3437                           ; BSR set to: 0
  3438  001F8E  0100               	movlb	0	; () banked
  3439  001F90  51C9               	movf	CANInitialize@flags& (0+255),w,b
  3440  001F92  0B60               	andlw	96
  3441  001F94  6E60               	movwf	3936,c	;volatile
  3442                           
  3443                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3444  001F96  0100               	movlb	0	; () banked
  3445  001F98  51C9               	movf	CANInitialize@flags& (0+255),w,b
  3446  001F9A  0B10               	andlw	16
  3447  001F9C  0AFF               	xorlw	255
  3448  001F9E  B4D8               	btfsc	status,2,c
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3452  001FA0  8460               	bsf	3936,2,c	;volatile
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3456  001FA2  CF60 FF50          	movff	3936,3920	;volatile
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3460  001FA6  0E00               	movlw	0
  3461  001FA8  0100               	movlb	0	; () banked
  3462  001FAA  6FB7               	movwf	CANSetMask@mask& (0+255),b
  3463  001FAC  0E00               	movlw	0
  3464  001FAE  6FB8               	movwf	(CANSetMask@mask+1)& (0+255),b
  3465  001FB0  0E00               	movlw	0
  3466  001FB2  6FB9               	movwf	(CANSetMask@mask+2)& (0+255),b
  3467  001FB4  0E00               	movlw	0
  3468  001FB6  6FBA               	movwf	(CANSetMask@mask+3)& (0+255),b
  3469  001FB8  0EF7               	movlw	247
  3470  001FBA  0100               	movlb	0	; () banked
  3471  001FBC  6FBB               	movwf	CANSetMask@type& (0+255),b
  3472  001FBE  0E01               	movlw	1
  3473  001FC0  EC51  F00C         	call	_CANSetMask
  3474                           
  3475                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3476  001FC4  0E00               	movlw	0
  3477  001FC6  0100               	movlb	0	; () banked
  3478  001FC8  6FB7               	movwf	CANSetMask@mask& (0+255),b
  3479  001FCA  0E00               	movlw	0
  3480  001FCC  6FB8               	movwf	(CANSetMask@mask+1)& (0+255),b
  3481  001FCE  0E00               	movlw	0
  3482  001FD0  6FB9               	movwf	(CANSetMask@mask+2)& (0+255),b
  3483  001FD2  0E00               	movlw	0
  3484  001FD4  6FBA               	movwf	(CANSetMask@mask+3)& (0+255),b
  3485  001FD6  0EF7               	movlw	247
  3486  001FD8  0100               	movlb	0	; () banked
  3487  001FDA  6FBB               	movwf	CANSetMask@type& (0+255),b
  3488  001FDC  0E02               	movlw	2
  3489  001FDE  EC51  F00C         	call	_CANSetMask
  3490                           
  3491                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3492  001FE2  D00F               	goto	l3152
  3493  001FE4                     l3146:
  3494                           
  3495                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3496  001FE4  0EF7               	movlw	247
  3497  001FE6  0100               	movlb	0	; () banked
  3498  001FE8  6FCF               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3499  001FEA  D007               	goto	l3148
  3500  001FEC                     l368:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3504  001FEC  0100               	movlb	0	; () banked
  3505  001FEE  69CF               	setf	CANInitialize@FilterConfig1& (0+255),b
  3506                           
  3507                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3508  001FF0  0100               	movlb	0	; () banked
  3509  001FF2  69D0               	setf	CANInitialize@FilterConfig2& (0+255),b
  3510                           
  3511                           ;inc\CANlib.h: 273: break;
  3512  001FF4  D028               	goto	l3154
  3513  001FF6                     l369:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3517  001FF6  0100               	movlb	0	; () banked
  3518  001FF8  69CF               	setf	CANInitialize@FilterConfig1& (0+255),b
  3519  001FFA                     l3148:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3523  001FFA  0EF7               	movlw	247
  3524  001FFC  0100               	movlb	0	; () banked
  3525  001FFE  6FD0               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;inc\CANlib.h: 278: }
  3529                           
  3530                           ;inc\CANlib.h: 277: break;
  3531  002000  D022               	goto	l3154
  3532  002002                     l3152:
  3533  002002  0E9F               	movlw	159
  3534  002004  0100               	movlb	0	; () banked
  3535  002006  6FCA               	movwf	??_CANInitialize& (0+255),b
  3536  002008  0EFF               	movlw	255
  3537  00200A  0100               	movlb	0	; () banked
  3538  00200C  6FCB               	movwf	(??_CANInitialize+1)& (0+255),b
  3539  00200E  0100               	movlb	0	; () banked
  3540  002010  51C9               	movf	CANInitialize@flags& (0+255),w,b
  3541  002012  0B60               	andlw	96
  3542  002014  0100               	movlb	0	; () banked
  3543  002016  6FCC               	movwf	(??_CANInitialize+2)& (0+255),b
  3544  002018  6BCD               	clrf	(??_CANInitialize+3)& (0+255),b
  3545  00201A  0100               	movlb	0	; () banked
  3546  00201C  51CA               	movf	??_CANInitialize& (0+255),w,b
  3547  00201E  0100               	movlb	0	; () banked
  3548  002020  13CC               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3549  002022  0100               	movlb	0	; () banked
  3550  002024  51CB               	movf	(??_CANInitialize+1)& (0+255),w,b
  3551  002026  0100               	movlb	0	; () banked
  3552  002028  13CD               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3553                           
  3554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3555                           ; Switch size 1, requested type "space"
  3556                           ; Number of cases is 1, Range of values is 0 to 0
  3557                           ; switch strategies available:
  3558                           ; Name         Instructions Cycles
  3559                           ; simple_byte            4     3 (average)
  3560                           ;	Chosen strategy is simple_byte
  3561  00202A  0100               	movlb	0	; () banked
  3562  00202C  51CD               	movf	(??_CANInitialize+3)& (0+255),w,b
  3563  00202E  0A00               	xorlw	0	; case 0
  3564  002030  A4D8               	btfss	status,2,c
  3565  002032  D7E1               	goto	l369
  3566                           
  3567                           ; BSR set to: 0
  3568                           ; Switch size 1, requested type "space"
  3569                           ; Number of cases is 2, Range of values is 191 to 223
  3570                           ; switch strategies available:
  3571                           ; Name         Instructions Cycles
  3572                           ; simple_byte            7     4 (average)
  3573                           ;	Chosen strategy is simple_byte
  3574  002034  0100               	movlb	0	; () banked
  3575  002036  51CC               	movf	(??_CANInitialize+2)& (0+255),w,b
  3576  002038  0ABF               	xorlw	191	; case 191
  3577  00203A  B4D8               	btfsc	status,2,c
  3578  00203C  D7D7               	goto	l368
  3579  00203E  0A60               	xorlw	96	; case 223
  3580  002040  B4D8               	btfsc	status,2,c
  3581  002042  D7D0               	goto	l3146
  3582  002044  D7D8               	goto	l369
  3583  002046                     l3154:
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3587  002046  0E00               	movlw	0
  3588  002048  0100               	movlb	0	; () banked
  3589  00204A  6FB7               	movwf	CANSetFilter@filter& (0+255),b
  3590  00204C  0E00               	movlw	0
  3591  00204E  6FB8               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3592  002050  0E00               	movlw	0
  3593  002052  6FB9               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3594  002054  0E00               	movlw	0
  3595  002056  6FBA               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3596  002058  C0CF  F0BB         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3597  00205C  0E00               	movlw	0
  3598  00205E  EC82  F000         	call	_CANSetFilter
  3599                           
  3600                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3601  002062  0E00               	movlw	0
  3602  002064  0100               	movlb	0	; () banked
  3603  002066  6FB7               	movwf	CANSetFilter@filter& (0+255),b
  3604  002068  0E00               	movlw	0
  3605  00206A  6FB8               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3606  00206C  0E00               	movlw	0
  3607  00206E  6FB9               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3608  002070  0E00               	movlw	0
  3609  002072  6FBA               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3610  002074  C0CF  F0BB         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3611  002078  0E01               	movlw	1
  3612  00207A  EC82  F000         	call	_CANSetFilter
  3613                           
  3614                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3615  00207E  0E00               	movlw	0
  3616  002080  0100               	movlb	0	; () banked
  3617  002082  6FB7               	movwf	CANSetFilter@filter& (0+255),b
  3618  002084  0E00               	movlw	0
  3619  002086  6FB8               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3620  002088  0E00               	movlw	0
  3621  00208A  6FB9               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3622  00208C  0E00               	movlw	0
  3623  00208E  6FBA               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3624  002090  C0D0  F0BB         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3625  002094  0E02               	movlw	2
  3626  002096  EC82  F000         	call	_CANSetFilter
  3627                           
  3628                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3629  00209A  0E00               	movlw	0
  3630  00209C  0100               	movlb	0	; () banked
  3631  00209E  6FB7               	movwf	CANSetFilter@filter& (0+255),b
  3632  0020A0  0E00               	movlw	0
  3633  0020A2  6FB8               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3634  0020A4  0E00               	movlw	0
  3635  0020A6  6FB9               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3636  0020A8  0E00               	movlw	0
  3637  0020AA  6FBA               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3638  0020AC  C0D0  F0BB         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3639  0020B0  0E03               	movlw	3
  3640  0020B2  EC82  F000         	call	_CANSetFilter
  3641                           
  3642                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3643  0020B6  0E00               	movlw	0
  3644  0020B8  0100               	movlb	0	; () banked
  3645  0020BA  6FB7               	movwf	CANSetFilter@filter& (0+255),b
  3646  0020BC  0E00               	movlw	0
  3647  0020BE  6FB8               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3648  0020C0  0E00               	movlw	0
  3649  0020C2  6FB9               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3650  0020C4  0E00               	movlw	0
  3651  0020C6  6FBA               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3652  0020C8  C0D0  F0BB         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3653  0020CC  0E04               	movlw	4
  3654  0020CE  EC82  F000         	call	_CANSetFilter
  3655                           
  3656                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3657  0020D2  0E00               	movlw	0
  3658  0020D4  0100               	movlb	0	; () banked
  3659  0020D6  6FB7               	movwf	CANSetFilter@filter& (0+255),b
  3660  0020D8  0E00               	movlw	0
  3661  0020DA  6FB8               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3662  0020DC  0E00               	movlw	0
  3663  0020DE  6FB9               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3664  0020E0  0E00               	movlw	0
  3665  0020E2  6FBA               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3666  0020E4  C0D0  F0BB         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3667  0020E8  0E05               	movlw	5
  3668  0020EA  EC82  F000         	call	_CANSetFilter
  3669                           
  3670                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3671  0020EE  0E00               	movlw	0
  3672  0020F0  EC56  F014         	call	_CANOperationMode
  3673  0020F4  0012               	return		;funcret
  3674  0020F6                     __end_of_CANInitialize:
  3675                           	opt stack 0
  3676                           tblptru	equ	0xFF8
  3677                           tblptrh	equ	0xFF7
  3678                           tblptrl	equ	0xFF6
  3679                           tablat	equ	0xFF5
  3680                           prodh	equ	0xFF4
  3681                           prodl	equ	0xFF3
  3682                           intcon	equ	0xFF2
  3683                           intcon2	equ	0xFF1
  3684                           intcon3	equ	0xFF0
  3685                           postinc0	equ	0xFEE
  3686                           wreg	equ	0xFE8
  3687                           postdec1	equ	0xFE5
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _CANSetMask *****************
  3695 ;; Defined at:
  3696 ;;		line 640 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  numBuffer       1    wreg     enum E16878
  3699 ;;  mask            4   27[BANK0 ] unsigned long 
  3700 ;;  type            1   31[BANK0 ] enum E16844
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  numBuffer       1   36[BANK0 ] enum E16878
  3703 ;;  tamp            4   37[BANK0 ] unsigned long 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;		None               void
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3713 ;;      Params:         0       5       0       0
  3714 ;;      Locals:         0       5       0       0
  3715 ;;      Temps:          0       4       0       0
  3716 ;;      Totals:         0      14       0       0
  3717 ;;Total ram usage:       14 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    4
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_CANInitialize
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text8
  3728  0018A2                     __ptext8:
  3729                           	opt stack 0
  3730  0018A2                     _CANSetMask:
  3731                           	opt stack 24
  3732                           
  3733                           ;incstack = 0
  3734                           ;CANSetMask@numBuffer stored from wreg
  3735  0018A2  0100               	movlb	0	; () banked
  3736  0018A4  6FC0               	movwf	CANSetMask@numBuffer& (0+255),b
  3737                           
  3738                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3739  0018A6  0100               	movlb	0	; () banked
  3740  0018A8  05C0               	decf	CANSetMask@numBuffer& (0+255),w,b
  3741  0018AA  A4D8               	btfss	status,2,c
  3742  0018AC  D056               	goto	l2710
  3743                           
  3744                           ; BSR set to: 0
  3745  0018AE  0100               	movlb	0	; () banked
  3746  0018B0  29BB               	incf	CANSetMask@type& (0+255),w,b
  3747  0018B2  A4D8               	btfss	status,2,c
  3748  0018B4  D052               	goto	l2710
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;inc\CANlib.h: 644: {
  3752                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3753  0018B6  C0B7  F0BC         	movff	CANSetMask@mask,??_CANSetMask
  3754  0018BA  C0B8  F0BD         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3755  0018BE  C0B9  F0BE         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3756  0018C2  C0BA  F0BF         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3757  0018C6  0E04               	movlw	4
  3758  0018C8  D006               	goto	u2290
  3759  0018CA                     u2295:
  3760  0018CA  0100               	movlb	0	; () banked
  3761  0018CC  90D8               	bcf	status,0,c
  3762  0018CE  33BF               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3763  0018D0  33BE               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3764  0018D2  33BD               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3765  0018D4  33BC               	rrcf	??_CANSetMask& (0+255),f,b
  3766  0018D6                     u2290:
  3767  0018D6  2EE8               	decfsz	wreg,f,c
  3768  0018D8  D7F8               	goto	u2295
  3769  0018DA  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  3770  0018DE  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3771  0018E2  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3772  0018E6  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3776  0018EA  0100               	movlb	0	; () banked
  3777  0018EC  51C1               	movf	CANSetMask@tamp& (0+255),w,b
  3778  0018EE  0100               	movlb	0	; () banked
  3779  0018F0  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  3780  0018F2  6BC2               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3781  0018F4  6BC3               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3782  0018F6  6BC4               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3786  0018F8  C0C1  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3790  0018FC  0E07               	movlw	7
  3791  0018FE  0100               	movlb	0	; () banked
  3792  001900  15B7               	andwf	CANSetMask@mask& (0+255),w,b
  3793  001902  0100               	movlb	0	; () banked
  3794  001904  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  3795  001906  0E00               	movlw	0
  3796  001908  0100               	movlb	0	; () banked
  3797  00190A  15B8               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3798  00190C  0100               	movlb	0	; () banked
  3799  00190E  6FC2               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3800  001910  0E00               	movlw	0
  3801  001912  0100               	movlb	0	; () banked
  3802  001914  15B9               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3803  001916  0100               	movlb	0	; () banked
  3804  001918  6FC3               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3805  00191A  0E00               	movlw	0
  3806  00191C  0100               	movlb	0	; () banked
  3807  00191E  15BA               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3808  001920  0100               	movlb	0	; () banked
  3809  001922  6FC4               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3813  001924  C0C1  F0BC         	movff	CANSetMask@tamp,??_CANSetMask
  3814  001928  C0C2  F0BD         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3815  00192C  C0C3  F0BE         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3816  001930  C0C4  F0BF         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3817  001934  0E05               	movlw	5
  3818  001936                     u2305:
  3819  001936  90D8               	bcf	status,0,c
  3820  001938  0100               	movlb	0	; () banked
  3821  00193A  37BC               	rlcf	??_CANSetMask& (0+255),f,b
  3822  00193C  37BD               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3823  00193E  37BE               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3824  001940  37BF               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3825  001942  2EE8               	decfsz	wreg,f,c
  3826  001944  D7F8               	goto	u2305
  3827  001946  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  3828  00194A  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3829  00194E  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3830  001952  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3834  001956  C0C1  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3835  00195A                     l2710:
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;inc\CANlib.h: 652: }
  3839                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3840  00195A  0E02               	movlw	2
  3841  00195C  0100               	movlb	0	; () banked
  3842  00195E  19C0               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3843  001960  A4D8               	btfss	status,2,c
  3844  001962  D056               	goto	l2726
  3845                           
  3846                           ; BSR set to: 0
  3847  001964  0100               	movlb	0	; () banked
  3848  001966  29BB               	incf	CANSetMask@type& (0+255),w,b
  3849  001968  A4D8               	btfss	status,2,c
  3850  00196A  D052               	goto	l2726
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 655: {
  3854                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3855  00196C  C0B7  F0BC         	movff	CANSetMask@mask,??_CANSetMask
  3856  001970  C0B8  F0BD         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3857  001974  C0B9  F0BE         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3858  001978  C0BA  F0BF         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3859  00197C  0E04               	movlw	4
  3860  00197E  D006               	goto	u2330
  3861  001980                     u2335:
  3862  001980  0100               	movlb	0	; () banked
  3863  001982  90D8               	bcf	status,0,c
  3864  001984  33BF               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3865  001986  33BE               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3866  001988  33BD               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3867  00198A  33BC               	rrcf	??_CANSetMask& (0+255),f,b
  3868  00198C                     u2330:
  3869  00198C  2EE8               	decfsz	wreg,f,c
  3870  00198E  D7F8               	goto	u2335
  3871  001990  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  3872  001994  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3873  001998  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3874  00199C  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3878  0019A0  0100               	movlb	0	; () banked
  3879  0019A2  51C1               	movf	CANSetMask@tamp& (0+255),w,b
  3880  0019A4  0100               	movlb	0	; () banked
  3881  0019A6  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  3882  0019A8  6BC2               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3883  0019AA  6BC3               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3884  0019AC  6BC4               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3888  0019AE  C0C1  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3892  0019B2  0E07               	movlw	7
  3893  0019B4  0100               	movlb	0	; () banked
  3894  0019B6  15B7               	andwf	CANSetMask@mask& (0+255),w,b
  3895  0019B8  0100               	movlb	0	; () banked
  3896  0019BA  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  3897  0019BC  0E00               	movlw	0
  3898  0019BE  0100               	movlb	0	; () banked
  3899  0019C0  15B8               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3900  0019C2  0100               	movlb	0	; () banked
  3901  0019C4  6FC2               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3902  0019C6  0E00               	movlw	0
  3903  0019C8  0100               	movlb	0	; () banked
  3904  0019CA  15B9               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3905  0019CC  0100               	movlb	0	; () banked
  3906  0019CE  6FC3               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3907  0019D0  0E00               	movlw	0
  3908  0019D2  0100               	movlb	0	; () banked
  3909  0019D4  15BA               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3910  0019D6  0100               	movlb	0	; () banked
  3911  0019D8  6FC4               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3915  0019DA  C0C1  F0BC         	movff	CANSetMask@tamp,??_CANSetMask
  3916  0019DE  C0C2  F0BD         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3917  0019E2  C0C3  F0BE         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3918  0019E6  C0C4  F0BF         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3919  0019EA  0E05               	movlw	5
  3920  0019EC                     u2345:
  3921  0019EC  90D8               	bcf	status,0,c
  3922  0019EE  0100               	movlb	0	; () banked
  3923  0019F0  37BC               	rlcf	??_CANSetMask& (0+255),f,b
  3924  0019F2  37BD               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3925  0019F4  37BE               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3926  0019F6  37BF               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3927  0019F8  2EE8               	decfsz	wreg,f,c
  3928  0019FA  D7F8               	goto	u2345
  3929  0019FC  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  3930  001A00  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3931  001A04  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3932  001A08  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3936  001A0C  C0C1  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3937  001A10                     l2726:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;inc\CANlib.h: 663: }
  3941                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3942  001A10  0100               	movlb	0	; () banked
  3943  001A12  05C0               	decf	CANSetMask@numBuffer& (0+255),w,b
  3944  001A14  A4D8               	btfss	status,2,c
  3945  001A16  D087               	goto	l2758
  3946                           
  3947                           ; BSR set to: 0
  3948  001A18  0EF7               	movlw	247
  3949  001A1A  0100               	movlb	0	; () banked
  3950  001A1C  19BB               	xorwf	CANSetMask@type& (0+255),w,b
  3951  001A1E  A4D8               	btfss	status,2,c
  3952  001A20  D082               	goto	l2758
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;inc\CANlib.h: 666: {
  3956                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3957  001A22  0100               	movlb	0	; () banked
  3958  001A24  51B7               	movf	CANSetMask@mask& (0+255),w,b
  3959  001A26  0100               	movlb	0	; () banked
  3960  001A28  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  3961  001A2A  6BC2               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3962  001A2C  6BC3               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3963  001A2E  6BC4               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3967  001A30  C0C1  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3971  001A34  0E00               	movlw	0
  3972  001A36  0100               	movlb	0	; () banked
  3973  001A38  15B7               	andwf	CANSetMask@mask& (0+255),w,b
  3974  001A3A  0100               	movlb	0	; () banked
  3975  001A3C  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  3976  001A3E  0EFF               	movlw	255
  3977  001A40  0100               	movlb	0	; () banked
  3978  001A42  15B8               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3979  001A44  0100               	movlb	0	; () banked
  3980  001A46  6FC2               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3981  001A48  0E00               	movlw	0
  3982  001A4A  0100               	movlb	0	; () banked
  3983  001A4C  15B9               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3984  001A4E  0100               	movlb	0	; () banked
  3985  001A50  6FC3               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3986  001A52  0E00               	movlw	0
  3987  001A54  0100               	movlb	0	; () banked
  3988  001A56  15BA               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3989  001A58  0100               	movlb	0	; () banked
  3990  001A5A  6FC4               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3994  001A5C  C0C1  F0BC         	movff	CANSetMask@tamp,??_CANSetMask
  3995  001A60  C0C2  F0BD         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3996  001A64  C0C3  F0BE         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3997  001A68  C0C4  F0BF         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3998  001A6C  C0BD  F0BC         	movff	??_CANSetMask+1,??_CANSetMask
  3999  001A70  C0BE  F0BD         	movff	??_CANSetMask+2,??_CANSetMask+1
  4000  001A74  C0BF  F0BE         	movff	??_CANSetMask+3,??_CANSetMask+2
  4001  001A78  0100               	movlb	0	; () banked
  4002  001A7A  6BBF               	clrf	(??_CANSetMask+3)& (0+255),b
  4003  001A7C  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  4004  001A80  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4005  001A84  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4006  001A88  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4010  001A8C  C0C1  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4014  001A90  0100               	movlb	0	; () banked
  4015  001A92  A1B9               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4016  001A94  D003               	goto	l442
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4020  001A96  010F               	movlb	15	; () banked
  4021  001A98  8119               	bsf	25,0,b	;volatile
  4022  001A9A  D002               	goto	l443
  4023  001A9C                     l442:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;inc\CANlib.h: 676: else
  4027                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4028  001A9C  010F               	movlb	15	; () banked
  4029  001A9E  9119               	bcf	25,0,b	;volatile
  4030  001AA0                     l443:
  4031                           
  4032                           ; BSR set to: 15
  4033                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4034  001AA0  0100               	movlb	0	; () banked
  4035  001AA2  A3B9               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4036  001AA4  D003               	goto	l444
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4040  001AA6  010F               	movlb	15	; () banked
  4041  001AA8  8319               	bsf	25,1,b	;volatile
  4042  001AAA  D002               	goto	l445
  4043  001AAC                     l444:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 681: else
  4047                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4048  001AAC  010F               	movlb	15	; () banked
  4049  001AAE  9319               	bcf	25,1,b	;volatile
  4050  001AB0                     l445:
  4051                           
  4052                           ; BSR set to: 15
  4053                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4054  001AB0  0100               	movlb	0	; () banked
  4055  001AB2  A5B9               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4056  001AB4  D003               	goto	l446
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4060  001AB6  010F               	movlb	15	; () banked
  4061  001AB8  8B19               	bsf	25,5,b	;volatile
  4062  001ABA  D002               	goto	l447
  4063  001ABC                     l446:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 686: else
  4067                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4068  001ABC  010F               	movlb	15	; () banked
  4069  001ABE  9B19               	bcf	25,5,b	;volatile
  4070  001AC0                     l447:
  4071                           
  4072                           ; BSR set to: 15
  4073                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4074  001AC0  0100               	movlb	0	; () banked
  4075  001AC2  A7B9               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4076  001AC4  D003               	goto	l448
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4080  001AC6  010F               	movlb	15	; () banked
  4081  001AC8  8D19               	bsf	25,6,b	;volatile
  4082  001ACA  D002               	goto	l449
  4083  001ACC                     l448:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;inc\CANlib.h: 691: else
  4087                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4088  001ACC  010F               	movlb	15	; () banked
  4089  001ACE  9D19               	bcf	25,6,b	;volatile
  4090  001AD0                     l449:
  4091                           
  4092                           ; BSR set to: 15
  4093                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4094  001AD0  0100               	movlb	0	; () banked
  4095  001AD2  A9B9               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4096  001AD4  D003               	goto	l450
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4100  001AD6  010F               	movlb	15	; () banked
  4101  001AD8  8F19               	bsf	25,7,b	;volatile
  4102  001ADA  D002               	goto	l2752
  4103  001ADC                     l450:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;inc\CANlib.h: 696: else
  4107                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4108  001ADC  010F               	movlb	15	; () banked
  4109  001ADE  9F19               	bcf	25,7,b	;volatile
  4110  001AE0                     l2752:
  4111                           
  4112                           ; BSR set to: 15
  4113                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4114  001AE0  C0B7  F0BC         	movff	CANSetMask@mask,??_CANSetMask
  4115  001AE4  C0B8  F0BD         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4116  001AE8  C0B9  F0BE         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4117  001AEC  C0BA  F0BF         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4118  001AF0  0E16               	movlw	22
  4119  001AF2  D006               	goto	u2420
  4120  001AF4                     u2425:
  4121  001AF4  0100               	movlb	0	; () banked
  4122  001AF6  90D8               	bcf	status,0,c
  4123  001AF8  33BF               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4124  001AFA  33BE               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4125  001AFC  33BD               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4126  001AFE  33BC               	rrcf	??_CANSetMask& (0+255),f,b
  4127  001B00                     u2420:
  4128  001B00  2EE8               	decfsz	wreg,f,c
  4129  001B02  D7F8               	goto	u2425
  4130  001B04  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  4131  001B08  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4132  001B0C  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4133  001B10  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4137  001B14  0100               	movlb	0	; () banked
  4138  001B16  51C1               	movf	CANSetMask@tamp& (0+255),w,b
  4139  001B18  0100               	movlb	0	; () banked
  4140  001B1A  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  4141  001B1C  6BC2               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4142  001B1E  6BC3               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4143  001B20  6BC4               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4147  001B22  C0C1  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4148  001B26                     l2758:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 702: }
  4152                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4153  001B26  0E02               	movlw	2
  4154  001B28  0100               	movlb	0	; () banked
  4155  001B2A  19C0               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4156  001B2C  A4D8               	btfss	status,2,c
  4157  001B2E  0012               	return	
  4158                           
  4159                           ; BSR set to: 0
  4160  001B30  0EF7               	movlw	247
  4161  001B32  0100               	movlb	0	; () banked
  4162  001B34  19BB               	xorwf	CANSetMask@type& (0+255),w,b
  4163  001B36  A4D8               	btfss	status,2,c
  4164  001B38  0012               	return	
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 705: {
  4168                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4169  001B3A  0100               	movlb	0	; () banked
  4170  001B3C  51B7               	movf	CANSetMask@mask& (0+255),w,b
  4171  001B3E  0100               	movlb	0	; () banked
  4172  001B40  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  4173  001B42  6BC2               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4174  001B44  6BC3               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4175  001B46  6BC4               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4179  001B48  C0C1  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4183  001B4C  0E00               	movlw	0
  4184  001B4E  0100               	movlb	0	; () banked
  4185  001B50  15B7               	andwf	CANSetMask@mask& (0+255),w,b
  4186  001B52  0100               	movlb	0	; () banked
  4187  001B54  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  4188  001B56  0EFF               	movlw	255
  4189  001B58  0100               	movlb	0	; () banked
  4190  001B5A  15B8               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4191  001B5C  0100               	movlb	0	; () banked
  4192  001B5E  6FC2               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4193  001B60  0E00               	movlw	0
  4194  001B62  0100               	movlb	0	; () banked
  4195  001B64  15B9               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4196  001B66  0100               	movlb	0	; () banked
  4197  001B68  6FC3               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4198  001B6A  0E00               	movlw	0
  4199  001B6C  0100               	movlb	0	; () banked
  4200  001B6E  15BA               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4201  001B70  0100               	movlb	0	; () banked
  4202  001B72  6FC4               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4206  001B74  C0C1  F0BC         	movff	CANSetMask@tamp,??_CANSetMask
  4207  001B78  C0C2  F0BD         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4208  001B7C  C0C3  F0BE         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4209  001B80  C0C4  F0BF         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4210  001B84  C0BD  F0BC         	movff	??_CANSetMask+1,??_CANSetMask
  4211  001B88  C0BE  F0BD         	movff	??_CANSetMask+2,??_CANSetMask+1
  4212  001B8C  C0BF  F0BE         	movff	??_CANSetMask+3,??_CANSetMask+2
  4213  001B90  0100               	movlb	0	; () banked
  4214  001B92  6BBF               	clrf	(??_CANSetMask+3)& (0+255),b
  4215  001B94  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  4216  001B98  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4217  001B9C  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4218  001BA0  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4222  001BA4  C0C1  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4226  001BA8  0100               	movlb	0	; () banked
  4227  001BAA  A1B9               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4228  001BAC  D003               	goto	l453
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4232  001BAE  010F               	movlb	15	; () banked
  4233  001BB0  811D               	bsf	29,0,b	;volatile
  4234  001BB2  D002               	goto	l454
  4235  001BB4                     l453:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;inc\CANlib.h: 715: else
  4239                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4240  001BB4  010F               	movlb	15	; () banked
  4241  001BB6  911D               	bcf	29,0,b	;volatile
  4242  001BB8                     l454:
  4243                           
  4244                           ; BSR set to: 15
  4245                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4246  001BB8  0100               	movlb	0	; () banked
  4247  001BBA  A3B9               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4248  001BBC  D003               	goto	l455
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4252  001BBE  010F               	movlb	15	; () banked
  4253  001BC0  831D               	bsf	29,1,b	;volatile
  4254  001BC2  D002               	goto	l456
  4255  001BC4                     l455:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;inc\CANlib.h: 720: else
  4259                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4260  001BC4  010F               	movlb	15	; () banked
  4261  001BC6  931D               	bcf	29,1,b	;volatile
  4262  001BC8                     l456:
  4263                           
  4264                           ; BSR set to: 15
  4265                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4266  001BC8  0100               	movlb	0	; () banked
  4267  001BCA  A5B9               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4268  001BCC  D003               	goto	l457
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4272  001BCE  010F               	movlb	15	; () banked
  4273  001BD0  8B1D               	bsf	29,5,b	;volatile
  4274  001BD2  D002               	goto	l458
  4275  001BD4                     l457:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;inc\CANlib.h: 725: else
  4279                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4280  001BD4  010F               	movlb	15	; () banked
  4281  001BD6  9B1D               	bcf	29,5,b	;volatile
  4282  001BD8                     l458:
  4283                           
  4284                           ; BSR set to: 15
  4285                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4286  001BD8  0100               	movlb	0	; () banked
  4287  001BDA  A7B9               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4288  001BDC  D003               	goto	l459
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4292  001BDE  010F               	movlb	15	; () banked
  4293  001BE0  8D1D               	bsf	29,6,b	;volatile
  4294  001BE2  D002               	goto	l460
  4295  001BE4                     l459:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;inc\CANlib.h: 730: else
  4299                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4300  001BE4  010F               	movlb	15	; () banked
  4301  001BE6  9D1D               	bcf	29,6,b	;volatile
  4302  001BE8                     l460:
  4303                           
  4304                           ; BSR set to: 15
  4305                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4306  001BE8  0100               	movlb	0	; () banked
  4307  001BEA  A9B9               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4308  001BEC  D003               	goto	l461
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4312  001BEE  010F               	movlb	15	; () banked
  4313  001BF0  8F1D               	bsf	29,7,b	;volatile
  4314  001BF2  D002               	goto	l2784
  4315  001BF4                     l461:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;inc\CANlib.h: 735: else
  4319                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4320  001BF4  010F               	movlb	15	; () banked
  4321  001BF6  9F1D               	bcf	29,7,b	;volatile
  4322  001BF8                     l2784:
  4323                           
  4324                           ; BSR set to: 15
  4325                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4326  001BF8  C0B7  F0BC         	movff	CANSetMask@mask,??_CANSetMask
  4327  001BFC  C0B8  F0BD         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4328  001C00  C0B9  F0BE         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4329  001C04  C0BA  F0BF         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4330  001C08  0E16               	movlw	22
  4331  001C0A  D006               	goto	u2500
  4332  001C0C                     u2505:
  4333  001C0C  0100               	movlb	0	; () banked
  4334  001C0E  90D8               	bcf	status,0,c
  4335  001C10  33BF               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4336  001C12  33BE               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4337  001C14  33BD               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4338  001C16  33BC               	rrcf	??_CANSetMask& (0+255),f,b
  4339  001C18                     u2500:
  4340  001C18  2EE8               	decfsz	wreg,f,c
  4341  001C1A  D7F8               	goto	u2505
  4342  001C1C  C0BC  F0C1         	movff	??_CANSetMask,CANSetMask@tamp
  4343  001C20  C0BD  F0C2         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4344  001C24  C0BE  F0C3         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4345  001C28  C0BF  F0C4         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4349  001C2C  0100               	movlb	0	; () banked
  4350  001C2E  51C1               	movf	CANSetMask@tamp& (0+255),w,b
  4351  001C30  0100               	movlb	0	; () banked
  4352  001C32  6FC1               	movwf	CANSetMask@tamp& (0+255),b
  4353  001C34  6BC2               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4354  001C36  6BC3               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4355  001C38  6BC4               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4359  001C3A  C0C1  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4360  001C3E  0012               	return	
  4361  001C40                     __end_of_CANSetMask:
  4362                           	opt stack 0
  4363                           tblptru	equ	0xFF8
  4364                           tblptrh	equ	0xFF7
  4365                           tblptrl	equ	0xFF6
  4366                           tablat	equ	0xFF5
  4367                           prodh	equ	0xFF4
  4368                           prodl	equ	0xFF3
  4369                           intcon	equ	0xFF2
  4370                           intcon2	equ	0xFF1
  4371                           intcon3	equ	0xFF0
  4372                           postinc0	equ	0xFEE
  4373                           wreg	equ	0xFE8
  4374                           postdec1	equ	0xFE5
  4375                           fsr1l	equ	0xFE1
  4376                           indf2	equ	0xFDF
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function _CANSetFilter *****************
  4382 ;; Defined at:
  4383 ;;		line 748 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  numBuffer       1    wreg     enum E16881
  4386 ;;  filter          4   27[BANK0 ] unsigned long 
  4387 ;;  type            1   31[BANK0 ] enum E16844
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  numBuffer       1   36[BANK0 ] enum E16881
  4390 ;;  tamp            4   37[BANK0 ] unsigned long 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;		None               void
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4400 ;;      Params:         0       5       0       0
  4401 ;;      Locals:         0       5       0       0
  4402 ;;      Temps:          0       4       0       0
  4403 ;;      Totals:         0      14       0       0
  4404 ;;Total ram usage:       14 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    4
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_CANInitialize
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text9
  4415  000104                     __ptext9:
  4416                           	opt stack 0
  4417  000104                     _CANSetFilter:
  4418                           	opt stack 24
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;incstack = 0
  4422                           ;CANSetFilter@numBuffer stored from wreg
  4423  000104  0100               	movlb	0	; () banked
  4424  000106  6FC0               	movwf	CANSetFilter@numBuffer& (0+255),b
  4425                           
  4426                           ;inc\CANlib.h: 750: unsigned long tamp;
  4427                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4428  000108  0100               	movlb	0	; () banked
  4429  00010A  51C0               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4430  00010C  0100               	movlb	0	; () banked
  4431  00010E  A4D8               	btfss	status,2,c
  4432  000110  D058               	goto	l2808
  4433                           
  4434                           ; BSR set to: 0
  4435  000112  0100               	movlb	0	; () banked
  4436  000114  29BB               	incf	CANSetFilter@type& (0+255),w,b
  4437  000116  A4D8               	btfss	status,2,c
  4438  000118  D054               	goto	l2808
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;inc\CANlib.h: 753: {
  4442                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4443  00011A  010F               	movlb	15	; () banked
  4444  00011C  9701               	bcf	1,3,b	;volatile
  4445                           
  4446                           ; BSR set to: 15
  4447                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4448  00011E  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  4449  000122  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4450  000126  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4451  00012A  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4452  00012E  0E04               	movlw	4
  4453  000130  D006               	goto	u2530
  4454  000132                     u2535:
  4455  000132  0100               	movlb	0	; () banked
  4456  000134  90D8               	bcf	status,0,c
  4457  000136  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4458  000138  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4459  00013A  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4460  00013C  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  4461  00013E                     u2530:
  4462  00013E  2EE8               	decfsz	wreg,f,c
  4463  000140  D7F8               	goto	u2535
  4464  000142  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4465  000146  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4466  00014A  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4467  00014E  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4471  000152  0100               	movlb	0	; () banked
  4472  000154  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  4473  000156  0100               	movlb	0	; () banked
  4474  000158  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4475  00015A  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4476  00015C  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4477  00015E  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4481  000160  C0C1  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4485  000164  0E07               	movlw	7
  4486  000166  0100               	movlb	0	; () banked
  4487  000168  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  4488  00016A  0100               	movlb	0	; () banked
  4489  00016C  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4490  00016E  0E00               	movlw	0
  4491  000170  0100               	movlb	0	; () banked
  4492  000172  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4493  000174  0100               	movlb	0	; () banked
  4494  000176  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4495  000178  0E00               	movlw	0
  4496  00017A  0100               	movlb	0	; () banked
  4497  00017C  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4498  00017E  0100               	movlb	0	; () banked
  4499  000180  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4500  000182  0E00               	movlw	0
  4501  000184  0100               	movlb	0	; () banked
  4502  000186  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4503  000188  0100               	movlb	0	; () banked
  4504  00018A  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4508  00018C  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  4509  000190  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4510  000194  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4511  000198  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4512  00019C  0E05               	movlw	5
  4513  00019E                     u2545:
  4514  00019E  90D8               	bcf	status,0,c
  4515  0001A0  0100               	movlb	0	; () banked
  4516  0001A2  37BC               	rlcf	??_CANSetFilter& (0+255),f,b
  4517  0001A4  37BD               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4518  0001A6  37BE               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4519  0001A8  37BF               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4520  0001AA  2EE8               	decfsz	wreg,f,c
  4521  0001AC  D7F8               	goto	u2545
  4522  0001AE  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4523  0001B2  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4524  0001B6  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4525  0001BA  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4529  0001BE  C0C1  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4530  0001C2                     l2808:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 763: }
  4534                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4535  0001C2  0100               	movlb	0	; () banked
  4536  0001C4  05C0               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4537  0001C6  A4D8               	btfss	status,2,c
  4538  0001C8  D058               	goto	l2826
  4539                           
  4540                           ; BSR set to: 0
  4541  0001CA  0100               	movlb	0	; () banked
  4542  0001CC  29BB               	incf	CANSetFilter@type& (0+255),w,b
  4543  0001CE  A4D8               	btfss	status,2,c
  4544  0001D0  D054               	goto	l2826
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 766: {
  4548                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4549  0001D2  010F               	movlb	15	; () banked
  4550  0001D4  9705               	bcf	5,3,b	;volatile
  4551                           
  4552                           ; BSR set to: 15
  4553                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4554  0001D6  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  4555  0001DA  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4556  0001DE  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4557  0001E2  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4558  0001E6  0E04               	movlw	4
  4559  0001E8  D006               	goto	u2570
  4560  0001EA                     u2575:
  4561  0001EA  0100               	movlb	0	; () banked
  4562  0001EC  90D8               	bcf	status,0,c
  4563  0001EE  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4564  0001F0  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4565  0001F2  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4566  0001F4  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  4567  0001F6                     u2570:
  4568  0001F6  2EE8               	decfsz	wreg,f,c
  4569  0001F8  D7F8               	goto	u2575
  4570  0001FA  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4571  0001FE  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4572  000202  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4573  000206  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4577  00020A  0100               	movlb	0	; () banked
  4578  00020C  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  4579  00020E  0100               	movlb	0	; () banked
  4580  000210  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4581  000212  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4582  000214  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4583  000216  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4587  000218  C0C1  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4591  00021C  0E07               	movlw	7
  4592  00021E  0100               	movlb	0	; () banked
  4593  000220  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  4594  000222  0100               	movlb	0	; () banked
  4595  000224  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4596  000226  0E00               	movlw	0
  4597  000228  0100               	movlb	0	; () banked
  4598  00022A  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4599  00022C  0100               	movlb	0	; () banked
  4600  00022E  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4601  000230  0E00               	movlw	0
  4602  000232  0100               	movlb	0	; () banked
  4603  000234  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4604  000236  0100               	movlb	0	; () banked
  4605  000238  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4606  00023A  0E00               	movlw	0
  4607  00023C  0100               	movlb	0	; () banked
  4608  00023E  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4609  000240  0100               	movlb	0	; () banked
  4610  000242  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4614  000244  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  4615  000248  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4616  00024C  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4617  000250  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4618  000254  0E05               	movlw	5
  4619  000256                     u2585:
  4620  000256  90D8               	bcf	status,0,c
  4621  000258  0100               	movlb	0	; () banked
  4622  00025A  37BC               	rlcf	??_CANSetFilter& (0+255),f,b
  4623  00025C  37BD               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4624  00025E  37BE               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4625  000260  37BF               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4626  000262  2EE8               	decfsz	wreg,f,c
  4627  000264  D7F8               	goto	u2585
  4628  000266  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4629  00026A  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4630  00026E  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4631  000272  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4635  000276  C0C1  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4636  00027A                     l2826:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;inc\CANlib.h: 776: }
  4640                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4641  00027A  0E02               	movlw	2
  4642  00027C  0100               	movlb	0	; () banked
  4643  00027E  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4644  000280  A4D8               	btfss	status,2,c
  4645  000282  D058               	goto	l2844
  4646                           
  4647                           ; BSR set to: 0
  4648  000284  0100               	movlb	0	; () banked
  4649  000286  29BB               	incf	CANSetFilter@type& (0+255),w,b
  4650  000288  A4D8               	btfss	status,2,c
  4651  00028A  D054               	goto	l2844
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 779: {
  4655                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4656  00028C  010F               	movlb	15	; () banked
  4657  00028E  9709               	bcf	9,3,b	;volatile
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4661  000290  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  4662  000294  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4663  000298  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4664  00029C  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4665  0002A0  0E04               	movlw	4
  4666  0002A2  D006               	goto	u2610
  4667  0002A4                     u2615:
  4668  0002A4  0100               	movlb	0	; () banked
  4669  0002A6  90D8               	bcf	status,0,c
  4670  0002A8  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4671  0002AA  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4672  0002AC  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4673  0002AE  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  4674  0002B0                     u2610:
  4675  0002B0  2EE8               	decfsz	wreg,f,c
  4676  0002B2  D7F8               	goto	u2615
  4677  0002B4  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4678  0002B8  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4679  0002BC  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4680  0002C0  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4684  0002C4  0100               	movlb	0	; () banked
  4685  0002C6  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  4686  0002C8  0100               	movlb	0	; () banked
  4687  0002CA  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4688  0002CC  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4689  0002CE  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4690  0002D0  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4694  0002D2  C0C1  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4698  0002D6  0E07               	movlw	7
  4699  0002D8  0100               	movlb	0	; () banked
  4700  0002DA  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  4701  0002DC  0100               	movlb	0	; () banked
  4702  0002DE  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4703  0002E0  0E00               	movlw	0
  4704  0002E2  0100               	movlb	0	; () banked
  4705  0002E4  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4706  0002E6  0100               	movlb	0	; () banked
  4707  0002E8  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4708  0002EA  0E00               	movlw	0
  4709  0002EC  0100               	movlb	0	; () banked
  4710  0002EE  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4711  0002F0  0100               	movlb	0	; () banked
  4712  0002F2  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4713  0002F4  0E00               	movlw	0
  4714  0002F6  0100               	movlb	0	; () banked
  4715  0002F8  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4716  0002FA  0100               	movlb	0	; () banked
  4717  0002FC  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4721  0002FE  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  4722  000302  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4723  000306  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4724  00030A  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4725  00030E  0E05               	movlw	5
  4726  000310                     u2625:
  4727  000310  90D8               	bcf	status,0,c
  4728  000312  0100               	movlb	0	; () banked
  4729  000314  37BC               	rlcf	??_CANSetFilter& (0+255),f,b
  4730  000316  37BD               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4731  000318  37BE               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4732  00031A  37BF               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4733  00031C  2EE8               	decfsz	wreg,f,c
  4734  00031E  D7F8               	goto	u2625
  4735  000320  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4736  000324  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4737  000328  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4738  00032C  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4742  000330  C0C1  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4743  000334                     l2844:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;inc\CANlib.h: 789: }
  4747                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4748  000334  0E03               	movlw	3
  4749  000336  0100               	movlb	0	; () banked
  4750  000338  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4751  00033A  A4D8               	btfss	status,2,c
  4752  00033C  D058               	goto	l2862
  4753                           
  4754                           ; BSR set to: 0
  4755  00033E  0100               	movlb	0	; () banked
  4756  000340  29BB               	incf	CANSetFilter@type& (0+255),w,b
  4757  000342  A4D8               	btfss	status,2,c
  4758  000344  D054               	goto	l2862
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 792: {
  4762                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4763  000346  010F               	movlb	15	; () banked
  4764  000348  970D               	bcf	13,3,b	;volatile
  4765                           
  4766                           ; BSR set to: 15
  4767                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4768  00034A  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  4769  00034E  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4770  000352  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4771  000356  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4772  00035A  0E04               	movlw	4
  4773  00035C  D006               	goto	u2650
  4774  00035E                     u2655:
  4775  00035E  0100               	movlb	0	; () banked
  4776  000360  90D8               	bcf	status,0,c
  4777  000362  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4778  000364  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4779  000366  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4780  000368  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  4781  00036A                     u2650:
  4782  00036A  2EE8               	decfsz	wreg,f,c
  4783  00036C  D7F8               	goto	u2655
  4784  00036E  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4785  000372  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4786  000376  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4787  00037A  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4791  00037E  0100               	movlb	0	; () banked
  4792  000380  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  4793  000382  0100               	movlb	0	; () banked
  4794  000384  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4795  000386  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4796  000388  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4797  00038A  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4801  00038C  C0C1  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4805  000390  0E07               	movlw	7
  4806  000392  0100               	movlb	0	; () banked
  4807  000394  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  4808  000396  0100               	movlb	0	; () banked
  4809  000398  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4810  00039A  0E00               	movlw	0
  4811  00039C  0100               	movlb	0	; () banked
  4812  00039E  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4813  0003A0  0100               	movlb	0	; () banked
  4814  0003A2  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4815  0003A4  0E00               	movlw	0
  4816  0003A6  0100               	movlb	0	; () banked
  4817  0003A8  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4818  0003AA  0100               	movlb	0	; () banked
  4819  0003AC  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4820  0003AE  0E00               	movlw	0
  4821  0003B0  0100               	movlb	0	; () banked
  4822  0003B2  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4823  0003B4  0100               	movlb	0	; () banked
  4824  0003B6  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4828  0003B8  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  4829  0003BC  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4830  0003C0  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4831  0003C4  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4832  0003C8  0E05               	movlw	5
  4833  0003CA                     u2665:
  4834  0003CA  90D8               	bcf	status,0,c
  4835  0003CC  0100               	movlb	0	; () banked
  4836  0003CE  37BC               	rlcf	??_CANSetFilter& (0+255),f,b
  4837  0003D0  37BD               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4838  0003D2  37BE               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4839  0003D4  37BF               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4840  0003D6  2EE8               	decfsz	wreg,f,c
  4841  0003D8  D7F8               	goto	u2665
  4842  0003DA  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4843  0003DE  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4844  0003E2  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4845  0003E6  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4849  0003EA  C0C1  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4850  0003EE                     l2862:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;inc\CANlib.h: 802: }
  4854                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4855  0003EE  0E04               	movlw	4
  4856  0003F0  0100               	movlb	0	; () banked
  4857  0003F2  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4858  0003F4  A4D8               	btfss	status,2,c
  4859  0003F6  D058               	goto	l2880
  4860                           
  4861                           ; BSR set to: 0
  4862  0003F8  0100               	movlb	0	; () banked
  4863  0003FA  29BB               	incf	CANSetFilter@type& (0+255),w,b
  4864  0003FC  A4D8               	btfss	status,2,c
  4865  0003FE  D054               	goto	l2880
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;inc\CANlib.h: 805: {
  4869                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4870  000400  010F               	movlb	15	; () banked
  4871  000402  9711               	bcf	17,3,b	;volatile
  4872                           
  4873                           ; BSR set to: 15
  4874                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4875  000404  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  4876  000408  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4877  00040C  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4878  000410  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4879  000414  0E04               	movlw	4
  4880  000416  D006               	goto	u2690
  4881  000418                     u2695:
  4882  000418  0100               	movlb	0	; () banked
  4883  00041A  90D8               	bcf	status,0,c
  4884  00041C  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4885  00041E  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4886  000420  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4887  000422  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  4888  000424                     u2690:
  4889  000424  2EE8               	decfsz	wreg,f,c
  4890  000426  D7F8               	goto	u2695
  4891  000428  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4892  00042C  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4893  000430  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4894  000434  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4898  000438  0100               	movlb	0	; () banked
  4899  00043A  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  4900  00043C  0100               	movlb	0	; () banked
  4901  00043E  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4902  000440  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4903  000442  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4904  000444  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4908  000446  C0C1  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4912  00044A  0E07               	movlw	7
  4913  00044C  0100               	movlb	0	; () banked
  4914  00044E  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  4915  000450  0100               	movlb	0	; () banked
  4916  000452  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  4917  000454  0E00               	movlw	0
  4918  000456  0100               	movlb	0	; () banked
  4919  000458  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4920  00045A  0100               	movlb	0	; () banked
  4921  00045C  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4922  00045E  0E00               	movlw	0
  4923  000460  0100               	movlb	0	; () banked
  4924  000462  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4925  000464  0100               	movlb	0	; () banked
  4926  000466  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4927  000468  0E00               	movlw	0
  4928  00046A  0100               	movlb	0	; () banked
  4929  00046C  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4930  00046E  0100               	movlb	0	; () banked
  4931  000470  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4935  000472  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  4936  000476  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4937  00047A  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4938  00047E  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4939  000482  0E05               	movlw	5
  4940  000484                     u2705:
  4941  000484  90D8               	bcf	status,0,c
  4942  000486  0100               	movlb	0	; () banked
  4943  000488  37BC               	rlcf	??_CANSetFilter& (0+255),f,b
  4944  00048A  37BD               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4945  00048C  37BE               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4946  00048E  37BF               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4947  000490  2EE8               	decfsz	wreg,f,c
  4948  000492  D7F8               	goto	u2705
  4949  000494  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4950  000498  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4951  00049C  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4952  0004A0  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4956  0004A4  C0C1  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4957  0004A8                     l2880:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;inc\CANlib.h: 815: }
  4961                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4962  0004A8  0E05               	movlw	5
  4963  0004AA  0100               	movlb	0	; () banked
  4964  0004AC  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4965  0004AE  A4D8               	btfss	status,2,c
  4966  0004B0  D058               	goto	l2898
  4967                           
  4968                           ; BSR set to: 0
  4969  0004B2  0100               	movlb	0	; () banked
  4970  0004B4  29BB               	incf	CANSetFilter@type& (0+255),w,b
  4971  0004B6  A4D8               	btfss	status,2,c
  4972  0004B8  D054               	goto	l2898
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;inc\CANlib.h: 818: {
  4976                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4977  0004BA  010F               	movlb	15	; () banked
  4978  0004BC  9715               	bcf	21,3,b	;volatile
  4979                           
  4980                           ; BSR set to: 15
  4981                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4982  0004BE  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  4983  0004C2  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4984  0004C6  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4985  0004CA  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4986  0004CE  0E04               	movlw	4
  4987  0004D0  D006               	goto	u2730
  4988  0004D2                     u2735:
  4989  0004D2  0100               	movlb	0	; () banked
  4990  0004D4  90D8               	bcf	status,0,c
  4991  0004D6  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4992  0004D8  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4993  0004DA  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4994  0004DC  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  4995  0004DE                     u2730:
  4996  0004DE  2EE8               	decfsz	wreg,f,c
  4997  0004E0  D7F8               	goto	u2735
  4998  0004E2  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  4999  0004E6  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5000  0004EA  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5001  0004EE  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5005  0004F2  0100               	movlb	0	; () banked
  5006  0004F4  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  5007  0004F6  0100               	movlb	0	; () banked
  5008  0004F8  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5009  0004FA  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5010  0004FC  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5011  0004FE  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5015  000500  C0C1  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5019  000504  0E07               	movlw	7
  5020  000506  0100               	movlb	0	; () banked
  5021  000508  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  5022  00050A  0100               	movlb	0	; () banked
  5023  00050C  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5024  00050E  0E00               	movlw	0
  5025  000510  0100               	movlb	0	; () banked
  5026  000512  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5027  000514  0100               	movlb	0	; () banked
  5028  000516  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5029  000518  0E00               	movlw	0
  5030  00051A  0100               	movlb	0	; () banked
  5031  00051C  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5032  00051E  0100               	movlb	0	; () banked
  5033  000520  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5034  000522  0E00               	movlw	0
  5035  000524  0100               	movlb	0	; () banked
  5036  000526  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5037  000528  0100               	movlb	0	; () banked
  5038  00052A  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5042  00052C  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  5043  000530  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5044  000534  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5045  000538  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5046  00053C  0E05               	movlw	5
  5047  00053E                     u2745:
  5048  00053E  90D8               	bcf	status,0,c
  5049  000540  0100               	movlb	0	; () banked
  5050  000542  37BC               	rlcf	??_CANSetFilter& (0+255),f,b
  5051  000544  37BD               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5052  000546  37BE               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5053  000548  37BF               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5054  00054A  2EE8               	decfsz	wreg,f,c
  5055  00054C  D7F8               	goto	u2745
  5056  00054E  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5057  000552  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5058  000556  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5059  00055A  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5063  00055E  C0C1  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5064  000562                     l2898:
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;inc\CANlib.h: 828: }
  5068                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5069  000562  0100               	movlb	0	; () banked
  5070  000564  51C0               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5071  000566  0100               	movlb	0	; () banked
  5072  000568  A4D8               	btfss	status,2,c
  5073  00056A  D089               	goto	l2932
  5074                           
  5075                           ; BSR set to: 0
  5076  00056C  0EF7               	movlw	247
  5077  00056E  0100               	movlb	0	; () banked
  5078  000570  19BB               	xorwf	CANSetFilter@type& (0+255),w,b
  5079  000572  A4D8               	btfss	status,2,c
  5080  000574  D084               	goto	l2932
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;inc\CANlib.h: 832: {
  5084                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5085  000576  010F               	movlb	15	; () banked
  5086  000578  8701               	bsf	1,3,b	;volatile
  5087                           
  5088                           ; BSR set to: 15
  5089                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5090  00057A  0100               	movlb	0	; () banked
  5091  00057C  51B7               	movf	CANSetFilter@filter& (0+255),w,b
  5092  00057E  0100               	movlb	0	; () banked
  5093  000580  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5094  000582  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5095  000584  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5096  000586  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5100  000588  C0C1  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5104  00058C  0E00               	movlw	0
  5105  00058E  0100               	movlb	0	; () banked
  5106  000590  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  5107  000592  0100               	movlb	0	; () banked
  5108  000594  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5109  000596  0EFF               	movlw	255
  5110  000598  0100               	movlb	0	; () banked
  5111  00059A  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5112  00059C  0100               	movlb	0	; () banked
  5113  00059E  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5114  0005A0  0E00               	movlw	0
  5115  0005A2  0100               	movlb	0	; () banked
  5116  0005A4  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5117  0005A6  0100               	movlb	0	; () banked
  5118  0005A8  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5119  0005AA  0E00               	movlw	0
  5120  0005AC  0100               	movlb	0	; () banked
  5121  0005AE  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5122  0005B0  0100               	movlb	0	; () banked
  5123  0005B2  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5127  0005B4  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  5128  0005B8  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5129  0005BC  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5130  0005C0  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5131  0005C4  C0BD  F0BC         	movff	??_CANSetFilter+1,??_CANSetFilter
  5132  0005C8  C0BE  F0BD         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5133  0005CC  C0BF  F0BE         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5134  0005D0  0100               	movlb	0	; () banked
  5135  0005D2  6BBF               	clrf	(??_CANSetFilter+3)& (0+255),b
  5136  0005D4  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5137  0005D8  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5138  0005DC  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5139  0005E0  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5143  0005E4  C0C1  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5147  0005E8  0100               	movlb	0	; () banked
  5148  0005EA  A1B9               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5149  0005EC  D003               	goto	l473
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5153  0005EE  010F               	movlb	15	; () banked
  5154  0005F0  8101               	bsf	1,0,b	;volatile
  5155  0005F2  D002               	goto	l474
  5156  0005F4                     l473:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;inc\CANlib.h: 844: else
  5160                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5161  0005F4  010F               	movlb	15	; () banked
  5162  0005F6  9101               	bcf	1,0,b	;volatile
  5163  0005F8                     l474:
  5164                           
  5165                           ; BSR set to: 15
  5166                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5167  0005F8  0100               	movlb	0	; () banked
  5168  0005FA  A3B9               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5169  0005FC  D003               	goto	l475
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5173  0005FE  010F               	movlb	15	; () banked
  5174  000600  8301               	bsf	1,1,b	;volatile
  5175  000602  D002               	goto	l476
  5176  000604                     l475:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;inc\CANlib.h: 849: else
  5180                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5181  000604  010F               	movlb	15	; () banked
  5182  000606  9301               	bcf	1,1,b	;volatile
  5183  000608                     l476:
  5184                           
  5185                           ; BSR set to: 15
  5186                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5187  000608  0100               	movlb	0	; () banked
  5188  00060A  A5B9               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5189  00060C  D003               	goto	l477
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5193  00060E  010F               	movlb	15	; () banked
  5194  000610  8B01               	bsf	1,5,b	;volatile
  5195  000612  D002               	goto	l478
  5196  000614                     l477:
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;inc\CANlib.h: 854: else
  5200                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5201  000614  010F               	movlb	15	; () banked
  5202  000616  9B01               	bcf	1,5,b	;volatile
  5203  000618                     l478:
  5204                           
  5205                           ; BSR set to: 15
  5206                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5207  000618  0100               	movlb	0	; () banked
  5208  00061A  A7B9               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5209  00061C  D003               	goto	l479
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5213  00061E  010F               	movlb	15	; () banked
  5214  000620  8D01               	bsf	1,6,b	;volatile
  5215  000622  D002               	goto	l480
  5216  000624                     l479:
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;inc\CANlib.h: 859: else
  5220                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5221  000624  010F               	movlb	15	; () banked
  5222  000626  9D01               	bcf	1,6,b	;volatile
  5223  000628                     l480:
  5224                           
  5225                           ; BSR set to: 15
  5226                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5227  000628  0100               	movlb	0	; () banked
  5228  00062A  A9B9               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5229  00062C  D003               	goto	l481
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5233  00062E  010F               	movlb	15	; () banked
  5234  000630  8F01               	bsf	1,7,b	;volatile
  5235  000632  D002               	goto	l2926
  5236  000634                     l481:
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;inc\CANlib.h: 864: else
  5240                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5241  000634  010F               	movlb	15	; () banked
  5242  000636  9F01               	bcf	1,7,b	;volatile
  5243  000638                     l2926:
  5244                           
  5245                           ; BSR set to: 15
  5246                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5247  000638  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  5248  00063C  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5249  000640  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5250  000644  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5251  000648  0E16               	movlw	22
  5252  00064A  D006               	goto	u2820
  5253  00064C                     u2825:
  5254  00064C  0100               	movlb	0	; () banked
  5255  00064E  90D8               	bcf	status,0,c
  5256  000650  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5257  000652  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5258  000654  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5259  000656  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  5260  000658                     u2820:
  5261  000658  2EE8               	decfsz	wreg,f,c
  5262  00065A  D7F8               	goto	u2825
  5263  00065C  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5264  000660  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5265  000664  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5266  000668  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5270  00066C  0100               	movlb	0	; () banked
  5271  00066E  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  5272  000670  0100               	movlb	0	; () banked
  5273  000672  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5274  000674  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5275  000676  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5276  000678  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5280  00067A  C0C1  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5281  00067E                     l2932:
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;inc\CANlib.h: 870: }
  5285                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5286  00067E  0100               	movlb	0	; () banked
  5287  000680  05C0               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5288  000682  A4D8               	btfss	status,2,c
  5289  000684  D089               	goto	l2966
  5290                           
  5291                           ; BSR set to: 0
  5292  000686  0EF7               	movlw	247
  5293  000688  0100               	movlb	0	; () banked
  5294  00068A  19BB               	xorwf	CANSetFilter@type& (0+255),w,b
  5295  00068C  A4D8               	btfss	status,2,c
  5296  00068E  D084               	goto	l2966
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;inc\CANlib.h: 873: {
  5300                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5301  000690  010F               	movlb	15	; () banked
  5302  000692  8705               	bsf	5,3,b	;volatile
  5303                           
  5304                           ; BSR set to: 15
  5305                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5306  000694  0100               	movlb	0	; () banked
  5307  000696  51B7               	movf	CANSetFilter@filter& (0+255),w,b
  5308  000698  0100               	movlb	0	; () banked
  5309  00069A  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5310  00069C  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5311  00069E  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5312  0006A0  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5316  0006A2  C0C1  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5320  0006A6  0E00               	movlw	0
  5321  0006A8  0100               	movlb	0	; () banked
  5322  0006AA  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  5323  0006AC  0100               	movlb	0	; () banked
  5324  0006AE  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5325  0006B0  0EFF               	movlw	255
  5326  0006B2  0100               	movlb	0	; () banked
  5327  0006B4  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5328  0006B6  0100               	movlb	0	; () banked
  5329  0006B8  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5330  0006BA  0E00               	movlw	0
  5331  0006BC  0100               	movlb	0	; () banked
  5332  0006BE  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5333  0006C0  0100               	movlb	0	; () banked
  5334  0006C2  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5335  0006C4  0E00               	movlw	0
  5336  0006C6  0100               	movlb	0	; () banked
  5337  0006C8  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5338  0006CA  0100               	movlb	0	; () banked
  5339  0006CC  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5343  0006CE  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  5344  0006D2  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5345  0006D6  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5346  0006DA  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5347  0006DE  C0BD  F0BC         	movff	??_CANSetFilter+1,??_CANSetFilter
  5348  0006E2  C0BE  F0BD         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5349  0006E6  C0BF  F0BE         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5350  0006EA  0100               	movlb	0	; () banked
  5351  0006EC  6BBF               	clrf	(??_CANSetFilter+3)& (0+255),b
  5352  0006EE  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5353  0006F2  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5354  0006F6  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5355  0006FA  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5359  0006FE  C0C1  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5363  000702  0100               	movlb	0	; () banked
  5364  000704  A1B9               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5365  000706  D003               	goto	l484
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5369  000708  010F               	movlb	15	; () banked
  5370  00070A  8105               	bsf	5,0,b	;volatile
  5371  00070C  D002               	goto	l485
  5372  00070E                     l484:
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;inc\CANlib.h: 885: else
  5376                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5377  00070E  010F               	movlb	15	; () banked
  5378  000710  9105               	bcf	5,0,b	;volatile
  5379  000712                     l485:
  5380                           
  5381                           ; BSR set to: 15
  5382                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5383  000712  0100               	movlb	0	; () banked
  5384  000714  A3B9               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5385  000716  D003               	goto	l486
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5389  000718  010F               	movlb	15	; () banked
  5390  00071A  8305               	bsf	5,1,b	;volatile
  5391  00071C  D002               	goto	l487
  5392  00071E                     l486:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;inc\CANlib.h: 890: else
  5396                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5397  00071E  010F               	movlb	15	; () banked
  5398  000720  9305               	bcf	5,1,b	;volatile
  5399  000722                     l487:
  5400                           
  5401                           ; BSR set to: 15
  5402                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5403  000722  0100               	movlb	0	; () banked
  5404  000724  A5B9               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5405  000726  D003               	goto	l488
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5409  000728  010F               	movlb	15	; () banked
  5410  00072A  8B05               	bsf	5,5,b	;volatile
  5411  00072C  D002               	goto	l489
  5412  00072E                     l488:
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;inc\CANlib.h: 895: else
  5416                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5417  00072E  010F               	movlb	15	; () banked
  5418  000730  9B05               	bcf	5,5,b	;volatile
  5419  000732                     l489:
  5420                           
  5421                           ; BSR set to: 15
  5422                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5423  000732  0100               	movlb	0	; () banked
  5424  000734  A7B9               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5425  000736  D003               	goto	l490
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5429  000738  010F               	movlb	15	; () banked
  5430  00073A  8D05               	bsf	5,6,b	;volatile
  5431  00073C  D002               	goto	l491
  5432  00073E                     l490:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;inc\CANlib.h: 900: else
  5436                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5437  00073E  010F               	movlb	15	; () banked
  5438  000740  9D05               	bcf	5,6,b	;volatile
  5439  000742                     l491:
  5440                           
  5441                           ; BSR set to: 15
  5442                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5443  000742  0100               	movlb	0	; () banked
  5444  000744  A9B9               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5445  000746  D003               	goto	l492
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5449  000748  010F               	movlb	15	; () banked
  5450  00074A  8F05               	bsf	5,7,b	;volatile
  5451  00074C  D002               	goto	l2960
  5452  00074E                     l492:
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;inc\CANlib.h: 905: else
  5456                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5457  00074E  010F               	movlb	15	; () banked
  5458  000750  9F05               	bcf	5,7,b	;volatile
  5459  000752                     l2960:
  5460                           
  5461                           ; BSR set to: 15
  5462                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5463  000752  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  5464  000756  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5465  00075A  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5466  00075E  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5467  000762  0E16               	movlw	22
  5468  000764  D006               	goto	u2900
  5469  000766                     u2905:
  5470  000766  0100               	movlb	0	; () banked
  5471  000768  90D8               	bcf	status,0,c
  5472  00076A  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5473  00076C  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5474  00076E  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5475  000770  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  5476  000772                     u2900:
  5477  000772  2EE8               	decfsz	wreg,f,c
  5478  000774  D7F8               	goto	u2905
  5479  000776  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5480  00077A  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5481  00077E  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5482  000782  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5486  000786  0100               	movlb	0	; () banked
  5487  000788  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  5488  00078A  0100               	movlb	0	; () banked
  5489  00078C  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5490  00078E  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5491  000790  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5492  000792  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5496  000794  C0C1  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5497  000798                     l2966:
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;inc\CANlib.h: 911: }
  5501                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5502  000798  0E02               	movlw	2
  5503  00079A  0100               	movlb	0	; () banked
  5504  00079C  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5505  00079E  A4D8               	btfss	status,2,c
  5506  0007A0  D089               	goto	l3000
  5507                           
  5508                           ; BSR set to: 0
  5509  0007A2  0EF7               	movlw	247
  5510  0007A4  0100               	movlb	0	; () banked
  5511  0007A6  19BB               	xorwf	CANSetFilter@type& (0+255),w,b
  5512  0007A8  A4D8               	btfss	status,2,c
  5513  0007AA  D084               	goto	l3000
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;inc\CANlib.h: 915: {
  5517                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5518  0007AC  010F               	movlb	15	; () banked
  5519  0007AE  8709               	bsf	9,3,b	;volatile
  5520                           
  5521                           ; BSR set to: 15
  5522                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5523  0007B0  0100               	movlb	0	; () banked
  5524  0007B2  51B7               	movf	CANSetFilter@filter& (0+255),w,b
  5525  0007B4  0100               	movlb	0	; () banked
  5526  0007B6  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5527  0007B8  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5528  0007BA  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5529  0007BC  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5533  0007BE  C0C1  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5537  0007C2  0E00               	movlw	0
  5538  0007C4  0100               	movlb	0	; () banked
  5539  0007C6  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  5540  0007C8  0100               	movlb	0	; () banked
  5541  0007CA  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5542  0007CC  0EFF               	movlw	255
  5543  0007CE  0100               	movlb	0	; () banked
  5544  0007D0  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5545  0007D2  0100               	movlb	0	; () banked
  5546  0007D4  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5547  0007D6  0E00               	movlw	0
  5548  0007D8  0100               	movlb	0	; () banked
  5549  0007DA  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5550  0007DC  0100               	movlb	0	; () banked
  5551  0007DE  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5552  0007E0  0E00               	movlw	0
  5553  0007E2  0100               	movlb	0	; () banked
  5554  0007E4  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5555  0007E6  0100               	movlb	0	; () banked
  5556  0007E8  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5560  0007EA  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  5561  0007EE  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5562  0007F2  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5563  0007F6  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5564  0007FA  C0BD  F0BC         	movff	??_CANSetFilter+1,??_CANSetFilter
  5565  0007FE  C0BE  F0BD         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5566  000802  C0BF  F0BE         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5567  000806  0100               	movlb	0	; () banked
  5568  000808  6BBF               	clrf	(??_CANSetFilter+3)& (0+255),b
  5569  00080A  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5570  00080E  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5571  000812  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5572  000816  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5576  00081A  C0C1  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5580  00081E  0100               	movlb	0	; () banked
  5581  000820  A1B9               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5582  000822  D003               	goto	l495
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5586  000824  010F               	movlb	15	; () banked
  5587  000826  8109               	bsf	9,0,b	;volatile
  5588  000828  D002               	goto	l496
  5589  00082A                     l495:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;inc\CANlib.h: 927: else
  5593                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5594  00082A  010F               	movlb	15	; () banked
  5595  00082C  9109               	bcf	9,0,b	;volatile
  5596  00082E                     l496:
  5597                           
  5598                           ; BSR set to: 15
  5599                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5600  00082E  0100               	movlb	0	; () banked
  5601  000830  A3B9               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5602  000832  D003               	goto	l497
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5606  000834  010F               	movlb	15	; () banked
  5607  000836  8309               	bsf	9,1,b	;volatile
  5608  000838  D002               	goto	l498
  5609  00083A                     l497:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;inc\CANlib.h: 932: else
  5613                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5614  00083A  010F               	movlb	15	; () banked
  5615  00083C  9309               	bcf	9,1,b	;volatile
  5616  00083E                     l498:
  5617                           
  5618                           ; BSR set to: 15
  5619                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5620  00083E  0100               	movlb	0	; () banked
  5621  000840  A5B9               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5622  000842  D003               	goto	l499
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5626  000844  010F               	movlb	15	; () banked
  5627  000846  8B09               	bsf	9,5,b	;volatile
  5628  000848  D002               	goto	l500
  5629  00084A                     l499:
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;inc\CANlib.h: 937: else
  5633                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5634  00084A  010F               	movlb	15	; () banked
  5635  00084C  9B09               	bcf	9,5,b	;volatile
  5636  00084E                     l500:
  5637                           
  5638                           ; BSR set to: 15
  5639                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5640  00084E  0100               	movlb	0	; () banked
  5641  000850  A7B9               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5642  000852  D003               	goto	l501
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5646  000854  010F               	movlb	15	; () banked
  5647  000856  8D09               	bsf	9,6,b	;volatile
  5648  000858  D002               	goto	l502
  5649  00085A                     l501:
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;inc\CANlib.h: 942: else
  5653                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5654  00085A  010F               	movlb	15	; () banked
  5655  00085C  9D09               	bcf	9,6,b	;volatile
  5656  00085E                     l502:
  5657                           
  5658                           ; BSR set to: 15
  5659                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5660  00085E  0100               	movlb	0	; () banked
  5661  000860  A9B9               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5662  000862  D003               	goto	l503
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5666  000864  010F               	movlb	15	; () banked
  5667  000866  8F09               	bsf	9,7,b	;volatile
  5668  000868  D002               	goto	l2994
  5669  00086A                     l503:
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;inc\CANlib.h: 947: else
  5673                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5674  00086A  010F               	movlb	15	; () banked
  5675  00086C  9F09               	bcf	9,7,b	;volatile
  5676  00086E                     l2994:
  5677                           
  5678                           ; BSR set to: 15
  5679                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5680  00086E  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  5681  000872  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5682  000876  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5683  00087A  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5684  00087E  0E16               	movlw	22
  5685  000880  D006               	goto	u2980
  5686  000882                     u2985:
  5687  000882  0100               	movlb	0	; () banked
  5688  000884  90D8               	bcf	status,0,c
  5689  000886  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5690  000888  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5691  00088A  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5692  00088C  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  5693  00088E                     u2980:
  5694  00088E  2EE8               	decfsz	wreg,f,c
  5695  000890  D7F8               	goto	u2985
  5696  000892  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5697  000896  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5698  00089A  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5699  00089E  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5703  0008A2  0100               	movlb	0	; () banked
  5704  0008A4  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  5705  0008A6  0100               	movlb	0	; () banked
  5706  0008A8  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5707  0008AA  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5708  0008AC  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5709  0008AE  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5713  0008B0  C0C1  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5714  0008B4                     l3000:
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;inc\CANlib.h: 953: }
  5718                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5719  0008B4  0E03               	movlw	3
  5720  0008B6  0100               	movlb	0	; () banked
  5721  0008B8  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5722  0008BA  A4D8               	btfss	status,2,c
  5723  0008BC  D089               	goto	l3034
  5724                           
  5725                           ; BSR set to: 0
  5726  0008BE  0EF7               	movlw	247
  5727  0008C0  0100               	movlb	0	; () banked
  5728  0008C2  19BB               	xorwf	CANSetFilter@type& (0+255),w,b
  5729  0008C4  A4D8               	btfss	status,2,c
  5730  0008C6  D084               	goto	l3034
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;inc\CANlib.h: 956: {
  5734                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5735  0008C8  010F               	movlb	15	; () banked
  5736  0008CA  870D               	bsf	13,3,b	;volatile
  5737                           
  5738                           ; BSR set to: 15
  5739                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5740  0008CC  0100               	movlb	0	; () banked
  5741  0008CE  51B7               	movf	CANSetFilter@filter& (0+255),w,b
  5742  0008D0  0100               	movlb	0	; () banked
  5743  0008D2  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5744  0008D4  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5745  0008D6  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5746  0008D8  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5750  0008DA  C0C1  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5754  0008DE  0E00               	movlw	0
  5755  0008E0  0100               	movlb	0	; () banked
  5756  0008E2  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  5757  0008E4  0100               	movlb	0	; () banked
  5758  0008E6  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5759  0008E8  0EFF               	movlw	255
  5760  0008EA  0100               	movlb	0	; () banked
  5761  0008EC  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5762  0008EE  0100               	movlb	0	; () banked
  5763  0008F0  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5764  0008F2  0E00               	movlw	0
  5765  0008F4  0100               	movlb	0	; () banked
  5766  0008F6  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5767  0008F8  0100               	movlb	0	; () banked
  5768  0008FA  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5769  0008FC  0E00               	movlw	0
  5770  0008FE  0100               	movlb	0	; () banked
  5771  000900  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5772  000902  0100               	movlb	0	; () banked
  5773  000904  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5777  000906  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  5778  00090A  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5779  00090E  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5780  000912  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5781  000916  C0BD  F0BC         	movff	??_CANSetFilter+1,??_CANSetFilter
  5782  00091A  C0BE  F0BD         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5783  00091E  C0BF  F0BE         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5784  000922  0100               	movlb	0	; () banked
  5785  000924  6BBF               	clrf	(??_CANSetFilter+3)& (0+255),b
  5786  000926  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5787  00092A  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5788  00092E  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5789  000932  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5793  000936  C0C1  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5797  00093A  0100               	movlb	0	; () banked
  5798  00093C  A1B9               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5799  00093E  D003               	goto	l506
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5803  000940  010F               	movlb	15	; () banked
  5804  000942  810D               	bsf	13,0,b	;volatile
  5805  000944  D002               	goto	l507
  5806  000946                     l506:
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;inc\CANlib.h: 968: else
  5810                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5811  000946  010F               	movlb	15	; () banked
  5812  000948  910D               	bcf	13,0,b	;volatile
  5813  00094A                     l507:
  5814                           
  5815                           ; BSR set to: 15
  5816                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5817  00094A  0100               	movlb	0	; () banked
  5818  00094C  A3B9               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5819  00094E  D003               	goto	l508
  5820                           
  5821                           ; BSR set to: 0
  5822                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5823  000950  010F               	movlb	15	; () banked
  5824  000952  830D               	bsf	13,1,b	;volatile
  5825  000954  D002               	goto	l509
  5826  000956                     l508:
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;inc\CANlib.h: 973: else
  5830                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5831  000956  010F               	movlb	15	; () banked
  5832  000958  930D               	bcf	13,1,b	;volatile
  5833  00095A                     l509:
  5834                           
  5835                           ; BSR set to: 15
  5836                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5837  00095A  0100               	movlb	0	; () banked
  5838  00095C  A5B9               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5839  00095E  D003               	goto	l510
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5843  000960  010F               	movlb	15	; () banked
  5844  000962  8B0D               	bsf	13,5,b	;volatile
  5845  000964  D002               	goto	l511
  5846  000966                     l510:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;inc\CANlib.h: 978: else
  5850                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5851  000966  010F               	movlb	15	; () banked
  5852  000968  9B0D               	bcf	13,5,b	;volatile
  5853  00096A                     l511:
  5854                           
  5855                           ; BSR set to: 15
  5856                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5857  00096A  0100               	movlb	0	; () banked
  5858  00096C  A7B9               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5859  00096E  D003               	goto	l512
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5863  000970  010F               	movlb	15	; () banked
  5864  000972  8D0D               	bsf	13,6,b	;volatile
  5865  000974  D002               	goto	l513
  5866  000976                     l512:
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;inc\CANlib.h: 983: else
  5870                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5871  000976  010F               	movlb	15	; () banked
  5872  000978  9D0D               	bcf	13,6,b	;volatile
  5873  00097A                     l513:
  5874                           
  5875                           ; BSR set to: 15
  5876                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5877  00097A  0100               	movlb	0	; () banked
  5878  00097C  A9B9               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5879  00097E  D003               	goto	l514
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5883  000980  010F               	movlb	15	; () banked
  5884  000982  8F0D               	bsf	13,7,b	;volatile
  5885  000984  D002               	goto	l3028
  5886  000986                     l514:
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;inc\CANlib.h: 988: else
  5890                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5891  000986  010F               	movlb	15	; () banked
  5892  000988  9F0D               	bcf	13,7,b	;volatile
  5893  00098A                     l3028:
  5894                           
  5895                           ; BSR set to: 15
  5896                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5897  00098A  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  5898  00098E  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5899  000992  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5900  000996  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5901  00099A  0E16               	movlw	22
  5902  00099C  D006               	goto	u3060
  5903  00099E                     u3065:
  5904  00099E  0100               	movlb	0	; () banked
  5905  0009A0  90D8               	bcf	status,0,c
  5906  0009A2  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5907  0009A4  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5908  0009A6  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5909  0009A8  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  5910  0009AA                     u3060:
  5911  0009AA  2EE8               	decfsz	wreg,f,c
  5912  0009AC  D7F8               	goto	u3065
  5913  0009AE  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  5914  0009B2  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5915  0009B6  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5916  0009BA  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5920  0009BE  0100               	movlb	0	; () banked
  5921  0009C0  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  5922  0009C2  0100               	movlb	0	; () banked
  5923  0009C4  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5924  0009C6  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5925  0009C8  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5926  0009CA  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5930  0009CC  C0C1  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5931  0009D0                     l3034:
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;inc\CANlib.h: 994: }
  5935                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5936  0009D0  0E04               	movlw	4
  5937  0009D2  0100               	movlb	0	; () banked
  5938  0009D4  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5939  0009D6  A4D8               	btfss	status,2,c
  5940  0009D8  D089               	goto	l3068
  5941                           
  5942                           ; BSR set to: 0
  5943  0009DA  0EF7               	movlw	247
  5944  0009DC  0100               	movlb	0	; () banked
  5945  0009DE  19BB               	xorwf	CANSetFilter@type& (0+255),w,b
  5946  0009E0  A4D8               	btfss	status,2,c
  5947  0009E2  D084               	goto	l3068
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;inc\CANlib.h: 997: {
  5951                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5952  0009E4  010F               	movlb	15	; () banked
  5953  0009E6  8711               	bsf	17,3,b	;volatile
  5954                           
  5955                           ; BSR set to: 15
  5956                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5957  0009E8  0100               	movlb	0	; () banked
  5958  0009EA  51B7               	movf	CANSetFilter@filter& (0+255),w,b
  5959  0009EC  0100               	movlb	0	; () banked
  5960  0009EE  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5961  0009F0  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5962  0009F2  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5963  0009F4  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5967  0009F6  C0C1  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5971  0009FA  0E00               	movlw	0
  5972  0009FC  0100               	movlb	0	; () banked
  5973  0009FE  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  5974  000A00  0100               	movlb	0	; () banked
  5975  000A02  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  5976  000A04  0EFF               	movlw	255
  5977  000A06  0100               	movlb	0	; () banked
  5978  000A08  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5979  000A0A  0100               	movlb	0	; () banked
  5980  000A0C  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5981  000A0E  0E00               	movlw	0
  5982  000A10  0100               	movlb	0	; () banked
  5983  000A12  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5984  000A14  0100               	movlb	0	; () banked
  5985  000A16  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5986  000A18  0E00               	movlw	0
  5987  000A1A  0100               	movlb	0	; () banked
  5988  000A1C  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5989  000A1E  0100               	movlb	0	; () banked
  5990  000A20  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5994  000A22  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  5995  000A26  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5996  000A2A  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5997  000A2E  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5998  000A32  C0BD  F0BC         	movff	??_CANSetFilter+1,??_CANSetFilter
  5999  000A36  C0BE  F0BD         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6000  000A3A  C0BF  F0BE         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6001  000A3E  0100               	movlb	0	; () banked
  6002  000A40  6BBF               	clrf	(??_CANSetFilter+3)& (0+255),b
  6003  000A42  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  6004  000A46  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6005  000A4A  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6006  000A4E  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6010  000A52  C0C1  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6014  000A56  0100               	movlb	0	; () banked
  6015  000A58  A1B9               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6016  000A5A  D003               	goto	l517
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6020  000A5C  010F               	movlb	15	; () banked
  6021  000A5E  8111               	bsf	17,0,b	;volatile
  6022  000A60  D002               	goto	l518
  6023  000A62                     l517:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;inc\CANlib.h: 1009: else
  6027                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6028  000A62  010F               	movlb	15	; () banked
  6029  000A64  9111               	bcf	17,0,b	;volatile
  6030  000A66                     l518:
  6031                           
  6032                           ; BSR set to: 15
  6033                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6034  000A66  0100               	movlb	0	; () banked
  6035  000A68  A3B9               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6036  000A6A  D003               	goto	l519
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6040  000A6C  010F               	movlb	15	; () banked
  6041  000A6E  8311               	bsf	17,1,b	;volatile
  6042  000A70  D002               	goto	l520
  6043  000A72                     l519:
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;inc\CANlib.h: 1014: else
  6047                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6048  000A72  010F               	movlb	15	; () banked
  6049  000A74  9311               	bcf	17,1,b	;volatile
  6050  000A76                     l520:
  6051                           
  6052                           ; BSR set to: 15
  6053                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6054  000A76  0100               	movlb	0	; () banked
  6055  000A78  A5B9               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6056  000A7A  D003               	goto	l521
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6060  000A7C  010F               	movlb	15	; () banked
  6061  000A7E  8B11               	bsf	17,5,b	;volatile
  6062  000A80  D002               	goto	l522
  6063  000A82                     l521:
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;inc\CANlib.h: 1019: else
  6067                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6068  000A82  010F               	movlb	15	; () banked
  6069  000A84  9B11               	bcf	17,5,b	;volatile
  6070  000A86                     l522:
  6071                           
  6072                           ; BSR set to: 15
  6073                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6074  000A86  0100               	movlb	0	; () banked
  6075  000A88  A7B9               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6076  000A8A  D003               	goto	l523
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6080  000A8C  010F               	movlb	15	; () banked
  6081  000A8E  8D11               	bsf	17,6,b	;volatile
  6082  000A90  D002               	goto	l524
  6083  000A92                     l523:
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;inc\CANlib.h: 1024: else
  6087                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6088  000A92  010F               	movlb	15	; () banked
  6089  000A94  9D11               	bcf	17,6,b	;volatile
  6090  000A96                     l524:
  6091                           
  6092                           ; BSR set to: 15
  6093                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6094  000A96  0100               	movlb	0	; () banked
  6095  000A98  A9B9               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6096  000A9A  D003               	goto	l525
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6100  000A9C  010F               	movlb	15	; () banked
  6101  000A9E  8F11               	bsf	17,7,b	;volatile
  6102  000AA0  D002               	goto	l3062
  6103  000AA2                     l525:
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;inc\CANlib.h: 1029: else
  6107                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6108  000AA2  010F               	movlb	15	; () banked
  6109  000AA4  9F11               	bcf	17,7,b	;volatile
  6110  000AA6                     l3062:
  6111                           
  6112                           ; BSR set to: 15
  6113                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6114  000AA6  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  6115  000AAA  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6116  000AAE  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6117  000AB2  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6118  000AB6  0E16               	movlw	22
  6119  000AB8  D006               	goto	u3140
  6120  000ABA                     u3145:
  6121  000ABA  0100               	movlb	0	; () banked
  6122  000ABC  90D8               	bcf	status,0,c
  6123  000ABE  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6124  000AC0  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6125  000AC2  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6126  000AC4  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  6127  000AC6                     u3140:
  6128  000AC6  2EE8               	decfsz	wreg,f,c
  6129  000AC8  D7F8               	goto	u3145
  6130  000ACA  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  6131  000ACE  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6132  000AD2  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6133  000AD6  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6137  000ADA  0100               	movlb	0	; () banked
  6138  000ADC  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  6139  000ADE  0100               	movlb	0	; () banked
  6140  000AE0  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  6141  000AE2  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6142  000AE4  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6143  000AE6  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6147  000AE8  C0C1  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6148  000AEC                     l3068:
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;inc\CANlib.h: 1035: }
  6152                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6153  000AEC  0E05               	movlw	5
  6154  000AEE  0100               	movlb	0	; () banked
  6155  000AF0  19C0               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6156  000AF2  A4D8               	btfss	status,2,c
  6157  000AF4  0012               	return	
  6158                           
  6159                           ; BSR set to: 0
  6160  000AF6  0EF7               	movlw	247
  6161  000AF8  0100               	movlb	0	; () banked
  6162  000AFA  19BB               	xorwf	CANSetFilter@type& (0+255),w,b
  6163  000AFC  A4D8               	btfss	status,2,c
  6164  000AFE  0012               	return	
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;inc\CANlib.h: 1038: {
  6168                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6169  000B00  010F               	movlb	15	; () banked
  6170  000B02  8715               	bsf	21,3,b	;volatile
  6171                           
  6172                           ; BSR set to: 15
  6173                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6174  000B04  0100               	movlb	0	; () banked
  6175  000B06  51B7               	movf	CANSetFilter@filter& (0+255),w,b
  6176  000B08  0100               	movlb	0	; () banked
  6177  000B0A  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  6178  000B0C  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6179  000B0E  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6180  000B10  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6184  000B12  C0C1  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6188  000B16  0E00               	movlw	0
  6189  000B18  0100               	movlb	0	; () banked
  6190  000B1A  15B7               	andwf	CANSetFilter@filter& (0+255),w,b
  6191  000B1C  0100               	movlb	0	; () banked
  6192  000B1E  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  6193  000B20  0EFF               	movlw	255
  6194  000B22  0100               	movlb	0	; () banked
  6195  000B24  15B8               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6196  000B26  0100               	movlb	0	; () banked
  6197  000B28  6FC2               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6198  000B2A  0E00               	movlw	0
  6199  000B2C  0100               	movlb	0	; () banked
  6200  000B2E  15B9               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6201  000B30  0100               	movlb	0	; () banked
  6202  000B32  6FC3               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6203  000B34  0E00               	movlw	0
  6204  000B36  0100               	movlb	0	; () banked
  6205  000B38  15BA               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6206  000B3A  0100               	movlb	0	; () banked
  6207  000B3C  6FC4               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6211  000B3E  C0C1  F0BC         	movff	CANSetFilter@tamp,??_CANSetFilter
  6212  000B42  C0C2  F0BD         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6213  000B46  C0C3  F0BE         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6214  000B4A  C0C4  F0BF         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6215  000B4E  C0BD  F0BC         	movff	??_CANSetFilter+1,??_CANSetFilter
  6216  000B52  C0BE  F0BD         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6217  000B56  C0BF  F0BE         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6218  000B5A  0100               	movlb	0	; () banked
  6219  000B5C  6BBF               	clrf	(??_CANSetFilter+3)& (0+255),b
  6220  000B5E  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  6221  000B62  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6222  000B66  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6223  000B6A  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6227  000B6E  C0C1  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6231  000B72  0100               	movlb	0	; () banked
  6232  000B74  A1B9               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6233  000B76  D003               	goto	l528
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6237  000B78  010F               	movlb	15	; () banked
  6238  000B7A  8115               	bsf	21,0,b	;volatile
  6239  000B7C  D002               	goto	l529
  6240  000B7E                     l528:
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;inc\CANlib.h: 1050: else
  6244                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6245  000B7E  010F               	movlb	15	; () banked
  6246  000B80  9115               	bcf	21,0,b	;volatile
  6247  000B82                     l529:
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6251  000B82  0100               	movlb	0	; () banked
  6252  000B84  A3B9               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6253  000B86  D003               	goto	l530
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6257  000B88  010F               	movlb	15	; () banked
  6258  000B8A  8315               	bsf	21,1,b	;volatile
  6259  000B8C  D002               	goto	l531
  6260  000B8E                     l530:
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;inc\CANlib.h: 1055: else
  6264                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6265  000B8E  010F               	movlb	15	; () banked
  6266  000B90  9315               	bcf	21,1,b	;volatile
  6267  000B92                     l531:
  6268                           
  6269                           ; BSR set to: 15
  6270                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6271  000B92  0100               	movlb	0	; () banked
  6272  000B94  A5B9               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6273  000B96  D003               	goto	l532
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6277  000B98  010F               	movlb	15	; () banked
  6278  000B9A  8B15               	bsf	21,5,b	;volatile
  6279  000B9C  D002               	goto	l533
  6280  000B9E                     l532:
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;inc\CANlib.h: 1060: else
  6284                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6285  000B9E  010F               	movlb	15	; () banked
  6286  000BA0  9B15               	bcf	21,5,b	;volatile
  6287  000BA2                     l533:
  6288                           
  6289                           ; BSR set to: 15
  6290                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6291  000BA2  0100               	movlb	0	; () banked
  6292  000BA4  A7B9               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6293  000BA6  D003               	goto	l534
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6297  000BA8  010F               	movlb	15	; () banked
  6298  000BAA  8D15               	bsf	21,6,b	;volatile
  6299  000BAC  D002               	goto	l535
  6300  000BAE                     l534:
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;inc\CANlib.h: 1065: else
  6304                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6305  000BAE  010F               	movlb	15	; () banked
  6306  000BB0  9D15               	bcf	21,6,b	;volatile
  6307  000BB2                     l535:
  6308                           
  6309                           ; BSR set to: 15
  6310                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6311  000BB2  0100               	movlb	0	; () banked
  6312  000BB4  A9B9               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6313  000BB6  D003               	goto	l536
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6317  000BB8  010F               	movlb	15	; () banked
  6318  000BBA  8F15               	bsf	21,7,b	;volatile
  6319  000BBC  D002               	goto	l3096
  6320  000BBE                     l536:
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;inc\CANlib.h: 1070: else
  6324                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6325  000BBE  010F               	movlb	15	; () banked
  6326  000BC0  9F15               	bcf	21,7,b	;volatile
  6327  000BC2                     l3096:
  6328                           
  6329                           ; BSR set to: 15
  6330                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6331  000BC2  C0B7  F0BC         	movff	CANSetFilter@filter,??_CANSetFilter
  6332  000BC6  C0B8  F0BD         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6333  000BCA  C0B9  F0BE         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6334  000BCE  C0BA  F0BF         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6335  000BD2  0E16               	movlw	22
  6336  000BD4  D006               	goto	u3220
  6337  000BD6                     u3225:
  6338  000BD6  0100               	movlb	0	; () banked
  6339  000BD8  90D8               	bcf	status,0,c
  6340  000BDA  33BF               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6341  000BDC  33BE               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6342  000BDE  33BD               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6343  000BE0  33BC               	rrcf	??_CANSetFilter& (0+255),f,b
  6344  000BE2                     u3220:
  6345  000BE2  2EE8               	decfsz	wreg,f,c
  6346  000BE4  D7F8               	goto	u3225
  6347  000BE6  C0BC  F0C1         	movff	??_CANSetFilter,CANSetFilter@tamp
  6348  000BEA  C0BD  F0C2         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6349  000BEE  C0BE  F0C3         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6350  000BF2  C0BF  F0C4         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6354  000BF6  0100               	movlb	0	; () banked
  6355  000BF8  51C1               	movf	CANSetFilter@tamp& (0+255),w,b
  6356  000BFA  0100               	movlb	0	; () banked
  6357  000BFC  6FC1               	movwf	CANSetFilter@tamp& (0+255),b
  6358  000BFE  6BC2               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6359  000C00  6BC3               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6360  000C02  6BC4               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6364  000C04  C0C1  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6365  000C08  0012               	return	
  6366  000C0A                     __end_of_CANSetFilter:
  6367                           	opt stack 0
  6368                           tblptru	equ	0xFF8
  6369                           tblptrh	equ	0xFF7
  6370                           tblptrl	equ	0xFF6
  6371                           tablat	equ	0xFF5
  6372                           prodh	equ	0xFF4
  6373                           prodl	equ	0xFF3
  6374                           intcon	equ	0xFF2
  6375                           intcon2	equ	0xFF1
  6376                           intcon3	equ	0xFF0
  6377                           postinc0	equ	0xFEE
  6378                           wreg	equ	0xFE8
  6379                           postdec1	equ	0xFE5
  6380                           fsr1l	equ	0xFE1
  6381                           indf2	equ	0xFDF
  6382                           fsr2h	equ	0xFDA
  6383                           fsr2l	equ	0xFD9
  6384                           status	equ	0xFD8
  6385                           
  6386 ;; *************** function _CANOperationMode *****************
  6387 ;; Defined at:
  6388 ;;		line 206 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  mode            1    wreg     enum E16838
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;  mode            1   27[BANK0 ] enum E16838
  6393 ;; Return value:  Size  Location     Type
  6394 ;;		None               void
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6402 ;;      Params:         0       0       0       0
  6403 ;;      Locals:         0       1       0       0
  6404 ;;      Temps:          0       0       0       0
  6405 ;;      Totals:         0       1       0       0
  6406 ;;Total ram usage:        1 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    4
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_CANInitialize
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text10
  6417  0028AC                     __ptext10:
  6418                           	opt stack 0
  6419  0028AC                     _CANOperationMode:
  6420                           	opt stack 24
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;incstack = 0
  6424                           ;CANOperationMode@mode stored from wreg
  6425  0028AC  0100               	movlb	0	; () banked
  6426  0028AE  6FB7               	movwf	CANOperationMode@mode& (0+255),b
  6427                           
  6428                           ;inc\CANlib.h: 208: CANCON = mode;
  6429  0028B0  C0B7  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6430  0028B4                     l2692:
  6431  0028B4  506E               	movf	3950,w,c	;volatile
  6432  0028B6  0BE0               	andlw	224
  6433  0028B8  0100               	movlb	0	; () banked
  6434  0028BA  19B7               	xorwf	CANOperationMode@mode& (0+255),w,b
  6435  0028BC  B4D8               	btfsc	status,2,c
  6436  0028BE  0012               	return	
  6437  0028C0  D7F9               	goto	l2692
  6438  0028C2                     __end_of_CANOperationMode:
  6439                           	opt stack 0
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           intcon2	equ	0xFF1
  6448                           intcon3	equ	0xFF0
  6449                           postinc0	equ	0xFEE
  6450                           wreg	equ	0xFE8
  6451                           postdec1	equ	0xFE5
  6452                           fsr1l	equ	0xFE1
  6453                           indf2	equ	0xFDF
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function ___lldiv *****************
  6459 ;; Defined at:
  6460 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  dividend        4   27[BANK0 ] unsigned long 
  6463 ;;  divisor         4   31[BANK0 ] unsigned long 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  quotient        4   35[BANK0 ] unsigned long 
  6466 ;;  counter         1   39[BANK0 ] unsigned char 
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  4   27[BANK0 ] unsigned long 
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, status,0
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6476 ;;      Params:         0       8       0       0
  6477 ;;      Locals:         0       5       0       0
  6478 ;;      Temps:          0       0       0       0
  6479 ;;      Totals:         0      13       0       0
  6480 ;;Total ram usage:       13 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    4
  6483 ;; This function calls:
  6484 ;;		Nothing
  6485 ;; This function is called by:
  6486 ;;		_main
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text11
  6491  0024AC                     __ptext11:
  6492                           	opt stack 0
  6493  0024AC                     ___lldiv:
  6494                           	opt stack 26
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;incstack = 0
  6498  0024AC  0E00               	movlw	0
  6499  0024AE  0100               	movlb	0	; () banked
  6500  0024B0  6FBF               	movwf	___lldiv@quotient& (0+255),b
  6501  0024B2  0E00               	movlw	0
  6502  0024B4  6FC0               	movwf	(___lldiv@quotient+1)& (0+255),b
  6503  0024B6  0E00               	movlw	0
  6504  0024B8  6FC1               	movwf	(___lldiv@quotient+2)& (0+255),b
  6505  0024BA  0E00               	movlw	0
  6506  0024BC  6FC2               	movwf	(___lldiv@quotient+3)& (0+255),b
  6507                           
  6508                           ; BSR set to: 0
  6509  0024BE  0100               	movlb	0	; () banked
  6510  0024C0  51BB               	movf	___lldiv@divisor& (0+255),w,b
  6511  0024C2  0100               	movlb	0	; () banked
  6512  0024C4  11BC               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6513  0024C6  0100               	movlb	0	; () banked
  6514  0024C8  11BD               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6515  0024CA  0100               	movlb	0	; () banked
  6516  0024CC  11BE               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6517  0024CE  B4D8               	btfsc	status,2,c
  6518  0024D0  D042               	goto	l1078
  6519                           
  6520                           ; BSR set to: 0
  6521  0024D2  0E01               	movlw	1
  6522  0024D4  0100               	movlb	0	; () banked
  6523  0024D6  6FC3               	movwf	___lldiv@counter& (0+255),b
  6524  0024D8  D008               	goto	l3756
  6525  0024DA                     l3754:
  6526                           
  6527                           ; BSR set to: 0
  6528  0024DA  0100               	movlb	0	; () banked
  6529  0024DC  90D8               	bcf	status,0,c
  6530  0024DE  37BB               	rlcf	___lldiv@divisor& (0+255),f,b
  6531  0024E0  37BC               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6532  0024E2  37BD               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6533  0024E4  37BE               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6534  0024E6  0100               	movlb	0	; () banked
  6535  0024E8  2BC3               	incf	___lldiv@counter& (0+255),f,b
  6536  0024EA                     l3756:
  6537                           
  6538                           ; BSR set to: 0
  6539  0024EA  0100               	movlb	0	; () banked
  6540  0024EC  AFBE               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6541  0024EE  D7F5               	goto	l3754
  6542  0024F0                     l3758:
  6543                           
  6544                           ; BSR set to: 0
  6545  0024F0  0100               	movlb	0	; () banked
  6546  0024F2  90D8               	bcf	status,0,c
  6547  0024F4  37BF               	rlcf	___lldiv@quotient& (0+255),f,b
  6548  0024F6  37C0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6549  0024F8  37C1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6550  0024FA  37C2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6551                           
  6552                           ; BSR set to: 0
  6553  0024FC  0100               	movlb	0	; () banked
  6554  0024FE  51BB               	movf	___lldiv@divisor& (0+255),w,b
  6555  002500  0100               	movlb	0	; () banked
  6556  002502  5DB7               	subwf	___lldiv@dividend& (0+255),w,b
  6557  002504  0100               	movlb	0	; () banked
  6558  002506  51BC               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6559  002508  0100               	movlb	0	; () banked
  6560  00250A  59B8               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6561  00250C  0100               	movlb	0	; () banked
  6562  00250E  51BD               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6563  002510  0100               	movlb	0	; () banked
  6564  002512  59B9               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6565  002514  0100               	movlb	0	; () banked
  6566  002516  51BE               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6567  002518  0100               	movlb	0	; () banked
  6568  00251A  59BA               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6569  00251C  A0D8               	btfss	status,0,c
  6570  00251E  D012               	goto	l3766
  6571                           
  6572                           ; BSR set to: 0
  6573  002520  0100               	movlb	0	; () banked
  6574  002522  51BB               	movf	___lldiv@divisor& (0+255),w,b
  6575  002524  0100               	movlb	0	; () banked
  6576  002526  5FB7               	subwf	___lldiv@dividend& (0+255),f,b
  6577  002528  0100               	movlb	0	; () banked
  6578  00252A  51BC               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6579  00252C  0100               	movlb	0	; () banked
  6580  00252E  5BB8               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6581  002530  0100               	movlb	0	; () banked
  6582  002532  51BD               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6583  002534  0100               	movlb	0	; () banked
  6584  002536  5BB9               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6585  002538  0100               	movlb	0	; () banked
  6586  00253A  51BE               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6587  00253C  0100               	movlb	0	; () banked
  6588  00253E  5BBA               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6589                           
  6590                           ; BSR set to: 0
  6591  002540  0100               	movlb	0	; () banked
  6592  002542  81BF               	bsf	___lldiv@quotient& (0+255),0,b
  6593  002544                     l3766:
  6594                           
  6595                           ; BSR set to: 0
  6596  002544  0100               	movlb	0	; () banked
  6597  002546  90D8               	bcf	status,0,c
  6598  002548  33BE               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6599  00254A  33BD               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6600  00254C  33BC               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6601  00254E  33BB               	rrcf	___lldiv@divisor& (0+255),f,b
  6602                           
  6603                           ; BSR set to: 0
  6604  002550  0100               	movlb	0	; () banked
  6605  002552  2FC3               	decfsz	___lldiv@counter& (0+255),f,b
  6606  002554  D7CD               	goto	l3758
  6607  002556                     l1078:
  6608                           
  6609                           ; BSR set to: 0
  6610  002556  C0BF  F0B7         	movff	___lldiv@quotient,?___lldiv
  6611  00255A  C0C0  F0B8         	movff	___lldiv@quotient+1,?___lldiv+1
  6612  00255E  C0C1  F0B9         	movff	___lldiv@quotient+2,?___lldiv+2
  6613  002562  C0C2  F0BA         	movff	___lldiv@quotient+3,?___lldiv+3
  6614                           
  6615                           ; BSR set to: 0
  6616  002566  0012               	return		;funcret
  6617  002568                     __end_of___lldiv:
  6618                           	opt stack 0
  6619                           tblptru	equ	0xFF8
  6620                           tblptrh	equ	0xFF7
  6621                           tblptrl	equ	0xFF6
  6622                           tablat	equ	0xFF5
  6623                           prodh	equ	0xFF4
  6624                           prodl	equ	0xFF3
  6625                           intcon	equ	0xFF2
  6626                           intcon2	equ	0xFF1
  6627                           intcon3	equ	0xFF0
  6628                           postinc0	equ	0xFEE
  6629                           wreg	equ	0xFE8
  6630                           postdec1	equ	0xFE5
  6631                           fsr1l	equ	0xFE1
  6632                           indf2	equ	0xFDF
  6633                           fsr2h	equ	0xFDA
  6634                           fsr2l	equ	0xFD9
  6635                           status	equ	0xFD8
  6636                           
  6637 ;; *************** function _CANisTXwarningON *****************
  6638 ;; Defined at:
  6639 ;;		line 1119 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      unsigned char 
  6646 ;; Registers used:
  6647 ;;		wreg
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6653 ;;      Params:         0       0       0       0
  6654 ;;      Locals:         0       0       0       0
  6655 ;;      Temps:          0       0       0       0
  6656 ;;      Totals:         0       0       0       0
  6657 ;;Total ram usage:        0 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    4
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_main
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text12
  6668  0028EA                     __ptext12:
  6669                           	opt stack 0
  6670  0028EA                     _CANisTXwarningON:
  6671                           	opt stack 26
  6672                           
  6673                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;incstack = 0
  6677  0028EA  A474               	btfss	3956,2,c	;volatile
  6678  0028EC  D002               	goto	u4000
  6679  0028EE  0E01               	movlw	1
  6680  0028F0  0012               	return	
  6681  0028F2                     u4000:
  6682  0028F2  0E00               	movlw	0
  6683  0028F4  0012               	return	
  6684  0028F6                     __end_of_CANisTXwarningON:
  6685                           	opt stack 0
  6686                           tblptru	equ	0xFF8
  6687                           tblptrh	equ	0xFF7
  6688                           tblptrl	equ	0xFF6
  6689                           tablat	equ	0xFF5
  6690                           prodh	equ	0xFF4
  6691                           prodl	equ	0xFF3
  6692                           intcon	equ	0xFF2
  6693                           intcon2	equ	0xFF1
  6694                           intcon3	equ	0xFF0
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           postdec1	equ	0xFE5
  6698                           fsr1l	equ	0xFE1
  6699                           indf2	equ	0xFDF
  6700                           fsr2h	equ	0xFDA
  6701                           fsr2l	equ	0xFD9
  6702                           status	equ	0xFD8
  6703                           
  6704 ;; *************** function _CANisRXwarningON *****************
  6705 ;; Defined at:
  6706 ;;		line 1127 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      unsigned char 
  6713 ;; Registers used:
  6714 ;;		wreg
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6720 ;;      Params:         0       0       0       0
  6721 ;;      Locals:         0       0       0       0
  6722 ;;      Temps:          0       0       0       0
  6723 ;;      Totals:         0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    4
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_main
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text13
  6735  0028F6                     __ptext13:
  6736                           	opt stack 0
  6737  0028F6                     _CANisRXwarningON:
  6738                           	opt stack 26
  6739                           
  6740                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6741                           
  6742                           ;incstack = 0
  6743  0028F6  A274               	btfss	3956,1,c	;volatile
  6744  0028F8  D002               	goto	u4010
  6745  0028FA  0E01               	movlw	1
  6746  0028FC  0012               	return	
  6747  0028FE                     u4010:
  6748  0028FE  0E00               	movlw	0
  6749  002900  0012               	return	
  6750  002902                     __end_of_CANisRXwarningON:
  6751                           	opt stack 0
  6752                           tblptru	equ	0xFF8
  6753                           tblptrh	equ	0xFF7
  6754                           tblptrl	equ	0xFF6
  6755                           tablat	equ	0xFF5
  6756                           prodh	equ	0xFF4
  6757                           prodl	equ	0xFF3
  6758                           intcon	equ	0xFF2
  6759                           intcon2	equ	0xFF1
  6760                           intcon3	equ	0xFF0
  6761                           postinc0	equ	0xFEE
  6762                           wreg	equ	0xFE8
  6763                           postdec1	equ	0xFE5
  6764                           fsr1l	equ	0xFE1
  6765                           indf2	equ	0xFDF
  6766                           fsr2h	equ	0xFDA
  6767                           fsr2l	equ	0xFD9
  6768                           status	equ	0xFD8
  6769                           
  6770 ;; *************** function _ADC_Read *****************
  6771 ;; Defined at:
  6772 ;;		line 308 in file "ABS_Code.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;		None               void
  6779 ;; Registers used:
  6780 ;;		wreg, status,2, status,0, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6786 ;;      Params:         0       0       0       0
  6787 ;;      Locals:         0       0       0       0
  6788 ;;      Temps:          0       0       0       0
  6789 ;;      Totals:         0       0       0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    5
  6793 ;; This function calls:
  6794 ;;		___awdiv
  6795 ;; This function is called by:
  6796 ;;		_main
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text14
  6801  0027B4                     __ptext14:
  6802                           	opt stack 0
  6803  0027B4                     _ADC_Read:
  6804                           	opt stack 25
  6805                           
  6806                           ;ABS_Code.c: 309: ADCON0bits.GO = 1;
  6807                           
  6808                           ;incstack = 0
  6809  0027B4  82C2               	bsf	4034,1,c	;volatile
  6810  0027B6                     l715:
  6811  0027B6  B2C2               	btfsc	4034,1,c	;volatile
  6812  0027B8  D7FE               	goto	l715
  6813                           
  6814                           ;ABS_Code.c: 311: read = ADRESH;
  6815  0027BA  CFC4 F078          	movff	4036,_read	;volatile
  6816                           
  6817                           ;ABS_Code.c: 312: correction_factor = read - 127;
  6818  0027BE  0E81               	movlw	129
  6819  0027C0  0100               	movlb	0	; () banked
  6820  0027C2  2578               	addwf	_read& (0+255),w,b
  6821  0027C4  0100               	movlb	0	; () banked
  6822  0027C6  6F6E               	movwf	_correction_factor& (0+255),b
  6823  0027C8  0100               	movlb	0	; () banked
  6824  0027CA  6B6F               	clrf	(_correction_factor+1)& (0+255),b
  6825  0027CC  0EFF               	movlw	255
  6826  0027CE  236F               	addwfc	(_correction_factor+1)& (0+255),f,b
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;ABS_Code.c: 313: home_position = correction_factor / 4 + 127;
  6830  0027D0  C06E  F0B7         	movff	_correction_factor,___awdiv@dividend
  6831  0027D4  C06F  F0B8         	movff	_correction_factor+1,___awdiv@dividend+1
  6832  0027D8  0E00               	movlw	0
  6833  0027DA  0100               	movlb	0	; () banked
  6834  0027DC  6FBA               	movwf	(___awdiv@divisor+1)& (0+255),b
  6835  0027DE  0E04               	movlw	4
  6836  0027E0  6FB9               	movwf	___awdiv@divisor& (0+255),b
  6837  0027E2  ECF7  F011         	call	___awdiv	;wreg free
  6838  0027E6  0100               	movlb	0	; () banked
  6839  0027E8  51B7               	movf	?___awdiv& (0+255),w,b
  6840  0027EA  0F7F               	addlw	127
  6841  0027EC  0100               	movlb	0	; () banked
  6842  0027EE  6F77               	movwf	_home_position& (0+255),b
  6843                           
  6844                           ; BSR set to: 0
  6845  0027F0  0012               	return		;funcret
  6846  0027F2                     __end_of_ADC_Read:
  6847                           	opt stack 0
  6848                           tblptru	equ	0xFF8
  6849                           tblptrh	equ	0xFF7
  6850                           tblptrl	equ	0xFF6
  6851                           tablat	equ	0xFF5
  6852                           prodh	equ	0xFF4
  6853                           prodl	equ	0xFF3
  6854                           intcon	equ	0xFF2
  6855                           intcon2	equ	0xFF1
  6856                           intcon3	equ	0xFF0
  6857                           postinc0	equ	0xFEE
  6858                           wreg	equ	0xFE8
  6859                           postdec1	equ	0xFE5
  6860                           fsr1l	equ	0xFE1
  6861                           indf2	equ	0xFDF
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function ___awdiv *****************
  6867 ;; Defined at:
  6868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  dividend        2   27[BANK0 ] int 
  6871 ;;  divisor         2   29[BANK0 ] int 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  quotient        2   33[BANK0 ] int 
  6874 ;;  sign            1   32[BANK0 ] unsigned char 
  6875 ;;  counter         1   31[BANK0 ] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  2   27[BANK0 ] int 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6885 ;;      Params:         0       4       0       0
  6886 ;;      Locals:         0       4       0       0
  6887 ;;      Temps:          0       0       0       0
  6888 ;;      Totals:         0       8       0       0
  6889 ;;Total ram usage:        8 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    4
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_main
  6896 ;;		_ADC_Read
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text15
  6901  0023EE                     __ptext15:
  6902                           	opt stack 0
  6903  0023EE                     ___awdiv:
  6904                           	opt stack 26
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;incstack = 0
  6908  0023EE  0E00               	movlw	0
  6909  0023F0  0100               	movlb	0	; () banked
  6910  0023F2  6FBC               	movwf	___awdiv@sign& (0+255),b
  6911                           
  6912                           ; BSR set to: 0
  6913  0023F4  0100               	movlb	0	; () banked
  6914  0023F6  AFBA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6915  0023F8  D008               	goto	l3416
  6916                           
  6917                           ; BSR set to: 0
  6918  0023FA  0100               	movlb	0	; () banked
  6919  0023FC  6DB9               	negf	___awdiv@divisor& (0+255),b
  6920  0023FE  1FBA               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6921  002400  B0D8               	btfsc	status,0,c
  6922  002402  2BBA               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6923                           
  6924                           ; BSR set to: 0
  6925  002404  0E01               	movlw	1
  6926  002406  0100               	movlb	0	; () banked
  6927  002408  6FBC               	movwf	___awdiv@sign& (0+255),b
  6928  00240A                     l3416:
  6929                           
  6930                           ; BSR set to: 0
  6931  00240A  0100               	movlb	0	; () banked
  6932  00240C  AFB8               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6933  00240E  D008               	goto	l3422
  6934                           
  6935                           ; BSR set to: 0
  6936  002410  0100               	movlb	0	; () banked
  6937  002412  6DB7               	negf	___awdiv@dividend& (0+255),b
  6938  002414  1FB8               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6939  002416  B0D8               	btfsc	status,0,c
  6940  002418  2BB8               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6941                           
  6942                           ; BSR set to: 0
  6943  00241A  0E01               	movlw	1
  6944  00241C  0100               	movlb	0	; () banked
  6945  00241E  1BBC               	xorwf	___awdiv@sign& (0+255),f,b
  6946  002420                     l3422:
  6947                           
  6948                           ; BSR set to: 0
  6949  002420  0E00               	movlw	0
  6950  002422  0100               	movlb	0	; () banked
  6951  002424  6FBE               	movwf	(___awdiv@quotient+1)& (0+255),b
  6952  002426  0E00               	movlw	0
  6953  002428  6FBD               	movwf	___awdiv@quotient& (0+255),b
  6954                           
  6955                           ; BSR set to: 0
  6956  00242A  0100               	movlb	0	; () banked
  6957  00242C  51B9               	movf	___awdiv@divisor& (0+255),w,b
  6958  00242E  0100               	movlb	0	; () banked
  6959  002430  11BA               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6960  002432  B4D8               	btfsc	status,2,c
  6961  002434  D02C               	goto	l3444
  6962                           
  6963                           ; BSR set to: 0
  6964  002436  0E01               	movlw	1
  6965  002438  0100               	movlb	0	; () banked
  6966  00243A  6FBB               	movwf	___awdiv@counter& (0+255),b
  6967  00243C  D006               	goto	l3430
  6968  00243E                     l3428:
  6969                           
  6970                           ; BSR set to: 0
  6971  00243E  0100               	movlb	0	; () banked
  6972  002440  90D8               	bcf	status,0,c
  6973  002442  37B9               	rlcf	___awdiv@divisor& (0+255),f,b
  6974  002444  37BA               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6975  002446  0100               	movlb	0	; () banked
  6976  002448  2BBB               	incf	___awdiv@counter& (0+255),f,b
  6977  00244A                     l3430:
  6978                           
  6979                           ; BSR set to: 0
  6980  00244A  0100               	movlb	0	; () banked
  6981  00244C  AFBA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6982  00244E  D7F7               	goto	l3428
  6983  002450                     l3432:
  6984                           
  6985                           ; BSR set to: 0
  6986  002450  0100               	movlb	0	; () banked
  6987  002452  90D8               	bcf	status,0,c
  6988  002454  37BD               	rlcf	___awdiv@quotient& (0+255),f,b
  6989  002456  37BE               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6990                           
  6991                           ; BSR set to: 0
  6992  002458  0100               	movlb	0	; () banked
  6993  00245A  51B9               	movf	___awdiv@divisor& (0+255),w,b
  6994  00245C  0100               	movlb	0	; () banked
  6995  00245E  5DB7               	subwf	___awdiv@dividend& (0+255),w,b
  6996  002460  0100               	movlb	0	; () banked
  6997  002462  51BA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6998  002464  0100               	movlb	0	; () banked
  6999  002466  59B8               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7000  002468  A0D8               	btfss	status,0,c
  7001  00246A  D00A               	goto	l3440
  7002                           
  7003                           ; BSR set to: 0
  7004  00246C  0100               	movlb	0	; () banked
  7005  00246E  51B9               	movf	___awdiv@divisor& (0+255),w,b
  7006  002470  0100               	movlb	0	; () banked
  7007  002472  5FB7               	subwf	___awdiv@dividend& (0+255),f,b
  7008  002474  0100               	movlb	0	; () banked
  7009  002476  51BA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7010  002478  0100               	movlb	0	; () banked
  7011  00247A  5BB8               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7012                           
  7013                           ; BSR set to: 0
  7014  00247C  0100               	movlb	0	; () banked
  7015  00247E  81BD               	bsf	___awdiv@quotient& (0+255),0,b
  7016  002480                     l3440:
  7017                           
  7018                           ; BSR set to: 0
  7019  002480  0100               	movlb	0	; () banked
  7020  002482  90D8               	bcf	status,0,c
  7021  002484  33BA               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7022  002486  33B9               	rrcf	___awdiv@divisor& (0+255),f,b
  7023                           
  7024                           ; BSR set to: 0
  7025  002488  0100               	movlb	0	; () banked
  7026  00248A  2FBB               	decfsz	___awdiv@counter& (0+255),f,b
  7027  00248C  D7E1               	goto	l3432
  7028  00248E                     l3444:
  7029                           
  7030                           ; BSR set to: 0
  7031  00248E  0100               	movlb	0	; () banked
  7032  002490  51BC               	movf	___awdiv@sign& (0+255),w,b
  7033  002492  0100               	movlb	0	; () banked
  7034  002494  B4D8               	btfsc	status,2,c
  7035  002496  D005               	goto	l3448
  7036                           
  7037                           ; BSR set to: 0
  7038  002498  0100               	movlb	0	; () banked
  7039  00249A  6DBD               	negf	___awdiv@quotient& (0+255),b
  7040  00249C  1FBE               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7041  00249E  B0D8               	btfsc	status,0,c
  7042  0024A0  2BBE               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7043  0024A2                     l3448:
  7044                           
  7045                           ; BSR set to: 0
  7046  0024A2  C0BD  F0B7         	movff	___awdiv@quotient,?___awdiv
  7047  0024A6  C0BE  F0B8         	movff	___awdiv@quotient+1,?___awdiv+1
  7048  0024AA  0012               	return	
  7049  0024AC                     __end_of___awdiv:
  7050                           	opt stack 0
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           prodh	equ	0xFF4
  7056                           prodl	equ	0xFF3
  7057                           intcon	equ	0xFF2
  7058                           intcon2	equ	0xFF1
  7059                           intcon3	equ	0xFF0
  7060                           postinc0	equ	0xFEE
  7061                           wreg	equ	0xFE8
  7062                           postdec1	equ	0xFE5
  7063                           fsr1l	equ	0xFE1
  7064                           indf2	equ	0xFDF
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8
  7068                           
  7069 ;; *************** function _ISR_Bassa *****************
  7070 ;; Defined at:
  7071 ;;		line 190 in file "ABS_Code.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;		None               void
  7078 ;; Registers used:
  7079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7085 ;;      Params:         0       0       0       0
  7086 ;;      Locals:         0       0       0       0
  7087 ;;      Temps:         17       0       0       0
  7088 ;;      Totals:        17       0       0       0
  7089 ;;Total ram usage:       17 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    3
  7092 ;; This function calls:
  7093 ;;		_CANisRxReady
  7094 ;;		_CANreceiveMessage
  7095 ;; This function is called by:
  7096 ;;		Interrupt level 1
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	intcodelo
  7101  000018                     __pintcodelo:
  7102                           	opt stack 0
  7103  000018                     _ISR_Bassa:
  7104                           	opt stack 24
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;incstack = 0
  7108  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7109  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7110  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7111  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7112  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7113  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7114  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7115  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7116  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7117  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7118  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7119  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7120  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7121  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7122  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7123  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7124  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7125  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7126                           
  7127                           ;ABS_Code.c: 192: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7128  00005E  A0A4               	btfss	4004,0,c	;volatile
  7129  000060  B2A4               	btfsc	4004,1,c	;volatile
  7130  000062  D001               	goto	i1l3920
  7131  000064  D029               	goto	i1l678
  7132  000066                     i1l3920:
  7133                           
  7134                           ;ABS_Code.c: 193: if (CANisRxReady()) {
  7135  000066  EC61  F014         	call	_CANisRxReady	;wreg free
  7136  00006A  0900               	iorlw	0
  7137  00006C  B4D8               	btfsc	status,2,c
  7138  00006E  D022               	goto	i1l675
  7139                           
  7140                           ;ABS_Code.c: 194: CANreceiveMessage(&msg);
  7141  000070  0E7C               	movlw	low _msg
  7142  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7143  000074  0E00               	movlw	high _msg
  7144  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7145  000078  ECCB  F009         	call	_CANreceiveMessage	;wreg free
  7146                           
  7147                           ;ABS_Code.c: 195: if (msg.RTR == 1) {
  7148  00007C  0100               	movlb	0	; () banked
  7149  00007E  058A               	decf	(_msg+14)& (0+255),w,b
  7150  000080  A4D8               	btfss	status,2,c
  7151  000082  D009               	goto	i1l3928
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;ABS_Code.c: 196: remote_frame_id = msg.identifier;
  7155  000084  C07C  F068         	movff	_msg,_remote_frame_id
  7156  000088  C07D  F069         	movff	_msg+1,_remote_frame_id+1
  7157  00008C  C07E  F06A         	movff	_msg+2,_remote_frame_id+2
  7158  000090  C07F  F06B         	movff	_msg+3,_remote_frame_id+3
  7159                           
  7160                           ;ABS_Code.c: 197: remote_frame = 1;
  7161  000094  8841               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7162  000096                     i1l3928:
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;ABS_Code.c: 198: }
  7166                           ;ABS_Code.c: 199: if (msg.identifier == 0b00000000000000000000000000100) {
  7167  000096  0E04               	movlw	4
  7168  000098  0100               	movlb	0	; () banked
  7169  00009A  197C               	xorwf	_msg& (0+255),w,b
  7170  00009C  0100               	movlb	0	; () banked
  7171  00009E  117D               	iorwf	(_msg+1)& (0+255),w,b
  7172  0000A0  0100               	movlb	0	; () banked
  7173  0000A2  117E               	iorwf	(_msg+2)& (0+255),w,b
  7174  0000A4  0100               	movlb	0	; () banked
  7175  0000A6  117F               	iorwf	(_msg+3)& (0+255),w,b
  7176  0000A8  A4D8               	btfss	status,2,c
  7177  0000AA  D004               	goto	i1l675
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;ABS_Code.c: 200: brake_signal_CAN = msg.data[0];
  7181  0000AC  C080  F075         	movff	_msg+4,_brake_signal_CAN
  7182                           
  7183                           ;ABS_Code.c: 201: Analogic_Mode = msg.data[1];
  7184  0000B0  C081  F074         	movff	_msg+5,_Analogic_Mode
  7185  0000B4                     i1l675:
  7186                           
  7187                           ;ABS_Code.c: 202: }
  7188                           ;ABS_Code.c: 203: }
  7189                           ;ABS_Code.c: 204: PIR3bits.RXB0IF = 0;
  7190  0000B4  90A4               	bcf	4004,0,c	;volatile
  7191                           
  7192                           ;ABS_Code.c: 205: PIR3bits.RXB1IF = 0;
  7193  0000B6  92A4               	bcf	4004,1,c	;volatile
  7194  0000B8                     i1l678:
  7195  0000B8  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7196  0000BC  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7197  0000C0  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7198  0000C4  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7199  0000C8  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7200  0000CC  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7201  0000D0  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7202  0000D4  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7203  0000D8  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7204  0000DC  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7205  0000E0  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7206  0000E4  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7207  0000E8  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7208  0000EC  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7209  0000F0  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7210  0000F4  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7211  0000F8  C00D  FFD8         	movff	??_ISR_Bassa,status
  7212  0000FC  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7213  0000FE  0010               	retfie	
  7214  000100                     __end_of_ISR_Bassa:
  7215                           	opt stack 0
  7216                           pclatu	equ	0xFFB
  7217                           pclath	equ	0xFFA
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           intcon	equ	0xFF2
  7225                           intcon2	equ	0xFF1
  7226                           intcon3	equ	0xFF0
  7227                           postinc0	equ	0xFEE
  7228                           fsr0h	equ	0xFEA
  7229                           fsr0l	equ	0xFE9
  7230                           wreg	equ	0xFE8
  7231                           postdec1	equ	0xFE5
  7232                           fsr1h	equ	0xFE2
  7233                           fsr1l	equ	0xFE1
  7234                           bsr	equ	0xFE0
  7235                           indf2	equ	0xFDF
  7236                           fsr2h	equ	0xFDA
  7237                           fsr2l	equ	0xFD9
  7238                           status	equ	0xFD8
  7239                           
  7240 ;; *************** function _CANreceiveMessage *****************
  7241 ;; Defined at:
  7242 ;;		line 528 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  msg             2    0[COMRAM] PTR struct .
  7245 ;;		 -> msg(15), 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  tamp            1   11[COMRAM] unsigned char 
  7248 ;;  error           1   10[COMRAM] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      unsigned char 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7258 ;;      Params:         2       0       0       0
  7259 ;;      Locals:         2       0       0       0
  7260 ;;      Temps:          8       0       0       0
  7261 ;;      Totals:        12       0       0       0
  7262 ;;Total ram usage:       12 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    2
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_ISR_Bassa
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text17
  7273  001396                     __ptext17:
  7274                           	opt stack 0
  7275  001396                     _CANreceiveMessage:
  7276                           	opt stack 24
  7277                           
  7278                           ;inc\CANlib.h: 530: BYTE tamp;
  7279                           ;inc\CANlib.h: 531: BYTE error = 0;
  7280                           
  7281                           ;incstack = 0
  7282  001396  0E00               	movlw	0
  7283  001398  6E0B               	movwf	CANreceiveMessage@error,c
  7284                           
  7285                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7286  00139A  BE74               	btfsc	3956,7,c	;volatile
  7287                           
  7288                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7289  00139C  800B               	bsf	CANreceiveMessage@error,0,c
  7290                           
  7291                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7292  00139E  BC74               	btfsc	3956,6,c	;volatile
  7293                           
  7294                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7295  0013A0  820B               	bsf	CANreceiveMessage@error,1,c
  7296                           
  7297                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7298  0013A2  010F               	movlb	15	; () banked
  7299  0013A4  AF50               	btfss	80,7,b	;volatile
  7300  0013A6  D143               	goto	i1l420
  7301                           
  7302                           ; BSR set to: 15
  7303                           ;inc\CANlib.h: 541: {
  7304                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7305  0013A8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7306  0013AC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7307  0013B0  6ADE               	clrf	postinc2,c
  7308  0013B2  6ADE               	clrf	postinc2,c
  7309  0013B4  6ADE               	clrf	postinc2,c
  7310  0013B6  6ADD               	clrf	postdec2,c
  7311                           
  7312                           ; BSR set to: 15
  7313                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7314  0013B8  EE20 F004          	lfsr	2,4
  7315  0013BC  5001               	movf	CANreceiveMessage@msg,w,c
  7316  0013BE  26D9               	addwf	fsr2l,f,c
  7317  0013C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7318  0013C2  22DA               	addwfc	fsr2h,f,c
  7319  0013C4  CF56 FFDF          	movff	3926,indf2	;volatile
  7320                           
  7321                           ; BSR set to: 15
  7322                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7323  0013C8  EE20 F005          	lfsr	2,5
  7324  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7325  0013CE  26D9               	addwf	fsr2l,f,c
  7326  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7327  0013D2  22DA               	addwfc	fsr2h,f,c
  7328  0013D4  CF57 FFDF          	movff	3927,indf2	;volatile
  7329                           
  7330                           ; BSR set to: 15
  7331                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7332  0013D8  EE20 F006          	lfsr	2,6
  7333  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7334  0013DE  26D9               	addwf	fsr2l,f,c
  7335  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7336  0013E2  22DA               	addwfc	fsr2h,f,c
  7337  0013E4  CF58 FFDF          	movff	3928,indf2	;volatile
  7338                           
  7339                           ; BSR set to: 15
  7340                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7341  0013E8  EE20 F007          	lfsr	2,7
  7342  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7343  0013EE  26D9               	addwf	fsr2l,f,c
  7344  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7345  0013F2  22DA               	addwfc	fsr2h,f,c
  7346  0013F4  CF59 FFDF          	movff	3929,indf2	;volatile
  7347                           
  7348                           ; BSR set to: 15
  7349                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7350  0013F8  EE20 F008          	lfsr	2,8
  7351  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7352  0013FE  26D9               	addwf	fsr2l,f,c
  7353  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7354  001402  22DA               	addwfc	fsr2h,f,c
  7355  001404  CF5A FFDF          	movff	3930,indf2	;volatile
  7356                           
  7357                           ; BSR set to: 15
  7358                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7359  001408  EE20 F009          	lfsr	2,9
  7360  00140C  5001               	movf	CANreceiveMessage@msg,w,c
  7361  00140E  26D9               	addwf	fsr2l,f,c
  7362  001410  5002               	movf	CANreceiveMessage@msg+1,w,c
  7363  001412  22DA               	addwfc	fsr2h,f,c
  7364  001414  CF5B FFDF          	movff	3931,indf2	;volatile
  7365                           
  7366                           ; BSR set to: 15
  7367                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7368  001418  EE20 F00A          	lfsr	2,10
  7369  00141C  5001               	movf	CANreceiveMessage@msg,w,c
  7370  00141E  26D9               	addwf	fsr2l,f,c
  7371  001420  5002               	movf	CANreceiveMessage@msg+1,w,c
  7372  001422  22DA               	addwfc	fsr2h,f,c
  7373  001424  CF5C FFDF          	movff	3932,indf2	;volatile
  7374                           
  7375                           ; BSR set to: 15
  7376                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7377  001428  EE20 F00B          	lfsr	2,11
  7378  00142C  5001               	movf	CANreceiveMessage@msg,w,c
  7379  00142E  26D9               	addwf	fsr2l,f,c
  7380  001430  5002               	movf	CANreceiveMessage@msg+1,w,c
  7381  001432  22DA               	addwfc	fsr2h,f,c
  7382  001434  CF5D FFDF          	movff	3933,indf2	;volatile
  7383                           
  7384                           ; BSR set to: 15
  7385                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7386  001438  EE20 F00E          	lfsr	2,14
  7387  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7388  00143E  26D9               	addwf	fsr2l,f,c
  7389  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7390  001442  22DA               	addwfc	fsr2h,f,c
  7391  001444  010F               	movlb	15	; () banked
  7392  001446  AD55               	btfss	85,6,b	;volatile
  7393  001448  D002               	goto	i1u379_20
  7394  00144A  0E01               	movlw	1
  7395  00144C  D001               	goto	i1u379_26
  7396  00144E                     i1u379_20:
  7397  00144E  0E00               	movlw	0
  7398  001450                     i1u379_26:
  7399  001450  6EDF               	movwf	indf2,c
  7400                           
  7401                           ; BSR set to: 15
  7402                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7403  001452  EE20 F00D          	lfsr	2,13
  7404  001456  5001               	movf	CANreceiveMessage@msg,w,c
  7405  001458  26D9               	addwf	fsr2l,f,c
  7406  00145A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7407  00145C  22DA               	addwfc	fsr2h,f,c
  7408  00145E  010F               	movlb	15	; () banked
  7409  001460  5155               	movf	85,w,b	;volatile
  7410  001462  0B0F               	andlw	15
  7411  001464  6EDF               	movwf	indf2,c
  7412                           
  7413                           ; BSR set to: 15
  7414                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7415  001466  EE20 F00C          	lfsr	2,12
  7416  00146A  5001               	movf	CANreceiveMessage@msg,w,c
  7417  00146C  26D9               	addwf	fsr2l,f,c
  7418  00146E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7419  001470  22DA               	addwfc	fsr2h,f,c
  7420  001472  010F               	movlb	15	; () banked
  7421  001474  A752               	btfss	82,3,b	;volatile
  7422  001476  D002               	goto	i1u380_20
  7423  001478  0E01               	movlw	1
  7424  00147A  D001               	goto	i1u380_26
  7425  00147C                     i1u380_20:
  7426  00147C  0E00               	movlw	0
  7427  00147E                     i1u380_26:
  7428  00147E  6EDF               	movwf	indf2,c
  7429                           
  7430                           ; BSR set to: 15
  7431                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7432  001480  010F               	movlb	15	; () banked
  7433  001482  B752               	btfsc	82,3,b	;volatile
  7434  001484  D044               	goto	i1l3496
  7435                           
  7436                           ; BSR set to: 15
  7437                           ;inc\CANlib.h: 559: {
  7438                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7439  001486  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7440  00148A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7441  00148C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7442  00148E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7443  001490  0E03               	movlw	3
  7444  001492                     i1u382_25:
  7445  001492  90D8               	bcf	status,0,c
  7446  001494  3603               	rlcf	??_CANreceiveMessage,f,c
  7447  001496  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7448  001498  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7449  00149A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7450  00149C  2EE8               	decfsz	wreg,f,c
  7451  00149E  D7F9               	goto	i1u382_25
  7452  0014A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7453  0014A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7454  0014A8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7455  0014AC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7456  0014B0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7457  0014B4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7458                           
  7459                           ; BSR set to: 15
  7460                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7461  0014B8  010F               	movlb	15	; () banked
  7462  0014BA  3952               	swapf	82,w,b	;volatile
  7463  0014BC  42E8               	rrncf	wreg,f,c
  7464  0014BE  0B07               	andlw	7
  7465  0014C0  0B07               	andlw	7
  7466  0014C2  6E0C               	movwf	CANreceiveMessage@tamp,c
  7467                           
  7468                           ; BSR set to: 15
  7469                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7470  0014C4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7471  0014C8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7472  0014CC  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7473  0014D0  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7474  0014D4  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7475  0014D8  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7476  0014DC  500C               	movf	CANreceiveMessage@tamp,w,c
  7477  0014DE  2403               	addwf	??_CANreceiveMessage,w,c
  7478  0014E0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7479  0014E2  0E00               	movlw	0
  7480  0014E4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7481  0014E6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7482  0014E8  0E00               	movlw	0
  7483  0014EA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7484  0014EC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7485  0014EE  0E00               	movlw	0
  7486  0014F0  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7487  0014F2  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7488  0014F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7489  0014F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7490  0014FC  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7491  001500  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7492  001504  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7493  001508  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7494                           
  7495                           ;inc\CANlib.h: 563: }
  7496  00150C  D08D               	goto	i1l3522
  7497  00150E                     i1l3496:
  7498                           
  7499                           ; BSR set to: 15
  7500                           ;inc\CANlib.h: 564: else
  7501                           ;inc\CANlib.h: 565: {
  7502                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7503  00150E  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7504  001512  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7505  001514  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7506  001516  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7507  001518  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7508  00151C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7509  001520  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7510  001524  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7511  001528  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7512  00152C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7513                           
  7514                           ; BSR set to: 15
  7515                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7516  001530  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7517  001534  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7518  001536  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7519  001538  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7520  00153A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7521  00153E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7522  001542  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7523  001546  6A03               	clrf	??_CANreceiveMessage,c
  7524  001548  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7525  00154C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7526  001550  5003               	movf	??_CANreceiveMessage,w,c
  7527  001552  26DE               	addwf	postinc2,f,c
  7528  001554  5004               	movf	??_CANreceiveMessage+1,w,c
  7529  001556  22DE               	addwfc	postinc2,f,c
  7530  001558  5005               	movf	??_CANreceiveMessage+2,w,c
  7531  00155A  22DE               	addwfc	postinc2,f,c
  7532  00155C  5006               	movf	??_CANreceiveMessage+3,w,c
  7533  00155E  22DE               	addwfc	postinc2,f,c
  7534                           
  7535                           ; BSR set to: 15
  7536                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7537  001560  010F               	movlb	15	; () banked
  7538  001562  A152               	btfss	82,0,b	;volatile
  7539  001564  D00C               	goto	i1l3504
  7540                           
  7541                           ; BSR set to: 15
  7542                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7543  001566  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7544  00156A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7545  00156E  0E00               	movlw	0
  7546  001570  12DE               	iorwf	postinc2,f,c
  7547  001572  0E00               	movlw	0
  7548  001574  12DE               	iorwf	postinc2,f,c
  7549  001576  0E01               	movlw	1
  7550  001578  12DE               	iorwf	postinc2,f,c
  7551  00157A  0E00               	movlw	0
  7552  00157C  12DE               	iorwf	postinc2,f,c
  7553  00157E                     i1l3504:
  7554                           
  7555                           ; BSR set to: 15
  7556                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7557  00157E  010F               	movlb	15	; () banked
  7558  001580  A352               	btfss	82,1,b	;volatile
  7559  001582  D00C               	goto	i1l3508
  7560                           
  7561                           ; BSR set to: 15
  7562                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7563  001584  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7564  001588  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7565  00158C  0E00               	movlw	0
  7566  00158E  12DE               	iorwf	postinc2,f,c
  7567  001590  0E00               	movlw	0
  7568  001592  12DE               	iorwf	postinc2,f,c
  7569  001594  0E02               	movlw	2
  7570  001596  12DE               	iorwf	postinc2,f,c
  7571  001598  0E00               	movlw	0
  7572  00159A  12DE               	iorwf	postinc2,f,c
  7573  00159C                     i1l3508:
  7574                           
  7575                           ; BSR set to: 15
  7576                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7577  00159C  010F               	movlb	15	; () banked
  7578  00159E  AB52               	btfss	82,5,b	;volatile
  7579  0015A0  D00C               	goto	i1l3512
  7580                           
  7581                           ; BSR set to: 15
  7582                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7583  0015A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7584  0015A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7585  0015AA  0E00               	movlw	0
  7586  0015AC  12DE               	iorwf	postinc2,f,c
  7587  0015AE  0E00               	movlw	0
  7588  0015B0  12DE               	iorwf	postinc2,f,c
  7589  0015B2  0E04               	movlw	4
  7590  0015B4  12DE               	iorwf	postinc2,f,c
  7591  0015B6  0E00               	movlw	0
  7592  0015B8  12DE               	iorwf	postinc2,f,c
  7593  0015BA                     i1l3512:
  7594                           
  7595                           ; BSR set to: 15
  7596                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7597  0015BA  010F               	movlb	15	; () banked
  7598  0015BC  AD52               	btfss	82,6,b	;volatile
  7599  0015BE  D00C               	goto	i1l3516
  7600                           
  7601                           ; BSR set to: 15
  7602                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7603  0015C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7604  0015C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7605  0015C8  0E00               	movlw	0
  7606  0015CA  12DE               	iorwf	postinc2,f,c
  7607  0015CC  0E00               	movlw	0
  7608  0015CE  12DE               	iorwf	postinc2,f,c
  7609  0015D0  0E08               	movlw	8
  7610  0015D2  12DE               	iorwf	postinc2,f,c
  7611  0015D4  0E00               	movlw	0
  7612  0015D6  12DE               	iorwf	postinc2,f,c
  7613  0015D8                     i1l3516:
  7614                           
  7615                           ; BSR set to: 15
  7616                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7617  0015D8  010F               	movlb	15	; () banked
  7618  0015DA  AF52               	btfss	82,7,b	;volatile
  7619  0015DC  D00C               	goto	i1l3520
  7620                           
  7621                           ; BSR set to: 15
  7622                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7623  0015DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7624  0015E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7625  0015E6  0E00               	movlw	0
  7626  0015E8  12DE               	iorwf	postinc2,f,c
  7627  0015EA  0E00               	movlw	0
  7628  0015EC  12DE               	iorwf	postinc2,f,c
  7629  0015EE  0E10               	movlw	16
  7630  0015F0  12DE               	iorwf	postinc2,f,c
  7631  0015F2  0E00               	movlw	0
  7632  0015F4  12DE               	iorwf	postinc2,f,c
  7633  0015F6                     i1l3520:
  7634                           
  7635                           ; BSR set to: 15
  7636                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7637  0015F6  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7638  0015FA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7639  0015FC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7640  0015FE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7641  001600  0E15               	movlw	21
  7642  001602                     i1u388_25:
  7643  001602  90D8               	bcf	status,0,c
  7644  001604  3603               	rlcf	??_CANreceiveMessage,f,c
  7645  001606  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7646  001608  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7647  00160A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7648  00160C  2EE8               	decfsz	wreg,f,c
  7649  00160E  D7F9               	goto	i1u388_25
  7650  001610  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7651  001614  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7652  001618  5003               	movf	??_CANreceiveMessage,w,c
  7653  00161A  12DE               	iorwf	postinc2,f,c
  7654  00161C  5004               	movf	??_CANreceiveMessage+1,w,c
  7655  00161E  12DE               	iorwf	postinc2,f,c
  7656  001620  5005               	movf	??_CANreceiveMessage+2,w,c
  7657  001622  12DE               	iorwf	postinc2,f,c
  7658  001624  5006               	movf	??_CANreceiveMessage+3,w,c
  7659  001626  12DE               	iorwf	postinc2,f,c
  7660  001628                     i1l3522:
  7661                           
  7662                           ; BSR set to: 15
  7663                           ;inc\CANlib.h: 581: }
  7664                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7665  001628  010F               	movlb	15	; () banked
  7666  00162A  9F50               	bcf	80,7,b	;volatile
  7667                           
  7668                           ; BSR set to: 15
  7669                           ;inc\CANlib.h: 584: return (error);
  7670                           ;	Return value of _CANreceiveMessage is never used
  7671  00162C  0012               	return	
  7672  00162E                     i1l420:
  7673                           
  7674                           ; BSR set to: 15
  7675                           ;inc\CANlib.h: 585: }
  7676                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7677  00162E  AE60               	btfss	3936,7,c	;volatile
  7678  001630  0012               	return	
  7679                           
  7680                           ; BSR set to: 15
  7681                           ;inc\CANlib.h: 588: {
  7682                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7683  001632  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7684  001636  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7685  00163A  6ADE               	clrf	postinc2,c
  7686  00163C  6ADE               	clrf	postinc2,c
  7687  00163E  6ADE               	clrf	postinc2,c
  7688  001640  6ADD               	clrf	postdec2,c
  7689                           
  7690                           ; BSR set to: 15
  7691                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7692  001642  EE20 F004          	lfsr	2,4
  7693  001646  5001               	movf	CANreceiveMessage@msg,w,c
  7694  001648  26D9               	addwf	fsr2l,f,c
  7695  00164A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7696  00164C  22DA               	addwfc	fsr2h,f,c
  7697  00164E  CF66 FFDF          	movff	3942,indf2	;volatile
  7698                           
  7699                           ; BSR set to: 15
  7700                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7701  001652  EE20 F005          	lfsr	2,5
  7702  001656  5001               	movf	CANreceiveMessage@msg,w,c
  7703  001658  26D9               	addwf	fsr2l,f,c
  7704  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7705  00165C  22DA               	addwfc	fsr2h,f,c
  7706  00165E  CF67 FFDF          	movff	3943,indf2	;volatile
  7707                           
  7708                           ; BSR set to: 15
  7709                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7710  001662  EE20 F006          	lfsr	2,6
  7711  001666  5001               	movf	CANreceiveMessage@msg,w,c
  7712  001668  26D9               	addwf	fsr2l,f,c
  7713  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7714  00166C  22DA               	addwfc	fsr2h,f,c
  7715  00166E  CF68 FFDF          	movff	3944,indf2	;volatile
  7716                           
  7717                           ; BSR set to: 15
  7718                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7719  001672  EE20 F007          	lfsr	2,7
  7720  001676  5001               	movf	CANreceiveMessage@msg,w,c
  7721  001678  26D9               	addwf	fsr2l,f,c
  7722  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7723  00167C  22DA               	addwfc	fsr2h,f,c
  7724  00167E  CF69 FFDF          	movff	3945,indf2	;volatile
  7725                           
  7726                           ; BSR set to: 15
  7727                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7728  001682  EE20 F008          	lfsr	2,8
  7729  001686  5001               	movf	CANreceiveMessage@msg,w,c
  7730  001688  26D9               	addwf	fsr2l,f,c
  7731  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7732  00168C  22DA               	addwfc	fsr2h,f,c
  7733  00168E  CF6A FFDF          	movff	3946,indf2	;volatile
  7734                           
  7735                           ; BSR set to: 15
  7736                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7737  001692  EE20 F009          	lfsr	2,9
  7738  001696  5001               	movf	CANreceiveMessage@msg,w,c
  7739  001698  26D9               	addwf	fsr2l,f,c
  7740  00169A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7741  00169C  22DA               	addwfc	fsr2h,f,c
  7742  00169E  CF6B FFDF          	movff	3947,indf2	;volatile
  7743                           
  7744                           ; BSR set to: 15
  7745                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7746  0016A2  EE20 F00A          	lfsr	2,10
  7747  0016A6  5001               	movf	CANreceiveMessage@msg,w,c
  7748  0016A8  26D9               	addwf	fsr2l,f,c
  7749  0016AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7750  0016AC  22DA               	addwfc	fsr2h,f,c
  7751  0016AE  CF6C FFDF          	movff	3948,indf2	;volatile
  7752                           
  7753                           ; BSR set to: 15
  7754                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7755  0016B2  EE20 F00B          	lfsr	2,11
  7756  0016B6  5001               	movf	CANreceiveMessage@msg,w,c
  7757  0016B8  26D9               	addwf	fsr2l,f,c
  7758  0016BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7759  0016BC  22DA               	addwfc	fsr2h,f,c
  7760  0016BE  CF6D FFDF          	movff	3949,indf2	;volatile
  7761                           
  7762                           ; BSR set to: 15
  7763                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7764  0016C2  EE20 F00E          	lfsr	2,14
  7765  0016C6  5001               	movf	CANreceiveMessage@msg,w,c
  7766  0016C8  26D9               	addwf	fsr2l,f,c
  7767  0016CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7768  0016CC  22DA               	addwfc	fsr2h,f,c
  7769  0016CE  AC65               	btfss	3941,6,c	;volatile
  7770  0016D0  D002               	goto	i1u390_20
  7771  0016D2  0E01               	movlw	1
  7772  0016D4  D001               	goto	i1u390_26
  7773  0016D6                     i1u390_20:
  7774  0016D6  0E00               	movlw	0
  7775  0016D8                     i1u390_26:
  7776  0016D8  6EDF               	movwf	indf2,c
  7777                           
  7778                           ; BSR set to: 15
  7779                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7780  0016DA  EE20 F00D          	lfsr	2,13
  7781  0016DE  5001               	movf	CANreceiveMessage@msg,w,c
  7782  0016E0  26D9               	addwf	fsr2l,f,c
  7783  0016E2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7784  0016E4  22DA               	addwfc	fsr2h,f,c
  7785  0016E6  5065               	movf	3941,w,c	;volatile
  7786  0016E8  0B0F               	andlw	15
  7787  0016EA  6EDF               	movwf	indf2,c
  7788                           
  7789                           ; BSR set to: 15
  7790                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7791  0016EC  EE20 F00C          	lfsr	2,12
  7792  0016F0  5001               	movf	CANreceiveMessage@msg,w,c
  7793  0016F2  26D9               	addwf	fsr2l,f,c
  7794  0016F4  5002               	movf	CANreceiveMessage@msg+1,w,c
  7795  0016F6  22DA               	addwfc	fsr2h,f,c
  7796  0016F8  A662               	btfss	3938,3,c	;volatile
  7797  0016FA  D002               	goto	i1u391_20
  7798  0016FC  0E01               	movlw	1
  7799  0016FE  D001               	goto	i1u391_26
  7800  001700                     i1u391_20:
  7801  001700  0E00               	movlw	0
  7802  001702                     i1u391_26:
  7803  001702  6EDF               	movwf	indf2,c
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7807  001704  B662               	btfsc	3938,3,c	;volatile
  7808  001706  D043               	goto	i1l3558
  7809                           
  7810                           ; BSR set to: 15
  7811                           ;inc\CANlib.h: 606: {
  7812                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7813  001708  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7814  00170C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7815  00170E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7816  001710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7817  001712  0E03               	movlw	3
  7818  001714                     i1u393_25:
  7819  001714  90D8               	bcf	status,0,c
  7820  001716  3603               	rlcf	??_CANreceiveMessage,f,c
  7821  001718  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7822  00171A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7823  00171C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7824  00171E  2EE8               	decfsz	wreg,f,c
  7825  001720  D7F9               	goto	i1u393_25
  7826  001722  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7827  001726  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7828  00172A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7829  00172E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7830  001732  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7831  001736  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7832                           
  7833                           ; BSR set to: 15
  7834                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7835  00173A  3862               	swapf	3938,w,c	;volatile
  7836  00173C  42E8               	rrncf	wreg,f,c
  7837  00173E  0B07               	andlw	7
  7838  001740  0B07               	andlw	7
  7839  001742  6E0C               	movwf	CANreceiveMessage@tamp,c
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7843  001744  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7844  001748  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7845  00174C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7846  001750  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7847  001754  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7848  001758  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7849  00175C  500C               	movf	CANreceiveMessage@tamp,w,c
  7850  00175E  2403               	addwf	??_CANreceiveMessage,w,c
  7851  001760  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7852  001762  0E00               	movlw	0
  7853  001764  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7854  001766  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7855  001768  0E00               	movlw	0
  7856  00176A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7857  00176C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7858  00176E  0E00               	movlw	0
  7859  001770  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7860  001772  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7861  001774  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7862  001778  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7863  00177C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7864  001780  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7865  001784  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7866  001788  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7867                           
  7868                           ;inc\CANlib.h: 610: }
  7869  00178C  D088               	goto	i1l3584
  7870  00178E                     i1l3558:
  7871                           
  7872                           ; BSR set to: 15
  7873                           ;inc\CANlib.h: 611: else
  7874                           ;inc\CANlib.h: 612: {
  7875                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7876  00178E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7877  001792  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7878  001794  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7879  001796  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7880  001798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7881  00179C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7882  0017A0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7883  0017A4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7884  0017A8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7885  0017AC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7886                           
  7887                           ; BSR set to: 15
  7888                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7889  0017B0  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7890  0017B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7891  0017B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7892  0017B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7893  0017BA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7894  0017BE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7895  0017C2  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7896  0017C6  6A03               	clrf	??_CANreceiveMessage,c
  7897  0017C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7898  0017CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7899  0017D0  5003               	movf	??_CANreceiveMessage,w,c
  7900  0017D2  26DE               	addwf	postinc2,f,c
  7901  0017D4  5004               	movf	??_CANreceiveMessage+1,w,c
  7902  0017D6  22DE               	addwfc	postinc2,f,c
  7903  0017D8  5005               	movf	??_CANreceiveMessage+2,w,c
  7904  0017DA  22DE               	addwfc	postinc2,f,c
  7905  0017DC  5006               	movf	??_CANreceiveMessage+3,w,c
  7906  0017DE  22DE               	addwfc	postinc2,f,c
  7907                           
  7908                           ; BSR set to: 15
  7909                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7910  0017E0  A062               	btfss	3938,0,c	;volatile
  7911  0017E2  D00C               	goto	i1l3566
  7912                           
  7913                           ; BSR set to: 15
  7914                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7915  0017E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7916  0017E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7917  0017EC  0E00               	movlw	0
  7918  0017EE  12DE               	iorwf	postinc2,f,c
  7919  0017F0  0E00               	movlw	0
  7920  0017F2  12DE               	iorwf	postinc2,f,c
  7921  0017F4  0E01               	movlw	1
  7922  0017F6  12DE               	iorwf	postinc2,f,c
  7923  0017F8  0E00               	movlw	0
  7924  0017FA  12DE               	iorwf	postinc2,f,c
  7925  0017FC                     i1l3566:
  7926                           
  7927                           ; BSR set to: 15
  7928                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7929  0017FC  A262               	btfss	3938,1,c	;volatile
  7930  0017FE  D00C               	goto	i1l3570
  7931                           
  7932                           ; BSR set to: 15
  7933                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7934  001800  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7935  001804  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7936  001808  0E00               	movlw	0
  7937  00180A  12DE               	iorwf	postinc2,f,c
  7938  00180C  0E00               	movlw	0
  7939  00180E  12DE               	iorwf	postinc2,f,c
  7940  001810  0E02               	movlw	2
  7941  001812  12DE               	iorwf	postinc2,f,c
  7942  001814  0E00               	movlw	0
  7943  001816  12DE               	iorwf	postinc2,f,c
  7944  001818                     i1l3570:
  7945                           
  7946                           ; BSR set to: 15
  7947                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7948  001818  AA62               	btfss	3938,5,c	;volatile
  7949  00181A  D00C               	goto	i1l3574
  7950                           
  7951                           ; BSR set to: 15
  7952                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  7953  00181C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7954  001820  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7955  001824  0E00               	movlw	0
  7956  001826  12DE               	iorwf	postinc2,f,c
  7957  001828  0E00               	movlw	0
  7958  00182A  12DE               	iorwf	postinc2,f,c
  7959  00182C  0E04               	movlw	4
  7960  00182E  12DE               	iorwf	postinc2,f,c
  7961  001830  0E00               	movlw	0
  7962  001832  12DE               	iorwf	postinc2,f,c
  7963  001834                     i1l3574:
  7964                           
  7965                           ; BSR set to: 15
  7966                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  7967  001834  AC62               	btfss	3938,6,c	;volatile
  7968  001836  D00C               	goto	i1l3578
  7969                           
  7970                           ; BSR set to: 15
  7971                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  7972  001838  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7973  00183C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7974  001840  0E00               	movlw	0
  7975  001842  12DE               	iorwf	postinc2,f,c
  7976  001844  0E00               	movlw	0
  7977  001846  12DE               	iorwf	postinc2,f,c
  7978  001848  0E08               	movlw	8
  7979  00184A  12DE               	iorwf	postinc2,f,c
  7980  00184C  0E00               	movlw	0
  7981  00184E  12DE               	iorwf	postinc2,f,c
  7982  001850                     i1l3578:
  7983                           
  7984                           ; BSR set to: 15
  7985                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  7986  001850  AE62               	btfss	3938,7,c	;volatile
  7987  001852  D00C               	goto	i1l3582
  7988                           
  7989                           ; BSR set to: 15
  7990                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  7991  001854  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7992  001858  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7993  00185C  0E00               	movlw	0
  7994  00185E  12DE               	iorwf	postinc2,f,c
  7995  001860  0E00               	movlw	0
  7996  001862  12DE               	iorwf	postinc2,f,c
  7997  001864  0E10               	movlw	16
  7998  001866  12DE               	iorwf	postinc2,f,c
  7999  001868  0E00               	movlw	0
  8000  00186A  12DE               	iorwf	postinc2,f,c
  8001  00186C                     i1l3582:
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8005  00186C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8006  001870  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8007  001872  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8008  001874  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8009  001876  0E15               	movlw	21
  8010  001878                     i1u399_25:
  8011  001878  90D8               	bcf	status,0,c
  8012  00187A  3603               	rlcf	??_CANreceiveMessage,f,c
  8013  00187C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8014  00187E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8015  001880  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8016  001882  2EE8               	decfsz	wreg,f,c
  8017  001884  D7F9               	goto	i1u399_25
  8018  001886  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8019  00188A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8020  00188E  5003               	movf	??_CANreceiveMessage,w,c
  8021  001890  12DE               	iorwf	postinc2,f,c
  8022  001892  5004               	movf	??_CANreceiveMessage+1,w,c
  8023  001894  12DE               	iorwf	postinc2,f,c
  8024  001896  5005               	movf	??_CANreceiveMessage+2,w,c
  8025  001898  12DE               	iorwf	postinc2,f,c
  8026  00189A  5006               	movf	??_CANreceiveMessage+3,w,c
  8027  00189C  12DE               	iorwf	postinc2,f,c
  8028  00189E                     i1l3584:
  8029                           
  8030                           ; BSR set to: 15
  8031                           ;inc\CANlib.h: 629: }
  8032                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8033  00189E  9E60               	bcf	3936,7,c	;volatile
  8034                           
  8035                           ; BSR set to: 15
  8036                           ;inc\CANlib.h: 632: return (error);
  8037                           ;	Return value of _CANreceiveMessage is never used
  8038  0018A0  0012               	return	
  8039  0018A2                     __end_of_CANreceiveMessage:
  8040                           	opt stack 0
  8041                           pclatu	equ	0xFFB
  8042                           pclath	equ	0xFFA
  8043                           tblptru	equ	0xFF8
  8044                           tblptrh	equ	0xFF7
  8045                           tblptrl	equ	0xFF6
  8046                           tablat	equ	0xFF5
  8047                           prodh	equ	0xFF4
  8048                           prodl	equ	0xFF3
  8049                           intcon	equ	0xFF2
  8050                           intcon2	equ	0xFF1
  8051                           intcon3	equ	0xFF0
  8052                           postinc0	equ	0xFEE
  8053                           fsr0h	equ	0xFEA
  8054                           fsr0l	equ	0xFE9
  8055                           wreg	equ	0xFE8
  8056                           postdec1	equ	0xFE5
  8057                           fsr1h	equ	0xFE2
  8058                           fsr1l	equ	0xFE1
  8059                           bsr	equ	0xFE0
  8060                           indf2	equ	0xFDF
  8061                           postinc2	equ	0xFDE
  8062                           postdec2	equ	0xFDD
  8063                           fsr2h	equ	0xFDA
  8064                           fsr2l	equ	0xFD9
  8065                           status	equ	0xFD8
  8066                           
  8067 ;; *************** function _CANisRxReady *****************
  8068 ;; Defined at:
  8069 ;;		line 1163 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;		None
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;		None
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1    wreg      unsigned char 
  8076 ;; Registers used:
  8077 ;;		wreg, status,2
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 0/0
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8083 ;;      Params:         0       0       0       0
  8084 ;;      Locals:         1       0       0       0
  8085 ;;      Temps:          0       0       0       0
  8086 ;;      Totals:         1       0       0       0
  8087 ;;Total ram usage:        1 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:    2
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_ISR_Bassa
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text18
  8098  0028C2                     __ptext18:
  8099                           	opt stack 0
  8100  0028C2                     _CANisRxReady:
  8101                           	opt stack 24
  8102                           
  8103                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;incstack = 0
  8107  0028C2  0E01               	movlw	1
  8108  0028C4  6E01               	movwf	_CANisRxReady$3116,c
  8109  0028C6  BE60               	btfsc	3936,7,c	;volatile
  8110  0028C8  D005               	goto	i1l571
  8111  0028CA  010F               	movlb	15	; () banked
  8112  0028CC  BF50               	btfsc	80,7,b	;volatile
  8113  0028CE  D002               	goto	i1l571
  8114                           
  8115                           ; BSR set to: 15
  8116  0028D0  0E00               	movlw	0
  8117  0028D2  6E01               	movwf	_CANisRxReady$3116,c
  8118  0028D4                     i1l571:
  8119  0028D4  5001               	movf	_CANisRxReady$3116,w,c
  8120  0028D6  0012               	return	
  8121  0028D8                     __end_of_CANisRxReady:
  8122                           	opt stack 0
  8123                           pclatu	equ	0xFFB
  8124                           pclath	equ	0xFFA
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           prodh	equ	0xFF4
  8130                           prodl	equ	0xFF3
  8131                           intcon	equ	0xFF2
  8132                           intcon2	equ	0xFF1
  8133                           intcon3	equ	0xFF0
  8134                           postinc0	equ	0xFEE
  8135                           fsr0h	equ	0xFEA
  8136                           fsr0l	equ	0xFE9
  8137                           wreg	equ	0xFE8
  8138                           postdec1	equ	0xFE5
  8139                           fsr1h	equ	0xFE2
  8140                           fsr1l	equ	0xFE1
  8141                           bsr	equ	0xFE0
  8142                           indf2	equ	0xFDF
  8143                           postinc2	equ	0xFDE
  8144                           postdec2	equ	0xFDD
  8145                           fsr2h	equ	0xFDA
  8146                           fsr2l	equ	0xFD9
  8147                           status	equ	0xFD8
  8148                           
  8149 ;; *************** function _ISR_Alta *****************
  8150 ;; Defined at:
  8151 ;;		line 128 in file "ABS_Code.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;		None               void
  8158 ;; Registers used:
  8159 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8165 ;;      Params:         0       0       0       0
  8166 ;;      Locals:         0       0       0       0
  8167 ;;      Temps:          0      22       0       0
  8168 ;;      Totals:         0      22       0       0
  8169 ;;Total ram usage:       22 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:    1
  8172 ;; This function calls:
  8173 ;;		_WriteTimer0
  8174 ;;		i2___awdiv
  8175 ;;		i2___lldiv
  8176 ;;		i2___wmul
  8177 ;; This function is called by:
  8178 ;;		Interrupt level 2
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	intcode
  8183  000008                     __pintcode:
  8184                           	opt stack 0
  8185  000008                     _ISR_Alta:
  8186                           	opt stack 24
  8187                           
  8188                           ;incstack = 0
  8189  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8190  00000A  CFFA F0A9          	movff	pclath,??_ISR_Alta+8
  8191  00000E  CFFB F0AA          	movff	pclatu,??_ISR_Alta+9
  8192  000012  ED20  F00E         	call	int_func,f	;refresh shadow registers
  8193                           pclatu	equ	0xFFB
  8194                           pclath	equ	0xFFA
  8195                           tblptru	equ	0xFF8
  8196                           tblptrh	equ	0xFF7
  8197                           tblptrl	equ	0xFF6
  8198                           tablat	equ	0xFF5
  8199                           prodh	equ	0xFF4
  8200                           prodl	equ	0xFF3
  8201                           intcon	equ	0xFF2
  8202                           intcon2	equ	0xFF1
  8203                           intcon3	equ	0xFF0
  8204                           postinc0	equ	0xFEE
  8205                           fsr0h	equ	0xFEA
  8206                           fsr0l	equ	0xFE9
  8207                           wreg	equ	0xFE8
  8208                           postdec1	equ	0xFE5
  8209                           fsr1h	equ	0xFE2
  8210                           fsr1l	equ	0xFE1
  8211                           bsr	equ	0xFE0
  8212                           indf2	equ	0xFDF
  8213                           postinc2	equ	0xFDE
  8214                           postdec2	equ	0xFDD
  8215                           fsr2h	equ	0xFDA
  8216                           fsr2l	equ	0xFD9
  8217                           status	equ	0xFD8
  8218                           
  8219                           	psect	intcode_body
  8220  001C40                     __pintcode_body:
  8221                           	opt stack 24
  8222  001C40                     int_func:
  8223                           	opt stack 24
  8224  001C40  0006               	pop		; remove dummy address from shadow register refresh
  8225  001C42  CFE9 F0AB          	movff	fsr0l,??_ISR_Alta+10
  8226  001C46  CFEA F0AC          	movff	fsr0h,??_ISR_Alta+11
  8227  001C4A  CFE1 F0AD          	movff	fsr1l,??_ISR_Alta+12
  8228  001C4E  CFE2 F0AE          	movff	fsr1h,??_ISR_Alta+13
  8229  001C52  CFD9 F0AF          	movff	fsr2l,??_ISR_Alta+14
  8230  001C56  CFDA F0B0          	movff	fsr2h,??_ISR_Alta+15
  8231  001C5A  CFF3 F0B1          	movff	prodl,??_ISR_Alta+16
  8232  001C5E  CFF4 F0B2          	movff	prodh,??_ISR_Alta+17
  8233  001C62  CFF6 F0B3          	movff	tblptrl,??_ISR_Alta+18
  8234  001C66  CFF7 F0B4          	movff	tblptrh,??_ISR_Alta+19
  8235  001C6A  CFF8 F0B5          	movff	tblptru,??_ISR_Alta+20
  8236  001C6E  CFF5 F0B6          	movff	tablat,??_ISR_Alta+21
  8237                           
  8238                           ;ABS_Code.c: 130: if (INTCONbits.TMR0IF == 1) {
  8239  001C72  A4F2               	btfss	intcon,2,c	;volatile
  8240  001C74  D09D               	goto	i2l4098
  8241                           
  8242                           ;ABS_Code.c: 132: if (PORTCbits.RC0 == 1) {
  8243  001C76  A082               	btfss	3970,0,c	;volatile
  8244  001C78  D094               	goto	i2l4094
  8245                           
  8246                           ;ABS_Code.c: 133: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8247  001C7A  0E40               	movlw	64
  8248  001C7C  0100               	movlb	0	; () banked
  8249  001C7E  6FA1               	movwf	??_ISR_Alta& (0+255),b
  8250  001C80  0E06               	movlw	6
  8251  001C82  0100               	movlb	0	; () banked
  8252  001C84  6FA2               	movwf	(??_ISR_Alta+1)& (0+255),b
  8253  001C86  C038  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8254  001C8A  6A1F               	clrf	i2___wmul@multiplier+1,c
  8255  001C8C  0E05               	movlw	5
  8256  001C8E  6E21               	movwf	i2___wmul@multiplicand+1,c
  8257  001C90  0E78               	movlw	120
  8258  001C92  6E20               	movwf	i2___wmul@multiplicand,c
  8259  001C94  EC31  F014         	call	i2___wmul	;wreg free
  8260  001C98  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8261  001C9C  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8262  001CA0  0E00               	movlw	0
  8263  001CA2  6E27               	movwf	i2___awdiv@divisor+1,c
  8264  001CA4  0EB4               	movlw	180
  8265  001CA6  6E26               	movwf	i2___awdiv@divisor,c
  8266  001CA8  EC11  F013         	call	i2___awdiv	;wreg free
  8267  001CAC  90D8               	bcf	status,0,c
  8268  001CAE  3624               	rlcf	?i2___awdiv,f,c
  8269  001CB0  3625               	rlcf	?i2___awdiv+1,f,c
  8270  001CB2  0100               	movlb	0	; () banked
  8271  001CB4  51A1               	movf	??_ISR_Alta& (0+255),w,b
  8272  001CB6  2624               	addwf	?i2___awdiv,f,c
  8273  001CB8  0100               	movlb	0	; () banked
  8274  001CBA  51A2               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8275  001CBC  2225               	addwfc	?i2___awdiv+1,f,c
  8276  001CBE  C024  F034         	movff	?i2___awdiv,_timer_on
  8277  001CC2  C025  F035         	movff	?i2___awdiv+1,_timer_on+1
  8278  001CC6  0E00               	movlw	0
  8279  001CC8  BE35               	btfsc	_timer_on+1,7,c
  8280  001CCA  0EFF               	movlw	-1
  8281  001CCC  6E36               	movwf	_timer_on+2,c
  8282  001CCE  6E37               	movwf	_timer_on+3,c
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;ABS_Code.c: 134: timer_off = 65536 - (40000 - timer_on);
  8286  001CD0  C034  F0A1         	movff	_timer_on,??_ISR_Alta
  8287  001CD4  C035  F0A2         	movff	_timer_on+1,??_ISR_Alta+1
  8288  001CD8  C036  F0A3         	movff	_timer_on+2,??_ISR_Alta+2
  8289  001CDC  C037  F0A4         	movff	_timer_on+3,??_ISR_Alta+3
  8290  001CE0  0100               	movlb	0	; () banked
  8291  001CE2  1FA1               	comf	??_ISR_Alta& (0+255),f,b
  8292  001CE4  1FA2               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8293  001CE6  1FA3               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8294  001CE8  1FA4               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8295  001CEA  2BA1               	incf	??_ISR_Alta& (0+255),f,b
  8296  001CEC  0E00               	movlw	0
  8297  001CEE  23A2               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8298  001CF0  23A3               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8299  001CF2  23A4               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8300  001CF4  0E40               	movlw	64
  8301  001CF6  0100               	movlb	0	; () banked
  8302  001CF8  25A1               	addwf	??_ISR_Alta& (0+255),w,b
  8303  001CFA  0100               	movlb	0	; () banked
  8304  001CFC  6FA5               	movwf	(??_ISR_Alta+4)& (0+255),b
  8305  001CFE  0E9C               	movlw	156
  8306  001D00  0100               	movlb	0	; () banked
  8307  001D02  21A2               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8308  001D04  0100               	movlb	0	; () banked
  8309  001D06  6FA6               	movwf	(??_ISR_Alta+5)& (0+255),b
  8310  001D08  0E00               	movlw	0
  8311  001D0A  0100               	movlb	0	; () banked
  8312  001D0C  21A3               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8313  001D0E  0100               	movlb	0	; () banked
  8314  001D10  6FA7               	movwf	(??_ISR_Alta+6)& (0+255),b
  8315  001D12  0E00               	movlw	0
  8316  001D14  0100               	movlb	0	; () banked
  8317  001D16  21A4               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8318  001D18  0100               	movlb	0	; () banked
  8319  001D1A  6FA8               	movwf	(??_ISR_Alta+7)& (0+255),b
  8320  001D1C  0100               	movlb	0	; () banked
  8321  001D1E  1FA5               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8322  001D20  1FA6               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8323  001D22  1FA7               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8324  001D24  1FA8               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8325  001D26  2BA5               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8326  001D28  0E00               	movlw	0
  8327  001D2A  23A6               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8328  001D2C  23A7               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8329  001D2E  23A8               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8330  001D30  0E00               	movlw	0
  8331  001D32  0100               	movlb	0	; () banked
  8332  001D34  25A5               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8333  001D36  6E30               	movwf	_timer_off,c
  8334  001D38  0E00               	movlw	0
  8335  001D3A  0100               	movlb	0	; () banked
  8336  001D3C  21A6               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8337  001D3E  6E31               	movwf	_timer_off+1,c
  8338  001D40  0E01               	movlw	1
  8339  001D42  0100               	movlb	0	; () banked
  8340  001D44  21A7               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8341  001D46  6E32               	movwf	_timer_off+2,c
  8342  001D48  0E00               	movlw	0
  8343  001D4A  0100               	movlb	0	; () banked
  8344  001D4C  21A8               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8345  001D4E  6E33               	movwf	_timer_off+3,c
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;ABS_Code.c: 135: timer_on = 65536 - timer_on;
  8349  001D50  C034  F0A1         	movff	_timer_on,??_ISR_Alta
  8350  001D54  C035  F0A2         	movff	_timer_on+1,??_ISR_Alta+1
  8351  001D58  C036  F0A3         	movff	_timer_on+2,??_ISR_Alta+2
  8352  001D5C  C037  F0A4         	movff	_timer_on+3,??_ISR_Alta+3
  8353  001D60  0100               	movlb	0	; () banked
  8354  001D62  1FA1               	comf	??_ISR_Alta& (0+255),f,b
  8355  001D64  1FA2               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8356  001D66  1FA3               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8357  001D68  1FA4               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8358  001D6A  2BA1               	incf	??_ISR_Alta& (0+255),f,b
  8359  001D6C  0E00               	movlw	0
  8360  001D6E  23A2               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8361  001D70  23A3               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8362  001D72  23A4               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8363  001D74  0E00               	movlw	0
  8364  001D76  0100               	movlb	0	; () banked
  8365  001D78  25A1               	addwf	??_ISR_Alta& (0+255),w,b
  8366  001D7A  6E34               	movwf	_timer_on,c
  8367  001D7C  0E00               	movlw	0
  8368  001D7E  0100               	movlb	0	; () banked
  8369  001D80  21A2               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8370  001D82  6E35               	movwf	_timer_on+1,c
  8371  001D84  0E01               	movlw	1
  8372  001D86  0100               	movlb	0	; () banked
  8373  001D88  21A3               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8374  001D8A  6E36               	movwf	_timer_on+2,c
  8375  001D8C  0E00               	movlw	0
  8376  001D8E  0100               	movlb	0	; () banked
  8377  001D90  21A4               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8378  001D92  6E37               	movwf	_timer_on+3,c
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;ABS_Code.c: 136: WriteTimer0(timer_on);
  8382  001D94  C034  F01E         	movff	_timer_on,WriteTimer0@timer0
  8383  001D98  C035  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1
  8384  001D9C  EC6C  F014         	call	_WriteTimer0	;wreg free
  8385                           
  8386                           ;ABS_Code.c: 137: } else {
  8387  001DA0  D006               	goto	i2l4096
  8388  001DA2                     i2l4094:
  8389                           
  8390                           ;ABS_Code.c: 138: WriteTimer0(timer_off);
  8391  001DA2  C030  F01E         	movff	_timer_off,WriteTimer0@timer0
  8392  001DA6  C031  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1
  8393  001DAA  EC6C  F014         	call	_WriteTimer0	;wreg free
  8394  001DAE                     i2l4096:
  8395                           
  8396                           ;ABS_Code.c: 139: }
  8397                           ;ABS_Code.c: 140: INTCONbits.TMR0IF = 0;
  8398  001DAE  94F2               	bcf	intcon,2,c	;volatile
  8399  001DB0                     i2l4098:
  8400                           
  8401                           ;ABS_Code.c: 141: }
  8402                           ;ABS_Code.c: 144: if (INTCONbits.INT0IF == 1) {
  8403  001DB0  A2F2               	btfss	intcon,1,c	;volatile
  8404  001DB2  D057               	goto	i2l4122
  8405                           
  8406                           ;ABS_Code.c: 145: if (x == 0) {
  8407  001DB4  BA41               	btfsc	_x/(0+8),_x& (0+7),c
  8408  001DB6  D006               	goto	i2l4106
  8409                           
  8410                           ;ABS_Code.c: 146: TMR1H = 0x00;
  8411  001DB8  0E00               	movlw	0
  8412  001DBA  6ECF               	movwf	4047,c	;volatile
  8413                           
  8414                           ;ABS_Code.c: 147: TMR1L = 0x00;
  8415  001DBC  0E00               	movlw	0
  8416  001DBE  6ECE               	movwf	4046,c	;volatile
  8417                           
  8418                           ;ABS_Code.c: 148: x = 1;
  8419  001DC0  8A41               	bsf	_x/(0+8),_x& (0+7),c
  8420                           
  8421                           ;ABS_Code.c: 149: } else {
  8422  001DC2  D03E               	goto	i2l4120
  8423  001DC4                     i2l4106:
  8424                           
  8425                           ;ABS_Code.c: 150: gap_time_1 = (TMR1H <<8) + TMR1L;
  8426  001DC4  50CE               	movf	4046,w,c	;volatile
  8427  001DC6  CFCF F0A1          	movff	4047,??_ISR_Alta	;volatile
  8428  001DCA  0100               	movlb	0	; () banked
  8429  001DCC  6BA2               	clrf	(??_ISR_Alta+1)& (0+255),b
  8430  001DCE  C0A1  F0A2         	movff	??_ISR_Alta,??_ISR_Alta+1
  8431  001DD2  0100               	movlb	0	; () banked
  8432  001DD4  6BA1               	clrf	??_ISR_Alta& (0+255),b
  8433  001DD6  0100               	movlb	0	; () banked
  8434  001DD8  27A1               	addwf	??_ISR_Alta& (0+255),f,b
  8435  001DDA  0E00               	movlw	0
  8436  001DDC  23A2               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8437  001DDE  C0A1  F028         	movff	??_ISR_Alta,_gap_time_1
  8438  001DE2  C0A2  F029         	movff	??_ISR_Alta+1,_gap_time_1+1
  8439  001DE6  0E00               	movlw	0
  8440  001DE8  BE29               	btfsc	_gap_time_1+1,7,c
  8441  001DEA  0EFF               	movlw	-1
  8442  001DEC  6E2A               	movwf	_gap_time_1+2,c
  8443  001DEE  6E2B               	movwf	_gap_time_1+3,c
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;ABS_Code.c: 151: gap_time_1 = gap_time_1 / 500;
  8447  001DF0  C028  F01E         	movff	_gap_time_1,i2___lldiv@dividend
  8448  001DF4  C029  F01F         	movff	_gap_time_1+1,i2___lldiv@dividend+1
  8449  001DF8  C02A  F020         	movff	_gap_time_1+2,i2___lldiv@dividend+2
  8450  001DFC  C02B  F021         	movff	_gap_time_1+3,i2___lldiv@dividend+3
  8451  001E00  0EF4               	movlw	244
  8452  001E02  6E22               	movwf	i2___lldiv@divisor,c
  8453  001E04  0E01               	movlw	1
  8454  001E06  6E23               	movwf	i2___lldiv@divisor+1,c
  8455  001E08  0E00               	movlw	0
  8456  001E0A  6E24               	movwf	i2___lldiv@divisor+2,c
  8457  001E0C  0E00               	movlw	0
  8458  001E0E  6E25               	movwf	i2___lldiv@divisor+3,c
  8459  001E10  EC5F  F013         	call	i2___lldiv	;wreg free
  8460  001E14  C01E  F028         	movff	?i2___lldiv,_gap_time_1
  8461  001E18  C01F  F029         	movff	?i2___lldiv+1,_gap_time_1+1
  8462  001E1C  C020  F02A         	movff	?i2___lldiv+2,_gap_time_1+2
  8463  001E20  C021  F02B         	movff	?i2___lldiv+3,_gap_time_1+3
  8464                           
  8465                           ;ABS_Code.c: 152: ENC1_measure = 1;
  8466  001E24  8041               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  8467                           
  8468                           ;ABS_Code.c: 153: TMR1H = 0x00;
  8469  001E26  0E00               	movlw	0
  8470  001E28  6ECF               	movwf	4047,c	;volatile
  8471                           
  8472                           ;ABS_Code.c: 154: TMR1H = 0x00;
  8473  001E2A  0E00               	movlw	0
  8474  001E2C  6ECF               	movwf	4047,c	;volatile
  8475                           
  8476                           ;ABS_Code.c: 155: if (count_flag == 1) {
  8477  001E2E  A641               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8478  001E30  D007               	goto	i2l4120
  8479                           
  8480                           ;ABS_Code.c: 156: int_counter_1++;
  8481  001E32  0E01               	movlw	1
  8482  001E34  0100               	movlb	0	; () banked
  8483  001E36  2760               	addwf	_int_counter_1& (0+255),f,b
  8484  001E38  0E00               	movlw	0
  8485  001E3A  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b
  8486  001E3C  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b
  8487  001E3E  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b
  8488  001E40                     i2l4120:
  8489                           
  8490                           ;ABS_Code.c: 157: }
  8491                           ;ABS_Code.c: 158: }
  8492                           ;ABS_Code.c: 159: INTCONbits.INT0IF = 0;
  8493  001E40  92F2               	bcf	intcon,1,c	;volatile
  8494                           
  8495                           ;ABS_Code.c: 160: PORTCbits.RC1 = ~PORTCbits.RC1;
  8496  001E42  A282               	btfss	3970,1,c	;volatile
  8497  001E44  D002               	goto	i2u465_40
  8498  001E46  0E01               	movlw	1
  8499  001E48  D001               	goto	i2u465_46
  8500  001E4A                     i2u465_40:
  8501  001E4A  0E00               	movlw	0
  8502  001E4C                     i2u465_46:
  8503  001E4C  0AFF               	xorlw	255
  8504  001E4E  0100               	movlb	0	; () banked
  8505  001E50  6FA1               	movwf	??_ISR_Alta& (0+255),b
  8506  001E52  0100               	movlb	0	; () banked
  8507  001E54  47A1               	rlncf	??_ISR_Alta& (0+255),f,b
  8508  001E56  5082               	movf	3970,w,c	;volatile
  8509  001E58  0100               	movlb	0	; () banked
  8510  001E5A  19A1               	xorwf	??_ISR_Alta& (0+255),w,b
  8511  001E5C  0BFD               	andlw	-3
  8512  001E5E  19A1               	xorwf	??_ISR_Alta& (0+255),w,b
  8513  001E60  6E82               	movwf	3970,c	;volatile
  8514  001E62                     i2l4122:
  8515                           
  8516                           ;ABS_Code.c: 161: }
  8517                           ;ABS_Code.c: 164: if (INTCON3bits.INT1IF == 1) {
  8518  001E62  A0F0               	btfss	intcon3,0,c	;volatile
  8519  001E64  D047               	goto	i2l669
  8520                           
  8521                           ;ABS_Code.c: 165: if (y == 0) {
  8522  001E66  BC41               	btfsc	_y/(0+8),_y& (0+7),c
  8523  001E68  D006               	goto	i2l4130
  8524                           
  8525                           ;ABS_Code.c: 166: TMR3H = 0x00;
  8526  001E6A  0E00               	movlw	0
  8527  001E6C  6EB3               	movwf	4019,c	;volatile
  8528                           
  8529                           ;ABS_Code.c: 167: TMR3L = 0x00;
  8530  001E6E  0E00               	movlw	0
  8531  001E70  6EB2               	movwf	4018,c	;volatile
  8532                           
  8533                           ;ABS_Code.c: 168: y = 1;
  8534  001E72  8C41               	bsf	_y/(0+8),_y& (0+7),c
  8535                           
  8536                           ;ABS_Code.c: 169: } else {
  8537  001E74  D03E               	goto	i2l4144
  8538  001E76                     i2l4130:
  8539                           
  8540                           ;ABS_Code.c: 170: gap_time_2 = (TMR3H <<8) + TMR3L;
  8541  001E76  50B2               	movf	4018,w,c	;volatile
  8542  001E78  CFB3 F0A1          	movff	4019,??_ISR_Alta	;volatile
  8543  001E7C  0100               	movlb	0	; () banked
  8544  001E7E  6BA2               	clrf	(??_ISR_Alta+1)& (0+255),b
  8545  001E80  C0A1  F0A2         	movff	??_ISR_Alta,??_ISR_Alta+1
  8546  001E84  0100               	movlb	0	; () banked
  8547  001E86  6BA1               	clrf	??_ISR_Alta& (0+255),b
  8548  001E88  0100               	movlb	0	; () banked
  8549  001E8A  27A1               	addwf	??_ISR_Alta& (0+255),f,b
  8550  001E8C  0E00               	movlw	0
  8551  001E8E  23A2               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8552  001E90  C0A1  F02C         	movff	??_ISR_Alta,_gap_time_2
  8553  001E94  C0A2  F02D         	movff	??_ISR_Alta+1,_gap_time_2+1
  8554  001E98  0E00               	movlw	0
  8555  001E9A  BE2D               	btfsc	_gap_time_2+1,7,c
  8556  001E9C  0EFF               	movlw	-1
  8557  001E9E  6E2E               	movwf	_gap_time_2+2,c
  8558  001EA0  6E2F               	movwf	_gap_time_2+3,c
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;ABS_Code.c: 171: gap_time_2 = gap_time_2 / 500;
  8562  001EA2  C02C  F01E         	movff	_gap_time_2,i2___lldiv@dividend
  8563  001EA6  C02D  F01F         	movff	_gap_time_2+1,i2___lldiv@dividend+1
  8564  001EAA  C02E  F020         	movff	_gap_time_2+2,i2___lldiv@dividend+2
  8565  001EAE  C02F  F021         	movff	_gap_time_2+3,i2___lldiv@dividend+3
  8566  001EB2  0EF4               	movlw	244
  8567  001EB4  6E22               	movwf	i2___lldiv@divisor,c
  8568  001EB6  0E01               	movlw	1
  8569  001EB8  6E23               	movwf	i2___lldiv@divisor+1,c
  8570  001EBA  0E00               	movlw	0
  8571  001EBC  6E24               	movwf	i2___lldiv@divisor+2,c
  8572  001EBE  0E00               	movlw	0
  8573  001EC0  6E25               	movwf	i2___lldiv@divisor+3,c
  8574  001EC2  EC5F  F013         	call	i2___lldiv	;wreg free
  8575  001EC6  C01E  F02C         	movff	?i2___lldiv,_gap_time_2
  8576  001ECA  C01F  F02D         	movff	?i2___lldiv+1,_gap_time_2+1
  8577  001ECE  C020  F02E         	movff	?i2___lldiv+2,_gap_time_2+2
  8578  001ED2  C021  F02F         	movff	?i2___lldiv+3,_gap_time_2+3
  8579                           
  8580                           ;ABS_Code.c: 172: ENC2_measure = 1;
  8581  001ED6  8241               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  8582                           
  8583                           ;ABS_Code.c: 173: TMR3H = 0x00;
  8584  001ED8  0E00               	movlw	0
  8585  001EDA  6EB3               	movwf	4019,c	;volatile
  8586                           
  8587                           ;ABS_Code.c: 174: TMR3H = 0x00;
  8588  001EDC  0E00               	movlw	0
  8589  001EDE  6EB3               	movwf	4019,c	;volatile
  8590                           
  8591                           ;ABS_Code.c: 175: if (count_flag == 1) {
  8592  001EE0  A641               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8593  001EE2  D007               	goto	i2l4144
  8594                           
  8595                           ;ABS_Code.c: 176: int_counter_2++;
  8596  001EE4  0E01               	movlw	1
  8597  001EE6  0100               	movlb	0	; () banked
  8598  001EE8  2764               	addwf	_int_counter_2& (0+255),f,b
  8599  001EEA  0E00               	movlw	0
  8600  001EEC  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b
  8601  001EEE  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b
  8602  001EF0  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b
  8603  001EF2                     i2l4144:
  8604                           
  8605                           ;ABS_Code.c: 177: }
  8606                           ;ABS_Code.c: 178: }
  8607                           ;ABS_Code.c: 179: INTCON3bits.INT1IF = 0;
  8608  001EF2  90F0               	bcf	intcon3,0,c	;volatile
  8609  001EF4                     i2l669:
  8610  001EF4  C0B6  FFF5         	movff	??_ISR_Alta+21,tablat
  8611  001EF8  C0B5  FFF8         	movff	??_ISR_Alta+20,tblptru
  8612  001EFC  C0B4  FFF7         	movff	??_ISR_Alta+19,tblptrh
  8613  001F00  C0B3  FFF6         	movff	??_ISR_Alta+18,tblptrl
  8614  001F04  C0B2  FFF4         	movff	??_ISR_Alta+17,prodh
  8615  001F08  C0B1  FFF3         	movff	??_ISR_Alta+16,prodl
  8616  001F0C  C0B0  FFDA         	movff	??_ISR_Alta+15,fsr2h
  8617  001F10  C0AF  FFD9         	movff	??_ISR_Alta+14,fsr2l
  8618  001F14  C0AE  FFE2         	movff	??_ISR_Alta+13,fsr1h
  8619  001F18  C0AD  FFE1         	movff	??_ISR_Alta+12,fsr1l
  8620  001F1C  C0AC  FFEA         	movff	??_ISR_Alta+11,fsr0h
  8621  001F20  C0AB  FFE9         	movff	??_ISR_Alta+10,fsr0l
  8622  001F24  C0AA  FFFB         	movff	??_ISR_Alta+9,pclatu
  8623  001F28  C0A9  FFFA         	movff	??_ISR_Alta+8,pclath
  8624  001F2C  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8625  001F2E  0011               	retfie		f
  8626  001F30                     __end_of_ISR_Alta:
  8627                           	opt stack 0
  8628                           pclatu	equ	0xFFB
  8629                           pclath	equ	0xFFA
  8630                           tblptru	equ	0xFF8
  8631                           tblptrh	equ	0xFF7
  8632                           tblptrl	equ	0xFF6
  8633                           tablat	equ	0xFF5
  8634                           prodh	equ	0xFF4
  8635                           prodl	equ	0xFF3
  8636                           intcon	equ	0xFF2
  8637                           intcon2	equ	0xFF1
  8638                           intcon3	equ	0xFF0
  8639                           postinc0	equ	0xFEE
  8640                           fsr0h	equ	0xFEA
  8641                           fsr0l	equ	0xFE9
  8642                           wreg	equ	0xFE8
  8643                           postdec1	equ	0xFE5
  8644                           fsr1h	equ	0xFE2
  8645                           fsr1l	equ	0xFE1
  8646                           bsr	equ	0xFE0
  8647                           indf2	equ	0xFDF
  8648                           postinc2	equ	0xFDE
  8649                           postdec2	equ	0xFDD
  8650                           fsr2h	equ	0xFDA
  8651                           fsr2l	equ	0xFD9
  8652                           status	equ	0xFD8
  8653                           
  8654 ;; *************** function i2___wmul *****************
  8655 ;; Defined at:
  8656 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8657 ;; Parameters:    Size  Location     Type
  8658 ;;  multiplier      2   29[COMRAM] unsigned int 
  8659 ;;  multiplicand    2   31[COMRAM] unsigned int 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;  __wmul          2   33[COMRAM] unsigned int 
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  2   29[COMRAM] unsigned int 
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0, prodl, prodh
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8671 ;;      Params:         4       0       0       0
  8672 ;;      Locals:         2       0       0       0
  8673 ;;      Temps:          0       0       0       0
  8674 ;;      Totals:         6       0       0       0
  8675 ;;Total ram usage:        6 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_ISR_Alta
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text20
  8685  002862                     __ptext20:
  8686                           	opt stack 0
  8687  002862                     i2___wmul:
  8688                           	opt stack 24
  8689                           
  8690                           ;incstack = 0
  8691  002862  501E               	movf	i2___wmul@multiplier,w,c
  8692  002864  0220               	mulwf	i2___wmul@multiplicand,c
  8693  002866  CFF3 F022          	movff	prodl,i2___wmul@product
  8694  00286A  CFF4 F023          	movff	prodh,i2___wmul@product+1
  8695  00286E  501E               	movf	i2___wmul@multiplier,w,c
  8696  002870  0221               	mulwf	i2___wmul@multiplicand+1,c
  8697  002872  50F3               	movf	prodl,w,c
  8698  002874  2623               	addwf	i2___wmul@product+1,f,c
  8699  002876  501F               	movf	i2___wmul@multiplier+1,w,c
  8700  002878  0220               	mulwf	i2___wmul@multiplicand,c
  8701  00287A  50F3               	movf	prodl,w,c
  8702  00287C  2623               	addwf	i2___wmul@product+1,f,c
  8703  00287E  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  8704  002882  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  8705  002886  0012               	return	
  8706  002888                     __end_ofi2___wmul:
  8707                           	opt stack 0
  8708                           pclatu	equ	0xFFB
  8709                           pclath	equ	0xFFA
  8710                           tblptru	equ	0xFF8
  8711                           tblptrh	equ	0xFF7
  8712                           tblptrl	equ	0xFF6
  8713                           tablat	equ	0xFF5
  8714                           prodh	equ	0xFF4
  8715                           prodl	equ	0xFF3
  8716                           intcon	equ	0xFF2
  8717                           intcon2	equ	0xFF1
  8718                           intcon3	equ	0xFF0
  8719                           postinc0	equ	0xFEE
  8720                           fsr0h	equ	0xFEA
  8721                           fsr0l	equ	0xFE9
  8722                           wreg	equ	0xFE8
  8723                           postdec1	equ	0xFE5
  8724                           fsr1h	equ	0xFE2
  8725                           fsr1l	equ	0xFE1
  8726                           bsr	equ	0xFE0
  8727                           indf2	equ	0xFDF
  8728                           postinc2	equ	0xFDE
  8729                           postdec2	equ	0xFDD
  8730                           fsr2h	equ	0xFDA
  8731                           fsr2l	equ	0xFD9
  8732                           status	equ	0xFD8
  8733                           
  8734 ;; *************** function i2___lldiv *****************
  8735 ;; Defined at:
  8736 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  dividend        4   29[COMRAM] unsigned long 
  8739 ;;  divisor         4   33[COMRAM] unsigned long 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  __lldiv         4    0[BANK0 ] unsigned long 
  8742 ;;  __lldiv         1    4[BANK0 ] unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  4   29[COMRAM] unsigned long 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8752 ;;      Params:         8       0       0       0
  8753 ;;      Locals:         0       5       0       0
  8754 ;;      Temps:          0       0       0       0
  8755 ;;      Totals:         8       5       0       0
  8756 ;;Total ram usage:       13 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; This function calls:
  8759 ;;		Nothing
  8760 ;; This function is called by:
  8761 ;;		_ISR_Alta
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text21
  8766  0026BE                     __ptext21:
  8767                           	opt stack 0
  8768  0026BE                     i2___lldiv:
  8769                           	opt stack 24
  8770                           
  8771                           ;incstack = 0
  8772  0026BE  0E00               	movlw	0
  8773  0026C0  0100               	movlb	0	; () banked
  8774  0026C2  6F9C               	movwf	i2___lldiv@quotient& (0+255),b
  8775  0026C4  0E00               	movlw	0
  8776  0026C6  6F9D               	movwf	(i2___lldiv@quotient+1)& (0+255),b
  8777  0026C8  0E00               	movlw	0
  8778  0026CA  6F9E               	movwf	(i2___lldiv@quotient+2)& (0+255),b
  8779  0026CC  0E00               	movlw	0
  8780  0026CE  6F9F               	movwf	(i2___lldiv@quotient+3)& (0+255),b
  8781                           
  8782                           ; BSR set to: 0
  8783  0026D0  5022               	movf	i2___lldiv@divisor,w,c
  8784  0026D2  1023               	iorwf	i2___lldiv@divisor+1,w,c
  8785  0026D4  1024               	iorwf	i2___lldiv@divisor+2,w,c
  8786  0026D6  1025               	iorwf	i2___lldiv@divisor+3,w,c
  8787  0026D8  B4D8               	btfsc	status,2,c
  8788  0026DA  D02F               	goto	i2l1078
  8789                           
  8790                           ; BSR set to: 0
  8791  0026DC  0E01               	movlw	1
  8792  0026DE  0100               	movlb	0	; () banked
  8793  0026E0  6FA0               	movwf	i2___lldiv@counter& (0+255),b
  8794  0026E2  D007               	goto	i2l4068
  8795  0026E4                     i2l4066:
  8796                           
  8797                           ; BSR set to: 0
  8798  0026E4  90D8               	bcf	status,0,c
  8799  0026E6  3622               	rlcf	i2___lldiv@divisor,f,c
  8800  0026E8  3623               	rlcf	i2___lldiv@divisor+1,f,c
  8801  0026EA  3624               	rlcf	i2___lldiv@divisor+2,f,c
  8802  0026EC  3625               	rlcf	i2___lldiv@divisor+3,f,c
  8803  0026EE  0100               	movlb	0	; () banked
  8804  0026F0  2BA0               	incf	i2___lldiv@counter& (0+255),f,b
  8805  0026F2                     i2l4068:
  8806                           
  8807                           ; BSR set to: 0
  8808  0026F2  AE25               	btfss	i2___lldiv@divisor+3,7,c
  8809  0026F4  D7F7               	goto	i2l4066
  8810  0026F6                     i2l4070:
  8811                           
  8812                           ; BSR set to: 0
  8813  0026F6  0100               	movlb	0	; () banked
  8814  0026F8  90D8               	bcf	status,0,c
  8815  0026FA  379C               	rlcf	i2___lldiv@quotient& (0+255),f,b
  8816  0026FC  379D               	rlcf	(i2___lldiv@quotient+1)& (0+255),f,b
  8817  0026FE  379E               	rlcf	(i2___lldiv@quotient+2)& (0+255),f,b
  8818  002700  379F               	rlcf	(i2___lldiv@quotient+3)& (0+255),f,b
  8819                           
  8820                           ; BSR set to: 0
  8821  002702  5022               	movf	i2___lldiv@divisor,w,c
  8822  002704  5C1E               	subwf	i2___lldiv@dividend,w,c
  8823  002706  5023               	movf	i2___lldiv@divisor+1,w,c
  8824  002708  581F               	subwfb	i2___lldiv@dividend+1,w,c
  8825  00270A  5024               	movf	i2___lldiv@divisor+2,w,c
  8826  00270C  5820               	subwfb	i2___lldiv@dividend+2,w,c
  8827  00270E  5025               	movf	i2___lldiv@divisor+3,w,c
  8828  002710  5821               	subwfb	i2___lldiv@dividend+3,w,c
  8829  002712  A0D8               	btfss	status,0,c
  8830  002714  D00A               	goto	i2l4078
  8831                           
  8832                           ; BSR set to: 0
  8833  002716  5022               	movf	i2___lldiv@divisor,w,c
  8834  002718  5E1E               	subwf	i2___lldiv@dividend,f,c
  8835  00271A  5023               	movf	i2___lldiv@divisor+1,w,c
  8836  00271C  5A1F               	subwfb	i2___lldiv@dividend+1,f,c
  8837  00271E  5024               	movf	i2___lldiv@divisor+2,w,c
  8838  002720  5A20               	subwfb	i2___lldiv@dividend+2,f,c
  8839  002722  5025               	movf	i2___lldiv@divisor+3,w,c
  8840  002724  5A21               	subwfb	i2___lldiv@dividend+3,f,c
  8841                           
  8842                           ; BSR set to: 0
  8843  002726  0100               	movlb	0	; () banked
  8844  002728  819C               	bsf	i2___lldiv@quotient& (0+255),0,b
  8845  00272A                     i2l4078:
  8846                           
  8847                           ; BSR set to: 0
  8848  00272A  90D8               	bcf	status,0,c
  8849  00272C  3225               	rrcf	i2___lldiv@divisor+3,f,c
  8850  00272E  3224               	rrcf	i2___lldiv@divisor+2,f,c
  8851  002730  3223               	rrcf	i2___lldiv@divisor+1,f,c
  8852  002732  3222               	rrcf	i2___lldiv@divisor,f,c
  8853                           
  8854                           ; BSR set to: 0
  8855  002734  0100               	movlb	0	; () banked
  8856  002736  2FA0               	decfsz	i2___lldiv@counter& (0+255),f,b
  8857  002738  D7DE               	goto	i2l4070
  8858  00273A                     i2l1078:
  8859                           
  8860                           ; BSR set to: 0
  8861  00273A  C09C  F01E         	movff	i2___lldiv@quotient,?i2___lldiv
  8862  00273E  C09D  F01F         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
  8863  002742  C09E  F020         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
  8864  002746  C09F  F021         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
  8865                           
  8866                           ; BSR set to: 0
  8867  00274A  0012               	return		;funcret
  8868  00274C                     __end_ofi2___lldiv:
  8869                           	opt stack 0
  8870                           pclatu	equ	0xFFB
  8871                           pclath	equ	0xFFA
  8872                           tblptru	equ	0xFF8
  8873                           tblptrh	equ	0xFF7
  8874                           tblptrl	equ	0xFF6
  8875                           tablat	equ	0xFF5
  8876                           prodh	equ	0xFF4
  8877                           prodl	equ	0xFF3
  8878                           intcon	equ	0xFF2
  8879                           intcon2	equ	0xFF1
  8880                           intcon3	equ	0xFF0
  8881                           postinc0	equ	0xFEE
  8882                           fsr0h	equ	0xFEA
  8883                           fsr0l	equ	0xFE9
  8884                           wreg	equ	0xFE8
  8885                           postdec1	equ	0xFE5
  8886                           fsr1h	equ	0xFE2
  8887                           fsr1l	equ	0xFE1
  8888                           bsr	equ	0xFE0
  8889                           indf2	equ	0xFDF
  8890                           postinc2	equ	0xFDE
  8891                           postdec2	equ	0xFDD
  8892                           fsr2h	equ	0xFDA
  8893                           fsr2l	equ	0xFD9
  8894                           status	equ	0xFD8
  8895                           
  8896 ;; *************** function i2___awdiv *****************
  8897 ;; Defined at:
  8898 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;  dividend        2   35[COMRAM] int 
  8901 ;;  divisor         2   37[COMRAM] int 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  __awdiv         2    2[BANK0 ] int 
  8904 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  8905 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  2   35[COMRAM] int 
  8908 ;; Registers used:
  8909 ;;		wreg, status,2, status,0
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8915 ;;      Params:         4       0       0       0
  8916 ;;      Locals:         0       4       0       0
  8917 ;;      Temps:          0       0       0       0
  8918 ;;      Totals:         4       4       0       0
  8919 ;;Total ram usage:        8 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_ISR_Alta
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text22
  8929  002622                     __ptext22:
  8930                           	opt stack 0
  8931  002622                     i2___awdiv:
  8932                           	opt stack 24
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;incstack = 0
  8936  002622  0E00               	movlw	0
  8937  002624  0100               	movlb	0	; () banked
  8938  002626  6F9D               	movwf	i2___awdiv@sign& (0+255),b
  8939                           
  8940                           ; BSR set to: 0
  8941  002628  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8942  00262A  D007               	goto	i2l4024
  8943                           
  8944                           ; BSR set to: 0
  8945  00262C  6C26               	negf	i2___awdiv@divisor,c
  8946  00262E  1E27               	comf	i2___awdiv@divisor+1,f,c
  8947  002630  B0D8               	btfsc	status,0,c
  8948  002632  2A27               	incf	i2___awdiv@divisor+1,f,c
  8949                           
  8950                           ; BSR set to: 0
  8951  002634  0E01               	movlw	1
  8952  002636  0100               	movlb	0	; () banked
  8953  002638  6F9D               	movwf	i2___awdiv@sign& (0+255),b
  8954  00263A                     i2l4024:
  8955                           
  8956                           ; BSR set to: 0
  8957  00263A  AE25               	btfss	i2___awdiv@dividend+1,7,c
  8958  00263C  D007               	goto	i2l4030
  8959                           
  8960                           ; BSR set to: 0
  8961  00263E  6C24               	negf	i2___awdiv@dividend,c
  8962  002640  1E25               	comf	i2___awdiv@dividend+1,f,c
  8963  002642  B0D8               	btfsc	status,0,c
  8964  002644  2A25               	incf	i2___awdiv@dividend+1,f,c
  8965                           
  8966                           ; BSR set to: 0
  8967  002646  0E01               	movlw	1
  8968  002648  0100               	movlb	0	; () banked
  8969  00264A  1B9D               	xorwf	i2___awdiv@sign& (0+255),f,b
  8970  00264C                     i2l4030:
  8971                           
  8972                           ; BSR set to: 0
  8973  00264C  0E00               	movlw	0
  8974  00264E  0100               	movlb	0	; () banked
  8975  002650  6F9F               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  8976  002652  0E00               	movlw	0
  8977  002654  6F9E               	movwf	i2___awdiv@quotient& (0+255),b
  8978                           
  8979                           ; BSR set to: 0
  8980  002656  5026               	movf	i2___awdiv@divisor,w,c
  8981  002658  1027               	iorwf	i2___awdiv@divisor+1,w,c
  8982  00265A  B4D8               	btfsc	status,2,c
  8983  00265C  D021               	goto	i2l4052
  8984                           
  8985                           ; BSR set to: 0
  8986  00265E  0E01               	movlw	1
  8987  002660  0100               	movlb	0	; () banked
  8988  002662  6F9C               	movwf	i2___awdiv@counter& (0+255),b
  8989  002664  D005               	goto	i2l4038
  8990  002666                     i2l4036:
  8991                           
  8992                           ; BSR set to: 0
  8993  002666  90D8               	bcf	status,0,c
  8994  002668  3626               	rlcf	i2___awdiv@divisor,f,c
  8995  00266A  3627               	rlcf	i2___awdiv@divisor+1,f,c
  8996  00266C  0100               	movlb	0	; () banked
  8997  00266E  2B9C               	incf	i2___awdiv@counter& (0+255),f,b
  8998  002670                     i2l4038:
  8999                           
  9000                           ; BSR set to: 0
  9001  002670  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9002  002672  D7F9               	goto	i2l4036
  9003  002674                     i2l4040:
  9004                           
  9005                           ; BSR set to: 0
  9006  002674  0100               	movlb	0	; () banked
  9007  002676  90D8               	bcf	status,0,c
  9008  002678  379E               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9009  00267A  379F               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9010                           
  9011                           ; BSR set to: 0
  9012  00267C  5026               	movf	i2___awdiv@divisor,w,c
  9013  00267E  5C24               	subwf	i2___awdiv@dividend,w,c
  9014  002680  5027               	movf	i2___awdiv@divisor+1,w,c
  9015  002682  5825               	subwfb	i2___awdiv@dividend+1,w,c
  9016  002684  A0D8               	btfss	status,0,c
  9017  002686  D006               	goto	i2l4048
  9018                           
  9019                           ; BSR set to: 0
  9020  002688  5026               	movf	i2___awdiv@divisor,w,c
  9021  00268A  5E24               	subwf	i2___awdiv@dividend,f,c
  9022  00268C  5027               	movf	i2___awdiv@divisor+1,w,c
  9023  00268E  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  9024                           
  9025                           ; BSR set to: 0
  9026  002690  0100               	movlb	0	; () banked
  9027  002692  819E               	bsf	i2___awdiv@quotient& (0+255),0,b
  9028  002694                     i2l4048:
  9029                           
  9030                           ; BSR set to: 0
  9031  002694  90D8               	bcf	status,0,c
  9032  002696  3227               	rrcf	i2___awdiv@divisor+1,f,c
  9033  002698  3226               	rrcf	i2___awdiv@divisor,f,c
  9034                           
  9035                           ; BSR set to: 0
  9036  00269A  0100               	movlb	0	; () banked
  9037  00269C  2F9C               	decfsz	i2___awdiv@counter& (0+255),f,b
  9038  00269E  D7EA               	goto	i2l4040
  9039  0026A0                     i2l4052:
  9040                           
  9041                           ; BSR set to: 0
  9042  0026A0  0100               	movlb	0	; () banked
  9043  0026A2  519D               	movf	i2___awdiv@sign& (0+255),w,b
  9044  0026A4  0100               	movlb	0	; () banked
  9045  0026A6  B4D8               	btfsc	status,2,c
  9046  0026A8  D005               	goto	i2l4056
  9047                           
  9048                           ; BSR set to: 0
  9049  0026AA  0100               	movlb	0	; () banked
  9050  0026AC  6D9E               	negf	i2___awdiv@quotient& (0+255),b
  9051  0026AE  1F9F               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9052  0026B0  B0D8               	btfsc	status,0,c
  9053  0026B2  2B9F               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9054  0026B4                     i2l4056:
  9055                           
  9056                           ; BSR set to: 0
  9057  0026B4  C09E  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  9058  0026B8  C09F  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9059  0026BC  0012               	return	
  9060  0026BE                     __end_ofi2___awdiv:
  9061                           	opt stack 0
  9062                           pclatu	equ	0xFFB
  9063                           pclath	equ	0xFFA
  9064                           tblptru	equ	0xFF8
  9065                           tblptrh	equ	0xFF7
  9066                           tblptrl	equ	0xFF6
  9067                           tablat	equ	0xFF5
  9068                           prodh	equ	0xFF4
  9069                           prodl	equ	0xFF3
  9070                           intcon	equ	0xFF2
  9071                           intcon2	equ	0xFF1
  9072                           intcon3	equ	0xFF0
  9073                           postinc0	equ	0xFEE
  9074                           fsr0h	equ	0xFEA
  9075                           fsr0l	equ	0xFE9
  9076                           wreg	equ	0xFE8
  9077                           postdec1	equ	0xFE5
  9078                           fsr1h	equ	0xFE2
  9079                           fsr1l	equ	0xFE1
  9080                           bsr	equ	0xFE0
  9081                           indf2	equ	0xFDF
  9082                           postinc2	equ	0xFDE
  9083                           postdec2	equ	0xFDD
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function _WriteTimer0 *****************
  9089 ;; Defined at:
  9090 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  timer0          2   29[COMRAM] unsigned int 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  timer           2   31[COMRAM] struct Timers
  9095 ;; Return value:  Size  Location     Type
  9096 ;;		None               void
  9097 ;; Registers used:
  9098 ;;		None
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9104 ;;      Params:         2       0       0       0
  9105 ;;      Locals:         2       0       0       0
  9106 ;;      Temps:          0       0       0       0
  9107 ;;      Totals:         4       0       0       0
  9108 ;;Total ram usage:        4 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_ISR_Alta
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117                           	psect	text23
  9118  0028D8                     __ptext23:
  9119                           	opt stack 0
  9120  0028D8                     _WriteTimer0:
  9121                           	opt stack 24
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;incstack = 0
  9125  0028D8  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9126  0028DC  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9127  0028E0  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9128  0028E4  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9129  0028E8  0012               	return		;funcret
  9130  0028EA                     __end_of_WriteTimer0:
  9131                           	opt stack 0
  9132  0000                     pclatu	equ	0xFFB
  9133                           pclath	equ	0xFFA
  9134                           tblptru	equ	0xFF8
  9135                           tblptrh	equ	0xFF7
  9136                           tblptrl	equ	0xFF6
  9137                           tablat	equ	0xFF5
  9138                           prodh	equ	0xFF4
  9139                           prodl	equ	0xFF3
  9140                           intcon	equ	0xFF2
  9141                           intcon2	equ	0xFF1
  9142                           intcon3	equ	0xFF0
  9143                           postinc0	equ	0xFEE
  9144                           fsr0h	equ	0xFEA
  9145                           fsr0l	equ	0xFE9
  9146                           wreg	equ	0xFE8
  9147                           postdec1	equ	0xFE5
  9148                           fsr1h	equ	0xFE2
  9149                           fsr1l	equ	0xFE1
  9150                           bsr	equ	0xFE0
  9151                           indf2	equ	0xFDF
  9152                           postinc2	equ	0xFDE
  9153                           postdec2	equ	0xFDD
  9154                           fsr2h	equ	0xFDA
  9155                           fsr2l	equ	0xFD9
  9156                           status	equ	0xFD8
  9157                           pclatu	equ	0xFFB
  9158                           pclath	equ	0xFFA
  9159                           tblptru	equ	0xFF8
  9160                           tblptrh	equ	0xFF7
  9161                           tblptrl	equ	0xFF6
  9162                           tablat	equ	0xFF5
  9163                           prodh	equ	0xFF4
  9164                           prodl	equ	0xFF3
  9165                           intcon	equ	0xFF2
  9166                           intcon2	equ	0xFF1
  9167                           intcon3	equ	0xFF0
  9168                           postinc0	equ	0xFEE
  9169                           fsr0h	equ	0xFEA
  9170                           fsr0l	equ	0xFE9
  9171                           wreg	equ	0xFE8
  9172                           postdec1	equ	0xFE5
  9173                           fsr1h	equ	0xFE2
  9174                           fsr1l	equ	0xFE1
  9175                           bsr	equ	0xFE0
  9176                           indf2	equ	0xFDF
  9177                           postinc2	equ	0xFDE
  9178                           postdec2	equ	0xFDD
  9179                           fsr2h	equ	0xFDA
  9180                           fsr2l	equ	0xFD9
  9181                           status	equ	0xFD8
  9182                           
  9183                           	psect	rparam
  9184  0000                     pclatu	equ	0xFFB
  9185                           pclath	equ	0xFFA
  9186                           tblptru	equ	0xFF8
  9187                           tblptrh	equ	0xFF7
  9188                           tblptrl	equ	0xFF6
  9189                           tablat	equ	0xFF5
  9190                           prodh	equ	0xFF4
  9191                           prodl	equ	0xFF3
  9192                           intcon	equ	0xFF2
  9193                           intcon2	equ	0xFF1
  9194                           intcon3	equ	0xFF0
  9195                           postinc0	equ	0xFEE
  9196                           fsr0h	equ	0xFEA
  9197                           fsr0l	equ	0xFE9
  9198                           wreg	equ	0xFE8
  9199                           postdec1	equ	0xFE5
  9200                           fsr1h	equ	0xFE2
  9201                           fsr1l	equ	0xFE1
  9202                           bsr	equ	0xFE0
  9203                           indf2	equ	0xFDF
  9204                           postinc2	equ	0xFDE
  9205                           postdec2	equ	0xFDD
  9206                           fsr2h	equ	0xFDA
  9207                           fsr2l	equ	0xFD9
  9208                           status	equ	0xFD8
  9209                           
  9210                           	psect	temp
  9211  000042                     btemp:
  9212                           	opt stack 0
  9213  000042                     	ds	1
  9214  0000                     int$flags	set	btemp
  9215                           pclatu	equ	0xFFB
  9216                           pclath	equ	0xFFA
  9217                           tblptru	equ	0xFF8
  9218                           tblptrh	equ	0xFF7
  9219                           tblptrl	equ	0xFF6
  9220                           tablat	equ	0xFF5
  9221                           prodh	equ	0xFF4
  9222                           prodl	equ	0xFF3
  9223                           intcon	equ	0xFF2
  9224                           intcon2	equ	0xFF1
  9225                           intcon3	equ	0xFF0
  9226                           postinc0	equ	0xFEE
  9227                           fsr0h	equ	0xFEA
  9228                           fsr0l	equ	0xFE9
  9229                           wreg	equ	0xFE8
  9230                           postdec1	equ	0xFE5
  9231                           fsr1h	equ	0xFE2
  9232                           fsr1l	equ	0xFE1
  9233                           bsr	equ	0xFE0
  9234                           indf2	equ	0xFDF
  9235                           postinc2	equ	0xFDE
  9236                           postdec2	equ	0xFDD
  9237                           fsr2h	equ	0xFDA
  9238                           fsr2l	equ	0xFD9
  9239                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      65
    BANK0           160     53     122
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___lldiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13374
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___lldiv
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    3552
                                             43 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             27 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6833
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     899
                                             33 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     621
                                             27 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             41 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             27 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             27 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             27 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     570
                                             27 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             27 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1301
                                              5 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                          i2___lldiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lldiv                                           13     5      8     381
                                             29 COMRAM     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                             35 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___lldiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___lldiv
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     35      7A       4       76.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     27      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BB       9        0.0%
DATA                 0      0      BB      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Jan 31 19:32:31 2016

           ??_CANisTXwarningON 00B7                              _x 020D                              _y 020E  
         __end_of_CANSetFilter 0C0A                   ___awdiv@sign 00BC                             bsr 000FE0  
          ___wmul@multiplicand 00B9                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                    __CFG_LVP$ON 000000  
                          l400 106E                            l403 1128                            l500 084E  
                          l412 12E2                            l404 112C                            l501 085A  
                          l413 12E6                            l405 1224                            l510 0966  
                          l502 085E                            l414 12F2                            l406 11B4  
                          l511 096A                            l503 086A                            l407 11BE  
                          l520 0A76                            l512 0976                            l408 11C8  
                          l521 0A82                            l513 097A                            l409 11D2  
                          l530 0B8E                            l522 0A86                            l514 0986  
                          l506 0946                            l450 1ADC                            l442 1A9C  
                          l531 0B92                            l523 0A92                            l507 094A  
                          l443 1AA0                            l532 0B9E                            l524 0A96  
                          l508 0956                            l460 1BE8                            l444 1AAC  
                          l380 0CCA                            l533 0BA2                            l525 0AA2  
                          l517 0A62                            l509 095A                            l461 1BF4  
                          l453 1BB4                            l445 1AB0                            l373 0E8E  
                          l534 0BAE                            l518 0A66                            l454 1BB8  
                          l446 1ABC                            l390 0EA8                            l374 0C20  
                          l702 2284                            l535 0BB2                            l519 0A72  
                          l455 1BC4                            l447 1AC0                            l391 0FA0  
                          l383 0DDA                            l375 0C24                            l536 0BBE  
                          l528 0B7E                            l480 0628                            l456 1BC8  
                          l448 1ACC                            l368 1FEC                            l392 0F30  
                          l384 0DDE                            l376 0D1C                            l529 0B82  
                          l481 0634                            l473 05F4                            l457 1BD4  
                          l449 1AD0                            l369 1FF6                            l393 0F3A  
                          l385 0DEA                            l377 0CAC                            l490 073E  
                          l474 05F8                            l458 1BD8                            l394 0F44  
                          l378 0CB6                            l715 27B6                            l491 0742  
                          l475 0604                            l459 1BE4                            l395 0F4E  
                          l379 0CC0                            l707 2280                            l492 074E  
                          l484 070E                            l476 0608                            l388 1112  
                          l485 0712                            l477 0614                            l389 0EA4  
                          l709 227C                            l486 071E                            l478 0618  
                          l566 28A6                            l398 105E                            l495 082A  
                          l487 0722                            l479 0624                            l399 1062  
                          l496 082E                            l488 072E                            l497 083A  
                          l489 0732                            l498 083E                            l682 22D2  
                          l499 084A                            l579 281E                            l684 22CE  
                          l685 22D4                            l688 22DC                            l689 2326  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 007C                            wreg 000FE8                   __CFG_WDT$OFF 000000  
                         l3000 08B4                           l1078 2556                           l3034 09D0  
                         l3028 098A                           l3212 0DCE                           l3062 0AA6  
                         l3152 2002                           l3154 2046                           l3146 1FE4  
                         l3218 0DEE                           l3068 0AEC                           l3148 1FFA  
                         l3404 2810                           l3430 244A                           l3422 2420  
                         l2710 195A                           l3440 2480                           l3432 2450  
                         l3416 240A                           l3096 0BC2                           l3344 11DC  
                         l3192 0CD4                           l3370 12F6                           l3428 243E  
                         l3444 248E                           l3364 12D6                           l3268 0F58  
                         l2726 1A10                           l3294 1072                           l3448 24A2  
                         l2808 01C2                           l2752 1AE0                           l3288 1052  
                         l2826 027A                           l3722 21A0                           l2692 28B4  
                         l2932 067E                           l2844 0334                           l3716 2142  
                         l2926 0638                           l2862 03EE                           l2758 1B26  
                         l2960 0752                           l2880 04A8                           l2784 1BF8  
                         l3744 2270                           l3728 21DC                           l3754 24DA  
                         l3756 24EA                           l3766 2544                           l3758 24F0  
                         l2966 0798                           l2994 086E                           l2898 0562  
                         l3972 2316                           l3964 22F8                           l3948 22B6  
                         l3958 22E2                           l3976 232A                           l3968 2306  
                         l3988 23AC                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           u4000 28F2                           _LATD 000F8C  
                         u2305 1936                           _LATE 000F8D                           u4010 28FE  
                         u2330 198C                           u3220 0BE2                           u3140 0AC6  
                         u3060 09AA                           u2500 1C18                           u2420 1B00  
                         u2335 1980                           u3225 0BD6                           u3145 0ABA  
                         u3065 099E                           u2505 1C0C                           u2425 1AF4  
                         u2345 19EC                           u2610 02B0                           u2530 013E  
                         u2290 18D6                           u3350 0CF4                           u2615 02A4  
                         u2535 0132                           u2295 18CA                           u3360 0D40  
                         u4080 2160                           u2705 0484                           u2625 0310  
                         u2545 019E                           u3505 1024                           u2730 04DE  
                         u2650 036A                           u2570 01F6                           u3610 11FC  
                         u3355 0CE8                           u2900 0772                           u2820 0658  
                         u3620 1248                           u3365 0D34                           u4086 2162  
                         u2735 04D2                           u2655 035E                           u2575 01EA  
                         u3615 11F0                           u3375 0DA0                           u3480 0F78  
                         u2905 0766                           u2825 064C                           u2745 053E  
                         u2665 03CA                           u2585 0256                           u3625 123C  
                         u2690 0424                           u3490 0FC4                           u3635 12A8  
                         u3485 0F6C                           u2695 0418                           u3495 0FB8  
                         u2980 088E                           u2985 0882                           u4697 2812  
          __size_of_CANSetMask 039E                           _main 2288                           _read 0078  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           _step 0079                           btemp 0042  
             __end_of_ADC_Read 27F2                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0100                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                   ___param_bank 000010               _CANOperationMode 28AC  
                 _status_array 00D2                _brake_value_inc 0076           _remote_frame_handler 20F6  
   __size_of_CANreceiveMessage 050C                          ?_main 0001                __end_of___awdiv 24AC  
              __end_of___lldiv 2568                          _T0CON 000FD5                ___awdiv@divisor 00B9  
                        _T1CON 000FCD                          _T3CON 000FB1             __size_of_ISR_Bassa 00E8  
                        i1l420 162E                          i1l571 28D4                          i1l675 00B4  
                        i1l678 00B8                          i2l669 1EF4                ___awdiv@counter 00BB  
                        _TMR0H 000FD7                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR3H 000FB3                          _TMR1L 000FCE                          _TMR3L 000FB2  
            _CANisRxReady$3116 0001                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1F30                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000             CANInitialize@flags 00C9                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
               __pbitbssCOMRAM 0208           __end_of_CANisRxReady 28D8                          tablat 000FF5  
         __end_of_CANisTxReady 28AC               __end_ofi2___wmul 2888                          status 000FD8  
           __size_ofi2___awdiv 009C                 __CFG_PBADEN$ON 000000             __size_ofi2___lldiv 008E  
              __initialization 274C              i2___lldiv@divisor 0022                   __end_of_main 23EE  
            i2___lldiv@counter 00A0  __size_of_board_initialization 00BA               _brake_signal_CAN 0075  
        ?_remote_frame_handler 0001                         ??_main 00D1                  __activetblptr 000002  
            _CANisTxReady$3114 00B7                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 00B7                __CFG_BBSIZ$1024 000000  
                       i1l3520 15F6                         i1l3512 15BA                         i1l3504 157E  
                       i1l3522 1628                         i1l3516 15D8                         i1l3508 159C  
                       i1l3570 1818                         i2l1078 273A                         i1l3582 186C  
                       i1l3574 1834                         i1l3566 17FC                         i1l3558 178E  
                       i1l3584 189E                         i1l3496 150E                         i1l3920 0066  
                       i1l3578 1850                         i2l4030 264C                         i2l4040 2674  
                       i2l4024 263A                         i2l4120 1E40                         i1l3928 0096  
                       i2l4130 1E76                         i2l4106 1DC4                         i2l4122 1E62  
                       i2l4036 2666                         i2l4052 26A0                         i2l4038 2670  
                       i2l4070 26F6                         i2l4056 26B4                         i2l4048 2694  
                       i2l4144 1EF2                         i2l4066 26E4                         i2l4068 26F2  
                       i2l4078 272A                         i2l4094 1DA2                         i2l4096 1DAE  
                       i2l4098 1DB0                         _RXB0D0 000F66                         _RXB0D1 000F67  
                       _RXB0D2 000F68                         _RXB0D3 000F69                         _RXB0D4 000F6A  
                       _RXB1D0 000F56                         _RXB0D5 000F6B                         _RXB1D1 000F57  
                       _RXB0D6 000F6C                         _RXB1D2 000F58                         _RXB0D7 000F6D  
                       _RXB1D3 000F59                         _RXB1D4 000F5A                         _RXB1D5 000F5B  
                       _RXB1D6 000F5C                         _RXB1D7 000F5D                         _TXB0D0 000F46  
                       _TXB0D1 000F47                         _TXB0D2 000F48                         _TXB0D3 000F49  
                       _TXB1D0 000F36                         _TXB0D4 000F4A                         _TXB1D1 000F37  
                       _TXB0D5 000F4B                         _TXB1D2 000F38                         _TXB0D6 000F4C  
                       _TXB1D3 000F39                         _TXB0D7 000F4D                         _TXB2D0 000F26  
                       _TXB1D4 000F3A                         _TXB2D1 000F27                         _TXB1D5 000F3B  
                       _TXB2D2 000F28                         _TXB1D6 000F3C                         _TXB2D3 000F29  
                       _TXB1D7 000F3D                         _TXB2D4 000F2A                         _TXB2D5 000F2B  
                       _TXB2D6 000F2C                         _TXB2D7 000F2D             CANsendMessage@data 00BB  
           CANsendMessage@tamp 00C3              __end_of_ISR_Bassa 0100               __end_of_delay_ms 282C  
        __size_of_CANSetFilter 0B06                 __CFG_XINST$OFF 000000                         ___wmul 282C  
                    ??___awdiv 00BB                 __CFG_STVREN$ON 000000                      ??___lldiv 00BF  
                 ??_CANSetMask 00BC                         clear_0 2752                         clear_1 2760  
             ___awdiv@quotient 00BD                 i2___awdiv@sign 009D                __CFG_BOREN$BOHW 000000  
                 __pdataCOMRAM 0039              __end_ofi2___awdiv 26BE              __end_ofi2___lldiv 274C  
                    ?_ADC_Read 0001                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 0077                   _CANSetFilter 0104  
                   __accesstop 0060        __end_of__initialization 27A6             __end_of_CANSetMask 1C40  
                ___rparam_used 000001      __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001  
                    ?_ISR_Alta 0001             i2___lldiv@dividend 001E                   __pidataBANK0 2902  
                 _data_array_1 0039         ??_remote_frame_handler 00C7                   _ENC1_measure 0208  
        CANSetFilter@numBuffer 00C0                      ?i2___wmul 001E      __size_of_CANisTXwarningON 000C  
                 _ENC2_measure 0209                     ??_ADC_Read 00BF          __size_of_CANisRxReady 0016  
        __size_of_CANisTxReady 0024       __end_of_CANOperationMode 28C2             i2___lldiv@quotient 009C  
                   __pbssBANK0 0060        __size_of_CANsendMessage 078C                     ??_ISR_Alta 00A1  
                      ?___wmul 00B7                     _gap_time_1 0028                     _gap_time_2 002C  
             WriteTimer0@timer 0020                  ??_WriteTimer0 0020                   _CANisRxReady 28C2  
                      _CANSTAT 000F6E                   _CANisTxReady 2888                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72                     ??i2___wmul 0022  
                _int_counter_1 0060                  _int_counter_2 0064         __size_of_CANInitialize 01C6  
                    ?_delay_ms 00BD                        _RXB0DLC 000F65                        _RXB1DLC 000F55  
                      _RXB0CON 000F60                        _RXB1CON 000F50                        _TXB0DLC 000F45  
                      _TXB1DLC 000F35                        _TXB2DLC 000F25                     _distance_1 0070  
                   _distance_2 0072            CANsendMessage@flags 00BE                     _count_flag 020B  
                      __Hparam 0000                        __Lparam 0000               delay_ms@value_ms 00BD  
                      ___awdiv 23EE                        ___lldiv 24AC                __size_of___wmul 0036  
         CANInitialize@propSeg 00CE                        __pcinit 274C                        __ramtop 0300  
                      __ptext0 2288                        __ptext1 20F6                        __ptext2 0C0A  
                      __ptext3 2888                        __ptext4 2568                        __ptext5 27F2  
                      __ptext6 282C                        __ptext7 1F30                        __ptext8 18A2  
                      __ptext9 0104                      _T0CONbits 000FD5                      _T1CONbits 000FCD  
                    _T3CONbits 000FB1            __end_of_WriteTimer0 28EA                     ??_delay_ms 00BF  
       CANreceiveMessage@error 000B   __end_of_board_initialization 2622                 __pintcode_body 1C40  
         end_of_initialization 27A6                  _Analogic_Mode 0074                  __Lmediumconst 0000  
                      int_func 1C40            i2___wmul@multiplier 001E               _CANisRXwarningON 28F6  
                _CANInitialize 1F30                ___lldiv@divisor 00BB                ___lldiv@counter 00C3  
                    _ISR_Bassa 0018                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                      _PORTAbits 000F80  
               CANSetMask@mask 00B7                      _PORTCbits 000F82              _correction_factor 006E  
               CANSetMask@tamp 00C1                 CANSetMask@type 00BB               _CANisTXwarningON 28EA  
            __size_of_ADC_Read 003E                      i2___awdiv 2622                      i2___lldiv 26BE  
      _clock_counter_reference 006C                 _CANsendMessage 0C0A               CANInitialize@BRP 00C8  
             CANInitialize@SJW 00C7                 ?_CANInitialize 00C5             i2___awdiv@dividend 0024  
                   ?_ISR_Bassa 0001              __size_of_ISR_Alta 1F28                 __end_of___wmul 2862  
                __pidataCOMRAM 290B                    _WriteTimer0 28D8               i2___wmul@product 0022  
          start_initialization 274C             i2___awdiv@quotient 009E              __size_ofi2___wmul 0026  
          CANSetMask@numBuffer 00C0                     ?i2___awdiv 0024                     ?i2___lldiv 001E  
       __end_of_CANsendMessage 1396              ?_CANOperationMode 0001             ??_CANOperationMode 00B7  
   CANInitialize@FilterConfig1 00CF     CANInitialize@FilterConfig2 00D0           _board_initialization 2568  
                     ??___wmul 00BB                    __pdataBANK0 00D1               __CFG_LPT1OSC$OFF 000000  
__size_of_remote_frame_handler 0192             _brake_value_degree 0038         CANInitialize@phaseSeg1 00C5  
       CANInitialize@phaseSeg2 00C6                    __pbssCOMRAM 0028                  __pcstackBANK0 009C  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72              __size_of_delay_ms 003A  
              ?_CANsendMessage 00B7                ??_CANInitialize 00CA             CANSetFilter@filter 00B7  
        ?_board_initialization 0001                    ??_ISR_Bassa 000D                      __pintcode 0008  
                     ?___awdiv 00B7                       ?___lldiv 00B7                    __pintcodelo 0018  
            WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2902                    _brake_value 009B  
                  _COMSTATbits 000F74                       _ADC_Read 27B4                    ??i2___awdiv 0028  
                  ??i2___lldiv 0026          CANreceiveMessage@tamp 000C                 ___wmul@product 00BB  
 _delay_quartz_frequency_value 00D1                       _IPR3bits 000FA5                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 28F6                       i1u380_20 147C                       i1u380_26 147E  
                     i1u390_20 16D6                       i1u382_25 1492                       i1u390_26 16D8  
                     i1u391_20 1700                       i1u391_26 1702                       i1u393_25 1714  
                     i1u379_20 144E                       i1u379_26 1450                       i1u388_25 1602  
                     i1u399_25 1878                       _PIR2bits 000FA1                       _PIR3bits 000FA4  
                     i2u465_40 1E4A                       i2u465_46 1E4C                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                      _timer_off 0030  
                     _RXM0SIDH 000F18                       _RXM0SIDL 000F19                       _RXM1SIDH 000F1C  
                     _RXM1SIDL 000F1D                       _RXERRCNT 000F75                       _TXERRCNT 000F76  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0              ___wmul@multiplier 00B7  
                     i2___wmul 2862              i2___awdiv@divisor 0026              i2___awdiv@counter 009C  
                ?_CANSetFilter 00B7                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 277A                      copy_data1 279A                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00D1  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52                     _CANSetMask 18A2  
             __size_of___awdiv 00BE          i2___wmul@multiplicand 0020               __size_of___lldiv 00BC  
              _remote_frame_id 0068                       _Tx_retry 020A                   ?_WriteTimer0 001E  
                 _RXF0SIDLbits 000F01                       _delay_ms 27F2                   _RXF1SIDLbits 000F05  
               ??_CANSetFilter 00BC                       __ptext10 28AC                       __ptext11 24AC  
                     __ptext20 2862                       __ptext12 28EA                       __ptext21 26BE  
                     __ptext13 28F6                       __ptext22 2622                       __ptext14 27B4  
                     __ptext23 28D8                       __ptext15 23EE                       __ptext17 1396  
                     __ptext18 28C2                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00BD  
                 _remote_frame 020C                  __size_of_main 0166           CANreceiveMessage@msg 0001  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 0034  
                 _TXB2SIDLbits 000F22                       int$flags 0042      __size_of_CANOperationMode 0016  
                ?_CANisRxReady 0001                  ?_CANisTxReady 0001                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 1396                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 00BF                  _wheel_speed_1 007A  
                _wheel_speed_2 007B             ?_CANreceiveMessage 0001       CANsendMessage@identifier 00B7  
 __end_of_remote_frame_handler 2288                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 00C1               CANSetFilter@type 00BB            ??_CANreceiveMessage 0003  
             ___lldiv@dividend 00B7                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00B7                 ??_CANisRxReady 0001  
                  ?_CANSetMask 00B7                 ??_CANisTxReady 00B7                 _distance_array 008B  
    __end_of_CANreceiveMessage 18A2               ___lldiv@quotient 00BF              ?_CANisRXwarningON 0001  
                  _speed_array 0093             ??_CANisRXwarningON 00B7          __end_of_CANInitialize 20F6  
            ?_CANisTXwarningON 0001  
