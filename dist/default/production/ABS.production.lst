

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 07 09:59:37 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataBANK0
    44  0029A4                     __pidataBANK0:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _delay_quartz_frequency_value
    48  0029A4  14                 	db	20
    49  0000                     _RXB1CON	set	3920
    50  0000                     _RXB1CONbits	set	3920
    51  0000                     _RXB1D0	set	3926
    52  0000                     _RXB1D1	set	3927
    53  0000                     _RXB1D2	set	3928
    54  0000                     _RXB1D3	set	3929
    55  0000                     _RXB1D4	set	3930
    56  0000                     _RXB1D5	set	3931
    57  0000                     _RXB1D6	set	3932
    58  0000                     _RXB1D7	set	3933
    59  0000                     _RXB1DLC	set	3925
    60  0000                     _RXB1DLCbits	set	3925
    61  0000                     _RXB1EIDH	set	3923
    62  0000                     _RXB1EIDL	set	3924
    63  0000                     _RXB1SIDH	set	3921
    64  0000                     _RXB1SIDL	set	3922
    65  0000                     _RXB1SIDLbits	set	3922
    66  0000                     _RXF0EIDH	set	3842
    67  0000                     _RXF0EIDL	set	3843
    68  0000                     _RXF0SIDH	set	3840
    69  0000                     _RXF0SIDL	set	3841
    70  0000                     _RXF0SIDLbits	set	3841
    71  0000                     _RXF1EIDH	set	3846
    72  0000                     _RXF1EIDL	set	3847
    73  0000                     _RXF1SIDH	set	3844
    74  0000                     _RXF1SIDL	set	3845
    75  0000                     _RXF1SIDLbits	set	3845
    76  0000                     _RXF2EIDH	set	3850
    77  0000                     _RXF2EIDL	set	3851
    78  0000                     _RXF2SIDH	set	3848
    79  0000                     _RXF2SIDL	set	3849
    80  0000                     _RXF2SIDLbits	set	3849
    81  0000                     _RXF3EIDH	set	3854
    82  0000                     _RXF3EIDL	set	3855
    83  0000                     _RXF3SIDH	set	3852
    84  0000                     _RXF3SIDL	set	3853
    85  0000                     _RXF3SIDLbits	set	3853
    86  0000                     _RXF4EIDH	set	3858
    87  0000                     _RXF4EIDL	set	3859
    88  0000                     _RXF4SIDH	set	3856
    89  0000                     _RXF4SIDL	set	3857
    90  0000                     _RXF4SIDLbits	set	3857
    91  0000                     _RXF5EIDH	set	3862
    92  0000                     _RXF5EIDL	set	3863
    93  0000                     _RXF5SIDH	set	3860
    94  0000                     _RXF5SIDL	set	3861
    95  0000                     _RXF5SIDLbits	set	3861
    96  0000                     _RXM0EIDH	set	3866
    97  0000                     _RXM0EIDL	set	3867
    98  0000                     _RXM0SIDH	set	3864
    99  0000                     _RXM0SIDL	set	3865
   100  0000                     _RXM0SIDLbits	set	3865
   101  0000                     _RXM1EIDH	set	3870
   102  0000                     _RXM1EIDL	set	3871
   103  0000                     _RXM1SIDH	set	3868
   104  0000                     _RXM1SIDL	set	3869
   105  0000                     _RXM1SIDLbits	set	3869
   106  0000                     _TXB0CONbits	set	3904
   107  0000                     _TXB0D0	set	3910
   108  0000                     _TXB0D1	set	3911
   109  0000                     _TXB0D2	set	3912
   110  0000                     _TXB0D3	set	3913
   111  0000                     _TXB0D4	set	3914
   112  0000                     _TXB0D5	set	3915
   113  0000                     _TXB0D6	set	3916
   114  0000                     _TXB0D7	set	3917
   115  0000                     _TXB0DLC	set	3909
   116  0000                     _TXB0DLCbits	set	3909
   117  0000                     _TXB0EIDH	set	3907
   118  0000                     _TXB0EIDL	set	3908
   119  0000                     _TXB0SIDH	set	3905
   120  0000                     _TXB0SIDL	set	3906
   121  0000                     _TXB0SIDLbits	set	3906
   122  0000                     _TXB1CONbits	set	3888
   123  0000                     _TXB1D0	set	3894
   124  0000                     _TXB1D1	set	3895
   125  0000                     _TXB1D2	set	3896
   126  0000                     _TXB1D3	set	3897
   127  0000                     _TXB1D4	set	3898
   128  0000                     _TXB1D5	set	3899
   129  0000                     _TXB1D6	set	3900
   130  0000                     _TXB1D7	set	3901
   131  0000                     _TXB1DLC	set	3893
   132  0000                     _TXB1DLCbits	set	3893
   133  0000                     _TXB1EIDH	set	3891
   134  0000                     _TXB1EIDL	set	3892
   135  0000                     _TXB1SIDH	set	3889
   136  0000                     _TXB1SIDL	set	3890
   137  0000                     _TXB1SIDLbits	set	3890
   138  0000                     _TXB2CONbits	set	3872
   139  0000                     _TXB2D0	set	3878
   140  0000                     _TXB2D1	set	3879
   141  0000                     _TXB2D2	set	3880
   142  0000                     _TXB2D3	set	3881
   143  0000                     _TXB2D4	set	3882
   144  0000                     _TXB2D5	set	3883
   145  0000                     _TXB2D6	set	3884
   146  0000                     _TXB2D7	set	3885
   147  0000                     _TXB2DLC	set	3877
   148  0000                     _TXB2DLCbits	set	3877
   149  0000                     _TXB2EIDH	set	3875
   150  0000                     _TXB2EIDL	set	3876
   151  0000                     _TXB2SIDH	set	3873
   152  0000                     _TXB2SIDL	set	3874
   153  0000                     _TXB2SIDLbits	set	3874
   154  0000                     _ADCON0bits	set	4034
   155  0000                     _ADCON1	set	4033
   156  0000                     _ADCON2bits	set	4032
   157  0000                     _ADRESH	set	4036
   158  0000                     _BRGCON1	set	3952
   159  0000                     _BRGCON2	set	3953
   160  0000                     _BRGCON2bits	set	3953
   161  0000                     _BRGCON3	set	3954
   162  0000                     _BRGCON3bits	set	3954
   163  0000                     _CANCON	set	3951
   164  0000                     _CANCONbits	set	3951
   165  0000                     _CANSTAT	set	3950
   166  0000                     _COMSTATbits	set	3956
   167  0000                     _INTCON2bits	set	4081
   168  0000                     _INTCON3bits	set	4080
   169  0000                     _INTCONbits	set	4082
   170  0000                     _IPR1bits	set	3999
   171  0000                     _IPR2bits	set	4002
   172  0000                     _IPR3bits	set	4005
   173  0000                     _LATA	set	3977
   174  0000                     _LATB	set	3978
   175  0000                     _LATC	set	3979
   176  0000                     _LATD	set	3980
   177  0000                     _LATE	set	3981
   178  0000                     _PIE1bits	set	3997
   179  0000                     _PIE2bits	set	4000
   180  0000                     _PIE3bits	set	4003
   181  0000                     _PIR1bits	set	3998
   182  0000                     _PIR2bits	set	4001
   183  0000                     _PIR3bits	set	4004
   184  0000                     _PORTAbits	set	3968
   185  0000                     _PORTCbits	set	3970
   186  0000                     _RCONbits	set	4048
   187  0000                     _RXB0CON	set	3936
   188  0000                     _RXB0CONbits	set	3936
   189  0000                     _RXB0D0	set	3942
   190  0000                     _RXB0D1	set	3943
   191  0000                     _RXB0D2	set	3944
   192  0000                     _RXB0D3	set	3945
   193  0000                     _RXB0D4	set	3946
   194  0000                     _RXB0D5	set	3947
   195  0000                     _RXB0D6	set	3948
   196  0000                     _RXB0D7	set	3949
   197  0000                     _RXB0DLC	set	3941
   198  0000                     _RXB0DLCbits	set	3941
   199  0000                     _RXB0EIDH	set	3939
   200  0000                     _RXB0EIDL	set	3940
   201  0000                     _RXB0SIDH	set	3937
   202  0000                     _RXB0SIDL	set	3938
   203  0000                     _RXB0SIDLbits	set	3938
   204  0000                     _RXERRCNT	set	3957
   205  0000                     _T0CON	set	4053
   206  0000                     _T0CONbits	set	4053
   207  0000                     _T1CON	set	4045
   208  0000                     _T1CONbits	set	4045
   209  0000                     _T3CON	set	4017
   210  0000                     _T3CONbits	set	4017
   211  0000                     _TMR0H	set	4055
   212  0000                     _TMR0L	set	4054
   213  0000                     _TMR1H	set	4047
   214  0000                     _TMR1L	set	4046
   215  0000                     _TMR3H	set	4019
   216  0000                     _TMR3L	set	4018
   217  0000                     _TRISA	set	3986
   218  0000                     _TRISB	set	3987
   219  0000                     _TRISC	set	3988
   220  0000                     _TRISD	set	3989
   221  0000                     _TRISE	set	3990
   222  0000                     _TXERRCNT	set	3958
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  002858                     __pcinit:
   228                           	opt stack 0
   229  002858                     start_initialization:
   230                           	opt stack 0
   231  002858                     __initialization:
   232                           	opt stack 0
   233                           
   234                           ; Clear objects allocated to BANK0 (74 bytes)
   235  002858  EE00  F060         	lfsr	0,__pbssBANK0
   236  00285C  0E4A               	movlw	74
   237  00285E                     clear_0:
   238  00285E  6AEE               	clrf	postinc0,c
   239  002860  06E8               	decf	wreg,f,c
   240  002862  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   243  002864  6A3E               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   244  002866  6A3D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   245                           
   246                           ; Clear objects allocated to COMRAM (21 bytes)
   247  002868  EE00  F028         	lfsr	0,__pbssCOMRAM
   248  00286C  0E15               	movlw	21
   249  00286E                     clear_1:
   250  00286E  6AEE               	clrf	postinc0,c
   251  002870  06E8               	decf	wreg,f,c
   252  002872  E1FD               	bnz	clear_1
   253                           
   254                           ; Initialize objects allocated to BANK0 (1 bytes)
   255                           ; load TBLPTR registers with __pidataBANK0
   256  002874  0EA4               	movlw	low __pidataBANK0
   257  002876  6EF6               	movwf	tblptrl,c
   258  002878  0E29               	movlw	high __pidataBANK0
   259  00287A  6EF7               	movwf	tblptrh,c
   260  00287C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   261  00287E  6EF8               	movwf	tblptru,c
   262  002880  0009               	tblrd		*+	;fetch initializer
   263  002882  CFF5 F0DE          	movff	tablat,__pdataBANK0
   264  002886                     end_of_initialization:
   265                           	opt stack 0
   266  002886                     __end_of__initialization:
   267                           	opt stack 0
   268  002886  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   269  002888  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   270  00288A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   271  00288C  6EF8               	movwf	tblptru,c
   272  00288E  0100               	movlb	0
   273  002890  EF64  F00F         	goto	_main	;jump to C main() function
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bitbssCOMRAM
   282  0001E8                     __pbitbssCOMRAM:
   283                           	opt stack 0
   284  0001E8                     _ENC1_measure:
   285                           	opt stack 0
   286  0001E8                     	ds	1
   287  0001E9                     _ENC2_measure:
   288                           	opt stack 0
   289  0001E9                     	ds	1
   290  0001EA                     _TMR1_overflow:
   291                           	opt stack 0
   292  0001EA                     	ds	1
   293  0001EB                     _TMR3_overflow:
   294                           	opt stack 0
   295  0001EB                     	ds	1
   296  0001EC                     _Tx_retry:
   297                           	opt stack 0
   298  0001EC                     	ds	1
   299  0001ED                     _count_flag:
   300                           	opt stack 0
   301  0001ED                     	ds	1
   302  0001EE                     _remote_frame:
   303                           	opt stack 0
   304  0001EE                     	ds	1
   305  0001EF                     _x:
   306                           	opt stack 0
   307  0001EF                     	ds	1
   308  0001F0                     _y:
   309                           	opt stack 0
   310  0001F0                     	ds	1
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318                           	psect	bssCOMRAM
   319  000028                     __pbssCOMRAM:
   320                           	opt stack 0
   321  000028                     _data_debug1:
   322                           	opt stack 0
   323  000028                     	ds	8
   324  000030                     _timer_off:
   325                           	opt stack 0
   326  000030                     	ds	4
   327  000034                     _timer_on:
   328                           	opt stack 0
   329  000034                     	ds	4
   330  000038                     _gap_time_1:
   331                           	opt stack 0
   332  000038                     	ds	2
   333  00003A                     _gap_time_2:
   334                           	opt stack 0
   335  00003A                     	ds	2
   336  00003C                     _brake_value_degree:
   337                           	opt stack 0
   338  00003C                     	ds	1
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           
   346                           	psect	bssBANK0
   347  000060                     __pbssBANK0:
   348                           	opt stack 0
   349  000060                     _int_counter_1:
   350                           	opt stack 0
   351  000060                     	ds	4
   352  000064                     _int_counter_2:
   353                           	opt stack 0
   354  000064                     	ds	4
   355  000068                     _remote_frame_id:
   356                           	opt stack 0
   357  000068                     	ds	4
   358  00006C                     _wheel_speed_1:
   359                           	opt stack 0
   360  00006C                     	ds	4
   361  000070                     _wheel_speed_2:
   362                           	opt stack 0
   363  000070                     	ds	4
   364  000074                     _clock_counter_reference:
   365                           	opt stack 0
   366  000074                     	ds	2
   367  000076                     _correction_factor:
   368                           	opt stack 0
   369  000076                     	ds	2
   370  000078                     _distance_1:
   371                           	opt stack 0
   372  000078                     	ds	2
   373  00007A                     _distance_2:
   374                           	opt stack 0
   375  00007A                     	ds	2
   376  00007C                     _Analogic_Mode:
   377                           	opt stack 0
   378  00007C                     	ds	1
   379  00007D                     _brake_signal_CAN:
   380                           	opt stack 0
   381  00007D                     	ds	1
   382  00007E                     _brake_value_inc:
   383                           	opt stack 0
   384  00007E                     	ds	1
   385  00007F                     _home_position:
   386                           	opt stack 0
   387  00007F                     	ds	1
   388  000080                     _read:
   389                           	opt stack 0
   390  000080                     	ds	1
   391  000081                     _step:
   392                           	opt stack 0
   393  000081                     	ds	1
   394  000082                     _msg:
   395                           	opt stack 0
   396  000082                     	ds	15
   397  000091                     _distance_array:
   398                           	opt stack 0
   399  000091                     	ds	8
   400  000099                     _speed_array:
   401                           	opt stack 0
   402  000099                     	ds	8
   403  0000A1                     _status_array:
   404                           	opt stack 0
   405  0000A1                     	ds	8
   406  0000A9                     _brake_value:
   407                           	opt stack 0
   408  0000A9                     	ds	1
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           
   416                           	psect	dataBANK0
   417  0000DE                     __pdataBANK0:
   418                           	opt stack 0
   419  0000DE                     _delay_quartz_frequency_value:
   420                           	opt stack 0
   421  0000DE                     	ds	1
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           
   429                           	psect	cstackBANK0
   430  0000AA                     __pcstackBANK0:
   431                           	opt stack 0
   432  0000AA                     i2___awdiv@counter:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x0
   436  0000AA                     	ds	1
   437  0000AB                     i2___awdiv@sign:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x1
   441  0000AB                     	ds	1
   442  0000AC                     i2___awdiv@quotient:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446  0000AC                     	ds	2
   447  0000AE                     ??_ISR_Alta:
   448                           
   449                           ; 0 bytes @ 0x4
   450  0000AE                     	ds	22
   451  0000C4                     ?___wmul:
   452                           	opt stack 0
   453  0000C4                     ?___awdiv:
   454                           	opt stack 0
   455  0000C4                     ?___lmul:
   456                           	opt stack 0
   457  0000C4                     CANOperationMode@mode:
   458                           	opt stack 0
   459  0000C4                     _CANisTxReady$3282:
   460                           	opt stack 0
   461  0000C4                     ___wmul@multiplier:
   462                           	opt stack 0
   463  0000C4                     ___awdiv@dividend:
   464                           	opt stack 0
   465  0000C4                     CANsendMessage@identifier:
   466                           	opt stack 0
   467  0000C4                     CANSetMask@mask:
   468                           	opt stack 0
   469  0000C4                     CANSetFilter@filter:
   470                           	opt stack 0
   471  0000C4                     ___lmul@multiplier:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0x1A
   475  0000C4                     	ds	2
   476  0000C6                     ___wmul@multiplicand:
   477                           	opt stack 0
   478  0000C6                     ___awdiv@divisor:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x1C
   482  0000C6                     	ds	2
   483  0000C8                     CANSetMask@type:
   484                           	opt stack 0
   485  0000C8                     CANSetFilter@type:
   486                           	opt stack 0
   487  0000C8                     ___awdiv@counter:
   488                           	opt stack 0
   489  0000C8                     CANsendMessage@data:
   490                           	opt stack 0
   491  0000C8                     ___wmul@product:
   492                           	opt stack 0
   493  0000C8                     ___lmul@multiplicand:
   494                           	opt stack 0
   495                           
   496                           ; 4 bytes @ 0x1E
   497  0000C8                     	ds	1
   498  0000C9                     ??_CANSetMask:
   499  0000C9                     ??_CANSetFilter:
   500  0000C9                     ___awdiv@sign:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x1F
   504  0000C9                     	ds	1
   505  0000CA                     CANsendMessage@dataLength:
   506                           	opt stack 0
   507  0000CA                     delay_ms@value_ms:
   508                           	opt stack 0
   509  0000CA                     ___awdiv@quotient:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x20
   513  0000CA                     	ds	1
   514  0000CB                     CANsendMessage@flags:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x21
   518  0000CB                     	ds	1
   519  0000CC                     ??_CANsendMessage:
   520  0000CC                     ___lmul@product:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x22
   524  0000CC                     	ds	1
   525  0000CD                     CANSetMask@numBuffer:
   526                           	opt stack 0
   527  0000CD                     CANSetFilter@numBuffer:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x23
   531  0000CD                     	ds	1
   532  0000CE                     CANSetMask@tamp:
   533                           	opt stack 0
   534  0000CE                     CANSetFilter@tamp:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0x24
   538  0000CE                     	ds	2
   539  0000D0                     ?___aldiv:
   540                           	opt stack 0
   541  0000D0                     CANsendMessage@tamp:
   542                           	opt stack 0
   543  0000D0                     ___aldiv@dividend:
   544                           	opt stack 0
   545                           
   546                           ; 4 bytes @ 0x26
   547  0000D0                     	ds	2
   548  0000D2                     CANInitialize@phaseSeg1:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x28
   552  0000D2                     	ds	1
   553  0000D3                     CANInitialize@phaseSeg2:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x29
   557  0000D3                     	ds	1
   558  0000D4                     ??_remote_frame_handler:
   559  0000D4                     CANInitialize@SJW:
   560                           	opt stack 0
   561  0000D4                     ___aldiv@divisor:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0x2A
   565  0000D4                     	ds	1
   566  0000D5                     CANInitialize@BRP:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x2B
   570  0000D5                     	ds	1
   571  0000D6                     CANInitialize@flags:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x2C
   575  0000D6                     	ds	1
   576  0000D7                     ??_CANInitialize:
   577                           
   578                           ; 0 bytes @ 0x2D
   579  0000D7                     	ds	1
   580  0000D8                     ___aldiv@counter:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x2E
   584  0000D8                     	ds	1
   585  0000D9                     ___aldiv@sign:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x2F
   589  0000D9                     	ds	1
   590  0000DA                     ___aldiv@quotient:
   591                           	opt stack 0
   592                           
   593                           ; 4 bytes @ 0x30
   594  0000DA                     	ds	1
   595  0000DB                     CANInitialize@propSeg:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x31
   599  0000DB                     	ds	1
   600  0000DC                     CANInitialize@FilterConfig1:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x32
   604  0000DC                     	ds	1
   605  0000DD                     CANInitialize@FilterConfig2:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x33
   609  0000DD                     	ds	1
   610  0000DE                     tblptru	equ	0xFF8
   611                           tblptrh	equ	0xFF7
   612                           tblptrl	equ	0xFF6
   613                           tablat	equ	0xFF5
   614                           postinc0	equ	0xFEE
   615                           wreg	equ	0xFE8
   616                           
   617                           ; 0 bytes @ 0x34
   618                           
   619                           	psect	cstackCOMRAM
   620  000001                     __pcstackCOMRAM:
   621                           	opt stack 0
   622  000001                     _CANisRxReady$3284:
   623                           	opt stack 0
   624  000001                     CANreceiveMessage@msg:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x0
   628  000001                     	ds	2
   629  000003                     ??_CANreceiveMessage:
   630                           
   631                           ; 0 bytes @ 0x2
   632  000003                     	ds	8
   633  00000B                     CANreceiveMessage@error:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0xA
   637  00000B                     	ds	1
   638  00000C                     CANreceiveMessage@tamp:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0xB
   642  00000C                     	ds	1
   643  00000D                     ??_ISR_Bassa:
   644                           
   645                           ; 0 bytes @ 0xC
   646  00000D                     	ds	17
   647  00001E                     ?___lwdiv:
   648                           	opt stack 0
   649  00001E                     ?i2___wmul:
   650                           	opt stack 0
   651  00001E                     WriteTimer0@timer0:
   652                           	opt stack 0
   653  00001E                     ___lwdiv@dividend:
   654                           	opt stack 0
   655  00001E                     i2___wmul@multiplier:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x1D
   659  00001E                     	ds	2
   660  000020                     WriteTimer0@timer:
   661                           	opt stack 0
   662  000020                     ___lwdiv@divisor:
   663                           	opt stack 0
   664  000020                     i2___wmul@multiplicand:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x1F
   668  000020                     	ds	2
   669  000022                     ___lwdiv@quotient:
   670                           	opt stack 0
   671  000022                     i2___wmul@product:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x21
   675  000022                     	ds	2
   676  000024                     ?i2___awdiv:
   677                           	opt stack 0
   678  000024                     ___lwdiv@counter:
   679                           	opt stack 0
   680  000024                     i2___awdiv@dividend:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x23
   684  000024                     	ds	2
   685  000026                     i2___awdiv@divisor:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x25
   689  000026                     	ds	2
   690  000028                     tblptru	equ	0xFF8
   691                           tblptrh	equ	0xFF7
   692                           tblptrl	equ	0xFF6
   693                           tablat	equ	0xFF5
   694                           postinc0	equ	0xFEE
   695                           wreg	equ	0xFE8
   696                           
   697                           ; 0 bytes @ 0x27
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   700 ;;
   701 ;; *************** function _main *****************
   702 ;; Defined at:
   703 ;;		line 225 in file "ABS_Code.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  2  696[None  ] int 
   710 ;; Registers used:
   711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   717 ;;      Params:         0       0       0       0
   718 ;;      Locals:         0       0       0       0
   719 ;;      Temps:          0       0       0       0
   720 ;;      Totals:         0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels required when called:    7
   723 ;; This function calls:
   724 ;;		_ADC_Read
   725 ;;		_CANisRXwarningON
   726 ;;		_CANisTXwarningON
   727 ;;		___aldiv
   728 ;;		___awdiv
   729 ;;		___lmul
   730 ;;		_board_initialization
   731 ;;		_delay_ms
   732 ;;		_remote_frame_handler
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  001EC8                     __ptext0:
   740                           	opt stack 0
   741  001EC8                     _main:
   742                           	opt stack 24
   743                           
   744                           ;ABS_Code.c: 226: board_initialization();
   745                           
   746                           ;incstack = 0
   747  001EC8  EC9A  F012         	call	_board_initialization	;wreg free
   748                           
   749                           ;ABS_Code.c: 227: step = (11 * (3.1415)) / 16;
   750  001ECC  0E02               	movlw	2
   751  001ECE  0100               	movlb	0	; () banked
   752  001ED0  6F81               	movwf	_step& (0+255),b
   753                           
   754                           ; BSR set to: 0
   755                           ;ABS_Code.c: 230: PORTAbits.RA1 = 1;
   756  001ED2  8280               	bsf	3968,1,c	;volatile
   757                           
   758                           ; BSR set to: 0
   759                           ;ABS_Code.c: 231: PORTCbits.RC1 = 1;
   760  001ED4  8282               	bsf	3970,1,c	;volatile
   761                           
   762                           ; BSR set to: 0
   763                           ;ABS_Code.c: 232: delay_ms(500);
   764  001ED6  0E01               	movlw	1
   765  001ED8  0100               	movlb	0	; () banked
   766  001EDA  6FCB               	movwf	(delay_ms@value_ms+1)& (0+255),b
   767  001EDC  0EF4               	movlw	244
   768  001EDE  6FCA               	movwf	delay_ms@value_ms& (0+255),b
   769  001EE0  EC4A  F014         	call	_delay_ms	;wreg free
   770                           
   771                           ;ABS_Code.c: 233: PORTAbits.RA1 = 0;
   772  001EE4  9280               	bcf	3968,1,c	;volatile
   773                           
   774                           ;ABS_Code.c: 234: PORTCbits.RC1 = 0;
   775  001EE6  9282               	bcf	3970,1,c	;volatile
   776                           
   777                           ;ABS_Code.c: 235: delay_ms(100);
   778  001EE8  0E00               	movlw	0
   779  001EEA  0100               	movlb	0	; () banked
   780  001EEC  6FCB               	movwf	(delay_ms@value_ms+1)& (0+255),b
   781  001EEE  0E64               	movlw	100
   782  001EF0  6FCA               	movwf	delay_ms@value_ms& (0+255),b
   783  001EF2  EC4A  F014         	call	_delay_ms	;wreg free
   784  001EF6                     l4084:
   785                           
   786                           ;ABS_Code.c: 238: ADC_Read();
   787  001EF6  EC0D  F014         	call	_ADC_Read	;wreg free
   788                           
   789                           ;ABS_Code.c: 239: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   790  001EFA  ECC6  F014         	call	_CANisTXwarningON	;wreg free
   791  001EFE  06E8               	decf	wreg,f,c
   792  001F00  B4D8               	btfsc	status,2,c
   793  001F02  D005               	goto	l700
   794  001F04  ECCC  F014         	call	_CANisRXwarningON	;wreg free
   795  001F08  06E8               	decf	wreg,f,c
   796  001F0A  A4D8               	btfss	status,2,c
   797  001F0C  D004               	goto	l698
   798  001F0E                     l700:
   799                           
   800                           ;ABS_Code.c: 240: PORTAbits.RA1 = 1;
   801  001F0E  8280               	bsf	3968,1,c	;volatile
   802                           
   803                           ;ABS_Code.c: 241: COMSTATbits.TXWARN = 0;
   804  001F10  9474               	bcf	3956,2,c	;volatile
   805                           
   806                           ;ABS_Code.c: 242: COMSTATbits.RXWARN = 0;
   807  001F12  9274               	bcf	3956,1,c	;volatile
   808                           
   809                           ;ABS_Code.c: 243: } else {
   810  001F14  D001               	goto	l701
   811  001F16                     l698:
   812                           
   813                           ;ABS_Code.c: 244: PORTAbits.RA1 = 0;
   814  001F16  9280               	bcf	3968,1,c	;volatile
   815  001F18                     l701:
   816                           
   817                           ;ABS_Code.c: 245: }
   818                           ;ABS_Code.c: 247: if ((remote_frame == 1) || (Tx_retry == 1)) {
   819  001F18  BC3D               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   820  001F1A  D002               	goto	l704
   821  001F1C  A83D               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   822  001F1E  D003               	goto	l4094
   823  001F20                     l704:
   824                           
   825                           ;ABS_Code.c: 248: remote_frame = 0;
   826  001F20  9C3D               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   827                           
   828                           ;ABS_Code.c: 249: remote_frame_handler();
   829  001F22  EC3E  F011         	call	_remote_frame_handler	;wreg free
   830  001F26                     l4094:
   831                           
   832                           ;ABS_Code.c: 250: }
   833                           ;ABS_Code.c: 252: if (Analogic_Mode == 0b00000000) {
   834  001F26  0100               	movlb	0	; () banked
   835  001F28  517C               	movf	_Analogic_Mode& (0+255),w,b	;volatile
   836  001F2A  A4D8               	btfss	status,2,c
   837  001F2C  D01E               	goto	l705
   838                           
   839                           ; BSR set to: 0
   840                           ;ABS_Code.c: 253: if (brake_signal_CAN == 0b00000000) {
   841  001F2E  0100               	movlb	0	; () banked
   842  001F30  517D               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
   843  001F32  A4D8               	btfss	status,2,c
   844  001F34  D003               	goto	l4100
   845                           
   846                           ; BSR set to: 0
   847                           ;ABS_Code.c: 254: brake_value_inc = 0;
   848  001F36  0E00               	movlw	0
   849  001F38  0100               	movlb	0	; () banked
   850  001F3A  6F7E               	movwf	_brake_value_inc& (0+255),b
   851  001F3C                     l4100:
   852                           
   853                           ; BSR set to: 0
   854                           ;ABS_Code.c: 255: }
   855                           ;ABS_Code.c: 256: if (brake_signal_CAN == 0b00000001) {
   856  001F3C  0100               	movlb	0	; () banked
   857  001F3E  057D               	decf	_brake_signal_CAN& (0+255),w,b	;volatile
   858  001F40  A4D8               	btfss	status,2,c
   859  001F42  D003               	goto	l4104
   860                           
   861                           ; BSR set to: 0
   862                           ;ABS_Code.c: 257: brake_value_inc = 150;
   863  001F44  0E96               	movlw	150
   864  001F46  0100               	movlb	0	; () banked
   865  001F48  6F7E               	movwf	_brake_value_inc& (0+255),b
   866  001F4A                     l4104:
   867                           
   868                           ; BSR set to: 0
   869                           ;ABS_Code.c: 258: }
   870                           ;ABS_Code.c: 259: if (brake_signal_CAN == 0b00000010) {
   871  001F4A  0E02               	movlw	2
   872  001F4C  0100               	movlb	0	; () banked
   873  001F4E  197D               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
   874  001F50  A4D8               	btfss	status,2,c
   875  001F52  D003               	goto	l4108
   876                           
   877                           ; BSR set to: 0
   878                           ;ABS_Code.c: 260: brake_value_inc = 200;
   879  001F54  0EC8               	movlw	200
   880  001F56  0100               	movlb	0	; () banked
   881  001F58  6F7E               	movwf	_brake_value_inc& (0+255),b
   882  001F5A                     l4108:
   883                           
   884                           ; BSR set to: 0
   885                           ;ABS_Code.c: 261: }
   886                           ;ABS_Code.c: 262: if (brake_signal_CAN == 0b00000011) {
   887  001F5A  0E03               	movlw	3
   888  001F5C  0100               	movlb	0	; () banked
   889  001F5E  197D               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
   890  001F60  A4D8               	btfss	status,2,c
   891  001F62  D005               	goto	l4112
   892                           
   893                           ; BSR set to: 0
   894                           ;ABS_Code.c: 263: brake_value_inc = 255;
   895  001F64  0100               	movlb	0	; () banked
   896  001F66  697E               	setf	_brake_value_inc& (0+255),b
   897                           
   898                           ; BSR set to: 0
   899                           ;ABS_Code.c: 264: }
   900                           ;ABS_Code.c: 265: } else {
   901  001F68  D002               	goto	l4112
   902  001F6A                     l705:
   903                           
   904                           ; BSR set to: 0
   905                           ;ABS_Code.c: 266: brake_value_inc = brake_signal_CAN;
   906  001F6A  C07D  F07E         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
   907  001F6E                     l4112:
   908                           
   909                           ; BSR set to: 0
   910                           ;ABS_Code.c: 267: }
   911                           ;ABS_Code.c: 269: brake_value = (brake_value_inc / 17) + home_position;
   912  001F6E  C07E  F0C4         	movff	_brake_value_inc,___awdiv@dividend
   913  001F72  0100               	movlb	0	; () banked
   914  001F74  6BC5               	clrf	(___awdiv@dividend+1)& (0+255),b
   915  001F76  0E00               	movlw	0
   916  001F78  0100               	movlb	0	; () banked
   917  001F7A  6FC7               	movwf	(___awdiv@divisor+1)& (0+255),b
   918  001F7C  0E11               	movlw	17
   919  001F7E  6FC6               	movwf	___awdiv@divisor& (0+255),b
   920  001F80  ECFC  F012         	call	___awdiv	;wreg free
   921  001F84  0100               	movlb	0	; () banked
   922  001F86  51C4               	movf	?___awdiv& (0+255),w,b
   923  001F88  0100               	movlb	0	; () banked
   924  001F8A  257F               	addwf	_home_position& (0+255),w,b
   925  001F8C  0100               	movlb	0	; () banked
   926  001F8E  6FA9               	movwf	_brake_value& (0+255),b
   927                           
   928                           ; BSR set to: 0
   929                           ;ABS_Code.c: 270: brake_value_degree = (180 * brake_value) / 255;
   930  001F90  0100               	movlb	0	; () banked
   931  001F92  51A9               	movf	_brake_value& (0+255),w,b
   932  001F94  0DB4               	mullw	180
   933  001F96  CFF3 F0C4          	movff	prodl,___awdiv@dividend
   934  001F9A  CFF4 F0C5          	movff	prodh,___awdiv@dividend+1
   935  001F9E  0E00               	movlw	0
   936  001FA0  0100               	movlb	0	; () banked
   937  001FA2  6FC7               	movwf	(___awdiv@divisor+1)& (0+255),b
   938  001FA4  69C6               	setf	___awdiv@divisor& (0+255),b
   939  001FA6  ECFC  F012         	call	___awdiv	;wreg free
   940  001FAA  0100               	movlb	0	; () banked
   941  001FAC  51C4               	movf	?___awdiv& (0+255),w,b
   942  001FAE  6E3C               	movwf	_brake_value_degree,c
   943                           
   944                           ; BSR set to: 0
   945                           ;ABS_Code.c: 272: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
   946  001FB0  B03D               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
   947  001FB2  D002               	goto	l713
   948                           
   949                           ; BSR set to: 0
   950  001FB4  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
   951  001FB6  D03D               	goto	l4132
   952  001FB8                     l713:
   953                           
   954                           ; BSR set to: 0
   955                           ;ABS_Code.c: 273: if (TMR1_overflow == 1) {
   956  001FB8  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
   957  001FBA  D00B               	goto	l4124
   958                           
   959                           ; BSR set to: 0
   960                           ;ABS_Code.c: 274: wheel_speed_1 = 0;
   961  001FBC  0E00               	movlw	0
   962  001FBE  0100               	movlb	0	; () banked
   963  001FC0  6F6C               	movwf	_wheel_speed_1& (0+255),b	;volatile
   964  001FC2  0E00               	movlw	0
   965  001FC4  6F6D               	movwf	(_wheel_speed_1+1)& (0+255),b	;volatile
   966  001FC6  0E00               	movlw	0
   967  001FC8  6F6E               	movwf	(_wheel_speed_1+2)& (0+255),b	;volatile
   968  001FCA  0E00               	movlw	0
   969  001FCC  6F6F               	movwf	(_wheel_speed_1+3)& (0+255),b	;volatile
   970                           
   971                           ; BSR set to: 0
   972                           ;ABS_Code.c: 275: TMR1_overflow = 0;
   973  001FCE  943D               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
   974                           
   975                           ;ABS_Code.c: 276: } else {
   976  001FD0  D02B               	goto	l4126
   977  001FD2                     l4124:
   978                           
   979                           ; BSR set to: 0
   980                           ;ABS_Code.c: 277: wheel_speed_1 = (step * 100000) / gap_time_1;
   981  001FD2  0100               	movlb	0	; () banked
   982  001FD4  5181               	movf	_step& (0+255),w,b
   983  001FD6  0100               	movlb	0	; () banked
   984  001FD8  6FC4               	movwf	___lmul@multiplier& (0+255),b
   985  001FDA  6BC5               	clrf	(___lmul@multiplier+1)& (0+255),b
   986  001FDC  6BC6               	clrf	(___lmul@multiplier+2)& (0+255),b
   987  001FDE  6BC7               	clrf	(___lmul@multiplier+3)& (0+255),b
   988  001FE0  0EA0               	movlw	160
   989  001FE2  0100               	movlb	0	; () banked
   990  001FE4  6FC8               	movwf	___lmul@multiplicand& (0+255),b
   991  001FE6  0E86               	movlw	134
   992  001FE8  6FC9               	movwf	(___lmul@multiplicand+1)& (0+255),b
   993  001FEA  0E01               	movlw	1
   994  001FEC  6FCA               	movwf	(___lmul@multiplicand+2)& (0+255),b
   995  001FEE  0E00               	movlw	0
   996  001FF0  6FCB               	movwf	(___lmul@multiplicand+3)& (0+255),b
   997  001FF2  ECA9  F013         	call	___lmul	;wreg free
   998  001FF6  C0C4  F0D0         	movff	?___lmul,___aldiv@dividend
   999  001FFA  C0C5  F0D1         	movff	?___lmul+1,___aldiv@dividend+1
  1000  001FFE  C0C6  F0D2         	movff	?___lmul+2,___aldiv@dividend+2
  1001  002002  C0C7  F0D3         	movff	?___lmul+3,___aldiv@dividend+3
  1002  002006  C038  F0D4         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1003  00200A  C039  F0D5         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1004  00200E  0100               	movlb	0	; () banked
  1005  002010  6BD6               	clrf	(___aldiv@divisor+2)& (0+255),b
  1006  002012  6BD7               	clrf	(___aldiv@divisor+3)& (0+255),b
  1007  002014  EC0D  F012         	call	___aldiv	;wreg free
  1008  002018  C0D0  F06C         	movff	?___aldiv,_wheel_speed_1	;volatile
  1009  00201C  C0D1  F06D         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1010  002020  C0D2  F06E         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1011  002024  C0D3  F06F         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1012  002028                     l4126:
  1013                           
  1014                           ;ABS_Code.c: 278: }
  1015                           ;ABS_Code.c: 279: speed_array[3] = wheel_speed_1 >> 8;
  1016  002028  C06D  F09C         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1017                           
  1018                           ;ABS_Code.c: 280: speed_array[2] = wheel_speed_1;
  1019  00202C  C06C  F09B         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1020                           
  1021                           ;ABS_Code.c: 281: ENC1_measure = 0;
  1022  002030  903D               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1023  002032                     l4132:
  1024                           
  1025                           ;ABS_Code.c: 282: }
  1026                           ;ABS_Code.c: 284: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1027  002032  B23D               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1028  002034  D002               	goto	l718
  1029  002036  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1030  002038  D75E               	goto	l4084
  1031  00203A                     l718:
  1032                           
  1033                           ;ABS_Code.c: 285: if (TMR3_overflow == 1) {
  1034  00203A  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1035  00203C  D00B               	goto	l4140
  1036                           
  1037                           ;ABS_Code.c: 286: wheel_speed_2 = 0;
  1038  00203E  0E00               	movlw	0
  1039  002040  0100               	movlb	0	; () banked
  1040  002042  6F70               	movwf	_wheel_speed_2& (0+255),b	;volatile
  1041  002044  0E00               	movlw	0
  1042  002046  6F71               	movwf	(_wheel_speed_2+1)& (0+255),b	;volatile
  1043  002048  0E00               	movlw	0
  1044  00204A  6F72               	movwf	(_wheel_speed_2+2)& (0+255),b	;volatile
  1045  00204C  0E00               	movlw	0
  1046  00204E  6F73               	movwf	(_wheel_speed_2+3)& (0+255),b	;volatile
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;ABS_Code.c: 287: TMR3_overflow = 0;
  1050  002050  963D               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1051                           
  1052                           ;ABS_Code.c: 288: } else {
  1053  002052  D02B               	goto	l4142
  1054  002054                     l4140:
  1055                           
  1056                           ;ABS_Code.c: 289: wheel_speed_2 = (step * 100000) / gap_time_2;
  1057  002054  0100               	movlb	0	; () banked
  1058  002056  5181               	movf	_step& (0+255),w,b
  1059  002058  0100               	movlb	0	; () banked
  1060  00205A  6FC4               	movwf	___lmul@multiplier& (0+255),b
  1061  00205C  6BC5               	clrf	(___lmul@multiplier+1)& (0+255),b
  1062  00205E  6BC6               	clrf	(___lmul@multiplier+2)& (0+255),b
  1063  002060  6BC7               	clrf	(___lmul@multiplier+3)& (0+255),b
  1064  002062  0EA0               	movlw	160
  1065  002064  0100               	movlb	0	; () banked
  1066  002066  6FC8               	movwf	___lmul@multiplicand& (0+255),b
  1067  002068  0E86               	movlw	134
  1068  00206A  6FC9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1069  00206C  0E01               	movlw	1
  1070  00206E  6FCA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1071  002070  0E00               	movlw	0
  1072  002072  6FCB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1073  002074  ECA9  F013         	call	___lmul	;wreg free
  1074  002078  C0C4  F0D0         	movff	?___lmul,___aldiv@dividend
  1075  00207C  C0C5  F0D1         	movff	?___lmul+1,___aldiv@dividend+1
  1076  002080  C0C6  F0D2         	movff	?___lmul+2,___aldiv@dividend+2
  1077  002084  C0C7  F0D3         	movff	?___lmul+3,___aldiv@dividend+3
  1078  002088  C03A  F0D4         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1079  00208C  C03B  F0D5         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1080  002090  0100               	movlb	0	; () banked
  1081  002092  6BD6               	clrf	(___aldiv@divisor+2)& (0+255),b
  1082  002094  6BD7               	clrf	(___aldiv@divisor+3)& (0+255),b
  1083  002096  EC0D  F012         	call	___aldiv	;wreg free
  1084  00209A  C0D0  F070         	movff	?___aldiv,_wheel_speed_2	;volatile
  1085  00209E  C0D1  F071         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1086  0020A2  C0D2  F072         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1087  0020A6  C0D3  F073         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1088  0020AA                     l4142:
  1089                           
  1090                           ;ABS_Code.c: 290: }
  1091                           ;ABS_Code.c: 291: speed_array[1] = wheel_speed_2 >> 8;
  1092  0020AA  C071  F09A         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1093                           
  1094                           ;ABS_Code.c: 292: speed_array[0] = wheel_speed_2;
  1095  0020AE  C070  F099         	movff	_wheel_speed_2,_speed_array	;volatile
  1096                           
  1097                           ;ABS_Code.c: 293: ENC2_measure = 0;
  1098  0020B2  923D               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1099  0020B4  D720               	goto	l4084
  1100  0020B6                     __end_of_main:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           prodh	equ	0xFF4
  1107                           prodl	equ	0xFF3
  1108                           postinc0	equ	0xFEE
  1109                           wreg	equ	0xFE8
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function _remote_frame_handler *****************
  1113 ;; Defined at:
  1114 ;;		line 303 in file "ABS_Code.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;		None               void
  1121 ;; Registers used:
  1122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1128 ;;      Params:         0       0       0       0
  1129 ;;      Locals:         0       0       0       0
  1130 ;;      Temps:          0       1       0       0
  1131 ;;      Totals:         0       1       0       0
  1132 ;;Total ram usage:        1 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    5
  1135 ;; This function calls:
  1136 ;;		_CANisTxReady
  1137 ;;		_CANsendMessage
  1138 ;;		___wmul
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text1
  1145  00227C                     __ptext1:
  1146                           	opt stack 0
  1147  00227C                     _remote_frame_handler:
  1148                           	opt stack 25
  1149                           
  1150                           ;ABS_Code.c: 304: if (CANisTxReady()) {
  1151                           
  1152                           ;incstack = 0
  1153  00227C  EC95  F014         	call	_CANisTxReady	;wreg free
  1154  002280  0900               	iorlw	0
  1155  002282  B4D8               	btfsc	status,2,c
  1156  002284  D0C8               	goto	l726
  1157                           
  1158                           ;ABS_Code.c: 305: if (remote_frame_id == 0b00000000000000000000000000010) {
  1159  002286  0E02               	movlw	2
  1160  002288  0100               	movlb	0	; () banked
  1161  00228A  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1162  00228C  0100               	movlb	0	; () banked
  1163  00228E  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1164  002290  0100               	movlb	0	; () banked
  1165  002292  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1166  002294  0100               	movlb	0	; () banked
  1167  002296  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1168  002298  A4D8               	btfss	status,2,c
  1169  00229A  D02A               	goto	l3818
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;ABS_Code.c: 306: status_array[0] = 0x01;
  1173  00229C  0E01               	movlw	1
  1174  00229E  0100               	movlb	0	; () banked
  1175  0022A0  6FA1               	movwf	_status_array& (0+255),b
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;ABS_Code.c: 307: CANsendMessage(0b00000000000000000000000000010, status_array, 8, CAN_C
      +                          ONFIG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1179  0022A2  0E02               	movlw	2
  1180  0022A4  0100               	movlb	0	; () banked
  1181  0022A6  6FC4               	movwf	CANsendMessage@identifier& (0+255),b
  1182  0022A8  0E00               	movlw	0
  1183  0022AA  6FC5               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1184  0022AC  0E00               	movlw	0
  1185  0022AE  6FC6               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1186  0022B0  0E00               	movlw	0
  1187  0022B2  6FC7               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1188  0022B4  0EA1               	movlw	low _status_array
  1189  0022B6  0100               	movlb	0	; () banked
  1190  0022B8  6FC8               	movwf	CANsendMessage@data& (0+255),b
  1191  0022BA  0E00               	movlw	high _status_array
  1192  0022BC  0100               	movlb	0	; () banked
  1193  0022BE  6FC9               	movwf	(CANsendMessage@data+1)& (0+255),b
  1194  0022C0  0E08               	movlw	8
  1195  0022C2  0100               	movlb	0	; () banked
  1196  0022C4  6FCA               	movwf	CANsendMessage@dataLength& (0+255),b
  1197  0022C6  0EBC               	movlw	188
  1198  0022C8  0100               	movlb	0	; () banked
  1199  0022CA  6FCB               	movwf	CANsendMessage@flags& (0+255),b
  1200  0022CC  EC0D  F006         	call	_CANsendMessage	;wreg free
  1201                           
  1202                           ;ABS_Code.c: 308: PORTCbits.RC1 = ~PORTCbits.RC1;
  1203  0022D0  A282               	btfss	3970,1,c	;volatile
  1204  0022D2  D002               	goto	u4170
  1205  0022D4  0E01               	movlw	1
  1206  0022D6  D001               	goto	u4176
  1207  0022D8                     u4170:
  1208  0022D8  0E00               	movlw	0
  1209  0022DA                     u4176:
  1210  0022DA  0AFF               	xorlw	255
  1211  0022DC  0100               	movlb	0	; () banked
  1212  0022DE  6FD4               	movwf	??_remote_frame_handler& (0+255),b
  1213  0022E0  0100               	movlb	0	; () banked
  1214  0022E2  47D4               	rlncf	??_remote_frame_handler& (0+255),f,b
  1215  0022E4  5082               	movf	3970,w,c	;volatile
  1216  0022E6  0100               	movlb	0	; () banked
  1217  0022E8  19D4               	xorwf	??_remote_frame_handler& (0+255),w,b
  1218  0022EA  0BFD               	andlw	-3
  1219  0022EC  19D4               	xorwf	??_remote_frame_handler& (0+255),w,b
  1220  0022EE  6E82               	movwf	3970,c	;volatile
  1221  0022F0                     l3818:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;ABS_Code.c: 309: }
  1225                           ;ABS_Code.c: 310: if (remote_frame_id == 0b00000000000000000000000000110) {
  1226  0022F0  0E06               	movlw	6
  1227  0022F2  0100               	movlb	0	; () banked
  1228  0022F4  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1229  0022F6  0100               	movlb	0	; () banked
  1230  0022F8  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1231  0022FA  0100               	movlb	0	; () banked
  1232  0022FC  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1233  0022FE  0100               	movlb	0	; () banked
  1234  002300  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1235  002302  A4D8               	btfss	status,2,c
  1236  002304  D016               	goto	l3822
  1237                           
  1238                           ; BSR set to: 0
  1239                           ;ABS_Code.c: 312: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1240  002306  C068  F0C4         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1241  00230A  C069  F0C5         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1242  00230E  C06A  F0C6         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1243  002312  C06B  F0C7         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1244  002316  0E99               	movlw	low _speed_array
  1245  002318  0100               	movlb	0	; () banked
  1246  00231A  6FC8               	movwf	CANsendMessage@data& (0+255),b
  1247  00231C  0E00               	movlw	high _speed_array
  1248  00231E  0100               	movlb	0	; () banked
  1249  002320  6FC9               	movwf	(CANsendMessage@data+1)& (0+255),b
  1250  002322  0E08               	movlw	8
  1251  002324  0100               	movlb	0	; () banked
  1252  002326  6FCA               	movwf	CANsendMessage@dataLength& (0+255),b
  1253  002328  0EBC               	movlw	188
  1254  00232A  0100               	movlb	0	; () banked
  1255  00232C  6FCB               	movwf	CANsendMessage@flags& (0+255),b
  1256  00232E  EC0D  F006         	call	_CANsendMessage	;wreg free
  1257  002332                     l3822:
  1258                           
  1259                           ;ABS_Code.c: 313: }
  1260                           ;ABS_Code.c: 314: if (remote_frame_id == 0b00000000000000000000000001000) {
  1261  002332  0E08               	movlw	8
  1262  002334  0100               	movlb	0	; () banked
  1263  002336  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1264  002338  0100               	movlb	0	; () banked
  1265  00233A  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1266  00233C  0100               	movlb	0	; () banked
  1267  00233E  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1268  002340  0100               	movlb	0	; () banked
  1269  002342  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1270  002344  A4D8               	btfss	status,2,c
  1271  002346  D013               	goto	l3828
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;ABS_Code.c: 315: int_counter_1 = 0;
  1275  002348  0E00               	movlw	0
  1276  00234A  0100               	movlb	0	; () banked
  1277  00234C  6F60               	movwf	_int_counter_1& (0+255),b	;volatile
  1278  00234E  0E00               	movlw	0
  1279  002350  6F61               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1280  002352  0E00               	movlw	0
  1281  002354  6F62               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1282  002356  0E00               	movlw	0
  1283  002358  6F63               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1284                           
  1285                           ;ABS_Code.c: 316: int_counter_2 = 0;
  1286  00235A  0E00               	movlw	0
  1287  00235C  0100               	movlb	0	; () banked
  1288  00235E  6F64               	movwf	_int_counter_2& (0+255),b	;volatile
  1289  002360  0E00               	movlw	0
  1290  002362  6F65               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1291  002364  0E00               	movlw	0
  1292  002366  6F66               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1293  002368  0E00               	movlw	0
  1294  00236A  6F67               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;ABS_Code.c: 317: count_flag = 1;
  1298  00236C  8A3D               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1299  00236E                     l3828:
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;ABS_Code.c: 318: }
  1303                           ;ABS_Code.c: 319: if (remote_frame_id == 0b00000000000000000000000000111) {
  1304  00236E  0E07               	movlw	7
  1305  002370  0100               	movlb	0	; () banked
  1306  002372  1968               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1307  002374  0100               	movlb	0	; () banked
  1308  002376  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1309  002378  0100               	movlb	0	; () banked
  1310  00237A  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1311  00237C  0100               	movlb	0	; () banked
  1312  00237E  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1313  002380  A4D8               	btfss	status,2,c
  1314  002382  D03F               	goto	l3844
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;ABS_Code.c: 320: distance_1 = step * (int_counter_1);
  1318  002384  C081  F0C4         	movff	_step,___wmul@multiplier
  1319  002388  0100               	movlb	0	; () banked
  1320  00238A  6BC5               	clrf	(___wmul@multiplier+1)& (0+255),b
  1321  00238C  C060  F0C6         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1322  002390  C061  F0C7         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1323  002394  EC67  F014         	call	___wmul	;wreg free
  1324  002398  C0C4  F078         	movff	?___wmul,_distance_1	;volatile
  1325  00239C  C0C5  F079         	movff	?___wmul+1,_distance_1+1	;volatile
  1326                           
  1327                           ;ABS_Code.c: 321: distance_2 = step * (int_counter_2);
  1328  0023A0  C081  F0C4         	movff	_step,___wmul@multiplier
  1329  0023A4  0100               	movlb	0	; () banked
  1330  0023A6  6BC5               	clrf	(___wmul@multiplier+1)& (0+255),b
  1331  0023A8  C064  F0C6         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1332  0023AC  C065  F0C7         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1333  0023B0  EC67  F014         	call	___wmul	;wreg free
  1334  0023B4  C0C4  F07A         	movff	?___wmul,_distance_2	;volatile
  1335  0023B8  C0C5  F07B         	movff	?___wmul+1,_distance_2+1	;volatile
  1336                           
  1337                           ;ABS_Code.c: 322: count_flag = 0;
  1338  0023BC  9A3D               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1339                           
  1340                           ;ABS_Code.c: 323: distance_array[0] = distance_1;
  1341  0023BE  C078  F091         	movff	_distance_1,_distance_array	;volatile
  1342                           
  1343                           ;ABS_Code.c: 324: distance_array[1] = distance_1 >> 8;
  1344  0023C2  0100               	movlb	0	; () banked
  1345  0023C4  5179               	movf	(_distance_1+1)& (0+255),w,b	;volatile
  1346  0023C6  0100               	movlb	0	; () banked
  1347  0023C8  6F92               	movwf	(_distance_array+1)& (0+255),b
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;ABS_Code.c: 325: distance_array[2] = distance_2;
  1351  0023CA  C07A  F093         	movff	_distance_2,_distance_array+2	;volatile
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;ABS_Code.c: 326: distance_array[3] = distance_2 >> 8;
  1355  0023CE  0100               	movlb	0	; () banked
  1356  0023D0  517B               	movf	(_distance_2+1)& (0+255),w,b	;volatile
  1357  0023D2  0100               	movlb	0	; () banked
  1358  0023D4  6F94               	movwf	(_distance_array+3)& (0+255),b
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;ABS_Code.c: 327: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1362  0023D6  C068  F0C4         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1363  0023DA  C069  F0C5         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1364  0023DE  C06A  F0C6         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1365  0023E2  C06B  F0C7         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1366  0023E6  0E91               	movlw	low _distance_array
  1367  0023E8  0100               	movlb	0	; () banked
  1368  0023EA  6FC8               	movwf	CANsendMessage@data& (0+255),b
  1369  0023EC  0E00               	movlw	high _distance_array
  1370  0023EE  0100               	movlb	0	; () banked
  1371  0023F0  6FC9               	movwf	(CANsendMessage@data+1)& (0+255),b
  1372  0023F2  0E08               	movlw	8
  1373  0023F4  0100               	movlb	0	; () banked
  1374  0023F6  6FCA               	movwf	CANsendMessage@dataLength& (0+255),b
  1375  0023F8  0EBC               	movlw	188
  1376  0023FA  0100               	movlb	0	; () banked
  1377  0023FC  6FCB               	movwf	CANsendMessage@flags& (0+255),b
  1378  0023FE  EC0D  F006         	call	_CANsendMessage	;wreg free
  1379  002402                     l3844:
  1380                           
  1381                           ;ABS_Code.c: 328: }
  1382                           ;ABS_Code.c: 329: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1383  002402  010F               	movlb	15	; () banked
  1384  002404  BD40               	btfsc	64,6,b	;volatile
  1385  002406  D003               	goto	l733
  1386                           
  1387                           ; BSR set to: 15
  1388  002408  010F               	movlb	15	; () banked
  1389  00240A  AD30               	btfss	48,6,b	;volatile
  1390  00240C  D002               	goto	l731
  1391  00240E                     l733:
  1392                           
  1393                           ; BSR set to: 15
  1394                           ;ABS_Code.c: 330: Tx_retry = 1;
  1395  00240E  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1396                           
  1397                           ;ABS_Code.c: 331: } else {
  1398  002410  0012               	return	
  1399  002412                     l731:
  1400                           
  1401                           ; BSR set to: 15
  1402                           ;ABS_Code.c: 332: Tx_retry = 0;
  1403  002412  983D               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1404                           
  1405                           ; BSR set to: 15
  1406                           ;ABS_Code.c: 333: }
  1407                           ;ABS_Code.c: 334: } else {
  1408  002414  0012               	return	
  1409  002416                     l726:
  1410                           
  1411                           ;ABS_Code.c: 335: Tx_retry = 1;
  1412  002416  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1413  002418  0012               	return	
  1414  00241A                     __end_of_remote_frame_handler:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           prodh	equ	0xFF4
  1421                           prodl	equ	0xFF3
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function _CANsendMessage *****************
  1427 ;; Defined at:
  1428 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  identifier      4   26[BANK0 ] unsigned long 
  1431 ;;  data            2   30[BANK0 ] PTR unsigned char 
  1432 ;;		 -> distance_array(8), status_array(8), speed_array(8), 
  1433 ;;  dataLength      1   32[BANK0 ] unsigned char 
  1434 ;;  flags           1   33[BANK0 ] enum E16866
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  tamp            4   38[BANK0 ] unsigned long 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;		None               void
  1439 ;; Registers used:
  1440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1446 ;;      Params:         0       8       0       0
  1447 ;;      Locals:         0       4       0       0
  1448 ;;      Temps:          0       4       0       0
  1449 ;;      Totals:         0      16       0       0
  1450 ;;Total ram usage:       16 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    4
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_remote_frame_handler
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text2
  1461  000C1A                     __ptext2:
  1462                           	opt stack 0
  1463  000C1A                     _CANsendMessage:
  1464                           	opt stack 25
  1465                           
  1466                           ;inc\CANlib.h: 297: unsigned long tamp;
  1467                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  1468                           
  1469                           ;incstack = 0
  1470  000C1A  010F               	movlb	15	; () banked
  1471  000C1C  B740               	btfsc	64,3,b	;volatile
  1472  000C1E  D13F               	goto	l383
  1473                           
  1474                           ; BSR set to: 15
  1475                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  1476  000C20  C0CA  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1477                           
  1478                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  1479  000C24  0100               	movlb	0	; () banked
  1480  000C26  ADCB               	btfss	CANsendMessage@flags& (0+255),6,b
  1481  000C28  D003               	goto	l384
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  1485  000C2A  010F               	movlb	15	; () banked
  1486  000C2C  8D45               	bsf	69,6,b	;volatile
  1487  000C2E  D002               	goto	l385
  1488  000C30                     l384:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;inc\CANlib.h: 303: else
  1492                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  1493  000C30  010F               	movlb	15	; () banked
  1494  000C32  9D45               	bcf	69,6,b	;volatile
  1495  000C34                     l385:
  1496                           
  1497                           ; BSR set to: 15
  1498                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  1499  000C34  0100               	movlb	0	; () banked
  1500  000C36  A7CB               	btfss	CANsendMessage@flags& (0+255),3,b
  1501  000C38  D079               	goto	l386
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;inc\CANlib.h: 307: {
  1505                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  1506  000C3A  0100               	movlb	0	; () banked
  1507  000C3C  51C4               	movf	CANsendMessage@identifier& (0+255),w,b
  1508  000C3E  0100               	movlb	0	; () banked
  1509  000C40  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  1510  000C42  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1511  000C44  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1512  000C46  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  1516  000C48  C0D0  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  1520  000C4C  0E00               	movlw	0
  1521  000C4E  0100               	movlb	0	; () banked
  1522  000C50  15C4               	andwf	CANsendMessage@identifier& (0+255),w,b
  1523  000C52  0100               	movlb	0	; () banked
  1524  000C54  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  1525  000C56  0EFF               	movlw	255
  1526  000C58  0100               	movlb	0	; () banked
  1527  000C5A  15C5               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1528  000C5C  0100               	movlb	0	; () banked
  1529  000C5E  6FD1               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1530  000C60  0E00               	movlw	0
  1531  000C62  0100               	movlb	0	; () banked
  1532  000C64  15C6               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1533  000C66  0100               	movlb	0	; () banked
  1534  000C68  6FD2               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1535  000C6A  0E00               	movlw	0
  1536  000C6C  0100               	movlb	0	; () banked
  1537  000C6E  15C7               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1538  000C70  0100               	movlb	0	; () banked
  1539  000C72  6FD3               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  1543  000C74  C0D0  F0CC         	movff	CANsendMessage@tamp,??_CANsendMessage
  1544  000C78  C0D1  F0CD         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1545  000C7C  C0D2  F0CE         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1546  000C80  C0D3  F0CF         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1547  000C84  C0CD  F0CC         	movff	??_CANsendMessage+1,??_CANsendMessage
  1548  000C88  C0CE  F0CD         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1549  000C8C  C0CF  F0CE         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1550  000C90  0100               	movlb	0	; () banked
  1551  000C92  6BCF               	clrf	(??_CANsendMessage+3)& (0+255),b
  1552  000C94  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  1553  000C98  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1554  000C9C  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1555  000CA0  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  1559  000CA4  C0D0  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  1563  000CA8  0E00               	movlw	0
  1564  000CAA  010F               	movlb	15	; () banked
  1565  000CAC  6F42               	movwf	66,b	;volatile
  1566                           
  1567                           ; BSR set to: 15
  1568                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  1569  000CAE  010F               	movlb	15	; () banked
  1570  000CB0  8742               	bsf	66,3,b	;volatile
  1571                           
  1572                           ; BSR set to: 15
  1573                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  1574  000CB2  0100               	movlb	0	; () banked
  1575  000CB4  A1C6               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1576  000CB6  D002               	goto	l387
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  1580  000CB8  010F               	movlb	15	; () banked
  1581  000CBA  8142               	bsf	66,0,b	;volatile
  1582  000CBC                     l387:
  1583                           
  1584                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  1585  000CBC  0100               	movlb	0	; () banked
  1586  000CBE  A3C6               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1587  000CC0  D002               	goto	l388
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  1591  000CC2  010F               	movlb	15	; () banked
  1592  000CC4  8342               	bsf	66,1,b	;volatile
  1593  000CC6                     l388:
  1594                           
  1595                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  1596  000CC6  0100               	movlb	0	; () banked
  1597  000CC8  A5C6               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1598  000CCA  D002               	goto	l389
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  1602  000CCC  010F               	movlb	15	; () banked
  1603  000CCE  8B42               	bsf	66,5,b	;volatile
  1604  000CD0                     l389:
  1605                           
  1606                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  1607  000CD0  0100               	movlb	0	; () banked
  1608  000CD2  A7C6               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1609  000CD4  D002               	goto	l390
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  1613  000CD6  010F               	movlb	15	; () banked
  1614  000CD8  8D42               	bsf	66,6,b	;volatile
  1615  000CDA                     l390:
  1616                           
  1617                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  1618  000CDA  0100               	movlb	0	; () banked
  1619  000CDC  A9C6               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1620  000CDE  D002               	goto	l3280
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  1624  000CE0  010F               	movlb	15	; () banked
  1625  000CE2  8F42               	bsf	66,7,b	;volatile
  1626  000CE4                     l3280:
  1627                           
  1628                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  1629  000CE4  C0C4  F0CC         	movff	CANsendMessage@identifier,??_CANsendMessage
  1630  000CE8  C0C5  F0CD         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1631  000CEC  C0C6  F0CE         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1632  000CF0  C0C7  F0CF         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1633  000CF4  0E16               	movlw	22
  1634  000CF6  D006               	goto	u3450
  1635  000CF8                     u3455:
  1636  000CF8  0100               	movlb	0	; () banked
  1637  000CFA  90D8               	bcf	status,0,c
  1638  000CFC  33CF               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1639  000CFE  33CE               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1640  000D00  33CD               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1641  000D02  33CC               	rrcf	??_CANsendMessage& (0+255),f,b
  1642  000D04                     u3450:
  1643  000D04  2EE8               	decfsz	wreg,f,c
  1644  000D06  D7F8               	goto	u3455
  1645  000D08  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  1646  000D0C  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1647  000D10  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1648  000D14  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  1652  000D18  0100               	movlb	0	; () banked
  1653  000D1A  51D0               	movf	CANsendMessage@tamp& (0+255),w,b
  1654  000D1C  0100               	movlb	0	; () banked
  1655  000D1E  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  1656  000D20  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1657  000D22  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1658  000D24  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  1662  000D26  C0D0  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1663                           
  1664                           ;inc\CANlib.h: 333: }
  1665  000D2A  D059               	goto	l3300
  1666  000D2C                     l386:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;inc\CANlib.h: 335: else
  1670                           ;inc\CANlib.h: 337: {
  1671                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  1672  000D2C  010F               	movlb	15	; () banked
  1673  000D2E  9742               	bcf	66,3,b	;volatile
  1674                           
  1675                           ; BSR set to: 15
  1676                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  1677  000D30  C0C4  F0CC         	movff	CANsendMessage@identifier,??_CANsendMessage
  1678  000D34  C0C5  F0CD         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1679  000D38  C0C6  F0CE         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1680  000D3C  C0C7  F0CF         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1681  000D40  0E04               	movlw	4
  1682  000D42  D006               	goto	u3460
  1683  000D44                     u3465:
  1684  000D44  0100               	movlb	0	; () banked
  1685  000D46  90D8               	bcf	status,0,c
  1686  000D48  33CF               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1687  000D4A  33CE               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1688  000D4C  33CD               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1689  000D4E  33CC               	rrcf	??_CANsendMessage& (0+255),f,b
  1690  000D50                     u3460:
  1691  000D50  2EE8               	decfsz	wreg,f,c
  1692  000D52  D7F8               	goto	u3465
  1693  000D54  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  1694  000D58  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1695  000D5C  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1696  000D60  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  1700  000D64  0100               	movlb	0	; () banked
  1701  000D66  51D0               	movf	CANsendMessage@tamp& (0+255),w,b
  1702  000D68  0100               	movlb	0	; () banked
  1703  000D6A  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  1704  000D6C  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1705  000D6E  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1706  000D70  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  1710  000D72  C0D0  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  1714  000D76  0E07               	movlw	7
  1715  000D78  0100               	movlb	0	; () banked
  1716  000D7A  15C4               	andwf	CANsendMessage@identifier& (0+255),w,b
  1717  000D7C  0100               	movlb	0	; () banked
  1718  000D7E  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  1719  000D80  0E00               	movlw	0
  1720  000D82  0100               	movlb	0	; () banked
  1721  000D84  15C5               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1722  000D86  0100               	movlb	0	; () banked
  1723  000D88  6FD1               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1724  000D8A  0E00               	movlw	0
  1725  000D8C  0100               	movlb	0	; () banked
  1726  000D8E  15C6               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1727  000D90  0100               	movlb	0	; () banked
  1728  000D92  6FD2               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1729  000D94  0E00               	movlw	0
  1730  000D96  0100               	movlb	0	; () banked
  1731  000D98  15C7               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1732  000D9A  0100               	movlb	0	; () banked
  1733  000D9C  6FD3               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  1737  000D9E  C0D0  F0CC         	movff	CANsendMessage@tamp,??_CANsendMessage
  1738  000DA2  C0D1  F0CD         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1739  000DA6  C0D2  F0CE         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1740  000DAA  C0D3  F0CF         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1741  000DAE  0E05               	movlw	5
  1742  000DB0                     u3475:
  1743  000DB0  90D8               	bcf	status,0,c
  1744  000DB2  0100               	movlb	0	; () banked
  1745  000DB4  37CC               	rlcf	??_CANsendMessage& (0+255),f,b
  1746  000DB6  37CD               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1747  000DB8  37CE               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1748  000DBA  37CF               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1749  000DBC  2EE8               	decfsz	wreg,f,c
  1750  000DBE  D7F8               	goto	u3475
  1751  000DC0  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  1752  000DC4  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1753  000DC8  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1754  000DCC  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  1758  000DD0  010F               	movlb	15	; () banked
  1759  000DD2  5142               	movf	66,w,b	;volatile
  1760  000DD4  0B1F               	andlw	31
  1761  000DD6  010F               	movlb	15	; () banked
  1762  000DD8  6F42               	movwf	66,b	;volatile
  1763                           
  1764                           ; BSR set to: 15
  1765                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  1766  000DDA  C0D0  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1767  000DDE                     l3300:
  1768                           
  1769                           ;inc\CANlib.h: 348: }
  1770                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  1771  000DDE  0100               	movlb	0	; () banked
  1772  000DE0  A1CB               	btfss	CANsendMessage@flags& (0+255),0,b
  1773  000DE2  D003               	goto	l393
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  1777  000DE4  010F               	movlb	15	; () banked
  1778  000DE6  8140               	bsf	64,0,b	;volatile
  1779  000DE8  D002               	goto	l394
  1780  000DEA                     l393:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;inc\CANlib.h: 352: else
  1784                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  1785  000DEA  010F               	movlb	15	; () banked
  1786  000DEC  9140               	bcf	64,0,b	;volatile
  1787  000DEE                     l394:
  1788                           
  1789                           ; BSR set to: 15
  1790                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  1791  000DEE  0100               	movlb	0	; () banked
  1792  000DF0  A3CB               	btfss	CANsendMessage@flags& (0+255),1,b
  1793  000DF2  D003               	goto	l395
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  1797  000DF4  010F               	movlb	15	; () banked
  1798  000DF6  8340               	bsf	64,1,b	;volatile
  1799  000DF8  D002               	goto	l3306
  1800  000DFA                     l395:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;inc\CANlib.h: 356: else
  1804                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  1805  000DFA  010F               	movlb	15	; () banked
  1806  000DFC  9340               	bcf	64,1,b	;volatile
  1807  000DFE                     l3306:
  1808                           
  1809                           ; BSR set to: 15
  1810                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  1811  000DFE  C0C8  FFD9         	movff	CANsendMessage@data,fsr2l
  1812  000E02  C0C9  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1813  000E06  50DF               	movf	indf2,w,c
  1814  000E08  010F               	movlb	15	; () banked
  1815  000E0A  6F46               	movwf	70,b	;volatile
  1816                           
  1817                           ; BSR set to: 15
  1818                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  1819  000E0C  0100               	movlb	0	; () banked
  1820  000E0E  EE20 F001          	lfsr	2,1
  1821  000E12  51C8               	movf	CANsendMessage@data& (0+255),w,b
  1822  000E14  26D9               	addwf	fsr2l,f,c
  1823  000E16  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1824  000E18  22DA               	addwfc	fsr2h,f,c
  1825  000E1A  50DF               	movf	indf2,w,c
  1826  000E1C  010F               	movlb	15	; () banked
  1827  000E1E  6F47               	movwf	71,b	;volatile
  1828                           
  1829                           ; BSR set to: 15
  1830                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  1831  000E20  0100               	movlb	0	; () banked
  1832  000E22  EE20 F002          	lfsr	2,2
  1833  000E26  51C8               	movf	CANsendMessage@data& (0+255),w,b
  1834  000E28  26D9               	addwf	fsr2l,f,c
  1835  000E2A  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1836  000E2C  22DA               	addwfc	fsr2h,f,c
  1837  000E2E  50DF               	movf	indf2,w,c
  1838  000E30  010F               	movlb	15	; () banked
  1839  000E32  6F48               	movwf	72,b	;volatile
  1840                           
  1841                           ; BSR set to: 15
  1842                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  1843  000E34  0100               	movlb	0	; () banked
  1844  000E36  EE20 F003          	lfsr	2,3
  1845  000E3A  51C8               	movf	CANsendMessage@data& (0+255),w,b
  1846  000E3C  26D9               	addwf	fsr2l,f,c
  1847  000E3E  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1848  000E40  22DA               	addwfc	fsr2h,f,c
  1849  000E42  50DF               	movf	indf2,w,c
  1850  000E44  010F               	movlb	15	; () banked
  1851  000E46  6F49               	movwf	73,b	;volatile
  1852                           
  1853                           ; BSR set to: 15
  1854                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  1855  000E48  0100               	movlb	0	; () banked
  1856  000E4A  EE20 F004          	lfsr	2,4
  1857  000E4E  51C8               	movf	CANsendMessage@data& (0+255),w,b
  1858  000E50  26D9               	addwf	fsr2l,f,c
  1859  000E52  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1860  000E54  22DA               	addwfc	fsr2h,f,c
  1861  000E56  50DF               	movf	indf2,w,c
  1862  000E58  010F               	movlb	15	; () banked
  1863  000E5A  6F4A               	movwf	74,b	;volatile
  1864                           
  1865                           ; BSR set to: 15
  1866                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  1867  000E5C  0100               	movlb	0	; () banked
  1868  000E5E  EE20 F005          	lfsr	2,5
  1869  000E62  51C8               	movf	CANsendMessage@data& (0+255),w,b
  1870  000E64  26D9               	addwf	fsr2l,f,c
  1871  000E66  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1872  000E68  22DA               	addwfc	fsr2h,f,c
  1873  000E6A  50DF               	movf	indf2,w,c
  1874  000E6C  010F               	movlb	15	; () banked
  1875  000E6E  6F4B               	movwf	75,b	;volatile
  1876                           
  1877                           ; BSR set to: 15
  1878                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  1879  000E70  0100               	movlb	0	; () banked
  1880  000E72  EE20 F006          	lfsr	2,6
  1881  000E76  51C8               	movf	CANsendMessage@data& (0+255),w,b
  1882  000E78  26D9               	addwf	fsr2l,f,c
  1883  000E7A  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1884  000E7C  22DA               	addwfc	fsr2h,f,c
  1885  000E7E  50DF               	movf	indf2,w,c
  1886  000E80  010F               	movlb	15	; () banked
  1887  000E82  6F4C               	movwf	76,b	;volatile
  1888                           
  1889                           ; BSR set to: 15
  1890                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  1891  000E84  0100               	movlb	0	; () banked
  1892  000E86  EE20 F007          	lfsr	2,7
  1893  000E8A  51C8               	movf	CANsendMessage@data& (0+255),w,b
  1894  000E8C  26D9               	addwf	fsr2l,f,c
  1895  000E8E  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1896  000E90  22DA               	addwfc	fsr2h,f,c
  1897  000E92  50DF               	movf	indf2,w,c
  1898  000E94  010F               	movlb	15	; () banked
  1899  000E96  6F4D               	movwf	77,b	;volatile
  1900                           
  1901                           ; BSR set to: 15
  1902                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  1903  000E98  010F               	movlb	15	; () banked
  1904  000E9A  8740               	bsf	64,3,b	;volatile
  1905                           
  1906                           ; BSR set to: 15
  1907                           ;inc\CANlib.h: 369: return;
  1908  000E9C  0012               	return	
  1909  000E9E                     l383:
  1910                           
  1911                           ; BSR set to: 15
  1912                           ;inc\CANlib.h: 370: }
  1913                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  1914  000E9E  010F               	movlb	15	; () banked
  1915  000EA0  B730               	btfsc	48,3,b	;volatile
  1916  000EA2  D13F               	goto	l398
  1917                           
  1918                           ; BSR set to: 15
  1919                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  1920  000EA4  C0CA  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1921                           
  1922                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  1923  000EA8  0100               	movlb	0	; () banked
  1924  000EAA  ADCB               	btfss	CANsendMessage@flags& (0+255),6,b
  1925  000EAC  D003               	goto	l399
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  1929  000EAE  010F               	movlb	15	; () banked
  1930  000EB0  8D35               	bsf	53,6,b	;volatile
  1931  000EB2  D002               	goto	l400
  1932  000EB4                     l399:
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;inc\CANlib.h: 379: else
  1936                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  1937  000EB4  010F               	movlb	15	; () banked
  1938  000EB6  9D35               	bcf	53,6,b	;volatile
  1939  000EB8                     l400:
  1940                           
  1941                           ; BSR set to: 15
  1942                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  1943  000EB8  0100               	movlb	0	; () banked
  1944  000EBA  A7CB               	btfss	CANsendMessage@flags& (0+255),3,b
  1945  000EBC  D079               	goto	l401
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;inc\CANlib.h: 383: {
  1949                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  1950  000EBE  0100               	movlb	0	; () banked
  1951  000EC0  51C4               	movf	CANsendMessage@identifier& (0+255),w,b
  1952  000EC2  0100               	movlb	0	; () banked
  1953  000EC4  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  1954  000EC6  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1955  000EC8  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1956  000ECA  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  1960  000ECC  C0D0  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  1964  000ED0  0E00               	movlw	0
  1965  000ED2  0100               	movlb	0	; () banked
  1966  000ED4  15C4               	andwf	CANsendMessage@identifier& (0+255),w,b
  1967  000ED6  0100               	movlb	0	; () banked
  1968  000ED8  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  1969  000EDA  0EFF               	movlw	255
  1970  000EDC  0100               	movlb	0	; () banked
  1971  000EDE  15C5               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1972  000EE0  0100               	movlb	0	; () banked
  1973  000EE2  6FD1               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1974  000EE4  0E00               	movlw	0
  1975  000EE6  0100               	movlb	0	; () banked
  1976  000EE8  15C6               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1977  000EEA  0100               	movlb	0	; () banked
  1978  000EEC  6FD2               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1979  000EEE  0E00               	movlw	0
  1980  000EF0  0100               	movlb	0	; () banked
  1981  000EF2  15C7               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1982  000EF4  0100               	movlb	0	; () banked
  1983  000EF6  6FD3               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  1987  000EF8  C0D0  F0CC         	movff	CANsendMessage@tamp,??_CANsendMessage
  1988  000EFC  C0D1  F0CD         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1989  000F00  C0D2  F0CE         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1990  000F04  C0D3  F0CF         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1991  000F08  C0CD  F0CC         	movff	??_CANsendMessage+1,??_CANsendMessage
  1992  000F0C  C0CE  F0CD         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1993  000F10  C0CF  F0CE         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1994  000F14  0100               	movlb	0	; () banked
  1995  000F16  6BCF               	clrf	(??_CANsendMessage+3)& (0+255),b
  1996  000F18  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  1997  000F1C  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1998  000F20  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1999  000F24  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  2003  000F28  C0D0  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  2007  000F2C  0E00               	movlw	0
  2008  000F2E  010F               	movlb	15	; () banked
  2009  000F30  6F32               	movwf	50,b	;volatile
  2010                           
  2011                           ; BSR set to: 15
  2012                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  2013  000F32  010F               	movlb	15	; () banked
  2014  000F34  8732               	bsf	50,3,b	;volatile
  2015                           
  2016                           ; BSR set to: 15
  2017                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  2018  000F36  0100               	movlb	0	; () banked
  2019  000F38  A1C6               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2020  000F3A  D002               	goto	l402
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  2024  000F3C  010F               	movlb	15	; () banked
  2025  000F3E  8132               	bsf	50,0,b	;volatile
  2026  000F40                     l402:
  2027                           
  2028                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  2029  000F40  0100               	movlb	0	; () banked
  2030  000F42  A3C6               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2031  000F44  D002               	goto	l403
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  2035  000F46  010F               	movlb	15	; () banked
  2036  000F48  8332               	bsf	50,1,b	;volatile
  2037  000F4A                     l403:
  2038                           
  2039                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  2040  000F4A  0100               	movlb	0	; () banked
  2041  000F4C  A5C6               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2042  000F4E  D002               	goto	l404
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  2046  000F50  010F               	movlb	15	; () banked
  2047  000F52  8B32               	bsf	50,5,b	;volatile
  2048  000F54                     l404:
  2049                           
  2050                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  2051  000F54  0100               	movlb	0	; () banked
  2052  000F56  A7C6               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2053  000F58  D002               	goto	l405
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  2057  000F5A  010F               	movlb	15	; () banked
  2058  000F5C  8D32               	bsf	50,6,b	;volatile
  2059  000F5E                     l405:
  2060                           
  2061                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  2062  000F5E  0100               	movlb	0	; () banked
  2063  000F60  A9C6               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2064  000F62  D002               	goto	l3356
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  2068  000F64  010F               	movlb	15	; () banked
  2069  000F66  8F32               	bsf	50,7,b	;volatile
  2070  000F68                     l3356:
  2071                           
  2072                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  2073  000F68  C0C4  F0CC         	movff	CANsendMessage@identifier,??_CANsendMessage
  2074  000F6C  C0C5  F0CD         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2075  000F70  C0C6  F0CE         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2076  000F74  C0C7  F0CF         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2077  000F78  0E16               	movlw	22
  2078  000F7A  D006               	goto	u3580
  2079  000F7C                     u3585:
  2080  000F7C  0100               	movlb	0	; () banked
  2081  000F7E  90D8               	bcf	status,0,c
  2082  000F80  33CF               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2083  000F82  33CE               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2084  000F84  33CD               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2085  000F86  33CC               	rrcf	??_CANsendMessage& (0+255),f,b
  2086  000F88                     u3580:
  2087  000F88  2EE8               	decfsz	wreg,f,c
  2088  000F8A  D7F8               	goto	u3585
  2089  000F8C  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  2090  000F90  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2091  000F94  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2092  000F98  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  2096  000F9C  0100               	movlb	0	; () banked
  2097  000F9E  51D0               	movf	CANsendMessage@tamp& (0+255),w,b
  2098  000FA0  0100               	movlb	0	; () banked
  2099  000FA2  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2100  000FA4  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2101  000FA6  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2102  000FA8  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  2106  000FAA  C0D0  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2107                           
  2108                           ;inc\CANlib.h: 408: }
  2109  000FAE  D059               	goto	l3376
  2110  000FB0                     l401:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;inc\CANlib.h: 410: else
  2114                           ;inc\CANlib.h: 412: {
  2115                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  2116  000FB0  010F               	movlb	15	; () banked
  2117  000FB2  9732               	bcf	50,3,b	;volatile
  2118                           
  2119                           ; BSR set to: 15
  2120                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  2121  000FB4  C0C4  F0CC         	movff	CANsendMessage@identifier,??_CANsendMessage
  2122  000FB8  C0C5  F0CD         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2123  000FBC  C0C6  F0CE         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2124  000FC0  C0C7  F0CF         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2125  000FC4  0E04               	movlw	4
  2126  000FC6  D006               	goto	u3590
  2127  000FC8                     u3595:
  2128  000FC8  0100               	movlb	0	; () banked
  2129  000FCA  90D8               	bcf	status,0,c
  2130  000FCC  33CF               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2131  000FCE  33CE               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2132  000FD0  33CD               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2133  000FD2  33CC               	rrcf	??_CANsendMessage& (0+255),f,b
  2134  000FD4                     u3590:
  2135  000FD4  2EE8               	decfsz	wreg,f,c
  2136  000FD6  D7F8               	goto	u3595
  2137  000FD8  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  2138  000FDC  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2139  000FE0  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2140  000FE4  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  2144  000FE8  0100               	movlb	0	; () banked
  2145  000FEA  51D0               	movf	CANsendMessage@tamp& (0+255),w,b
  2146  000FEC  0100               	movlb	0	; () banked
  2147  000FEE  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2148  000FF0  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2149  000FF2  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2150  000FF4  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  2154  000FF6  C0D0  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  2158  000FFA  0E07               	movlw	7
  2159  000FFC  0100               	movlb	0	; () banked
  2160  000FFE  15C4               	andwf	CANsendMessage@identifier& (0+255),w,b
  2161  001000  0100               	movlb	0	; () banked
  2162  001002  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2163  001004  0E00               	movlw	0
  2164  001006  0100               	movlb	0	; () banked
  2165  001008  15C5               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2166  00100A  0100               	movlb	0	; () banked
  2167  00100C  6FD1               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2168  00100E  0E00               	movlw	0
  2169  001010  0100               	movlb	0	; () banked
  2170  001012  15C6               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2171  001014  0100               	movlb	0	; () banked
  2172  001016  6FD2               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2173  001018  0E00               	movlw	0
  2174  00101A  0100               	movlb	0	; () banked
  2175  00101C  15C7               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2176  00101E  0100               	movlb	0	; () banked
  2177  001020  6FD3               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  2181  001022  C0D0  F0CC         	movff	CANsendMessage@tamp,??_CANsendMessage
  2182  001026  C0D1  F0CD         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2183  00102A  C0D2  F0CE         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2184  00102E  C0D3  F0CF         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2185  001032  0E05               	movlw	5
  2186  001034                     u3605:
  2187  001034  90D8               	bcf	status,0,c
  2188  001036  0100               	movlb	0	; () banked
  2189  001038  37CC               	rlcf	??_CANsendMessage& (0+255),f,b
  2190  00103A  37CD               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2191  00103C  37CE               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2192  00103E  37CF               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2193  001040  2EE8               	decfsz	wreg,f,c
  2194  001042  D7F8               	goto	u3605
  2195  001044  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  2196  001048  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2197  00104C  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2198  001050  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  2202  001054  010F               	movlb	15	; () banked
  2203  001056  5132               	movf	50,w,b	;volatile
  2204  001058  0B1F               	andlw	31
  2205  00105A  010F               	movlb	15	; () banked
  2206  00105C  6F32               	movwf	50,b	;volatile
  2207                           
  2208                           ; BSR set to: 15
  2209                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  2210  00105E  C0D0  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2211  001062                     l3376:
  2212                           
  2213                           ;inc\CANlib.h: 423: }
  2214                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  2215  001062  0100               	movlb	0	; () banked
  2216  001064  A1CB               	btfss	CANsendMessage@flags& (0+255),0,b
  2217  001066  D003               	goto	l408
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  2221  001068  010F               	movlb	15	; () banked
  2222  00106A  8130               	bsf	48,0,b	;volatile
  2223  00106C  D002               	goto	l409
  2224  00106E                     l408:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;inc\CANlib.h: 427: else
  2228                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  2229  00106E  010F               	movlb	15	; () banked
  2230  001070  9130               	bcf	48,0,b	;volatile
  2231  001072                     l409:
  2232                           
  2233                           ; BSR set to: 15
  2234                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  2235  001072  0100               	movlb	0	; () banked
  2236  001074  A3CB               	btfss	CANsendMessage@flags& (0+255),1,b
  2237  001076  D003               	goto	l410
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  2241  001078  010F               	movlb	15	; () banked
  2242  00107A  8330               	bsf	48,1,b	;volatile
  2243  00107C  D002               	goto	l3382
  2244  00107E                     l410:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;inc\CANlib.h: 431: else
  2248                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  2249  00107E  010F               	movlb	15	; () banked
  2250  001080  9330               	bcf	48,1,b	;volatile
  2251  001082                     l3382:
  2252                           
  2253                           ; BSR set to: 15
  2254                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  2255  001082  C0C8  FFD9         	movff	CANsendMessage@data,fsr2l
  2256  001086  C0C9  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2257  00108A  50DF               	movf	indf2,w,c
  2258  00108C  010F               	movlb	15	; () banked
  2259  00108E  6F36               	movwf	54,b	;volatile
  2260                           
  2261                           ; BSR set to: 15
  2262                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  2263  001090  0100               	movlb	0	; () banked
  2264  001092  EE20 F001          	lfsr	2,1
  2265  001096  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2266  001098  26D9               	addwf	fsr2l,f,c
  2267  00109A  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2268  00109C  22DA               	addwfc	fsr2h,f,c
  2269  00109E  50DF               	movf	indf2,w,c
  2270  0010A0  010F               	movlb	15	; () banked
  2271  0010A2  6F37               	movwf	55,b	;volatile
  2272                           
  2273                           ; BSR set to: 15
  2274                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  2275  0010A4  0100               	movlb	0	; () banked
  2276  0010A6  EE20 F002          	lfsr	2,2
  2277  0010AA  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2278  0010AC  26D9               	addwf	fsr2l,f,c
  2279  0010AE  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2280  0010B0  22DA               	addwfc	fsr2h,f,c
  2281  0010B2  50DF               	movf	indf2,w,c
  2282  0010B4  010F               	movlb	15	; () banked
  2283  0010B6  6F38               	movwf	56,b	;volatile
  2284                           
  2285                           ; BSR set to: 15
  2286                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  2287  0010B8  0100               	movlb	0	; () banked
  2288  0010BA  EE20 F003          	lfsr	2,3
  2289  0010BE  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2290  0010C0  26D9               	addwf	fsr2l,f,c
  2291  0010C2  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2292  0010C4  22DA               	addwfc	fsr2h,f,c
  2293  0010C6  50DF               	movf	indf2,w,c
  2294  0010C8  010F               	movlb	15	; () banked
  2295  0010CA  6F39               	movwf	57,b	;volatile
  2296                           
  2297                           ; BSR set to: 15
  2298                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  2299  0010CC  0100               	movlb	0	; () banked
  2300  0010CE  EE20 F004          	lfsr	2,4
  2301  0010D2  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2302  0010D4  26D9               	addwf	fsr2l,f,c
  2303  0010D6  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2304  0010D8  22DA               	addwfc	fsr2h,f,c
  2305  0010DA  50DF               	movf	indf2,w,c
  2306  0010DC  010F               	movlb	15	; () banked
  2307  0010DE  6F3A               	movwf	58,b	;volatile
  2308                           
  2309                           ; BSR set to: 15
  2310                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  2311  0010E0  0100               	movlb	0	; () banked
  2312  0010E2  EE20 F005          	lfsr	2,5
  2313  0010E6  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2314  0010E8  26D9               	addwf	fsr2l,f,c
  2315  0010EA  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2316  0010EC  22DA               	addwfc	fsr2h,f,c
  2317  0010EE  50DF               	movf	indf2,w,c
  2318  0010F0  010F               	movlb	15	; () banked
  2319  0010F2  6F3B               	movwf	59,b	;volatile
  2320                           
  2321                           ; BSR set to: 15
  2322                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  2323  0010F4  0100               	movlb	0	; () banked
  2324  0010F6  EE20 F006          	lfsr	2,6
  2325  0010FA  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2326  0010FC  26D9               	addwf	fsr2l,f,c
  2327  0010FE  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2328  001100  22DA               	addwfc	fsr2h,f,c
  2329  001102  50DF               	movf	indf2,w,c
  2330  001104  010F               	movlb	15	; () banked
  2331  001106  6F3C               	movwf	60,b	;volatile
  2332                           
  2333                           ; BSR set to: 15
  2334                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  2335  001108  0100               	movlb	0	; () banked
  2336  00110A  EE20 F007          	lfsr	2,7
  2337  00110E  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2338  001110  26D9               	addwf	fsr2l,f,c
  2339  001112  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2340  001114  22DA               	addwfc	fsr2h,f,c
  2341  001116  50DF               	movf	indf2,w,c
  2342  001118  010F               	movlb	15	; () banked
  2343  00111A  6F3D               	movwf	61,b	;volatile
  2344                           
  2345                           ; BSR set to: 15
  2346                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  2347  00111C  010F               	movlb	15	; () banked
  2348  00111E  8730               	bsf	48,3,b	;volatile
  2349                           
  2350                           ; BSR set to: 15
  2351                           ;inc\CANlib.h: 445: return;
  2352  001120  0012               	return	
  2353  001122                     l398:
  2354                           
  2355                           ; BSR set to: 15
  2356                           ;inc\CANlib.h: 446: }
  2357                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  2358  001122  010F               	movlb	15	; () banked
  2359  001124  B720               	btfsc	32,3,b	;volatile
  2360  001126  0012               	return	
  2361                           
  2362                           ; BSR set to: 15
  2363                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  2364  001128  C0CA  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2365                           
  2366                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  2367  00112C  0100               	movlb	0	; () banked
  2368  00112E  ADCB               	btfss	CANsendMessage@flags& (0+255),6,b
  2369  001130  D003               	goto	l413
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  2373  001132  010F               	movlb	15	; () banked
  2374  001134  8D25               	bsf	37,6,b	;volatile
  2375  001136  D002               	goto	l414
  2376  001138                     l413:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;inc\CANlib.h: 455: else
  2380                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  2381  001138  010F               	movlb	15	; () banked
  2382  00113A  9D25               	bcf	37,6,b	;volatile
  2383  00113C                     l414:
  2384                           
  2385                           ; BSR set to: 15
  2386                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  2387  00113C  0100               	movlb	0	; () banked
  2388  00113E  A7CB               	btfss	CANsendMessage@flags& (0+255),3,b
  2389  001140  D079               	goto	l415
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;inc\CANlib.h: 459: {
  2393                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  2394  001142  0100               	movlb	0	; () banked
  2395  001144  51C4               	movf	CANsendMessage@identifier& (0+255),w,b
  2396  001146  0100               	movlb	0	; () banked
  2397  001148  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2398  00114A  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2399  00114C  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2400  00114E  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  2404  001150  C0D0  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  2408  001154  0E00               	movlw	0
  2409  001156  0100               	movlb	0	; () banked
  2410  001158  15C4               	andwf	CANsendMessage@identifier& (0+255),w,b
  2411  00115A  0100               	movlb	0	; () banked
  2412  00115C  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2413  00115E  0EFF               	movlw	255
  2414  001160  0100               	movlb	0	; () banked
  2415  001162  15C5               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2416  001164  0100               	movlb	0	; () banked
  2417  001166  6FD1               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2418  001168  0E00               	movlw	0
  2419  00116A  0100               	movlb	0	; () banked
  2420  00116C  15C6               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2421  00116E  0100               	movlb	0	; () banked
  2422  001170  6FD2               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2423  001172  0E00               	movlw	0
  2424  001174  0100               	movlb	0	; () banked
  2425  001176  15C7               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2426  001178  0100               	movlb	0	; () banked
  2427  00117A  6FD3               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  2431  00117C  C0D0  F0CC         	movff	CANsendMessage@tamp,??_CANsendMessage
  2432  001180  C0D1  F0CD         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2433  001184  C0D2  F0CE         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2434  001188  C0D3  F0CF         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2435  00118C  C0CD  F0CC         	movff	??_CANsendMessage+1,??_CANsendMessage
  2436  001190  C0CE  F0CD         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2437  001194  C0CF  F0CE         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2438  001198  0100               	movlb	0	; () banked
  2439  00119A  6BCF               	clrf	(??_CANsendMessage+3)& (0+255),b
  2440  00119C  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  2441  0011A0  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2442  0011A4  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2443  0011A8  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  2447  0011AC  C0D0  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  2451  0011B0  0E00               	movlw	0
  2452  0011B2  010F               	movlb	15	; () banked
  2453  0011B4  6F22               	movwf	34,b	;volatile
  2454                           
  2455                           ; BSR set to: 15
  2456                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  2457  0011B6  010F               	movlb	15	; () banked
  2458  0011B8  8722               	bsf	34,3,b	;volatile
  2459                           
  2460                           ; BSR set to: 15
  2461                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  2462  0011BA  0100               	movlb	0	; () banked
  2463  0011BC  A1C6               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2464  0011BE  D002               	goto	l416
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  2468  0011C0  010F               	movlb	15	; () banked
  2469  0011C2  8122               	bsf	34,0,b	;volatile
  2470  0011C4                     l416:
  2471                           
  2472                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  2473  0011C4  0100               	movlb	0	; () banked
  2474  0011C6  A3C6               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2475  0011C8  D002               	goto	l417
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  2479  0011CA  010F               	movlb	15	; () banked
  2480  0011CC  8322               	bsf	34,1,b	;volatile
  2481  0011CE                     l417:
  2482                           
  2483                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  2484  0011CE  0100               	movlb	0	; () banked
  2485  0011D0  A5C6               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2486  0011D2  D002               	goto	l418
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  2490  0011D4  010F               	movlb	15	; () banked
  2491  0011D6  8B22               	bsf	34,5,b	;volatile
  2492  0011D8                     l418:
  2493                           
  2494                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  2495  0011D8  0100               	movlb	0	; () banked
  2496  0011DA  A7C6               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2497  0011DC  D002               	goto	l419
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  2501  0011DE  010F               	movlb	15	; () banked
  2502  0011E0  8D22               	bsf	34,6,b	;volatile
  2503  0011E2                     l419:
  2504                           
  2505                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  2506  0011E2  0100               	movlb	0	; () banked
  2507  0011E4  A9C6               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2508  0011E6  D002               	goto	l3432
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  2512  0011E8  010F               	movlb	15	; () banked
  2513  0011EA  8F22               	bsf	34,7,b	;volatile
  2514  0011EC                     l3432:
  2515                           
  2516                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  2517  0011EC  C0C4  F0CC         	movff	CANsendMessage@identifier,??_CANsendMessage
  2518  0011F0  C0C5  F0CD         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2519  0011F4  C0C6  F0CE         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2520  0011F8  C0C7  F0CF         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2521  0011FC  0E16               	movlw	22
  2522  0011FE  D006               	goto	u3710
  2523  001200                     u3715:
  2524  001200  0100               	movlb	0	; () banked
  2525  001202  90D8               	bcf	status,0,c
  2526  001204  33CF               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2527  001206  33CE               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2528  001208  33CD               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2529  00120A  33CC               	rrcf	??_CANsendMessage& (0+255),f,b
  2530  00120C                     u3710:
  2531  00120C  2EE8               	decfsz	wreg,f,c
  2532  00120E  D7F8               	goto	u3715
  2533  001210  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  2534  001214  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2535  001218  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2536  00121C  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  2540  001220  0100               	movlb	0	; () banked
  2541  001222  51D0               	movf	CANsendMessage@tamp& (0+255),w,b
  2542  001224  0100               	movlb	0	; () banked
  2543  001226  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2544  001228  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2545  00122A  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2546  00122C  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  2550  00122E  C0D0  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2551                           
  2552                           ;inc\CANlib.h: 484: }
  2553  001232  D059               	goto	l3452
  2554  001234                     l415:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;inc\CANlib.h: 486: else
  2558                           ;inc\CANlib.h: 488: {
  2559                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  2560  001234  010F               	movlb	15	; () banked
  2561  001236  9722               	bcf	34,3,b	;volatile
  2562                           
  2563                           ; BSR set to: 15
  2564                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  2565  001238  C0C4  F0CC         	movff	CANsendMessage@identifier,??_CANsendMessage
  2566  00123C  C0C5  F0CD         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2567  001240  C0C6  F0CE         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2568  001244  C0C7  F0CF         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2569  001248  0E04               	movlw	4
  2570  00124A  D006               	goto	u3720
  2571  00124C                     u3725:
  2572  00124C  0100               	movlb	0	; () banked
  2573  00124E  90D8               	bcf	status,0,c
  2574  001250  33CF               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2575  001252  33CE               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2576  001254  33CD               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2577  001256  33CC               	rrcf	??_CANsendMessage& (0+255),f,b
  2578  001258                     u3720:
  2579  001258  2EE8               	decfsz	wreg,f,c
  2580  00125A  D7F8               	goto	u3725
  2581  00125C  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  2582  001260  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2583  001264  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2584  001268  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  2588  00126C  0100               	movlb	0	; () banked
  2589  00126E  51D0               	movf	CANsendMessage@tamp& (0+255),w,b
  2590  001270  0100               	movlb	0	; () banked
  2591  001272  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2592  001274  6BD1               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2593  001276  6BD2               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2594  001278  6BD3               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  2598  00127A  C0D0  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  2602  00127E  0E07               	movlw	7
  2603  001280  0100               	movlb	0	; () banked
  2604  001282  15C4               	andwf	CANsendMessage@identifier& (0+255),w,b
  2605  001284  0100               	movlb	0	; () banked
  2606  001286  6FD0               	movwf	CANsendMessage@tamp& (0+255),b
  2607  001288  0E00               	movlw	0
  2608  00128A  0100               	movlb	0	; () banked
  2609  00128C  15C5               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2610  00128E  0100               	movlb	0	; () banked
  2611  001290  6FD1               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2612  001292  0E00               	movlw	0
  2613  001294  0100               	movlb	0	; () banked
  2614  001296  15C6               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2615  001298  0100               	movlb	0	; () banked
  2616  00129A  6FD2               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2617  00129C  0E00               	movlw	0
  2618  00129E  0100               	movlb	0	; () banked
  2619  0012A0  15C7               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2620  0012A2  0100               	movlb	0	; () banked
  2621  0012A4  6FD3               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  2625  0012A6  C0D0  F0CC         	movff	CANsendMessage@tamp,??_CANsendMessage
  2626  0012AA  C0D1  F0CD         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2627  0012AE  C0D2  F0CE         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2628  0012B2  C0D3  F0CF         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2629  0012B6  0E05               	movlw	5
  2630  0012B8                     u3735:
  2631  0012B8  90D8               	bcf	status,0,c
  2632  0012BA  0100               	movlb	0	; () banked
  2633  0012BC  37CC               	rlcf	??_CANsendMessage& (0+255),f,b
  2634  0012BE  37CD               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2635  0012C0  37CE               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2636  0012C2  37CF               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2637  0012C4  2EE8               	decfsz	wreg,f,c
  2638  0012C6  D7F8               	goto	u3735
  2639  0012C8  C0CC  F0D0         	movff	??_CANsendMessage,CANsendMessage@tamp
  2640  0012CC  C0CD  F0D1         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2641  0012D0  C0CE  F0D2         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2642  0012D4  C0CF  F0D3         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  2646  0012D8  010F               	movlb	15	; () banked
  2647  0012DA  5122               	movf	34,w,b	;volatile
  2648  0012DC  0B1F               	andlw	31
  2649  0012DE  010F               	movlb	15	; () banked
  2650  0012E0  6F22               	movwf	34,b	;volatile
  2651                           
  2652                           ; BSR set to: 15
  2653                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  2654  0012E2  C0D0  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2655  0012E6                     l3452:
  2656                           
  2657                           ;inc\CANlib.h: 499: }
  2658                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  2659  0012E6  0100               	movlb	0	; () banked
  2660  0012E8  A1CB               	btfss	CANsendMessage@flags& (0+255),0,b
  2661  0012EA  D003               	goto	l422
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  2665  0012EC  010F               	movlb	15	; () banked
  2666  0012EE  8120               	bsf	32,0,b	;volatile
  2667  0012F0  D002               	goto	l423
  2668  0012F2                     l422:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;inc\CANlib.h: 503: else
  2672                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  2673  0012F2  010F               	movlb	15	; () banked
  2674  0012F4  9120               	bcf	32,0,b	;volatile
  2675  0012F6                     l423:
  2676                           
  2677                           ; BSR set to: 15
  2678                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  2679  0012F6  0100               	movlb	0	; () banked
  2680  0012F8  A3CB               	btfss	CANsendMessage@flags& (0+255),1,b
  2681  0012FA  D003               	goto	l424
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  2685  0012FC  010F               	movlb	15	; () banked
  2686  0012FE  8320               	bsf	32,1,b	;volatile
  2687  001300  D002               	goto	l3458
  2688  001302                     l424:
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;inc\CANlib.h: 507: else
  2692                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  2693  001302  010F               	movlb	15	; () banked
  2694  001304  9320               	bcf	32,1,b	;volatile
  2695  001306                     l3458:
  2696                           
  2697                           ; BSR set to: 15
  2698                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  2699  001306  C0C8  FFD9         	movff	CANsendMessage@data,fsr2l
  2700  00130A  C0C9  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2701  00130E  50DF               	movf	indf2,w,c
  2702  001310  010F               	movlb	15	; () banked
  2703  001312  6F26               	movwf	38,b	;volatile
  2704                           
  2705                           ; BSR set to: 15
  2706                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  2707  001314  0100               	movlb	0	; () banked
  2708  001316  EE20 F001          	lfsr	2,1
  2709  00131A  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2710  00131C  26D9               	addwf	fsr2l,f,c
  2711  00131E  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2712  001320  22DA               	addwfc	fsr2h,f,c
  2713  001322  50DF               	movf	indf2,w,c
  2714  001324  010F               	movlb	15	; () banked
  2715  001326  6F27               	movwf	39,b	;volatile
  2716                           
  2717                           ; BSR set to: 15
  2718                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  2719  001328  0100               	movlb	0	; () banked
  2720  00132A  EE20 F002          	lfsr	2,2
  2721  00132E  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2722  001330  26D9               	addwf	fsr2l,f,c
  2723  001332  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2724  001334  22DA               	addwfc	fsr2h,f,c
  2725  001336  50DF               	movf	indf2,w,c
  2726  001338  010F               	movlb	15	; () banked
  2727  00133A  6F28               	movwf	40,b	;volatile
  2728                           
  2729                           ; BSR set to: 15
  2730                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  2731  00133C  0100               	movlb	0	; () banked
  2732  00133E  EE20 F003          	lfsr	2,3
  2733  001342  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2734  001344  26D9               	addwf	fsr2l,f,c
  2735  001346  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2736  001348  22DA               	addwfc	fsr2h,f,c
  2737  00134A  50DF               	movf	indf2,w,c
  2738  00134C  010F               	movlb	15	; () banked
  2739  00134E  6F29               	movwf	41,b	;volatile
  2740                           
  2741                           ; BSR set to: 15
  2742                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  2743  001350  0100               	movlb	0	; () banked
  2744  001352  EE20 F004          	lfsr	2,4
  2745  001356  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2746  001358  26D9               	addwf	fsr2l,f,c
  2747  00135A  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2748  00135C  22DA               	addwfc	fsr2h,f,c
  2749  00135E  50DF               	movf	indf2,w,c
  2750  001360  010F               	movlb	15	; () banked
  2751  001362  6F2A               	movwf	42,b	;volatile
  2752                           
  2753                           ; BSR set to: 15
  2754                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  2755  001364  0100               	movlb	0	; () banked
  2756  001366  EE20 F005          	lfsr	2,5
  2757  00136A  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2758  00136C  26D9               	addwf	fsr2l,f,c
  2759  00136E  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2760  001370  22DA               	addwfc	fsr2h,f,c
  2761  001372  50DF               	movf	indf2,w,c
  2762  001374  010F               	movlb	15	; () banked
  2763  001376  6F2B               	movwf	43,b	;volatile
  2764                           
  2765                           ; BSR set to: 15
  2766                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  2767  001378  0100               	movlb	0	; () banked
  2768  00137A  EE20 F006          	lfsr	2,6
  2769  00137E  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2770  001380  26D9               	addwf	fsr2l,f,c
  2771  001382  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2772  001384  22DA               	addwfc	fsr2h,f,c
  2773  001386  50DF               	movf	indf2,w,c
  2774  001388  010F               	movlb	15	; () banked
  2775  00138A  6F2C               	movwf	44,b	;volatile
  2776                           
  2777                           ; BSR set to: 15
  2778                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  2779  00138C  0100               	movlb	0	; () banked
  2780  00138E  EE20 F007          	lfsr	2,7
  2781  001392  51C8               	movf	CANsendMessage@data& (0+255),w,b
  2782  001394  26D9               	addwf	fsr2l,f,c
  2783  001396  51C9               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2784  001398  22DA               	addwfc	fsr2h,f,c
  2785  00139A  50DF               	movf	indf2,w,c
  2786  00139C  010F               	movlb	15	; () banked
  2787  00139E  6F2D               	movwf	45,b	;volatile
  2788                           
  2789                           ; BSR set to: 15
  2790                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  2791  0013A0  010F               	movlb	15	; () banked
  2792  0013A2  8720               	bsf	32,3,b	;volatile
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;inc\CANlib.h: 521: return;
  2796  0013A4  0012               	return	
  2797  0013A6                     __end_of_CANsendMessage:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           indf2	equ	0xFDF
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812 ;; *************** function _CANisTxReady *****************
  2813 ;; Defined at:
  2814 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      unsigned char 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2828 ;;      Params:         0       0       0       0
  2829 ;;      Locals:         0       1       0       0
  2830 ;;      Temps:          0       0       0       0
  2831 ;;      Totals:         0       1       0       0
  2832 ;;Total ram usage:        1 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    4
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_remote_frame_handler
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text3
  2843  00292A                     __ptext3:
  2844                           	opt stack 0
  2845  00292A                     _CANisTxReady:
  2846                           	opt stack 25
  2847                           
  2848                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2849                           
  2850                           ; BSR set to: 15
  2851                           ;incstack = 0
  2852  00292A  0E01               	movlw	1
  2853  00292C  0100               	movlb	0	; () banked
  2854  00292E  6FC4               	movwf	_CANisTxReady$3282& (0+255),b
  2855                           
  2856                           ; BSR set to: 0
  2857  002930  010F               	movlb	15	; () banked
  2858  002932  A740               	btfss	64,3,b	;volatile
  2859  002934  D009               	goto	l576
  2860                           
  2861                           ; BSR set to: 15
  2862  002936  010F               	movlb	15	; () banked
  2863  002938  A730               	btfss	48,3,b	;volatile
  2864  00293A  D006               	goto	l576
  2865                           
  2866                           ; BSR set to: 15
  2867  00293C  010F               	movlb	15	; () banked
  2868  00293E  A720               	btfss	32,3,b	;volatile
  2869  002940  D003               	goto	l576
  2870                           
  2871                           ; BSR set to: 15
  2872  002942  0E00               	movlw	0
  2873  002944  0100               	movlb	0	; () banked
  2874  002946  6FC4               	movwf	_CANisTxReady$3282& (0+255),b
  2875  002948                     l576:
  2876  002948  0100               	movlb	0	; () banked
  2877  00294A  51C4               	movf	_CANisTxReady$3282& (0+255),w,b
  2878  00294C  0012               	return	
  2879  00294E                     __end_of_CANisTxReady:
  2880                           	opt stack 0
  2881                           tblptru	equ	0xFF8
  2882                           tblptrh	equ	0xFF7
  2883                           tblptrl	equ	0xFF6
  2884                           tablat	equ	0xFF5
  2885                           prodh	equ	0xFF4
  2886                           prodl	equ	0xFF3
  2887                           postinc0	equ	0xFEE
  2888                           wreg	equ	0xFE8
  2889                           indf2	equ	0xFDF
  2890                           fsr2h	equ	0xFDA
  2891                           fsr2l	equ	0xFD9
  2892                           status	equ	0xFD8
  2893                           
  2894 ;; *************** function _board_initialization *****************
  2895 ;; Defined at:
  2896 ;;		line 347 in file "ABS_Code.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;		None
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;		None
  2901 ;; Return value:  Size  Location     Type
  2902 ;;		None               void
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2910 ;;      Params:         0       0       0       0
  2911 ;;      Locals:         0       0       0       0
  2912 ;;      Temps:          0       0       0       0
  2913 ;;      Totals:         0       0       0       0
  2914 ;;Total ram usage:        0 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    6
  2917 ;; This function calls:
  2918 ;;		_CANInitialize
  2919 ;;		_delay_ms
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text4
  2926  002534                     __ptext4:
  2927                           	opt stack 0
  2928  002534                     _board_initialization:
  2929                           	opt stack 24
  2930                           
  2931                           ;ABS_Code.c: 349: LATA = 0x00;
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;incstack = 0
  2935  002534  0E00               	movlw	0
  2936  002536  6E89               	movwf	3977,c	;volatile
  2937                           
  2938                           ;ABS_Code.c: 350: TRISA = 0b11111101;
  2939  002538  0EFD               	movlw	253
  2940  00253A  6E92               	movwf	3986,c	;volatile
  2941                           
  2942                           ;ABS_Code.c: 351: LATB = 0x00;
  2943  00253C  0E00               	movlw	0
  2944  00253E  6E8A               	movwf	3978,c	;volatile
  2945                           
  2946                           ;ABS_Code.c: 352: TRISB = 0b11111111;
  2947  002540  6893               	setf	3987,c	;volatile
  2948                           
  2949                           ;ABS_Code.c: 353: LATC = 0x00;
  2950  002542  0E00               	movlw	0
  2951  002544  6E8B               	movwf	3979,c	;volatile
  2952                           
  2953                           ;ABS_Code.c: 354: TRISC = 0b11111100;
  2954  002546  0EFC               	movlw	252
  2955  002548  6E94               	movwf	3988,c	;volatile
  2956                           
  2957                           ;ABS_Code.c: 355: LATD = 0x00;
  2958  00254A  0E00               	movlw	0
  2959  00254C  6E8C               	movwf	3980,c	;volatile
  2960                           
  2961                           ;ABS_Code.c: 356: TRISD = 0xFF;
  2962  00254E  6895               	setf	3989,c	;volatile
  2963                           
  2964                           ;ABS_Code.c: 357: LATE = 0x00;
  2965  002550  0E00               	movlw	0
  2966  002552  6E8D               	movwf	3981,c	;volatile
  2967                           
  2968                           ;ABS_Code.c: 358: TRISE = 0xFF;
  2969  002554  6896               	setf	3990,c	;volatile
  2970                           
  2971                           ;ABS_Code.c: 360: ADCON1 = 0x11111110;
  2972  002556  0E10               	movlw	16
  2973  002558  6EC1               	movwf	4033,c	;volatile
  2974                           
  2975                           ;ABS_Code.c: 363: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2976  00255A  0E06               	movlw	6
  2977  00255C  0100               	movlb	0	; () banked
  2978  00255E  6FD2               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2979  002560  0E05               	movlw	5
  2980  002562  0100               	movlb	0	; () banked
  2981  002564  6FD3               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2982  002566  0E01               	movlw	1
  2983  002568  0100               	movlb	0	; () banked
  2984  00256A  6FD4               	movwf	CANInitialize@SJW& (0+255),b
  2985  00256C  0E03               	movlw	3
  2986  00256E  0100               	movlb	0	; () banked
  2987  002570  6FD5               	movwf	CANInitialize@BRP& (0+255),b
  2988  002572  0E9D               	movlw	157
  2989  002574  0100               	movlb	0	; () banked
  2990  002576  6FD6               	movwf	CANInitialize@flags& (0+255),b
  2991  002578  0E04               	movlw	4
  2992  00257A  EC5B  F010         	call	_CANInitialize
  2993                           
  2994                           ;ABS_Code.c: 366: PIR3bits.RXB1IF = 0;
  2995  00257E  92A4               	bcf	4004,1,c	;volatile
  2996                           
  2997                           ;ABS_Code.c: 367: PIR3bits.RXB0IF = 0;
  2998  002580  90A4               	bcf	4004,0,c	;volatile
  2999                           
  3000                           ;ABS_Code.c: 368: INTCONbits.TMR0IF = 0;
  3001  002582  94F2               	bcf	intcon,2,c	;volatile
  3002                           
  3003                           ;ABS_Code.c: 369: PIR1bits.TMR1IF = 0;
  3004  002584  909E               	bcf	3998,0,c	;volatile
  3005                           
  3006                           ;ABS_Code.c: 370: PIR2bits.TMR3IF = 0;
  3007  002586  92A1               	bcf	4001,1,c	;volatile
  3008                           
  3009                           ;ABS_Code.c: 371: INTCONbits.INT0IF = 0;
  3010  002588  92F2               	bcf	intcon,1,c	;volatile
  3011                           
  3012                           ;ABS_Code.c: 372: INTCON3bits.INT1IF = 0;
  3013  00258A  90F0               	bcf	intcon3,0,c	;volatile
  3014                           
  3015                           ;ABS_Code.c: 376: RCONbits.IPEN = 1;
  3016  00258C  8ED0               	bsf	4048,7,c	;volatile
  3017                           
  3018                           ;ABS_Code.c: 377: IPR3bits.RXB1IP = 0;
  3019  00258E  92A5               	bcf	4005,1,c	;volatile
  3020                           
  3021                           ;ABS_Code.c: 378: IPR3bits.RXB0IP = 0;
  3022  002590  90A5               	bcf	4005,0,c	;volatile
  3023                           
  3024                           ;ABS_Code.c: 379: INTCON2bits.TMR0IP = 1;
  3025  002592  84F1               	bsf	intcon2,2,c	;volatile
  3026                           
  3027                           ;ABS_Code.c: 380: INTCON3bits.INT1IP = 1;
  3028  002594  8CF0               	bsf	intcon3,6,c	;volatile
  3029                           
  3030                           ;ABS_Code.c: 381: IPR1bits.TMR1IP = 0;
  3031  002596  909F               	bcf	3999,0,c	;volatile
  3032                           
  3033                           ;ABS_Code.c: 382: IPR2bits.TMR3IP = 0;
  3034  002598  92A2               	bcf	4002,1,c	;volatile
  3035                           
  3036                           ;ABS_Code.c: 385: T0CON = 0x80;
  3037  00259A  0E80               	movlw	128
  3038  00259C  6ED5               	movwf	4053,c	;volatile
  3039                           
  3040                           ;ABS_Code.c: 392: TMR0H = 0xFF;
  3041  00259E  68D7               	setf	4055,c	;volatile
  3042                           
  3043                           ;ABS_Code.c: 393: TMR0L = 0xFE;
  3044  0025A0  0EFE               	movlw	254
  3045  0025A2  6ED6               	movwf	4054,c	;volatile
  3046                           
  3047                           ;ABS_Code.c: 394: PORTCbits.RC0 = 0;
  3048  0025A4  9082               	bcf	3970,0,c	;volatile
  3049                           
  3050                           ;ABS_Code.c: 395: brake_value_degree = 90;
  3051  0025A6  0E5A               	movlw	90
  3052  0025A8  6E3C               	movwf	_brake_value_degree,c
  3053                           
  3054                           ;ABS_Code.c: 396: T1CON = 00010000;
  3055  0025AA  0E00               	movlw	0
  3056  0025AC  6ECD               	movwf	4045,c	;volatile
  3057                           
  3058                           ;ABS_Code.c: 397: T3CON = 01010000;
  3059  0025AE  0E00               	movlw	0
  3060  0025B0  6EB1               	movwf	4017,c	;volatile
  3061                           
  3062                           ;ABS_Code.c: 398: INTCON2bits.INTEDG0 = 1;
  3063  0025B2  8CF1               	bsf	intcon2,6,c	;volatile
  3064                           
  3065                           ;ABS_Code.c: 399: INTCON2bits.INTEDG1 = 1;
  3066  0025B4  8AF1               	bsf	intcon2,5,c	;volatile
  3067                           
  3068                           ;ABS_Code.c: 402: ADCON1 = 0b01110111;
  3069  0025B6  0E77               	movlw	119
  3070  0025B8  6EC1               	movwf	4033,c	;volatile
  3071                           
  3072                           ;ABS_Code.c: 403: ADCON0bits.CHS2 = 0;
  3073  0025BA  98C2               	bcf	4034,4,c	;volatile
  3074                           
  3075                           ;ABS_Code.c: 404: ADCON0bits.CHS1 = 0;
  3076  0025BC  96C2               	bcf	4034,3,c	;volatile
  3077                           
  3078                           ;ABS_Code.c: 405: ADCON0bits.CHS0 = 0;
  3079  0025BE  94C2               	bcf	4034,2,c	;volatile
  3080                           
  3081                           ;ABS_Code.c: 406: ADCON2bits.ACQT2 = 1;
  3082  0025C0  8AC0               	bsf	4032,5,c	;volatile
  3083                           
  3084                           ;ABS_Code.c: 407: ADCON2bits.ACQT1 = 1;
  3085  0025C2  88C0               	bsf	4032,4,c	;volatile
  3086                           
  3087                           ;ABS_Code.c: 408: ADCON2bits.ACQT0 = 0;
  3088  0025C4  96C0               	bcf	4032,3,c	;volatile
  3089                           
  3090                           ;ABS_Code.c: 409: ADCON2bits.ADCS2 = 1;
  3091  0025C6  84C0               	bsf	4032,2,c	;volatile
  3092                           
  3093                           ;ABS_Code.c: 410: ADCON2bits.ADCS1 = 0;
  3094  0025C8  92C0               	bcf	4032,1,c	;volatile
  3095                           
  3096                           ;ABS_Code.c: 411: ADCON2bits.ADCS0 = 1;
  3097  0025CA  80C0               	bsf	4032,0,c	;volatile
  3098                           
  3099                           ;ABS_Code.c: 412: ADCON2bits.ADFM = 0;
  3100  0025CC  9EC0               	bcf	4032,7,c	;volatile
  3101                           
  3102                           ;ABS_Code.c: 413: ADCON0bits.ADON = 1;
  3103  0025CE  80C2               	bsf	4034,0,c	;volatile
  3104                           
  3105                           ;ABS_Code.c: 416: PIE3bits.RXB1IE = 1;
  3106  0025D0  82A3               	bsf	4003,1,c	;volatile
  3107                           
  3108                           ;ABS_Code.c: 417: PIE3bits.RXB0IE = 1;
  3109  0025D2  80A3               	bsf	4003,0,c	;volatile
  3110                           
  3111                           ;ABS_Code.c: 418: INTCONbits.TMR0IE = 1;
  3112  0025D4  8AF2               	bsf	intcon,5,c	;volatile
  3113                           
  3114                           ;ABS_Code.c: 419: PIE1bits.TMR1IE = 1;
  3115  0025D6  809D               	bsf	3997,0,c	;volatile
  3116                           
  3117                           ;ABS_Code.c: 420: PIE2bits.TMR3IE = 1;
  3118  0025D8  82A0               	bsf	4000,1,c	;volatile
  3119                           
  3120                           ;ABS_Code.c: 421: INTCONbits.INT0IE = 1;
  3121  0025DA  88F2               	bsf	intcon,4,c	;volatile
  3122                           
  3123                           ;ABS_Code.c: 422: INTCON3bits.INT1IE = 1;
  3124  0025DC  86F0               	bsf	intcon3,3,c	;volatile
  3125                           
  3126                           ;ABS_Code.c: 423: INTCONbits.GIEH = 1;
  3127  0025DE  8EF2               	bsf	intcon,7,c	;volatile
  3128                           
  3129                           ;ABS_Code.c: 424: INTCONbits.GIEL = 1;
  3130  0025E0  8CF2               	bsf	intcon,6,c	;volatile
  3131                           
  3132                           ;ABS_Code.c: 427: T1CONbits.TMR1ON = 1;
  3133  0025E2  80CD               	bsf	4045,0,c	;volatile
  3134                           
  3135                           ;ABS_Code.c: 428: T3CONbits.TMR3ON = 1;
  3136  0025E4  80B1               	bsf	4017,0,c	;volatile
  3137                           
  3138                           ;ABS_Code.c: 429: T0CONbits.TMR0ON = 1;
  3139  0025E6  8ED5               	bsf	4053,7,c	;volatile
  3140                           
  3141                           ;ABS_Code.c: 430: delay_ms(2);
  3142  0025E8  0E00               	movlw	0
  3143  0025EA  0100               	movlb	0	; () banked
  3144  0025EC  6FCB               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3145  0025EE  0E02               	movlw	2
  3146  0025F0  6FCA               	movwf	delay_ms@value_ms& (0+255),b
  3147  0025F2  EC4A  F014         	call	_delay_ms	;wreg free
  3148  0025F6  0012               	return		;funcret
  3149  0025F8                     __end_of_board_initialization:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           intcon	equ	0xFF2
  3158                           intcon2	equ	0xFF1
  3159                           intcon3	equ	0xFF0
  3160                           postinc0	equ	0xFEE
  3161                           wreg	equ	0xFE8
  3162                           indf2	equ	0xFDF
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8
  3166                           
  3167 ;; *************** function _delay_ms *****************
  3168 ;; Defined at:
  3169 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  value_ms        2   32[BANK0 ] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3183 ;;      Params:         0       2       0       0
  3184 ;;      Locals:         0       0       0       0
  3185 ;;      Temps:          0       0       0       0
  3186 ;;      Totals:         0       2       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    5
  3190 ;; This function calls:
  3191 ;;		___wmul
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;;		_board_initialization
  3195 ;;		_delay_s
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text5
  3200  002894                     __ptext5:
  3201                           	opt stack 0
  3202  002894                     _delay_ms:
  3203                           	opt stack 25
  3204                           
  3205                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3206                           
  3207                           ;incstack = 0
  3208  002894  C0DE  F0C4         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3209  002898  0100               	movlb	0	; () banked
  3210  00289A  6BC5               	clrf	(___wmul@multiplier+1)& (0+255),b
  3211  00289C  C0CA  F0C6         	movff	delay_ms@value_ms,___wmul@multiplicand
  3212  0028A0  C0CB  F0C7         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3213  0028A4  EC67  F014         	call	___wmul	;wreg free
  3214  0028A8  C0C4  F074         	movff	?___wmul,_clock_counter_reference	;volatile
  3215  0028AC  C0C5  F075         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3216                           
  3217                           ;src\delay.c: 75: while (clock_counter_reference) {
  3218  0028B0  D007               	goto	l589
  3219  0028B2                     l3492:
  3220                           
  3221                           ;src\delay.c: 85: _delay(240);
  3222  0028B2  0E50               	movlw	80
  3223  0028B4                     u4857:
  3224  0028B4  2EE8               	decfsz	wreg,f,c
  3225  0028B6  D7FE               	goto	u4857
  3226                           
  3227                           ;src\delay.c: 88: clock_counter_reference--;
  3228  0028B8  0100               	movlb	0	; () banked
  3229  0028BA  0774               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3230  0028BC  A0D8               	btfss	status,0,c
  3231  0028BE  0775               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3232  0028C0                     l589:
  3233  0028C0  0100               	movlb	0	; () banked
  3234  0028C2  5174               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3235  0028C4  0100               	movlb	0	; () banked
  3236  0028C6  1175               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3237  0028C8  B4D8               	btfsc	status,2,c
  3238  0028CA  0012               	return	
  3239  0028CC  D7F2               	goto	l3492
  3240  0028CE                     __end_of_delay_ms:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           intcon2	equ	0xFF1
  3250                           intcon3	equ	0xFF0
  3251                           postinc0	equ	0xFEE
  3252                           wreg	equ	0xFE8
  3253                           indf2	equ	0xFDF
  3254                           fsr2h	equ	0xFDA
  3255                           fsr2l	equ	0xFD9
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function ___wmul *****************
  3259 ;; Defined at:
  3260 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  multiplier      2   26[BANK0 ] unsigned int 
  3263 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  product         2   30[BANK0 ] unsigned int 
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  2   26[BANK0 ] unsigned int 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, prodl, prodh
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3275 ;;      Params:         0       4       0       0
  3276 ;;      Locals:         0       2       0       0
  3277 ;;      Temps:          0       0       0       0
  3278 ;;      Totals:         0       6       0       0
  3279 ;;Total ram usage:        6 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    4
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_delay_ms
  3286 ;;		_remote_frame_handler
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text6
  3291  0028CE                     __ptext6:
  3292                           	opt stack 0
  3293  0028CE                     ___wmul:
  3294                           	opt stack 25
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;incstack = 0
  3298  0028CE  0100               	movlb	0	; () banked
  3299  0028D0  51C4               	movf	___wmul@multiplier& (0+255),w,b
  3300  0028D2  0100               	movlb	0	; () banked
  3301  0028D4  03C6               	mulwf	___wmul@multiplicand& (0+255),b
  3302  0028D6  CFF3 F0C8          	movff	prodl,___wmul@product
  3303  0028DA  CFF4 F0C9          	movff	prodh,___wmul@product+1
  3304  0028DE  0100               	movlb	0	; () banked
  3305  0028E0  51C4               	movf	___wmul@multiplier& (0+255),w,b
  3306  0028E2  0100               	movlb	0	; () banked
  3307  0028E4  03C7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3308  0028E6  50F3               	movf	prodl,w,c
  3309  0028E8  0100               	movlb	0	; () banked
  3310  0028EA  27C9               	addwf	(___wmul@product+1)& (0+255),f,b
  3311  0028EC  0100               	movlb	0	; () banked
  3312  0028EE  51C5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3313  0028F0  0100               	movlb	0	; () banked
  3314  0028F2  03C6               	mulwf	___wmul@multiplicand& (0+255),b
  3315  0028F4  50F3               	movf	prodl,w,c
  3316  0028F6  0100               	movlb	0	; () banked
  3317  0028F8  27C9               	addwf	(___wmul@product+1)& (0+255),f,b
  3318                           
  3319                           ; BSR set to: 0
  3320  0028FA  C0C8  F0C4         	movff	___wmul@product,?___wmul
  3321  0028FE  C0C9  F0C5         	movff	___wmul@product+1,?___wmul+1
  3322  002902  0012               	return	
  3323  002904                     __end_of___wmul:
  3324                           	opt stack 0
  3325                           tblptru	equ	0xFF8
  3326                           tblptrh	equ	0xFF7
  3327                           tblptrl	equ	0xFF6
  3328                           tablat	equ	0xFF5
  3329                           prodh	equ	0xFF4
  3330                           prodl	equ	0xFF3
  3331                           intcon	equ	0xFF2
  3332                           intcon2	equ	0xFF1
  3333                           intcon3	equ	0xFF0
  3334                           postinc0	equ	0xFEE
  3335                           wreg	equ	0xFE8
  3336                           indf2	equ	0xFDF
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8
  3340                           
  3341 ;; *************** function _CANInitialize *****************
  3342 ;; Defined at:
  3343 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  propSeg         1    wreg     unsigned char 
  3346 ;;  phaseSeg1       1   40[BANK0 ] unsigned char 
  3347 ;;  phaseSeg2       1   41[BANK0 ] unsigned char 
  3348 ;;  SJW             1   42[BANK0 ] unsigned char 
  3349 ;;  BRP             1   43[BANK0 ] unsigned char 
  3350 ;;  flags           1   44[BANK0 ] enum E16844
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  propSeg         1   49[BANK0 ] unsigned char 
  3353 ;;  FilterConfig    1   51[BANK0 ] unsigned char 
  3354 ;;  FilterConfig    1   50[BANK0 ] unsigned char 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;		None               void
  3357 ;; Registers used:
  3358 ;;		wreg, status,2, status,0, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3364 ;;      Params:         0       5       0       0
  3365 ;;      Locals:         0       3       0       0
  3366 ;;      Temps:          0       4       0       0
  3367 ;;      Totals:         0      12       0       0
  3368 ;;Total ram usage:       12 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    5
  3371 ;; This function calls:
  3372 ;;		_CANOperationMode
  3373 ;;		_CANSetFilter
  3374 ;;		_CANSetMask
  3375 ;; This function is called by:
  3376 ;;		_board_initialization
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text7
  3381  0020B6                     __ptext7:
  3382                           	opt stack 0
  3383  0020B6                     _CANInitialize:
  3384                           	opt stack 24
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;incstack = 0
  3388                           ;CANInitialize@propSeg stored from wreg
  3389  0020B6  0100               	movlb	0	; () banked
  3390  0020B8  6FDB               	movwf	CANInitialize@propSeg& (0+255),b
  3391                           
  3392                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  3393                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  3394                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  3395  0020BA  0E80               	movlw	128
  3396  0020BC  ECA7  F014         	call	_CANOperationMode
  3397                           
  3398                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  3399  0020C0  0E00               	movlw	0
  3400  0020C2  6E70               	movwf	3952,c	;volatile
  3401                           
  3402                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  3403  0020C4  0E00               	movlw	0
  3404  0020C6  6E71               	movwf	3953,c	;volatile
  3405                           
  3406                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  3407  0020C8  0E00               	movlw	0
  3408  0020CA  6E72               	movwf	3954,c	;volatile
  3409                           
  3410                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  3411  0020CC  0100               	movlb	0	; () banked
  3412  0020CE  41D4               	rrncf	CANInitialize@SJW& (0+255),w,b
  3413  0020D0  42E8               	rrncf	wreg,f,c
  3414  0020D2  0BC0               	andlw	192
  3415  0020D4  0100               	movlb	0	; () banked
  3416  0020D6  6FD4               	movwf	CANInitialize@SJW& (0+255),b
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  3420  0020D8  0100               	movlb	0	; () banked
  3421  0020DA  51D4               	movf	CANInitialize@SJW& (0+255),w,b
  3422  0020DC  1270               	iorwf	3952,f,c	;volatile
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  3426  0020DE  0100               	movlb	0	; () banked
  3427  0020E0  51D5               	movf	CANInitialize@BRP& (0+255),w,b
  3428  0020E2  1270               	iorwf	3952,f,c	;volatile
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  3432  0020E4  0100               	movlb	0	; () banked
  3433  0020E6  51DB               	movf	CANInitialize@propSeg& (0+255),w,b
  3434  0020E8  1271               	iorwf	3953,f,c	;volatile
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  3438  0020EA  0100               	movlb	0	; () banked
  3439  0020EC  39D2               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3440  0020EE  42E8               	rrncf	wreg,f,c
  3441  0020F0  0BF8               	andlw	248
  3442  0020F2  0100               	movlb	0	; () banked
  3443  0020F4  6FD2               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  3447  0020F6  0100               	movlb	0	; () banked
  3448  0020F8  51D2               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3449  0020FA  1271               	iorwf	3953,f,c	;volatile
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3453  0020FC  0100               	movlb	0	; () banked
  3454  0020FE  A5D6               	btfss	CANInitialize@flags& (0+255),2,b
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  3458  002100  8C71               	bsf	3953,6,c	;volatile
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3462  002102  0100               	movlb	0	; () banked
  3463  002104  B1D6               	btfsc	CANInitialize@flags& (0+255),0,b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  3467  002106  8E71               	bsf	3953,7,c	;volatile
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  3471                           
  3472                           ; BSR set to: 0
  3473  002108  0100               	movlb	0	; () banked
  3474  00210A  51D3               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3475  00210C  1272               	iorwf	3954,f,c	;volatile
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3479  00210E  0100               	movlb	0	; () banked
  3480  002110  B3D6               	btfsc	CANInitialize@flags& (0+255),1,b
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  3484  002112  8C72               	bsf	3954,6,c	;volatile
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3488                           
  3489                           ; BSR set to: 0
  3490  002114  0100               	movlb	0	; () banked
  3491  002116  51D6               	movf	CANInitialize@flags& (0+255),w,b
  3492  002118  0B60               	andlw	96
  3493  00211A  6E60               	movwf	3936,c	;volatile
  3494                           
  3495                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3496  00211C  0100               	movlb	0	; () banked
  3497  00211E  51D6               	movf	CANInitialize@flags& (0+255),w,b
  3498  002120  0B10               	andlw	16
  3499  002122  0AFF               	xorlw	255
  3500  002124  B4D8               	btfsc	status,2,c
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  3504  002126  8460               	bsf	3936,2,c	;volatile
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  3508  002128  CF60 FF50          	movff	3936,3920	;volatile
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3512  00212C  0E00               	movlw	0
  3513  00212E  0100               	movlb	0	; () banked
  3514  002130  6FC4               	movwf	CANSetMask@mask& (0+255),b
  3515  002132  0E00               	movlw	0
  3516  002134  6FC5               	movwf	(CANSetMask@mask+1)& (0+255),b
  3517  002136  0E00               	movlw	0
  3518  002138  6FC6               	movwf	(CANSetMask@mask+2)& (0+255),b
  3519  00213A  0E00               	movlw	0
  3520  00213C  6FC7               	movwf	(CANSetMask@mask+3)& (0+255),b
  3521  00213E  0EF7               	movlw	247
  3522  002140  0100               	movlb	0	; () banked
  3523  002142  6FC8               	movwf	CANSetMask@type& (0+255),b
  3524  002144  0E01               	movlw	1
  3525  002146  EC59  F00C         	call	_CANSetMask
  3526                           
  3527                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3528  00214A  0E00               	movlw	0
  3529  00214C  0100               	movlb	0	; () banked
  3530  00214E  6FC4               	movwf	CANSetMask@mask& (0+255),b
  3531  002150  0E00               	movlw	0
  3532  002152  6FC5               	movwf	(CANSetMask@mask+1)& (0+255),b
  3533  002154  0E00               	movlw	0
  3534  002156  6FC6               	movwf	(CANSetMask@mask+2)& (0+255),b
  3535  002158  0E00               	movlw	0
  3536  00215A  6FC7               	movwf	(CANSetMask@mask+3)& (0+255),b
  3537  00215C  0EF7               	movlw	247
  3538  00215E  0100               	movlb	0	; () banked
  3539  002160  6FC8               	movwf	CANSetMask@type& (0+255),b
  3540  002162  0E02               	movlw	2
  3541  002164  EC59  F00C         	call	_CANSetMask
  3542                           
  3543                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3544  002168  D00F               	goto	l3240
  3545  00216A                     l3234:
  3546                           
  3547                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3548  00216A  0EF7               	movlw	247
  3549  00216C  0100               	movlb	0	; () banked
  3550  00216E  6FDC               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3551  002170  D007               	goto	l3236
  3552  002172                     l378:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3556  002172  0100               	movlb	0	; () banked
  3557  002174  69DC               	setf	CANInitialize@FilterConfig1& (0+255),b
  3558                           
  3559                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3560  002176  0100               	movlb	0	; () banked
  3561  002178  69DD               	setf	CANInitialize@FilterConfig2& (0+255),b
  3562                           
  3563                           ;inc\CANlib.h: 274: break;
  3564  00217A  D028               	goto	l3242
  3565  00217C                     l379:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3569  00217C  0100               	movlb	0	; () banked
  3570  00217E  69DC               	setf	CANInitialize@FilterConfig1& (0+255),b
  3571  002180                     l3236:
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3575  002180  0EF7               	movlw	247
  3576  002182  0100               	movlb	0	; () banked
  3577  002184  6FDD               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;inc\CANlib.h: 279: }
  3581                           
  3582                           ;inc\CANlib.h: 278: break;
  3583  002186  D022               	goto	l3242
  3584  002188                     l3240:
  3585  002188  0E9F               	movlw	159
  3586  00218A  0100               	movlb	0	; () banked
  3587  00218C  6FD7               	movwf	??_CANInitialize& (0+255),b
  3588  00218E  0EFF               	movlw	255
  3589  002190  0100               	movlb	0	; () banked
  3590  002192  6FD8               	movwf	(??_CANInitialize+1)& (0+255),b
  3591  002194  0100               	movlb	0	; () banked
  3592  002196  51D6               	movf	CANInitialize@flags& (0+255),w,b
  3593  002198  0B60               	andlw	96
  3594  00219A  0100               	movlb	0	; () banked
  3595  00219C  6FD9               	movwf	(??_CANInitialize+2)& (0+255),b
  3596  00219E  6BDA               	clrf	(??_CANInitialize+3)& (0+255),b
  3597  0021A0  0100               	movlb	0	; () banked
  3598  0021A2  51D7               	movf	??_CANInitialize& (0+255),w,b
  3599  0021A4  0100               	movlb	0	; () banked
  3600  0021A6  13D9               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3601  0021A8  0100               	movlb	0	; () banked
  3602  0021AA  51D8               	movf	(??_CANInitialize+1)& (0+255),w,b
  3603  0021AC  0100               	movlb	0	; () banked
  3604  0021AE  13DA               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3605                           
  3606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3607                           ; Switch size 1, requested type "space"
  3608                           ; Number of cases is 1, Range of values is 0 to 0
  3609                           ; switch strategies available:
  3610                           ; Name         Instructions Cycles
  3611                           ; simple_byte            4     3 (average)
  3612                           ;	Chosen strategy is simple_byte
  3613  0021B0  0100               	movlb	0	; () banked
  3614  0021B2  51DA               	movf	(??_CANInitialize+3)& (0+255),w,b
  3615  0021B4  0A00               	xorlw	0	; case 0
  3616  0021B6  A4D8               	btfss	status,2,c
  3617  0021B8  D7E1               	goto	l379
  3618                           
  3619                           ; BSR set to: 0
  3620                           ; Switch size 1, requested type "space"
  3621                           ; Number of cases is 2, Range of values is 191 to 223
  3622                           ; switch strategies available:
  3623                           ; Name         Instructions Cycles
  3624                           ; simple_byte            7     4 (average)
  3625                           ;	Chosen strategy is simple_byte
  3626  0021BA  0100               	movlb	0	; () banked
  3627  0021BC  51D9               	movf	(??_CANInitialize+2)& (0+255),w,b
  3628  0021BE  0ABF               	xorlw	191	; case 191
  3629  0021C0  B4D8               	btfsc	status,2,c
  3630  0021C2  D7D7               	goto	l378
  3631  0021C4  0A60               	xorlw	96	; case 223
  3632  0021C6  B4D8               	btfsc	status,2,c
  3633  0021C8  D7D0               	goto	l3234
  3634  0021CA  D7D8               	goto	l379
  3635  0021CC                     l3242:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3639  0021CC  0E00               	movlw	0
  3640  0021CE  0100               	movlb	0	; () banked
  3641  0021D0  6FC4               	movwf	CANSetFilter@filter& (0+255),b
  3642  0021D2  0E00               	movlw	0
  3643  0021D4  6FC5               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3644  0021D6  0E00               	movlw	0
  3645  0021D8  6FC6               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3646  0021DA  0E00               	movlw	0
  3647  0021DC  6FC7               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3648  0021DE  C0DC  F0C8         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3649  0021E2  0E00               	movlw	0
  3650  0021E4  EC8A  F000         	call	_CANSetFilter
  3651                           
  3652                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3653  0021E8  0E00               	movlw	0
  3654  0021EA  0100               	movlb	0	; () banked
  3655  0021EC  6FC4               	movwf	CANSetFilter@filter& (0+255),b
  3656  0021EE  0E00               	movlw	0
  3657  0021F0  6FC5               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3658  0021F2  0E00               	movlw	0
  3659  0021F4  6FC6               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3660  0021F6  0E00               	movlw	0
  3661  0021F8  6FC7               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3662  0021FA  C0DC  F0C8         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3663  0021FE  0E01               	movlw	1
  3664  002200  EC8A  F000         	call	_CANSetFilter
  3665                           
  3666                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3667  002204  0E00               	movlw	0
  3668  002206  0100               	movlb	0	; () banked
  3669  002208  6FC4               	movwf	CANSetFilter@filter& (0+255),b
  3670  00220A  0E00               	movlw	0
  3671  00220C  6FC5               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3672  00220E  0E00               	movlw	0
  3673  002210  6FC6               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3674  002212  0E00               	movlw	0
  3675  002214  6FC7               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3676  002216  C0DD  F0C8         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3677  00221A  0E02               	movlw	2
  3678  00221C  EC8A  F000         	call	_CANSetFilter
  3679                           
  3680                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3681  002220  0E00               	movlw	0
  3682  002222  0100               	movlb	0	; () banked
  3683  002224  6FC4               	movwf	CANSetFilter@filter& (0+255),b
  3684  002226  0E00               	movlw	0
  3685  002228  6FC5               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3686  00222A  0E00               	movlw	0
  3687  00222C  6FC6               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3688  00222E  0E00               	movlw	0
  3689  002230  6FC7               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3690  002232  C0DD  F0C8         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3691  002236  0E03               	movlw	3
  3692  002238  EC8A  F000         	call	_CANSetFilter
  3693                           
  3694                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3695  00223C  0E00               	movlw	0
  3696  00223E  0100               	movlb	0	; () banked
  3697  002240  6FC4               	movwf	CANSetFilter@filter& (0+255),b
  3698  002242  0E00               	movlw	0
  3699  002244  6FC5               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3700  002246  0E00               	movlw	0
  3701  002248  6FC6               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3702  00224A  0E00               	movlw	0
  3703  00224C  6FC7               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3704  00224E  C0DD  F0C8         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3705  002252  0E04               	movlw	4
  3706  002254  EC8A  F000         	call	_CANSetFilter
  3707                           
  3708                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3709  002258  0E00               	movlw	0
  3710  00225A  0100               	movlb	0	; () banked
  3711  00225C  6FC4               	movwf	CANSetFilter@filter& (0+255),b
  3712  00225E  0E00               	movlw	0
  3713  002260  6FC5               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3714  002262  0E00               	movlw	0
  3715  002264  6FC6               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3716  002266  0E00               	movlw	0
  3717  002268  6FC7               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3718  00226A  C0DD  F0C8         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3719  00226E  0E05               	movlw	5
  3720  002270  EC8A  F000         	call	_CANSetFilter
  3721                           
  3722                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  3723  002274  0E00               	movlw	0
  3724  002276  ECA7  F014         	call	_CANOperationMode
  3725  00227A  0012               	return		;funcret
  3726  00227C                     __end_of_CANInitialize:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           intcon2	equ	0xFF1
  3736                           intcon3	equ	0xFF0
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           indf2	equ	0xFDF
  3740                           fsr2h	equ	0xFDA
  3741                           fsr2l	equ	0xFD9
  3742                           status	equ	0xFD8
  3743                           
  3744 ;; *************** function _CANSetMask *****************
  3745 ;; Defined at:
  3746 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  numBuffer       1    wreg     enum E16878
  3749 ;;  mask            4   26[BANK0 ] unsigned long 
  3750 ;;  type            1   30[BANK0 ] enum E16844
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  numBuffer       1   35[BANK0 ] enum E16878
  3753 ;;  tamp            4   36[BANK0 ] unsigned long 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;		None               void
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3763 ;;      Params:         0       5       0       0
  3764 ;;      Locals:         0       5       0       0
  3765 ;;      Temps:          0       4       0       0
  3766 ;;      Totals:         0      14       0       0
  3767 ;;Total ram usage:       14 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    4
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_CANInitialize
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text8
  3778  0018B2                     __ptext8:
  3779                           	opt stack 0
  3780  0018B2                     _CANSetMask:
  3781                           	opt stack 24
  3782                           
  3783                           ;incstack = 0
  3784                           ;CANSetMask@numBuffer stored from wreg
  3785  0018B2  0100               	movlb	0	; () banked
  3786  0018B4  6FCD               	movwf	CANSetMask@numBuffer& (0+255),b
  3787                           
  3788                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3789  0018B6  0100               	movlb	0	; () banked
  3790  0018B8  05CD               	decf	CANSetMask@numBuffer& (0+255),w,b
  3791  0018BA  A4D8               	btfss	status,2,c
  3792  0018BC  D056               	goto	l2798
  3793                           
  3794                           ; BSR set to: 0
  3795  0018BE  0100               	movlb	0	; () banked
  3796  0018C0  29C8               	incf	CANSetMask@type& (0+255),w,b
  3797  0018C2  A4D8               	btfss	status,2,c
  3798  0018C4  D052               	goto	l2798
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;inc\CANlib.h: 645: {
  3802                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  3803  0018C6  C0C4  F0C9         	movff	CANSetMask@mask,??_CANSetMask
  3804  0018CA  C0C5  F0CA         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3805  0018CE  C0C6  F0CB         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3806  0018D2  C0C7  F0CC         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3807  0018D6  0E04               	movlw	4
  3808  0018D8  D006               	goto	u2390
  3809  0018DA                     u2395:
  3810  0018DA  0100               	movlb	0	; () banked
  3811  0018DC  90D8               	bcf	status,0,c
  3812  0018DE  33CC               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3813  0018E0  33CB               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3814  0018E2  33CA               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3815  0018E4  33C9               	rrcf	??_CANSetMask& (0+255),f,b
  3816  0018E6                     u2390:
  3817  0018E6  2EE8               	decfsz	wreg,f,c
  3818  0018E8  D7F8               	goto	u2395
  3819  0018EA  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  3820  0018EE  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3821  0018F2  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3822  0018F6  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  3826  0018FA  0100               	movlb	0	; () banked
  3827  0018FC  51CE               	movf	CANSetMask@tamp& (0+255),w,b
  3828  0018FE  0100               	movlb	0	; () banked
  3829  001900  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  3830  001902  6BCF               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3831  001904  6BD0               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3832  001906  6BD1               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  3836  001908  C0CE  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  3840  00190C  0E07               	movlw	7
  3841  00190E  0100               	movlb	0	; () banked
  3842  001910  15C4               	andwf	CANSetMask@mask& (0+255),w,b
  3843  001912  0100               	movlb	0	; () banked
  3844  001914  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  3845  001916  0E00               	movlw	0
  3846  001918  0100               	movlb	0	; () banked
  3847  00191A  15C5               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3848  00191C  0100               	movlb	0	; () banked
  3849  00191E  6FCF               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3850  001920  0E00               	movlw	0
  3851  001922  0100               	movlb	0	; () banked
  3852  001924  15C6               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3853  001926  0100               	movlb	0	; () banked
  3854  001928  6FD0               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3855  00192A  0E00               	movlw	0
  3856  00192C  0100               	movlb	0	; () banked
  3857  00192E  15C7               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3858  001930  0100               	movlb	0	; () banked
  3859  001932  6FD1               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  3863  001934  C0CE  F0C9         	movff	CANSetMask@tamp,??_CANSetMask
  3864  001938  C0CF  F0CA         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3865  00193C  C0D0  F0CB         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3866  001940  C0D1  F0CC         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3867  001944  0E05               	movlw	5
  3868  001946                     u2405:
  3869  001946  90D8               	bcf	status,0,c
  3870  001948  0100               	movlb	0	; () banked
  3871  00194A  37C9               	rlcf	??_CANSetMask& (0+255),f,b
  3872  00194C  37CA               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3873  00194E  37CB               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3874  001950  37CC               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3875  001952  2EE8               	decfsz	wreg,f,c
  3876  001954  D7F8               	goto	u2405
  3877  001956  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  3878  00195A  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3879  00195E  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3880  001962  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  3884  001966  C0CE  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3885  00196A                     l2798:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;inc\CANlib.h: 653: }
  3889                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3890  00196A  0E02               	movlw	2
  3891  00196C  0100               	movlb	0	; () banked
  3892  00196E  19CD               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3893  001970  A4D8               	btfss	status,2,c
  3894  001972  D056               	goto	l2814
  3895                           
  3896                           ; BSR set to: 0
  3897  001974  0100               	movlb	0	; () banked
  3898  001976  29C8               	incf	CANSetMask@type& (0+255),w,b
  3899  001978  A4D8               	btfss	status,2,c
  3900  00197A  D052               	goto	l2814
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;inc\CANlib.h: 656: {
  3904                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  3905  00197C  C0C4  F0C9         	movff	CANSetMask@mask,??_CANSetMask
  3906  001980  C0C5  F0CA         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3907  001984  C0C6  F0CB         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3908  001988  C0C7  F0CC         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3909  00198C  0E04               	movlw	4
  3910  00198E  D006               	goto	u2430
  3911  001990                     u2435:
  3912  001990  0100               	movlb	0	; () banked
  3913  001992  90D8               	bcf	status,0,c
  3914  001994  33CC               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3915  001996  33CB               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3916  001998  33CA               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3917  00199A  33C9               	rrcf	??_CANSetMask& (0+255),f,b
  3918  00199C                     u2430:
  3919  00199C  2EE8               	decfsz	wreg,f,c
  3920  00199E  D7F8               	goto	u2435
  3921  0019A0  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  3922  0019A4  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3923  0019A8  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3924  0019AC  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  3928  0019B0  0100               	movlb	0	; () banked
  3929  0019B2  51CE               	movf	CANSetMask@tamp& (0+255),w,b
  3930  0019B4  0100               	movlb	0	; () banked
  3931  0019B6  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  3932  0019B8  6BCF               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3933  0019BA  6BD0               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3934  0019BC  6BD1               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  3938  0019BE  C0CE  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  3942  0019C2  0E07               	movlw	7
  3943  0019C4  0100               	movlb	0	; () banked
  3944  0019C6  15C4               	andwf	CANSetMask@mask& (0+255),w,b
  3945  0019C8  0100               	movlb	0	; () banked
  3946  0019CA  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  3947  0019CC  0E00               	movlw	0
  3948  0019CE  0100               	movlb	0	; () banked
  3949  0019D0  15C5               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3950  0019D2  0100               	movlb	0	; () banked
  3951  0019D4  6FCF               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3952  0019D6  0E00               	movlw	0
  3953  0019D8  0100               	movlb	0	; () banked
  3954  0019DA  15C6               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3955  0019DC  0100               	movlb	0	; () banked
  3956  0019DE  6FD0               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3957  0019E0  0E00               	movlw	0
  3958  0019E2  0100               	movlb	0	; () banked
  3959  0019E4  15C7               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3960  0019E6  0100               	movlb	0	; () banked
  3961  0019E8  6FD1               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  3965  0019EA  C0CE  F0C9         	movff	CANSetMask@tamp,??_CANSetMask
  3966  0019EE  C0CF  F0CA         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3967  0019F2  C0D0  F0CB         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3968  0019F6  C0D1  F0CC         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3969  0019FA  0E05               	movlw	5
  3970  0019FC                     u2445:
  3971  0019FC  90D8               	bcf	status,0,c
  3972  0019FE  0100               	movlb	0	; () banked
  3973  001A00  37C9               	rlcf	??_CANSetMask& (0+255),f,b
  3974  001A02  37CA               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3975  001A04  37CB               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3976  001A06  37CC               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3977  001A08  2EE8               	decfsz	wreg,f,c
  3978  001A0A  D7F8               	goto	u2445
  3979  001A0C  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  3980  001A10  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3981  001A14  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3982  001A18  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  3986  001A1C  C0CE  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3987  001A20                     l2814:
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;inc\CANlib.h: 664: }
  3991                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3992  001A20  0100               	movlb	0	; () banked
  3993  001A22  05CD               	decf	CANSetMask@numBuffer& (0+255),w,b
  3994  001A24  A4D8               	btfss	status,2,c
  3995  001A26  D087               	goto	l2846
  3996                           
  3997                           ; BSR set to: 0
  3998  001A28  0EF7               	movlw	247
  3999  001A2A  0100               	movlb	0	; () banked
  4000  001A2C  19C8               	xorwf	CANSetMask@type& (0+255),w,b
  4001  001A2E  A4D8               	btfss	status,2,c
  4002  001A30  D082               	goto	l2846
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;inc\CANlib.h: 667: {
  4006                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  4007  001A32  0100               	movlb	0	; () banked
  4008  001A34  51C4               	movf	CANSetMask@mask& (0+255),w,b
  4009  001A36  0100               	movlb	0	; () banked
  4010  001A38  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  4011  001A3A  6BCF               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4012  001A3C  6BD0               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4013  001A3E  6BD1               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  4017  001A40  C0CE  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  4021  001A44  0E00               	movlw	0
  4022  001A46  0100               	movlb	0	; () banked
  4023  001A48  15C4               	andwf	CANSetMask@mask& (0+255),w,b
  4024  001A4A  0100               	movlb	0	; () banked
  4025  001A4C  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  4026  001A4E  0EFF               	movlw	255
  4027  001A50  0100               	movlb	0	; () banked
  4028  001A52  15C5               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4029  001A54  0100               	movlb	0	; () banked
  4030  001A56  6FCF               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4031  001A58  0E00               	movlw	0
  4032  001A5A  0100               	movlb	0	; () banked
  4033  001A5C  15C6               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4034  001A5E  0100               	movlb	0	; () banked
  4035  001A60  6FD0               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4036  001A62  0E00               	movlw	0
  4037  001A64  0100               	movlb	0	; () banked
  4038  001A66  15C7               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4039  001A68  0100               	movlb	0	; () banked
  4040  001A6A  6FD1               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  4044  001A6C  C0CE  F0C9         	movff	CANSetMask@tamp,??_CANSetMask
  4045  001A70  C0CF  F0CA         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4046  001A74  C0D0  F0CB         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4047  001A78  C0D1  F0CC         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4048  001A7C  C0CA  F0C9         	movff	??_CANSetMask+1,??_CANSetMask
  4049  001A80  C0CB  F0CA         	movff	??_CANSetMask+2,??_CANSetMask+1
  4050  001A84  C0CC  F0CB         	movff	??_CANSetMask+3,??_CANSetMask+2
  4051  001A88  0100               	movlb	0	; () banked
  4052  001A8A  6BCC               	clrf	(??_CANSetMask+3)& (0+255),b
  4053  001A8C  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  4054  001A90  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4055  001A94  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4056  001A98  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  4060  001A9C  C0CE  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  4064  001AA0  0100               	movlb	0	; () banked
  4065  001AA2  A1C6               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4066  001AA4  D003               	goto	l452
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  4070  001AA6  010F               	movlb	15	; () banked
  4071  001AA8  8119               	bsf	25,0,b	;volatile
  4072  001AAA  D002               	goto	l453
  4073  001AAC                     l452:
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;inc\CANlib.h: 677: else
  4077                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  4078  001AAC  010F               	movlb	15	; () banked
  4079  001AAE  9119               	bcf	25,0,b	;volatile
  4080  001AB0                     l453:
  4081                           
  4082                           ; BSR set to: 15
  4083                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  4084  001AB0  0100               	movlb	0	; () banked
  4085  001AB2  A3C6               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4086  001AB4  D003               	goto	l454
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  4090  001AB6  010F               	movlb	15	; () banked
  4091  001AB8  8319               	bsf	25,1,b	;volatile
  4092  001ABA  D002               	goto	l455
  4093  001ABC                     l454:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;inc\CANlib.h: 682: else
  4097                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  4098  001ABC  010F               	movlb	15	; () banked
  4099  001ABE  9319               	bcf	25,1,b	;volatile
  4100  001AC0                     l455:
  4101                           
  4102                           ; BSR set to: 15
  4103                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  4104  001AC0  0100               	movlb	0	; () banked
  4105  001AC2  A5C6               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4106  001AC4  D003               	goto	l456
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  4110  001AC6  010F               	movlb	15	; () banked
  4111  001AC8  8B19               	bsf	25,5,b	;volatile
  4112  001ACA  D002               	goto	l457
  4113  001ACC                     l456:
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;inc\CANlib.h: 687: else
  4117                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  4118  001ACC  010F               	movlb	15	; () banked
  4119  001ACE  9B19               	bcf	25,5,b	;volatile
  4120  001AD0                     l457:
  4121                           
  4122                           ; BSR set to: 15
  4123                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  4124  001AD0  0100               	movlb	0	; () banked
  4125  001AD2  A7C6               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4126  001AD4  D003               	goto	l458
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  4130  001AD6  010F               	movlb	15	; () banked
  4131  001AD8  8D19               	bsf	25,6,b	;volatile
  4132  001ADA  D002               	goto	l459
  4133  001ADC                     l458:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 692: else
  4137                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  4138  001ADC  010F               	movlb	15	; () banked
  4139  001ADE  9D19               	bcf	25,6,b	;volatile
  4140  001AE0                     l459:
  4141                           
  4142                           ; BSR set to: 15
  4143                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  4144  001AE0  0100               	movlb	0	; () banked
  4145  001AE2  A9C6               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4146  001AE4  D003               	goto	l460
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  4150  001AE6  010F               	movlb	15	; () banked
  4151  001AE8  8F19               	bsf	25,7,b	;volatile
  4152  001AEA  D002               	goto	l2840
  4153  001AEC                     l460:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 697: else
  4157                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  4158  001AEC  010F               	movlb	15	; () banked
  4159  001AEE  9F19               	bcf	25,7,b	;volatile
  4160  001AF0                     l2840:
  4161                           
  4162                           ; BSR set to: 15
  4163                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  4164  001AF0  C0C4  F0C9         	movff	CANSetMask@mask,??_CANSetMask
  4165  001AF4  C0C5  F0CA         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4166  001AF8  C0C6  F0CB         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4167  001AFC  C0C7  F0CC         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4168  001B00  0E16               	movlw	22
  4169  001B02  D006               	goto	u2520
  4170  001B04                     u2525:
  4171  001B04  0100               	movlb	0	; () banked
  4172  001B06  90D8               	bcf	status,0,c
  4173  001B08  33CC               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4174  001B0A  33CB               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4175  001B0C  33CA               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4176  001B0E  33C9               	rrcf	??_CANSetMask& (0+255),f,b
  4177  001B10                     u2520:
  4178  001B10  2EE8               	decfsz	wreg,f,c
  4179  001B12  D7F8               	goto	u2525
  4180  001B14  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  4181  001B18  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4182  001B1C  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4183  001B20  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  4187  001B24  0100               	movlb	0	; () banked
  4188  001B26  51CE               	movf	CANSetMask@tamp& (0+255),w,b
  4189  001B28  0100               	movlb	0	; () banked
  4190  001B2A  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  4191  001B2C  6BCF               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4192  001B2E  6BD0               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4193  001B30  6BD1               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  4197  001B32  C0CE  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4198  001B36                     l2846:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;inc\CANlib.h: 703: }
  4202                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4203  001B36  0E02               	movlw	2
  4204  001B38  0100               	movlb	0	; () banked
  4205  001B3A  19CD               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4206  001B3C  A4D8               	btfss	status,2,c
  4207  001B3E  0012               	return	
  4208                           
  4209                           ; BSR set to: 0
  4210  001B40  0EF7               	movlw	247
  4211  001B42  0100               	movlb	0	; () banked
  4212  001B44  19C8               	xorwf	CANSetMask@type& (0+255),w,b
  4213  001B46  A4D8               	btfss	status,2,c
  4214  001B48  0012               	return	
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 706: {
  4218                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  4219  001B4A  0100               	movlb	0	; () banked
  4220  001B4C  51C4               	movf	CANSetMask@mask& (0+255),w,b
  4221  001B4E  0100               	movlb	0	; () banked
  4222  001B50  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  4223  001B52  6BCF               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4224  001B54  6BD0               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4225  001B56  6BD1               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  4229  001B58  C0CE  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  4233  001B5C  0E00               	movlw	0
  4234  001B5E  0100               	movlb	0	; () banked
  4235  001B60  15C4               	andwf	CANSetMask@mask& (0+255),w,b
  4236  001B62  0100               	movlb	0	; () banked
  4237  001B64  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  4238  001B66  0EFF               	movlw	255
  4239  001B68  0100               	movlb	0	; () banked
  4240  001B6A  15C5               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4241  001B6C  0100               	movlb	0	; () banked
  4242  001B6E  6FCF               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4243  001B70  0E00               	movlw	0
  4244  001B72  0100               	movlb	0	; () banked
  4245  001B74  15C6               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4246  001B76  0100               	movlb	0	; () banked
  4247  001B78  6FD0               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4248  001B7A  0E00               	movlw	0
  4249  001B7C  0100               	movlb	0	; () banked
  4250  001B7E  15C7               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4251  001B80  0100               	movlb	0	; () banked
  4252  001B82  6FD1               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  4256  001B84  C0CE  F0C9         	movff	CANSetMask@tamp,??_CANSetMask
  4257  001B88  C0CF  F0CA         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4258  001B8C  C0D0  F0CB         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4259  001B90  C0D1  F0CC         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4260  001B94  C0CA  F0C9         	movff	??_CANSetMask+1,??_CANSetMask
  4261  001B98  C0CB  F0CA         	movff	??_CANSetMask+2,??_CANSetMask+1
  4262  001B9C  C0CC  F0CB         	movff	??_CANSetMask+3,??_CANSetMask+2
  4263  001BA0  0100               	movlb	0	; () banked
  4264  001BA2  6BCC               	clrf	(??_CANSetMask+3)& (0+255),b
  4265  001BA4  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  4266  001BA8  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4267  001BAC  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4268  001BB0  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  4272  001BB4  C0CE  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  4276  001BB8  0100               	movlb	0	; () banked
  4277  001BBA  A1C6               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4278  001BBC  D003               	goto	l463
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  4282  001BBE  010F               	movlb	15	; () banked
  4283  001BC0  811D               	bsf	29,0,b	;volatile
  4284  001BC2  D002               	goto	l464
  4285  001BC4                     l463:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;inc\CANlib.h: 716: else
  4289                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  4290  001BC4  010F               	movlb	15	; () banked
  4291  001BC6  911D               	bcf	29,0,b	;volatile
  4292  001BC8                     l464:
  4293                           
  4294                           ; BSR set to: 15
  4295                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  4296  001BC8  0100               	movlb	0	; () banked
  4297  001BCA  A3C6               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4298  001BCC  D003               	goto	l465
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  4302  001BCE  010F               	movlb	15	; () banked
  4303  001BD0  831D               	bsf	29,1,b	;volatile
  4304  001BD2  D002               	goto	l466
  4305  001BD4                     l465:
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;inc\CANlib.h: 721: else
  4309                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  4310  001BD4  010F               	movlb	15	; () banked
  4311  001BD6  931D               	bcf	29,1,b	;volatile
  4312  001BD8                     l466:
  4313                           
  4314                           ; BSR set to: 15
  4315                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  4316  001BD8  0100               	movlb	0	; () banked
  4317  001BDA  A5C6               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4318  001BDC  D003               	goto	l467
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  4322  001BDE  010F               	movlb	15	; () banked
  4323  001BE0  8B1D               	bsf	29,5,b	;volatile
  4324  001BE2  D002               	goto	l468
  4325  001BE4                     l467:
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 726: else
  4329                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  4330  001BE4  010F               	movlb	15	; () banked
  4331  001BE6  9B1D               	bcf	29,5,b	;volatile
  4332  001BE8                     l468:
  4333                           
  4334                           ; BSR set to: 15
  4335                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  4336  001BE8  0100               	movlb	0	; () banked
  4337  001BEA  A7C6               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4338  001BEC  D003               	goto	l469
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  4342  001BEE  010F               	movlb	15	; () banked
  4343  001BF0  8D1D               	bsf	29,6,b	;volatile
  4344  001BF2  D002               	goto	l470
  4345  001BF4                     l469:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 731: else
  4349                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  4350  001BF4  010F               	movlb	15	; () banked
  4351  001BF6  9D1D               	bcf	29,6,b	;volatile
  4352  001BF8                     l470:
  4353                           
  4354                           ; BSR set to: 15
  4355                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  4356  001BF8  0100               	movlb	0	; () banked
  4357  001BFA  A9C6               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4358  001BFC  D003               	goto	l471
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  4362  001BFE  010F               	movlb	15	; () banked
  4363  001C00  8F1D               	bsf	29,7,b	;volatile
  4364  001C02  D002               	goto	l2872
  4365  001C04                     l471:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;inc\CANlib.h: 736: else
  4369                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  4370  001C04  010F               	movlb	15	; () banked
  4371  001C06  9F1D               	bcf	29,7,b	;volatile
  4372  001C08                     l2872:
  4373                           
  4374                           ; BSR set to: 15
  4375                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  4376  001C08  C0C4  F0C9         	movff	CANSetMask@mask,??_CANSetMask
  4377  001C0C  C0C5  F0CA         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4378  001C10  C0C6  F0CB         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4379  001C14  C0C7  F0CC         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4380  001C18  0E16               	movlw	22
  4381  001C1A  D006               	goto	u2600
  4382  001C1C                     u2605:
  4383  001C1C  0100               	movlb	0	; () banked
  4384  001C1E  90D8               	bcf	status,0,c
  4385  001C20  33CC               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4386  001C22  33CB               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4387  001C24  33CA               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4388  001C26  33C9               	rrcf	??_CANSetMask& (0+255),f,b
  4389  001C28                     u2600:
  4390  001C28  2EE8               	decfsz	wreg,f,c
  4391  001C2A  D7F8               	goto	u2605
  4392  001C2C  C0C9  F0CE         	movff	??_CANSetMask,CANSetMask@tamp
  4393  001C30  C0CA  F0CF         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4394  001C34  C0CB  F0D0         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4395  001C38  C0CC  F0D1         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  4399  001C3C  0100               	movlb	0	; () banked
  4400  001C3E  51CE               	movf	CANSetMask@tamp& (0+255),w,b
  4401  001C40  0100               	movlb	0	; () banked
  4402  001C42  6FCE               	movwf	CANSetMask@tamp& (0+255),b
  4403  001C44  6BCF               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4404  001C46  6BD0               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4405  001C48  6BD1               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  4409  001C4A  C0CE  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4410  001C4E  0012               	return	
  4411  001C50                     __end_of_CANSetMask:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           intcon	equ	0xFF2
  4420                           intcon2	equ	0xFF1
  4421                           intcon3	equ	0xFF0
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           indf2	equ	0xFDF
  4425                           fsr2h	equ	0xFDA
  4426                           fsr2l	equ	0xFD9
  4427                           status	equ	0xFD8
  4428                           
  4429 ;; *************** function _CANSetFilter *****************
  4430 ;; Defined at:
  4431 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  numBuffer       1    wreg     enum E16881
  4434 ;;  filter          4   26[BANK0 ] unsigned long 
  4435 ;;  type            1   30[BANK0 ] enum E16844
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  numBuffer       1   35[BANK0 ] enum E16881
  4438 ;;  tamp            4   36[BANK0 ] unsigned long 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;		None               void
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4448 ;;      Params:         0       5       0       0
  4449 ;;      Locals:         0       5       0       0
  4450 ;;      Temps:          0       4       0       0
  4451 ;;      Totals:         0      14       0       0
  4452 ;;Total ram usage:       14 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    4
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_CANInitialize
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text9
  4463  000114                     __ptext9:
  4464                           	opt stack 0
  4465  000114                     _CANSetFilter:
  4466                           	opt stack 24
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;incstack = 0
  4470                           ;CANSetFilter@numBuffer stored from wreg
  4471  000114  0100               	movlb	0	; () banked
  4472  000116  6FCD               	movwf	CANSetFilter@numBuffer& (0+255),b
  4473                           
  4474                           ;inc\CANlib.h: 751: unsigned long tamp;
  4475                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4476  000118  0100               	movlb	0	; () banked
  4477  00011A  51CD               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4478  00011C  0100               	movlb	0	; () banked
  4479  00011E  A4D8               	btfss	status,2,c
  4480  000120  D058               	goto	l2896
  4481                           
  4482                           ; BSR set to: 0
  4483  000122  0100               	movlb	0	; () banked
  4484  000124  29C8               	incf	CANSetFilter@type& (0+255),w,b
  4485  000126  A4D8               	btfss	status,2,c
  4486  000128  D054               	goto	l2896
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;inc\CANlib.h: 754: {
  4490                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  4491  00012A  010F               	movlb	15	; () banked
  4492  00012C  9701               	bcf	1,3,b	;volatile
  4493                           
  4494                           ; BSR set to: 15
  4495                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  4496  00012E  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  4497  000132  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4498  000136  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4499  00013A  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4500  00013E  0E04               	movlw	4
  4501  000140  D006               	goto	u2630
  4502  000142                     u2635:
  4503  000142  0100               	movlb	0	; () banked
  4504  000144  90D8               	bcf	status,0,c
  4505  000146  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4506  000148  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4507  00014A  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4508  00014C  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  4509  00014E                     u2630:
  4510  00014E  2EE8               	decfsz	wreg,f,c
  4511  000150  D7F8               	goto	u2635
  4512  000152  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4513  000156  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4514  00015A  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4515  00015E  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  4519  000162  0100               	movlb	0	; () banked
  4520  000164  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  4521  000166  0100               	movlb	0	; () banked
  4522  000168  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4523  00016A  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4524  00016C  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4525  00016E  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  4529  000170  C0CE  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  4533  000174  0E07               	movlw	7
  4534  000176  0100               	movlb	0	; () banked
  4535  000178  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  4536  00017A  0100               	movlb	0	; () banked
  4537  00017C  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4538  00017E  0E00               	movlw	0
  4539  000180  0100               	movlb	0	; () banked
  4540  000182  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4541  000184  0100               	movlb	0	; () banked
  4542  000186  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4543  000188  0E00               	movlw	0
  4544  00018A  0100               	movlb	0	; () banked
  4545  00018C  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4546  00018E  0100               	movlb	0	; () banked
  4547  000190  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4548  000192  0E00               	movlw	0
  4549  000194  0100               	movlb	0	; () banked
  4550  000196  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4551  000198  0100               	movlb	0	; () banked
  4552  00019A  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  4556  00019C  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  4557  0001A0  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4558  0001A4  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4559  0001A8  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4560  0001AC  0E05               	movlw	5
  4561  0001AE                     u2645:
  4562  0001AE  90D8               	bcf	status,0,c
  4563  0001B0  0100               	movlb	0	; () banked
  4564  0001B2  37C9               	rlcf	??_CANSetFilter& (0+255),f,b
  4565  0001B4  37CA               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4566  0001B6  37CB               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4567  0001B8  37CC               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4568  0001BA  2EE8               	decfsz	wreg,f,c
  4569  0001BC  D7F8               	goto	u2645
  4570  0001BE  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4571  0001C2  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4572  0001C6  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4573  0001CA  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  4577  0001CE  C0CE  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4578  0001D2                     l2896:
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;inc\CANlib.h: 764: }
  4582                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4583  0001D2  0100               	movlb	0	; () banked
  4584  0001D4  05CD               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4585  0001D6  A4D8               	btfss	status,2,c
  4586  0001D8  D058               	goto	l2914
  4587                           
  4588                           ; BSR set to: 0
  4589  0001DA  0100               	movlb	0	; () banked
  4590  0001DC  29C8               	incf	CANSetFilter@type& (0+255),w,b
  4591  0001DE  A4D8               	btfss	status,2,c
  4592  0001E0  D054               	goto	l2914
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;inc\CANlib.h: 767: {
  4596                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  4597  0001E2  010F               	movlb	15	; () banked
  4598  0001E4  9705               	bcf	5,3,b	;volatile
  4599                           
  4600                           ; BSR set to: 15
  4601                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  4602  0001E6  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  4603  0001EA  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4604  0001EE  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4605  0001F2  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4606  0001F6  0E04               	movlw	4
  4607  0001F8  D006               	goto	u2670
  4608  0001FA                     u2675:
  4609  0001FA  0100               	movlb	0	; () banked
  4610  0001FC  90D8               	bcf	status,0,c
  4611  0001FE  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4612  000200  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4613  000202  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4614  000204  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  4615  000206                     u2670:
  4616  000206  2EE8               	decfsz	wreg,f,c
  4617  000208  D7F8               	goto	u2675
  4618  00020A  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4619  00020E  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4620  000212  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4621  000216  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  4625  00021A  0100               	movlb	0	; () banked
  4626  00021C  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  4627  00021E  0100               	movlb	0	; () banked
  4628  000220  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4629  000222  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4630  000224  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4631  000226  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  4635  000228  C0CE  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  4639  00022C  0E07               	movlw	7
  4640  00022E  0100               	movlb	0	; () banked
  4641  000230  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  4642  000232  0100               	movlb	0	; () banked
  4643  000234  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4644  000236  0E00               	movlw	0
  4645  000238  0100               	movlb	0	; () banked
  4646  00023A  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4647  00023C  0100               	movlb	0	; () banked
  4648  00023E  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4649  000240  0E00               	movlw	0
  4650  000242  0100               	movlb	0	; () banked
  4651  000244  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4652  000246  0100               	movlb	0	; () banked
  4653  000248  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4654  00024A  0E00               	movlw	0
  4655  00024C  0100               	movlb	0	; () banked
  4656  00024E  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4657  000250  0100               	movlb	0	; () banked
  4658  000252  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  4662  000254  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  4663  000258  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4664  00025C  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4665  000260  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4666  000264  0E05               	movlw	5
  4667  000266                     u2685:
  4668  000266  90D8               	bcf	status,0,c
  4669  000268  0100               	movlb	0	; () banked
  4670  00026A  37C9               	rlcf	??_CANSetFilter& (0+255),f,b
  4671  00026C  37CA               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4672  00026E  37CB               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4673  000270  37CC               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4674  000272  2EE8               	decfsz	wreg,f,c
  4675  000274  D7F8               	goto	u2685
  4676  000276  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4677  00027A  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4678  00027E  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4679  000282  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  4683  000286  C0CE  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4684  00028A                     l2914:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 777: }
  4688                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4689  00028A  0E02               	movlw	2
  4690  00028C  0100               	movlb	0	; () banked
  4691  00028E  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4692  000290  A4D8               	btfss	status,2,c
  4693  000292  D058               	goto	l2932
  4694                           
  4695                           ; BSR set to: 0
  4696  000294  0100               	movlb	0	; () banked
  4697  000296  29C8               	incf	CANSetFilter@type& (0+255),w,b
  4698  000298  A4D8               	btfss	status,2,c
  4699  00029A  D054               	goto	l2932
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;inc\CANlib.h: 780: {
  4703                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  4704  00029C  010F               	movlb	15	; () banked
  4705  00029E  9709               	bcf	9,3,b	;volatile
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  4709  0002A0  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  4710  0002A4  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4711  0002A8  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4712  0002AC  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4713  0002B0  0E04               	movlw	4
  4714  0002B2  D006               	goto	u2710
  4715  0002B4                     u2715:
  4716  0002B4  0100               	movlb	0	; () banked
  4717  0002B6  90D8               	bcf	status,0,c
  4718  0002B8  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4719  0002BA  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4720  0002BC  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4721  0002BE  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  4722  0002C0                     u2710:
  4723  0002C0  2EE8               	decfsz	wreg,f,c
  4724  0002C2  D7F8               	goto	u2715
  4725  0002C4  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4726  0002C8  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4727  0002CC  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4728  0002D0  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  4732  0002D4  0100               	movlb	0	; () banked
  4733  0002D6  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  4734  0002D8  0100               	movlb	0	; () banked
  4735  0002DA  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4736  0002DC  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4737  0002DE  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4738  0002E0  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  4742  0002E2  C0CE  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  4746  0002E6  0E07               	movlw	7
  4747  0002E8  0100               	movlb	0	; () banked
  4748  0002EA  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  4749  0002EC  0100               	movlb	0	; () banked
  4750  0002EE  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4751  0002F0  0E00               	movlw	0
  4752  0002F2  0100               	movlb	0	; () banked
  4753  0002F4  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4754  0002F6  0100               	movlb	0	; () banked
  4755  0002F8  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4756  0002FA  0E00               	movlw	0
  4757  0002FC  0100               	movlb	0	; () banked
  4758  0002FE  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4759  000300  0100               	movlb	0	; () banked
  4760  000302  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4761  000304  0E00               	movlw	0
  4762  000306  0100               	movlb	0	; () banked
  4763  000308  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4764  00030A  0100               	movlb	0	; () banked
  4765  00030C  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  4769  00030E  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  4770  000312  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4771  000316  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4772  00031A  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4773  00031E  0E05               	movlw	5
  4774  000320                     u2725:
  4775  000320  90D8               	bcf	status,0,c
  4776  000322  0100               	movlb	0	; () banked
  4777  000324  37C9               	rlcf	??_CANSetFilter& (0+255),f,b
  4778  000326  37CA               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4779  000328  37CB               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4780  00032A  37CC               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4781  00032C  2EE8               	decfsz	wreg,f,c
  4782  00032E  D7F8               	goto	u2725
  4783  000330  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4784  000334  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4785  000338  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4786  00033C  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  4790  000340  C0CE  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4791  000344                     l2932:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;inc\CANlib.h: 790: }
  4795                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4796  000344  0E03               	movlw	3
  4797  000346  0100               	movlb	0	; () banked
  4798  000348  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4799  00034A  A4D8               	btfss	status,2,c
  4800  00034C  D058               	goto	l2950
  4801                           
  4802                           ; BSR set to: 0
  4803  00034E  0100               	movlb	0	; () banked
  4804  000350  29C8               	incf	CANSetFilter@type& (0+255),w,b
  4805  000352  A4D8               	btfss	status,2,c
  4806  000354  D054               	goto	l2950
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 793: {
  4810                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  4811  000356  010F               	movlb	15	; () banked
  4812  000358  970D               	bcf	13,3,b	;volatile
  4813                           
  4814                           ; BSR set to: 15
  4815                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  4816  00035A  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  4817  00035E  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4818  000362  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4819  000366  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4820  00036A  0E04               	movlw	4
  4821  00036C  D006               	goto	u2750
  4822  00036E                     u2755:
  4823  00036E  0100               	movlb	0	; () banked
  4824  000370  90D8               	bcf	status,0,c
  4825  000372  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4826  000374  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4827  000376  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4828  000378  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  4829  00037A                     u2750:
  4830  00037A  2EE8               	decfsz	wreg,f,c
  4831  00037C  D7F8               	goto	u2755
  4832  00037E  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4833  000382  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4834  000386  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4835  00038A  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  4839  00038E  0100               	movlb	0	; () banked
  4840  000390  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  4841  000392  0100               	movlb	0	; () banked
  4842  000394  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4843  000396  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4844  000398  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4845  00039A  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  4849  00039C  C0CE  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  4853  0003A0  0E07               	movlw	7
  4854  0003A2  0100               	movlb	0	; () banked
  4855  0003A4  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  4856  0003A6  0100               	movlb	0	; () banked
  4857  0003A8  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4858  0003AA  0E00               	movlw	0
  4859  0003AC  0100               	movlb	0	; () banked
  4860  0003AE  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4861  0003B0  0100               	movlb	0	; () banked
  4862  0003B2  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4863  0003B4  0E00               	movlw	0
  4864  0003B6  0100               	movlb	0	; () banked
  4865  0003B8  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4866  0003BA  0100               	movlb	0	; () banked
  4867  0003BC  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4868  0003BE  0E00               	movlw	0
  4869  0003C0  0100               	movlb	0	; () banked
  4870  0003C2  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4871  0003C4  0100               	movlb	0	; () banked
  4872  0003C6  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  4876  0003C8  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  4877  0003CC  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4878  0003D0  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4879  0003D4  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4880  0003D8  0E05               	movlw	5
  4881  0003DA                     u2765:
  4882  0003DA  90D8               	bcf	status,0,c
  4883  0003DC  0100               	movlb	0	; () banked
  4884  0003DE  37C9               	rlcf	??_CANSetFilter& (0+255),f,b
  4885  0003E0  37CA               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4886  0003E2  37CB               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4887  0003E4  37CC               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4888  0003E6  2EE8               	decfsz	wreg,f,c
  4889  0003E8  D7F8               	goto	u2765
  4890  0003EA  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4891  0003EE  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4892  0003F2  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4893  0003F6  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  4897  0003FA  C0CE  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4898  0003FE                     l2950:
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;inc\CANlib.h: 803: }
  4902                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4903  0003FE  0E04               	movlw	4
  4904  000400  0100               	movlb	0	; () banked
  4905  000402  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4906  000404  A4D8               	btfss	status,2,c
  4907  000406  D058               	goto	l2968
  4908                           
  4909                           ; BSR set to: 0
  4910  000408  0100               	movlb	0	; () banked
  4911  00040A  29C8               	incf	CANSetFilter@type& (0+255),w,b
  4912  00040C  A4D8               	btfss	status,2,c
  4913  00040E  D054               	goto	l2968
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;inc\CANlib.h: 806: {
  4917                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  4918  000410  010F               	movlb	15	; () banked
  4919  000412  9711               	bcf	17,3,b	;volatile
  4920                           
  4921                           ; BSR set to: 15
  4922                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  4923  000414  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  4924  000418  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4925  00041C  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4926  000420  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4927  000424  0E04               	movlw	4
  4928  000426  D006               	goto	u2790
  4929  000428                     u2795:
  4930  000428  0100               	movlb	0	; () banked
  4931  00042A  90D8               	bcf	status,0,c
  4932  00042C  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4933  00042E  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4934  000430  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4935  000432  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  4936  000434                     u2790:
  4937  000434  2EE8               	decfsz	wreg,f,c
  4938  000436  D7F8               	goto	u2795
  4939  000438  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4940  00043C  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4941  000440  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4942  000444  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  4946  000448  0100               	movlb	0	; () banked
  4947  00044A  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  4948  00044C  0100               	movlb	0	; () banked
  4949  00044E  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4950  000450  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4951  000452  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4952  000454  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  4956  000456  C0CE  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  4960  00045A  0E07               	movlw	7
  4961  00045C  0100               	movlb	0	; () banked
  4962  00045E  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  4963  000460  0100               	movlb	0	; () banked
  4964  000462  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  4965  000464  0E00               	movlw	0
  4966  000466  0100               	movlb	0	; () banked
  4967  000468  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4968  00046A  0100               	movlb	0	; () banked
  4969  00046C  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4970  00046E  0E00               	movlw	0
  4971  000470  0100               	movlb	0	; () banked
  4972  000472  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4973  000474  0100               	movlb	0	; () banked
  4974  000476  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4975  000478  0E00               	movlw	0
  4976  00047A  0100               	movlb	0	; () banked
  4977  00047C  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4978  00047E  0100               	movlb	0	; () banked
  4979  000480  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  4983  000482  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  4984  000486  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4985  00048A  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4986  00048E  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4987  000492  0E05               	movlw	5
  4988  000494                     u2805:
  4989  000494  90D8               	bcf	status,0,c
  4990  000496  0100               	movlb	0	; () banked
  4991  000498  37C9               	rlcf	??_CANSetFilter& (0+255),f,b
  4992  00049A  37CA               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4993  00049C  37CB               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4994  00049E  37CC               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4995  0004A0  2EE8               	decfsz	wreg,f,c
  4996  0004A2  D7F8               	goto	u2805
  4997  0004A4  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  4998  0004A8  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4999  0004AC  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5000  0004B0  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  5004  0004B4  C0CE  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5005  0004B8                     l2968:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;inc\CANlib.h: 816: }
  5009                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5010  0004B8  0E05               	movlw	5
  5011  0004BA  0100               	movlb	0	; () banked
  5012  0004BC  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5013  0004BE  A4D8               	btfss	status,2,c
  5014  0004C0  D058               	goto	l2986
  5015                           
  5016                           ; BSR set to: 0
  5017  0004C2  0100               	movlb	0	; () banked
  5018  0004C4  29C8               	incf	CANSetFilter@type& (0+255),w,b
  5019  0004C6  A4D8               	btfss	status,2,c
  5020  0004C8  D054               	goto	l2986
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 819: {
  5024                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  5025  0004CA  010F               	movlb	15	; () banked
  5026  0004CC  9715               	bcf	21,3,b	;volatile
  5027                           
  5028                           ; BSR set to: 15
  5029                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  5030  0004CE  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  5031  0004D2  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5032  0004D6  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5033  0004DA  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5034  0004DE  0E04               	movlw	4
  5035  0004E0  D006               	goto	u2830
  5036  0004E2                     u2835:
  5037  0004E2  0100               	movlb	0	; () banked
  5038  0004E4  90D8               	bcf	status,0,c
  5039  0004E6  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5040  0004E8  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5041  0004EA  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5042  0004EC  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  5043  0004EE                     u2830:
  5044  0004EE  2EE8               	decfsz	wreg,f,c
  5045  0004F0  D7F8               	goto	u2835
  5046  0004F2  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5047  0004F6  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5048  0004FA  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5049  0004FE  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  5053  000502  0100               	movlb	0	; () banked
  5054  000504  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  5055  000506  0100               	movlb	0	; () banked
  5056  000508  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5057  00050A  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5058  00050C  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5059  00050E  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  5063  000510  C0CE  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  5067  000514  0E07               	movlw	7
  5068  000516  0100               	movlb	0	; () banked
  5069  000518  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  5070  00051A  0100               	movlb	0	; () banked
  5071  00051C  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5072  00051E  0E00               	movlw	0
  5073  000520  0100               	movlb	0	; () banked
  5074  000522  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5075  000524  0100               	movlb	0	; () banked
  5076  000526  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5077  000528  0E00               	movlw	0
  5078  00052A  0100               	movlb	0	; () banked
  5079  00052C  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5080  00052E  0100               	movlb	0	; () banked
  5081  000530  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5082  000532  0E00               	movlw	0
  5083  000534  0100               	movlb	0	; () banked
  5084  000536  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5085  000538  0100               	movlb	0	; () banked
  5086  00053A  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  5090  00053C  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  5091  000540  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5092  000544  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5093  000548  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5094  00054C  0E05               	movlw	5
  5095  00054E                     u2845:
  5096  00054E  90D8               	bcf	status,0,c
  5097  000550  0100               	movlb	0	; () banked
  5098  000552  37C9               	rlcf	??_CANSetFilter& (0+255),f,b
  5099  000554  37CA               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5100  000556  37CB               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5101  000558  37CC               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5102  00055A  2EE8               	decfsz	wreg,f,c
  5103  00055C  D7F8               	goto	u2845
  5104  00055E  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5105  000562  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5106  000566  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5107  00056A  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  5111  00056E  C0CE  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5112  000572                     l2986:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;inc\CANlib.h: 829: }
  5116                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5117  000572  0100               	movlb	0	; () banked
  5118  000574  51CD               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5119  000576  0100               	movlb	0	; () banked
  5120  000578  A4D8               	btfss	status,2,c
  5121  00057A  D089               	goto	l3020
  5122                           
  5123                           ; BSR set to: 0
  5124  00057C  0EF7               	movlw	247
  5125  00057E  0100               	movlb	0	; () banked
  5126  000580  19C8               	xorwf	CANSetFilter@type& (0+255),w,b
  5127  000582  A4D8               	btfss	status,2,c
  5128  000584  D084               	goto	l3020
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;inc\CANlib.h: 833: {
  5132                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  5133  000586  010F               	movlb	15	; () banked
  5134  000588  8701               	bsf	1,3,b	;volatile
  5135                           
  5136                           ; BSR set to: 15
  5137                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  5138  00058A  0100               	movlb	0	; () banked
  5139  00058C  51C4               	movf	CANSetFilter@filter& (0+255),w,b
  5140  00058E  0100               	movlb	0	; () banked
  5141  000590  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5142  000592  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5143  000594  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5144  000596  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  5148  000598  C0CE  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  5152  00059C  0E00               	movlw	0
  5153  00059E  0100               	movlb	0	; () banked
  5154  0005A0  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  5155  0005A2  0100               	movlb	0	; () banked
  5156  0005A4  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5157  0005A6  0EFF               	movlw	255
  5158  0005A8  0100               	movlb	0	; () banked
  5159  0005AA  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5160  0005AC  0100               	movlb	0	; () banked
  5161  0005AE  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5162  0005B0  0E00               	movlw	0
  5163  0005B2  0100               	movlb	0	; () banked
  5164  0005B4  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5165  0005B6  0100               	movlb	0	; () banked
  5166  0005B8  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5167  0005BA  0E00               	movlw	0
  5168  0005BC  0100               	movlb	0	; () banked
  5169  0005BE  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5170  0005C0  0100               	movlb	0	; () banked
  5171  0005C2  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  5175  0005C4  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  5176  0005C8  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5177  0005CC  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5178  0005D0  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5179  0005D4  C0CA  F0C9         	movff	??_CANSetFilter+1,??_CANSetFilter
  5180  0005D8  C0CB  F0CA         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5181  0005DC  C0CC  F0CB         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5182  0005E0  0100               	movlb	0	; () banked
  5183  0005E2  6BCC               	clrf	(??_CANSetFilter+3)& (0+255),b
  5184  0005E4  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5185  0005E8  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5186  0005EC  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5187  0005F0  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  5191  0005F4  C0CE  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  5195  0005F8  0100               	movlb	0	; () banked
  5196  0005FA  A1C6               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5197  0005FC  D003               	goto	l483
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  5201  0005FE  010F               	movlb	15	; () banked
  5202  000600  8101               	bsf	1,0,b	;volatile
  5203  000602  D002               	goto	l484
  5204  000604                     l483:
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;inc\CANlib.h: 845: else
  5208                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  5209  000604  010F               	movlb	15	; () banked
  5210  000606  9101               	bcf	1,0,b	;volatile
  5211  000608                     l484:
  5212                           
  5213                           ; BSR set to: 15
  5214                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  5215  000608  0100               	movlb	0	; () banked
  5216  00060A  A3C6               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5217  00060C  D003               	goto	l485
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  5221  00060E  010F               	movlb	15	; () banked
  5222  000610  8301               	bsf	1,1,b	;volatile
  5223  000612  D002               	goto	l486
  5224  000614                     l485:
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;inc\CANlib.h: 850: else
  5228                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  5229  000614  010F               	movlb	15	; () banked
  5230  000616  9301               	bcf	1,1,b	;volatile
  5231  000618                     l486:
  5232                           
  5233                           ; BSR set to: 15
  5234                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  5235  000618  0100               	movlb	0	; () banked
  5236  00061A  A5C6               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5237  00061C  D003               	goto	l487
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  5241  00061E  010F               	movlb	15	; () banked
  5242  000620  8B01               	bsf	1,5,b	;volatile
  5243  000622  D002               	goto	l488
  5244  000624                     l487:
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;inc\CANlib.h: 855: else
  5248                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  5249  000624  010F               	movlb	15	; () banked
  5250  000626  9B01               	bcf	1,5,b	;volatile
  5251  000628                     l488:
  5252                           
  5253                           ; BSR set to: 15
  5254                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  5255  000628  0100               	movlb	0	; () banked
  5256  00062A  A7C6               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5257  00062C  D003               	goto	l489
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  5261  00062E  010F               	movlb	15	; () banked
  5262  000630  8D01               	bsf	1,6,b	;volatile
  5263  000632  D002               	goto	l490
  5264  000634                     l489:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;inc\CANlib.h: 860: else
  5268                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  5269  000634  010F               	movlb	15	; () banked
  5270  000636  9D01               	bcf	1,6,b	;volatile
  5271  000638                     l490:
  5272                           
  5273                           ; BSR set to: 15
  5274                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  5275  000638  0100               	movlb	0	; () banked
  5276  00063A  A9C6               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5277  00063C  D003               	goto	l491
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  5281  00063E  010F               	movlb	15	; () banked
  5282  000640  8F01               	bsf	1,7,b	;volatile
  5283  000642  D002               	goto	l3014
  5284  000644                     l491:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;inc\CANlib.h: 865: else
  5288                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  5289  000644  010F               	movlb	15	; () banked
  5290  000646  9F01               	bcf	1,7,b	;volatile
  5291  000648                     l3014:
  5292                           
  5293                           ; BSR set to: 15
  5294                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  5295  000648  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  5296  00064C  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5297  000650  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5298  000654  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5299  000658  0E16               	movlw	22
  5300  00065A  D006               	goto	u2920
  5301  00065C                     u2925:
  5302  00065C  0100               	movlb	0	; () banked
  5303  00065E  90D8               	bcf	status,0,c
  5304  000660  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5305  000662  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5306  000664  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5307  000666  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  5308  000668                     u2920:
  5309  000668  2EE8               	decfsz	wreg,f,c
  5310  00066A  D7F8               	goto	u2925
  5311  00066C  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5312  000670  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5313  000674  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5314  000678  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  5318  00067C  0100               	movlb	0	; () banked
  5319  00067E  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  5320  000680  0100               	movlb	0	; () banked
  5321  000682  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5322  000684  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5323  000686  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5324  000688  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  5328  00068A  C0CE  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5329  00068E                     l3020:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;inc\CANlib.h: 871: }
  5333                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5334  00068E  0100               	movlb	0	; () banked
  5335  000690  05CD               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5336  000692  A4D8               	btfss	status,2,c
  5337  000694  D089               	goto	l3054
  5338                           
  5339                           ; BSR set to: 0
  5340  000696  0EF7               	movlw	247
  5341  000698  0100               	movlb	0	; () banked
  5342  00069A  19C8               	xorwf	CANSetFilter@type& (0+255),w,b
  5343  00069C  A4D8               	btfss	status,2,c
  5344  00069E  D084               	goto	l3054
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;inc\CANlib.h: 874: {
  5348                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  5349  0006A0  010F               	movlb	15	; () banked
  5350  0006A2  8705               	bsf	5,3,b	;volatile
  5351                           
  5352                           ; BSR set to: 15
  5353                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  5354  0006A4  0100               	movlb	0	; () banked
  5355  0006A6  51C4               	movf	CANSetFilter@filter& (0+255),w,b
  5356  0006A8  0100               	movlb	0	; () banked
  5357  0006AA  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5358  0006AC  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5359  0006AE  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5360  0006B0  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  5364  0006B2  C0CE  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  5368  0006B6  0E00               	movlw	0
  5369  0006B8  0100               	movlb	0	; () banked
  5370  0006BA  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  5371  0006BC  0100               	movlb	0	; () banked
  5372  0006BE  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5373  0006C0  0EFF               	movlw	255
  5374  0006C2  0100               	movlb	0	; () banked
  5375  0006C4  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5376  0006C6  0100               	movlb	0	; () banked
  5377  0006C8  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5378  0006CA  0E00               	movlw	0
  5379  0006CC  0100               	movlb	0	; () banked
  5380  0006CE  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5381  0006D0  0100               	movlb	0	; () banked
  5382  0006D2  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5383  0006D4  0E00               	movlw	0
  5384  0006D6  0100               	movlb	0	; () banked
  5385  0006D8  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5386  0006DA  0100               	movlb	0	; () banked
  5387  0006DC  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  5391  0006DE  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  5392  0006E2  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5393  0006E6  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5394  0006EA  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5395  0006EE  C0CA  F0C9         	movff	??_CANSetFilter+1,??_CANSetFilter
  5396  0006F2  C0CB  F0CA         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5397  0006F6  C0CC  F0CB         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5398  0006FA  0100               	movlb	0	; () banked
  5399  0006FC  6BCC               	clrf	(??_CANSetFilter+3)& (0+255),b
  5400  0006FE  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5401  000702  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5402  000706  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5403  00070A  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  5407  00070E  C0CE  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  5411  000712  0100               	movlb	0	; () banked
  5412  000714  A1C6               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5413  000716  D003               	goto	l494
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  5417  000718  010F               	movlb	15	; () banked
  5418  00071A  8105               	bsf	5,0,b	;volatile
  5419  00071C  D002               	goto	l495
  5420  00071E                     l494:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;inc\CANlib.h: 886: else
  5424                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  5425  00071E  010F               	movlb	15	; () banked
  5426  000720  9105               	bcf	5,0,b	;volatile
  5427  000722                     l495:
  5428                           
  5429                           ; BSR set to: 15
  5430                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  5431  000722  0100               	movlb	0	; () banked
  5432  000724  A3C6               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5433  000726  D003               	goto	l496
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  5437  000728  010F               	movlb	15	; () banked
  5438  00072A  8305               	bsf	5,1,b	;volatile
  5439  00072C  D002               	goto	l497
  5440  00072E                     l496:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;inc\CANlib.h: 891: else
  5444                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  5445  00072E  010F               	movlb	15	; () banked
  5446  000730  9305               	bcf	5,1,b	;volatile
  5447  000732                     l497:
  5448                           
  5449                           ; BSR set to: 15
  5450                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  5451  000732  0100               	movlb	0	; () banked
  5452  000734  A5C6               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5453  000736  D003               	goto	l498
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  5457  000738  010F               	movlb	15	; () banked
  5458  00073A  8B05               	bsf	5,5,b	;volatile
  5459  00073C  D002               	goto	l499
  5460  00073E                     l498:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;inc\CANlib.h: 896: else
  5464                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  5465  00073E  010F               	movlb	15	; () banked
  5466  000740  9B05               	bcf	5,5,b	;volatile
  5467  000742                     l499:
  5468                           
  5469                           ; BSR set to: 15
  5470                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  5471  000742  0100               	movlb	0	; () banked
  5472  000744  A7C6               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5473  000746  D003               	goto	l500
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  5477  000748  010F               	movlb	15	; () banked
  5478  00074A  8D05               	bsf	5,6,b	;volatile
  5479  00074C  D002               	goto	l501
  5480  00074E                     l500:
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;inc\CANlib.h: 901: else
  5484                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  5485  00074E  010F               	movlb	15	; () banked
  5486  000750  9D05               	bcf	5,6,b	;volatile
  5487  000752                     l501:
  5488                           
  5489                           ; BSR set to: 15
  5490                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  5491  000752  0100               	movlb	0	; () banked
  5492  000754  A9C6               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5493  000756  D003               	goto	l502
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  5497  000758  010F               	movlb	15	; () banked
  5498  00075A  8F05               	bsf	5,7,b	;volatile
  5499  00075C  D002               	goto	l3048
  5500  00075E                     l502:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;inc\CANlib.h: 906: else
  5504                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  5505  00075E  010F               	movlb	15	; () banked
  5506  000760  9F05               	bcf	5,7,b	;volatile
  5507  000762                     l3048:
  5508                           
  5509                           ; BSR set to: 15
  5510                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  5511  000762  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  5512  000766  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5513  00076A  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5514  00076E  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5515  000772  0E16               	movlw	22
  5516  000774  D006               	goto	u3000
  5517  000776                     u3005:
  5518  000776  0100               	movlb	0	; () banked
  5519  000778  90D8               	bcf	status,0,c
  5520  00077A  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5521  00077C  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5522  00077E  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5523  000780  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  5524  000782                     u3000:
  5525  000782  2EE8               	decfsz	wreg,f,c
  5526  000784  D7F8               	goto	u3005
  5527  000786  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5528  00078A  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5529  00078E  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5530  000792  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  5534  000796  0100               	movlb	0	; () banked
  5535  000798  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  5536  00079A  0100               	movlb	0	; () banked
  5537  00079C  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5538  00079E  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5539  0007A0  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5540  0007A2  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  5544  0007A4  C0CE  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5545  0007A8                     l3054:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;inc\CANlib.h: 912: }
  5549                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5550  0007A8  0E02               	movlw	2
  5551  0007AA  0100               	movlb	0	; () banked
  5552  0007AC  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5553  0007AE  A4D8               	btfss	status,2,c
  5554  0007B0  D089               	goto	l3088
  5555                           
  5556                           ; BSR set to: 0
  5557  0007B2  0EF7               	movlw	247
  5558  0007B4  0100               	movlb	0	; () banked
  5559  0007B6  19C8               	xorwf	CANSetFilter@type& (0+255),w,b
  5560  0007B8  A4D8               	btfss	status,2,c
  5561  0007BA  D084               	goto	l3088
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;inc\CANlib.h: 916: {
  5565                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  5566  0007BC  010F               	movlb	15	; () banked
  5567  0007BE  8709               	bsf	9,3,b	;volatile
  5568                           
  5569                           ; BSR set to: 15
  5570                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  5571  0007C0  0100               	movlb	0	; () banked
  5572  0007C2  51C4               	movf	CANSetFilter@filter& (0+255),w,b
  5573  0007C4  0100               	movlb	0	; () banked
  5574  0007C6  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5575  0007C8  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5576  0007CA  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5577  0007CC  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  5581  0007CE  C0CE  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  5585  0007D2  0E00               	movlw	0
  5586  0007D4  0100               	movlb	0	; () banked
  5587  0007D6  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  5588  0007D8  0100               	movlb	0	; () banked
  5589  0007DA  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5590  0007DC  0EFF               	movlw	255
  5591  0007DE  0100               	movlb	0	; () banked
  5592  0007E0  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5593  0007E2  0100               	movlb	0	; () banked
  5594  0007E4  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5595  0007E6  0E00               	movlw	0
  5596  0007E8  0100               	movlb	0	; () banked
  5597  0007EA  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5598  0007EC  0100               	movlb	0	; () banked
  5599  0007EE  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5600  0007F0  0E00               	movlw	0
  5601  0007F2  0100               	movlb	0	; () banked
  5602  0007F4  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5603  0007F6  0100               	movlb	0	; () banked
  5604  0007F8  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  5608  0007FA  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  5609  0007FE  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5610  000802  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5611  000806  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5612  00080A  C0CA  F0C9         	movff	??_CANSetFilter+1,??_CANSetFilter
  5613  00080E  C0CB  F0CA         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5614  000812  C0CC  F0CB         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5615  000816  0100               	movlb	0	; () banked
  5616  000818  6BCC               	clrf	(??_CANSetFilter+3)& (0+255),b
  5617  00081A  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5618  00081E  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5619  000822  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5620  000826  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  5624  00082A  C0CE  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  5628  00082E  0100               	movlb	0	; () banked
  5629  000830  A1C6               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5630  000832  D003               	goto	l505
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  5634  000834  010F               	movlb	15	; () banked
  5635  000836  8109               	bsf	9,0,b	;volatile
  5636  000838  D002               	goto	l506
  5637  00083A                     l505:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;inc\CANlib.h: 928: else
  5641                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  5642  00083A  010F               	movlb	15	; () banked
  5643  00083C  9109               	bcf	9,0,b	;volatile
  5644  00083E                     l506:
  5645                           
  5646                           ; BSR set to: 15
  5647                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  5648  00083E  0100               	movlb	0	; () banked
  5649  000840  A3C6               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5650  000842  D003               	goto	l507
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  5654  000844  010F               	movlb	15	; () banked
  5655  000846  8309               	bsf	9,1,b	;volatile
  5656  000848  D002               	goto	l508
  5657  00084A                     l507:
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;inc\CANlib.h: 933: else
  5661                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  5662  00084A  010F               	movlb	15	; () banked
  5663  00084C  9309               	bcf	9,1,b	;volatile
  5664  00084E                     l508:
  5665                           
  5666                           ; BSR set to: 15
  5667                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  5668  00084E  0100               	movlb	0	; () banked
  5669  000850  A5C6               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5670  000852  D003               	goto	l509
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  5674  000854  010F               	movlb	15	; () banked
  5675  000856  8B09               	bsf	9,5,b	;volatile
  5676  000858  D002               	goto	l510
  5677  00085A                     l509:
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;inc\CANlib.h: 938: else
  5681                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  5682  00085A  010F               	movlb	15	; () banked
  5683  00085C  9B09               	bcf	9,5,b	;volatile
  5684  00085E                     l510:
  5685                           
  5686                           ; BSR set to: 15
  5687                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  5688  00085E  0100               	movlb	0	; () banked
  5689  000860  A7C6               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5690  000862  D003               	goto	l511
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  5694  000864  010F               	movlb	15	; () banked
  5695  000866  8D09               	bsf	9,6,b	;volatile
  5696  000868  D002               	goto	l512
  5697  00086A                     l511:
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;inc\CANlib.h: 943: else
  5701                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  5702  00086A  010F               	movlb	15	; () banked
  5703  00086C  9D09               	bcf	9,6,b	;volatile
  5704  00086E                     l512:
  5705                           
  5706                           ; BSR set to: 15
  5707                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  5708  00086E  0100               	movlb	0	; () banked
  5709  000870  A9C6               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5710  000872  D003               	goto	l513
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  5714  000874  010F               	movlb	15	; () banked
  5715  000876  8F09               	bsf	9,7,b	;volatile
  5716  000878  D002               	goto	l3082
  5717  00087A                     l513:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;inc\CANlib.h: 948: else
  5721                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  5722  00087A  010F               	movlb	15	; () banked
  5723  00087C  9F09               	bcf	9,7,b	;volatile
  5724  00087E                     l3082:
  5725                           
  5726                           ; BSR set to: 15
  5727                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  5728  00087E  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  5729  000882  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5730  000886  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5731  00088A  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5732  00088E  0E16               	movlw	22
  5733  000890  D006               	goto	u3080
  5734  000892                     u3085:
  5735  000892  0100               	movlb	0	; () banked
  5736  000894  90D8               	bcf	status,0,c
  5737  000896  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5738  000898  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5739  00089A  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5740  00089C  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  5741  00089E                     u3080:
  5742  00089E  2EE8               	decfsz	wreg,f,c
  5743  0008A0  D7F8               	goto	u3085
  5744  0008A2  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5745  0008A6  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5746  0008AA  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5747  0008AE  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  5751  0008B2  0100               	movlb	0	; () banked
  5752  0008B4  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  5753  0008B6  0100               	movlb	0	; () banked
  5754  0008B8  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5755  0008BA  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5756  0008BC  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5757  0008BE  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  5761  0008C0  C0CE  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5762  0008C4                     l3088:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;inc\CANlib.h: 954: }
  5766                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5767  0008C4  0E03               	movlw	3
  5768  0008C6  0100               	movlb	0	; () banked
  5769  0008C8  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5770  0008CA  A4D8               	btfss	status,2,c
  5771  0008CC  D089               	goto	l3122
  5772                           
  5773                           ; BSR set to: 0
  5774  0008CE  0EF7               	movlw	247
  5775  0008D0  0100               	movlb	0	; () banked
  5776  0008D2  19C8               	xorwf	CANSetFilter@type& (0+255),w,b
  5777  0008D4  A4D8               	btfss	status,2,c
  5778  0008D6  D084               	goto	l3122
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;inc\CANlib.h: 957: {
  5782                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  5783  0008D8  010F               	movlb	15	; () banked
  5784  0008DA  870D               	bsf	13,3,b	;volatile
  5785                           
  5786                           ; BSR set to: 15
  5787                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  5788  0008DC  0100               	movlb	0	; () banked
  5789  0008DE  51C4               	movf	CANSetFilter@filter& (0+255),w,b
  5790  0008E0  0100               	movlb	0	; () banked
  5791  0008E2  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5792  0008E4  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5793  0008E6  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5794  0008E8  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5795                           
  5796                           ; BSR set to: 0
  5797                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  5798  0008EA  C0CE  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  5802  0008EE  0E00               	movlw	0
  5803  0008F0  0100               	movlb	0	; () banked
  5804  0008F2  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  5805  0008F4  0100               	movlb	0	; () banked
  5806  0008F6  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5807  0008F8  0EFF               	movlw	255
  5808  0008FA  0100               	movlb	0	; () banked
  5809  0008FC  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5810  0008FE  0100               	movlb	0	; () banked
  5811  000900  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5812  000902  0E00               	movlw	0
  5813  000904  0100               	movlb	0	; () banked
  5814  000906  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5815  000908  0100               	movlb	0	; () banked
  5816  00090A  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5817  00090C  0E00               	movlw	0
  5818  00090E  0100               	movlb	0	; () banked
  5819  000910  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5820  000912  0100               	movlb	0	; () banked
  5821  000914  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  5825  000916  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  5826  00091A  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5827  00091E  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5828  000922  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5829  000926  C0CA  F0C9         	movff	??_CANSetFilter+1,??_CANSetFilter
  5830  00092A  C0CB  F0CA         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5831  00092E  C0CC  F0CB         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5832  000932  0100               	movlb	0	; () banked
  5833  000934  6BCC               	clrf	(??_CANSetFilter+3)& (0+255),b
  5834  000936  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5835  00093A  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5836  00093E  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5837  000942  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  5841  000946  C0CE  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  5845  00094A  0100               	movlb	0	; () banked
  5846  00094C  A1C6               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5847  00094E  D003               	goto	l516
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  5851  000950  010F               	movlb	15	; () banked
  5852  000952  810D               	bsf	13,0,b	;volatile
  5853  000954  D002               	goto	l517
  5854  000956                     l516:
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;inc\CANlib.h: 969: else
  5858                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  5859  000956  010F               	movlb	15	; () banked
  5860  000958  910D               	bcf	13,0,b	;volatile
  5861  00095A                     l517:
  5862                           
  5863                           ; BSR set to: 15
  5864                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  5865  00095A  0100               	movlb	0	; () banked
  5866  00095C  A3C6               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5867  00095E  D003               	goto	l518
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  5871  000960  010F               	movlb	15	; () banked
  5872  000962  830D               	bsf	13,1,b	;volatile
  5873  000964  D002               	goto	l519
  5874  000966                     l518:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;inc\CANlib.h: 974: else
  5878                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  5879  000966  010F               	movlb	15	; () banked
  5880  000968  930D               	bcf	13,1,b	;volatile
  5881  00096A                     l519:
  5882                           
  5883                           ; BSR set to: 15
  5884                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  5885  00096A  0100               	movlb	0	; () banked
  5886  00096C  A5C6               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5887  00096E  D003               	goto	l520
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  5891  000970  010F               	movlb	15	; () banked
  5892  000972  8B0D               	bsf	13,5,b	;volatile
  5893  000974  D002               	goto	l521
  5894  000976                     l520:
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;inc\CANlib.h: 979: else
  5898                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  5899  000976  010F               	movlb	15	; () banked
  5900  000978  9B0D               	bcf	13,5,b	;volatile
  5901  00097A                     l521:
  5902                           
  5903                           ; BSR set to: 15
  5904                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  5905  00097A  0100               	movlb	0	; () banked
  5906  00097C  A7C6               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5907  00097E  D003               	goto	l522
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  5911  000980  010F               	movlb	15	; () banked
  5912  000982  8D0D               	bsf	13,6,b	;volatile
  5913  000984  D002               	goto	l523
  5914  000986                     l522:
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;inc\CANlib.h: 984: else
  5918                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  5919  000986  010F               	movlb	15	; () banked
  5920  000988  9D0D               	bcf	13,6,b	;volatile
  5921  00098A                     l523:
  5922                           
  5923                           ; BSR set to: 15
  5924                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  5925  00098A  0100               	movlb	0	; () banked
  5926  00098C  A9C6               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5927  00098E  D003               	goto	l524
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  5931  000990  010F               	movlb	15	; () banked
  5932  000992  8F0D               	bsf	13,7,b	;volatile
  5933  000994  D002               	goto	l3116
  5934  000996                     l524:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;inc\CANlib.h: 989: else
  5938                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  5939  000996  010F               	movlb	15	; () banked
  5940  000998  9F0D               	bcf	13,7,b	;volatile
  5941  00099A                     l3116:
  5942                           
  5943                           ; BSR set to: 15
  5944                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  5945  00099A  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  5946  00099E  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5947  0009A2  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5948  0009A6  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5949  0009AA  0E16               	movlw	22
  5950  0009AC  D006               	goto	u3160
  5951  0009AE                     u3165:
  5952  0009AE  0100               	movlb	0	; () banked
  5953  0009B0  90D8               	bcf	status,0,c
  5954  0009B2  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5955  0009B4  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5956  0009B6  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5957  0009B8  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  5958  0009BA                     u3160:
  5959  0009BA  2EE8               	decfsz	wreg,f,c
  5960  0009BC  D7F8               	goto	u3165
  5961  0009BE  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  5962  0009C2  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5963  0009C6  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5964  0009CA  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  5968  0009CE  0100               	movlb	0	; () banked
  5969  0009D0  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  5970  0009D2  0100               	movlb	0	; () banked
  5971  0009D4  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  5972  0009D6  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5973  0009D8  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5974  0009DA  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  5978  0009DC  C0CE  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5979  0009E0                     l3122:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 995: }
  5983                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5984  0009E0  0E04               	movlw	4
  5985  0009E2  0100               	movlb	0	; () banked
  5986  0009E4  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5987  0009E6  A4D8               	btfss	status,2,c
  5988  0009E8  D089               	goto	l3156
  5989                           
  5990                           ; BSR set to: 0
  5991  0009EA  0EF7               	movlw	247
  5992  0009EC  0100               	movlb	0	; () banked
  5993  0009EE  19C8               	xorwf	CANSetFilter@type& (0+255),w,b
  5994  0009F0  A4D8               	btfss	status,2,c
  5995  0009F2  D084               	goto	l3156
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;inc\CANlib.h: 998: {
  5999                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  6000  0009F4  010F               	movlb	15	; () banked
  6001  0009F6  8711               	bsf	17,3,b	;volatile
  6002                           
  6003                           ; BSR set to: 15
  6004                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  6005  0009F8  0100               	movlb	0	; () banked
  6006  0009FA  51C4               	movf	CANSetFilter@filter& (0+255),w,b
  6007  0009FC  0100               	movlb	0	; () banked
  6008  0009FE  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  6009  000A00  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6010  000A02  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6011  000A04  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  6015  000A06  C0CE  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  6019  000A0A  0E00               	movlw	0
  6020  000A0C  0100               	movlb	0	; () banked
  6021  000A0E  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  6022  000A10  0100               	movlb	0	; () banked
  6023  000A12  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  6024  000A14  0EFF               	movlw	255
  6025  000A16  0100               	movlb	0	; () banked
  6026  000A18  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6027  000A1A  0100               	movlb	0	; () banked
  6028  000A1C  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6029  000A1E  0E00               	movlw	0
  6030  000A20  0100               	movlb	0	; () banked
  6031  000A22  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6032  000A24  0100               	movlb	0	; () banked
  6033  000A26  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6034  000A28  0E00               	movlw	0
  6035  000A2A  0100               	movlb	0	; () banked
  6036  000A2C  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6037  000A2E  0100               	movlb	0	; () banked
  6038  000A30  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  6042  000A32  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  6043  000A36  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6044  000A3A  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6045  000A3E  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6046  000A42  C0CA  F0C9         	movff	??_CANSetFilter+1,??_CANSetFilter
  6047  000A46  C0CB  F0CA         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6048  000A4A  C0CC  F0CB         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6049  000A4E  0100               	movlb	0	; () banked
  6050  000A50  6BCC               	clrf	(??_CANSetFilter+3)& (0+255),b
  6051  000A52  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  6052  000A56  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6053  000A5A  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6054  000A5E  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  6058  000A62  C0CE  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  6062  000A66  0100               	movlb	0	; () banked
  6063  000A68  A1C6               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6064  000A6A  D003               	goto	l527
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  6068  000A6C  010F               	movlb	15	; () banked
  6069  000A6E  8111               	bsf	17,0,b	;volatile
  6070  000A70  D002               	goto	l528
  6071  000A72                     l527:
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;inc\CANlib.h: 1010: else
  6075                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  6076  000A72  010F               	movlb	15	; () banked
  6077  000A74  9111               	bcf	17,0,b	;volatile
  6078  000A76                     l528:
  6079                           
  6080                           ; BSR set to: 15
  6081                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  6082  000A76  0100               	movlb	0	; () banked
  6083  000A78  A3C6               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6084  000A7A  D003               	goto	l529
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  6088  000A7C  010F               	movlb	15	; () banked
  6089  000A7E  8311               	bsf	17,1,b	;volatile
  6090  000A80  D002               	goto	l530
  6091  000A82                     l529:
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;inc\CANlib.h: 1015: else
  6095                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  6096  000A82  010F               	movlb	15	; () banked
  6097  000A84  9311               	bcf	17,1,b	;volatile
  6098  000A86                     l530:
  6099                           
  6100                           ; BSR set to: 15
  6101                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  6102  000A86  0100               	movlb	0	; () banked
  6103  000A88  A5C6               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6104  000A8A  D003               	goto	l531
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  6108  000A8C  010F               	movlb	15	; () banked
  6109  000A8E  8B11               	bsf	17,5,b	;volatile
  6110  000A90  D002               	goto	l532
  6111  000A92                     l531:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;inc\CANlib.h: 1020: else
  6115                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  6116  000A92  010F               	movlb	15	; () banked
  6117  000A94  9B11               	bcf	17,5,b	;volatile
  6118  000A96                     l532:
  6119                           
  6120                           ; BSR set to: 15
  6121                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  6122  000A96  0100               	movlb	0	; () banked
  6123  000A98  A7C6               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6124  000A9A  D003               	goto	l533
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  6128  000A9C  010F               	movlb	15	; () banked
  6129  000A9E  8D11               	bsf	17,6,b	;volatile
  6130  000AA0  D002               	goto	l534
  6131  000AA2                     l533:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;inc\CANlib.h: 1025: else
  6135                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  6136  000AA2  010F               	movlb	15	; () banked
  6137  000AA4  9D11               	bcf	17,6,b	;volatile
  6138  000AA6                     l534:
  6139                           
  6140                           ; BSR set to: 15
  6141                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  6142  000AA6  0100               	movlb	0	; () banked
  6143  000AA8  A9C6               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6144  000AAA  D003               	goto	l535
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  6148  000AAC  010F               	movlb	15	; () banked
  6149  000AAE  8F11               	bsf	17,7,b	;volatile
  6150  000AB0  D002               	goto	l3150
  6151  000AB2                     l535:
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;inc\CANlib.h: 1030: else
  6155                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  6156  000AB2  010F               	movlb	15	; () banked
  6157  000AB4  9F11               	bcf	17,7,b	;volatile
  6158  000AB6                     l3150:
  6159                           
  6160                           ; BSR set to: 15
  6161                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  6162  000AB6  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  6163  000ABA  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6164  000ABE  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6165  000AC2  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6166  000AC6  0E16               	movlw	22
  6167  000AC8  D006               	goto	u3240
  6168  000ACA                     u3245:
  6169  000ACA  0100               	movlb	0	; () banked
  6170  000ACC  90D8               	bcf	status,0,c
  6171  000ACE  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6172  000AD0  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6173  000AD2  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6174  000AD4  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  6175  000AD6                     u3240:
  6176  000AD6  2EE8               	decfsz	wreg,f,c
  6177  000AD8  D7F8               	goto	u3245
  6178  000ADA  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  6179  000ADE  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6180  000AE2  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6181  000AE6  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  6185  000AEA  0100               	movlb	0	; () banked
  6186  000AEC  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  6187  000AEE  0100               	movlb	0	; () banked
  6188  000AF0  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  6189  000AF2  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6190  000AF4  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6191  000AF6  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  6195  000AF8  C0CE  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6196  000AFC                     l3156:
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;inc\CANlib.h: 1036: }
  6200                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6201  000AFC  0E05               	movlw	5
  6202  000AFE  0100               	movlb	0	; () banked
  6203  000B00  19CD               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6204  000B02  A4D8               	btfss	status,2,c
  6205  000B04  0012               	return	
  6206                           
  6207                           ; BSR set to: 0
  6208  000B06  0EF7               	movlw	247
  6209  000B08  0100               	movlb	0	; () banked
  6210  000B0A  19C8               	xorwf	CANSetFilter@type& (0+255),w,b
  6211  000B0C  A4D8               	btfss	status,2,c
  6212  000B0E  0012               	return	
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;inc\CANlib.h: 1039: {
  6216                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  6217  000B10  010F               	movlb	15	; () banked
  6218  000B12  8715               	bsf	21,3,b	;volatile
  6219                           
  6220                           ; BSR set to: 15
  6221                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  6222  000B14  0100               	movlb	0	; () banked
  6223  000B16  51C4               	movf	CANSetFilter@filter& (0+255),w,b
  6224  000B18  0100               	movlb	0	; () banked
  6225  000B1A  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  6226  000B1C  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6227  000B1E  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6228  000B20  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  6232  000B22  C0CE  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  6236  000B26  0E00               	movlw	0
  6237  000B28  0100               	movlb	0	; () banked
  6238  000B2A  15C4               	andwf	CANSetFilter@filter& (0+255),w,b
  6239  000B2C  0100               	movlb	0	; () banked
  6240  000B2E  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  6241  000B30  0EFF               	movlw	255
  6242  000B32  0100               	movlb	0	; () banked
  6243  000B34  15C5               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6244  000B36  0100               	movlb	0	; () banked
  6245  000B38  6FCF               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6246  000B3A  0E00               	movlw	0
  6247  000B3C  0100               	movlb	0	; () banked
  6248  000B3E  15C6               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6249  000B40  0100               	movlb	0	; () banked
  6250  000B42  6FD0               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6251  000B44  0E00               	movlw	0
  6252  000B46  0100               	movlb	0	; () banked
  6253  000B48  15C7               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6254  000B4A  0100               	movlb	0	; () banked
  6255  000B4C  6FD1               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  6259  000B4E  C0CE  F0C9         	movff	CANSetFilter@tamp,??_CANSetFilter
  6260  000B52  C0CF  F0CA         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6261  000B56  C0D0  F0CB         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6262  000B5A  C0D1  F0CC         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6263  000B5E  C0CA  F0C9         	movff	??_CANSetFilter+1,??_CANSetFilter
  6264  000B62  C0CB  F0CA         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6265  000B66  C0CC  F0CB         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6266  000B6A  0100               	movlb	0	; () banked
  6267  000B6C  6BCC               	clrf	(??_CANSetFilter+3)& (0+255),b
  6268  000B6E  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  6269  000B72  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6270  000B76  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6271  000B7A  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  6275  000B7E  C0CE  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  6279  000B82  0100               	movlb	0	; () banked
  6280  000B84  A1C6               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6281  000B86  D003               	goto	l538
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  6285  000B88  010F               	movlb	15	; () banked
  6286  000B8A  8115               	bsf	21,0,b	;volatile
  6287  000B8C  D002               	goto	l539
  6288  000B8E                     l538:
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;inc\CANlib.h: 1051: else
  6292                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  6293  000B8E  010F               	movlb	15	; () banked
  6294  000B90  9115               	bcf	21,0,b	;volatile
  6295  000B92                     l539:
  6296                           
  6297                           ; BSR set to: 15
  6298                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  6299  000B92  0100               	movlb	0	; () banked
  6300  000B94  A3C6               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6301  000B96  D003               	goto	l540
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  6305  000B98  010F               	movlb	15	; () banked
  6306  000B9A  8315               	bsf	21,1,b	;volatile
  6307  000B9C  D002               	goto	l541
  6308  000B9E                     l540:
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;inc\CANlib.h: 1056: else
  6312                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  6313  000B9E  010F               	movlb	15	; () banked
  6314  000BA0  9315               	bcf	21,1,b	;volatile
  6315  000BA2                     l541:
  6316                           
  6317                           ; BSR set to: 15
  6318                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  6319  000BA2  0100               	movlb	0	; () banked
  6320  000BA4  A5C6               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6321  000BA6  D003               	goto	l542
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  6325  000BA8  010F               	movlb	15	; () banked
  6326  000BAA  8B15               	bsf	21,5,b	;volatile
  6327  000BAC  D002               	goto	l543
  6328  000BAE                     l542:
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;inc\CANlib.h: 1061: else
  6332                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  6333  000BAE  010F               	movlb	15	; () banked
  6334  000BB0  9B15               	bcf	21,5,b	;volatile
  6335  000BB2                     l543:
  6336                           
  6337                           ; BSR set to: 15
  6338                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  6339  000BB2  0100               	movlb	0	; () banked
  6340  000BB4  A7C6               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6341  000BB6  D003               	goto	l544
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  6345  000BB8  010F               	movlb	15	; () banked
  6346  000BBA  8D15               	bsf	21,6,b	;volatile
  6347  000BBC  D002               	goto	l545
  6348  000BBE                     l544:
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;inc\CANlib.h: 1066: else
  6352                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  6353  000BBE  010F               	movlb	15	; () banked
  6354  000BC0  9D15               	bcf	21,6,b	;volatile
  6355  000BC2                     l545:
  6356                           
  6357                           ; BSR set to: 15
  6358                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  6359  000BC2  0100               	movlb	0	; () banked
  6360  000BC4  A9C6               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6361  000BC6  D003               	goto	l546
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  6365  000BC8  010F               	movlb	15	; () banked
  6366  000BCA  8F15               	bsf	21,7,b	;volatile
  6367  000BCC  D002               	goto	l3184
  6368  000BCE                     l546:
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;inc\CANlib.h: 1071: else
  6372                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  6373  000BCE  010F               	movlb	15	; () banked
  6374  000BD0  9F15               	bcf	21,7,b	;volatile
  6375  000BD2                     l3184:
  6376                           
  6377                           ; BSR set to: 15
  6378                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  6379  000BD2  C0C4  F0C9         	movff	CANSetFilter@filter,??_CANSetFilter
  6380  000BD6  C0C5  F0CA         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6381  000BDA  C0C6  F0CB         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6382  000BDE  C0C7  F0CC         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6383  000BE2  0E16               	movlw	22
  6384  000BE4  D006               	goto	u3320
  6385  000BE6                     u3325:
  6386  000BE6  0100               	movlb	0	; () banked
  6387  000BE8  90D8               	bcf	status,0,c
  6388  000BEA  33CC               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6389  000BEC  33CB               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6390  000BEE  33CA               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6391  000BF0  33C9               	rrcf	??_CANSetFilter& (0+255),f,b
  6392  000BF2                     u3320:
  6393  000BF2  2EE8               	decfsz	wreg,f,c
  6394  000BF4  D7F8               	goto	u3325
  6395  000BF6  C0C9  F0CE         	movff	??_CANSetFilter,CANSetFilter@tamp
  6396  000BFA  C0CA  F0CF         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6397  000BFE  C0CB  F0D0         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6398  000C02  C0CC  F0D1         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  6402  000C06  0100               	movlb	0	; () banked
  6403  000C08  51CE               	movf	CANSetFilter@tamp& (0+255),w,b
  6404  000C0A  0100               	movlb	0	; () banked
  6405  000C0C  6FCE               	movwf	CANSetFilter@tamp& (0+255),b
  6406  000C0E  6BCF               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6407  000C10  6BD0               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6408  000C12  6BD1               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  6412  000C14  C0CE  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6413  000C18  0012               	return	
  6414  000C1A                     __end_of_CANSetFilter:
  6415                           	opt stack 0
  6416                           tblptru	equ	0xFF8
  6417                           tblptrh	equ	0xFF7
  6418                           tblptrl	equ	0xFF6
  6419                           tablat	equ	0xFF5
  6420                           prodh	equ	0xFF4
  6421                           prodl	equ	0xFF3
  6422                           intcon	equ	0xFF2
  6423                           intcon2	equ	0xFF1
  6424                           intcon3	equ	0xFF0
  6425                           postinc0	equ	0xFEE
  6426                           wreg	equ	0xFE8
  6427                           indf2	equ	0xFDF
  6428                           fsr2h	equ	0xFDA
  6429                           fsr2l	equ	0xFD9
  6430                           status	equ	0xFD8
  6431                           
  6432 ;; *************** function _CANOperationMode *****************
  6433 ;; Defined at:
  6434 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  mode            1    wreg     enum E16838
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  mode            1   26[BANK0 ] enum E16838
  6439 ;; Return value:  Size  Location     Type
  6440 ;;		None               void
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6448 ;;      Params:         0       0       0       0
  6449 ;;      Locals:         0       1       0       0
  6450 ;;      Temps:          0       0       0       0
  6451 ;;      Totals:         0       1       0       0
  6452 ;;Total ram usage:        1 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    4
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_CANInitialize
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text10
  6463  00294E                     __ptext10:
  6464                           	opt stack 0
  6465  00294E                     _CANOperationMode:
  6466                           	opt stack 24
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;incstack = 0
  6470                           ;CANOperationMode@mode stored from wreg
  6471  00294E  0100               	movlb	0	; () banked
  6472  002950  6FC4               	movwf	CANOperationMode@mode& (0+255),b
  6473                           
  6474                           ;inc\CANlib.h: 209: CANCON = mode;
  6475  002952  C0C4  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6476  002956                     l2780:
  6477  002956  506E               	movf	3950,w,c	;volatile
  6478  002958  0BE0               	andlw	224
  6479  00295A  0100               	movlb	0	; () banked
  6480  00295C  19C4               	xorwf	CANOperationMode@mode& (0+255),w,b
  6481  00295E  B4D8               	btfsc	status,2,c
  6482  002960  0012               	return	
  6483  002962  D7F9               	goto	l2780
  6484  002964                     __end_of_CANOperationMode:
  6485                           	opt stack 0
  6486                           tblptru	equ	0xFF8
  6487                           tblptrh	equ	0xFF7
  6488                           tblptrl	equ	0xFF6
  6489                           tablat	equ	0xFF5
  6490                           prodh	equ	0xFF4
  6491                           prodl	equ	0xFF3
  6492                           intcon	equ	0xFF2
  6493                           intcon2	equ	0xFF1
  6494                           intcon3	equ	0xFF0
  6495                           postinc0	equ	0xFEE
  6496                           wreg	equ	0xFE8
  6497                           indf2	equ	0xFDF
  6498                           fsr2h	equ	0xFDA
  6499                           fsr2l	equ	0xFD9
  6500                           status	equ	0xFD8
  6501                           
  6502 ;; *************** function ___lmul *****************
  6503 ;; Defined at:
  6504 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  multiplier      4   26[BANK0 ] unsigned long 
  6507 ;;  multiplicand    4   30[BANK0 ] unsigned long 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  product         4   34[BANK0 ] unsigned long 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  4   26[BANK0 ] unsigned long 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6519 ;;      Params:         0       8       0       0
  6520 ;;      Locals:         0       4       0       0
  6521 ;;      Temps:          0       0       0       0
  6522 ;;      Totals:         0      12       0       0
  6523 ;;Total ram usage:       12 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    4
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_main
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text11
  6534  002752                     __ptext11:
  6535                           	opt stack 0
  6536  002752                     ___lmul:
  6537                           	opt stack 26
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;incstack = 0
  6541  002752  0E00               	movlw	0
  6542  002754  0100               	movlb	0	; () banked
  6543  002756  6FCC               	movwf	___lmul@product& (0+255),b
  6544  002758  0E00               	movlw	0
  6545  00275A  6FCD               	movwf	(___lmul@product+1)& (0+255),b
  6546  00275C  0E00               	movlw	0
  6547  00275E  6FCE               	movwf	(___lmul@product+2)& (0+255),b
  6548  002760  0E00               	movlw	0
  6549  002762  6FCF               	movwf	(___lmul@product+3)& (0+255),b
  6550  002764                     l3850:
  6551                           
  6552                           ; BSR set to: 0
  6553  002764  0100               	movlb	0	; () banked
  6554  002766  A1C4               	btfss	___lmul@multiplier& (0+255),0,b
  6555  002768  D010               	goto	l3854
  6556                           
  6557                           ; BSR set to: 0
  6558  00276A  0100               	movlb	0	; () banked
  6559  00276C  51C8               	movf	___lmul@multiplicand& (0+255),w,b
  6560  00276E  0100               	movlb	0	; () banked
  6561  002770  27CC               	addwf	___lmul@product& (0+255),f,b
  6562  002772  0100               	movlb	0	; () banked
  6563  002774  51C9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6564  002776  0100               	movlb	0	; () banked
  6565  002778  23CD               	addwfc	(___lmul@product+1)& (0+255),f,b
  6566  00277A  0100               	movlb	0	; () banked
  6567  00277C  51CA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6568  00277E  0100               	movlb	0	; () banked
  6569  002780  23CE               	addwfc	(___lmul@product+2)& (0+255),f,b
  6570  002782  0100               	movlb	0	; () banked
  6571  002784  51CB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6572  002786  0100               	movlb	0	; () banked
  6573  002788  23CF               	addwfc	(___lmul@product+3)& (0+255),f,b
  6574  00278A                     l3854:
  6575                           
  6576                           ; BSR set to: 0
  6577  00278A  0100               	movlb	0	; () banked
  6578  00278C  90D8               	bcf	status,0,c
  6579  00278E  37C8               	rlcf	___lmul@multiplicand& (0+255),f,b
  6580  002790  37C9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6581  002792  37CA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6582  002794  37CB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6583                           
  6584                           ; BSR set to: 0
  6585  002796  0100               	movlb	0	; () banked
  6586  002798  90D8               	bcf	status,0,c
  6587  00279A  33C7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6588  00279C  33C6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6589  00279E  33C5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6590  0027A0  33C4               	rrcf	___lmul@multiplier& (0+255),f,b
  6591  0027A2  0100               	movlb	0	; () banked
  6592  0027A4  51C4               	movf	___lmul@multiplier& (0+255),w,b
  6593  0027A6  0100               	movlb	0	; () banked
  6594  0027A8  11C5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6595  0027AA  0100               	movlb	0	; () banked
  6596  0027AC  11C6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6597  0027AE  0100               	movlb	0	; () banked
  6598  0027B0  11C7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6599  0027B2  A4D8               	btfss	status,2,c
  6600  0027B4  D7D7               	goto	l3850
  6601                           
  6602                           ; BSR set to: 0
  6603  0027B6  C0CC  F0C4         	movff	___lmul@product,?___lmul
  6604  0027BA  C0CD  F0C5         	movff	___lmul@product+1,?___lmul+1
  6605  0027BE  C0CE  F0C6         	movff	___lmul@product+2,?___lmul+2
  6606  0027C2  C0CF  F0C7         	movff	___lmul@product+3,?___lmul+3
  6607                           
  6608                           ; BSR set to: 0
  6609  0027C6  0012               	return		;funcret
  6610  0027C8                     __end_of___lmul:
  6611                           	opt stack 0
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           intcon2	equ	0xFF1
  6620                           intcon3	equ	0xFF0
  6621                           postinc0	equ	0xFEE
  6622                           wreg	equ	0xFE8
  6623                           indf2	equ	0xFDF
  6624                           fsr2h	equ	0xFDA
  6625                           fsr2l	equ	0xFD9
  6626                           status	equ	0xFD8
  6627                           
  6628 ;; *************** function ___aldiv *****************
  6629 ;; Defined at:
  6630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  dividend        4   38[BANK0 ] long 
  6633 ;;  divisor         4   42[BANK0 ] long 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  quotient        4   48[BANK0 ] long 
  6636 ;;  sign            1   47[BANK0 ] unsigned char 
  6637 ;;  counter         1   46[BANK0 ] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  4   38[BANK0 ] long 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6647 ;;      Params:         0       8       0       0
  6648 ;;      Locals:         0       6       0       0
  6649 ;;      Temps:          0       0       0       0
  6650 ;;      Totals:         0      14       0       0
  6651 ;;Total ram usage:       14 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    4
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_main
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text12
  6662  00241A                     __ptext12:
  6663                           	opt stack 0
  6664  00241A                     ___aldiv:
  6665                           	opt stack 26
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;incstack = 0
  6669  00241A  0E00               	movlw	0
  6670  00241C  0100               	movlb	0	; () banked
  6671  00241E  6FD9               	movwf	___aldiv@sign& (0+255),b
  6672                           
  6673                           ; BSR set to: 0
  6674  002420  0100               	movlb	0	; () banked
  6675  002422  AFD7               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6676  002424  D00C               	goto	l3866
  6677                           
  6678                           ; BSR set to: 0
  6679  002426  0100               	movlb	0	; () banked
  6680  002428  1FD7               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6681  00242A  1FD6               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6682  00242C  1FD5               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6683  00242E  6DD4               	negf	___aldiv@divisor& (0+255),b
  6684  002430  0E00               	movlw	0
  6685  002432  23D5               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6686  002434  23D6               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6687  002436  23D7               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6688                           
  6689                           ; BSR set to: 0
  6690  002438  0E01               	movlw	1
  6691  00243A  0100               	movlb	0	; () banked
  6692  00243C  6FD9               	movwf	___aldiv@sign& (0+255),b
  6693  00243E                     l3866:
  6694                           
  6695                           ; BSR set to: 0
  6696  00243E  0100               	movlb	0	; () banked
  6697  002440  AFD3               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6698  002442  D00C               	goto	l3872
  6699                           
  6700                           ; BSR set to: 0
  6701  002444  0100               	movlb	0	; () banked
  6702  002446  1FD3               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6703  002448  1FD2               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6704  00244A  1FD1               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6705  00244C  6DD0               	negf	___aldiv@dividend& (0+255),b
  6706  00244E  0E00               	movlw	0
  6707  002450  23D1               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6708  002452  23D2               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6709  002454  23D3               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6710                           
  6711                           ; BSR set to: 0
  6712  002456  0E01               	movlw	1
  6713  002458  0100               	movlb	0	; () banked
  6714  00245A  1BD9               	xorwf	___aldiv@sign& (0+255),f,b
  6715  00245C                     l3872:
  6716                           
  6717                           ; BSR set to: 0
  6718  00245C  0E00               	movlw	0
  6719  00245E  0100               	movlb	0	; () banked
  6720  002460  6FDA               	movwf	___aldiv@quotient& (0+255),b
  6721  002462  0E00               	movlw	0
  6722  002464  6FDB               	movwf	(___aldiv@quotient+1)& (0+255),b
  6723  002466  0E00               	movlw	0
  6724  002468  6FDC               	movwf	(___aldiv@quotient+2)& (0+255),b
  6725  00246A  0E00               	movlw	0
  6726  00246C  6FDD               	movwf	(___aldiv@quotient+3)& (0+255),b
  6727                           
  6728                           ; BSR set to: 0
  6729  00246E  0100               	movlb	0	; () banked
  6730  002470  51D4               	movf	___aldiv@divisor& (0+255),w,b
  6731  002472  0100               	movlb	0	; () banked
  6732  002474  11D5               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6733  002476  0100               	movlb	0	; () banked
  6734  002478  11D6               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6735  00247A  0100               	movlb	0	; () banked
  6736  00247C  11D7               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6737  00247E  B4D8               	btfsc	status,2,c
  6738  002480  D042               	goto	l3894
  6739                           
  6740                           ; BSR set to: 0
  6741  002482  0E01               	movlw	1
  6742  002484  0100               	movlb	0	; () banked
  6743  002486  6FD8               	movwf	___aldiv@counter& (0+255),b
  6744  002488  D008               	goto	l3880
  6745  00248A                     l3878:
  6746                           
  6747                           ; BSR set to: 0
  6748  00248A  0100               	movlb	0	; () banked
  6749  00248C  90D8               	bcf	status,0,c
  6750  00248E  37D4               	rlcf	___aldiv@divisor& (0+255),f,b
  6751  002490  37D5               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6752  002492  37D6               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6753  002494  37D7               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6754  002496  0100               	movlb	0	; () banked
  6755  002498  2BD8               	incf	___aldiv@counter& (0+255),f,b
  6756  00249A                     l3880:
  6757                           
  6758                           ; BSR set to: 0
  6759  00249A  0100               	movlb	0	; () banked
  6760  00249C  AFD7               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6761  00249E  D7F5               	goto	l3878
  6762  0024A0                     l3882:
  6763                           
  6764                           ; BSR set to: 0
  6765  0024A0  0100               	movlb	0	; () banked
  6766  0024A2  90D8               	bcf	status,0,c
  6767  0024A4  37DA               	rlcf	___aldiv@quotient& (0+255),f,b
  6768  0024A6  37DB               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6769  0024A8  37DC               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6770  0024AA  37DD               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6771                           
  6772                           ; BSR set to: 0
  6773  0024AC  0100               	movlb	0	; () banked
  6774  0024AE  51D4               	movf	___aldiv@divisor& (0+255),w,b
  6775  0024B0  0100               	movlb	0	; () banked
  6776  0024B2  5DD0               	subwf	___aldiv@dividend& (0+255),w,b
  6777  0024B4  0100               	movlb	0	; () banked
  6778  0024B6  51D5               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6779  0024B8  0100               	movlb	0	; () banked
  6780  0024BA  59D1               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6781  0024BC  0100               	movlb	0	; () banked
  6782  0024BE  51D6               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6783  0024C0  0100               	movlb	0	; () banked
  6784  0024C2  59D2               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6785  0024C4  0100               	movlb	0	; () banked
  6786  0024C6  51D7               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6787  0024C8  0100               	movlb	0	; () banked
  6788  0024CA  59D3               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6789  0024CC  A0D8               	btfss	status,0,c
  6790  0024CE  D012               	goto	l3890
  6791                           
  6792                           ; BSR set to: 0
  6793  0024D0  0100               	movlb	0	; () banked
  6794  0024D2  51D4               	movf	___aldiv@divisor& (0+255),w,b
  6795  0024D4  0100               	movlb	0	; () banked
  6796  0024D6  5FD0               	subwf	___aldiv@dividend& (0+255),f,b
  6797  0024D8  0100               	movlb	0	; () banked
  6798  0024DA  51D5               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6799  0024DC  0100               	movlb	0	; () banked
  6800  0024DE  5BD1               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6801  0024E0  0100               	movlb	0	; () banked
  6802  0024E2  51D6               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6803  0024E4  0100               	movlb	0	; () banked
  6804  0024E6  5BD2               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6805  0024E8  0100               	movlb	0	; () banked
  6806  0024EA  51D7               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6807  0024EC  0100               	movlb	0	; () banked
  6808  0024EE  5BD3               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6809                           
  6810                           ; BSR set to: 0
  6811  0024F0  0100               	movlb	0	; () banked
  6812  0024F2  81DA               	bsf	___aldiv@quotient& (0+255),0,b
  6813  0024F4                     l3890:
  6814                           
  6815                           ; BSR set to: 0
  6816  0024F4  0100               	movlb	0	; () banked
  6817  0024F6  90D8               	bcf	status,0,c
  6818  0024F8  33D7               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6819  0024FA  33D6               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6820  0024FC  33D5               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6821  0024FE  33D4               	rrcf	___aldiv@divisor& (0+255),f,b
  6822                           
  6823                           ; BSR set to: 0
  6824  002500  0100               	movlb	0	; () banked
  6825  002502  2FD8               	decfsz	___aldiv@counter& (0+255),f,b
  6826  002504  D7CD               	goto	l3882
  6827  002506                     l3894:
  6828                           
  6829                           ; BSR set to: 0
  6830  002506  0100               	movlb	0	; () banked
  6831  002508  51D9               	movf	___aldiv@sign& (0+255),w,b
  6832  00250A  0100               	movlb	0	; () banked
  6833  00250C  B4D8               	btfsc	status,2,c
  6834  00250E  D009               	goto	l3898
  6835                           
  6836                           ; BSR set to: 0
  6837  002510  0100               	movlb	0	; () banked
  6838  002512  1FDD               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6839  002514  1FDC               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6840  002516  1FDB               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6841  002518  6DDA               	negf	___aldiv@quotient& (0+255),b
  6842  00251A  0E00               	movlw	0
  6843  00251C  23DB               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6844  00251E  23DC               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6845  002520  23DD               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6846  002522                     l3898:
  6847                           
  6848                           ; BSR set to: 0
  6849  002522  C0DA  F0D0         	movff	___aldiv@quotient,?___aldiv
  6850  002526  C0DB  F0D1         	movff	___aldiv@quotient+1,?___aldiv+1
  6851  00252A  C0DC  F0D2         	movff	___aldiv@quotient+2,?___aldiv+2
  6852  00252E  C0DD  F0D3         	movff	___aldiv@quotient+3,?___aldiv+3
  6853  002532  0012               	return	
  6854  002534                     __end_of___aldiv:
  6855                           	opt stack 0
  6856                           tblptru	equ	0xFF8
  6857                           tblptrh	equ	0xFF7
  6858                           tblptrl	equ	0xFF6
  6859                           tablat	equ	0xFF5
  6860                           prodh	equ	0xFF4
  6861                           prodl	equ	0xFF3
  6862                           intcon	equ	0xFF2
  6863                           intcon2	equ	0xFF1
  6864                           intcon3	equ	0xFF0
  6865                           postinc0	equ	0xFEE
  6866                           wreg	equ	0xFE8
  6867                           indf2	equ	0xFDF
  6868                           fsr2h	equ	0xFDA
  6869                           fsr2l	equ	0xFD9
  6870                           status	equ	0xFD8
  6871                           
  6872 ;; *************** function _CANisTXwarningON *****************
  6873 ;; Defined at:
  6874 ;;		line 1120 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;		None
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      unsigned char 
  6881 ;; Registers used:
  6882 ;;		wreg
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6888 ;;      Params:         0       0       0       0
  6889 ;;      Locals:         0       0       0       0
  6890 ;;      Temps:          0       0       0       0
  6891 ;;      Totals:         0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    4
  6895 ;; This function calls:
  6896 ;;		Nothing
  6897 ;; This function is called by:
  6898 ;;		_main
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text13
  6903  00298C                     __ptext13:
  6904                           	opt stack 0
  6905  00298C                     _CANisTXwarningON:
  6906                           	opt stack 26
  6907                           
  6908                           ;inc\CANlib.h: 1122: return (COMSTATbits.TXWARN);
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;incstack = 0
  6912  00298C  A474               	btfss	3956,2,c	;volatile
  6913  00298E  D002               	goto	u4100
  6914  002990  0E01               	movlw	1
  6915  002992  0012               	return	
  6916  002994                     u4100:
  6917  002994  0E00               	movlw	0
  6918  002996  0012               	return	
  6919  002998                     __end_of_CANisTXwarningON:
  6920                           	opt stack 0
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           intcon	equ	0xFF2
  6928                           intcon2	equ	0xFF1
  6929                           intcon3	equ	0xFF0
  6930                           postinc0	equ	0xFEE
  6931                           wreg	equ	0xFE8
  6932                           indf2	equ	0xFDF
  6933                           fsr2h	equ	0xFDA
  6934                           fsr2l	equ	0xFD9
  6935                           status	equ	0xFD8
  6936                           
  6937 ;; *************** function _CANisRXwarningON *****************
  6938 ;; Defined at:
  6939 ;;		line 1128 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      unsigned char 
  6946 ;; Registers used:
  6947 ;;		wreg
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6953 ;;      Params:         0       0       0       0
  6954 ;;      Locals:         0       0       0       0
  6955 ;;      Temps:          0       0       0       0
  6956 ;;      Totals:         0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    4
  6960 ;; This function calls:
  6961 ;;		Nothing
  6962 ;; This function is called by:
  6963 ;;		_main
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text14
  6968  002998                     __ptext14:
  6969                           	opt stack 0
  6970  002998                     _CANisRXwarningON:
  6971                           	opt stack 26
  6972                           
  6973                           ;inc\CANlib.h: 1130: return (COMSTATbits.RXWARN);
  6974                           
  6975                           ;incstack = 0
  6976  002998  A274               	btfss	3956,1,c	;volatile
  6977  00299A  D002               	goto	u4110
  6978  00299C  0E01               	movlw	1
  6979  00299E  0012               	return	
  6980  0029A0                     u4110:
  6981  0029A0  0E00               	movlw	0
  6982  0029A2  0012               	return	
  6983  0029A4                     __end_of_CANisRXwarningON:
  6984                           	opt stack 0
  6985                           tblptru	equ	0xFF8
  6986                           tblptrh	equ	0xFF7
  6987                           tblptrl	equ	0xFF6
  6988                           tablat	equ	0xFF5
  6989                           prodh	equ	0xFF4
  6990                           prodl	equ	0xFF3
  6991                           intcon	equ	0xFF2
  6992                           intcon2	equ	0xFF1
  6993                           intcon3	equ	0xFF0
  6994                           postinc0	equ	0xFEE
  6995                           wreg	equ	0xFE8
  6996                           indf2	equ	0xFDF
  6997                           fsr2h	equ	0xFDA
  6998                           fsr2l	equ	0xFD9
  6999                           status	equ	0xFD8
  7000                           
  7001 ;; *************** function _ADC_Read *****************
  7002 ;; Defined at:
  7003 ;;		line 339 in file "ABS_Code.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;		None               void
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7017 ;;      Params:         0       0       0       0
  7018 ;;      Locals:         0       0       0       0
  7019 ;;      Temps:          0       0       0       0
  7020 ;;      Totals:         0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    5
  7024 ;; This function calls:
  7025 ;;		___awdiv
  7026 ;; This function is called by:
  7027 ;;		_main
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text15
  7032  00281A                     __ptext15:
  7033                           	opt stack 0
  7034  00281A                     _ADC_Read:
  7035                           	opt stack 25
  7036                           
  7037                           ;ABS_Code.c: 340: ADCON0bits.GO = 1;
  7038                           
  7039                           ;incstack = 0
  7040  00281A  82C2               	bsf	4034,1,c	;volatile
  7041  00281C                     l739:
  7042  00281C  B2C2               	btfsc	4034,1,c	;volatile
  7043  00281E  D7FE               	goto	l739
  7044                           
  7045                           ;ABS_Code.c: 342: read = ADRESH;
  7046  002820  CFC4 F080          	movff	4036,_read	;volatile
  7047                           
  7048                           ;ABS_Code.c: 343: correction_factor = read - 127;
  7049  002824  0E81               	movlw	129
  7050  002826  0100               	movlb	0	; () banked
  7051  002828  2580               	addwf	_read& (0+255),w,b
  7052  00282A  0100               	movlb	0	; () banked
  7053  00282C  6F76               	movwf	_correction_factor& (0+255),b
  7054  00282E  0100               	movlb	0	; () banked
  7055  002830  6B77               	clrf	(_correction_factor+1)& (0+255),b
  7056  002832  0EFF               	movlw	255
  7057  002834  2377               	addwfc	(_correction_factor+1)& (0+255),f,b
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;ABS_Code.c: 344: home_position = correction_factor / 4 + 127;
  7061  002836  C076  F0C4         	movff	_correction_factor,___awdiv@dividend
  7062  00283A  C077  F0C5         	movff	_correction_factor+1,___awdiv@dividend+1
  7063  00283E  0E00               	movlw	0
  7064  002840  0100               	movlb	0	; () banked
  7065  002842  6FC7               	movwf	(___awdiv@divisor+1)& (0+255),b
  7066  002844  0E04               	movlw	4
  7067  002846  6FC6               	movwf	___awdiv@divisor& (0+255),b
  7068  002848  ECFC  F012         	call	___awdiv	;wreg free
  7069  00284C  0100               	movlb	0	; () banked
  7070  00284E  51C4               	movf	?___awdiv& (0+255),w,b
  7071  002850  0F7F               	addlw	127
  7072  002852  0100               	movlb	0	; () banked
  7073  002854  6F7F               	movwf	_home_position& (0+255),b
  7074                           
  7075                           ; BSR set to: 0
  7076  002856  0012               	return		;funcret
  7077  002858                     __end_of_ADC_Read:
  7078                           	opt stack 0
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           intcon	equ	0xFF2
  7086                           intcon2	equ	0xFF1
  7087                           intcon3	equ	0xFF0
  7088                           postinc0	equ	0xFEE
  7089                           wreg	equ	0xFE8
  7090                           indf2	equ	0xFDF
  7091                           fsr2h	equ	0xFDA
  7092                           fsr2l	equ	0xFD9
  7093                           status	equ	0xFD8
  7094                           
  7095 ;; *************** function ___awdiv *****************
  7096 ;; Defined at:
  7097 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  dividend        2   26[BANK0 ] int 
  7100 ;;  divisor         2   28[BANK0 ] int 
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;  quotient        2   32[BANK0 ] int 
  7103 ;;  sign            1   31[BANK0 ] unsigned char 
  7104 ;;  counter         1   30[BANK0 ] unsigned char 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  2   26[BANK0 ] int 
  7107 ;; Registers used:
  7108 ;;		wreg, status,2, status,0
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7114 ;;      Params:         0       4       0       0
  7115 ;;      Locals:         0       4       0       0
  7116 ;;      Temps:          0       0       0       0
  7117 ;;      Totals:         0       8       0       0
  7118 ;;Total ram usage:        8 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:    4
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_main
  7125 ;;		_ADC_Read
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text16
  7130  0025F8                     __ptext16:
  7131                           	opt stack 0
  7132  0025F8                     ___awdiv:
  7133                           	opt stack 26
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;incstack = 0
  7137  0025F8  0E00               	movlw	0
  7138  0025FA  0100               	movlb	0	; () banked
  7139  0025FC  6FC9               	movwf	___awdiv@sign& (0+255),b
  7140                           
  7141                           ; BSR set to: 0
  7142  0025FE  0100               	movlb	0	; () banked
  7143  002600  AFC7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7144  002602  D008               	goto	l3504
  7145                           
  7146                           ; BSR set to: 0
  7147  002604  0100               	movlb	0	; () banked
  7148  002606  6DC6               	negf	___awdiv@divisor& (0+255),b
  7149  002608  1FC7               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7150  00260A  B0D8               	btfsc	status,0,c
  7151  00260C  2BC7               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7152                           
  7153                           ; BSR set to: 0
  7154  00260E  0E01               	movlw	1
  7155  002610  0100               	movlb	0	; () banked
  7156  002612  6FC9               	movwf	___awdiv@sign& (0+255),b
  7157  002614                     l3504:
  7158                           
  7159                           ; BSR set to: 0
  7160  002614  0100               	movlb	0	; () banked
  7161  002616  AFC5               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7162  002618  D008               	goto	l3510
  7163                           
  7164                           ; BSR set to: 0
  7165  00261A  0100               	movlb	0	; () banked
  7166  00261C  6DC4               	negf	___awdiv@dividend& (0+255),b
  7167  00261E  1FC5               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7168  002620  B0D8               	btfsc	status,0,c
  7169  002622  2BC5               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7170                           
  7171                           ; BSR set to: 0
  7172  002624  0E01               	movlw	1
  7173  002626  0100               	movlb	0	; () banked
  7174  002628  1BC9               	xorwf	___awdiv@sign& (0+255),f,b
  7175  00262A                     l3510:
  7176                           
  7177                           ; BSR set to: 0
  7178  00262A  0E00               	movlw	0
  7179  00262C  0100               	movlb	0	; () banked
  7180  00262E  6FCB               	movwf	(___awdiv@quotient+1)& (0+255),b
  7181  002630  0E00               	movlw	0
  7182  002632  6FCA               	movwf	___awdiv@quotient& (0+255),b
  7183                           
  7184                           ; BSR set to: 0
  7185  002634  0100               	movlb	0	; () banked
  7186  002636  51C6               	movf	___awdiv@divisor& (0+255),w,b
  7187  002638  0100               	movlb	0	; () banked
  7188  00263A  11C7               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7189  00263C  B4D8               	btfsc	status,2,c
  7190  00263E  D02C               	goto	l3532
  7191                           
  7192                           ; BSR set to: 0
  7193  002640  0E01               	movlw	1
  7194  002642  0100               	movlb	0	; () banked
  7195  002644  6FC8               	movwf	___awdiv@counter& (0+255),b
  7196  002646  D006               	goto	l3518
  7197  002648                     l3516:
  7198                           
  7199                           ; BSR set to: 0
  7200  002648  0100               	movlb	0	; () banked
  7201  00264A  90D8               	bcf	status,0,c
  7202  00264C  37C6               	rlcf	___awdiv@divisor& (0+255),f,b
  7203  00264E  37C7               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7204  002650  0100               	movlb	0	; () banked
  7205  002652  2BC8               	incf	___awdiv@counter& (0+255),f,b
  7206  002654                     l3518:
  7207                           
  7208                           ; BSR set to: 0
  7209  002654  0100               	movlb	0	; () banked
  7210  002656  AFC7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7211  002658  D7F7               	goto	l3516
  7212  00265A                     l3520:
  7213                           
  7214                           ; BSR set to: 0
  7215  00265A  0100               	movlb	0	; () banked
  7216  00265C  90D8               	bcf	status,0,c
  7217  00265E  37CA               	rlcf	___awdiv@quotient& (0+255),f,b
  7218  002660  37CB               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7219                           
  7220                           ; BSR set to: 0
  7221  002662  0100               	movlb	0	; () banked
  7222  002664  51C6               	movf	___awdiv@divisor& (0+255),w,b
  7223  002666  0100               	movlb	0	; () banked
  7224  002668  5DC4               	subwf	___awdiv@dividend& (0+255),w,b
  7225  00266A  0100               	movlb	0	; () banked
  7226  00266C  51C7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7227  00266E  0100               	movlb	0	; () banked
  7228  002670  59C5               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7229  002672  A0D8               	btfss	status,0,c
  7230  002674  D00A               	goto	l3528
  7231                           
  7232                           ; BSR set to: 0
  7233  002676  0100               	movlb	0	; () banked
  7234  002678  51C6               	movf	___awdiv@divisor& (0+255),w,b
  7235  00267A  0100               	movlb	0	; () banked
  7236  00267C  5FC4               	subwf	___awdiv@dividend& (0+255),f,b
  7237  00267E  0100               	movlb	0	; () banked
  7238  002680  51C7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7239  002682  0100               	movlb	0	; () banked
  7240  002684  5BC5               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7241                           
  7242                           ; BSR set to: 0
  7243  002686  0100               	movlb	0	; () banked
  7244  002688  81CA               	bsf	___awdiv@quotient& (0+255),0,b
  7245  00268A                     l3528:
  7246                           
  7247                           ; BSR set to: 0
  7248  00268A  0100               	movlb	0	; () banked
  7249  00268C  90D8               	bcf	status,0,c
  7250  00268E  33C7               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7251  002690  33C6               	rrcf	___awdiv@divisor& (0+255),f,b
  7252                           
  7253                           ; BSR set to: 0
  7254  002692  0100               	movlb	0	; () banked
  7255  002694  2FC8               	decfsz	___awdiv@counter& (0+255),f,b
  7256  002696  D7E1               	goto	l3520
  7257  002698                     l3532:
  7258                           
  7259                           ; BSR set to: 0
  7260  002698  0100               	movlb	0	; () banked
  7261  00269A  51C9               	movf	___awdiv@sign& (0+255),w,b
  7262  00269C  0100               	movlb	0	; () banked
  7263  00269E  B4D8               	btfsc	status,2,c
  7264  0026A0  D005               	goto	l3536
  7265                           
  7266                           ; BSR set to: 0
  7267  0026A2  0100               	movlb	0	; () banked
  7268  0026A4  6DCA               	negf	___awdiv@quotient& (0+255),b
  7269  0026A6  1FCB               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7270  0026A8  B0D8               	btfsc	status,0,c
  7271  0026AA  2BCB               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7272  0026AC                     l3536:
  7273                           
  7274                           ; BSR set to: 0
  7275  0026AC  C0CA  F0C4         	movff	___awdiv@quotient,?___awdiv
  7276  0026B0  C0CB  F0C5         	movff	___awdiv@quotient+1,?___awdiv+1
  7277  0026B4  0012               	return	
  7278  0026B6                     __end_of___awdiv:
  7279                           	opt stack 0
  7280                           tblptru	equ	0xFF8
  7281                           tblptrh	equ	0xFF7
  7282                           tblptrl	equ	0xFF6
  7283                           tablat	equ	0xFF5
  7284                           prodh	equ	0xFF4
  7285                           prodl	equ	0xFF3
  7286                           intcon	equ	0xFF2
  7287                           intcon2	equ	0xFF1
  7288                           intcon3	equ	0xFF0
  7289                           postinc0	equ	0xFEE
  7290                           wreg	equ	0xFE8
  7291                           indf2	equ	0xFDF
  7292                           fsr2h	equ	0xFDA
  7293                           fsr2l	equ	0xFD9
  7294                           status	equ	0xFD8
  7295                           
  7296 ;; *************** function _ISR_Bassa *****************
  7297 ;; Defined at:
  7298 ;;		line 190 in file "ABS_Code.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;		None
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;		None               void
  7305 ;; Registers used:
  7306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7312 ;;      Params:         0       0       0       0
  7313 ;;      Locals:         0       0       0       0
  7314 ;;      Temps:         17       0       0       0
  7315 ;;      Totals:        17       0       0       0
  7316 ;;Total ram usage:       17 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    3
  7319 ;; This function calls:
  7320 ;;		_CANisRxReady
  7321 ;;		_CANreceiveMessage
  7322 ;; This function is called by:
  7323 ;;		Interrupt level 1
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	intcodelo
  7328  000018                     __pintcodelo:
  7329                           	opt stack 0
  7330  000018                     _ISR_Bassa:
  7331                           	opt stack 24
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;incstack = 0
  7335  000018  803F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7336  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7337  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7338  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7339  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7340  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7341  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7342  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7343  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7344  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7345  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7346  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7347  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7348  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7349  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7350  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7351  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7352  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7353                           
  7354                           ;ABS_Code.c: 192: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7355  00005E  A0A4               	btfss	4004,0,c	;volatile
  7356  000060  B2A4               	btfsc	4004,1,c	;volatile
  7357  000062  D001               	goto	i1l4052
  7358  000064  D029               	goto	i1l686
  7359  000066                     i1l4052:
  7360                           
  7361                           ;ABS_Code.c: 193: if (CANisRxReady()) {
  7362  000066  ECB2  F014         	call	_CANisRxReady	;wreg free
  7363  00006A  0900               	iorlw	0
  7364  00006C  B4D8               	btfsc	status,2,c
  7365  00006E  D022               	goto	i1l689
  7366                           
  7367                           ;ABS_Code.c: 194: CANreceiveMessage(&msg);
  7368  000070  0E82               	movlw	low _msg
  7369  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7370  000074  0E00               	movlw	high _msg
  7371  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7372  000078  ECD3  F009         	call	_CANreceiveMessage	;wreg free
  7373                           
  7374                           ;ABS_Code.c: 195: if (msg.RTR == 1) {
  7375  00007C  0100               	movlb	0	; () banked
  7376  00007E  0590               	decf	(_msg+14)& (0+255),w,b
  7377  000080  A4D8               	btfss	status,2,c
  7378  000082  D009               	goto	i1l4060
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;ABS_Code.c: 196: remote_frame_id = msg.identifier;
  7382  000084  C082  F068         	movff	_msg,_remote_frame_id	;volatile
  7383  000088  C083  F069         	movff	_msg+1,_remote_frame_id+1	;volatile
  7384  00008C  C084  F06A         	movff	_msg+2,_remote_frame_id+2	;volatile
  7385  000090  C085  F06B         	movff	_msg+3,_remote_frame_id+3	;volatile
  7386                           
  7387                           ;ABS_Code.c: 197: remote_frame = 1;
  7388  000094  8C3D               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7389  000096                     i1l4060:
  7390                           
  7391                           ; BSR set to: 0
  7392                           ;ABS_Code.c: 198: }
  7393                           ;ABS_Code.c: 199: if (msg.identifier == 0b00000000000000000000000000100) {
  7394  000096  0E04               	movlw	4
  7395  000098  0100               	movlb	0	; () banked
  7396  00009A  1982               	xorwf	_msg& (0+255),w,b
  7397  00009C  0100               	movlb	0	; () banked
  7398  00009E  1183               	iorwf	(_msg+1)& (0+255),w,b
  7399  0000A0  0100               	movlb	0	; () banked
  7400  0000A2  1184               	iorwf	(_msg+2)& (0+255),w,b
  7401  0000A4  0100               	movlb	0	; () banked
  7402  0000A6  1185               	iorwf	(_msg+3)& (0+255),w,b
  7403  0000A8  A4D8               	btfss	status,2,c
  7404  0000AA  D004               	goto	i1l689
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;ABS_Code.c: 200: brake_signal_CAN = msg.data[0];
  7408  0000AC  C086  F07D         	movff	_msg+4,_brake_signal_CAN	;volatile
  7409                           
  7410                           ;ABS_Code.c: 201: Analogic_Mode = msg.data[1];
  7411  0000B0  C087  F07C         	movff	_msg+5,_Analogic_Mode	;volatile
  7412  0000B4                     i1l689:
  7413                           
  7414                           ;ABS_Code.c: 202: }
  7415                           ;ABS_Code.c: 203: }
  7416                           ;ABS_Code.c: 204: PIR3bits.RXB0IF = 0;
  7417  0000B4  90A4               	bcf	4004,0,c	;volatile
  7418                           
  7419                           ;ABS_Code.c: 205: PIR3bits.RXB1IF = 0;
  7420  0000B6  92A4               	bcf	4004,1,c	;volatile
  7421  0000B8                     i1l686:
  7422                           
  7423                           ;ABS_Code.c: 206: }
  7424                           ;ABS_Code.c: 209: if (PIR1bits.TMR1IF == 1) {
  7425  0000B8  A09E               	btfss	3998,0,c	;volatile
  7426  0000BA  D002               	goto	i1l692
  7427                           
  7428                           ;ABS_Code.c: 210: TMR1_overflow = 1;
  7429  0000BC  843D               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7430                           
  7431                           ;ABS_Code.c: 211: PIR1bits.TMR1IF = 0;
  7432  0000BE  909E               	bcf	3998,0,c	;volatile
  7433  0000C0                     i1l692:
  7434                           
  7435                           ;ABS_Code.c: 212: }
  7436                           ;ABS_Code.c: 215: if (PIR2bits.TMR3IF == 1) {
  7437  0000C0  A2A1               	btfss	4001,1,c	;volatile
  7438  0000C2  D002               	goto	i1l694
  7439                           
  7440                           ;ABS_Code.c: 216: TMR3_overflow = 1;
  7441  0000C4  863D               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7442                           
  7443                           ;ABS_Code.c: 217: PIR2bits.TMR3IF = 0;
  7444  0000C6  92A1               	bcf	4001,1,c	;volatile
  7445  0000C8                     i1l694:
  7446  0000C8  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7447  0000CC  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7448  0000D0  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7449  0000D4  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7450  0000D8  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7451  0000DC  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7452  0000E0  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7453  0000E4  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7454  0000E8  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7455  0000EC  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7456  0000F0  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7457  0000F4  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7458  0000F8  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7459  0000FC  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7460  000100  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7461  000104  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7462  000108  C00D  FFD8         	movff	??_ISR_Bassa,status
  7463  00010C  903F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7464  00010E  0010               	retfie	
  7465  000110                     __end_of_ISR_Bassa:
  7466                           	opt stack 0
  7467                           pclatu	equ	0xFFB
  7468                           pclath	equ	0xFFA
  7469                           tblptru	equ	0xFF8
  7470                           tblptrh	equ	0xFF7
  7471                           tblptrl	equ	0xFF6
  7472                           tablat	equ	0xFF5
  7473                           prodh	equ	0xFF4
  7474                           prodl	equ	0xFF3
  7475                           intcon	equ	0xFF2
  7476                           intcon2	equ	0xFF1
  7477                           intcon3	equ	0xFF0
  7478                           postinc0	equ	0xFEE
  7479                           fsr0h	equ	0xFEA
  7480                           fsr0l	equ	0xFE9
  7481                           wreg	equ	0xFE8
  7482                           fsr1h	equ	0xFE2
  7483                           fsr1l	equ	0xFE1
  7484                           bsr	equ	0xFE0
  7485                           indf2	equ	0xFDF
  7486                           fsr2h	equ	0xFDA
  7487                           fsr2l	equ	0xFD9
  7488                           status	equ	0xFD8
  7489                           
  7490 ;; *************** function _CANreceiveMessage *****************
  7491 ;; Defined at:
  7492 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  msg             2    0[COMRAM] PTR struct .
  7495 ;;		 -> msg(15), 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  tamp            1   11[COMRAM] unsigned char 
  7498 ;;  error           1   10[COMRAM] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      unsigned char 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7508 ;;      Params:         2       0       0       0
  7509 ;;      Locals:         2       0       0       0
  7510 ;;      Temps:          8       0       0       0
  7511 ;;      Totals:        12       0       0       0
  7512 ;;Total ram usage:       12 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:    2
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_ISR_Bassa
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text18
  7523  0013A6                     __ptext18:
  7524                           	opt stack 0
  7525  0013A6                     _CANreceiveMessage:
  7526                           	opt stack 24
  7527                           
  7528                           ;inc\CANlib.h: 531: BYTE tamp;
  7529                           ;inc\CANlib.h: 532: BYTE error = 0;
  7530                           
  7531                           ;incstack = 0
  7532  0013A6  0E00               	movlw	0
  7533  0013A8  6E0B               	movwf	CANreceiveMessage@error,c
  7534                           
  7535                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  7536  0013AA  BE74               	btfsc	3956,7,c	;volatile
  7537                           
  7538                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  7539  0013AC  800B               	bsf	CANreceiveMessage@error,0,c
  7540                           
  7541                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  7542  0013AE  BC74               	btfsc	3956,6,c	;volatile
  7543                           
  7544                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  7545  0013B0  820B               	bsf	CANreceiveMessage@error,1,c
  7546                           
  7547                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  7548  0013B2  010F               	movlb	15	; () banked
  7549  0013B4  AF50               	btfss	80,7,b	;volatile
  7550  0013B6  D143               	goto	i1l430
  7551                           
  7552                           ; BSR set to: 15
  7553                           ;inc\CANlib.h: 542: {
  7554                           ;inc\CANlib.h: 543: msg->identifier = 0;
  7555  0013B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7556  0013BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7557  0013C0  6ADE               	clrf	postinc2,c
  7558  0013C2  6ADE               	clrf	postinc2,c
  7559  0013C4  6ADE               	clrf	postinc2,c
  7560  0013C6  6ADD               	clrf	postdec2,c
  7561                           
  7562                           ; BSR set to: 15
  7563                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  7564  0013C8  EE20 F004          	lfsr	2,4
  7565  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7566  0013CE  26D9               	addwf	fsr2l,f,c
  7567  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7568  0013D2  22DA               	addwfc	fsr2h,f,c
  7569  0013D4  CF56 FFDF          	movff	3926,indf2	;volatile
  7570                           
  7571                           ; BSR set to: 15
  7572                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  7573  0013D8  EE20 F005          	lfsr	2,5
  7574  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7575  0013DE  26D9               	addwf	fsr2l,f,c
  7576  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7577  0013E2  22DA               	addwfc	fsr2h,f,c
  7578  0013E4  CF57 FFDF          	movff	3927,indf2	;volatile
  7579                           
  7580                           ; BSR set to: 15
  7581                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  7582  0013E8  EE20 F006          	lfsr	2,6
  7583  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7584  0013EE  26D9               	addwf	fsr2l,f,c
  7585  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7586  0013F2  22DA               	addwfc	fsr2h,f,c
  7587  0013F4  CF58 FFDF          	movff	3928,indf2	;volatile
  7588                           
  7589                           ; BSR set to: 15
  7590                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  7591  0013F8  EE20 F007          	lfsr	2,7
  7592  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7593  0013FE  26D9               	addwf	fsr2l,f,c
  7594  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7595  001402  22DA               	addwfc	fsr2h,f,c
  7596  001404  CF59 FFDF          	movff	3929,indf2	;volatile
  7597                           
  7598                           ; BSR set to: 15
  7599                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  7600  001408  EE20 F008          	lfsr	2,8
  7601  00140C  5001               	movf	CANreceiveMessage@msg,w,c
  7602  00140E  26D9               	addwf	fsr2l,f,c
  7603  001410  5002               	movf	CANreceiveMessage@msg+1,w,c
  7604  001412  22DA               	addwfc	fsr2h,f,c
  7605  001414  CF5A FFDF          	movff	3930,indf2	;volatile
  7606                           
  7607                           ; BSR set to: 15
  7608                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  7609  001418  EE20 F009          	lfsr	2,9
  7610  00141C  5001               	movf	CANreceiveMessage@msg,w,c
  7611  00141E  26D9               	addwf	fsr2l,f,c
  7612  001420  5002               	movf	CANreceiveMessage@msg+1,w,c
  7613  001422  22DA               	addwfc	fsr2h,f,c
  7614  001424  CF5B FFDF          	movff	3931,indf2	;volatile
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  7618  001428  EE20 F00A          	lfsr	2,10
  7619  00142C  5001               	movf	CANreceiveMessage@msg,w,c
  7620  00142E  26D9               	addwf	fsr2l,f,c
  7621  001430  5002               	movf	CANreceiveMessage@msg+1,w,c
  7622  001432  22DA               	addwfc	fsr2h,f,c
  7623  001434  CF5C FFDF          	movff	3932,indf2	;volatile
  7624                           
  7625                           ; BSR set to: 15
  7626                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  7627  001438  EE20 F00B          	lfsr	2,11
  7628  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7629  00143E  26D9               	addwf	fsr2l,f,c
  7630  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7631  001442  22DA               	addwfc	fsr2h,f,c
  7632  001444  CF5D FFDF          	movff	3933,indf2	;volatile
  7633                           
  7634                           ; BSR set to: 15
  7635                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  7636  001448  EE20 F00E          	lfsr	2,14
  7637  00144C  5001               	movf	CANreceiveMessage@msg,w,c
  7638  00144E  26D9               	addwf	fsr2l,f,c
  7639  001450  5002               	movf	CANreceiveMessage@msg+1,w,c
  7640  001452  22DA               	addwfc	fsr2h,f,c
  7641  001454  010F               	movlb	15	; () banked
  7642  001456  AD55               	btfss	85,6,b	;volatile
  7643  001458  D002               	goto	i1u389_20
  7644  00145A  0E01               	movlw	1
  7645  00145C  D001               	goto	i1u389_26
  7646  00145E                     i1u389_20:
  7647  00145E  0E00               	movlw	0
  7648  001460                     i1u389_26:
  7649  001460  6EDF               	movwf	indf2,c
  7650                           
  7651                           ; BSR set to: 15
  7652                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  7653  001462  EE20 F00D          	lfsr	2,13
  7654  001466  5001               	movf	CANreceiveMessage@msg,w,c
  7655  001468  26D9               	addwf	fsr2l,f,c
  7656  00146A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7657  00146C  22DA               	addwfc	fsr2h,f,c
  7658  00146E  010F               	movlb	15	; () banked
  7659  001470  5155               	movf	85,w,b	;volatile
  7660  001472  0B0F               	andlw	15
  7661  001474  6EDF               	movwf	indf2,c
  7662                           
  7663                           ; BSR set to: 15
  7664                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  7665  001476  EE20 F00C          	lfsr	2,12
  7666  00147A  5001               	movf	CANreceiveMessage@msg,w,c
  7667  00147C  26D9               	addwf	fsr2l,f,c
  7668  00147E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7669  001480  22DA               	addwfc	fsr2h,f,c
  7670  001482  010F               	movlb	15	; () banked
  7671  001484  A752               	btfss	82,3,b	;volatile
  7672  001486  D002               	goto	i1u390_20
  7673  001488  0E01               	movlw	1
  7674  00148A  D001               	goto	i1u390_26
  7675  00148C                     i1u390_20:
  7676  00148C  0E00               	movlw	0
  7677  00148E                     i1u390_26:
  7678  00148E  6EDF               	movwf	indf2,c
  7679                           
  7680                           ; BSR set to: 15
  7681                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  7682  001490  010F               	movlb	15	; () banked
  7683  001492  B752               	btfsc	82,3,b	;volatile
  7684  001494  D044               	goto	i1l3584
  7685                           
  7686                           ; BSR set to: 15
  7687                           ;inc\CANlib.h: 560: {
  7688                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7689  001496  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7690  00149A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7691  00149C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7692  00149E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7693  0014A0  0E03               	movlw	3
  7694  0014A2                     i1u392_25:
  7695  0014A2  90D8               	bcf	status,0,c
  7696  0014A4  3603               	rlcf	??_CANreceiveMessage,f,c
  7697  0014A6  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7698  0014A8  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7699  0014AA  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7700  0014AC  2EE8               	decfsz	wreg,f,c
  7701  0014AE  D7F9               	goto	i1u392_25
  7702  0014B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7703  0014B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7704  0014B8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7705  0014BC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7706  0014C0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7707  0014C4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7708                           
  7709                           ; BSR set to: 15
  7710                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7711  0014C8  010F               	movlb	15	; () banked
  7712  0014CA  3952               	swapf	82,w,b	;volatile
  7713  0014CC  42E8               	rrncf	wreg,f,c
  7714  0014CE  0B07               	andlw	7
  7715  0014D0  0B07               	andlw	7
  7716  0014D2  6E0C               	movwf	CANreceiveMessage@tamp,c
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  7720  0014D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7721  0014D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7722  0014DC  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7723  0014E0  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7724  0014E4  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7725  0014E8  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7726  0014EC  500C               	movf	CANreceiveMessage@tamp,w,c
  7727  0014EE  2403               	addwf	??_CANreceiveMessage,w,c
  7728  0014F0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7729  0014F2  0E00               	movlw	0
  7730  0014F4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7731  0014F6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7732  0014F8  0E00               	movlw	0
  7733  0014FA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7734  0014FC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7735  0014FE  0E00               	movlw	0
  7736  001500  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7737  001502  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7738  001504  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7739  001508  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7740  00150C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7741  001510  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7742  001514  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7743  001518  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7744                           
  7745                           ;inc\CANlib.h: 564: }
  7746  00151C  D08D               	goto	i1l3610
  7747  00151E                     i1l3584:
  7748                           
  7749                           ; BSR set to: 15
  7750                           ;inc\CANlib.h: 565: else
  7751                           ;inc\CANlib.h: 566: {
  7752                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  7753  00151E  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7754  001522  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7755  001524  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7756  001526  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7757  001528  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7758  00152C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7759  001530  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7760  001534  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7761  001538  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7762  00153C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7763                           
  7764                           ; BSR set to: 15
  7765                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7766  001540  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7767  001544  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7768  001546  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7769  001548  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7770  00154A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7771  00154E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7772  001552  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7773  001556  6A03               	clrf	??_CANreceiveMessage,c
  7774  001558  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7775  00155C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7776  001560  5003               	movf	??_CANreceiveMessage,w,c
  7777  001562  26DE               	addwf	postinc2,f,c
  7778  001564  5004               	movf	??_CANreceiveMessage+1,w,c
  7779  001566  22DE               	addwfc	postinc2,f,c
  7780  001568  5005               	movf	??_CANreceiveMessage+2,w,c
  7781  00156A  22DE               	addwfc	postinc2,f,c
  7782  00156C  5006               	movf	??_CANreceiveMessage+3,w,c
  7783  00156E  22DE               	addwfc	postinc2,f,c
  7784                           
  7785                           ; BSR set to: 15
  7786                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  7787  001570  010F               	movlb	15	; () banked
  7788  001572  A152               	btfss	82,0,b	;volatile
  7789  001574  D00C               	goto	i1l3592
  7790                           
  7791                           ; BSR set to: 15
  7792                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  7793  001576  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7794  00157A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7795  00157E  0E00               	movlw	0
  7796  001580  12DE               	iorwf	postinc2,f,c
  7797  001582  0E00               	movlw	0
  7798  001584  12DE               	iorwf	postinc2,f,c
  7799  001586  0E01               	movlw	1
  7800  001588  12DE               	iorwf	postinc2,f,c
  7801  00158A  0E00               	movlw	0
  7802  00158C  12DE               	iorwf	postinc2,f,c
  7803  00158E                     i1l3592:
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  7807  00158E  010F               	movlb	15	; () banked
  7808  001590  A352               	btfss	82,1,b	;volatile
  7809  001592  D00C               	goto	i1l3596
  7810                           
  7811                           ; BSR set to: 15
  7812                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  7813  001594  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7814  001598  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7815  00159C  0E00               	movlw	0
  7816  00159E  12DE               	iorwf	postinc2,f,c
  7817  0015A0  0E00               	movlw	0
  7818  0015A2  12DE               	iorwf	postinc2,f,c
  7819  0015A4  0E02               	movlw	2
  7820  0015A6  12DE               	iorwf	postinc2,f,c
  7821  0015A8  0E00               	movlw	0
  7822  0015AA  12DE               	iorwf	postinc2,f,c
  7823  0015AC                     i1l3596:
  7824                           
  7825                           ; BSR set to: 15
  7826                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  7827  0015AC  010F               	movlb	15	; () banked
  7828  0015AE  AB52               	btfss	82,5,b	;volatile
  7829  0015B0  D00C               	goto	i1l3600
  7830                           
  7831                           ; BSR set to: 15
  7832                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  7833  0015B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7834  0015B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7835  0015BA  0E00               	movlw	0
  7836  0015BC  12DE               	iorwf	postinc2,f,c
  7837  0015BE  0E00               	movlw	0
  7838  0015C0  12DE               	iorwf	postinc2,f,c
  7839  0015C2  0E04               	movlw	4
  7840  0015C4  12DE               	iorwf	postinc2,f,c
  7841  0015C6  0E00               	movlw	0
  7842  0015C8  12DE               	iorwf	postinc2,f,c
  7843  0015CA                     i1l3600:
  7844                           
  7845                           ; BSR set to: 15
  7846                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  7847  0015CA  010F               	movlb	15	; () banked
  7848  0015CC  AD52               	btfss	82,6,b	;volatile
  7849  0015CE  D00C               	goto	i1l3604
  7850                           
  7851                           ; BSR set to: 15
  7852                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  7853  0015D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7854  0015D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7855  0015D8  0E00               	movlw	0
  7856  0015DA  12DE               	iorwf	postinc2,f,c
  7857  0015DC  0E00               	movlw	0
  7858  0015DE  12DE               	iorwf	postinc2,f,c
  7859  0015E0  0E08               	movlw	8
  7860  0015E2  12DE               	iorwf	postinc2,f,c
  7861  0015E4  0E00               	movlw	0
  7862  0015E6  12DE               	iorwf	postinc2,f,c
  7863  0015E8                     i1l3604:
  7864                           
  7865                           ; BSR set to: 15
  7866                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  7867  0015E8  010F               	movlb	15	; () banked
  7868  0015EA  AF52               	btfss	82,7,b	;volatile
  7869  0015EC  D00C               	goto	i1l3608
  7870                           
  7871                           ; BSR set to: 15
  7872                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  7873  0015EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7874  0015F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7875  0015F6  0E00               	movlw	0
  7876  0015F8  12DE               	iorwf	postinc2,f,c
  7877  0015FA  0E00               	movlw	0
  7878  0015FC  12DE               	iorwf	postinc2,f,c
  7879  0015FE  0E10               	movlw	16
  7880  001600  12DE               	iorwf	postinc2,f,c
  7881  001602  0E00               	movlw	0
  7882  001604  12DE               	iorwf	postinc2,f,c
  7883  001606                     i1l3608:
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7887  001606  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7888  00160A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7889  00160C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7890  00160E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7891  001610  0E15               	movlw	21
  7892  001612                     i1u398_25:
  7893  001612  90D8               	bcf	status,0,c
  7894  001614  3603               	rlcf	??_CANreceiveMessage,f,c
  7895  001616  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7896  001618  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7897  00161A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7898  00161C  2EE8               	decfsz	wreg,f,c
  7899  00161E  D7F9               	goto	i1u398_25
  7900  001620  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7901  001624  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7902  001628  5003               	movf	??_CANreceiveMessage,w,c
  7903  00162A  12DE               	iorwf	postinc2,f,c
  7904  00162C  5004               	movf	??_CANreceiveMessage+1,w,c
  7905  00162E  12DE               	iorwf	postinc2,f,c
  7906  001630  5005               	movf	??_CANreceiveMessage+2,w,c
  7907  001632  12DE               	iorwf	postinc2,f,c
  7908  001634  5006               	movf	??_CANreceiveMessage+3,w,c
  7909  001636  12DE               	iorwf	postinc2,f,c
  7910  001638                     i1l3610:
  7911                           
  7912                           ; BSR set to: 15
  7913                           ;inc\CANlib.h: 582: }
  7914                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  7915  001638  010F               	movlb	15	; () banked
  7916  00163A  9F50               	bcf	80,7,b	;volatile
  7917                           
  7918                           ; BSR set to: 15
  7919                           ;inc\CANlib.h: 585: return (error);
  7920                           ;	Return value of _CANreceiveMessage is never used
  7921  00163C  0012               	return	
  7922  00163E                     i1l430:
  7923                           
  7924                           ; BSR set to: 15
  7925                           ;inc\CANlib.h: 586: }
  7926                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  7927  00163E  AE60               	btfss	3936,7,c	;volatile
  7928  001640  0012               	return	
  7929                           
  7930                           ; BSR set to: 15
  7931                           ;inc\CANlib.h: 589: {
  7932                           ;inc\CANlib.h: 590: msg->identifier = 0;
  7933  001642  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7934  001646  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7935  00164A  6ADE               	clrf	postinc2,c
  7936  00164C  6ADE               	clrf	postinc2,c
  7937  00164E  6ADE               	clrf	postinc2,c
  7938  001650  6ADD               	clrf	postdec2,c
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  7942  001652  EE20 F004          	lfsr	2,4
  7943  001656  5001               	movf	CANreceiveMessage@msg,w,c
  7944  001658  26D9               	addwf	fsr2l,f,c
  7945  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7946  00165C  22DA               	addwfc	fsr2h,f,c
  7947  00165E  CF66 FFDF          	movff	3942,indf2	;volatile
  7948                           
  7949                           ; BSR set to: 15
  7950                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  7951  001662  EE20 F005          	lfsr	2,5
  7952  001666  5001               	movf	CANreceiveMessage@msg,w,c
  7953  001668  26D9               	addwf	fsr2l,f,c
  7954  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7955  00166C  22DA               	addwfc	fsr2h,f,c
  7956  00166E  CF67 FFDF          	movff	3943,indf2	;volatile
  7957                           
  7958                           ; BSR set to: 15
  7959                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  7960  001672  EE20 F006          	lfsr	2,6
  7961  001676  5001               	movf	CANreceiveMessage@msg,w,c
  7962  001678  26D9               	addwf	fsr2l,f,c
  7963  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7964  00167C  22DA               	addwfc	fsr2h,f,c
  7965  00167E  CF68 FFDF          	movff	3944,indf2	;volatile
  7966                           
  7967                           ; BSR set to: 15
  7968                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  7969  001682  EE20 F007          	lfsr	2,7
  7970  001686  5001               	movf	CANreceiveMessage@msg,w,c
  7971  001688  26D9               	addwf	fsr2l,f,c
  7972  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7973  00168C  22DA               	addwfc	fsr2h,f,c
  7974  00168E  CF69 FFDF          	movff	3945,indf2	;volatile
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  7978  001692  EE20 F008          	lfsr	2,8
  7979  001696  5001               	movf	CANreceiveMessage@msg,w,c
  7980  001698  26D9               	addwf	fsr2l,f,c
  7981  00169A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7982  00169C  22DA               	addwfc	fsr2h,f,c
  7983  00169E  CF6A FFDF          	movff	3946,indf2	;volatile
  7984                           
  7985                           ; BSR set to: 15
  7986                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  7987  0016A2  EE20 F009          	lfsr	2,9
  7988  0016A6  5001               	movf	CANreceiveMessage@msg,w,c
  7989  0016A8  26D9               	addwf	fsr2l,f,c
  7990  0016AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7991  0016AC  22DA               	addwfc	fsr2h,f,c
  7992  0016AE  CF6B FFDF          	movff	3947,indf2	;volatile
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  7996  0016B2  EE20 F00A          	lfsr	2,10
  7997  0016B6  5001               	movf	CANreceiveMessage@msg,w,c
  7998  0016B8  26D9               	addwf	fsr2l,f,c
  7999  0016BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8000  0016BC  22DA               	addwfc	fsr2h,f,c
  8001  0016BE  CF6C FFDF          	movff	3948,indf2	;volatile
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  8005  0016C2  EE20 F00B          	lfsr	2,11
  8006  0016C6  5001               	movf	CANreceiveMessage@msg,w,c
  8007  0016C8  26D9               	addwf	fsr2l,f,c
  8008  0016CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8009  0016CC  22DA               	addwfc	fsr2h,f,c
  8010  0016CE  CF6D FFDF          	movff	3949,indf2	;volatile
  8011                           
  8012                           ; BSR set to: 15
  8013                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  8014  0016D2  EE20 F00E          	lfsr	2,14
  8015  0016D6  5001               	movf	CANreceiveMessage@msg,w,c
  8016  0016D8  26D9               	addwf	fsr2l,f,c
  8017  0016DA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8018  0016DC  22DA               	addwfc	fsr2h,f,c
  8019  0016DE  AC65               	btfss	3941,6,c	;volatile
  8020  0016E0  D002               	goto	i1u400_20
  8021  0016E2  0E01               	movlw	1
  8022  0016E4  D001               	goto	i1u400_26
  8023  0016E6                     i1u400_20:
  8024  0016E6  0E00               	movlw	0
  8025  0016E8                     i1u400_26:
  8026  0016E8  6EDF               	movwf	indf2,c
  8027                           
  8028                           ; BSR set to: 15
  8029                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  8030  0016EA  EE20 F00D          	lfsr	2,13
  8031  0016EE  5001               	movf	CANreceiveMessage@msg,w,c
  8032  0016F0  26D9               	addwf	fsr2l,f,c
  8033  0016F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  8034  0016F4  22DA               	addwfc	fsr2h,f,c
  8035  0016F6  5065               	movf	3941,w,c	;volatile
  8036  0016F8  0B0F               	andlw	15
  8037  0016FA  6EDF               	movwf	indf2,c
  8038                           
  8039                           ; BSR set to: 15
  8040                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  8041  0016FC  EE20 F00C          	lfsr	2,12
  8042  001700  5001               	movf	CANreceiveMessage@msg,w,c
  8043  001702  26D9               	addwf	fsr2l,f,c
  8044  001704  5002               	movf	CANreceiveMessage@msg+1,w,c
  8045  001706  22DA               	addwfc	fsr2h,f,c
  8046  001708  A662               	btfss	3938,3,c	;volatile
  8047  00170A  D002               	goto	i1u401_20
  8048  00170C  0E01               	movlw	1
  8049  00170E  D001               	goto	i1u401_26
  8050  001710                     i1u401_20:
  8051  001710  0E00               	movlw	0
  8052  001712                     i1u401_26:
  8053  001712  6EDF               	movwf	indf2,c
  8054                           
  8055                           ; BSR set to: 15
  8056                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  8057  001714  B662               	btfsc	3938,3,c	;volatile
  8058  001716  D043               	goto	i1l3646
  8059                           
  8060                           ; BSR set to: 15
  8061                           ;inc\CANlib.h: 607: {
  8062                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8063  001718  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8064  00171C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8065  00171E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8066  001720  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8067  001722  0E03               	movlw	3
  8068  001724                     i1u403_25:
  8069  001724  90D8               	bcf	status,0,c
  8070  001726  3603               	rlcf	??_CANreceiveMessage,f,c
  8071  001728  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8072  00172A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8073  00172C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8074  00172E  2EE8               	decfsz	wreg,f,c
  8075  001730  D7F9               	goto	i1u403_25
  8076  001732  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8077  001736  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8078  00173A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8079  00173E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8080  001742  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8081  001746  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8082                           
  8083                           ; BSR set to: 15
  8084                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8085  00174A  3862               	swapf	3938,w,c	;volatile
  8086  00174C  42E8               	rrncf	wreg,f,c
  8087  00174E  0B07               	andlw	7
  8088  001750  0B07               	andlw	7
  8089  001752  6E0C               	movwf	CANreceiveMessage@tamp,c
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  8093  001754  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8094  001758  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8095  00175C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8096  001760  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8097  001764  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8098  001768  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8099  00176C  500C               	movf	CANreceiveMessage@tamp,w,c
  8100  00176E  2403               	addwf	??_CANreceiveMessage,w,c
  8101  001770  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8102  001772  0E00               	movlw	0
  8103  001774  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8104  001776  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8105  001778  0E00               	movlw	0
  8106  00177A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8107  00177C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8108  00177E  0E00               	movlw	0
  8109  001780  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8110  001782  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8111  001784  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8112  001788  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8113  00178C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8114  001790  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8115  001794  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8116  001798  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8117                           
  8118                           ;inc\CANlib.h: 611: }
  8119  00179C  D088               	goto	i1l3672
  8120  00179E                     i1l3646:
  8121                           
  8122                           ; BSR set to: 15
  8123                           ;inc\CANlib.h: 612: else
  8124                           ;inc\CANlib.h: 613: {
  8125                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  8126  00179E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8127  0017A2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8128  0017A4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8129  0017A6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8130  0017A8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8131  0017AC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8132  0017B0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8133  0017B4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8134  0017B8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8135  0017BC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8136                           
  8137                           ; BSR set to: 15
  8138                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8139  0017C0  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8140  0017C4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8141  0017C6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8142  0017C8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8143  0017CA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8144  0017CE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8145  0017D2  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8146  0017D6  6A03               	clrf	??_CANreceiveMessage,c
  8147  0017D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8148  0017DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8149  0017E0  5003               	movf	??_CANreceiveMessage,w,c
  8150  0017E2  26DE               	addwf	postinc2,f,c
  8151  0017E4  5004               	movf	??_CANreceiveMessage+1,w,c
  8152  0017E6  22DE               	addwfc	postinc2,f,c
  8153  0017E8  5005               	movf	??_CANreceiveMessage+2,w,c
  8154  0017EA  22DE               	addwfc	postinc2,f,c
  8155  0017EC  5006               	movf	??_CANreceiveMessage+3,w,c
  8156  0017EE  22DE               	addwfc	postinc2,f,c
  8157                           
  8158                           ; BSR set to: 15
  8159                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  8160  0017F0  A062               	btfss	3938,0,c	;volatile
  8161  0017F2  D00C               	goto	i1l3654
  8162                           
  8163                           ; BSR set to: 15
  8164                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  8165  0017F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8166  0017F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8167  0017FC  0E00               	movlw	0
  8168  0017FE  12DE               	iorwf	postinc2,f,c
  8169  001800  0E00               	movlw	0
  8170  001802  12DE               	iorwf	postinc2,f,c
  8171  001804  0E01               	movlw	1
  8172  001806  12DE               	iorwf	postinc2,f,c
  8173  001808  0E00               	movlw	0
  8174  00180A  12DE               	iorwf	postinc2,f,c
  8175  00180C                     i1l3654:
  8176                           
  8177                           ; BSR set to: 15
  8178                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  8179  00180C  A262               	btfss	3938,1,c	;volatile
  8180  00180E  D00C               	goto	i1l3658
  8181                           
  8182                           ; BSR set to: 15
  8183                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  8184  001810  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8185  001814  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8186  001818  0E00               	movlw	0
  8187  00181A  12DE               	iorwf	postinc2,f,c
  8188  00181C  0E00               	movlw	0
  8189  00181E  12DE               	iorwf	postinc2,f,c
  8190  001820  0E02               	movlw	2
  8191  001822  12DE               	iorwf	postinc2,f,c
  8192  001824  0E00               	movlw	0
  8193  001826  12DE               	iorwf	postinc2,f,c
  8194  001828                     i1l3658:
  8195                           
  8196                           ; BSR set to: 15
  8197                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  8198  001828  AA62               	btfss	3938,5,c	;volatile
  8199  00182A  D00C               	goto	i1l3662
  8200                           
  8201                           ; BSR set to: 15
  8202                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  8203  00182C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8204  001830  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8205  001834  0E00               	movlw	0
  8206  001836  12DE               	iorwf	postinc2,f,c
  8207  001838  0E00               	movlw	0
  8208  00183A  12DE               	iorwf	postinc2,f,c
  8209  00183C  0E04               	movlw	4
  8210  00183E  12DE               	iorwf	postinc2,f,c
  8211  001840  0E00               	movlw	0
  8212  001842  12DE               	iorwf	postinc2,f,c
  8213  001844                     i1l3662:
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  8217  001844  AC62               	btfss	3938,6,c	;volatile
  8218  001846  D00C               	goto	i1l3666
  8219                           
  8220                           ; BSR set to: 15
  8221                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  8222  001848  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8223  00184C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8224  001850  0E00               	movlw	0
  8225  001852  12DE               	iorwf	postinc2,f,c
  8226  001854  0E00               	movlw	0
  8227  001856  12DE               	iorwf	postinc2,f,c
  8228  001858  0E08               	movlw	8
  8229  00185A  12DE               	iorwf	postinc2,f,c
  8230  00185C  0E00               	movlw	0
  8231  00185E  12DE               	iorwf	postinc2,f,c
  8232  001860                     i1l3666:
  8233                           
  8234                           ; BSR set to: 15
  8235                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  8236  001860  AE62               	btfss	3938,7,c	;volatile
  8237  001862  D00C               	goto	i1l3670
  8238                           
  8239                           ; BSR set to: 15
  8240                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  8241  001864  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8242  001868  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8243  00186C  0E00               	movlw	0
  8244  00186E  12DE               	iorwf	postinc2,f,c
  8245  001870  0E00               	movlw	0
  8246  001872  12DE               	iorwf	postinc2,f,c
  8247  001874  0E10               	movlw	16
  8248  001876  12DE               	iorwf	postinc2,f,c
  8249  001878  0E00               	movlw	0
  8250  00187A  12DE               	iorwf	postinc2,f,c
  8251  00187C                     i1l3670:
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8255  00187C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8256  001880  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8257  001882  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8258  001884  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8259  001886  0E15               	movlw	21
  8260  001888                     i1u409_25:
  8261  001888  90D8               	bcf	status,0,c
  8262  00188A  3603               	rlcf	??_CANreceiveMessage,f,c
  8263  00188C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8264  00188E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8265  001890  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8266  001892  2EE8               	decfsz	wreg,f,c
  8267  001894  D7F9               	goto	i1u409_25
  8268  001896  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8269  00189A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8270  00189E  5003               	movf	??_CANreceiveMessage,w,c
  8271  0018A0  12DE               	iorwf	postinc2,f,c
  8272  0018A2  5004               	movf	??_CANreceiveMessage+1,w,c
  8273  0018A4  12DE               	iorwf	postinc2,f,c
  8274  0018A6  5005               	movf	??_CANreceiveMessage+2,w,c
  8275  0018A8  12DE               	iorwf	postinc2,f,c
  8276  0018AA  5006               	movf	??_CANreceiveMessage+3,w,c
  8277  0018AC  12DE               	iorwf	postinc2,f,c
  8278  0018AE                     i1l3672:
  8279                           
  8280                           ; BSR set to: 15
  8281                           ;inc\CANlib.h: 630: }
  8282                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  8283  0018AE  9E60               	bcf	3936,7,c	;volatile
  8284                           
  8285                           ; BSR set to: 15
  8286                           ;inc\CANlib.h: 633: return (error);
  8287                           ;	Return value of _CANreceiveMessage is never used
  8288  0018B0  0012               	return	
  8289  0018B2                     __end_of_CANreceiveMessage:
  8290                           	opt stack 0
  8291                           pclatu	equ	0xFFB
  8292                           pclath	equ	0xFFA
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           intcon	equ	0xFF2
  8300                           intcon2	equ	0xFF1
  8301                           intcon3	equ	0xFF0
  8302                           postinc0	equ	0xFEE
  8303                           fsr0h	equ	0xFEA
  8304                           fsr0l	equ	0xFE9
  8305                           wreg	equ	0xFE8
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           bsr	equ	0xFE0
  8309                           indf2	equ	0xFDF
  8310                           postinc2	equ	0xFDE
  8311                           postdec2	equ	0xFDD
  8312                           fsr2h	equ	0xFDA
  8313                           fsr2l	equ	0xFD9
  8314                           status	equ	0xFD8
  8315                           
  8316 ;; *************** function _CANisRxReady *****************
  8317 ;; Defined at:
  8318 ;;		line 1164 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;		None
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;		None
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  1    wreg      unsigned char 
  8325 ;; Registers used:
  8326 ;;		wreg, status,2
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8332 ;;      Params:         0       0       0       0
  8333 ;;      Locals:         1       0       0       0
  8334 ;;      Temps:          0       0       0       0
  8335 ;;      Totals:         1       0       0       0
  8336 ;;Total ram usage:        1 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:    2
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_ISR_Bassa
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text19
  8347  002964                     __ptext19:
  8348                           	opt stack 0
  8349  002964                     _CANisRxReady:
  8350                           	opt stack 24
  8351                           
  8352                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8353                           
  8354                           ; BSR set to: 15
  8355                           ;incstack = 0
  8356  002964  0E01               	movlw	1
  8357  002966  6E01               	movwf	_CANisRxReady$3284,c
  8358  002968  BE60               	btfsc	3936,7,c	;volatile
  8359  00296A  D005               	goto	i1l581
  8360  00296C  010F               	movlb	15	; () banked
  8361  00296E  BF50               	btfsc	80,7,b	;volatile
  8362  002970  D002               	goto	i1l581
  8363                           
  8364                           ; BSR set to: 15
  8365  002972  0E00               	movlw	0
  8366  002974  6E01               	movwf	_CANisRxReady$3284,c
  8367  002976                     i1l581:
  8368  002976  5001               	movf	_CANisRxReady$3284,w,c
  8369  002978  0012               	return	
  8370  00297A                     __end_of_CANisRxReady:
  8371                           	opt stack 0
  8372                           pclatu	equ	0xFFB
  8373                           pclath	equ	0xFFA
  8374                           tblptru	equ	0xFF8
  8375                           tblptrh	equ	0xFF7
  8376                           tblptrl	equ	0xFF6
  8377                           tablat	equ	0xFF5
  8378                           prodh	equ	0xFF4
  8379                           prodl	equ	0xFF3
  8380                           intcon	equ	0xFF2
  8381                           intcon2	equ	0xFF1
  8382                           intcon3	equ	0xFF0
  8383                           postinc0	equ	0xFEE
  8384                           fsr0h	equ	0xFEA
  8385                           fsr0l	equ	0xFE9
  8386                           wreg	equ	0xFE8
  8387                           fsr1h	equ	0xFE2
  8388                           fsr1l	equ	0xFE1
  8389                           bsr	equ	0xFE0
  8390                           indf2	equ	0xFDF
  8391                           postinc2	equ	0xFDE
  8392                           postdec2	equ	0xFDD
  8393                           fsr2h	equ	0xFDA
  8394                           fsr2l	equ	0xFD9
  8395                           status	equ	0xFD8
  8396                           
  8397 ;; *************** function _ISR_Alta *****************
  8398 ;; Defined at:
  8399 ;;		line 129 in file "ABS_Code.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;		None
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;		None               void
  8406 ;; Registers used:
  8407 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8413 ;;      Params:         0       0       0       0
  8414 ;;      Locals:         0       0       0       0
  8415 ;;      Temps:          0      22       0       0
  8416 ;;      Totals:         0      22       0       0
  8417 ;;Total ram usage:       22 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    1
  8420 ;; This function calls:
  8421 ;;		_WriteTimer0
  8422 ;;		___lwdiv
  8423 ;;		i2___awdiv
  8424 ;;		i2___wmul
  8425 ;; This function is called by:
  8426 ;;		Interrupt level 2
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	intcode
  8431  000008                     __pintcode:
  8432                           	opt stack 0
  8433  000008                     _ISR_Alta:
  8434                           	opt stack 24
  8435                           
  8436                           ;incstack = 0
  8437  000008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8438  00000A  CFFA F0B6          	movff	pclath,??_ISR_Alta+8
  8439  00000E  CFFB F0B7          	movff	pclatu,??_ISR_Alta+9
  8440  000012  ED28  F00E         	call	int_func,f	;refresh shadow registers
  8441                           pclatu	equ	0xFFB
  8442                           pclath	equ	0xFFA
  8443                           tblptru	equ	0xFF8
  8444                           tblptrh	equ	0xFF7
  8445                           tblptrl	equ	0xFF6
  8446                           tablat	equ	0xFF5
  8447                           prodh	equ	0xFF4
  8448                           prodl	equ	0xFF3
  8449                           intcon	equ	0xFF2
  8450                           intcon2	equ	0xFF1
  8451                           intcon3	equ	0xFF0
  8452                           postinc0	equ	0xFEE
  8453                           fsr0h	equ	0xFEA
  8454                           fsr0l	equ	0xFE9
  8455                           wreg	equ	0xFE8
  8456                           fsr1h	equ	0xFE2
  8457                           fsr1l	equ	0xFE1
  8458                           bsr	equ	0xFE0
  8459                           indf2	equ	0xFDF
  8460                           postinc2	equ	0xFDE
  8461                           postdec2	equ	0xFDD
  8462                           fsr2h	equ	0xFDA
  8463                           fsr2l	equ	0xFD9
  8464                           status	equ	0xFD8
  8465                           
  8466                           	psect	intcode_body
  8467  001C50                     __pintcode_body:
  8468                           	opt stack 24
  8469  001C50                     int_func:
  8470                           	opt stack 24
  8471  001C50  0006               	pop		; remove dummy address from shadow register refresh
  8472  001C52  CFE9 F0B8          	movff	fsr0l,??_ISR_Alta+10
  8473  001C56  CFEA F0B9          	movff	fsr0h,??_ISR_Alta+11
  8474  001C5A  CFE1 F0BA          	movff	fsr1l,??_ISR_Alta+12
  8475  001C5E  CFE2 F0BB          	movff	fsr1h,??_ISR_Alta+13
  8476  001C62  CFD9 F0BC          	movff	fsr2l,??_ISR_Alta+14
  8477  001C66  CFDA F0BD          	movff	fsr2h,??_ISR_Alta+15
  8478  001C6A  CFF3 F0BE          	movff	prodl,??_ISR_Alta+16
  8479  001C6E  CFF4 F0BF          	movff	prodh,??_ISR_Alta+17
  8480  001C72  CFF6 F0C0          	movff	tblptrl,??_ISR_Alta+18
  8481  001C76  CFF7 F0C1          	movff	tblptrh,??_ISR_Alta+19
  8482  001C7A  CFF8 F0C2          	movff	tblptru,??_ISR_Alta+20
  8483  001C7E  CFF5 F0C3          	movff	tablat,??_ISR_Alta+21
  8484                           
  8485                           ;ABS_Code.c: 131: if (INTCONbits.TMR0IF == 1) {
  8486  001C82  A4F2               	btfss	intcon,2,c	;volatile
  8487  001C84  D09D               	goto	i2l4228
  8488                           
  8489                           ;ABS_Code.c: 132: if (PORTCbits.RC0 == 1) {
  8490  001C86  A082               	btfss	3970,0,c	;volatile
  8491  001C88  D094               	goto	i2l4224
  8492                           
  8493                           ;ABS_Code.c: 133: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8494  001C8A  0E40               	movlw	64
  8495  001C8C  0100               	movlb	0	; () banked
  8496  001C8E  6FAE               	movwf	??_ISR_Alta& (0+255),b
  8497  001C90  0E06               	movlw	6
  8498  001C92  0100               	movlb	0	; () banked
  8499  001C94  6FAF               	movwf	(??_ISR_Alta+1)& (0+255),b
  8500  001C96  C03C  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8501  001C9A  6A1F               	clrf	i2___wmul@multiplier+1,c
  8502  001C9C  0E05               	movlw	5
  8503  001C9E  6E21               	movwf	i2___wmul@multiplicand+1,c
  8504  001CA0  0E78               	movlw	120
  8505  001CA2  6E20               	movwf	i2___wmul@multiplicand,c
  8506  001CA4  EC82  F014         	call	i2___wmul	;wreg free
  8507  001CA8  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8508  001CAC  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8509  001CB0  0E00               	movlw	0
  8510  001CB2  6E27               	movwf	i2___awdiv@divisor+1,c
  8511  001CB4  0EB4               	movlw	180
  8512  001CB6  6E26               	movwf	i2___awdiv@divisor,c
  8513  001CB8  EC5B  F013         	call	i2___awdiv	;wreg free
  8514  001CBC  90D8               	bcf	status,0,c
  8515  001CBE  3624               	rlcf	?i2___awdiv,f,c
  8516  001CC0  3625               	rlcf	?i2___awdiv+1,f,c
  8517  001CC2  0100               	movlb	0	; () banked
  8518  001CC4  51AE               	movf	??_ISR_Alta& (0+255),w,b
  8519  001CC6  2624               	addwf	?i2___awdiv,f,c
  8520  001CC8  0100               	movlb	0	; () banked
  8521  001CCA  51AF               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8522  001CCC  2225               	addwfc	?i2___awdiv+1,f,c
  8523  001CCE  C024  F034         	movff	?i2___awdiv,_timer_on	;volatile
  8524  001CD2  C025  F035         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8525  001CD6  0E00               	movlw	0
  8526  001CD8  BE35               	btfsc	_timer_on+1,7,c	;volatile
  8527  001CDA  0EFF               	movlw	-1
  8528  001CDC  6E36               	movwf	_timer_on+2,c	;volatile
  8529  001CDE  6E37               	movwf	_timer_on+3,c	;volatile
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;ABS_Code.c: 134: timer_off = 65536 - (40000 - timer_on);
  8533  001CE0  C034  F0AE         	movff	_timer_on,??_ISR_Alta	;volatile
  8534  001CE4  C035  F0AF         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8535  001CE8  C036  F0B0         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8536  001CEC  C037  F0B1         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8537  001CF0  0100               	movlb	0	; () banked
  8538  001CF2  1FAE               	comf	??_ISR_Alta& (0+255),f,b
  8539  001CF4  1FAF               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8540  001CF6  1FB0               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8541  001CF8  1FB1               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8542  001CFA  2BAE               	incf	??_ISR_Alta& (0+255),f,b
  8543  001CFC  0E00               	movlw	0
  8544  001CFE  23AF               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8545  001D00  23B0               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8546  001D02  23B1               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8547  001D04  0E40               	movlw	64
  8548  001D06  0100               	movlb	0	; () banked
  8549  001D08  25AE               	addwf	??_ISR_Alta& (0+255),w,b
  8550  001D0A  0100               	movlb	0	; () banked
  8551  001D0C  6FB2               	movwf	(??_ISR_Alta+4)& (0+255),b
  8552  001D0E  0E9C               	movlw	156
  8553  001D10  0100               	movlb	0	; () banked
  8554  001D12  21AF               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8555  001D14  0100               	movlb	0	; () banked
  8556  001D16  6FB3               	movwf	(??_ISR_Alta+5)& (0+255),b
  8557  001D18  0E00               	movlw	0
  8558  001D1A  0100               	movlb	0	; () banked
  8559  001D1C  21B0               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8560  001D1E  0100               	movlb	0	; () banked
  8561  001D20  6FB4               	movwf	(??_ISR_Alta+6)& (0+255),b
  8562  001D22  0E00               	movlw	0
  8563  001D24  0100               	movlb	0	; () banked
  8564  001D26  21B1               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8565  001D28  0100               	movlb	0	; () banked
  8566  001D2A  6FB5               	movwf	(??_ISR_Alta+7)& (0+255),b
  8567  001D2C  0100               	movlb	0	; () banked
  8568  001D2E  1FB2               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8569  001D30  1FB3               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8570  001D32  1FB4               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8571  001D34  1FB5               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8572  001D36  2BB2               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8573  001D38  0E00               	movlw	0
  8574  001D3A  23B3               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8575  001D3C  23B4               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8576  001D3E  23B5               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8577  001D40  0E00               	movlw	0
  8578  001D42  0100               	movlb	0	; () banked
  8579  001D44  25B2               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8580  001D46  6E30               	movwf	_timer_off,c	;volatile
  8581  001D48  0E00               	movlw	0
  8582  001D4A  0100               	movlb	0	; () banked
  8583  001D4C  21B3               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8584  001D4E  6E31               	movwf	_timer_off+1,c	;volatile
  8585  001D50  0E01               	movlw	1
  8586  001D52  0100               	movlb	0	; () banked
  8587  001D54  21B4               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8588  001D56  6E32               	movwf	_timer_off+2,c	;volatile
  8589  001D58  0E00               	movlw	0
  8590  001D5A  0100               	movlb	0	; () banked
  8591  001D5C  21B5               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8592  001D5E  6E33               	movwf	_timer_off+3,c	;volatile
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;ABS_Code.c: 135: timer_on = 65536 - timer_on;
  8596  001D60  C034  F0AE         	movff	_timer_on,??_ISR_Alta	;volatile
  8597  001D64  C035  F0AF         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8598  001D68  C036  F0B0         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8599  001D6C  C037  F0B1         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8600  001D70  0100               	movlb	0	; () banked
  8601  001D72  1FAE               	comf	??_ISR_Alta& (0+255),f,b
  8602  001D74  1FAF               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8603  001D76  1FB0               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8604  001D78  1FB1               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8605  001D7A  2BAE               	incf	??_ISR_Alta& (0+255),f,b
  8606  001D7C  0E00               	movlw	0
  8607  001D7E  23AF               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8608  001D80  23B0               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8609  001D82  23B1               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8610  001D84  0E00               	movlw	0
  8611  001D86  0100               	movlb	0	; () banked
  8612  001D88  25AE               	addwf	??_ISR_Alta& (0+255),w,b
  8613  001D8A  6E34               	movwf	_timer_on,c	;volatile
  8614  001D8C  0E00               	movlw	0
  8615  001D8E  0100               	movlb	0	; () banked
  8616  001D90  21AF               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8617  001D92  6E35               	movwf	_timer_on+1,c	;volatile
  8618  001D94  0E01               	movlw	1
  8619  001D96  0100               	movlb	0	; () banked
  8620  001D98  21B0               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8621  001D9A  6E36               	movwf	_timer_on+2,c	;volatile
  8622  001D9C  0E00               	movlw	0
  8623  001D9E  0100               	movlb	0	; () banked
  8624  001DA0  21B1               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8625  001DA2  6E37               	movwf	_timer_on+3,c	;volatile
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;ABS_Code.c: 136: WriteTimer0(timer_on);
  8629  001DA4  C034  F01E         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8630  001DA8  C035  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8631  001DAC  ECBD  F014         	call	_WriteTimer0	;wreg free
  8632                           
  8633                           ;ABS_Code.c: 137: } else {
  8634  001DB0  D006               	goto	i2l4226
  8635  001DB2                     i2l4224:
  8636                           
  8637                           ;ABS_Code.c: 138: WriteTimer0(timer_off);
  8638  001DB2  C030  F01E         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8639  001DB6  C031  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8640  001DBA  ECBD  F014         	call	_WriteTimer0	;wreg free
  8641  001DBE                     i2l4226:
  8642                           
  8643                           ;ABS_Code.c: 139: }
  8644                           ;ABS_Code.c: 140: INTCONbits.TMR0IF = 0;
  8645  001DBE  94F2               	bcf	intcon,2,c	;volatile
  8646  001DC0                     i2l4228:
  8647                           
  8648                           ;ABS_Code.c: 141: }
  8649                           ;ABS_Code.c: 144: if (INTCONbits.INT0IF == 1) {
  8650  001DC0  A2F2               	btfss	intcon,1,c	;volatile
  8651  001DC2  D031               	goto	i2l4252
  8652                           
  8653                           ;ABS_Code.c: 145: if (x == 0) {
  8654  001DC4  BE3D               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8655  001DC6  D006               	goto	i2l4236
  8656                           
  8657                           ;ABS_Code.c: 146: TMR1H = 0x00;
  8658  001DC8  0E00               	movlw	0
  8659  001DCA  6ECF               	movwf	4047,c	;volatile
  8660                           
  8661                           ;ABS_Code.c: 147: TMR1L = 0x00;
  8662  001DCC  0E00               	movlw	0
  8663  001DCE  6ECE               	movwf	4046,c	;volatile
  8664                           
  8665                           ;ABS_Code.c: 148: x = 1;
  8666  001DD0  8E3D               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8667                           
  8668                           ;ABS_Code.c: 149: } else {
  8669  001DD2  D028               	goto	i2l4250
  8670  001DD4                     i2l4236:
  8671                           
  8672                           ;ABS_Code.c: 150: gap_time_1 = (TMR1H << 8) + TMR1L;
  8673  001DD4  50CF               	movf	4047,w,c	;volatile
  8674  001DD6  0100               	movlb	0	; () banked
  8675  001DD8  6FAF               	movwf	(??_ISR_Alta+1)& (0+255),b
  8676  001DDA  6BAE               	clrf	??_ISR_Alta& (0+255),b
  8677  001DDC  50CE               	movf	4046,w,c	;volatile
  8678  001DDE  0100               	movlb	0	; () banked
  8679  001DE0  25AE               	addwf	??_ISR_Alta& (0+255),w,b
  8680  001DE2  6E38               	movwf	_gap_time_1,c	;volatile
  8681  001DE4  0E00               	movlw	0
  8682  001DE6  0100               	movlb	0	; () banked
  8683  001DE8  21AF               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8684  001DEA  6E39               	movwf	_gap_time_1+1,c	;volatile
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;ABS_Code.c: 151: gap_time_1 = gap_time_1 / 500;
  8688  001DEC  C038  F01E         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8689  001DF0  C039  F01F         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8690  001DF4  0E01               	movlw	1
  8691  001DF6  6E21               	movwf	___lwdiv@divisor+1,c
  8692  001DF8  0EF4               	movlw	244
  8693  001DFA  6E20               	movwf	___lwdiv@divisor,c
  8694  001DFC  ECE4  F013         	call	___lwdiv	;wreg free
  8695  001E00  C01E  F038         	movff	?___lwdiv,_gap_time_1	;volatile
  8696  001E04  C01F  F039         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8697                           
  8698                           ;ABS_Code.c: 152: ENC1_measure = 1;
  8699  001E08  803D               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8700                           
  8701                           ;ABS_Code.c: 153: TMR1H = 0x00;
  8702  001E0A  0E00               	movlw	0
  8703  001E0C  6ECF               	movwf	4047,c	;volatile
  8704                           
  8705                           ;ABS_Code.c: 154: TMR1H = 0x00;
  8706  001E0E  0E00               	movlw	0
  8707  001E10  6ECF               	movwf	4047,c	;volatile
  8708                           
  8709                           ;ABS_Code.c: 155: if (count_flag == 1) {
  8710  001E12  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8711  001E14  D007               	goto	i2l4250
  8712                           
  8713                           ;ABS_Code.c: 156: int_counter_1++;
  8714  001E16  0E01               	movlw	1
  8715  001E18  0100               	movlb	0	; () banked
  8716  001E1A  2760               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8717  001E1C  0E00               	movlw	0
  8718  001E1E  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8719  001E20  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8720  001E22  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8721  001E24                     i2l4250:
  8722                           
  8723                           ;ABS_Code.c: 157: }
  8724                           ;ABS_Code.c: 158: }
  8725                           ;ABS_Code.c: 159: INTCONbits.INT0IF = 0;
  8726  001E24  92F2               	bcf	intcon,1,c	;volatile
  8727  001E26                     i2l4252:
  8728                           
  8729                           ;ABS_Code.c: 161: }
  8730                           ;ABS_Code.c: 164: if (INTCON3bits.INT1IF == 1) {
  8731  001E26  A0F0               	btfss	intcon3,0,c	;volatile
  8732  001E28  D031               	goto	i2l683
  8733                           
  8734                           ;ABS_Code.c: 165: if (y == 0) {
  8735  001E2A  B03E               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  8736  001E2C  D006               	goto	i2l4260
  8737                           
  8738                           ;ABS_Code.c: 166: TMR3H = 0x00;
  8739  001E2E  0E00               	movlw	0
  8740  001E30  6EB3               	movwf	4019,c	;volatile
  8741                           
  8742                           ;ABS_Code.c: 167: TMR3L = 0x00;
  8743  001E32  0E00               	movlw	0
  8744  001E34  6EB2               	movwf	4018,c	;volatile
  8745                           
  8746                           ;ABS_Code.c: 168: y = 1;
  8747  001E36  803E               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  8748                           
  8749                           ;ABS_Code.c: 169: } else {
  8750  001E38  D028               	goto	i2l4274
  8751  001E3A                     i2l4260:
  8752                           
  8753                           ;ABS_Code.c: 170: gap_time_2 = (TMR3H << 8) + TMR3L;
  8754  001E3A  50B3               	movf	4019,w,c	;volatile
  8755  001E3C  0100               	movlb	0	; () banked
  8756  001E3E  6FAF               	movwf	(??_ISR_Alta+1)& (0+255),b
  8757  001E40  6BAE               	clrf	??_ISR_Alta& (0+255),b
  8758  001E42  50B2               	movf	4018,w,c	;volatile
  8759  001E44  0100               	movlb	0	; () banked
  8760  001E46  25AE               	addwf	??_ISR_Alta& (0+255),w,b
  8761  001E48  6E3A               	movwf	_gap_time_2,c	;volatile
  8762  001E4A  0E00               	movlw	0
  8763  001E4C  0100               	movlb	0	; () banked
  8764  001E4E  21AF               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8765  001E50  6E3B               	movwf	_gap_time_2+1,c	;volatile
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;ABS_Code.c: 171: gap_time_2 = gap_time_2 / 500;
  8769  001E52  C03A  F01E         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  8770  001E56  C03B  F01F         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  8771  001E5A  0E01               	movlw	1
  8772  001E5C  6E21               	movwf	___lwdiv@divisor+1,c
  8773  001E5E  0EF4               	movlw	244
  8774  001E60  6E20               	movwf	___lwdiv@divisor,c
  8775  001E62  ECE4  F013         	call	___lwdiv	;wreg free
  8776  001E66  C01E  F03A         	movff	?___lwdiv,_gap_time_2	;volatile
  8777  001E6A  C01F  F03B         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  8778                           
  8779                           ;ABS_Code.c: 172: ENC2_measure = 1;
  8780  001E6E  823D               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  8781                           
  8782                           ;ABS_Code.c: 173: TMR3H = 0x00;
  8783  001E70  0E00               	movlw	0
  8784  001E72  6EB3               	movwf	4019,c	;volatile
  8785                           
  8786                           ;ABS_Code.c: 174: TMR3H = 0x00;
  8787  001E74  0E00               	movlw	0
  8788  001E76  6EB3               	movwf	4019,c	;volatile
  8789                           
  8790                           ;ABS_Code.c: 175: if (count_flag == 1) {
  8791  001E78  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8792  001E7A  D007               	goto	i2l4274
  8793                           
  8794                           ;ABS_Code.c: 176: int_counter_2++;
  8795  001E7C  0E01               	movlw	1
  8796  001E7E  0100               	movlb	0	; () banked
  8797  001E80  2764               	addwf	_int_counter_2& (0+255),f,b	;volatile
  8798  001E82  0E00               	movlw	0
  8799  001E84  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  8800  001E86  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  8801  001E88  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  8802  001E8A                     i2l4274:
  8803                           
  8804                           ;ABS_Code.c: 177: }
  8805                           ;ABS_Code.c: 178: }
  8806                           ;ABS_Code.c: 179: INTCON3bits.INT1IF = 0;
  8807  001E8A  90F0               	bcf	intcon3,0,c	;volatile
  8808  001E8C                     i2l683:
  8809  001E8C  C0C3  FFF5         	movff	??_ISR_Alta+21,tablat
  8810  001E90  C0C2  FFF8         	movff	??_ISR_Alta+20,tblptru
  8811  001E94  C0C1  FFF7         	movff	??_ISR_Alta+19,tblptrh
  8812  001E98  C0C0  FFF6         	movff	??_ISR_Alta+18,tblptrl
  8813  001E9C  C0BF  FFF4         	movff	??_ISR_Alta+17,prodh
  8814  001EA0  C0BE  FFF3         	movff	??_ISR_Alta+16,prodl
  8815  001EA4  C0BD  FFDA         	movff	??_ISR_Alta+15,fsr2h
  8816  001EA8  C0BC  FFD9         	movff	??_ISR_Alta+14,fsr2l
  8817  001EAC  C0BB  FFE2         	movff	??_ISR_Alta+13,fsr1h
  8818  001EB0  C0BA  FFE1         	movff	??_ISR_Alta+12,fsr1l
  8819  001EB4  C0B9  FFEA         	movff	??_ISR_Alta+11,fsr0h
  8820  001EB8  C0B8  FFE9         	movff	??_ISR_Alta+10,fsr0l
  8821  001EBC  C0B7  FFFB         	movff	??_ISR_Alta+9,pclatu
  8822  001EC0  C0B6  FFFA         	movff	??_ISR_Alta+8,pclath
  8823  001EC4  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8824  001EC6  0011               	retfie		f
  8825  001EC8                     __end_of_ISR_Alta:
  8826                           	opt stack 0
  8827                           pclatu	equ	0xFFB
  8828                           pclath	equ	0xFFA
  8829                           tblptru	equ	0xFF8
  8830                           tblptrh	equ	0xFF7
  8831                           tblptrl	equ	0xFF6
  8832                           tablat	equ	0xFF5
  8833                           prodh	equ	0xFF4
  8834                           prodl	equ	0xFF3
  8835                           intcon	equ	0xFF2
  8836                           intcon2	equ	0xFF1
  8837                           intcon3	equ	0xFF0
  8838                           postinc0	equ	0xFEE
  8839                           fsr0h	equ	0xFEA
  8840                           fsr0l	equ	0xFE9
  8841                           wreg	equ	0xFE8
  8842                           fsr1h	equ	0xFE2
  8843                           fsr1l	equ	0xFE1
  8844                           bsr	equ	0xFE0
  8845                           indf2	equ	0xFDF
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           fsr2h	equ	0xFDA
  8849                           fsr2l	equ	0xFD9
  8850                           status	equ	0xFD8
  8851                           
  8852 ;; *************** function i2___wmul *****************
  8853 ;; Defined at:
  8854 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  multiplier      2   29[COMRAM] unsigned int 
  8857 ;;  multiplicand    2   31[COMRAM] unsigned int 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  __wmul          2   33[COMRAM] unsigned int 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  2   29[COMRAM] unsigned int 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0, prodl, prodh
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8869 ;;      Params:         4       0       0       0
  8870 ;;      Locals:         2       0       0       0
  8871 ;;      Temps:          0       0       0       0
  8872 ;;      Totals:         6       0       0       0
  8873 ;;Total ram usage:        6 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; This function calls:
  8876 ;;		Nothing
  8877 ;; This function is called by:
  8878 ;;		_ISR_Alta
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text21
  8883  002904                     __ptext21:
  8884                           	opt stack 0
  8885  002904                     i2___wmul:
  8886                           	opt stack 24
  8887                           
  8888                           ;incstack = 0
  8889  002904  501E               	movf	i2___wmul@multiplier,w,c
  8890  002906  0220               	mulwf	i2___wmul@multiplicand,c
  8891  002908  CFF3 F022          	movff	prodl,i2___wmul@product
  8892  00290C  CFF4 F023          	movff	prodh,i2___wmul@product+1
  8893  002910  501E               	movf	i2___wmul@multiplier,w,c
  8894  002912  0221               	mulwf	i2___wmul@multiplicand+1,c
  8895  002914  50F3               	movf	prodl,w,c
  8896  002916  2623               	addwf	i2___wmul@product+1,f,c
  8897  002918  501F               	movf	i2___wmul@multiplier+1,w,c
  8898  00291A  0220               	mulwf	i2___wmul@multiplicand,c
  8899  00291C  50F3               	movf	prodl,w,c
  8900  00291E  2623               	addwf	i2___wmul@product+1,f,c
  8901  002920  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  8902  002924  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  8903  002928  0012               	return	
  8904  00292A                     __end_ofi2___wmul:
  8905                           	opt stack 0
  8906                           pclatu	equ	0xFFB
  8907                           pclath	equ	0xFFA
  8908                           tblptru	equ	0xFF8
  8909                           tblptrh	equ	0xFF7
  8910                           tblptrl	equ	0xFF6
  8911                           tablat	equ	0xFF5
  8912                           prodh	equ	0xFF4
  8913                           prodl	equ	0xFF3
  8914                           intcon	equ	0xFF2
  8915                           intcon2	equ	0xFF1
  8916                           intcon3	equ	0xFF0
  8917                           postinc0	equ	0xFEE
  8918                           fsr0h	equ	0xFEA
  8919                           fsr0l	equ	0xFE9
  8920                           wreg	equ	0xFE8
  8921                           fsr1h	equ	0xFE2
  8922                           fsr1l	equ	0xFE1
  8923                           bsr	equ	0xFE0
  8924                           indf2	equ	0xFDF
  8925                           postinc2	equ	0xFDE
  8926                           postdec2	equ	0xFDD
  8927                           fsr2h	equ	0xFDA
  8928                           fsr2l	equ	0xFD9
  8929                           status	equ	0xFD8
  8930                           
  8931 ;; *************** function i2___awdiv *****************
  8932 ;; Defined at:
  8933 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  dividend        2   35[COMRAM] int 
  8936 ;;  divisor         2   37[COMRAM] int 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;  __awdiv         2    2[BANK0 ] int 
  8939 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  8940 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  2   35[COMRAM] int 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8950 ;;      Params:         4       0       0       0
  8951 ;;      Locals:         0       4       0       0
  8952 ;;      Temps:          0       0       0       0
  8953 ;;      Totals:         4       4       0       0
  8954 ;;Total ram usage:        8 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		_ISR_Alta
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963                           	psect	text22
  8964  0026B6                     __ptext22:
  8965                           	opt stack 0
  8966  0026B6                     i2___awdiv:
  8967                           	opt stack 24
  8968                           
  8969                           ;incstack = 0
  8970  0026B6  0E00               	movlw	0
  8971  0026B8  0100               	movlb	0	; () banked
  8972  0026BA  6FAB               	movwf	i2___awdiv@sign& (0+255),b
  8973                           
  8974                           ; BSR set to: 0
  8975  0026BC  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8976  0026BE  D007               	goto	i2l4176
  8977                           
  8978                           ; BSR set to: 0
  8979  0026C0  6C26               	negf	i2___awdiv@divisor,c
  8980  0026C2  1E27               	comf	i2___awdiv@divisor+1,f,c
  8981  0026C4  B0D8               	btfsc	status,0,c
  8982  0026C6  2A27               	incf	i2___awdiv@divisor+1,f,c
  8983                           
  8984                           ; BSR set to: 0
  8985  0026C8  0E01               	movlw	1
  8986  0026CA  0100               	movlb	0	; () banked
  8987  0026CC  6FAB               	movwf	i2___awdiv@sign& (0+255),b
  8988  0026CE                     i2l4176:
  8989                           
  8990                           ; BSR set to: 0
  8991  0026CE  AE25               	btfss	i2___awdiv@dividend+1,7,c
  8992  0026D0  D007               	goto	i2l4182
  8993                           
  8994                           ; BSR set to: 0
  8995  0026D2  6C24               	negf	i2___awdiv@dividend,c
  8996  0026D4  1E25               	comf	i2___awdiv@dividend+1,f,c
  8997  0026D6  B0D8               	btfsc	status,0,c
  8998  0026D8  2A25               	incf	i2___awdiv@dividend+1,f,c
  8999                           
  9000                           ; BSR set to: 0
  9001  0026DA  0E01               	movlw	1
  9002  0026DC  0100               	movlb	0	; () banked
  9003  0026DE  1BAB               	xorwf	i2___awdiv@sign& (0+255),f,b
  9004  0026E0                     i2l4182:
  9005                           
  9006                           ; BSR set to: 0
  9007  0026E0  0E00               	movlw	0
  9008  0026E2  0100               	movlb	0	; () banked
  9009  0026E4  6FAD               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9010  0026E6  0E00               	movlw	0
  9011  0026E8  6FAC               	movwf	i2___awdiv@quotient& (0+255),b
  9012                           
  9013                           ; BSR set to: 0
  9014  0026EA  5026               	movf	i2___awdiv@divisor,w,c
  9015  0026EC  1027               	iorwf	i2___awdiv@divisor+1,w,c
  9016  0026EE  B4D8               	btfsc	status,2,c
  9017  0026F0  D021               	goto	i2l4204
  9018                           
  9019                           ; BSR set to: 0
  9020  0026F2  0E01               	movlw	1
  9021  0026F4  0100               	movlb	0	; () banked
  9022  0026F6  6FAA               	movwf	i2___awdiv@counter& (0+255),b
  9023  0026F8  D005               	goto	i2l4190
  9024  0026FA                     i2l4188:
  9025                           
  9026                           ; BSR set to: 0
  9027  0026FA  90D8               	bcf	status,0,c
  9028  0026FC  3626               	rlcf	i2___awdiv@divisor,f,c
  9029  0026FE  3627               	rlcf	i2___awdiv@divisor+1,f,c
  9030  002700  0100               	movlb	0	; () banked
  9031  002702  2BAA               	incf	i2___awdiv@counter& (0+255),f,b
  9032  002704                     i2l4190:
  9033                           
  9034                           ; BSR set to: 0
  9035  002704  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9036  002706  D7F9               	goto	i2l4188
  9037  002708                     i2l4192:
  9038                           
  9039                           ; BSR set to: 0
  9040  002708  0100               	movlb	0	; () banked
  9041  00270A  90D8               	bcf	status,0,c
  9042  00270C  37AC               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9043  00270E  37AD               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9044                           
  9045                           ; BSR set to: 0
  9046  002710  5026               	movf	i2___awdiv@divisor,w,c
  9047  002712  5C24               	subwf	i2___awdiv@dividend,w,c
  9048  002714  5027               	movf	i2___awdiv@divisor+1,w,c
  9049  002716  5825               	subwfb	i2___awdiv@dividend+1,w,c
  9050  002718  A0D8               	btfss	status,0,c
  9051  00271A  D006               	goto	i2l4200
  9052                           
  9053                           ; BSR set to: 0
  9054  00271C  5026               	movf	i2___awdiv@divisor,w,c
  9055  00271E  5E24               	subwf	i2___awdiv@dividend,f,c
  9056  002720  5027               	movf	i2___awdiv@divisor+1,w,c
  9057  002722  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  9058                           
  9059                           ; BSR set to: 0
  9060  002724  0100               	movlb	0	; () banked
  9061  002726  81AC               	bsf	i2___awdiv@quotient& (0+255),0,b
  9062  002728                     i2l4200:
  9063                           
  9064                           ; BSR set to: 0
  9065  002728  90D8               	bcf	status,0,c
  9066  00272A  3227               	rrcf	i2___awdiv@divisor+1,f,c
  9067  00272C  3226               	rrcf	i2___awdiv@divisor,f,c
  9068                           
  9069                           ; BSR set to: 0
  9070  00272E  0100               	movlb	0	; () banked
  9071  002730  2FAA               	decfsz	i2___awdiv@counter& (0+255),f,b
  9072  002732  D7EA               	goto	i2l4192
  9073  002734                     i2l4204:
  9074                           
  9075                           ; BSR set to: 0
  9076  002734  0100               	movlb	0	; () banked
  9077  002736  51AB               	movf	i2___awdiv@sign& (0+255),w,b
  9078  002738  0100               	movlb	0	; () banked
  9079  00273A  B4D8               	btfsc	status,2,c
  9080  00273C  D005               	goto	i2l4208
  9081                           
  9082                           ; BSR set to: 0
  9083  00273E  0100               	movlb	0	; () banked
  9084  002740  6DAC               	negf	i2___awdiv@quotient& (0+255),b
  9085  002742  1FAD               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9086  002744  B0D8               	btfsc	status,0,c
  9087  002746  2BAD               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9088  002748                     i2l4208:
  9089                           
  9090                           ; BSR set to: 0
  9091  002748  C0AC  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  9092  00274C  C0AD  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9093  002750  0012               	return	
  9094  002752                     __end_ofi2___awdiv:
  9095                           	opt stack 0
  9096                           pclatu	equ	0xFFB
  9097                           pclath	equ	0xFFA
  9098                           tblptru	equ	0xFF8
  9099                           tblptrh	equ	0xFF7
  9100                           tblptrl	equ	0xFF6
  9101                           tablat	equ	0xFF5
  9102                           prodh	equ	0xFF4
  9103                           prodl	equ	0xFF3
  9104                           intcon	equ	0xFF2
  9105                           intcon2	equ	0xFF1
  9106                           intcon3	equ	0xFF0
  9107                           postinc0	equ	0xFEE
  9108                           fsr0h	equ	0xFEA
  9109                           fsr0l	equ	0xFE9
  9110                           wreg	equ	0xFE8
  9111                           fsr1h	equ	0xFE2
  9112                           fsr1l	equ	0xFE1
  9113                           bsr	equ	0xFE0
  9114                           indf2	equ	0xFDF
  9115                           postinc2	equ	0xFDE
  9116                           postdec2	equ	0xFDD
  9117                           fsr2h	equ	0xFDA
  9118                           fsr2l	equ	0xFD9
  9119                           status	equ	0xFD8
  9120                           
  9121 ;; *************** function ___lwdiv *****************
  9122 ;; Defined at:
  9123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  dividend        2   29[COMRAM] unsigned int 
  9126 ;;  divisor         2   31[COMRAM] unsigned int 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  quotient        2   33[COMRAM] unsigned int 
  9129 ;;  counter         1   35[COMRAM] unsigned char 
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  2   29[COMRAM] unsigned int 
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9139 ;;      Params:         4       0       0       0
  9140 ;;      Locals:         3       0       0       0
  9141 ;;      Temps:          0       0       0       0
  9142 ;;      Totals:         7       0       0       0
  9143 ;;Total ram usage:        7 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_ISR_Alta
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           	psect	text23
  9153  0027C8                     __ptext23:
  9154                           	opt stack 0
  9155  0027C8                     ___lwdiv:
  9156                           	opt stack 24
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;incstack = 0
  9160  0027C8  0E00               	movlw	0
  9161  0027CA  6E23               	movwf	___lwdiv@quotient+1,c
  9162  0027CC  0E00               	movlw	0
  9163  0027CE  6E22               	movwf	___lwdiv@quotient,c
  9164  0027D0  5020               	movf	___lwdiv@divisor,w,c
  9165  0027D2  1021               	iorwf	___lwdiv@divisor+1,w,c
  9166  0027D4  B4D8               	btfsc	status,2,c
  9167  0027D6  D01C               	goto	i2l1155
  9168  0027D8  0E01               	movlw	1
  9169  0027DA  6E24               	movwf	___lwdiv@counter,c
  9170  0027DC  D004               	goto	i2l3910
  9171  0027DE                     i2l3908:
  9172  0027DE  90D8               	bcf	status,0,c
  9173  0027E0  3620               	rlcf	___lwdiv@divisor,f,c
  9174  0027E2  3621               	rlcf	___lwdiv@divisor+1,f,c
  9175  0027E4  2A24               	incf	___lwdiv@counter,f,c
  9176  0027E6                     i2l3910:
  9177  0027E6  AE21               	btfss	___lwdiv@divisor+1,7,c
  9178  0027E8  D7FA               	goto	i2l3908
  9179  0027EA                     i2l3912:
  9180  0027EA  90D8               	bcf	status,0,c
  9181  0027EC  3622               	rlcf	___lwdiv@quotient,f,c
  9182  0027EE  3623               	rlcf	___lwdiv@quotient+1,f,c
  9183  0027F0  5020               	movf	___lwdiv@divisor,w,c
  9184  0027F2  5C1E               	subwf	___lwdiv@dividend,w,c
  9185  0027F4  5021               	movf	___lwdiv@divisor+1,w,c
  9186  0027F6  581F               	subwfb	___lwdiv@dividend+1,w,c
  9187  0027F8  A0D8               	btfss	status,0,c
  9188  0027FA  D005               	goto	i2l3920
  9189  0027FC  5020               	movf	___lwdiv@divisor,w,c
  9190  0027FE  5E1E               	subwf	___lwdiv@dividend,f,c
  9191  002800  5021               	movf	___lwdiv@divisor+1,w,c
  9192  002802  5A1F               	subwfb	___lwdiv@dividend+1,f,c
  9193  002804  8022               	bsf	___lwdiv@quotient,0,c
  9194  002806                     i2l3920:
  9195  002806  90D8               	bcf	status,0,c
  9196  002808  3221               	rrcf	___lwdiv@divisor+1,f,c
  9197  00280A  3220               	rrcf	___lwdiv@divisor,f,c
  9198  00280C  2E24               	decfsz	___lwdiv@counter,f,c
  9199  00280E  D7ED               	goto	i2l3912
  9200  002810                     i2l1155:
  9201  002810  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  9202  002814  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9203  002818  0012               	return		;funcret
  9204  00281A                     __end_of___lwdiv:
  9205                           	opt stack 0
  9206                           pclatu	equ	0xFFB
  9207                           pclath	equ	0xFFA
  9208                           tblptru	equ	0xFF8
  9209                           tblptrh	equ	0xFF7
  9210                           tblptrl	equ	0xFF6
  9211                           tablat	equ	0xFF5
  9212                           prodh	equ	0xFF4
  9213                           prodl	equ	0xFF3
  9214                           intcon	equ	0xFF2
  9215                           intcon2	equ	0xFF1
  9216                           intcon3	equ	0xFF0
  9217                           postinc0	equ	0xFEE
  9218                           fsr0h	equ	0xFEA
  9219                           fsr0l	equ	0xFE9
  9220                           wreg	equ	0xFE8
  9221                           fsr1h	equ	0xFE2
  9222                           fsr1l	equ	0xFE1
  9223                           bsr	equ	0xFE0
  9224                           indf2	equ	0xFDF
  9225                           postinc2	equ	0xFDE
  9226                           postdec2	equ	0xFDD
  9227                           fsr2h	equ	0xFDA
  9228                           fsr2l	equ	0xFD9
  9229                           status	equ	0xFD8
  9230                           
  9231 ;; *************** function _WriteTimer0 *****************
  9232 ;; Defined at:
  9233 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  timer0          2   29[COMRAM] unsigned int 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;  timer           2   31[COMRAM] struct Timers
  9238 ;; Return value:  Size  Location     Type
  9239 ;;		None               void
  9240 ;; Registers used:
  9241 ;;		None
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9247 ;;      Params:         2       0       0       0
  9248 ;;      Locals:         2       0       0       0
  9249 ;;      Temps:          0       0       0       0
  9250 ;;      Totals:         4       0       0       0
  9251 ;;Total ram usage:        4 bytes
  9252 ;; Hardware stack levels used:    1
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_ISR_Alta
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text24
  9261  00297A                     __ptext24:
  9262                           	opt stack 0
  9263  00297A                     _WriteTimer0:
  9264                           	opt stack 24
  9265                           
  9266                           ;incstack = 0
  9267  00297A  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9268  00297E  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9269  002982  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9270  002986  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9271  00298A  0012               	return		;funcret
  9272  00298C                     __end_of_WriteTimer0:
  9273                           	opt stack 0
  9274  0000                     pclatu	equ	0xFFB
  9275                           pclath	equ	0xFFA
  9276                           tblptru	equ	0xFF8
  9277                           tblptrh	equ	0xFF7
  9278                           tblptrl	equ	0xFF6
  9279                           tablat	equ	0xFF5
  9280                           prodh	equ	0xFF4
  9281                           prodl	equ	0xFF3
  9282                           intcon	equ	0xFF2
  9283                           intcon2	equ	0xFF1
  9284                           intcon3	equ	0xFF0
  9285                           postinc0	equ	0xFEE
  9286                           fsr0h	equ	0xFEA
  9287                           fsr0l	equ	0xFE9
  9288                           wreg	equ	0xFE8
  9289                           fsr1h	equ	0xFE2
  9290                           fsr1l	equ	0xFE1
  9291                           bsr	equ	0xFE0
  9292                           indf2	equ	0xFDF
  9293                           postinc2	equ	0xFDE
  9294                           postdec2	equ	0xFDD
  9295                           fsr2h	equ	0xFDA
  9296                           fsr2l	equ	0xFD9
  9297                           status	equ	0xFD8
  9298                           pclatu	equ	0xFFB
  9299                           pclath	equ	0xFFA
  9300                           tblptru	equ	0xFF8
  9301                           tblptrh	equ	0xFF7
  9302                           tblptrl	equ	0xFF6
  9303                           tablat	equ	0xFF5
  9304                           prodh	equ	0xFF4
  9305                           prodl	equ	0xFF3
  9306                           intcon	equ	0xFF2
  9307                           intcon2	equ	0xFF1
  9308                           intcon3	equ	0xFF0
  9309                           postinc0	equ	0xFEE
  9310                           fsr0h	equ	0xFEA
  9311                           fsr0l	equ	0xFE9
  9312                           wreg	equ	0xFE8
  9313                           fsr1h	equ	0xFE2
  9314                           fsr1l	equ	0xFE1
  9315                           bsr	equ	0xFE0
  9316                           indf2	equ	0xFDF
  9317                           postinc2	equ	0xFDE
  9318                           postdec2	equ	0xFDD
  9319                           fsr2h	equ	0xFDA
  9320                           fsr2l	equ	0xFD9
  9321                           status	equ	0xFD8
  9322                           
  9323                           	psect	rparam
  9324  0000                     pclatu	equ	0xFFB
  9325                           pclath	equ	0xFFA
  9326                           tblptru	equ	0xFF8
  9327                           tblptrh	equ	0xFF7
  9328                           tblptrl	equ	0xFF6
  9329                           tablat	equ	0xFF5
  9330                           prodh	equ	0xFF4
  9331                           prodl	equ	0xFF3
  9332                           intcon	equ	0xFF2
  9333                           intcon2	equ	0xFF1
  9334                           intcon3	equ	0xFF0
  9335                           postinc0	equ	0xFEE
  9336                           fsr0h	equ	0xFEA
  9337                           fsr0l	equ	0xFE9
  9338                           wreg	equ	0xFE8
  9339                           fsr1h	equ	0xFE2
  9340                           fsr1l	equ	0xFE1
  9341                           bsr	equ	0xFE0
  9342                           indf2	equ	0xFDF
  9343                           postinc2	equ	0xFDE
  9344                           postdec2	equ	0xFDD
  9345                           fsr2h	equ	0xFDA
  9346                           fsr2l	equ	0xFD9
  9347                           status	equ	0xFD8
  9348                           
  9349                           	psect	temp
  9350  00003F                     btemp:
  9351                           	opt stack 0
  9352  00003F                     	ds	1
  9353  0000                     int$flags	set	btemp
  9354                           pclatu	equ	0xFFB
  9355                           pclath	equ	0xFFA
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           intcon	equ	0xFF2
  9363                           intcon2	equ	0xFF1
  9364                           intcon3	equ	0xFF0
  9365                           postinc0	equ	0xFEE
  9366                           fsr0h	equ	0xFEA
  9367                           fsr0l	equ	0xFE9
  9368                           wreg	equ	0xFE8
  9369                           fsr1h	equ	0xFE2
  9370                           fsr1l	equ	0xFE1
  9371                           bsr	equ	0xFE0
  9372                           indf2	equ	0xFDF
  9373                           postinc2	equ	0xFDE
  9374                           postdec2	equ	0xFDD
  9375                           fsr2h	equ	0xFDA
  9376                           fsr2l	equ	0xFD9
  9377                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      62
    BANK0           160     52     127
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->___aldiv
    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13810
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___aldiv
                            ___awdiv
                             ___lmul
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    3552
                                             42 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             26 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6833
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     899
                                             32 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     621
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             40 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     450
                                             26 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     556
                                             38 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             26 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1338
                                              4 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                             35 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     34      7F       4       79.4%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      3E       1       66.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD       9        0.0%
DATA                 0      0      BD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 07 09:59:37 2016

           ??_CANisTXwarningON 00C4                              _x 01EF                              _y 01F0  
         __end_of_CANSetFilter 0C1A                   ___awdiv@sign 00C9                             bsr 000FE0  
          ___wmul@multiplicand 00C6                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 0EB8  
                          l401 0FB0                            l410 107E                            l402 0F40  
                          l403 0F4A                            l500 074E                            l404 0F54  
                          l501 0752                            l413 1138                            l405 0F5E  
                          l510 085E                            l502 075E                            l422 12F2  
                          l414 113C                            l511 086A                            l423 12F6  
                          l415 1234                            l520 0976                            l512 086E  
                          l424 1302                            l416 11C4                            l408 106E  
                          l521 097A                            l513 087A                            l505 083A  
                          l417 11CE                            l409 1072                            l530 0A86  
                          l522 0986                            l506 083E                            l418 11D8  
                          l531 0A92                            l523 098A                            l507 084A  
                          l419 11E2                            l540 0B9E                            l532 0A96  
                          l524 0996                            l516 0956                            l508 084E  
                          l460 1AEC                            l452 1AAC                            l700 1F0E  
                          l541 0BA2                            l533 0AA2                            l517 095A  
                          l509 085A                            l453 1AB0                            l701 1F18  
                          l542 0BAE                            l534 0AA6                            l518 0966  
                          l470 1BF8                            l454 1ABC                            l390 0CDA  
                          l543 0BB2                            l535 0AB2                            l527 0A72  
                          l519 096A                            l471 1C04                            l463 1BC4  
                          l455 1AC0                            l383 0E9E                            l544 0BBE  
                          l528 0A76                            l464 1BC8                            l456 1ACC  
                          l384 0C30                            l704 1F20                            l545 0BC2  
                          l529 0A82                            l465 1BD4                            l457 1AD0  
                          l393 0DEA                            l385 0C34                            l713 1FB8  
                          l705 1F6A                            l546 0BCE                            l538 0B8E  
                          l490 0638                            l466 1BD8                            l458 1ADC  
                          l378 2172                            l394 0DEE                            l386 0D2C  
                          l539 0B92                            l491 0644                            l483 0604  
                          l467 1BE4                            l459 1AE0                            l379 217C  
                          l395 0DFA                            l387 0CBC                            l731 2412  
                          l484 0608                            l468 1BE8                            l388 0CC6  
                          l485 0614                            l469 1BF4                            l389 0CD0  
                          l733 240E                            l494 071E                            l486 0618  
                          l398 1122                            l726 2416                            l718 203A  
                          l495 0722                            l487 0624                            l399 0EB4  
                          l496 072E                            l488 0628                            l576 2948  
                          l497 0732                            l489 0634                            l498 073E  
                          l739 281C                            l499 0742                            l589 28C0  
                          l698 1F16                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
         __size_of_WriteTimer0 0012                            _msg 0082                            wreg 000FE8  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l3020 068E  
                         l3014 0648                           l3122 09E0                           l3116 099A  
                         l3300 0DDE                           l4100 1F3C                           l3150 0AB6  
                         l3054 07A8                           l3048 0762                           l3240 2188  
                         l4112 1F6E                           l4104 1F4A                           l3082 087E  
                         l3242 21CC                           l3234 216A                           l3306 0DFE  
                         l3156 0AFC                           l3236 2180                           l4140 2054  
                         l4124 1FD2                           l4132 2032                           l4108 1F5A  
                         l3510 262A                           l4142 20AA                           l4126 2028  
                         l3520 265A                           l3504 2614                           l3184 0BD2  
                         l3088 08C4                           l3432 11EC                           l3280 0CE4  
                         l3516 2648                           l3532 2698                           l3452 12E6  
                         l3356 0F68                           l4084 1EF6                           l3518 2654  
                         l2814 1A20                           l3382 1082                           l4094 1F26  
                         l3536 26AC                           l3528 268A                           l2840 1AF0  
                         l3376 1062                           l2914 028A                           l3458 1306  
                         l2780 2956                           l2932 0344                           l3492 28B2  
                         l2950 03FE                           l2846 1B36                           l3822 2332  
                         l2872 1C08                           l3850 2764                           l3818 22F0  
                         l3844 2402                           l3828 236E                           l3854 278A  
                         l2798 196A                           l3880 249A                           l3872 245C  
                         l2968 04B8                           l2896 01D2                           l3890 24F4  
                         l3882 24A0                           l3866 243E                           l2986 0572  
                         l3878 248A                           l3894 2506                           l3898 2522  
                         u3000 0782                           u3005 0776                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u4100 2994                           u2405 1946  
                         u4110 29A0                           u2430 199C                           u3320 0BF2  
                         u3240 0AD6                           u3160 09BA                           u3080 089E  
                         u2600 1C28                           u2520 1B10                           u2435 1990  
                         u3325 0BE6                           u3245 0ACA                           u3165 09AE  
                         u3085 0892                           u2605 1C1C                           u2525 1B04  
                         u2445 19FC                           u2710 02C0                           u2630 014E  
                         u2390 18E6                           u3450 0D04                           u4170 22D8  
                         u2715 02B4                           u2635 0142                           u2395 18DA  
                         u3460 0D50                           u2805 0494                           u2725 0320  
                         u2645 01AE                           u3605 1034                           u2830 04EE  
                         u2750 037A                           u2670 0206                           u3710 120C  
                         u3455 0CF8                           u2920 0668                           u3720 1258  
                         u4176 22DA                           u3465 0D44                           u2835 04E2  
                         u2755 036E                           u2675 01FA                           u3715 1200  
                         u3475 0DB0                           u3580 0F88                           u2925 065C  
                         u2845 054E                           u2765 03DA                           u2685 0266  
                         u3725 124C                           u2790 0434                           u3590 0FD4  
                         u3735 12B8                           u3585 0F7C                           u2795 0428  
                         u3595 0FC8                           u4857 28B4            __size_of_CANSetMask 039E  
                         _main 1EC8                           _read 0080                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         _step 0081                           btemp 003F               __end_of_ADC_Read 2858  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0110                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 294E                   _status_array 00A1  
              _brake_value_inc 007E           _remote_frame_handler 227C     __size_of_CANreceiveMessage 050C  
              __end_of___aldiv 2534                          ?_main 0001                __end_of___awdiv 26B6  
                        _T0CON 000FD5                ___awdiv@divisor 00C6                          _T1CON 000FCD  
                        _T3CON 000FB1             __size_of_ISR_Bassa 00F8                __end_of___lwdiv 281A  
                        i1l430 163E                          i1l581 2976                          i1l692 00C0  
                        i1l694 00C8                          i1l686 00B8                          i1l689 00B4  
                        i2l683 1E8C                ___awdiv@counter 00C8                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR3H 000FB3  
                        _TMR1L 000FCE                          _TMR3L 000FB2              _CANisRxReady$3284 0001  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                          _TRISE 000F96                  __CFG_PWRT$OFF 000000  
             __end_of_ISR_Alta 1EC8                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
          ___lmul@multiplicand 00C8                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000             CANInitialize@flags 00D6                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
               __pbitbssCOMRAM 01E8           __end_of_CANisRxReady 297A                          tablat 000FF5  
         __end_of_CANisTxReady 294E               __end_ofi2___wmul 292A                          status 000FD8  
           __size_ofi2___awdiv 009C                 __CFG_PBADEN$ON 000000                __initialization 2858  
                 __end_of_main 20B6  __size_of_board_initialization 00C4               _brake_signal_CAN 007D  
        ?_remote_frame_handler 0001                         ??_main 00DE                  __activetblptr 000002  
            _CANisTxReady$3282 00C4                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 00C4                __CFG_BBSIZ$1024 000000  
                       i1l4060 0096                         i1l4052 0066                         i1l3600 15CA  
                       i1l3610 1638                         i1l3604 15E8                         i1l3608 1606  
                       i2l1155 2810                         i1l3670 187C                         i1l3662 1844  
                       i1l3654 180C                         i1l3646 179E                         i1l3672 18AE  
                       i1l3592 158E                         i1l3584 151E                         i1l3666 1860  
                       i1l3658 1828                         i1l3596 15AC                         i2l4200 2728  
                       i2l4204 2734                         i2l4208 2748                         i2l4224 1DB2  
                       i2l4250 1E24                         i2l4226 1DBE                         i2l4260 1E3A  
                       i2l4236 1DD4                         i2l4252 1E26                         i2l4228 1DC0  
                       i2l4190 2704                         i2l4182 26E0                         i2l4192 2708  
                       i2l4176 26CE                         i2l4274 1E8A                         i2l4188 26FA  
                       i2l3910 27E6                         i2l3920 2806                         i2l3912 27EA  
                       i2l3908 27DE                         _RXB0D0 000F66                         _RXB0D1 000F67  
                       _RXB0D2 000F68                         _RXB0D3 000F69                         _RXB0D4 000F6A  
                       _RXB1D0 000F56                         _RXB0D5 000F6B                         _RXB1D1 000F57  
                       _RXB0D6 000F6C                         _RXB1D2 000F58                         _RXB0D7 000F6D  
                       _RXB1D3 000F59                         _RXB1D4 000F5A                         _RXB1D5 000F5B  
                       _RXB1D6 000F5C                         _RXB1D7 000F5D                         _TXB0D0 000F46  
                       _TXB0D1 000F47                         _TXB0D2 000F48                         _TXB0D3 000F49  
                       _TXB1D0 000F36                         _TXB0D4 000F4A                         _TXB1D1 000F37  
                       _TXB0D5 000F4B                         _TXB1D2 000F38                         _TXB0D6 000F4C  
                       _TXB1D3 000F39                         _TXB0D7 000F4D                         _TXB2D0 000F26  
                       _TXB1D4 000F3A                         _TXB2D1 000F27                         _TXB1D5 000F3B  
                       _TXB2D2 000F28                         _TXB1D6 000F3C                         _TXB2D3 000F29  
                       _TXB1D7 000F3D                         _TXB2D4 000F2A                         _TXB2D5 000F2B  
                       _TXB2D6 000F2C                         _TXB2D7 000F2D             CANsendMessage@data 00C8  
           CANsendMessage@tamp 00D0              __end_of_ISR_Bassa 0110               __end_of_delay_ms 28CE  
        __size_of_CANSetFilter 0B06                 __CFG_XINST$OFF 000000                         ___lmul 2752  
                    ??___aldiv 00D8                         ___wmul 28CE                      ??___awdiv 00C8  
               __CFG_STVREN$ON 000000                      ??___lwdiv 0022                   ??_CANSetMask 00C9  
                       clear_0 285E                         clear_1 286E               ___awdiv@quotient 00CA  
               i2___awdiv@sign 00AB                __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 2752  
                    ?_ADC_Read 0001                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 007F                   _CANSetFilter 0114  
                   __accesstop 0060        __end_of__initialization 2886             __end_of_CANSetMask 1C50  
                ___rparam_used 000001      __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001  
                    ?_ISR_Alta 0001                   __pidataBANK0 29A4         ??_remote_frame_handler 00D4  
                 _ENC1_measure 01E8          CANSetFilter@numBuffer 00CD                      ?i2___wmul 001E  
    __size_of_CANisTXwarningON 000C                   _ENC2_measure 01E9                     ??_ADC_Read 00CC  
        __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024       __end_of_CANOperationMode 2964  
                   __pbssBANK0 0060        __size_of_CANsendMessage 078C                     ??_ISR_Alta 00AE  
                      ?___lmul 00C4                        ?___wmul 00C4                     _gap_time_1 0038  
                   _gap_time_2 003A               WriteTimer0@timer 0020                  ??_WriteTimer0 0020  
               ___lmul@product 00CC                   _CANisRxReady 2964                        _CANSTAT 000F6E  
                 _CANisTxReady 292A                        _BRGCON1 000F70                        _BRGCON2 000F71  
                      _BRGCON3 000F72                     ??i2___wmul 0022                  _int_counter_1 0060  
                _int_counter_2 0064         __size_of_CANInitialize 01C6                      ?_delay_ms 00CA  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25                     _distance_1 0078                     _distance_2 007A  
          CANsendMessage@flags 00CB                     _count_flag 01ED                        __Hparam 0000  
                      __Lparam 0000               delay_ms@value_ms 00CA                        ___aldiv 241A  
                      ___awdiv 25F8                __size_of___lmul 0076                __size_of___wmul 0036  
                      ___lwdiv 27C8           CANInitialize@propSeg 00DB                        __pcinit 2858  
                      __ramtop 0300                        __ptext0 1EC8                        __ptext1 227C  
                      __ptext2 0C1A                        __ptext3 292A                        __ptext4 2534  
                      __ptext5 2894                        __ptext6 28CE                        __ptext7 20B6  
                      __ptext8 18B2                        __ptext9 0114                      _T0CONbits 000FD5  
                    _T1CONbits 000FCD                      _T3CONbits 000FB1               ___aldiv@dividend 00D0  
          __end_of_WriteTimer0 298C                     ??_delay_ms 00CC         CANreceiveMessage@error 000B  
 __end_of_board_initialization 25F8                 __pintcode_body 1C50           end_of_initialization 2886  
                _Analogic_Mode 007C                  __Lmediumconst 0000                        int_func 1C50  
          i2___wmul@multiplier 001E               _CANisRXwarningON 2998                  _CANInitialize 20B6  
             ___aldiv@quotient 00DA                      _ISR_Bassa 0018                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                      _PORTAbits 000F80  
               CANSetMask@mask 00C4                      _PORTCbits 000F82              _correction_factor 0076  
               CANSetMask@tamp 00CE                 CANSetMask@type 00C8               _CANisTXwarningON 298C  
            __size_of_ADC_Read 003E                      i2___awdiv 26B6        _clock_counter_reference 0074  
               _CANsendMessage 0C1A               CANInitialize@BRP 00D5               CANInitialize@SJW 00D4  
               ?_CANInitialize 00D2             i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001  
               __end_of___lmul 27C8              __size_of_ISR_Alta 1EC0                 __end_of___wmul 2904  
                  _WriteTimer0 297A               i2___wmul@product 0022            start_initialization 2858  
           i2___awdiv@quotient 00AC              __size_ofi2___wmul 0026            CANSetMask@numBuffer 00CD  
                   ?i2___awdiv 0024         __end_of_CANsendMessage 13A6              ?_CANOperationMode 0001  
           ??_CANOperationMode 00C4     CANInitialize@FilterConfig1 00DC     CANInitialize@FilterConfig2 00DD  
                     ??___lmul 00CC           _board_initialization 2534                       ??___wmul 00C8  
                  __pdataBANK0 00DE               __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 019E  
           _brake_value_degree 003C         CANInitialize@phaseSeg1 00D2         CANInitialize@phaseSeg2 00D3  
                  __pbssCOMRAM 0028                  __pcstackBANK0 00AA                    _data_debug1 0028  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72              __size_of_delay_ms 003A  
              ?_CANsendMessage 00C4                ??_CANInitialize 00D7             CANSetFilter@filter 00C4  
             ___lwdiv@dividend 001E          ?_board_initialization 0001                    ??_ISR_Bassa 000D  
                    __pintcode 0008                       ?___aldiv 00D0                       ?___awdiv 00C4  
                     ?___lwdiv 001E                    __pintcodelo 0018              WriteTimer0@timer0 001E  
     __end_of_CANisRXwarningON 29A4                    _brake_value 00A9                    _COMSTATbits 000F74  
                     _ADC_Read 281A               ___lwdiv@quotient 0022                    ??i2___awdiv 0028  
              ___aldiv@divisor 00D4          CANreceiveMessage@tamp 000C                ___aldiv@counter 00D8  
               ___wmul@product 00C8                       _IPR1bits 000F9F                       _IPR2bits 000FA2  
 _delay_quartz_frequency_value 00DE                       _PIE1bits 000F9D                       _IPR3bits 000FA5  
                     _PIE2bits 000FA0                       _PIE3bits 000FA3       __end_of_CANisTXwarningON 2998  
                     i1u400_20 16E6                       i1u400_26 16E8                       i1u401_20 1710  
                     i1u401_26 1712                       i1u403_25 1724                       i1u409_25 1888  
                     i1u390_20 148C                       i1u390_26 148E                       i1u392_25 14A2  
                     i1u389_20 145E                       i1u389_26 1460                       i1u398_25 1612  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       _PIR3bits 000FA4  
                     _RXB0EIDH 000F63                       _RXB0EIDL 000F64                       _RXB1EIDH 000F53  
                     _RXB1EIDL 000F54                       _ISR_Alta 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0EIDH 000F02                       _RXB1SIDH 000F51                       _RXF0EIDL 000F03  
                     _RXB1SIDL 000F52                       _RXF1EIDH 000F06                       _RXF1EIDL 000F07  
                     _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E  
                     _RXF3EIDL 000F0F                       _RXF4EIDH 000F12                       _RXF4EIDL 000F13  
                     _RXF5EIDH 000F16                       _RXF5EIDL 000F17                       _RXF0SIDH 000F00  
                     _RXF0SIDL 000F01                       _TXB0EIDH 000F43                       _RXF1SIDH 000F04  
                     _TXB0EIDL 000F44                       _RXF1SIDL 000F05                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 0030                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 00C4                       i2___wmul 2904              i2___awdiv@divisor 0026  
            i2___awdiv@counter 00AA                  ?_CANSetFilter 00C4              ___lmul@multiplier 00C4  
                  _INTCON2bits 000FF1                    _INTCON3bits 000FF0                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00DE  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52               __size_of___aldiv 011A  
                   _CANSetMask 18B2               __size_of___awdiv 00BE          i2___wmul@multiplicand 0020  
             __size_of___lwdiv 0052                _remote_frame_id 0068                       _Tx_retry 01EC  
                 ?_WriteTimer0 001E                   _RXF0SIDLbits 000F01                       _delay_ms 2894  
              ___lwdiv@divisor 0020                   _RXF1SIDLbits 000F05                  _TMR1_overflow 01EA  
              ___lwdiv@counter 0024                 ??_CANSetFilter 00C9                       __ptext10 294E  
                     __ptext11 2752                       __ptext12 241A                       __ptext21 2904  
                     __ptext13 298C                       __ptext22 26B6                       __ptext14 2998  
                     __ptext23 27C8                       __ptext15 281A                       __ptext24 297A  
                     __ptext16 25F8                       __ptext18 13A6                       __ptext19 2964  
                 _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11  
                 _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00CA                   _remote_frame 01EE  
                _TMR3_overflow 01EB                  __size_of_main 01EE           CANreceiveMessage@msg 0001  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 0034  
                 _TXB2SIDLbits 000F22                       int$flags 003F      __size_of_CANOperationMode 0016  
                ?_CANisRxReady 0001                  ?_CANisTxReady 0001                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 13A6                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 00CC                  _wheel_speed_1 006C  
                _wheel_speed_2 0070             ?_CANreceiveMessage 0001       CANsendMessage@identifier 00C4  
 __end_of_remote_frame_handler 241A                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 00CE               CANSetFilter@type 00C8            ??_CANreceiveMessage 0003  
                  _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35                    _TXB0CONbits 000F40  
                  _TXB2DLCbits 000F25                    _TXB1CONbits 000F30                    _TXB2CONbits 000F20  
         CANOperationMode@mode 00C4                 ??_CANisRxReady 0001                    ?_CANSetMask 00C4  
               ??_CANisTxReady 00C4                 _distance_array 0091      __end_of_CANreceiveMessage 18B2  
            ?_CANisRXwarningON 0001                    _speed_array 0099                   ___aldiv@sign 00D9  
           ??_CANisRXwarningON 00C4          __end_of_CANInitialize 227C              ?_CANisTXwarningON 0001  
