

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jun 11 18:38:11 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	param0,global,class=BANK0,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  002D6A                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _delay_quartz_frequency_value
    50  002D6A  10                 	db	16
    51                           
    52                           	psect	idataBANK0
    53  002D62                     __pidataBANK0:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _remote_frame_array
    57  002D62  01                 	db	1
    58  002D63  00                 	db	0
    59  002D64  00                 	db	0
    60  002D65  00                 	db	0
    61  002D66  00                 	db	0
    62  002D67  00                 	db	0
    63  002D68  00                 	db	0
    64  002D69  00                 	db	0
    65  0000                     _RXB1CON	set	3920
    66  0000                     _RXB1CONbits	set	3920
    67  0000                     _RXB1D0	set	3926
    68  0000                     _RXB1D1	set	3927
    69  0000                     _RXB1D2	set	3928
    70  0000                     _RXB1D3	set	3929
    71  0000                     _RXB1D4	set	3930
    72  0000                     _RXB1D5	set	3931
    73  0000                     _RXB1D6	set	3932
    74  0000                     _RXB1D7	set	3933
    75  0000                     _RXB1DLC	set	3925
    76  0000                     _RXB1DLCbits	set	3925
    77  0000                     _RXB1EIDH	set	3923
    78  0000                     _RXB1EIDL	set	3924
    79  0000                     _RXB1SIDH	set	3921
    80  0000                     _RXB1SIDL	set	3922
    81  0000                     _RXB1SIDLbits	set	3922
    82  0000                     _RXF0EIDH	set	3842
    83  0000                     _RXF0EIDL	set	3843
    84  0000                     _RXF0SIDH	set	3840
    85  0000                     _RXF0SIDL	set	3841
    86  0000                     _RXF0SIDLbits	set	3841
    87  0000                     _RXF1EIDH	set	3846
    88  0000                     _RXF1EIDL	set	3847
    89  0000                     _RXF1SIDH	set	3844
    90  0000                     _RXF1SIDL	set	3845
    91  0000                     _RXF1SIDLbits	set	3845
    92  0000                     _RXF2EIDH	set	3850
    93  0000                     _RXF2EIDL	set	3851
    94  0000                     _RXF2SIDH	set	3848
    95  0000                     _RXF2SIDL	set	3849
    96  0000                     _RXF2SIDLbits	set	3849
    97  0000                     _RXF3EIDH	set	3854
    98  0000                     _RXF3EIDL	set	3855
    99  0000                     _RXF3SIDH	set	3852
   100  0000                     _RXF3SIDL	set	3853
   101  0000                     _RXF3SIDLbits	set	3853
   102  0000                     _RXF4EIDH	set	3858
   103  0000                     _RXF4EIDL	set	3859
   104  0000                     _RXF4SIDH	set	3856
   105  0000                     _RXF4SIDL	set	3857
   106  0000                     _RXF4SIDLbits	set	3857
   107  0000                     _RXF5EIDH	set	3862
   108  0000                     _RXF5EIDL	set	3863
   109  0000                     _RXF5SIDH	set	3860
   110  0000                     _RXF5SIDL	set	3861
   111  0000                     _RXF5SIDLbits	set	3861
   112  0000                     _RXM0EIDH	set	3866
   113  0000                     _RXM0EIDL	set	3867
   114  0000                     _RXM0SIDH	set	3864
   115  0000                     _RXM0SIDL	set	3865
   116  0000                     _RXM0SIDLbits	set	3865
   117  0000                     _RXM1EIDH	set	3870
   118  0000                     _RXM1EIDL	set	3871
   119  0000                     _RXM1SIDH	set	3868
   120  0000                     _RXM1SIDL	set	3869
   121  0000                     _RXM1SIDLbits	set	3869
   122  0000                     _TXB0CONbits	set	3904
   123  0000                     _TXB0D0	set	3910
   124  0000                     _TXB0D1	set	3911
   125  0000                     _TXB0D2	set	3912
   126  0000                     _TXB0D3	set	3913
   127  0000                     _TXB0D4	set	3914
   128  0000                     _TXB0D5	set	3915
   129  0000                     _TXB0D6	set	3916
   130  0000                     _TXB0D7	set	3917
   131  0000                     _TXB0DLC	set	3909
   132  0000                     _TXB0DLCbits	set	3909
   133  0000                     _TXB0EIDH	set	3907
   134  0000                     _TXB0EIDL	set	3908
   135  0000                     _TXB0SIDH	set	3905
   136  0000                     _TXB0SIDL	set	3906
   137  0000                     _TXB0SIDLbits	set	3906
   138  0000                     _TXB1CONbits	set	3888
   139  0000                     _TXB1D0	set	3894
   140  0000                     _TXB1D1	set	3895
   141  0000                     _TXB1D2	set	3896
   142  0000                     _TXB1D3	set	3897
   143  0000                     _TXB1D4	set	3898
   144  0000                     _TXB1D5	set	3899
   145  0000                     _TXB1D6	set	3900
   146  0000                     _TXB1D7	set	3901
   147  0000                     _TXB1DLC	set	3893
   148  0000                     _TXB1DLCbits	set	3893
   149  0000                     _TXB1EIDH	set	3891
   150  0000                     _TXB1EIDL	set	3892
   151  0000                     _TXB1SIDH	set	3889
   152  0000                     _TXB1SIDL	set	3890
   153  0000                     _TXB1SIDLbits	set	3890
   154  0000                     _TXB2CONbits	set	3872
   155  0000                     _TXB2D0	set	3878
   156  0000                     _TXB2D1	set	3879
   157  0000                     _TXB2D2	set	3880
   158  0000                     _TXB2D3	set	3881
   159  0000                     _TXB2D4	set	3882
   160  0000                     _TXB2D5	set	3883
   161  0000                     _TXB2D6	set	3884
   162  0000                     _TXB2D7	set	3885
   163  0000                     _TXB2DLC	set	3877
   164  0000                     _TXB2DLCbits	set	3877
   165  0000                     _TXB2EIDH	set	3875
   166  0000                     _TXB2EIDL	set	3876
   167  0000                     _TXB2SIDH	set	3873
   168  0000                     _TXB2SIDL	set	3874
   169  0000                     _TXB2SIDLbits	set	3874
   170  0000                     _BRGCON1	set	3952
   171  0000                     _BRGCON2	set	3953
   172  0000                     _BRGCON2bits	set	3953
   173  0000                     _BRGCON3	set	3954
   174  0000                     _BRGCON3bits	set	3954
   175  0000                     _CANCON	set	3951
   176  0000                     _CANCONbits	set	3951
   177  0000                     _CANSTAT	set	3950
   178  0000                     _COMSTATbits	set	3956
   179  0000                     _INTCON2bits	set	4081
   180  0000                     _INTCON3bits	set	4080
   181  0000                     _INTCONbits	set	4082
   182  0000                     _IPR1bits	set	3999
   183  0000                     _IPR2bits	set	4002
   184  0000                     _IPR3bits	set	4005
   185  0000                     _LATA	set	3977
   186  0000                     _LATB	set	3978
   187  0000                     _LATC	set	3979
   188  0000                     _LATD	set	3980
   189  0000                     _LATE	set	3981
   190  0000                     _PIE1bits	set	3997
   191  0000                     _PIE2bits	set	4000
   192  0000                     _PIE3bits	set	4003
   193  0000                     _PIR1bits	set	3998
   194  0000                     _PIR2bits	set	4001
   195  0000                     _PIR3bits	set	4004
   196  0000                     _PORTAbits	set	3968
   197  0000                     _PORTCbits	set	3970
   198  0000                     _RCONbits	set	4048
   199  0000                     _RXB0CON	set	3936
   200  0000                     _RXB0CONbits	set	3936
   201  0000                     _RXB0D0	set	3942
   202  0000                     _RXB0D1	set	3943
   203  0000                     _RXB0D2	set	3944
   204  0000                     _RXB0D3	set	3945
   205  0000                     _RXB0D4	set	3946
   206  0000                     _RXB0D5	set	3947
   207  0000                     _RXB0D6	set	3948
   208  0000                     _RXB0D7	set	3949
   209  0000                     _RXB0DLC	set	3941
   210  0000                     _RXB0DLCbits	set	3941
   211  0000                     _RXB0EIDH	set	3939
   212  0000                     _RXB0EIDL	set	3940
   213  0000                     _RXB0SIDH	set	3937
   214  0000                     _RXB0SIDL	set	3938
   215  0000                     _RXB0SIDLbits	set	3938
   216  0000                     _RXERRCNT	set	3957
   217  0000                     _T0CON	set	4053
   218  0000                     _T0CONbits	set	4053
   219  0000                     _T1CON	set	4045
   220  0000                     _T1CONbits	set	4045
   221  0000                     _T3CON	set	4017
   222  0000                     _T3CONbits	set	4017
   223  0000                     _TMR0H	set	4055
   224  0000                     _TMR0L	set	4054
   225  0000                     _TMR1H	set	4047
   226  0000                     _TMR1L	set	4046
   227  0000                     _TMR3H	set	4019
   228  0000                     _TMR3L	set	4018
   229  0000                     _TRISA	set	3986
   230  0000                     _TRISB	set	3987
   231  0000                     _TRISC	set	3988
   232  0000                     _TRISD	set	3989
   233  0000                     _TRISE	set	3990
   234  0000                     _TXERRCNT	set	3958
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  002BD0                     __pcinit:
   240                           	opt stack 0
   241  002BD0                     start_initialization:
   242                           	opt stack 0
   243  002BD0                     __initialization:
   244                           	opt stack 0
   245                           
   246                           ; Clear objects allocated to BANK0 (73 bytes)
   247  002BD0  EE00  F060         	lfsr	0,__pbssBANK0
   248  002BD4  0E49               	movlw	73
   249  002BD6                     clear_0:
   250  002BD6  6AEE               	clrf	postinc0,c
   251  002BD8  06E8               	decf	wreg,f,c
   252  002BDA  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   255  002BDC  6A49               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   256  002BDE  6A48               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   257                           
   258                           ; Clear objects allocated to COMRAM (41 bytes)
   259  002BE0  EE00  F001         	lfsr	0,__pbssCOMRAM
   260  002BE4  0E29               	movlw	41
   261  002BE6                     clear_1:
   262  002BE6  6AEE               	clrf	postinc0,c
   263  002BE8  06E8               	decf	wreg,f,c
   264  002BEA  E1FD               	bnz	clear_1
   265                           
   266                           ; Initialize objects allocated to BANK0 (8 bytes)
   267                           ; load TBLPTR registers with __pidataBANK0
   268  002BEC  0E62               	movlw	low __pidataBANK0
   269  002BEE  6EF6               	movwf	tblptrl,c
   270  002BF0  0E2D               	movlw	high __pidataBANK0
   271  002BF2  6EF7               	movwf	tblptrh,c
   272  002BF4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   273  002BF6  6EF8               	movwf	tblptru,c
   274  002BF8  EE00  F0D3         	lfsr	0,__pdataBANK0
   275  002BFC  EE10 F008          	lfsr	1,8
   276  002C00                     copy_data0:
   277  002C00  0009               	tblrd		*+
   278  002C02  CFF5 FFEE          	movff	tablat,postinc0
   279  002C06  50E5               	movf	postdec1,w,c
   280  002C08  50E1               	movf	fsr1l,w,c
   281  002C0A  E1FA               	bnz	copy_data0
   282                           
   283                           ; Initialize objects allocated to COMRAM (1 bytes)
   284                           ; load TBLPTR registers with __pidataCOMRAM
   285  002C0C  0E6A               	movlw	low __pidataCOMRAM
   286  002C0E  6EF6               	movwf	tblptrl,c
   287  002C10  0E2D               	movlw	high __pidataCOMRAM
   288  002C12  6EF7               	movwf	tblptrh,c
   289  002C14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   290  002C16  6EF8               	movwf	tblptru,c
   291  002C18  0009               	tblrd		*+	;fetch initializer
   292  002C1A  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   293  002C1E                     end_of_initialization:
   294                           	opt stack 0
   295  002C1E                     __end_of__initialization:
   296                           	opt stack 0
   297  002C1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   298  002C20  6EF8               	movwf	tblptru,c
   299  002C22  0100               	movlb	0
   300  002C24  EF9A  F00E         	goto	_main	;jump to C main() function
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	bitbssCOMRAM
   311  000240                     __pbitbssCOMRAM:
   312                           	opt stack 0
   313  000240                     _ENC1_measure:
   314                           	opt stack 0
   315  000240                     	ds	1
   316  000241                     _ENC2_measure:
   317                           	opt stack 0
   318  000241                     	ds	1
   319  000242                     _TMR1_overflow:
   320                           	opt stack 0
   321  000242                     	ds	1
   322  000243                     _TMR3_overflow:
   323                           	opt stack 0
   324  000243                     	ds	1
   325  000244                     _Tx_retry:
   326                           	opt stack 0
   327  000244                     	ds	1
   328  000245                     _count_flag:
   329                           	opt stack 0
   330  000245                     	ds	1
   331  000246                     _distance_reached_flag:
   332                           	opt stack 0
   333  000246                     	ds	1
   334  000247                     _distance_set_flag:
   335                           	opt stack 0
   336  000247                     	ds	1
   337  000248                     _remote_frame:
   338                           	opt stack 0
   339  000248                     	ds	1
   340  000249                     _steering_dir:
   341                           	opt stack 0
   342  000249                     	ds	1
   343  00024A                     _x:
   344                           	opt stack 0
   345  00024A                     	ds	1
   346  00024B                     _y:
   347                           	opt stack 0
   348  00024B                     	ds	1
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           postdec1	equ	0xFE5
   356                           fsr1l	equ	0xFE1
   357                           
   358                           	psect	bssCOMRAM
   359  000001                     __pbssCOMRAM:
   360                           	opt stack 0
   361  000001                     _remote_frame_id:
   362                           	opt stack 0
   363  000001                     	ds	4
   364  000005                     _timer_on:
   365                           	opt stack 0
   366  000005                     	ds	4
   367  000009                     _wheel_speed_1:
   368                           	opt stack 0
   369  000009                     	ds	4
   370  00000D                     _wheel_speed_2:
   371                           	opt stack 0
   372  00000D                     	ds	4
   373  000011                     _wheel_speed_average_1:
   374                           	opt stack 0
   375  000011                     	ds	4
   376  000015                     _distance_1:
   377                           	opt stack 0
   378  000015                     	ds	2
   379  000017                     _distance_2:
   380                           	opt stack 0
   381  000017                     	ds	2
   382  000019                     _distance_set_counter_1:
   383                           	opt stack 0
   384  000019                     	ds	2
   385  00001B                     _distance_set_counter_2:
   386                           	opt stack 0
   387  00001B                     	ds	2
   388  00001D                     _distance_set_value:
   389                           	opt stack 0
   390  00001D                     	ds	2
   391  00001F                     _gap_time_1:
   392                           	opt stack 0
   393  00001F                     	ds	2
   394  000021                     _gap_time_2:
   395                           	opt stack 0
   396  000021                     	ds	2
   397  000023                     _Analogic_Mode:
   398                           	opt stack 0
   399  000023                     	ds	1
   400  000024                     _brake_signal_CAN:
   401                           	opt stack 0
   402  000024                     	ds	1
   403  000025                     _brake_value_inc:
   404                           	opt stack 0
   405  000025                     	ds	1
   406  000026                     _home_position:
   407                           	opt stack 0
   408  000026                     	ds	1
   409  000027                     _step:
   410                           	opt stack 0
   411  000027                     	ds	1
   412  000028                     _brake_value:
   413                           	opt stack 0
   414  000028                     	ds	1
   415  000029                     _brake_value_degree:
   416                           	opt stack 0
   417  000029                     	ds	1
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           postdec1	equ	0xFE5
   425                           fsr1l	equ	0xFE1
   426                           
   427                           	psect	dataCOMRAM
   428  00004A                     __pdataCOMRAM:
   429                           	opt stack 0
   430  00004A                     _delay_quartz_frequency_value:
   431                           	opt stack 0
   432  00004A                     	ds	1
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	bssBANK0
   443  000060                     __pbssBANK0:
   444                           	opt stack 0
   445  000060                     _data_debug1:
   446                           	opt stack 0
   447  000060                     	ds	8
   448  000068                     _distance_actual_value:
   449                           	opt stack 0
   450  000068                     	ds	4
   451  00006C                     _int_counter_1:
   452                           	opt stack 0
   453  00006C                     	ds	4
   454  000070                     _int_counter_2:
   455                           	opt stack 0
   456  000070                     	ds	4
   457  000074                     _timer_off:
   458                           	opt stack 0
   459  000074                     	ds	4
   460  000078                     _wheel_speed_average_2:
   461                           	opt stack 0
   462  000078                     	ds	4
   463  00007C                     _clock_counter_reference:
   464                           	opt stack 0
   465  00007C                     	ds	2
   466  00007E                     _int_counter_1_count:
   467                           	opt stack 0
   468  00007E                     	ds	2
   469  000080                     _int_counter_2_count:
   470                           	opt stack 0
   471  000080                     	ds	2
   472  000082                     _msg:
   473                           	opt stack 0
   474  000082                     	ds	15
   475  000091                     _distance_array:
   476                           	opt stack 0
   477  000091                     	ds	8
   478  000099                     _speed_array:
   479                           	opt stack 0
   480  000099                     	ds	8
   481  0000A1                     _status_array:
   482                           	opt stack 0
   483  0000A1                     	ds	8
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	dataBANK0
   494  0000D3                     __pdataBANK0:
   495                           	opt stack 0
   496  0000D3                     _remote_frame_array:
   497                           	opt stack 0
   498  0000D3                     	ds	8
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	cstackBANK1
   509  000100                     __pcstackBANK1:
   510                           	opt stack 0
   511  000100                     ??_CANSetMask:
   512  000100                     ??_CANSetFilter:
   513  000100                     ?___lmul:
   514                           	opt stack 0
   515  000100                     ?___lldiv:
   516                           	opt stack 0
   517  000100                     ___awdiv@counter:
   518                           	opt stack 0
   519  000100                     CANsendMessage@identifier:
   520                           	opt stack 0
   521  000100                     ___lmul@multiplier:
   522                           	opt stack 0
   523  000100                     ___lldiv@dividend:
   524                           	opt stack 0
   525                           
   526                           ; 4 bytes @ 0x0
   527  000100                     	ds	1
   528  000101                     ___awdiv@sign:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x1
   532  000101                     	ds	1
   533  000102                     ___awdiv@quotient:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x2
   537  000102                     	ds	2
   538  000104                     CANSetMask@numBuffer:
   539                           	opt stack 0
   540  000104                     CANSetFilter@numBuffer:
   541                           	opt stack 0
   542  000104                     CANsendMessage@data:
   543                           	opt stack 0
   544  000104                     ___lmul@multiplicand:
   545                           	opt stack 0
   546  000104                     ___lldiv@divisor:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x4
   550  000104                     	ds	1
   551  000105                     CANSetMask@tamp:
   552                           	opt stack 0
   553  000105                     CANSetFilter@tamp:
   554                           	opt stack 0
   555                           
   556                           ; 4 bytes @ 0x5
   557  000105                     	ds	1
   558  000106                     CANsendMessage@dataLength:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x6
   562  000106                     	ds	1
   563  000107                     CANsendMessage@flags:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x7
   567  000107                     	ds	1
   568  000108                     ?___aldiv:
   569                           	opt stack 0
   570  000108                     CANsendMessage@tamp:
   571                           	opt stack 0
   572  000108                     ___aldiv@dividend:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x8
   576  000108                     	ds	1
   577  000109                     CANInitialize@phaseSeg1:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x9
   581  000109                     	ds	1
   582  00010A                     CANInitialize@phaseSeg2:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0xA
   586  00010A                     	ds	1
   587  00010B                     CANInitialize@SJW:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0xB
   591  00010B                     	ds	1
   592  00010C                     CANInitialize@BRP:
   593                           	opt stack 0
   594  00010C                     ___aldiv@divisor:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0xC
   598  00010C                     	ds	1
   599  00010D                     CANInitialize@flags:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0xD
   603  00010D                     	ds	1
   604  00010E                     ??_CANInitialize:
   605                           
   606                           ; 0 bytes @ 0xE
   607  00010E                     	ds	2
   608  000110                     ___aldiv@counter:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x10
   612  000110                     	ds	1
   613  000111                     ___aldiv@sign:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x11
   617  000111                     	ds	1
   618  000112                     CANInitialize@propSeg:
   619                           	opt stack 0
   620  000112                     ___aldiv@quotient:
   621                           	opt stack 0
   622                           
   623                           ; 4 bytes @ 0x12
   624  000112                     	ds	1
   625  000113                     CANInitialize@FilterConfig1:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x13
   629  000113                     	ds	1
   630  000114                     CANInitialize@FilterConfig2:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x14
   634  000114                     	ds	2
   635  000116                     ??_main:
   636                           
   637                           ; 0 bytes @ 0x16
   638  000116                     	ds	2
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           postdec1	equ	0xFE5
   646                           fsr1l	equ	0xFE1
   647                           
   648                           	psect	cstackBANK0
   649  0000A9                     __pcstackBANK0:
   650                           	opt stack 0
   651  0000A9                     ?___lwdiv:
   652                           	opt stack 0
   653  0000A9                     ?i2___wmul:
   654                           	opt stack 0
   655  0000A9                     WriteTimer0@timer0:
   656                           	opt stack 0
   657  0000A9                     ___lwdiv@dividend:
   658                           	opt stack 0
   659  0000A9                     i2___wmul@multiplier:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x0
   663  0000A9                     	ds	2
   664  0000AB                     WriteTimer0@timer:
   665                           	opt stack 0
   666  0000AB                     ___lwdiv@divisor:
   667                           	opt stack 0
   668  0000AB                     i2___wmul@multiplicand:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x2
   672  0000AB                     	ds	2
   673  0000AD                     ___lwdiv@counter:
   674                           	opt stack 0
   675  0000AD                     i2___wmul@product:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x4
   679  0000AD                     	ds	1
   680  0000AE                     ___lwdiv@quotient:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x5
   684  0000AE                     	ds	1
   685  0000AF                     ?i2___awdiv:
   686                           	opt stack 0
   687  0000AF                     i2___awdiv@dividend:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x6
   691  0000AF                     	ds	2
   692  0000B1                     i2___awdiv@divisor:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x8
   696  0000B1                     	ds	2
   697  0000B3                     i2___awdiv@counter:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0xA
   701  0000B3                     	ds	1
   702  0000B4                     i2___awdiv@sign:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0xB
   706  0000B4                     	ds	1
   707  0000B5                     i2___awdiv@quotient:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0xC
   711  0000B5                     	ds	2
   712  0000B7                     ??_ISR_Alta:
   713                           
   714                           ; 0 bytes @ 0xE
   715  0000B7                     	ds	22
   716  0000CD                     ??_CANsendMessage:
   717  0000CD                     ?___wmul:
   718                           	opt stack 0
   719  0000CD                     ?___awdiv:
   720                           	opt stack 0
   721  0000CD                     CANOperationMode@mode:
   722                           	opt stack 0
   723  0000CD                     _CANisTxReady$3173:
   724                           	opt stack 0
   725  0000CD                     ___wmul@multiplier:
   726                           	opt stack 0
   727  0000CD                     ___awdiv@dividend:
   728                           	opt stack 0
   729  0000CD                     CANSetMask@mask:
   730                           	opt stack 0
   731  0000CD                     CANSetFilter@filter:
   732                           	opt stack 0
   733  0000CD                     ___lmul@product:
   734                           	opt stack 0
   735  0000CD                     ___lldiv@quotient:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x24
   739  0000CD                     	ds	2
   740  0000CF                     ___wmul@multiplicand:
   741                           	opt stack 0
   742  0000CF                     ___awdiv@divisor:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x26
   746  0000CF                     	ds	2
   747  0000D1                     CANSetMask@type:
   748                           	opt stack 0
   749  0000D1                     CANSetFilter@type:
   750                           	opt stack 0
   751  0000D1                     ___lldiv@counter:
   752                           	opt stack 0
   753  0000D1                     ___wmul@product:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x28
   757  0000D1                     	ds	1
   758  0000D2                     
   759                           ; 0 bytes @ 0x29
   760  0000D2                     	ds	1
   761  0000D3                     tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           postdec1	equ	0xFE5
   768                           fsr1l	equ	0xFE1
   769                           
   770                           ; 0 bytes @ 0x2A
   771                           
   772                           	psect	cstackCOMRAM
   773  00002A                     __pcstackCOMRAM:
   774                           	opt stack 0
   775  00002A                     _CANisRxReady$3175:
   776                           	opt stack 0
   777  00002A                     ___lbdiv@divisor:
   778                           	opt stack 0
   779  00002A                     CANreceiveMessage@msg:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x0
   783  00002A                     	ds	1
   784  00002B                     ___lbdiv@dividend:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x1
   788  00002B                     	ds	1
   789  00002C                     ??_CANreceiveMessage:
   790  00002C                     ___lbdiv@counter:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x2
   794  00002C                     	ds	1
   795  00002D                     ___lbdiv@quotient:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x3
   799  00002D                     	ds	7
   800  000034                     CANreceiveMessage@error:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0xA
   804  000034                     	ds	1
   805  000035                     CANreceiveMessage@tamp:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0xB
   809  000035                     	ds	1
   810  000036                     ??_ISR_Bassa:
   811                           
   812                           ; 0 bytes @ 0xC
   813  000036                     	ds	18
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           postinc0	equ	0xFEE
   819                           wreg	equ	0xFE8
   820                           postdec1	equ	0xFE5
   821                           fsr1l	equ	0xFE1
   822                           
   823 ;;
   824 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   825 ;;
   826 ;; *************** function _main *****************
   827 ;; Defined at:
   828 ;;		line 290 in file "ABS_Code.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  2  716[None  ] int 
   835 ;; Registers used:
   836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   842 ;;      Params:         0       0       0       0
   843 ;;      Locals:         0       0       0       0
   844 ;;      Temps:          0       0       2       0
   845 ;;      Totals:         0       0       2       0
   846 ;;Total ram usage:        2 bytes
   847 ;; Hardware stack levels required when called:    7
   848 ;; This function calls:
   849 ;;		_CANisRXwarningON
   850 ;;		_CANisTXwarningON
   851 ;;		_CANsendMessage
   852 ;;		___aldiv
   853 ;;		___awdiv
   854 ;;		___lldiv
   855 ;;		___lmul
   856 ;;		_board_initialization
   857 ;;		_remote_frame_handler
   858 ;; This function is called by:
   859 ;;		Startup code after reset
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text0
   864  001D34                     __ptext0:
   865                           	opt stack 0
   866  001D34                     _main:
   867                           	opt stack 24
   868                           
   869                           ;ABS_Code.c: 291: board_initialization();
   870                           
   871                           ;incstack = 0
   872  001D34  EC1E  F015         	call	_board_initialization	;wreg free
   873                           
   874                           ;ABS_Code.c: 292: step = 2;
   875  001D38  0E02               	movlw	2
   876  001D3A  6E27               	movwf	_step,c	;volatile
   877                           
   878                           ;ABS_Code.c: 293: home_position = 28;
   879  001D3C  0E1C               	movlw	28
   880  001D3E  6E26               	movwf	_home_position,c	;volatile
   881  001D40  D000               	goto	l5525
   882  001D42                     l5525:
   883                           
   884                           ;ABS_Code.c: 304: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   885  001D42  ECA3  F016         	call	_CANisTXwarningON	;wreg free
   886  001D46  06E8               	decf	wreg,f,c
   887  001D48  B4D8               	btfsc	status,2,c
   888  001D4A  D005               	goto	l720
   889  001D4C  ECAA  F016         	call	_CANisRXwarningON	;wreg free
   890  001D50  06E8               	decf	wreg,f,c
   891  001D52  A4D8               	btfss	status,2,c
   892  001D54  D004               	goto	l721
   893  001D56                     l720:
   894                           
   895                           ;ABS_Code.c: 305: PORTAbits.RA1 = 1;
   896  001D56  8280               	bsf	3968,1,c	;volatile
   897                           
   898                           ;ABS_Code.c: 306: COMSTATbits.TXWARN = 0;
   899  001D58  9474               	bcf	3956,2,c	;volatile
   900                           
   901                           ;ABS_Code.c: 307: COMSTATbits.RXWARN = 0;
   902  001D5A  9274               	bcf	3956,1,c	;volatile
   903                           
   904                           ;ABS_Code.c: 308: } else {
   905  001D5C  D000               	goto	l721
   906  001D5E                     l721:
   907                           
   908                           ;ABS_Code.c: 310: }
   909                           ;ABS_Code.c: 313: if (distance_reached_flag == 1) {
   910  001D5E  AC48               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
   911  001D60  D019               	goto	l5533
   912                           
   913                           ;ABS_Code.c: 314: CANsendMessage(0b00000001111, remote_frame_array, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   914  001D62  0E0F               	movlw	15
   915  001D64  0101               	movlb	1	; () banked
   916  001D66  6F00               	movwf	CANsendMessage@identifier& (0+255),b
   917  001D68  0E00               	movlw	0
   918  001D6A  6F01               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   919  001D6C  0E00               	movlw	0
   920  001D6E  6F02               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   921  001D70  0E00               	movlw	0
   922  001D72  6F03               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   923  001D74  0ED3               	movlw	low _remote_frame_array
   924  001D76  0101               	movlb	1	; () banked
   925  001D78  6F04               	movwf	CANsendMessage@data& (0+255),b
   926  001D7A  0E00               	movlw	high _remote_frame_array
   927  001D7C  0101               	movlb	1	; () banked
   928  001D7E  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
   929  001D80  0E08               	movlw	8
   930  001D82  0101               	movlb	1	; () banked
   931  001D84  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
   932  001D86  0EFC               	movlw	252
   933  001D88  0101               	movlb	1	; () banked
   934  001D8A  6F07               	movwf	CANsendMessage@flags& (0+255),b
   935  001D8C  EC5E  F006         	call	_CANsendMessage	;wreg free
   936                           
   937                           ;ABS_Code.c: 315: distance_reached_flag = 0;
   938  001D90  9C48               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
   939  001D92  D000               	goto	l5533
   940  001D94                     l5533:
   941                           
   942                           ;ABS_Code.c: 316: }
   943                           ;ABS_Code.c: 319: if ((remote_frame == 1) || (Tx_retry == 1)) {
   944  001D94  B049               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   945  001D96  D002               	goto	l725
   946  001D98  A848               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   947  001D9A  D004               	goto	l5539
   948  001D9C                     l725:
   949                           
   950                           ;ABS_Code.c: 320: remote_frame = 0;
   951  001D9C  9049               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   952                           
   953                           ;ABS_Code.c: 321: remote_frame_handler();
   954  001D9E  EC87  F012         	call	_remote_frame_handler	;wreg free
   955  001DA2  D000               	goto	l5539
   956  001DA4                     l5539:
   957                           
   958                           ;ABS_Code.c: 322: }
   959                           ;ABS_Code.c: 325: if (Analogic_Mode == 0b00000000) {
   960  001DA4  5023               	movf	_Analogic_Mode,w,c	;volatile
   961  001DA6  A4D8               	btfss	status,2,c
   962  001DA8  D019               	goto	l726
   963                           
   964                           ;ABS_Code.c: 326: if (brake_signal_CAN == 0b00000000) {
   965  001DAA  5024               	movf	_brake_signal_CAN,w,c	;volatile
   966  001DAC  A4D8               	btfss	status,2,c
   967  001DAE  D003               	goto	l5545
   968                           
   969                           ;ABS_Code.c: 327: brake_value_inc = 0;
   970  001DB0  0E00               	movlw	0
   971  001DB2  6E25               	movwf	_brake_value_inc,c	;volatile
   972  001DB4  D000               	goto	l5545
   973  001DB6                     l5545:
   974                           
   975                           ;ABS_Code.c: 328: }
   976                           ;ABS_Code.c: 329: if (brake_signal_CAN == 0b00000001) {
   977  001DB6  0424               	decf	_brake_signal_CAN,w,c	;volatile
   978  001DB8  A4D8               	btfss	status,2,c
   979  001DBA  D003               	goto	l5549
   980                           
   981                           ;ABS_Code.c: 330: brake_value_inc = 150;
   982  001DBC  0E96               	movlw	150
   983  001DBE  6E25               	movwf	_brake_value_inc,c	;volatile
   984  001DC0  D000               	goto	l5549
   985  001DC2                     l5549:
   986                           
   987                           ;ABS_Code.c: 331: }
   988                           ;ABS_Code.c: 332: if (brake_signal_CAN == 0b00000010) {
   989  001DC2  0E02               	movlw	2
   990  001DC4  1824               	xorwf	_brake_signal_CAN,w,c	;volatile
   991  001DC6  A4D8               	btfss	status,2,c
   992  001DC8  D003               	goto	l5553
   993                           
   994                           ;ABS_Code.c: 333: brake_value_inc = 200;
   995  001DCA  0EC8               	movlw	200
   996  001DCC  6E25               	movwf	_brake_value_inc,c	;volatile
   997  001DCE  D000               	goto	l5553
   998  001DD0                     l5553:
   999                           
  1000                           ;ABS_Code.c: 334: }
  1001                           ;ABS_Code.c: 335: if (brake_signal_CAN == 0b00000011) {
  1002  001DD0  0E03               	movlw	3
  1003  001DD2  1824               	xorwf	_brake_signal_CAN,w,c	;volatile
  1004  001DD4  A4D8               	btfss	status,2,c
  1005  001DD6  D005               	goto	l5557
  1006                           
  1007                           ;ABS_Code.c: 336: brake_value_inc = 255;
  1008  001DD8  6825               	setf	_brake_value_inc,c	;volatile
  1009                           
  1010                           ;ABS_Code.c: 337: }
  1011                           ;ABS_Code.c: 338: } else {
  1012  001DDA  D003               	goto	l5557
  1013  001DDC                     l726:
  1014                           
  1015                           ;ABS_Code.c: 339: brake_value_inc = brake_signal_CAN;
  1016  001DDC  C024  F025         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
  1017  001DE0  D000               	goto	l5557
  1018  001DE2                     l5557:
  1019                           
  1020                           ;ABS_Code.c: 340: }
  1021                           ;ABS_Code.c: 343: if (((brake_value_inc / 1) + home_position) > 255) {
  1022  001DE2  5026               	movf	_home_position,w,c	;volatile
  1023  001DE4  C025  F116         	movff	_brake_value_inc,??_main	;volatile
  1024  001DE8  0101               	movlb	1	; () banked
  1025  001DEA  6B17               	clrf	(??_main+1)& (0+255),b
  1026  001DEC  0101               	movlb	1	; () banked
  1027  001DEE  2716               	addwf	??_main& (0+255),f,b
  1028  001DF0  0E00               	movlw	0
  1029  001DF2  2317               	addwfc	(??_main+1)& (0+255),f,b
  1030  001DF4  0101               	movlb	1	; () banked
  1031  001DF6  BF17               	btfsc	(??_main+1)& (0+255),7,b
  1032  001DF8  D007               	goto	l5563
  1033  001DFA  0101               	movlb	1	; () banked
  1034  001DFC  0517               	decf	(??_main+1)& (0+255),w,b
  1035  001DFE  A0D8               	btfss	status,0,c
  1036  001E00  D003               	goto	l5563
  1037                           
  1038                           ; BSR set to: 1
  1039                           ;ABS_Code.c: 344: brake_value = 255;
  1040  001E02  6828               	setf	_brake_value,c	;volatile
  1041                           
  1042                           ; BSR set to: 1
  1043                           ;ABS_Code.c: 345: brake_value_degree = 180;
  1044  001E04  0EB4               	movlw	180
  1045  001E06  D011               	goto	L1
  1046  001E08                     l5563:
  1047                           
  1048                           ; BSR set to: 1
  1049                           ;ABS_Code.c: 347: brake_value = (brake_value_inc / 1) + home_position;
  1050  001E08  5025               	movf	_brake_value_inc,w,c	;volatile
  1051  001E0A  2426               	addwf	_home_position,w,c	;volatile
  1052  001E0C  6E28               	movwf	_brake_value,c	;volatile
  1053                           
  1054                           ; BSR set to: 1
  1055                           ;ABS_Code.c: 348: brake_value_degree = (180 * brake_value) / 255;
  1056  001E0E  5028               	movf	_brake_value,w,c	;volatile
  1057  001E10  0DB4               	mullw	180
  1058  001E12  CFF3 F0CD          	movff	prodl,___awdiv@dividend
  1059  001E16  CFF4 F0CE          	movff	prodh,___awdiv@dividend+1
  1060  001E1A  0E00               	movlw	0
  1061  001E1C  0100               	movlb	0	; () banked
  1062  001E1E  6FD0               	movwf	(___awdiv@divisor+1)& (0+255),b
  1063  001E20  69CF               	setf	___awdiv@divisor& (0+255),b
  1064  001E22  ECEB  F013         	call	___awdiv	;wreg free
  1065  001E26  0100               	movlb	0	; () banked
  1066  001E28  51CD               	movf	?___awdiv& (0+255),w,b
  1067  001E2A                     L1:
  1068  001E2A  6E29               	movwf	_brake_value_degree,c	;volatile
  1069  001E2C  D000               	goto	l5567
  1070  001E2E                     l5567:
  1071                           
  1072                           ;ABS_Code.c: 349: }
  1073                           ;ABS_Code.c: 352: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1074  001E2E  B048               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1075  001E30  D002               	goto	l736
  1076  001E32  A448               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1077  001E34  D07B               	goto	l5595
  1078  001E36                     l736:
  1079                           
  1080                           ;ABS_Code.c: 353: if (TMR1_overflow == 1) {
  1081  001E36  A448               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1082  001E38  D00A               	goto	l5575
  1083                           
  1084                           ;ABS_Code.c: 354: wheel_speed_1 = 0;
  1085  001E3A  0E00               	movlw	0
  1086  001E3C  6E09               	movwf	_wheel_speed_1,c	;volatile
  1087  001E3E  0E00               	movlw	0
  1088  001E40  6E0A               	movwf	_wheel_speed_1+1,c	;volatile
  1089  001E42  0E00               	movlw	0
  1090  001E44  6E0B               	movwf	_wheel_speed_1+2,c	;volatile
  1091  001E46  0E00               	movlw	0
  1092  001E48  6E0C               	movwf	_wheel_speed_1+3,c	;volatile
  1093                           
  1094                           ;ABS_Code.c: 355: TMR1_overflow = 0;
  1095  001E4A  9448               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1096                           
  1097                           ;ABS_Code.c: 356: } else {
  1098  001E4C  D02B               	goto	l5577
  1099  001E4E                     l5575:
  1100                           
  1101                           ;ABS_Code.c: 357: wheel_speed_1 = (step * 100000) / gap_time_1;
  1102  001E4E  5027               	movf	_step,w,c	;volatile
  1103  001E50  0101               	movlb	1	; () banked
  1104  001E52  6F00               	movwf	___lmul@multiplier& (0+255),b
  1105  001E54  6B01               	clrf	(___lmul@multiplier+1)& (0+255),b
  1106  001E56  6B02               	clrf	(___lmul@multiplier+2)& (0+255),b
  1107  001E58  6B03               	clrf	(___lmul@multiplier+3)& (0+255),b
  1108  001E5A  0EA0               	movlw	160
  1109  001E5C  0101               	movlb	1	; () banked
  1110  001E5E  6F04               	movwf	___lmul@multiplicand& (0+255),b
  1111  001E60  0E86               	movlw	134
  1112  001E62  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1113  001E64  0E01               	movlw	1
  1114  001E66  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1115  001E68  0E00               	movlw	0
  1116  001E6A  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1117  001E6C  ECAB  F015         	call	___lmul	;wreg free
  1118  001E70  C100  F108         	movff	?___lmul,___aldiv@dividend
  1119  001E74  C101  F109         	movff	?___lmul+1,___aldiv@dividend+1
  1120  001E78  C102  F10A         	movff	?___lmul+2,___aldiv@dividend+2
  1121  001E7C  C103  F10B         	movff	?___lmul+3,___aldiv@dividend+3
  1122  001E80  C01F  F10C         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1123  001E84  C020  F10D         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1124  001E88  0101               	movlb	1	; () banked
  1125  001E8A  6B0E               	clrf	(___aldiv@divisor+2)& (0+255),b
  1126  001E8C  6B0F               	clrf	(___aldiv@divisor+3)& (0+255),b
  1127  001E8E  EC55  F013         	call	___aldiv	;wreg free
  1128  001E92  C108  F009         	movff	?___aldiv,_wheel_speed_1	;volatile
  1129  001E96  C109  F00A         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1130  001E9A  C10A  F00B         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1131  001E9E  C10B  F00C         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1132  001EA2  D000               	goto	l5577
  1133  001EA4                     l5577:
  1134                           
  1135                           ;ABS_Code.c: 358: }
  1136                           ;ABS_Code.c: 360: wheel_speed_average_1 = wheel_speed_average_1 + wheel_speed_1;
  1137  001EA4  5009               	movf	_wheel_speed_1,w,c	;volatile
  1138  001EA6  2411               	addwf	_wheel_speed_average_1,w,c	;volatile
  1139  001EA8  6E11               	movwf	_wheel_speed_average_1,c	;volatile
  1140  001EAA  500A               	movf	_wheel_speed_1+1,w,c	;volatile
  1141  001EAC  2012               	addwfc	_wheel_speed_average_1+1,w,c	;volatile
  1142  001EAE  6E12               	movwf	_wheel_speed_average_1+1,c	;volatile
  1143  001EB0  500B               	movf	_wheel_speed_1+2,w,c	;volatile
  1144  001EB2  2013               	addwfc	_wheel_speed_average_1+2,w,c	;volatile
  1145  001EB4  6E13               	movwf	_wheel_speed_average_1+2,c	;volatile
  1146  001EB6  500C               	movf	_wheel_speed_1+3,w,c	;volatile
  1147  001EB8  2014               	addwfc	_wheel_speed_average_1+3,w,c	;volatile
  1148  001EBA  6E14               	movwf	_wheel_speed_average_1+3,c	;volatile
  1149                           
  1150                           ;ABS_Code.c: 361: int_counter_1_count++;
  1151  001EBC  0100               	movlb	0	; () banked
  1152  001EBE  4B7E               	infsnz	_int_counter_1_count& (0+255),f,b	;volatile
  1153  001EC0  2B7F               	incf	(_int_counter_1_count+1)& (0+255),f,b	;volatile
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;ABS_Code.c: 362: if (int_counter_1_count == 7) {
  1157  001EC2  0E07               	movlw	7
  1158  001EC4  0100               	movlb	0	; () banked
  1159  001EC6  197E               	xorwf	_int_counter_1_count& (0+255),w,b	;volatile
  1160  001EC8  0100               	movlb	0	; () banked
  1161  001ECA  117F               	iorwf	(_int_counter_1_count+1)& (0+255),w,b	;volatile
  1162  001ECC  A4D8               	btfss	status,2,c
  1163  001ECE  D02E               	goto	l5595
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;ABS_Code.c: 363: wheel_speed_1 = wheel_speed_average_1 / 7;
  1167  001ED0  C011  F100         	movff	_wheel_speed_average_1,___lldiv@dividend	;volatile
  1168  001ED4  C012  F101         	movff	_wheel_speed_average_1+1,___lldiv@dividend+1	;volatile
  1169  001ED8  C013  F102         	movff	_wheel_speed_average_1+2,___lldiv@dividend+2	;volatile
  1170  001EDC  C014  F103         	movff	_wheel_speed_average_1+3,___lldiv@dividend+3	;volatile
  1171  001EE0  0E07               	movlw	7
  1172  001EE2  0101               	movlb	1	; () banked
  1173  001EE4  6F04               	movwf	___lldiv@divisor& (0+255),b
  1174  001EE6  0E00               	movlw	0
  1175  001EE8  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  1176  001EEA  0E00               	movlw	0
  1177  001EEC  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  1178  001EEE  0E00               	movlw	0
  1179  001EF0  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  1180  001EF2  ECBB  F014         	call	___lldiv	;wreg free
  1181  001EF6  C100  F009         	movff	?___lldiv,_wheel_speed_1	;volatile
  1182  001EFA  C101  F00A         	movff	?___lldiv+1,_wheel_speed_1+1	;volatile
  1183  001EFE  C102  F00B         	movff	?___lldiv+2,_wheel_speed_1+2	;volatile
  1184  001F02  C103  F00C         	movff	?___lldiv+3,_wheel_speed_1+3	;volatile
  1185                           
  1186                           ;ABS_Code.c: 364: speed_array[3] = wheel_speed_1 >> 8;
  1187  001F06  C00A  F09C         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1188                           
  1189                           ;ABS_Code.c: 365: speed_array[2] = wheel_speed_1;
  1190  001F0A  C009  F09B         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1191                           
  1192                           ;ABS_Code.c: 366: wheel_speed_average_1 = 0;
  1193  001F0E  0E00               	movlw	0
  1194  001F10  6E11               	movwf	_wheel_speed_average_1,c	;volatile
  1195  001F12  0E00               	movlw	0
  1196  001F14  6E12               	movwf	_wheel_speed_average_1+1,c	;volatile
  1197  001F16  0E00               	movlw	0
  1198  001F18  6E13               	movwf	_wheel_speed_average_1+2,c	;volatile
  1199  001F1A  0E00               	movlw	0
  1200  001F1C  6E14               	movwf	_wheel_speed_average_1+3,c	;volatile
  1201                           
  1202                           ;ABS_Code.c: 367: int_counter_1_count = 0;
  1203  001F1E  0E00               	movlw	0
  1204  001F20  0100               	movlb	0	; () banked
  1205  001F22  6F7F               	movwf	(_int_counter_1_count+1)& (0+255),b	;volatile
  1206  001F24  0E00               	movlw	0
  1207  001F26  6F7E               	movwf	_int_counter_1_count& (0+255),b	;volatile
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;ABS_Code.c: 368: ENC1_measure = 0;
  1211  001F28  9048               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1212                           
  1213                           ; BSR set to: 0
  1214  001F2A  D000               	goto	l5595
  1215  001F2C                     l5595:
  1216                           
  1217                           ;ABS_Code.c: 369: }
  1218                           ;ABS_Code.c: 370: }
  1219                           ;ABS_Code.c: 373: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1220  001F2C  B248               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1221  001F2E  D002               	goto	l742
  1222  001F30  A648               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1223  001F32  D707               	goto	l5525
  1224  001F34                     l742:
  1225                           
  1226                           ;ABS_Code.c: 374: if (TMR3_overflow == 1) {
  1227  001F34  A648               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1228  001F36  D00A               	goto	l5603
  1229                           
  1230                           ;ABS_Code.c: 375: wheel_speed_2 = 0;
  1231  001F38  0E00               	movlw	0
  1232  001F3A  6E0D               	movwf	_wheel_speed_2,c	;volatile
  1233  001F3C  0E00               	movlw	0
  1234  001F3E  6E0E               	movwf	_wheel_speed_2+1,c	;volatile
  1235  001F40  0E00               	movlw	0
  1236  001F42  6E0F               	movwf	_wheel_speed_2+2,c	;volatile
  1237  001F44  0E00               	movlw	0
  1238  001F46  6E10               	movwf	_wheel_speed_2+3,c	;volatile
  1239                           
  1240                           ;ABS_Code.c: 376: TMR3_overflow = 0;
  1241  001F48  9648               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1242                           
  1243                           ;ABS_Code.c: 377: } else {
  1244  001F4A  D02B               	goto	l5605
  1245  001F4C                     l5603:
  1246                           
  1247                           ;ABS_Code.c: 378: wheel_speed_2 = (step * 100000) / gap_time_2;
  1248  001F4C  5027               	movf	_step,w,c	;volatile
  1249  001F4E  0101               	movlb	1	; () banked
  1250  001F50  6F00               	movwf	___lmul@multiplier& (0+255),b
  1251  001F52  6B01               	clrf	(___lmul@multiplier+1)& (0+255),b
  1252  001F54  6B02               	clrf	(___lmul@multiplier+2)& (0+255),b
  1253  001F56  6B03               	clrf	(___lmul@multiplier+3)& (0+255),b
  1254  001F58  0EA0               	movlw	160
  1255  001F5A  0101               	movlb	1	; () banked
  1256  001F5C  6F04               	movwf	___lmul@multiplicand& (0+255),b
  1257  001F5E  0E86               	movlw	134
  1258  001F60  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1259  001F62  0E01               	movlw	1
  1260  001F64  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1261  001F66  0E00               	movlw	0
  1262  001F68  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1263  001F6A  ECAB  F015         	call	___lmul	;wreg free
  1264  001F6E  C100  F108         	movff	?___lmul,___aldiv@dividend
  1265  001F72  C101  F109         	movff	?___lmul+1,___aldiv@dividend+1
  1266  001F76  C102  F10A         	movff	?___lmul+2,___aldiv@dividend+2
  1267  001F7A  C103  F10B         	movff	?___lmul+3,___aldiv@dividend+3
  1268  001F7E  C021  F10C         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1269  001F82  C022  F10D         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1270  001F86  0101               	movlb	1	; () banked
  1271  001F88  6B0E               	clrf	(___aldiv@divisor+2)& (0+255),b
  1272  001F8A  6B0F               	clrf	(___aldiv@divisor+3)& (0+255),b
  1273  001F8C  EC55  F013         	call	___aldiv	;wreg free
  1274  001F90  C108  F00D         	movff	?___aldiv,_wheel_speed_2	;volatile
  1275  001F94  C109  F00E         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1276  001F98  C10A  F00F         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1277  001F9C  C10B  F010         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1278  001FA0  D000               	goto	l5605
  1279  001FA2                     l5605:
  1280                           
  1281                           ;ABS_Code.c: 379: }
  1282                           ;ABS_Code.c: 381: wheel_speed_average_2 = wheel_speed_average_2 + wheel_speed_2;
  1283  001FA2  500D               	movf	_wheel_speed_2,w,c	;volatile
  1284  001FA4  0100               	movlb	0	; () banked
  1285  001FA6  2578               	addwf	_wheel_speed_average_2& (0+255),w,b	;volatile
  1286  001FA8  0100               	movlb	0	; () banked
  1287  001FAA  6F78               	movwf	_wheel_speed_average_2& (0+255),b	;volatile
  1288  001FAC  500E               	movf	_wheel_speed_2+1,w,c	;volatile
  1289  001FAE  0100               	movlb	0	; () banked
  1290  001FB0  2179               	addwfc	(_wheel_speed_average_2+1)& (0+255),w,b	;volatile
  1291  001FB2  0100               	movlb	0	; () banked
  1292  001FB4  6F79               	movwf	(_wheel_speed_average_2+1)& (0+255),b	;volatile
  1293  001FB6  500F               	movf	_wheel_speed_2+2,w,c	;volatile
  1294  001FB8  0100               	movlb	0	; () banked
  1295  001FBA  217A               	addwfc	(_wheel_speed_average_2+2)& (0+255),w,b	;volatile
  1296  001FBC  0100               	movlb	0	; () banked
  1297  001FBE  6F7A               	movwf	(_wheel_speed_average_2+2)& (0+255),b	;volatile
  1298  001FC0  5010               	movf	_wheel_speed_2+3,w,c	;volatile
  1299  001FC2  0100               	movlb	0	; () banked
  1300  001FC4  217B               	addwfc	(_wheel_speed_average_2+3)& (0+255),w,b	;volatile
  1301  001FC6  0100               	movlb	0	; () banked
  1302  001FC8  6F7B               	movwf	(_wheel_speed_average_2+3)& (0+255),b	;volatile
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;ABS_Code.c: 382: int_counter_2_count++;
  1306  001FCA  0100               	movlb	0	; () banked
  1307  001FCC  4B80               	infsnz	_int_counter_2_count& (0+255),f,b	;volatile
  1308  001FCE  2B81               	incf	(_int_counter_2_count+1)& (0+255),f,b	;volatile
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;ABS_Code.c: 383: if (int_counter_2_count == 7) {
  1312  001FD0  0E07               	movlw	7
  1313  001FD2  0100               	movlb	0	; () banked
  1314  001FD4  1980               	xorwf	_int_counter_2_count& (0+255),w,b	;volatile
  1315  001FD6  0100               	movlb	0	; () banked
  1316  001FD8  1181               	iorwf	(_int_counter_2_count+1)& (0+255),w,b	;volatile
  1317  001FDA  A4D8               	btfss	status,2,c
  1318  001FDC  D6B2               	goto	l5525
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;ABS_Code.c: 384: wheel_speed_2 = wheel_speed_average_2 / 7;
  1322  001FDE  C078  F100         	movff	_wheel_speed_average_2,___lldiv@dividend	;volatile
  1323  001FE2  C079  F101         	movff	_wheel_speed_average_2+1,___lldiv@dividend+1	;volatile
  1324  001FE6  C07A  F102         	movff	_wheel_speed_average_2+2,___lldiv@dividend+2	;volatile
  1325  001FEA  C07B  F103         	movff	_wheel_speed_average_2+3,___lldiv@dividend+3	;volatile
  1326  001FEE  0E07               	movlw	7
  1327  001FF0  0101               	movlb	1	; () banked
  1328  001FF2  6F04               	movwf	___lldiv@divisor& (0+255),b
  1329  001FF4  0E00               	movlw	0
  1330  001FF6  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  1331  001FF8  0E00               	movlw	0
  1332  001FFA  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  1333  001FFC  0E00               	movlw	0
  1334  001FFE  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  1335  002000  ECBB  F014         	call	___lldiv	;wreg free
  1336  002004  C100  F00D         	movff	?___lldiv,_wheel_speed_2	;volatile
  1337  002008  C101  F00E         	movff	?___lldiv+1,_wheel_speed_2+1	;volatile
  1338  00200C  C102  F00F         	movff	?___lldiv+2,_wheel_speed_2+2	;volatile
  1339  002010  C103  F010         	movff	?___lldiv+3,_wheel_speed_2+3	;volatile
  1340                           
  1341                           ;ABS_Code.c: 385: speed_array[1] = wheel_speed_2 >> 8;
  1342  002014  C00E  F09A         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1343                           
  1344                           ;ABS_Code.c: 386: speed_array[0] = wheel_speed_2;
  1345  002018  C00D  F099         	movff	_wheel_speed_2,_speed_array	;volatile
  1346                           
  1347                           ;ABS_Code.c: 387: wheel_speed_average_2 = 0;
  1348  00201C  0E00               	movlw	0
  1349  00201E  0100               	movlb	0	; () banked
  1350  002020  6F78               	movwf	_wheel_speed_average_2& (0+255),b	;volatile
  1351  002022  0E00               	movlw	0
  1352  002024  6F79               	movwf	(_wheel_speed_average_2+1)& (0+255),b	;volatile
  1353  002026  0E00               	movlw	0
  1354  002028  6F7A               	movwf	(_wheel_speed_average_2+2)& (0+255),b	;volatile
  1355  00202A  0E00               	movlw	0
  1356  00202C  6F7B               	movwf	(_wheel_speed_average_2+3)& (0+255),b	;volatile
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;ABS_Code.c: 388: int_counter_2_count = 0;
  1360  00202E  0E00               	movlw	0
  1361  002030  0100               	movlb	0	; () banked
  1362  002032  6F81               	movwf	(_int_counter_2_count+1)& (0+255),b	;volatile
  1363  002034  0E00               	movlw	0
  1364  002036  6F80               	movwf	_int_counter_2_count& (0+255),b	;volatile
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;ABS_Code.c: 389: ENC2_measure = 0;
  1368  002038  9248               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1369                           
  1370                           ; BSR set to: 0
  1371                           
  1372                           ; BSR set to: 0
  1373                           
  1374                           ; BSR set to: 0
  1375  00203A  D683               	goto	l5525
  1376                           
  1377                           ; BSR set to: 0
  1378                           
  1379                           ; BSR set to: 0
  1380  00203C  EFC7  F000         	goto	start
  1381  002040                     __end_of_main:
  1382                           	opt stack 0
  1383                           tblptru	equ	0xFF8
  1384                           tblptrh	equ	0xFF7
  1385                           tblptrl	equ	0xFF6
  1386                           tablat	equ	0xFF5
  1387                           prodh	equ	0xFF4
  1388                           prodl	equ	0xFF3
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           postdec1	equ	0xFE5
  1392                           fsr1l	equ	0xFE1
  1393                           status	equ	0xFD8
  1394                           
  1395 ;; *************** function _remote_frame_handler *****************
  1396 ;; Defined at:
  1397 ;;		line 400 in file "ABS_Code.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;		None               void
  1404 ;; Registers used:
  1405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1411 ;;      Params:         0       0       0       0
  1412 ;;      Locals:         0       0       0       0
  1413 ;;      Temps:          0       0       0       0
  1414 ;;      Totals:         0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    5
  1418 ;; This function calls:
  1419 ;;		_CANisTxReady
  1420 ;;		_CANsendMessage
  1421 ;;		___wmul
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text1
  1428  00250E                     __ptext1:
  1429                           	opt stack 0
  1430  00250E                     _remote_frame_handler:
  1431                           	opt stack 25
  1432                           
  1433                           ;ABS_Code.c: 401: if (CANisTxReady() == 1) {
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;incstack = 0
  1437  00250E  EC6F  F016         	call	_CANisTxReady	;wreg free
  1438  002512  06E8               	decf	wreg,f,c
  1439  002514  A4D8               	btfss	status,2,c
  1440  002516  D0C6               	goto	l751
  1441                           
  1442                           ;ABS_Code.c: 402: if (remote_frame_id == 0b00000000010) {
  1443  002518  0E02               	movlw	2
  1444  00251A  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1445  00251C  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1446  00251E  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1447  002520  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1448  002522  A4D8               	btfss	status,2,c
  1449  002524  D01C               	goto	l5199
  1450                           
  1451                           ;ABS_Code.c: 403: status_array[0] = 0x01;
  1452  002526  0E01               	movlw	1
  1453  002528  0100               	movlb	0	; () banked
  1454  00252A  6FA1               	movwf	_status_array& (0+255),b	;volatile
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;ABS_Code.c: 404: CANsendMessage(0b00000000010, status_array, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1458  00252C  0E02               	movlw	2
  1459  00252E  0101               	movlb	1	; () banked
  1460  002530  6F00               	movwf	CANsendMessage@identifier& (0+255),b
  1461  002532  0E00               	movlw	0
  1462  002534  6F01               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1463  002536  0E00               	movlw	0
  1464  002538  6F02               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1465  00253A  0E00               	movlw	0
  1466  00253C  6F03               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1467  00253E  0EA1               	movlw	low _status_array
  1468  002540  0101               	movlb	1	; () banked
  1469  002542  6F04               	movwf	CANsendMessage@data& (0+255),b
  1470  002544  0E00               	movlw	high _status_array
  1471  002546  0101               	movlb	1	; () banked
  1472  002548  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1473  00254A  0E08               	movlw	8
  1474  00254C  0101               	movlb	1	; () banked
  1475  00254E  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1476  002550  0EBC               	movlw	188
  1477  002552  0101               	movlb	1	; () banked
  1478  002554  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1479  002556  EC5E  F006         	call	_CANsendMessage	;wreg free
  1480                           
  1481                           ;ABS_Code.c: 405: PORTCbits.RC1 = ~PORTCbits.RC1;
  1482  00255A  7282               	btg	3970,1,c	;volatile
  1483  00255C  D000               	goto	l5199
  1484  00255E                     l5199:
  1485                           
  1486                           ;ABS_Code.c: 406: }
  1487                           ;ABS_Code.c: 408: if (remote_frame_id == 0b00000001000) {
  1488  00255E  0E08               	movlw	8
  1489  002560  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1490  002562  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1491  002564  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1492  002566  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1493  002568  A4D8               	btfss	status,2,c
  1494  00256A  D034               	goto	l5207
  1495                           
  1496                           ;ABS_Code.c: 409: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1497  00256C  C001  F100         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1498  002570  C002  F101         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1499  002574  C003  F102         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1500  002578  C004  F103         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1501  00257C  0E99               	movlw	low _speed_array
  1502  00257E  0101               	movlb	1	; () banked
  1503  002580  6F04               	movwf	CANsendMessage@data& (0+255),b
  1504  002582  0E00               	movlw	high _speed_array
  1505  002584  0101               	movlb	1	; () banked
  1506  002586  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1507  002588  0E08               	movlw	8
  1508  00258A  0101               	movlb	1	; () banked
  1509  00258C  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1510  00258E  0EBC               	movlw	188
  1511  002590  0101               	movlb	1	; () banked
  1512  002592  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1513  002594  EC5E  F006         	call	_CANsendMessage	;wreg free
  1514                           
  1515                           ;ABS_Code.c: 410: while (CANisTxReady() != 1);
  1516  002598  D000               	goto	l5203
  1517  00259A                     l5203:
  1518  00259A  EC6F  F016         	call	_CANisTxReady	;wreg free
  1519  00259E  06E8               	decf	wreg,f,c
  1520  0025A0  A4D8               	btfss	status,2,c
  1521  0025A2  D7FB               	goto	l5203
  1522                           
  1523                           ;ABS_Code.c: 411: CANsendMessage(0xAA, speed_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_T
      +                          X_FRAME & CAN_TX_PRIORITY_0);
  1524  0025A4  0EAA               	movlw	170
  1525  0025A6  0101               	movlb	1	; () banked
  1526  0025A8  6F00               	movwf	CANsendMessage@identifier& (0+255),b
  1527  0025AA  0E00               	movlw	0
  1528  0025AC  6F01               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1529  0025AE  0E00               	movlw	0
  1530  0025B0  6F02               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1531  0025B2  0E00               	movlw	0
  1532  0025B4  6F03               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1533  0025B6  0E99               	movlw	low _speed_array
  1534  0025B8  0101               	movlb	1	; () banked
  1535  0025BA  6F04               	movwf	CANsendMessage@data& (0+255),b
  1536  0025BC  0E00               	movlw	high _speed_array
  1537  0025BE  0101               	movlb	1	; () banked
  1538  0025C0  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1539  0025C2  0E08               	movlw	8
  1540  0025C4  0101               	movlb	1	; () banked
  1541  0025C6  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1542  0025C8  0EBC               	movlw	188
  1543  0025CA  0101               	movlb	1	; () banked
  1544  0025CC  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1545  0025CE  EC5E  F006         	call	_CANsendMessage	;wreg free
  1546  0025D2  D000               	goto	l5207
  1547  0025D4                     l5207:
  1548                           
  1549                           ;ABS_Code.c: 412: }
  1550                           ;ABS_Code.c: 413: if (remote_frame_id == 0b00000001010) {
  1551  0025D4  0E0A               	movlw	10
  1552  0025D6  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1553  0025D8  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1554  0025DA  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1555  0025DC  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1556  0025DE  A4D8               	btfss	status,2,c
  1557  0025E0  D014               	goto	l5213
  1558                           
  1559                           ;ABS_Code.c: 414: int_counter_1 = 0;
  1560  0025E2  0E00               	movlw	0
  1561  0025E4  0100               	movlb	0	; () banked
  1562  0025E6  6F6C               	movwf	_int_counter_1& (0+255),b	;volatile
  1563  0025E8  0E00               	movlw	0
  1564  0025EA  6F6D               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1565  0025EC  0E00               	movlw	0
  1566  0025EE  6F6E               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1567  0025F0  0E00               	movlw	0
  1568  0025F2  6F6F               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1569                           
  1570                           ;ABS_Code.c: 415: int_counter_2 = 0;
  1571  0025F4  0E00               	movlw	0
  1572  0025F6  0100               	movlb	0	; () banked
  1573  0025F8  6F70               	movwf	_int_counter_2& (0+255),b	;volatile
  1574  0025FA  0E00               	movlw	0
  1575  0025FC  6F71               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1576  0025FE  0E00               	movlw	0
  1577  002600  6F72               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1578  002602  0E00               	movlw	0
  1579  002604  6F73               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;ABS_Code.c: 416: count_flag = 1;
  1583  002606  8A48               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1584  002608  D000               	goto	l5213
  1585  00260A                     l5213:
  1586                           
  1587                           ;ABS_Code.c: 417: }
  1588                           ;ABS_Code.c: 418: if (remote_frame_id == 0b00000001001) {
  1589  00260A  0E09               	movlw	9
  1590  00260C  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1591  00260E  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1592  002610  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1593  002612  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1594  002614  A4D8               	btfss	status,2,c
  1595  002616  D03E               	goto	l5229
  1596                           
  1597                           ;ABS_Code.c: 419: distance_1 = step * (int_counter_1);
  1598  002618  C027  F0CD         	movff	_step,___wmul@multiplier	;volatile
  1599  00261C  0100               	movlb	0	; () banked
  1600  00261E  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1601  002620  C06C  F0CF         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1602  002624  C06D  F0D0         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1603  002628  EC37  F016         	call	___wmul	;wreg free
  1604  00262C  C0CD  F015         	movff	?___wmul,_distance_1	;volatile
  1605  002630  C0CE  F016         	movff	?___wmul+1,_distance_1+1	;volatile
  1606                           
  1607                           ;ABS_Code.c: 420: distance_2 = step * (int_counter_2);
  1608  002634  C027  F0CD         	movff	_step,___wmul@multiplier	;volatile
  1609  002638  0100               	movlb	0	; () banked
  1610  00263A  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1611  00263C  C070  F0CF         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1612  002640  C071  F0D0         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1613  002644  EC37  F016         	call	___wmul	;wreg free
  1614  002648  C0CD  F017         	movff	?___wmul,_distance_2	;volatile
  1615  00264C  C0CE  F018         	movff	?___wmul+1,_distance_2+1	;volatile
  1616                           
  1617                           ;ABS_Code.c: 421: count_flag = 0;
  1618  002650  9A48               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1619                           
  1620                           ;ABS_Code.c: 422: distance_array[0] = distance_1;
  1621  002652  C015  F091         	movff	_distance_1,_distance_array	;volatile
  1622                           
  1623                           ;ABS_Code.c: 423: distance_array[1] = distance_1 >> 8;
  1624  002656  5016               	movf	_distance_1+1,w,c	;volatile
  1625  002658  0100               	movlb	0	; () banked
  1626  00265A  6F92               	movwf	(_distance_array+1)& (0+255),b	;volatile
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;ABS_Code.c: 424: distance_array[2] = distance_2;
  1630  00265C  C017  F093         	movff	_distance_2,_distance_array+2	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;ABS_Code.c: 425: distance_array[3] = distance_2 >> 8;
  1634  002660  5018               	movf	_distance_2+1,w,c	;volatile
  1635  002662  0100               	movlb	0	; () banked
  1636  002664  6F94               	movwf	(_distance_array+3)& (0+255),b	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;ABS_Code.c: 426: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1640  002666  C001  F100         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1641  00266A  C002  F101         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1642  00266E  C003  F102         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1643  002672  C004  F103         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1644  002676  0E91               	movlw	low _distance_array
  1645  002678  0101               	movlb	1	; () banked
  1646  00267A  6F04               	movwf	CANsendMessage@data& (0+255),b
  1647  00267C  0E00               	movlw	high _distance_array
  1648  00267E  0101               	movlb	1	; () banked
  1649  002680  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1650  002682  0E08               	movlw	8
  1651  002684  0101               	movlb	1	; () banked
  1652  002686  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1653  002688  0EBC               	movlw	188
  1654  00268A  0101               	movlb	1	; () banked
  1655  00268C  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1656  00268E  EC5E  F006         	call	_CANsendMessage	;wreg free
  1657  002692  D000               	goto	l5229
  1658  002694                     l5229:
  1659                           
  1660                           ;ABS_Code.c: 427: }
  1661                           ;ABS_Code.c: 429: if (TXB0CONbits.TXABT == 1 || TXB1CONbits.TXABT == 1) {
  1662  002694  010F               	movlb	15	; () banked
  1663  002696  BD40               	btfsc	64,6,b	;volatile
  1664  002698  D005               	goto	l751
  1665                           
  1666                           ; BSR set to: 15
  1667  00269A  010F               	movlb	15	; () banked
  1668  00269C  BD30               	btfsc	48,6,b	;volatile
  1669  00269E  D002               	goto	l751
  1670                           
  1671                           ; BSR set to: 15
  1672                           ;ABS_Code.c: 432: Tx_retry = 0;
  1673                           
  1674                           ;ABS_Code.c: 431: } else {
  1675                           
  1676                           ; BSR set to: 15
  1677                           ;ABS_Code.c: 430: Tx_retry = 1;
  1678  0026A0  9848               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1679                           
  1680                           ; BSR set to: 15
  1681                           ;ABS_Code.c: 433: }
  1682                           ;ABS_Code.c: 434: } else {
  1683  0026A2  D002               	goto	l764
  1684  0026A4                     l751:
  1685                           
  1686                           ;ABS_Code.c: 435: Tx_retry = 1;
  1687  0026A4  8848               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1688  0026A6  D000               	goto	l764
  1689  0026A8                     l764:
  1690  0026A8  0012               	return		;funcret
  1691  0026AA                     __end_of_remote_frame_handler:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           postdec1	equ	0xFE5
  1702                           fsr1l	equ	0xFE1
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function ___wmul *****************
  1706 ;; Defined at:
  1707 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  multiplier      2   36[BANK0 ] unsigned int 
  1710 ;;  multiplicand    2   38[BANK0 ] unsigned int 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  product         2   40[BANK0 ] unsigned int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2   36[BANK0 ] unsigned int 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, prodl, prodh
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1722 ;;      Params:         0       4       0       0
  1723 ;;      Locals:         0       2       0       0
  1724 ;;      Temps:          0       0       0       0
  1725 ;;      Totals:         0       6       0       0
  1726 ;;Total ram usage:        6 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    4
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_remote_frame_handler
  1733 ;;		_delay_ms
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text2
  1738  002C6E                     __ptext2:
  1739                           	opt stack 0
  1740  002C6E                     ___wmul:
  1741                           	opt stack 25
  1742                           
  1743                           ;incstack = 0
  1744  002C6E  0100               	movlb	0	; () banked
  1745  002C70  51CD               	movf	___wmul@multiplier& (0+255),w,b
  1746  002C72  0100               	movlb	0	; () banked
  1747  002C74  03CF               	mulwf	___wmul@multiplicand& (0+255),b
  1748  002C76  CFF3 F0D1          	movff	prodl,___wmul@product
  1749  002C7A  CFF4 F0D2          	movff	prodh,___wmul@product+1
  1750  002C7E  0100               	movlb	0	; () banked
  1751  002C80  51CD               	movf	___wmul@multiplier& (0+255),w,b
  1752  002C82  0100               	movlb	0	; () banked
  1753  002C84  03D0               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1754  002C86  50F3               	movf	prodl,w,c
  1755  002C88  0100               	movlb	0	; () banked
  1756  002C8A  27D2               	addwf	(___wmul@product+1)& (0+255),f,b
  1757  002C8C  0100               	movlb	0	; () banked
  1758  002C8E  51CE               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1759  002C90  0100               	movlb	0	; () banked
  1760  002C92  03CF               	mulwf	___wmul@multiplicand& (0+255),b
  1761  002C94  50F3               	movf	prodl,w,c
  1762  002C96  0100               	movlb	0	; () banked
  1763  002C98  27D2               	addwf	(___wmul@product+1)& (0+255),f,b
  1764                           
  1765                           ; BSR set to: 0
  1766  002C9A  C0D1  F0CD         	movff	___wmul@product,?___wmul
  1767  002C9E  C0D2  F0CE         	movff	___wmul@product+1,?___wmul+1
  1768  002CA2  D000               	goto	l780
  1769  002CA4                     l780:
  1770                           
  1771                           ; BSR set to: 0
  1772  002CA4  0012               	return		;funcret
  1773  002CA6                     __end_of___wmul:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           postinc0	equ	0xFEE
  1782                           wreg	equ	0xFE8
  1783                           postdec1	equ	0xFE5
  1784                           fsr1l	equ	0xFE1
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _CANsendMessage *****************
  1788 ;; Defined at:
  1789 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  identifier      4    0[BANK1 ] unsigned long 
  1792 ;;  data            2    4[BANK1 ] PTR unsigned char 
  1793 ;;		 -> distance_array(8), status_array(8), speed_array(8), remote_frame_array(8), 
  1794 ;;  dataLength      1    6[BANK1 ] unsigned char 
  1795 ;;  flags           1    7[BANK1 ] enum E16907
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  tamp            4    8[BANK1 ] unsigned long 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;		None               void
  1800 ;; Registers used:
  1801 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1807 ;;      Params:         0       0       8       0
  1808 ;;      Locals:         0       0       4       0
  1809 ;;      Temps:          0       4       0       0
  1810 ;;      Totals:         0       4      12       0
  1811 ;;Total ram usage:       16 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    4
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;;		_remote_frame_handler
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text3
  1823  000CBC                     __ptext3:
  1824                           	opt stack 0
  1825  000CBC                     _CANsendMessage:
  1826                           	opt stack 25
  1827                           
  1828                           ;inc\CANlib.h: 296: unsigned long tamp;
  1829                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;incstack = 0
  1833  000CBC  010F               	movlb	15	; () banked
  1834  000CBE  B740               	btfsc	64,3,b	;volatile
  1835  000CC0  D142               	goto	l373
  1836                           
  1837                           ; BSR set to: 15
  1838                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1839  000CC2  C106  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1840                           
  1841                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1842  000CC6  0101               	movlb	1	; () banked
  1843  000CC8  AD07               	btfss	CANsendMessage@flags& (0+255),6,b
  1844  000CCA  D003               	goto	l374
  1845                           
  1846                           ; BSR set to: 1
  1847                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1848  000CCC  010F               	movlb	15	; () banked
  1849  000CCE  8D45               	bsf	69,6,b	;volatile
  1850  000CD0  D002               	goto	l375
  1851  000CD2                     l374:
  1852                           
  1853                           ; BSR set to: 1
  1854                           ;inc\CANlib.h: 302: else
  1855                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1856  000CD2  010F               	movlb	15	; () banked
  1857  000CD4  9D45               	bcf	69,6,b	;volatile
  1858  000CD6                     l375:
  1859                           
  1860                           ; BSR set to: 15
  1861                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1862  000CD6  0101               	movlb	1	; () banked
  1863  000CD8  A707               	btfss	CANsendMessage@flags& (0+255),3,b
  1864  000CDA  D07A               	goto	l376
  1865                           
  1866                           ; BSR set to: 1
  1867                           ;inc\CANlib.h: 306: {
  1868                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1869  000CDC  0101               	movlb	1	; () banked
  1870  000CDE  5100               	movf	CANsendMessage@identifier& (0+255),w,b
  1871  000CE0  0101               	movlb	1	; () banked
  1872  000CE2  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  1873  000CE4  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1874  000CE6  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1875  000CE8  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1876                           
  1877                           ; BSR set to: 1
  1878                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1879  000CEA  C108  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1880                           
  1881                           ; BSR set to: 1
  1882                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1883  000CEE  0E00               	movlw	0
  1884  000CF0  0101               	movlb	1	; () banked
  1885  000CF2  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  1886  000CF4  0101               	movlb	1	; () banked
  1887  000CF6  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  1888  000CF8  0EFF               	movlw	255
  1889  000CFA  0101               	movlb	1	; () banked
  1890  000CFC  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1891  000CFE  0101               	movlb	1	; () banked
  1892  000D00  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1893  000D02  0E00               	movlw	0
  1894  000D04  0101               	movlb	1	; () banked
  1895  000D06  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1896  000D08  0101               	movlb	1	; () banked
  1897  000D0A  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1898  000D0C  0E00               	movlw	0
  1899  000D0E  0101               	movlb	1	; () banked
  1900  000D10  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1901  000D12  0101               	movlb	1	; () banked
  1902  000D14  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1903                           
  1904                           ; BSR set to: 1
  1905                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1906  000D16  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  1907  000D1A  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1908  000D1E  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1909  000D22  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1910  000D26  C0CE  F0CD         	movff	??_CANsendMessage+1,??_CANsendMessage
  1911  000D2A  C0CF  F0CE         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1912  000D2E  C0D0  F0CF         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1913  000D32  0100               	movlb	0	; () banked
  1914  000D34  6BD0               	clrf	(??_CANsendMessage+3)& (0+255),b
  1915  000D36  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  1916  000D3A  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1917  000D3E  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1918  000D42  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1922  000D46  C108  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1926  000D4A  0E00               	movlw	0
  1927  000D4C  010F               	movlb	15	; () banked
  1928  000D4E  6F42               	movwf	66,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1932  000D50  010F               	movlb	15	; () banked
  1933  000D52  8742               	bsf	66,3,b	;volatile
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1937  000D54  0101               	movlb	1	; () banked
  1938  000D56  A102               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1939  000D58  D002               	goto	l377
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1943  000D5A  010F               	movlb	15	; () banked
  1944  000D5C  8142               	bsf	66,0,b	;volatile
  1945  000D5E                     l377:
  1946                           
  1947                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1948  000D5E  0101               	movlb	1	; () banked
  1949  000D60  A302               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1950  000D62  D002               	goto	l378
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1954  000D64  010F               	movlb	15	; () banked
  1955  000D66  8342               	bsf	66,1,b	;volatile
  1956  000D68                     l378:
  1957                           
  1958                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1959  000D68  0101               	movlb	1	; () banked
  1960  000D6A  A502               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1961  000D6C  D002               	goto	l379
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1965  000D6E  010F               	movlb	15	; () banked
  1966  000D70  8B42               	bsf	66,5,b	;volatile
  1967  000D72                     l379:
  1968                           
  1969                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1970  000D72  0101               	movlb	1	; () banked
  1971  000D74  A702               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1972  000D76  D002               	goto	l380
  1973                           
  1974                           ; BSR set to: 1
  1975                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1976  000D78  010F               	movlb	15	; () banked
  1977  000D7A  8D42               	bsf	66,6,b	;volatile
  1978  000D7C                     l380:
  1979                           
  1980                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1981  000D7C  0101               	movlb	1	; () banked
  1982  000D7E  A902               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1983  000D80  D003               	goto	l4877
  1984                           
  1985                           ; BSR set to: 1
  1986                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1987  000D82  010F               	movlb	15	; () banked
  1988  000D84  8F42               	bsf	66,7,b	;volatile
  1989  000D86  D000               	goto	l4877
  1990  000D88                     l4877:
  1991                           
  1992                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1993  000D88  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  1994  000D8C  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1995  000D90  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1996  000D94  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1997  000D98  0E16               	movlw	22
  1998  000D9A  D006               	goto	u6240
  1999  000D9C                     u6245:
  2000  000D9C  0100               	movlb	0	; () banked
  2001  000D9E  90D8               	bcf	status,0,c
  2002  000DA0  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2003  000DA2  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2004  000DA4  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2005  000DA6  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2006  000DA8                     u6240:
  2007  000DA8  2EE8               	decfsz	wreg,f,c
  2008  000DAA  D7F8               	goto	u6245
  2009  000DAC  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2010  000DB0  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2011  000DB4  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2012  000DB8  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  2016  000DBC  0101               	movlb	1	; () banked
  2017  000DBE  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2018  000DC0  0101               	movlb	1	; () banked
  2019  000DC2  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2020  000DC4  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2021  000DC6  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2022  000DC8  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2023                           
  2024                           ; BSR set to: 1
  2025                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  2026  000DCA  C108  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2027                           
  2028                           ;inc\CANlib.h: 332: }
  2029  000DCE  D05A               	goto	l4897
  2030  000DD0                     l376:
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;inc\CANlib.h: 334: else
  2034                           ;inc\CANlib.h: 336: {
  2035                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  2036  000DD0  010F               	movlb	15	; () banked
  2037  000DD2  9742               	bcf	66,3,b	;volatile
  2038                           
  2039                           ; BSR set to: 15
  2040                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  2041  000DD4  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2042  000DD8  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2043  000DDC  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2044  000DE0  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2045  000DE4  0E04               	movlw	4
  2046  000DE6  D006               	goto	u6250
  2047  000DE8                     u6255:
  2048  000DE8  0100               	movlb	0	; () banked
  2049  000DEA  90D8               	bcf	status,0,c
  2050  000DEC  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2051  000DEE  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2052  000DF0  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2053  000DF2  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2054  000DF4                     u6250:
  2055  000DF4  2EE8               	decfsz	wreg,f,c
  2056  000DF6  D7F8               	goto	u6255
  2057  000DF8  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2058  000DFC  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2059  000E00  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2060  000E04  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  2064  000E08  0101               	movlb	1	; () banked
  2065  000E0A  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2066  000E0C  0101               	movlb	1	; () banked
  2067  000E0E  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2068  000E10  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2069  000E12  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2070  000E14  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2071                           
  2072                           ; BSR set to: 1
  2073                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  2074  000E16  C108  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  2078  000E1A  0E07               	movlw	7
  2079  000E1C  0101               	movlb	1	; () banked
  2080  000E1E  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2081  000E20  0101               	movlb	1	; () banked
  2082  000E22  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2083  000E24  0E00               	movlw	0
  2084  000E26  0101               	movlb	1	; () banked
  2085  000E28  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2086  000E2A  0101               	movlb	1	; () banked
  2087  000E2C  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2088  000E2E  0E00               	movlw	0
  2089  000E30  0101               	movlb	1	; () banked
  2090  000E32  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2091  000E34  0101               	movlb	1	; () banked
  2092  000E36  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2093  000E38  0E00               	movlw	0
  2094  000E3A  0101               	movlb	1	; () banked
  2095  000E3C  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2096  000E3E  0101               	movlb	1	; () banked
  2097  000E40  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  2101  000E42  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2102  000E46  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2103  000E4A  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2104  000E4E  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2105  000E52  0E05               	movlw	5
  2106  000E54                     u6265:
  2107  000E54  90D8               	bcf	status,0,c
  2108  000E56  0100               	movlb	0	; () banked
  2109  000E58  37CD               	rlcf	??_CANsendMessage& (0+255),f,b
  2110  000E5A  37CE               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2111  000E5C  37CF               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2112  000E5E  37D0               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2113  000E60  2EE8               	decfsz	wreg,f,c
  2114  000E62  D7F8               	goto	u6265
  2115  000E64  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2116  000E68  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2117  000E6C  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2118  000E70  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  2122  000E74  010F               	movlb	15	; () banked
  2123  000E76  5142               	movf	66,w,b	;volatile
  2124  000E78  0B1F               	andlw	31
  2125  000E7A  010F               	movlb	15	; () banked
  2126  000E7C  6F42               	movwf	66,b	;volatile
  2127                           
  2128                           ; BSR set to: 15
  2129                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  2130  000E7E  C108  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  2131  000E82  D000               	goto	l4897
  2132  000E84                     l4897:
  2133                           
  2134                           ;inc\CANlib.h: 347: }
  2135                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  2136  000E84  0101               	movlb	1	; () banked
  2137  000E86  A107               	btfss	CANsendMessage@flags& (0+255),0,b
  2138  000E88  D003               	goto	l383
  2139                           
  2140                           ; BSR set to: 1
  2141                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2142  000E8A  010F               	movlb	15	; () banked
  2143  000E8C  8140               	bsf	64,0,b	;volatile
  2144  000E8E  D002               	goto	l384
  2145  000E90                     l383:
  2146                           
  2147                           ; BSR set to: 1
  2148                           ;inc\CANlib.h: 351: else
  2149                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2150  000E90  010F               	movlb	15	; () banked
  2151  000E92  9140               	bcf	64,0,b	;volatile
  2152  000E94                     l384:
  2153                           
  2154                           ; BSR set to: 15
  2155                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2156  000E94  0101               	movlb	1	; () banked
  2157  000E96  A307               	btfss	CANsendMessage@flags& (0+255),1,b
  2158  000E98  D003               	goto	l385
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2162  000E9A  010F               	movlb	15	; () banked
  2163  000E9C  8340               	bsf	64,1,b	;volatile
  2164  000E9E  D003               	goto	l4903
  2165  000EA0                     l385:
  2166                           
  2167                           ; BSR set to: 1
  2168                           ;inc\CANlib.h: 355: else
  2169                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2170  000EA0  010F               	movlb	15	; () banked
  2171  000EA2  9340               	bcf	64,1,b	;volatile
  2172  000EA4  D000               	goto	l4903
  2173  000EA6                     l4903:
  2174                           
  2175                           ; BSR set to: 15
  2176                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2177  000EA6  C104  FFD9         	movff	CANsendMessage@data,fsr2l
  2178  000EAA  C105  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2179  000EAE  50DF               	movf	indf2,w,c
  2180  000EB0  010F               	movlb	15	; () banked
  2181  000EB2  6F46               	movwf	70,b	;volatile
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2185  000EB4  0101               	movlb	1	; () banked
  2186  000EB6  EE20 F001          	lfsr	2,1
  2187  000EBA  5104               	movf	CANsendMessage@data& (0+255),w,b
  2188  000EBC  26D9               	addwf	fsr2l,f,c
  2189  000EBE  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2190  000EC0  22DA               	addwfc	fsr2h,f,c
  2191  000EC2  50DF               	movf	indf2,w,c
  2192  000EC4  010F               	movlb	15	; () banked
  2193  000EC6  6F47               	movwf	71,b	;volatile
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2197  000EC8  0101               	movlb	1	; () banked
  2198  000ECA  EE20 F002          	lfsr	2,2
  2199  000ECE  5104               	movf	CANsendMessage@data& (0+255),w,b
  2200  000ED0  26D9               	addwf	fsr2l,f,c
  2201  000ED2  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2202  000ED4  22DA               	addwfc	fsr2h,f,c
  2203  000ED6  50DF               	movf	indf2,w,c
  2204  000ED8  010F               	movlb	15	; () banked
  2205  000EDA  6F48               	movwf	72,b	;volatile
  2206                           
  2207                           ; BSR set to: 15
  2208                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2209  000EDC  0101               	movlb	1	; () banked
  2210  000EDE  EE20 F003          	lfsr	2,3
  2211  000EE2  5104               	movf	CANsendMessage@data& (0+255),w,b
  2212  000EE4  26D9               	addwf	fsr2l,f,c
  2213  000EE6  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2214  000EE8  22DA               	addwfc	fsr2h,f,c
  2215  000EEA  50DF               	movf	indf2,w,c
  2216  000EEC  010F               	movlb	15	; () banked
  2217  000EEE  6F49               	movwf	73,b	;volatile
  2218                           
  2219                           ; BSR set to: 15
  2220                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2221  000EF0  0101               	movlb	1	; () banked
  2222  000EF2  EE20 F004          	lfsr	2,4
  2223  000EF6  5104               	movf	CANsendMessage@data& (0+255),w,b
  2224  000EF8  26D9               	addwf	fsr2l,f,c
  2225  000EFA  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2226  000EFC  22DA               	addwfc	fsr2h,f,c
  2227  000EFE  50DF               	movf	indf2,w,c
  2228  000F00  010F               	movlb	15	; () banked
  2229  000F02  6F4A               	movwf	74,b	;volatile
  2230                           
  2231                           ; BSR set to: 15
  2232                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2233  000F04  0101               	movlb	1	; () banked
  2234  000F06  EE20 F005          	lfsr	2,5
  2235  000F0A  5104               	movf	CANsendMessage@data& (0+255),w,b
  2236  000F0C  26D9               	addwf	fsr2l,f,c
  2237  000F0E  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2238  000F10  22DA               	addwfc	fsr2h,f,c
  2239  000F12  50DF               	movf	indf2,w,c
  2240  000F14  010F               	movlb	15	; () banked
  2241  000F16  6F4B               	movwf	75,b	;volatile
  2242                           
  2243                           ; BSR set to: 15
  2244                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2245  000F18  0101               	movlb	1	; () banked
  2246  000F1A  EE20 F006          	lfsr	2,6
  2247  000F1E  5104               	movf	CANsendMessage@data& (0+255),w,b
  2248  000F20  26D9               	addwf	fsr2l,f,c
  2249  000F22  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2250  000F24  22DA               	addwfc	fsr2h,f,c
  2251  000F26  50DF               	movf	indf2,w,c
  2252  000F28  010F               	movlb	15	; () banked
  2253  000F2A  6F4C               	movwf	76,b	;volatile
  2254                           
  2255                           ; BSR set to: 15
  2256                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2257  000F2C  0101               	movlb	1	; () banked
  2258  000F2E  EE20 F007          	lfsr	2,7
  2259  000F32  5104               	movf	CANsendMessage@data& (0+255),w,b
  2260  000F34  26D9               	addwf	fsr2l,f,c
  2261  000F36  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2262  000F38  22DA               	addwfc	fsr2h,f,c
  2263  000F3A  50DF               	movf	indf2,w,c
  2264  000F3C  010F               	movlb	15	; () banked
  2265  000F3E  6F4D               	movwf	77,b	;volatile
  2266                           
  2267                           ; BSR set to: 15
  2268                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2269  000F40  010F               	movlb	15	; () banked
  2270  000F42  8740               	bsf	64,3,b	;volatile
  2271                           
  2272                           ; BSR set to: 15
  2273                           ;inc\CANlib.h: 368: return;
  2274  000F44  D28A               	goto	l387
  2275  000F46                     l373:
  2276                           
  2277                           ; BSR set to: 15
  2278                           ;inc\CANlib.h: 369: }
  2279                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2280  000F46  010F               	movlb	15	; () banked
  2281  000F48  B730               	btfsc	48,3,b	;volatile
  2282  000F4A  D142               	goto	l388
  2283                           
  2284                           ; BSR set to: 15
  2285                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2286  000F4C  C106  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2287                           
  2288                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2289  000F50  0101               	movlb	1	; () banked
  2290  000F52  AD07               	btfss	CANsendMessage@flags& (0+255),6,b
  2291  000F54  D003               	goto	l389
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2295  000F56  010F               	movlb	15	; () banked
  2296  000F58  8D35               	bsf	53,6,b	;volatile
  2297  000F5A  D002               	goto	l390
  2298  000F5C                     l389:
  2299                           
  2300                           ; BSR set to: 1
  2301                           ;inc\CANlib.h: 378: else
  2302                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2303  000F5C  010F               	movlb	15	; () banked
  2304  000F5E  9D35               	bcf	53,6,b	;volatile
  2305  000F60                     l390:
  2306                           
  2307                           ; BSR set to: 15
  2308                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2309  000F60  0101               	movlb	1	; () banked
  2310  000F62  A707               	btfss	CANsendMessage@flags& (0+255),3,b
  2311  000F64  D07A               	goto	l391
  2312                           
  2313                           ; BSR set to: 1
  2314                           ;inc\CANlib.h: 382: {
  2315                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2316  000F66  0101               	movlb	1	; () banked
  2317  000F68  5100               	movf	CANsendMessage@identifier& (0+255),w,b
  2318  000F6A  0101               	movlb	1	; () banked
  2319  000F6C  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2320  000F6E  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2321  000F70  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2322  000F72  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2323                           
  2324                           ; BSR set to: 1
  2325                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2326  000F74  C108  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2330  000F78  0E00               	movlw	0
  2331  000F7A  0101               	movlb	1	; () banked
  2332  000F7C  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2333  000F7E  0101               	movlb	1	; () banked
  2334  000F80  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2335  000F82  0EFF               	movlw	255
  2336  000F84  0101               	movlb	1	; () banked
  2337  000F86  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2338  000F88  0101               	movlb	1	; () banked
  2339  000F8A  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2340  000F8C  0E00               	movlw	0
  2341  000F8E  0101               	movlb	1	; () banked
  2342  000F90  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2343  000F92  0101               	movlb	1	; () banked
  2344  000F94  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2345  000F96  0E00               	movlw	0
  2346  000F98  0101               	movlb	1	; () banked
  2347  000F9A  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2348  000F9C  0101               	movlb	1	; () banked
  2349  000F9E  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2350                           
  2351                           ; BSR set to: 1
  2352                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2353  000FA0  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2354  000FA4  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2355  000FA8  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2356  000FAC  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2357  000FB0  C0CE  F0CD         	movff	??_CANsendMessage+1,??_CANsendMessage
  2358  000FB4  C0CF  F0CE         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2359  000FB8  C0D0  F0CF         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2360  000FBC  0100               	movlb	0	; () banked
  2361  000FBE  6BD0               	clrf	(??_CANsendMessage+3)& (0+255),b
  2362  000FC0  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2363  000FC4  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2364  000FC8  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2365  000FCC  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2369  000FD0  C108  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2373  000FD4  0E00               	movlw	0
  2374  000FD6  010F               	movlb	15	; () banked
  2375  000FD8  6F32               	movwf	50,b	;volatile
  2376                           
  2377                           ; BSR set to: 15
  2378                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2379  000FDA  010F               	movlb	15	; () banked
  2380  000FDC  8732               	bsf	50,3,b	;volatile
  2381                           
  2382                           ; BSR set to: 15
  2383                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2384  000FDE  0101               	movlb	1	; () banked
  2385  000FE0  A102               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2386  000FE2  D002               	goto	l392
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2390  000FE4  010F               	movlb	15	; () banked
  2391  000FE6  8132               	bsf	50,0,b	;volatile
  2392  000FE8                     l392:
  2393                           
  2394                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2395  000FE8  0101               	movlb	1	; () banked
  2396  000FEA  A302               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2397  000FEC  D002               	goto	l393
  2398                           
  2399                           ; BSR set to: 1
  2400                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2401  000FEE  010F               	movlb	15	; () banked
  2402  000FF0  8332               	bsf	50,1,b	;volatile
  2403  000FF2                     l393:
  2404                           
  2405                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2406  000FF2  0101               	movlb	1	; () banked
  2407  000FF4  A502               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2408  000FF6  D002               	goto	l394
  2409                           
  2410                           ; BSR set to: 1
  2411                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2412  000FF8  010F               	movlb	15	; () banked
  2413  000FFA  8B32               	bsf	50,5,b	;volatile
  2414  000FFC                     l394:
  2415                           
  2416                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2417  000FFC  0101               	movlb	1	; () banked
  2418  000FFE  A702               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2419  001000  D002               	goto	l395
  2420                           
  2421                           ; BSR set to: 1
  2422                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2423  001002  010F               	movlb	15	; () banked
  2424  001004  8D32               	bsf	50,6,b	;volatile
  2425  001006                     l395:
  2426                           
  2427                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2428  001006  0101               	movlb	1	; () banked
  2429  001008  A902               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2430  00100A  D003               	goto	l4953
  2431                           
  2432                           ; BSR set to: 1
  2433                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2434  00100C  010F               	movlb	15	; () banked
  2435  00100E  8F32               	bsf	50,7,b	;volatile
  2436  001010  D000               	goto	l4953
  2437  001012                     l4953:
  2438                           
  2439                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2440  001012  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2441  001016  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2442  00101A  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2443  00101E  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2444  001022  0E16               	movlw	22
  2445  001024  D006               	goto	u6370
  2446  001026                     u6375:
  2447  001026  0100               	movlb	0	; () banked
  2448  001028  90D8               	bcf	status,0,c
  2449  00102A  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2450  00102C  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2451  00102E  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2452  001030  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2453  001032                     u6370:
  2454  001032  2EE8               	decfsz	wreg,f,c
  2455  001034  D7F8               	goto	u6375
  2456  001036  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2457  00103A  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2458  00103E  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2459  001042  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2463  001046  0101               	movlb	1	; () banked
  2464  001048  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2465  00104A  0101               	movlb	1	; () banked
  2466  00104C  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2467  00104E  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2468  001050  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2469  001052  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2470                           
  2471                           ; BSR set to: 1
  2472                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2473  001054  C108  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2474                           
  2475                           ;inc\CANlib.h: 407: }
  2476  001058  D05A               	goto	l4973
  2477  00105A                     l391:
  2478                           
  2479                           ; BSR set to: 1
  2480                           ;inc\CANlib.h: 409: else
  2481                           ;inc\CANlib.h: 411: {
  2482                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2483  00105A  010F               	movlb	15	; () banked
  2484  00105C  9732               	bcf	50,3,b	;volatile
  2485                           
  2486                           ; BSR set to: 15
  2487                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2488  00105E  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2489  001062  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2490  001066  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2491  00106A  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2492  00106E  0E04               	movlw	4
  2493  001070  D006               	goto	u6380
  2494  001072                     u6385:
  2495  001072  0100               	movlb	0	; () banked
  2496  001074  90D8               	bcf	status,0,c
  2497  001076  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2498  001078  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2499  00107A  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2500  00107C  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2501  00107E                     u6380:
  2502  00107E  2EE8               	decfsz	wreg,f,c
  2503  001080  D7F8               	goto	u6385
  2504  001082  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2505  001086  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2506  00108A  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2507  00108E  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2511  001092  0101               	movlb	1	; () banked
  2512  001094  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2513  001096  0101               	movlb	1	; () banked
  2514  001098  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2515  00109A  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2516  00109C  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2517  00109E  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2521  0010A0  C108  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2525  0010A4  0E07               	movlw	7
  2526  0010A6  0101               	movlb	1	; () banked
  2527  0010A8  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2528  0010AA  0101               	movlb	1	; () banked
  2529  0010AC  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2530  0010AE  0E00               	movlw	0
  2531  0010B0  0101               	movlb	1	; () banked
  2532  0010B2  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2533  0010B4  0101               	movlb	1	; () banked
  2534  0010B6  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2535  0010B8  0E00               	movlw	0
  2536  0010BA  0101               	movlb	1	; () banked
  2537  0010BC  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2538  0010BE  0101               	movlb	1	; () banked
  2539  0010C0  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2540  0010C2  0E00               	movlw	0
  2541  0010C4  0101               	movlb	1	; () banked
  2542  0010C6  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2543  0010C8  0101               	movlb	1	; () banked
  2544  0010CA  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2548  0010CC  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2549  0010D0  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2550  0010D4  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2551  0010D8  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2552  0010DC  0E05               	movlw	5
  2553  0010DE                     u6395:
  2554  0010DE  90D8               	bcf	status,0,c
  2555  0010E0  0100               	movlb	0	; () banked
  2556  0010E2  37CD               	rlcf	??_CANsendMessage& (0+255),f,b
  2557  0010E4  37CE               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2558  0010E6  37CF               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2559  0010E8  37D0               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2560  0010EA  2EE8               	decfsz	wreg,f,c
  2561  0010EC  D7F8               	goto	u6395
  2562  0010EE  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2563  0010F2  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2564  0010F6  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2565  0010FA  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2569  0010FE  010F               	movlb	15	; () banked
  2570  001100  5132               	movf	50,w,b	;volatile
  2571  001102  0B1F               	andlw	31
  2572  001104  010F               	movlb	15	; () banked
  2573  001106  6F32               	movwf	50,b	;volatile
  2574                           
  2575                           ; BSR set to: 15
  2576                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2577  001108  C108  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2578  00110C  D000               	goto	l4973
  2579  00110E                     l4973:
  2580                           
  2581                           ;inc\CANlib.h: 422: }
  2582                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2583  00110E  0101               	movlb	1	; () banked
  2584  001110  A107               	btfss	CANsendMessage@flags& (0+255),0,b
  2585  001112  D003               	goto	l398
  2586                           
  2587                           ; BSR set to: 1
  2588                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2589  001114  010F               	movlb	15	; () banked
  2590  001116  8130               	bsf	48,0,b	;volatile
  2591  001118  D002               	goto	l399
  2592  00111A                     l398:
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;inc\CANlib.h: 426: else
  2596                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2597  00111A  010F               	movlb	15	; () banked
  2598  00111C  9130               	bcf	48,0,b	;volatile
  2599  00111E                     l399:
  2600                           
  2601                           ; BSR set to: 15
  2602                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2603  00111E  0101               	movlb	1	; () banked
  2604  001120  A307               	btfss	CANsendMessage@flags& (0+255),1,b
  2605  001122  D003               	goto	l400
  2606                           
  2607                           ; BSR set to: 1
  2608                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2609  001124  010F               	movlb	15	; () banked
  2610  001126  8330               	bsf	48,1,b	;volatile
  2611  001128  D003               	goto	l4979
  2612  00112A                     l400:
  2613                           
  2614                           ; BSR set to: 1
  2615                           ;inc\CANlib.h: 430: else
  2616                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2617  00112A  010F               	movlb	15	; () banked
  2618  00112C  9330               	bcf	48,1,b	;volatile
  2619  00112E  D000               	goto	l4979
  2620  001130                     l4979:
  2621                           
  2622                           ; BSR set to: 15
  2623                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2624  001130  C104  FFD9         	movff	CANsendMessage@data,fsr2l
  2625  001134  C105  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2626  001138  50DF               	movf	indf2,w,c
  2627  00113A  010F               	movlb	15	; () banked
  2628  00113C  6F36               	movwf	54,b	;volatile
  2629                           
  2630                           ; BSR set to: 15
  2631                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2632  00113E  0101               	movlb	1	; () banked
  2633  001140  EE20 F001          	lfsr	2,1
  2634  001144  5104               	movf	CANsendMessage@data& (0+255),w,b
  2635  001146  26D9               	addwf	fsr2l,f,c
  2636  001148  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2637  00114A  22DA               	addwfc	fsr2h,f,c
  2638  00114C  50DF               	movf	indf2,w,c
  2639  00114E  010F               	movlb	15	; () banked
  2640  001150  6F37               	movwf	55,b	;volatile
  2641                           
  2642                           ; BSR set to: 15
  2643                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2644  001152  0101               	movlb	1	; () banked
  2645  001154  EE20 F002          	lfsr	2,2
  2646  001158  5104               	movf	CANsendMessage@data& (0+255),w,b
  2647  00115A  26D9               	addwf	fsr2l,f,c
  2648  00115C  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2649  00115E  22DA               	addwfc	fsr2h,f,c
  2650  001160  50DF               	movf	indf2,w,c
  2651  001162  010F               	movlb	15	; () banked
  2652  001164  6F38               	movwf	56,b	;volatile
  2653                           
  2654                           ; BSR set to: 15
  2655                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2656  001166  0101               	movlb	1	; () banked
  2657  001168  EE20 F003          	lfsr	2,3
  2658  00116C  5104               	movf	CANsendMessage@data& (0+255),w,b
  2659  00116E  26D9               	addwf	fsr2l,f,c
  2660  001170  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2661  001172  22DA               	addwfc	fsr2h,f,c
  2662  001174  50DF               	movf	indf2,w,c
  2663  001176  010F               	movlb	15	; () banked
  2664  001178  6F39               	movwf	57,b	;volatile
  2665                           
  2666                           ; BSR set to: 15
  2667                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2668  00117A  0101               	movlb	1	; () banked
  2669  00117C  EE20 F004          	lfsr	2,4
  2670  001180  5104               	movf	CANsendMessage@data& (0+255),w,b
  2671  001182  26D9               	addwf	fsr2l,f,c
  2672  001184  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2673  001186  22DA               	addwfc	fsr2h,f,c
  2674  001188  50DF               	movf	indf2,w,c
  2675  00118A  010F               	movlb	15	; () banked
  2676  00118C  6F3A               	movwf	58,b	;volatile
  2677                           
  2678                           ; BSR set to: 15
  2679                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2680  00118E  0101               	movlb	1	; () banked
  2681  001190  EE20 F005          	lfsr	2,5
  2682  001194  5104               	movf	CANsendMessage@data& (0+255),w,b
  2683  001196  26D9               	addwf	fsr2l,f,c
  2684  001198  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2685  00119A  22DA               	addwfc	fsr2h,f,c
  2686  00119C  50DF               	movf	indf2,w,c
  2687  00119E  010F               	movlb	15	; () banked
  2688  0011A0  6F3B               	movwf	59,b	;volatile
  2689                           
  2690                           ; BSR set to: 15
  2691                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2692  0011A2  0101               	movlb	1	; () banked
  2693  0011A4  EE20 F006          	lfsr	2,6
  2694  0011A8  5104               	movf	CANsendMessage@data& (0+255),w,b
  2695  0011AA  26D9               	addwf	fsr2l,f,c
  2696  0011AC  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2697  0011AE  22DA               	addwfc	fsr2h,f,c
  2698  0011B0  50DF               	movf	indf2,w,c
  2699  0011B2  010F               	movlb	15	; () banked
  2700  0011B4  6F3C               	movwf	60,b	;volatile
  2701                           
  2702                           ; BSR set to: 15
  2703                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2704  0011B6  0101               	movlb	1	; () banked
  2705  0011B8  EE20 F007          	lfsr	2,7
  2706  0011BC  5104               	movf	CANsendMessage@data& (0+255),w,b
  2707  0011BE  26D9               	addwf	fsr2l,f,c
  2708  0011C0  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2709  0011C2  22DA               	addwfc	fsr2h,f,c
  2710  0011C4  50DF               	movf	indf2,w,c
  2711  0011C6  010F               	movlb	15	; () banked
  2712  0011C8  6F3D               	movwf	61,b	;volatile
  2713                           
  2714                           ; BSR set to: 15
  2715                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2716  0011CA  010F               	movlb	15	; () banked
  2717  0011CC  8730               	bsf	48,3,b	;volatile
  2718                           
  2719                           ; BSR set to: 15
  2720                           ;inc\CANlib.h: 444: return;
  2721  0011CE  D145               	goto	l387
  2722  0011D0                     l388:
  2723                           
  2724                           ; BSR set to: 15
  2725                           ;inc\CANlib.h: 445: }
  2726                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2727  0011D0  010F               	movlb	15	; () banked
  2728  0011D2  B720               	btfsc	32,3,b	;volatile
  2729  0011D4  D142               	goto	l387
  2730                           
  2731                           ; BSR set to: 15
  2732                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2733  0011D6  C106  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2734                           
  2735                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2736  0011DA  0101               	movlb	1	; () banked
  2737  0011DC  AD07               	btfss	CANsendMessage@flags& (0+255),6,b
  2738  0011DE  D003               	goto	l403
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2742  0011E0  010F               	movlb	15	; () banked
  2743  0011E2  8D25               	bsf	37,6,b	;volatile
  2744  0011E4  D002               	goto	l404
  2745  0011E6                     l403:
  2746                           
  2747                           ; BSR set to: 1
  2748                           ;inc\CANlib.h: 454: else
  2749                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2750  0011E6  010F               	movlb	15	; () banked
  2751  0011E8  9D25               	bcf	37,6,b	;volatile
  2752  0011EA                     l404:
  2753                           
  2754                           ; BSR set to: 15
  2755                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2756  0011EA  0101               	movlb	1	; () banked
  2757  0011EC  A707               	btfss	CANsendMessage@flags& (0+255),3,b
  2758  0011EE  D07A               	goto	l405
  2759                           
  2760                           ; BSR set to: 1
  2761                           ;inc\CANlib.h: 458: {
  2762                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2763  0011F0  0101               	movlb	1	; () banked
  2764  0011F2  5100               	movf	CANsendMessage@identifier& (0+255),w,b
  2765  0011F4  0101               	movlb	1	; () banked
  2766  0011F6  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2767  0011F8  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2768  0011FA  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2769  0011FC  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2770                           
  2771                           ; BSR set to: 1
  2772                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2773  0011FE  C108  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2777  001202  0E00               	movlw	0
  2778  001204  0101               	movlb	1	; () banked
  2779  001206  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2780  001208  0101               	movlb	1	; () banked
  2781  00120A  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2782  00120C  0EFF               	movlw	255
  2783  00120E  0101               	movlb	1	; () banked
  2784  001210  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2785  001212  0101               	movlb	1	; () banked
  2786  001214  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2787  001216  0E00               	movlw	0
  2788  001218  0101               	movlb	1	; () banked
  2789  00121A  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2790  00121C  0101               	movlb	1	; () banked
  2791  00121E  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2792  001220  0E00               	movlw	0
  2793  001222  0101               	movlb	1	; () banked
  2794  001224  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2795  001226  0101               	movlb	1	; () banked
  2796  001228  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2797                           
  2798                           ; BSR set to: 1
  2799                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2800  00122A  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2801  00122E  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2802  001232  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2803  001236  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2804  00123A  C0CE  F0CD         	movff	??_CANsendMessage+1,??_CANsendMessage
  2805  00123E  C0CF  F0CE         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2806  001242  C0D0  F0CF         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2807  001246  0100               	movlb	0	; () banked
  2808  001248  6BD0               	clrf	(??_CANsendMessage+3)& (0+255),b
  2809  00124A  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2810  00124E  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2811  001252  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2812  001256  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2816  00125A  C108  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2820  00125E  0E00               	movlw	0
  2821  001260  010F               	movlb	15	; () banked
  2822  001262  6F22               	movwf	34,b	;volatile
  2823                           
  2824                           ; BSR set to: 15
  2825                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2826  001264  010F               	movlb	15	; () banked
  2827  001266  8722               	bsf	34,3,b	;volatile
  2828                           
  2829                           ; BSR set to: 15
  2830                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2831  001268  0101               	movlb	1	; () banked
  2832  00126A  A102               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2833  00126C  D002               	goto	l406
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2837  00126E  010F               	movlb	15	; () banked
  2838  001270  8122               	bsf	34,0,b	;volatile
  2839  001272                     l406:
  2840                           
  2841                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2842  001272  0101               	movlb	1	; () banked
  2843  001274  A302               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2844  001276  D002               	goto	l407
  2845                           
  2846                           ; BSR set to: 1
  2847                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2848  001278  010F               	movlb	15	; () banked
  2849  00127A  8322               	bsf	34,1,b	;volatile
  2850  00127C                     l407:
  2851                           
  2852                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2853  00127C  0101               	movlb	1	; () banked
  2854  00127E  A502               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2855  001280  D002               	goto	l408
  2856                           
  2857                           ; BSR set to: 1
  2858                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2859  001282  010F               	movlb	15	; () banked
  2860  001284  8B22               	bsf	34,5,b	;volatile
  2861  001286                     l408:
  2862                           
  2863                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2864  001286  0101               	movlb	1	; () banked
  2865  001288  A702               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2866  00128A  D002               	goto	l409
  2867                           
  2868                           ; BSR set to: 1
  2869                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2870  00128C  010F               	movlb	15	; () banked
  2871  00128E  8D22               	bsf	34,6,b	;volatile
  2872  001290                     l409:
  2873                           
  2874                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2875  001290  0101               	movlb	1	; () banked
  2876  001292  A902               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2877  001294  D003               	goto	l5029
  2878                           
  2879                           ; BSR set to: 1
  2880                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2881  001296  010F               	movlb	15	; () banked
  2882  001298  8F22               	bsf	34,7,b	;volatile
  2883  00129A  D000               	goto	l5029
  2884  00129C                     l5029:
  2885                           
  2886                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2887  00129C  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2888  0012A0  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2889  0012A4  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2890  0012A8  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2891  0012AC  0E16               	movlw	22
  2892  0012AE  D006               	goto	u6500
  2893  0012B0                     u6505:
  2894  0012B0  0100               	movlb	0	; () banked
  2895  0012B2  90D8               	bcf	status,0,c
  2896  0012B4  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2897  0012B6  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2898  0012B8  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2899  0012BA  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2900  0012BC                     u6500:
  2901  0012BC  2EE8               	decfsz	wreg,f,c
  2902  0012BE  D7F8               	goto	u6505
  2903  0012C0  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2904  0012C4  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2905  0012C8  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2906  0012CC  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2910  0012D0  0101               	movlb	1	; () banked
  2911  0012D2  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2912  0012D4  0101               	movlb	1	; () banked
  2913  0012D6  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2914  0012D8  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2915  0012DA  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2916  0012DC  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2917                           
  2918                           ; BSR set to: 1
  2919                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2920  0012DE  C108  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2921                           
  2922                           ;inc\CANlib.h: 483: }
  2923  0012E2  D05A               	goto	l5049
  2924  0012E4                     l405:
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;inc\CANlib.h: 485: else
  2928                           ;inc\CANlib.h: 487: {
  2929                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2930  0012E4  010F               	movlb	15	; () banked
  2931  0012E6  9722               	bcf	34,3,b	;volatile
  2932                           
  2933                           ; BSR set to: 15
  2934                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2935  0012E8  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2936  0012EC  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2937  0012F0  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2938  0012F4  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2939  0012F8  0E04               	movlw	4
  2940  0012FA  D006               	goto	u6510
  2941  0012FC                     u6515:
  2942  0012FC  0100               	movlb	0	; () banked
  2943  0012FE  90D8               	bcf	status,0,c
  2944  001300  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2945  001302  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2946  001304  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2947  001306  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2948  001308                     u6510:
  2949  001308  2EE8               	decfsz	wreg,f,c
  2950  00130A  D7F8               	goto	u6515
  2951  00130C  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2952  001310  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2953  001314  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2954  001318  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2958  00131C  0101               	movlb	1	; () banked
  2959  00131E  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2960  001320  0101               	movlb	1	; () banked
  2961  001322  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2962  001324  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2963  001326  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2964  001328  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2965                           
  2966                           ; BSR set to: 1
  2967                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2968  00132A  C108  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2969                           
  2970                           ; BSR set to: 1
  2971                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2972  00132E  0E07               	movlw	7
  2973  001330  0101               	movlb	1	; () banked
  2974  001332  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2975  001334  0101               	movlb	1	; () banked
  2976  001336  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2977  001338  0E00               	movlw	0
  2978  00133A  0101               	movlb	1	; () banked
  2979  00133C  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2980  00133E  0101               	movlb	1	; () banked
  2981  001340  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2982  001342  0E00               	movlw	0
  2983  001344  0101               	movlb	1	; () banked
  2984  001346  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2985  001348  0101               	movlb	1	; () banked
  2986  00134A  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2987  00134C  0E00               	movlw	0
  2988  00134E  0101               	movlb	1	; () banked
  2989  001350  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2990  001352  0101               	movlb	1	; () banked
  2991  001354  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2995  001356  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2996  00135A  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2997  00135E  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2998  001362  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2999  001366  0E05               	movlw	5
  3000  001368                     u6525:
  3001  001368  90D8               	bcf	status,0,c
  3002  00136A  0100               	movlb	0	; () banked
  3003  00136C  37CD               	rlcf	??_CANsendMessage& (0+255),f,b
  3004  00136E  37CE               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3005  001370  37CF               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3006  001372  37D0               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3007  001374  2EE8               	decfsz	wreg,f,c
  3008  001376  D7F8               	goto	u6525
  3009  001378  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  3010  00137C  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3011  001380  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3012  001384  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  3016  001388  010F               	movlb	15	; () banked
  3017  00138A  5122               	movf	34,w,b	;volatile
  3018  00138C  0B1F               	andlw	31
  3019  00138E  010F               	movlb	15	; () banked
  3020  001390  6F22               	movwf	34,b	;volatile
  3021                           
  3022                           ; BSR set to: 15
  3023                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  3024  001392  C108  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  3025  001396  D000               	goto	l5049
  3026  001398                     l5049:
  3027                           
  3028                           ;inc\CANlib.h: 498: }
  3029                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  3030  001398  0101               	movlb	1	; () banked
  3031  00139A  A107               	btfss	CANsendMessage@flags& (0+255),0,b
  3032  00139C  D003               	goto	l412
  3033                           
  3034                           ; BSR set to: 1
  3035                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  3036  00139E  010F               	movlb	15	; () banked
  3037  0013A0  8120               	bsf	32,0,b	;volatile
  3038  0013A2  D002               	goto	l413
  3039  0013A4                     l412:
  3040                           
  3041                           ; BSR set to: 1
  3042                           ;inc\CANlib.h: 502: else
  3043                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  3044  0013A4  010F               	movlb	15	; () banked
  3045  0013A6  9120               	bcf	32,0,b	;volatile
  3046  0013A8                     l413:
  3047                           
  3048                           ; BSR set to: 15
  3049                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  3050  0013A8  0101               	movlb	1	; () banked
  3051  0013AA  A307               	btfss	CANsendMessage@flags& (0+255),1,b
  3052  0013AC  D003               	goto	l414
  3053                           
  3054                           ; BSR set to: 1
  3055                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  3056  0013AE  010F               	movlb	15	; () banked
  3057  0013B0  8320               	bsf	32,1,b	;volatile
  3058  0013B2  D003               	goto	l5055
  3059  0013B4                     l414:
  3060                           
  3061                           ; BSR set to: 1
  3062                           ;inc\CANlib.h: 506: else
  3063                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  3064  0013B4  010F               	movlb	15	; () banked
  3065  0013B6  9320               	bcf	32,1,b	;volatile
  3066  0013B8  D000               	goto	l5055
  3067  0013BA                     l5055:
  3068                           
  3069                           ; BSR set to: 15
  3070                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  3071  0013BA  C104  FFD9         	movff	CANsendMessage@data,fsr2l
  3072  0013BE  C105  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3073  0013C2  50DF               	movf	indf2,w,c
  3074  0013C4  010F               	movlb	15	; () banked
  3075  0013C6  6F26               	movwf	38,b	;volatile
  3076                           
  3077                           ; BSR set to: 15
  3078                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  3079  0013C8  0101               	movlb	1	; () banked
  3080  0013CA  EE20 F001          	lfsr	2,1
  3081  0013CE  5104               	movf	CANsendMessage@data& (0+255),w,b
  3082  0013D0  26D9               	addwf	fsr2l,f,c
  3083  0013D2  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3084  0013D4  22DA               	addwfc	fsr2h,f,c
  3085  0013D6  50DF               	movf	indf2,w,c
  3086  0013D8  010F               	movlb	15	; () banked
  3087  0013DA  6F27               	movwf	39,b	;volatile
  3088                           
  3089                           ; BSR set to: 15
  3090                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  3091  0013DC  0101               	movlb	1	; () banked
  3092  0013DE  EE20 F002          	lfsr	2,2
  3093  0013E2  5104               	movf	CANsendMessage@data& (0+255),w,b
  3094  0013E4  26D9               	addwf	fsr2l,f,c
  3095  0013E6  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3096  0013E8  22DA               	addwfc	fsr2h,f,c
  3097  0013EA  50DF               	movf	indf2,w,c
  3098  0013EC  010F               	movlb	15	; () banked
  3099  0013EE  6F28               	movwf	40,b	;volatile
  3100                           
  3101                           ; BSR set to: 15
  3102                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  3103  0013F0  0101               	movlb	1	; () banked
  3104  0013F2  EE20 F003          	lfsr	2,3
  3105  0013F6  5104               	movf	CANsendMessage@data& (0+255),w,b
  3106  0013F8  26D9               	addwf	fsr2l,f,c
  3107  0013FA  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3108  0013FC  22DA               	addwfc	fsr2h,f,c
  3109  0013FE  50DF               	movf	indf2,w,c
  3110  001400  010F               	movlb	15	; () banked
  3111  001402  6F29               	movwf	41,b	;volatile
  3112                           
  3113                           ; BSR set to: 15
  3114                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  3115  001404  0101               	movlb	1	; () banked
  3116  001406  EE20 F004          	lfsr	2,4
  3117  00140A  5104               	movf	CANsendMessage@data& (0+255),w,b
  3118  00140C  26D9               	addwf	fsr2l,f,c
  3119  00140E  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3120  001410  22DA               	addwfc	fsr2h,f,c
  3121  001412  50DF               	movf	indf2,w,c
  3122  001414  010F               	movlb	15	; () banked
  3123  001416  6F2A               	movwf	42,b	;volatile
  3124                           
  3125                           ; BSR set to: 15
  3126                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  3127  001418  0101               	movlb	1	; () banked
  3128  00141A  EE20 F005          	lfsr	2,5
  3129  00141E  5104               	movf	CANsendMessage@data& (0+255),w,b
  3130  001420  26D9               	addwf	fsr2l,f,c
  3131  001422  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3132  001424  22DA               	addwfc	fsr2h,f,c
  3133  001426  50DF               	movf	indf2,w,c
  3134  001428  010F               	movlb	15	; () banked
  3135  00142A  6F2B               	movwf	43,b	;volatile
  3136                           
  3137                           ; BSR set to: 15
  3138                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  3139  00142C  0101               	movlb	1	; () banked
  3140  00142E  EE20 F006          	lfsr	2,6
  3141  001432  5104               	movf	CANsendMessage@data& (0+255),w,b
  3142  001434  26D9               	addwf	fsr2l,f,c
  3143  001436  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3144  001438  22DA               	addwfc	fsr2h,f,c
  3145  00143A  50DF               	movf	indf2,w,c
  3146  00143C  010F               	movlb	15	; () banked
  3147  00143E  6F2C               	movwf	44,b	;volatile
  3148                           
  3149                           ; BSR set to: 15
  3150                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  3151  001440  0101               	movlb	1	; () banked
  3152  001442  EE20 F007          	lfsr	2,7
  3153  001446  5104               	movf	CANsendMessage@data& (0+255),w,b
  3154  001448  26D9               	addwf	fsr2l,f,c
  3155  00144A  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3156  00144C  22DA               	addwfc	fsr2h,f,c
  3157  00144E  50DF               	movf	indf2,w,c
  3158  001450  010F               	movlb	15	; () banked
  3159  001452  6F2D               	movwf	45,b	;volatile
  3160                           
  3161                           ; BSR set to: 15
  3162                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3163  001454  010F               	movlb	15	; () banked
  3164  001456  8720               	bsf	32,3,b	;volatile
  3165                           
  3166                           ; BSR set to: 15
  3167                           ;inc\CANlib.h: 520: return;
  3168  001458  D000               	goto	l387
  3169  00145A                     l387:
  3170                           
  3171                           ; BSR set to: 15
  3172  00145A  0012               	return		;funcret
  3173  00145C                     __end_of_CANsendMessage:
  3174                           	opt stack 0
  3175                           tblptru	equ	0xFF8
  3176                           tblptrh	equ	0xFF7
  3177                           tblptrl	equ	0xFF6
  3178                           tablat	equ	0xFF5
  3179                           prodh	equ	0xFF4
  3180                           prodl	equ	0xFF3
  3181                           postinc0	equ	0xFEE
  3182                           wreg	equ	0xFE8
  3183                           postdec1	equ	0xFE5
  3184                           fsr1l	equ	0xFE1
  3185                           indf2	equ	0xFDF
  3186                           fsr2h	equ	0xFDA
  3187                           fsr2l	equ	0xFD9
  3188                           status	equ	0xFD8
  3189                           
  3190 ;; *************** function _CANisTxReady *****************
  3191 ;; Defined at:
  3192 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      unsigned char 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3206 ;;      Params:         0       0       0       0
  3207 ;;      Locals:         0       1       0       0
  3208 ;;      Temps:          0       0       0       0
  3209 ;;      Totals:         0       1       0       0
  3210 ;;Total ram usage:        1 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    4
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_remote_frame_handler
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text4
  3221  002CDE                     __ptext4:
  3222                           	opt stack 0
  3223  002CDE                     _CANisTxReady:
  3224                           	opt stack 25
  3225                           
  3226                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3227                           
  3228                           ; BSR set to: 15
  3229                           ;incstack = 0
  3230  002CDE  0E01               	movlw	1
  3231  002CE0  0100               	movlb	0	; () banked
  3232  002CE2  6FCD               	movwf	_CANisTxReady$3173& (0+255),b
  3233                           
  3234                           ; BSR set to: 0
  3235  002CE4  010F               	movlb	15	; () banked
  3236  002CE6  A740               	btfss	64,3,b	;volatile
  3237  002CE8  D009               	goto	l566
  3238                           
  3239                           ; BSR set to: 15
  3240  002CEA  010F               	movlb	15	; () banked
  3241  002CEC  A730               	btfss	48,3,b	;volatile
  3242  002CEE  D006               	goto	l566
  3243                           
  3244                           ; BSR set to: 15
  3245  002CF0  010F               	movlb	15	; () banked
  3246  002CF2  A720               	btfss	32,3,b	;volatile
  3247  002CF4  D003               	goto	l566
  3248                           
  3249                           ; BSR set to: 15
  3250  002CF6  0E00               	movlw	0
  3251  002CF8  0100               	movlb	0	; () banked
  3252  002CFA  6FCD               	movwf	_CANisTxReady$3173& (0+255),b
  3253  002CFC                     l566:
  3254  002CFC  0100               	movlb	0	; () banked
  3255  002CFE  51CD               	movf	_CANisTxReady$3173& (0+255),w,b
  3256  002D00  D000               	goto	l567
  3257  002D02                     l567:
  3258                           
  3259                           ; BSR set to: 0
  3260  002D02  0012               	return		;funcret
  3261  002D04                     __end_of_CANisTxReady:
  3262                           	opt stack 0
  3263                           tblptru	equ	0xFF8
  3264                           tblptrh	equ	0xFF7
  3265                           tblptrl	equ	0xFF6
  3266                           tablat	equ	0xFF5
  3267                           prodh	equ	0xFF4
  3268                           prodl	equ	0xFF3
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           postdec1	equ	0xFE5
  3272                           fsr1l	equ	0xFE1
  3273                           indf2	equ	0xFDF
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function _board_initialization *****************
  3279 ;; Defined at:
  3280 ;;		line 445 in file "ABS_Code.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;		None               void
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3294 ;;      Params:         0       0       0       0
  3295 ;;      Locals:         0       0       0       0
  3296 ;;      Temps:          0       0       0       0
  3297 ;;      Totals:         0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    6
  3301 ;; This function calls:
  3302 ;;		_CANInitialize
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text5
  3309  002A3C                     __ptext5:
  3310                           	opt stack 0
  3311  002A3C                     _board_initialization:
  3312                           	opt stack 24
  3313                           
  3314                           ;ABS_Code.c: 447: LATA = 0x00;
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;incstack = 0
  3318  002A3C  0E00               	movlw	0
  3319  002A3E  6E89               	movwf	3977,c	;volatile
  3320                           
  3321                           ;ABS_Code.c: 448: TRISA = 0b11111101;
  3322  002A40  0EFD               	movlw	253
  3323  002A42  6E92               	movwf	3986,c	;volatile
  3324                           
  3325                           ;ABS_Code.c: 449: LATB = 0x00;
  3326  002A44  0E00               	movlw	0
  3327  002A46  6E8A               	movwf	3978,c	;volatile
  3328                           
  3329                           ;ABS_Code.c: 450: TRISB = 0b11111111;
  3330  002A48  6893               	setf	3987,c	;volatile
  3331                           
  3332                           ;ABS_Code.c: 451: LATC = 0x00;
  3333  002A4A  0E00               	movlw	0
  3334  002A4C  6E8B               	movwf	3979,c	;volatile
  3335                           
  3336                           ;ABS_Code.c: 452: TRISC = 0b11111100;
  3337  002A4E  0EFC               	movlw	252
  3338  002A50  6E94               	movwf	3988,c	;volatile
  3339                           
  3340                           ;ABS_Code.c: 453: LATD = 0x00;
  3341  002A52  0E00               	movlw	0
  3342  002A54  6E8C               	movwf	3980,c	;volatile
  3343                           
  3344                           ;ABS_Code.c: 454: TRISD = 0xFF;
  3345  002A56  6895               	setf	3989,c	;volatile
  3346                           
  3347                           ;ABS_Code.c: 455: LATE = 0x00;
  3348  002A58  0E00               	movlw	0
  3349  002A5A  6E8D               	movwf	3981,c	;volatile
  3350                           
  3351                           ;ABS_Code.c: 456: TRISE = 0xFF;
  3352  002A5C  6896               	setf	3990,c	;volatile
  3353                           
  3354                           ;ABS_Code.c: 461: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3355  002A5E  0E06               	movlw	6
  3356  002A60  0101               	movlb	1	; () banked
  3357  002A62  6F09               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3358  002A64  0E05               	movlw	5
  3359  002A66  0101               	movlb	1	; () banked
  3360  002A68  6F0A               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3361  002A6A  0E01               	movlw	1
  3362  002A6C  0101               	movlb	1	; () banked
  3363  002A6E  6F0B               	movwf	CANInitialize@SJW& (0+255),b
  3364  002A70  0E03               	movlw	3
  3365  002A72  0101               	movlb	1	; () banked
  3366  002A74  6F0C               	movwf	CANInitialize@BRP& (0+255),b
  3367  002A76  0E9D               	movlw	157
  3368  002A78  0101               	movlb	1	; () banked
  3369  002A7A  6F0D               	movwf	CANInitialize@flags& (0+255),b
  3370  002A7C  0E04               	movlw	4
  3371  002A7E  ECA0  F011         	call	_CANInitialize
  3372                           
  3373                           ;ABS_Code.c: 464: PIR3bits.RXB1IF = 0;
  3374  002A82  92A4               	bcf	4004,1,c	;volatile
  3375                           
  3376                           ;ABS_Code.c: 465: PIR3bits.RXB0IF = 0;
  3377  002A84  90A4               	bcf	4004,0,c	;volatile
  3378                           
  3379                           ;ABS_Code.c: 466: INTCONbits.TMR0IF = 0;
  3380  002A86  94F2               	bcf	intcon,2,c	;volatile
  3381                           
  3382                           ;ABS_Code.c: 467: PIR1bits.TMR1IF = 0;
  3383  002A88  909E               	bcf	3998,0,c	;volatile
  3384                           
  3385                           ;ABS_Code.c: 468: PIR2bits.TMR3IF = 0;
  3386  002A8A  92A1               	bcf	4001,1,c	;volatile
  3387                           
  3388                           ;ABS_Code.c: 469: INTCONbits.INT0IF = 0;
  3389  002A8C  92F2               	bcf	intcon,1,c	;volatile
  3390                           
  3391                           ;ABS_Code.c: 470: INTCON3bits.INT1IF = 0;
  3392  002A8E  90F0               	bcf	intcon3,0,c	;volatile
  3393                           
  3394                           ;ABS_Code.c: 474: RCONbits.IPEN = 1;
  3395  002A90  8ED0               	bsf	4048,7,c	;volatile
  3396                           
  3397                           ;ABS_Code.c: 475: IPR3bits.RXB1IP = 0;
  3398  002A92  92A5               	bcf	4005,1,c	;volatile
  3399                           
  3400                           ;ABS_Code.c: 476: IPR3bits.RXB0IP = 0;
  3401  002A94  90A5               	bcf	4005,0,c	;volatile
  3402                           
  3403                           ;ABS_Code.c: 477: INTCON2bits.TMR0IP = 1;
  3404  002A96  84F1               	bsf	intcon2,2,c	;volatile
  3405                           
  3406                           ;ABS_Code.c: 478: INTCON3bits.INT1IP = 1;
  3407  002A98  8CF0               	bsf	intcon3,6,c	;volatile
  3408                           
  3409                           ;ABS_Code.c: 479: IPR1bits.TMR1IP = 0;
  3410  002A9A  909F               	bcf	3999,0,c	;volatile
  3411                           
  3412                           ;ABS_Code.c: 480: IPR2bits.TMR3IP = 0;
  3413  002A9C  92A2               	bcf	4002,1,c	;volatile
  3414                           
  3415                           ;ABS_Code.c: 483: T0CON = 0x80;
  3416  002A9E  0E80               	movlw	128
  3417  002AA0  6ED5               	movwf	4053,c	;volatile
  3418                           
  3419                           ;ABS_Code.c: 490: TMR0H = 0xFF;
  3420  002AA2  68D7               	setf	4055,c	;volatile
  3421                           
  3422                           ;ABS_Code.c: 491: TMR0L = 0xFE;
  3423  002AA4  0EFE               	movlw	254
  3424  002AA6  6ED6               	movwf	4054,c	;volatile
  3425                           
  3426                           ;ABS_Code.c: 492: PORTCbits.RC0 = 0;
  3427  002AA8  9082               	bcf	3970,0,c	;volatile
  3428                           
  3429                           ;ABS_Code.c: 493: brake_value_degree = 90;
  3430  002AAA  0E5A               	movlw	90
  3431  002AAC  6E29               	movwf	_brake_value_degree,c	;volatile
  3432                           
  3433                           ;ABS_Code.c: 494: T1CON = 00110000;
  3434  002AAE  0E00               	movlw	0
  3435  002AB0  6ECD               	movwf	4045,c	;volatile
  3436                           
  3437                           ;ABS_Code.c: 495: T3CON = 01110000;
  3438  002AB2  0E00               	movlw	0
  3439  002AB4  6EB1               	movwf	4017,c	;volatile
  3440                           
  3441                           ;ABS_Code.c: 496: INTCON2bits.INTEDG0 = 1;
  3442  002AB6  8CF1               	bsf	intcon2,6,c	;volatile
  3443                           
  3444                           ;ABS_Code.c: 497: INTCON2bits.INTEDG1 = 1;
  3445  002AB8  8AF1               	bsf	intcon2,5,c	;volatile
  3446                           
  3447                           ;ABS_Code.c: 515: PIE3bits.RXB1IE = 1;
  3448  002ABA  82A3               	bsf	4003,1,c	;volatile
  3449                           
  3450                           ;ABS_Code.c: 516: PIE3bits.RXB0IE = 1;
  3451  002ABC  80A3               	bsf	4003,0,c	;volatile
  3452                           
  3453                           ;ABS_Code.c: 517: INTCONbits.TMR0IE = 1;
  3454  002ABE  8AF2               	bsf	intcon,5,c	;volatile
  3455                           
  3456                           ;ABS_Code.c: 518: PIE1bits.TMR1IE = 1;
  3457  002AC0  809D               	bsf	3997,0,c	;volatile
  3458                           
  3459                           ;ABS_Code.c: 519: PIE2bits.TMR3IE = 1;
  3460  002AC2  82A0               	bsf	4000,1,c	;volatile
  3461                           
  3462                           ;ABS_Code.c: 520: INTCONbits.INT0IE = 1;
  3463  002AC4  88F2               	bsf	intcon,4,c	;volatile
  3464                           
  3465                           ;ABS_Code.c: 521: INTCON3bits.INT1IE = 1;
  3466  002AC6  86F0               	bsf	intcon3,3,c	;volatile
  3467                           
  3468                           ;ABS_Code.c: 522: INTCONbits.GIEH = 1;
  3469  002AC8  8EF2               	bsf	intcon,7,c	;volatile
  3470                           
  3471                           ;ABS_Code.c: 523: INTCONbits.GIEL = 1;
  3472  002ACA  8CF2               	bsf	intcon,6,c	;volatile
  3473                           
  3474                           ;ABS_Code.c: 526: T1CONbits.TMR1ON = 1;
  3475  002ACC  80CD               	bsf	4045,0,c	;volatile
  3476                           
  3477                           ;ABS_Code.c: 527: T3CONbits.TMR3ON = 1;
  3478  002ACE  80B1               	bsf	4017,0,c	;volatile
  3479                           
  3480                           ;ABS_Code.c: 528: T0CONbits.TMR0ON = 1;
  3481  002AD0  8ED5               	bsf	4053,7,c	;volatile
  3482  002AD2  0012               	return		;funcret
  3483  002AD4                     __end_of_board_initialization:
  3484                           	opt stack 0
  3485                           tblptru	equ	0xFF8
  3486                           tblptrh	equ	0xFF7
  3487                           tblptrl	equ	0xFF6
  3488                           tablat	equ	0xFF5
  3489                           prodh	equ	0xFF4
  3490                           prodl	equ	0xFF3
  3491                           intcon	equ	0xFF2
  3492                           intcon2	equ	0xFF1
  3493                           intcon3	equ	0xFF0
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           postdec1	equ	0xFE5
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _CANInitialize *****************
  3504 ;; Defined at:
  3505 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  propSeg         1    wreg     unsigned char 
  3508 ;;  phaseSeg1       1    9[BANK1 ] unsigned char 
  3509 ;;  phaseSeg2       1   10[BANK1 ] unsigned char 
  3510 ;;  SJW             1   11[BANK1 ] unsigned char 
  3511 ;;  BRP             1   12[BANK1 ] unsigned char 
  3512 ;;  flags           1   13[BANK1 ] enum E16885
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  propSeg         1   18[BANK1 ] unsigned char 
  3515 ;;  FilterConfig    1   20[BANK1 ] unsigned char 
  3516 ;;  FilterConfig    1   19[BANK1 ] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;		None               void
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3526 ;;      Params:         0       0       5       0
  3527 ;;      Locals:         0       0       3       0
  3528 ;;      Temps:          0       0       4       0
  3529 ;;      Totals:         0       0      12       0
  3530 ;;Total ram usage:       12 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    5
  3533 ;; This function calls:
  3534 ;;		_CANOperationMode
  3535 ;;		_CANSetFilter
  3536 ;;		_CANSetMask
  3537 ;; This function is called by:
  3538 ;;		_board_initialization
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text6
  3543  002340                     __ptext6:
  3544                           	opt stack 0
  3545  002340                     _CANInitialize:
  3546                           	opt stack 24
  3547                           
  3548                           ;incstack = 0
  3549                           ;CANInitialize@propSeg stored from wreg
  3550  002340  0101               	movlb	1	; () banked
  3551  002342  6F12               	movwf	CANInitialize@propSeg& (0+255),b
  3552                           
  3553                           ; BSR set to: 1
  3554                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3555                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3556                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3557  002344  0E80               	movlw	128
  3558  002346  EC82  F016         	call	_CANOperationMode
  3559                           
  3560                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3561  00234A  0E00               	movlw	0
  3562  00234C  6E70               	movwf	3952,c	;volatile
  3563                           
  3564                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3565  00234E  0E00               	movlw	0
  3566  002350  6E71               	movwf	3953,c	;volatile
  3567                           
  3568                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3569  002352  0E00               	movlw	0
  3570  002354  6E72               	movwf	3954,c	;volatile
  3571                           
  3572                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3573  002356  0101               	movlb	1	; () banked
  3574  002358  410B               	rrncf	CANInitialize@SJW& (0+255),w,b
  3575  00235A  42E8               	rrncf	wreg,f,c
  3576  00235C  0BC0               	andlw	192
  3577  00235E  0101               	movlb	1	; () banked
  3578  002360  6F0B               	movwf	CANInitialize@SJW& (0+255),b
  3579                           
  3580                           ; BSR set to: 1
  3581                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3582  002362  0101               	movlb	1	; () banked
  3583  002364  510B               	movf	CANInitialize@SJW& (0+255),w,b
  3584  002366  1270               	iorwf	3952,f,c	;volatile
  3585                           
  3586                           ; BSR set to: 1
  3587                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3588  002368  0101               	movlb	1	; () banked
  3589  00236A  510C               	movf	CANInitialize@BRP& (0+255),w,b
  3590  00236C  1270               	iorwf	3952,f,c	;volatile
  3591                           
  3592                           ; BSR set to: 1
  3593                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3594  00236E  0101               	movlb	1	; () banked
  3595  002370  5112               	movf	CANInitialize@propSeg& (0+255),w,b
  3596  002372  1271               	iorwf	3953,f,c	;volatile
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3600  002374  0101               	movlb	1	; () banked
  3601  002376  3909               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3602  002378  42E8               	rrncf	wreg,f,c
  3603  00237A  0BF8               	andlw	248
  3604  00237C  0101               	movlb	1	; () banked
  3605  00237E  6F09               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3606                           
  3607                           ; BSR set to: 1
  3608                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3609  002380  0101               	movlb	1	; () banked
  3610  002382  5109               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3611  002384  1271               	iorwf	3953,f,c	;volatile
  3612                           
  3613                           ; BSR set to: 1
  3614                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3615  002386  0101               	movlb	1	; () banked
  3616  002388  A50D               	btfss	CANInitialize@flags& (0+255),2,b
  3617                           
  3618                           ; BSR set to: 1
  3619                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3620  00238A  8C71               	bsf	3953,6,c	;volatile
  3621                           
  3622                           ; BSR set to: 1
  3623                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3624  00238C  0101               	movlb	1	; () banked
  3625  00238E  A10D               	btfss	CANInitialize@flags& (0+255),0,b
  3626  002390  D002               	goto	l4817
  3627                           
  3628                           ; BSR set to: 1
  3629                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3630  002392  8E71               	bsf	3953,7,c	;volatile
  3631  002394  D000               	goto	l4817
  3632  002396                     l4817:
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3636  002396  0101               	movlb	1	; () banked
  3637  002398  510A               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3638  00239A  1272               	iorwf	3954,f,c	;volatile
  3639                           
  3640                           ; BSR set to: 1
  3641                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3642  00239C  0101               	movlb	1	; () banked
  3643  00239E  A30D               	btfss	CANInitialize@flags& (0+255),1,b
  3644  0023A0  D002               	goto	l4823
  3645                           
  3646                           ; BSR set to: 1
  3647                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3648  0023A2  8C72               	bsf	3954,6,c	;volatile
  3649  0023A4  D000               	goto	l4823
  3650  0023A6                     l4823:
  3651                           
  3652                           ; BSR set to: 1
  3653                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3654  0023A6  0101               	movlb	1	; () banked
  3655  0023A8  510D               	movf	CANInitialize@flags& (0+255),w,b
  3656  0023AA  0B60               	andlw	96
  3657  0023AC  6E60               	movwf	3936,c	;volatile
  3658                           
  3659                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3660  0023AE  0101               	movlb	1	; () banked
  3661  0023B0  510D               	movf	CANInitialize@flags& (0+255),w,b
  3662  0023B2  0B10               	andlw	16
  3663  0023B4  0AFF               	xorlw	255
  3664  0023B6  B4D8               	btfsc	status,2,c
  3665                           
  3666                           ; BSR set to: 1
  3667                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3668  0023B8  8460               	bsf	3936,2,c	;volatile
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3672  0023BA  CF60 FF50          	movff	3936,3920	;volatile
  3673                           
  3674                           ; BSR set to: 1
  3675                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3676  0023BE  0E00               	movlw	0
  3677  0023C0  0100               	movlb	0	; () banked
  3678  0023C2  6FCD               	movwf	CANSetMask@mask& (0+255),b
  3679  0023C4  0E00               	movlw	0
  3680  0023C6  6FCE               	movwf	(CANSetMask@mask+1)& (0+255),b
  3681  0023C8  0E00               	movlw	0
  3682  0023CA  6FCF               	movwf	(CANSetMask@mask+2)& (0+255),b
  3683  0023CC  0E00               	movlw	0
  3684  0023CE  6FD0               	movwf	(CANSetMask@mask+3)& (0+255),b
  3685  0023D0  0EF7               	movlw	247
  3686  0023D2  0100               	movlb	0	; () banked
  3687  0023D4  6FD1               	movwf	CANSetMask@type& (0+255),b
  3688  0023D6  0E01               	movlw	1
  3689  0023D8  ECC5  F00C         	call	_CANSetMask
  3690                           
  3691                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3692  0023DC  0E00               	movlw	0
  3693  0023DE  0100               	movlb	0	; () banked
  3694  0023E0  6FCD               	movwf	CANSetMask@mask& (0+255),b
  3695  0023E2  0E00               	movlw	0
  3696  0023E4  6FCE               	movwf	(CANSetMask@mask+1)& (0+255),b
  3697  0023E6  0E00               	movlw	0
  3698  0023E8  6FCF               	movwf	(CANSetMask@mask+2)& (0+255),b
  3699  0023EA  0E00               	movlw	0
  3700  0023EC  6FD0               	movwf	(CANSetMask@mask+3)& (0+255),b
  3701  0023EE  0EF7               	movlw	247
  3702  0023F0  0100               	movlb	0	; () banked
  3703  0023F2  6FD1               	movwf	CANSetMask@type& (0+255),b
  3704  0023F4  0E02               	movlw	2
  3705  0023F6  ECC5  F00C         	call	_CANSetMask
  3706                           
  3707                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3708  0023FA  D00F               	goto	l4835
  3709  0023FC                     l4829:
  3710                           
  3711                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3712  0023FC  0EF7               	movlw	247
  3713  0023FE  0101               	movlb	1	; () banked
  3714  002400  6F13               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3715  002402  D007               	goto	l4831
  3716  002404                     l368:
  3717                           
  3718                           ; BSR set to: 1
  3719                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3720  002404  0101               	movlb	1	; () banked
  3721  002406  6913               	setf	CANInitialize@FilterConfig1& (0+255),b
  3722                           
  3723                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3724  002408  0101               	movlb	1	; () banked
  3725  00240A  6914               	setf	CANInitialize@FilterConfig2& (0+255),b
  3726                           
  3727                           ;inc\CANlib.h: 273: break;
  3728  00240C  D028               	goto	l4837
  3729  00240E                     l369:
  3730                           
  3731                           ; BSR set to: 1
  3732                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3733  00240E  0101               	movlb	1	; () banked
  3734  002410  6913               	setf	CANInitialize@FilterConfig1& (0+255),b
  3735  002412                     l4831:
  3736                           
  3737                           ; BSR set to: 1
  3738                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3739  002412  0EF7               	movlw	247
  3740  002414  0101               	movlb	1	; () banked
  3741  002416  6F14               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3742                           
  3743                           ; BSR set to: 1
  3744                           ;inc\CANlib.h: 278: }
  3745                           
  3746                           ;inc\CANlib.h: 277: break;
  3747  002418  D022               	goto	l4837
  3748  00241A                     l4835:
  3749  00241A  0E9F               	movlw	159
  3750  00241C  0101               	movlb	1	; () banked
  3751  00241E  6F0E               	movwf	??_CANInitialize& (0+255),b
  3752  002420  0EFF               	movlw	255
  3753  002422  0101               	movlb	1	; () banked
  3754  002424  6F0F               	movwf	(??_CANInitialize+1)& (0+255),b
  3755  002426  0101               	movlb	1	; () banked
  3756  002428  510D               	movf	CANInitialize@flags& (0+255),w,b
  3757  00242A  0B60               	andlw	96
  3758  00242C  0101               	movlb	1	; () banked
  3759  00242E  6F10               	movwf	(??_CANInitialize+2)& (0+255),b
  3760  002430  6B11               	clrf	(??_CANInitialize+3)& (0+255),b
  3761  002432  0101               	movlb	1	; () banked
  3762  002434  510E               	movf	??_CANInitialize& (0+255),w,b
  3763  002436  0101               	movlb	1	; () banked
  3764  002438  1310               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3765  00243A  0101               	movlb	1	; () banked
  3766  00243C  510F               	movf	(??_CANInitialize+1)& (0+255),w,b
  3767  00243E  0101               	movlb	1	; () banked
  3768  002440  1311               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3769                           
  3770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3771                           ; Switch size 1, requested type "space"
  3772                           ; Number of cases is 1, Range of values is 0 to 0
  3773                           ; switch strategies available:
  3774                           ; Name         Instructions Cycles
  3775                           ; simple_byte            4     3 (average)
  3776                           ;	Chosen strategy is simple_byte
  3777  002442  0101               	movlb	1	; () banked
  3778  002444  5111               	movf	(??_CANInitialize+3)& (0+255),w,b
  3779  002446  0A00               	xorlw	0	; case 0
  3780  002448  A4D8               	btfss	status,2,c
  3781  00244A  D7E1               	goto	l369
  3782                           
  3783                           ; BSR set to: 1
  3784                           ; Switch size 1, requested type "space"
  3785                           ; Number of cases is 2, Range of values is 191 to 223
  3786                           ; switch strategies available:
  3787                           ; Name         Instructions Cycles
  3788                           ; simple_byte            7     4 (average)
  3789                           ;	Chosen strategy is simple_byte
  3790  00244C  0101               	movlb	1	; () banked
  3791  00244E  5110               	movf	(??_CANInitialize+2)& (0+255),w,b
  3792  002450  0ABF               	xorlw	191	; case 191
  3793  002452  B4D8               	btfsc	status,2,c
  3794  002454  D7D7               	goto	l368
  3795  002456  0A60               	xorlw	96	; case 223
  3796  002458  B4D8               	btfsc	status,2,c
  3797  00245A  D7D0               	goto	l4829
  3798  00245C  D7D8               	goto	l369
  3799  00245E                     l4837:
  3800                           
  3801                           ; BSR set to: 1
  3802                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3803  00245E  0E00               	movlw	0
  3804  002460  0100               	movlb	0	; () banked
  3805  002462  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3806  002464  0E00               	movlw	0
  3807  002466  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3808  002468  0E00               	movlw	0
  3809  00246A  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3810  00246C  0E00               	movlw	0
  3811  00246E  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3812  002470  C113  F0D1         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3813  002474  0E00               	movlw	0
  3814  002476  ECC9  F000         	call	_CANSetFilter
  3815                           
  3816                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3817  00247A  0E00               	movlw	0
  3818  00247C  0100               	movlb	0	; () banked
  3819  00247E  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3820  002480  0E00               	movlw	0
  3821  002482  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3822  002484  0E00               	movlw	0
  3823  002486  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3824  002488  0E00               	movlw	0
  3825  00248A  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3826  00248C  C113  F0D1         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3827  002490  0E01               	movlw	1
  3828  002492  ECC9  F000         	call	_CANSetFilter
  3829                           
  3830                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3831  002496  0E00               	movlw	0
  3832  002498  0100               	movlb	0	; () banked
  3833  00249A  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3834  00249C  0E00               	movlw	0
  3835  00249E  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3836  0024A0  0E00               	movlw	0
  3837  0024A2  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3838  0024A4  0E00               	movlw	0
  3839  0024A6  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3840  0024A8  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3841  0024AC  0E02               	movlw	2
  3842  0024AE  ECC9  F000         	call	_CANSetFilter
  3843                           
  3844                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3845  0024B2  0E00               	movlw	0
  3846  0024B4  0100               	movlb	0	; () banked
  3847  0024B6  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3848  0024B8  0E00               	movlw	0
  3849  0024BA  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3850  0024BC  0E00               	movlw	0
  3851  0024BE  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3852  0024C0  0E00               	movlw	0
  3853  0024C2  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3854  0024C4  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3855  0024C8  0E03               	movlw	3
  3856  0024CA  ECC9  F000         	call	_CANSetFilter
  3857                           
  3858                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3859  0024CE  0E00               	movlw	0
  3860  0024D0  0100               	movlb	0	; () banked
  3861  0024D2  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3862  0024D4  0E00               	movlw	0
  3863  0024D6  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3864  0024D8  0E00               	movlw	0
  3865  0024DA  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3866  0024DC  0E00               	movlw	0
  3867  0024DE  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3868  0024E0  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3869  0024E4  0E04               	movlw	4
  3870  0024E6  ECC9  F000         	call	_CANSetFilter
  3871                           
  3872                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3873  0024EA  0E00               	movlw	0
  3874  0024EC  0100               	movlb	0	; () banked
  3875  0024EE  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3876  0024F0  0E00               	movlw	0
  3877  0024F2  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3878  0024F4  0E00               	movlw	0
  3879  0024F6  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3880  0024F8  0E00               	movlw	0
  3881  0024FA  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3882  0024FC  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3883  002500  0E05               	movlw	5
  3884  002502  ECC9  F000         	call	_CANSetFilter
  3885                           
  3886                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3887  002506  0E00               	movlw	0
  3888  002508  EC82  F016         	call	_CANOperationMode
  3889  00250C  0012               	return		;funcret
  3890  00250E                     __end_of_CANInitialize:
  3891                           	opt stack 0
  3892                           tblptru	equ	0xFF8
  3893                           tblptrh	equ	0xFF7
  3894                           tblptrl	equ	0xFF6
  3895                           tablat	equ	0xFF5
  3896                           prodh	equ	0xFF4
  3897                           prodl	equ	0xFF3
  3898                           intcon	equ	0xFF2
  3899                           intcon2	equ	0xFF1
  3900                           intcon3	equ	0xFF0
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           postdec1	equ	0xFE5
  3904                           fsr1l	equ	0xFE1
  3905                           indf2	equ	0xFDF
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8
  3909                           
  3910 ;; *************** function _CANSetMask *****************
  3911 ;; Defined at:
  3912 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  numBuffer       1    wreg     enum E16919
  3915 ;;  mask            4   36[BANK0 ] unsigned long 
  3916 ;;  type            1   40[BANK0 ] enum E16885
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  numBuffer       1    4[BANK1 ] enum E16919
  3919 ;;  tamp            4    5[BANK1 ] unsigned long 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;		None               void
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3929 ;;      Params:         0       5       0       0
  3930 ;;      Locals:         0       0       5       0
  3931 ;;      Temps:          0       0       4       0
  3932 ;;      Totals:         0       5       9       0
  3933 ;;Total ram usage:       14 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    4
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_CANInitialize
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text7
  3944  00198A                     __ptext7:
  3945                           	opt stack 0
  3946  00198A                     _CANSetMask:
  3947                           	opt stack 24
  3948                           
  3949                           ;incstack = 0
  3950                           ;CANSetMask@numBuffer stored from wreg
  3951  00198A  0101               	movlb	1	; () banked
  3952  00198C  6F04               	movwf	CANSetMask@numBuffer& (0+255),b
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3956  00198E  0101               	movlb	1	; () banked
  3957  001990  0504               	decf	CANSetMask@numBuffer& (0+255),w,b
  3958  001992  A4D8               	btfss	status,2,c
  3959  001994  D057               	goto	l4399
  3960                           
  3961                           ; BSR set to: 1
  3962  001996  0100               	movlb	0	; () banked
  3963  001998  29D1               	incf	CANSetMask@type& (0+255),w,b
  3964  00199A  A4D8               	btfss	status,2,c
  3965  00199C  D053               	goto	l4399
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;inc\CANlib.h: 644: {
  3969                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3970  00199E  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  3971  0019A2  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3972  0019A6  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3973  0019AA  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3974  0019AE  0E04               	movlw	4
  3975  0019B0  D006               	goto	u5180
  3976  0019B2                     u5185:
  3977  0019B2  0101               	movlb	1	; () banked
  3978  0019B4  90D8               	bcf	status,0,c
  3979  0019B6  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3980  0019B8  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3981  0019BA  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3982  0019BC  3300               	rrcf	??_CANSetMask& (0+255),f,b
  3983  0019BE                     u5180:
  3984  0019BE  2EE8               	decfsz	wreg,f,c
  3985  0019C0  D7F8               	goto	u5185
  3986  0019C2  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  3987  0019C6  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3988  0019CA  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3989  0019CE  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3990                           
  3991                           ; BSR set to: 1
  3992                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3993  0019D2  0101               	movlb	1	; () banked
  3994  0019D4  5105               	movf	CANSetMask@tamp& (0+255),w,b
  3995  0019D6  0101               	movlb	1	; () banked
  3996  0019D8  6F05               	movwf	CANSetMask@tamp& (0+255),b
  3997  0019DA  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3998  0019DC  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3999  0019DE  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4000                           
  4001                           ; BSR set to: 1
  4002                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4003  0019E0  C105  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4004                           
  4005                           ; BSR set to: 1
  4006                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4007  0019E4  0E07               	movlw	7
  4008  0019E6  0100               	movlb	0	; () banked
  4009  0019E8  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  4010  0019EA  0101               	movlb	1	; () banked
  4011  0019EC  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4012  0019EE  0E00               	movlw	0
  4013  0019F0  0100               	movlb	0	; () banked
  4014  0019F2  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4015  0019F4  0101               	movlb	1	; () banked
  4016  0019F6  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4017  0019F8  0E00               	movlw	0
  4018  0019FA  0100               	movlb	0	; () banked
  4019  0019FC  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4020  0019FE  0101               	movlb	1	; () banked
  4021  001A00  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4022  001A02  0E00               	movlw	0
  4023  001A04  0100               	movlb	0	; () banked
  4024  001A06  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4025  001A08  0101               	movlb	1	; () banked
  4026  001A0A  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4030  001A0C  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  4031  001A10  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4032  001A14  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4033  001A18  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4034  001A1C  0E05               	movlw	5
  4035  001A1E                     u5195:
  4036  001A1E  90D8               	bcf	status,0,c
  4037  001A20  0101               	movlb	1	; () banked
  4038  001A22  3700               	rlcf	??_CANSetMask& (0+255),f,b
  4039  001A24  3701               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4040  001A26  3702               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4041  001A28  3703               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4042  001A2A  2EE8               	decfsz	wreg,f,c
  4043  001A2C  D7F8               	goto	u5195
  4044  001A2E  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4045  001A32  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4046  001A36  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4047  001A3A  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4048                           
  4049                           ; BSR set to: 1
  4050                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4051  001A3E  C105  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4052  001A42  D000               	goto	l4399
  4053  001A44                     l4399:
  4054                           
  4055                           ;inc\CANlib.h: 652: }
  4056                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4057  001A44  0E02               	movlw	2
  4058  001A46  0101               	movlb	1	; () banked
  4059  001A48  1904               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4060  001A4A  A4D8               	btfss	status,2,c
  4061  001A4C  D057               	goto	l4415
  4062                           
  4063                           ; BSR set to: 1
  4064  001A4E  0100               	movlb	0	; () banked
  4065  001A50  29D1               	incf	CANSetMask@type& (0+255),w,b
  4066  001A52  A4D8               	btfss	status,2,c
  4067  001A54  D053               	goto	l4415
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 655: {
  4071                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4072  001A56  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  4073  001A5A  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4074  001A5E  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4075  001A62  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4076  001A66  0E04               	movlw	4
  4077  001A68  D006               	goto	u5220
  4078  001A6A                     u5225:
  4079  001A6A  0101               	movlb	1	; () banked
  4080  001A6C  90D8               	bcf	status,0,c
  4081  001A6E  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4082  001A70  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4083  001A72  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4084  001A74  3300               	rrcf	??_CANSetMask& (0+255),f,b
  4085  001A76                     u5220:
  4086  001A76  2EE8               	decfsz	wreg,f,c
  4087  001A78  D7F8               	goto	u5225
  4088  001A7A  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4089  001A7E  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4090  001A82  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4091  001A86  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4095  001A8A  0101               	movlb	1	; () banked
  4096  001A8C  5105               	movf	CANSetMask@tamp& (0+255),w,b
  4097  001A8E  0101               	movlb	1	; () banked
  4098  001A90  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4099  001A92  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4100  001A94  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4101  001A96  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4102                           
  4103                           ; BSR set to: 1
  4104                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4105  001A98  C105  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4106                           
  4107                           ; BSR set to: 1
  4108                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4109  001A9C  0E07               	movlw	7
  4110  001A9E  0100               	movlb	0	; () banked
  4111  001AA0  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  4112  001AA2  0101               	movlb	1	; () banked
  4113  001AA4  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4114  001AA6  0E00               	movlw	0
  4115  001AA8  0100               	movlb	0	; () banked
  4116  001AAA  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4117  001AAC  0101               	movlb	1	; () banked
  4118  001AAE  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4119  001AB0  0E00               	movlw	0
  4120  001AB2  0100               	movlb	0	; () banked
  4121  001AB4  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4122  001AB6  0101               	movlb	1	; () banked
  4123  001AB8  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4124  001ABA  0E00               	movlw	0
  4125  001ABC  0100               	movlb	0	; () banked
  4126  001ABE  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4127  001AC0  0101               	movlb	1	; () banked
  4128  001AC2  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4129                           
  4130                           ; BSR set to: 1
  4131                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4132  001AC4  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  4133  001AC8  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4134  001ACC  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4135  001AD0  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4136  001AD4  0E05               	movlw	5
  4137  001AD6                     u5235:
  4138  001AD6  90D8               	bcf	status,0,c
  4139  001AD8  0101               	movlb	1	; () banked
  4140  001ADA  3700               	rlcf	??_CANSetMask& (0+255),f,b
  4141  001ADC  3701               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4142  001ADE  3702               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4143  001AE0  3703               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4144  001AE2  2EE8               	decfsz	wreg,f,c
  4145  001AE4  D7F8               	goto	u5235
  4146  001AE6  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4147  001AEA  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4148  001AEE  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4149  001AF2  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4150                           
  4151                           ; BSR set to: 1
  4152                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4153  001AF6  C105  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4154  001AFA  D000               	goto	l4415
  4155  001AFC                     l4415:
  4156                           
  4157                           ;inc\CANlib.h: 663: }
  4158                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4159  001AFC  0101               	movlb	1	; () banked
  4160  001AFE  0504               	decf	CANSetMask@numBuffer& (0+255),w,b
  4161  001B00  A4D8               	btfss	status,2,c
  4162  001B02  D089               	goto	l4447
  4163                           
  4164                           ; BSR set to: 1
  4165  001B04  0EF7               	movlw	247
  4166  001B06  0100               	movlb	0	; () banked
  4167  001B08  19D1               	xorwf	CANSetMask@type& (0+255),w,b
  4168  001B0A  A4D8               	btfss	status,2,c
  4169  001B0C  D084               	goto	l4447
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;inc\CANlib.h: 666: {
  4173                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4174  001B0E  0100               	movlb	0	; () banked
  4175  001B10  51CD               	movf	CANSetMask@mask& (0+255),w,b
  4176  001B12  0101               	movlb	1	; () banked
  4177  001B14  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4178  001B16  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4179  001B18  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4180  001B1A  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4181                           
  4182                           ; BSR set to: 1
  4183                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4184  001B1C  C105  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4188  001B20  0E00               	movlw	0
  4189  001B22  0100               	movlb	0	; () banked
  4190  001B24  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  4191  001B26  0101               	movlb	1	; () banked
  4192  001B28  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4193  001B2A  0EFF               	movlw	255
  4194  001B2C  0100               	movlb	0	; () banked
  4195  001B2E  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4196  001B30  0101               	movlb	1	; () banked
  4197  001B32  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4198  001B34  0E00               	movlw	0
  4199  001B36  0100               	movlb	0	; () banked
  4200  001B38  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4201  001B3A  0101               	movlb	1	; () banked
  4202  001B3C  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4203  001B3E  0E00               	movlw	0
  4204  001B40  0100               	movlb	0	; () banked
  4205  001B42  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4206  001B44  0101               	movlb	1	; () banked
  4207  001B46  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4208                           
  4209                           ; BSR set to: 1
  4210                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4211  001B48  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  4212  001B4C  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4213  001B50  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4214  001B54  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4215  001B58  C101  F100         	movff	??_CANSetMask+1,??_CANSetMask
  4216  001B5C  C102  F101         	movff	??_CANSetMask+2,??_CANSetMask+1
  4217  001B60  C103  F102         	movff	??_CANSetMask+3,??_CANSetMask+2
  4218  001B64  0101               	movlb	1	; () banked
  4219  001B66  6B03               	clrf	(??_CANSetMask+3)& (0+255),b
  4220  001B68  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4221  001B6C  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4222  001B70  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4223  001B74  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4227  001B78  C105  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4228                           
  4229                           ; BSR set to: 1
  4230                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4231  001B7C  0100               	movlb	0	; () banked
  4232  001B7E  A1CF               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4233  001B80  D003               	goto	l442
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4237  001B82  010F               	movlb	15	; () banked
  4238  001B84  8119               	bsf	25,0,b	;volatile
  4239  001B86  D002               	goto	l443
  4240  001B88                     l442:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;inc\CANlib.h: 676: else
  4244                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4245  001B88  010F               	movlb	15	; () banked
  4246  001B8A  9119               	bcf	25,0,b	;volatile
  4247  001B8C                     l443:
  4248                           
  4249                           ; BSR set to: 15
  4250                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4251  001B8C  0100               	movlb	0	; () banked
  4252  001B8E  A3CF               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4253  001B90  D003               	goto	l444
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4257  001B92  010F               	movlb	15	; () banked
  4258  001B94  8319               	bsf	25,1,b	;volatile
  4259  001B96  D002               	goto	l445
  4260  001B98                     l444:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 681: else
  4264                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4265  001B98  010F               	movlb	15	; () banked
  4266  001B9A  9319               	bcf	25,1,b	;volatile
  4267  001B9C                     l445:
  4268                           
  4269                           ; BSR set to: 15
  4270                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4271  001B9C  0100               	movlb	0	; () banked
  4272  001B9E  A5CF               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4273  001BA0  D003               	goto	l446
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4277  001BA2  010F               	movlb	15	; () banked
  4278  001BA4  8B19               	bsf	25,5,b	;volatile
  4279  001BA6  D002               	goto	l447
  4280  001BA8                     l446:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 686: else
  4284                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4285  001BA8  010F               	movlb	15	; () banked
  4286  001BAA  9B19               	bcf	25,5,b	;volatile
  4287  001BAC                     l447:
  4288                           
  4289                           ; BSR set to: 15
  4290                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4291  001BAC  0100               	movlb	0	; () banked
  4292  001BAE  A7CF               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4293  001BB0  D003               	goto	l448
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4297  001BB2  010F               	movlb	15	; () banked
  4298  001BB4  8D19               	bsf	25,6,b	;volatile
  4299  001BB6  D002               	goto	l449
  4300  001BB8                     l448:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;inc\CANlib.h: 691: else
  4304                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4305  001BB8  010F               	movlb	15	; () banked
  4306  001BBA  9D19               	bcf	25,6,b	;volatile
  4307  001BBC                     l449:
  4308                           
  4309                           ; BSR set to: 15
  4310                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4311  001BBC  0100               	movlb	0	; () banked
  4312  001BBE  A9CF               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4313  001BC0  D003               	goto	l450
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4317  001BC2  010F               	movlb	15	; () banked
  4318  001BC4  8F19               	bsf	25,7,b	;volatile
  4319  001BC6  D003               	goto	l4441
  4320  001BC8                     l450:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;inc\CANlib.h: 696: else
  4324                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4325  001BC8  010F               	movlb	15	; () banked
  4326  001BCA  9F19               	bcf	25,7,b	;volatile
  4327  001BCC  D000               	goto	l4441
  4328  001BCE                     l4441:
  4329                           
  4330                           ; BSR set to: 15
  4331                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4332  001BCE  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  4333  001BD2  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4334  001BD6  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4335  001BDA  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4336  001BDE  0E16               	movlw	22
  4337  001BE0  D006               	goto	u5310
  4338  001BE2                     u5315:
  4339  001BE2  0101               	movlb	1	; () banked
  4340  001BE4  90D8               	bcf	status,0,c
  4341  001BE6  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4342  001BE8  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4343  001BEA  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4344  001BEC  3300               	rrcf	??_CANSetMask& (0+255),f,b
  4345  001BEE                     u5310:
  4346  001BEE  2EE8               	decfsz	wreg,f,c
  4347  001BF0  D7F8               	goto	u5315
  4348  001BF2  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4349  001BF6  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4350  001BFA  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4351  001BFE  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4352                           
  4353                           ; BSR set to: 1
  4354                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4355  001C02  0101               	movlb	1	; () banked
  4356  001C04  5105               	movf	CANSetMask@tamp& (0+255),w,b
  4357  001C06  0101               	movlb	1	; () banked
  4358  001C08  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4359  001C0A  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4360  001C0C  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4361  001C0E  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4365  001C10  C105  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4366  001C14  D000               	goto	l4447
  4367  001C16                     l4447:
  4368                           
  4369                           ;inc\CANlib.h: 702: }
  4370                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4371  001C16  0E02               	movlw	2
  4372  001C18  0101               	movlb	1	; () banked
  4373  001C1A  1904               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4374  001C1C  A4D8               	btfss	status,2,c
  4375  001C1E  D089               	goto	l463
  4376                           
  4377                           ; BSR set to: 1
  4378  001C20  0EF7               	movlw	247
  4379  001C22  0100               	movlb	0	; () banked
  4380  001C24  19D1               	xorwf	CANSetMask@type& (0+255),w,b
  4381  001C26  A4D8               	btfss	status,2,c
  4382  001C28  D084               	goto	l463
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;inc\CANlib.h: 705: {
  4386                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4387  001C2A  0100               	movlb	0	; () banked
  4388  001C2C  51CD               	movf	CANSetMask@mask& (0+255),w,b
  4389  001C2E  0101               	movlb	1	; () banked
  4390  001C30  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4391  001C32  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4392  001C34  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4393  001C36  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4394                           
  4395                           ; BSR set to: 1
  4396                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4397  001C38  C105  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4398                           
  4399                           ; BSR set to: 1
  4400                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4401  001C3C  0E00               	movlw	0
  4402  001C3E  0100               	movlb	0	; () banked
  4403  001C40  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  4404  001C42  0101               	movlb	1	; () banked
  4405  001C44  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4406  001C46  0EFF               	movlw	255
  4407  001C48  0100               	movlb	0	; () banked
  4408  001C4A  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4409  001C4C  0101               	movlb	1	; () banked
  4410  001C4E  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4411  001C50  0E00               	movlw	0
  4412  001C52  0100               	movlb	0	; () banked
  4413  001C54  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4414  001C56  0101               	movlb	1	; () banked
  4415  001C58  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4416  001C5A  0E00               	movlw	0
  4417  001C5C  0100               	movlb	0	; () banked
  4418  001C5E  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4419  001C60  0101               	movlb	1	; () banked
  4420  001C62  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4421                           
  4422                           ; BSR set to: 1
  4423                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4424  001C64  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  4425  001C68  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4426  001C6C  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4427  001C70  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4428  001C74  C101  F100         	movff	??_CANSetMask+1,??_CANSetMask
  4429  001C78  C102  F101         	movff	??_CANSetMask+2,??_CANSetMask+1
  4430  001C7C  C103  F102         	movff	??_CANSetMask+3,??_CANSetMask+2
  4431  001C80  0101               	movlb	1	; () banked
  4432  001C82  6B03               	clrf	(??_CANSetMask+3)& (0+255),b
  4433  001C84  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4434  001C88  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4435  001C8C  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4436  001C90  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4437                           
  4438                           ; BSR set to: 1
  4439                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4440  001C94  C105  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4441                           
  4442                           ; BSR set to: 1
  4443                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4444  001C98  0100               	movlb	0	; () banked
  4445  001C9A  A1CF               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4446  001C9C  D003               	goto	l453
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4450  001C9E  010F               	movlb	15	; () banked
  4451  001CA0  811D               	bsf	29,0,b	;volatile
  4452  001CA2  D002               	goto	l454
  4453  001CA4                     l453:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 715: else
  4457                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4458  001CA4  010F               	movlb	15	; () banked
  4459  001CA6  911D               	bcf	29,0,b	;volatile
  4460  001CA8                     l454:
  4461                           
  4462                           ; BSR set to: 15
  4463                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4464  001CA8  0100               	movlb	0	; () banked
  4465  001CAA  A3CF               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4466  001CAC  D003               	goto	l455
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4470  001CAE  010F               	movlb	15	; () banked
  4471  001CB0  831D               	bsf	29,1,b	;volatile
  4472  001CB2  D002               	goto	l456
  4473  001CB4                     l455:
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;inc\CANlib.h: 720: else
  4477                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4478  001CB4  010F               	movlb	15	; () banked
  4479  001CB6  931D               	bcf	29,1,b	;volatile
  4480  001CB8                     l456:
  4481                           
  4482                           ; BSR set to: 15
  4483                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4484  001CB8  0100               	movlb	0	; () banked
  4485  001CBA  A5CF               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4486  001CBC  D003               	goto	l457
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4490  001CBE  010F               	movlb	15	; () banked
  4491  001CC0  8B1D               	bsf	29,5,b	;volatile
  4492  001CC2  D002               	goto	l458
  4493  001CC4                     l457:
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;inc\CANlib.h: 725: else
  4497                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4498  001CC4  010F               	movlb	15	; () banked
  4499  001CC6  9B1D               	bcf	29,5,b	;volatile
  4500  001CC8                     l458:
  4501                           
  4502                           ; BSR set to: 15
  4503                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4504  001CC8  0100               	movlb	0	; () banked
  4505  001CCA  A7CF               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4506  001CCC  D003               	goto	l459
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4510  001CCE  010F               	movlb	15	; () banked
  4511  001CD0  8D1D               	bsf	29,6,b	;volatile
  4512  001CD2  D002               	goto	l460
  4513  001CD4                     l459:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;inc\CANlib.h: 730: else
  4517                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4518  001CD4  010F               	movlb	15	; () banked
  4519  001CD6  9D1D               	bcf	29,6,b	;volatile
  4520  001CD8                     l460:
  4521                           
  4522                           ; BSR set to: 15
  4523                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4524  001CD8  0100               	movlb	0	; () banked
  4525  001CDA  A9CF               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4526  001CDC  D003               	goto	l461
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4530  001CDE  010F               	movlb	15	; () banked
  4531  001CE0  8F1D               	bsf	29,7,b	;volatile
  4532  001CE2  D003               	goto	l4473
  4533  001CE4                     l461:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;inc\CANlib.h: 735: else
  4537                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4538  001CE4  010F               	movlb	15	; () banked
  4539  001CE6  9F1D               	bcf	29,7,b	;volatile
  4540  001CE8  D000               	goto	l4473
  4541  001CEA                     l4473:
  4542                           
  4543                           ; BSR set to: 15
  4544                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4545  001CEA  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  4546  001CEE  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4547  001CF2  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4548  001CF6  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4549  001CFA  0E16               	movlw	22
  4550  001CFC  D006               	goto	u5390
  4551  001CFE                     u5395:
  4552  001CFE  0101               	movlb	1	; () banked
  4553  001D00  90D8               	bcf	status,0,c
  4554  001D02  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4555  001D04  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4556  001D06  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4557  001D08  3300               	rrcf	??_CANSetMask& (0+255),f,b
  4558  001D0A                     u5390:
  4559  001D0A  2EE8               	decfsz	wreg,f,c
  4560  001D0C  D7F8               	goto	u5395
  4561  001D0E  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4562  001D12  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4563  001D16  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4564  001D1A  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4565                           
  4566                           ; BSR set to: 1
  4567                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4568  001D1E  0101               	movlb	1	; () banked
  4569  001D20  5105               	movf	CANSetMask@tamp& (0+255),w,b
  4570  001D22  0101               	movlb	1	; () banked
  4571  001D24  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4572  001D26  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4573  001D28  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4574  001D2A  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4575                           
  4576                           ; BSR set to: 1
  4577                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4578  001D2C  C105  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4579  001D30  D000               	goto	l463
  4580  001D32                     l463:
  4581  001D32  0012               	return		;funcret
  4582  001D34                     __end_of_CANSetMask:
  4583                           	opt stack 0
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           intcon2	equ	0xFF1
  4592                           intcon3	equ	0xFF0
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           postdec1	equ	0xFE5
  4596                           fsr1l	equ	0xFE1
  4597                           indf2	equ	0xFDF
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _CANSetFilter *****************
  4603 ;; Defined at:
  4604 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  numBuffer       1    wreg     enum E16922
  4607 ;;  filter          4   36[BANK0 ] unsigned long 
  4608 ;;  type            1   40[BANK0 ] enum E16885
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  numBuffer       1    4[BANK1 ] enum E16922
  4611 ;;  tamp            4    5[BANK1 ] unsigned long 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;		None               void
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4621 ;;      Params:         0       5       0       0
  4622 ;;      Locals:         0       0       5       0
  4623 ;;      Temps:          0       0       4       0
  4624 ;;      Totals:         0       5       9       0
  4625 ;;Total ram usage:       14 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    4
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_CANInitialize
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text8
  4636  000192                     __ptext8:
  4637                           	opt stack 0
  4638  000192                     _CANSetFilter:
  4639                           	opt stack 24
  4640                           
  4641                           ;incstack = 0
  4642                           ;CANSetFilter@numBuffer stored from wreg
  4643  000192  0101               	movlb	1	; () banked
  4644  000194  6F04               	movwf	CANSetFilter@numBuffer& (0+255),b
  4645                           
  4646                           ; BSR set to: 1
  4647                           ;inc\CANlib.h: 750: unsigned long tamp;
  4648                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4649  000196  0101               	movlb	1	; () banked
  4650  000198  5104               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4651  00019A  0101               	movlb	1	; () banked
  4652  00019C  A4D8               	btfss	status,2,c
  4653  00019E  D059               	goto	l4497
  4654                           
  4655                           ; BSR set to: 1
  4656  0001A0  0100               	movlb	0	; () banked
  4657  0001A2  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4658  0001A4  A4D8               	btfss	status,2,c
  4659  0001A6  D055               	goto	l4497
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;inc\CANlib.h: 753: {
  4663                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4664  0001A8  010F               	movlb	15	; () banked
  4665  0001AA  9701               	bcf	1,3,b	;volatile
  4666                           
  4667                           ; BSR set to: 15
  4668                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4669  0001AC  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4670  0001B0  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4671  0001B4  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4672  0001B8  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4673  0001BC  0E04               	movlw	4
  4674  0001BE  D006               	goto	u5420
  4675  0001C0                     u5425:
  4676  0001C0  0101               	movlb	1	; () banked
  4677  0001C2  90D8               	bcf	status,0,c
  4678  0001C4  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4679  0001C6  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4680  0001C8  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4681  0001CA  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  4682  0001CC                     u5420:
  4683  0001CC  2EE8               	decfsz	wreg,f,c
  4684  0001CE  D7F8               	goto	u5425
  4685  0001D0  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4686  0001D4  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4687  0001D8  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4688  0001DC  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4689                           
  4690                           ; BSR set to: 1
  4691                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4692  0001E0  0101               	movlb	1	; () banked
  4693  0001E2  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  4694  0001E4  0101               	movlb	1	; () banked
  4695  0001E6  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4696  0001E8  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4697  0001EA  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4698  0001EC  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4702  0001EE  C105  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4703                           
  4704                           ; BSR set to: 1
  4705                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4706  0001F2  0E07               	movlw	7
  4707  0001F4  0100               	movlb	0	; () banked
  4708  0001F6  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  4709  0001F8  0101               	movlb	1	; () banked
  4710  0001FA  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4711  0001FC  0E00               	movlw	0
  4712  0001FE  0100               	movlb	0	; () banked
  4713  000200  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4714  000202  0101               	movlb	1	; () banked
  4715  000204  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4716  000206  0E00               	movlw	0
  4717  000208  0100               	movlb	0	; () banked
  4718  00020A  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4719  00020C  0101               	movlb	1	; () banked
  4720  00020E  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4721  000210  0E00               	movlw	0
  4722  000212  0100               	movlb	0	; () banked
  4723  000214  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4724  000216  0101               	movlb	1	; () banked
  4725  000218  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4726                           
  4727                           ; BSR set to: 1
  4728                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4729  00021A  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  4730  00021E  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4731  000222  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4732  000226  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4733  00022A  0E05               	movlw	5
  4734  00022C                     u5435:
  4735  00022C  90D8               	bcf	status,0,c
  4736  00022E  0101               	movlb	1	; () banked
  4737  000230  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  4738  000232  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4739  000234  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4740  000236  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4741  000238  2EE8               	decfsz	wreg,f,c
  4742  00023A  D7F8               	goto	u5435
  4743  00023C  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4744  000240  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4745  000244  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4746  000248  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4750  00024C  C105  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4751  000250  D000               	goto	l4497
  4752  000252                     l4497:
  4753                           
  4754                           ;inc\CANlib.h: 763: }
  4755                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4756  000252  0101               	movlb	1	; () banked
  4757  000254  0504               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4758  000256  A4D8               	btfss	status,2,c
  4759  000258  D059               	goto	l4515
  4760                           
  4761                           ; BSR set to: 1
  4762  00025A  0100               	movlb	0	; () banked
  4763  00025C  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4764  00025E  A4D8               	btfss	status,2,c
  4765  000260  D055               	goto	l4515
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;inc\CANlib.h: 766: {
  4769                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4770  000262  010F               	movlb	15	; () banked
  4771  000264  9705               	bcf	5,3,b	;volatile
  4772                           
  4773                           ; BSR set to: 15
  4774                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4775  000266  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4776  00026A  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4777  00026E  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4778  000272  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4779  000276  0E04               	movlw	4
  4780  000278  D006               	goto	u5460
  4781  00027A                     u5465:
  4782  00027A  0101               	movlb	1	; () banked
  4783  00027C  90D8               	bcf	status,0,c
  4784  00027E  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4785  000280  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4786  000282  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4787  000284  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  4788  000286                     u5460:
  4789  000286  2EE8               	decfsz	wreg,f,c
  4790  000288  D7F8               	goto	u5465
  4791  00028A  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4792  00028E  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4793  000292  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4794  000296  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4795                           
  4796                           ; BSR set to: 1
  4797                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4798  00029A  0101               	movlb	1	; () banked
  4799  00029C  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  4800  00029E  0101               	movlb	1	; () banked
  4801  0002A0  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4802  0002A2  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4803  0002A4  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4804  0002A6  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4805                           
  4806                           ; BSR set to: 1
  4807                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4808  0002A8  C105  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4809                           
  4810                           ; BSR set to: 1
  4811                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4812  0002AC  0E07               	movlw	7
  4813  0002AE  0100               	movlb	0	; () banked
  4814  0002B0  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  4815  0002B2  0101               	movlb	1	; () banked
  4816  0002B4  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4817  0002B6  0E00               	movlw	0
  4818  0002B8  0100               	movlb	0	; () banked
  4819  0002BA  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4820  0002BC  0101               	movlb	1	; () banked
  4821  0002BE  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4822  0002C0  0E00               	movlw	0
  4823  0002C2  0100               	movlb	0	; () banked
  4824  0002C4  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4825  0002C6  0101               	movlb	1	; () banked
  4826  0002C8  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4827  0002CA  0E00               	movlw	0
  4828  0002CC  0100               	movlb	0	; () banked
  4829  0002CE  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4830  0002D0  0101               	movlb	1	; () banked
  4831  0002D2  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4832                           
  4833                           ; BSR set to: 1
  4834                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4835  0002D4  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  4836  0002D8  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4837  0002DC  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4838  0002E0  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4839  0002E4  0E05               	movlw	5
  4840  0002E6                     u5475:
  4841  0002E6  90D8               	bcf	status,0,c
  4842  0002E8  0101               	movlb	1	; () banked
  4843  0002EA  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  4844  0002EC  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4845  0002EE  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4846  0002F0  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4847  0002F2  2EE8               	decfsz	wreg,f,c
  4848  0002F4  D7F8               	goto	u5475
  4849  0002F6  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4850  0002FA  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4851  0002FE  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4852  000302  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4853                           
  4854                           ; BSR set to: 1
  4855                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4856  000306  C105  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4857  00030A  D000               	goto	l4515
  4858  00030C                     l4515:
  4859                           
  4860                           ;inc\CANlib.h: 776: }
  4861                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4862  00030C  0E02               	movlw	2
  4863  00030E  0101               	movlb	1	; () banked
  4864  000310  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4865  000312  A4D8               	btfss	status,2,c
  4866  000314  D059               	goto	l4533
  4867                           
  4868                           ; BSR set to: 1
  4869  000316  0100               	movlb	0	; () banked
  4870  000318  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4871  00031A  A4D8               	btfss	status,2,c
  4872  00031C  D055               	goto	l4533
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;inc\CANlib.h: 779: {
  4876                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4877  00031E  010F               	movlb	15	; () banked
  4878  000320  9709               	bcf	9,3,b	;volatile
  4879                           
  4880                           ; BSR set to: 15
  4881                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4882  000322  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4883  000326  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4884  00032A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4885  00032E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4886  000332  0E04               	movlw	4
  4887  000334  D006               	goto	u5500
  4888  000336                     u5505:
  4889  000336  0101               	movlb	1	; () banked
  4890  000338  90D8               	bcf	status,0,c
  4891  00033A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4892  00033C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4893  00033E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4894  000340  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  4895  000342                     u5500:
  4896  000342  2EE8               	decfsz	wreg,f,c
  4897  000344  D7F8               	goto	u5505
  4898  000346  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4899  00034A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4900  00034E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4901  000352  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4902                           
  4903                           ; BSR set to: 1
  4904                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4905  000356  0101               	movlb	1	; () banked
  4906  000358  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  4907  00035A  0101               	movlb	1	; () banked
  4908  00035C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4909  00035E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4910  000360  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4911  000362  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4912                           
  4913                           ; BSR set to: 1
  4914                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4915  000364  C105  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4916                           
  4917                           ; BSR set to: 1
  4918                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4919  000368  0E07               	movlw	7
  4920  00036A  0100               	movlb	0	; () banked
  4921  00036C  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  4922  00036E  0101               	movlb	1	; () banked
  4923  000370  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4924  000372  0E00               	movlw	0
  4925  000374  0100               	movlb	0	; () banked
  4926  000376  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4927  000378  0101               	movlb	1	; () banked
  4928  00037A  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4929  00037C  0E00               	movlw	0
  4930  00037E  0100               	movlb	0	; () banked
  4931  000380  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4932  000382  0101               	movlb	1	; () banked
  4933  000384  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4934  000386  0E00               	movlw	0
  4935  000388  0100               	movlb	0	; () banked
  4936  00038A  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4937  00038C  0101               	movlb	1	; () banked
  4938  00038E  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4939                           
  4940                           ; BSR set to: 1
  4941                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4942  000390  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  4943  000394  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4944  000398  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4945  00039C  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4946  0003A0  0E05               	movlw	5
  4947  0003A2                     u5515:
  4948  0003A2  90D8               	bcf	status,0,c
  4949  0003A4  0101               	movlb	1	; () banked
  4950  0003A6  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  4951  0003A8  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4952  0003AA  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4953  0003AC  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4954  0003AE  2EE8               	decfsz	wreg,f,c
  4955  0003B0  D7F8               	goto	u5515
  4956  0003B2  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4957  0003B6  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4958  0003BA  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4959  0003BE  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4960                           
  4961                           ; BSR set to: 1
  4962                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4963  0003C2  C105  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4964  0003C6  D000               	goto	l4533
  4965  0003C8                     l4533:
  4966                           
  4967                           ;inc\CANlib.h: 789: }
  4968                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4969  0003C8  0E03               	movlw	3
  4970  0003CA  0101               	movlb	1	; () banked
  4971  0003CC  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4972  0003CE  A4D8               	btfss	status,2,c
  4973  0003D0  D059               	goto	l4551
  4974                           
  4975                           ; BSR set to: 1
  4976  0003D2  0100               	movlb	0	; () banked
  4977  0003D4  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4978  0003D6  A4D8               	btfss	status,2,c
  4979  0003D8  D055               	goto	l4551
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 792: {
  4983                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4984  0003DA  010F               	movlb	15	; () banked
  4985  0003DC  970D               	bcf	13,3,b	;volatile
  4986                           
  4987                           ; BSR set to: 15
  4988                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4989  0003DE  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4990  0003E2  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4991  0003E6  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4992  0003EA  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4993  0003EE  0E04               	movlw	4
  4994  0003F0  D006               	goto	u5540
  4995  0003F2                     u5545:
  4996  0003F2  0101               	movlb	1	; () banked
  4997  0003F4  90D8               	bcf	status,0,c
  4998  0003F6  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4999  0003F8  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5000  0003FA  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5001  0003FC  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5002  0003FE                     u5540:
  5003  0003FE  2EE8               	decfsz	wreg,f,c
  5004  000400  D7F8               	goto	u5545
  5005  000402  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5006  000406  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5007  00040A  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5008  00040E  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5009                           
  5010                           ; BSR set to: 1
  5011                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5012  000412  0101               	movlb	1	; () banked
  5013  000414  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5014  000416  0101               	movlb	1	; () banked
  5015  000418  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5016  00041A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5017  00041C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5018  00041E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5019                           
  5020                           ; BSR set to: 1
  5021                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5022  000420  C105  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5023                           
  5024                           ; BSR set to: 1
  5025                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5026  000424  0E07               	movlw	7
  5027  000426  0100               	movlb	0	; () banked
  5028  000428  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5029  00042A  0101               	movlb	1	; () banked
  5030  00042C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5031  00042E  0E00               	movlw	0
  5032  000430  0100               	movlb	0	; () banked
  5033  000432  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5034  000434  0101               	movlb	1	; () banked
  5035  000436  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5036  000438  0E00               	movlw	0
  5037  00043A  0100               	movlb	0	; () banked
  5038  00043C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5039  00043E  0101               	movlb	1	; () banked
  5040  000440  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5041  000442  0E00               	movlw	0
  5042  000444  0100               	movlb	0	; () banked
  5043  000446  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5044  000448  0101               	movlb	1	; () banked
  5045  00044A  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5046                           
  5047                           ; BSR set to: 1
  5048                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5049  00044C  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5050  000450  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5051  000454  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5052  000458  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5053  00045C  0E05               	movlw	5
  5054  00045E                     u5555:
  5055  00045E  90D8               	bcf	status,0,c
  5056  000460  0101               	movlb	1	; () banked
  5057  000462  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  5058  000464  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5059  000466  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5060  000468  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5061  00046A  2EE8               	decfsz	wreg,f,c
  5062  00046C  D7F8               	goto	u5555
  5063  00046E  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5064  000472  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5065  000476  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5066  00047A  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5067                           
  5068                           ; BSR set to: 1
  5069                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5070  00047E  C105  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5071  000482  D000               	goto	l4551
  5072  000484                     l4551:
  5073                           
  5074                           ;inc\CANlib.h: 802: }
  5075                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5076  000484  0E04               	movlw	4
  5077  000486  0101               	movlb	1	; () banked
  5078  000488  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5079  00048A  A4D8               	btfss	status,2,c
  5080  00048C  D059               	goto	l4569
  5081                           
  5082                           ; BSR set to: 1
  5083  00048E  0100               	movlb	0	; () banked
  5084  000490  29D1               	incf	CANSetFilter@type& (0+255),w,b
  5085  000492  A4D8               	btfss	status,2,c
  5086  000494  D055               	goto	l4569
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;inc\CANlib.h: 805: {
  5090                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5091  000496  010F               	movlb	15	; () banked
  5092  000498  9711               	bcf	17,3,b	;volatile
  5093                           
  5094                           ; BSR set to: 15
  5095                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5096  00049A  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5097  00049E  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5098  0004A2  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5099  0004A6  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5100  0004AA  0E04               	movlw	4
  5101  0004AC  D006               	goto	u5580
  5102  0004AE                     u5585:
  5103  0004AE  0101               	movlb	1	; () banked
  5104  0004B0  90D8               	bcf	status,0,c
  5105  0004B2  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5106  0004B4  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5107  0004B6  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5108  0004B8  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5109  0004BA                     u5580:
  5110  0004BA  2EE8               	decfsz	wreg,f,c
  5111  0004BC  D7F8               	goto	u5585
  5112  0004BE  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5113  0004C2  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5114  0004C6  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5115  0004CA  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5116                           
  5117                           ; BSR set to: 1
  5118                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5119  0004CE  0101               	movlb	1	; () banked
  5120  0004D0  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5121  0004D2  0101               	movlb	1	; () banked
  5122  0004D4  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5123  0004D6  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5124  0004D8  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5125  0004DA  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5126                           
  5127                           ; BSR set to: 1
  5128                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5129  0004DC  C105  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5130                           
  5131                           ; BSR set to: 1
  5132                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5133  0004E0  0E07               	movlw	7
  5134  0004E2  0100               	movlb	0	; () banked
  5135  0004E4  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5136  0004E6  0101               	movlb	1	; () banked
  5137  0004E8  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5138  0004EA  0E00               	movlw	0
  5139  0004EC  0100               	movlb	0	; () banked
  5140  0004EE  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5141  0004F0  0101               	movlb	1	; () banked
  5142  0004F2  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5143  0004F4  0E00               	movlw	0
  5144  0004F6  0100               	movlb	0	; () banked
  5145  0004F8  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5146  0004FA  0101               	movlb	1	; () banked
  5147  0004FC  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5148  0004FE  0E00               	movlw	0
  5149  000500  0100               	movlb	0	; () banked
  5150  000502  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5151  000504  0101               	movlb	1	; () banked
  5152  000506  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5153                           
  5154                           ; BSR set to: 1
  5155                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5156  000508  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5157  00050C  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5158  000510  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5159  000514  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5160  000518  0E05               	movlw	5
  5161  00051A                     u5595:
  5162  00051A  90D8               	bcf	status,0,c
  5163  00051C  0101               	movlb	1	; () banked
  5164  00051E  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  5165  000520  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5166  000522  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5167  000524  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5168  000526  2EE8               	decfsz	wreg,f,c
  5169  000528  D7F8               	goto	u5595
  5170  00052A  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5171  00052E  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5172  000532  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5173  000536  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5174                           
  5175                           ; BSR set to: 1
  5176                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5177  00053A  C105  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5178  00053E  D000               	goto	l4569
  5179  000540                     l4569:
  5180                           
  5181                           ;inc\CANlib.h: 815: }
  5182                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5183  000540  0E05               	movlw	5
  5184  000542  0101               	movlb	1	; () banked
  5185  000544  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5186  000546  A4D8               	btfss	status,2,c
  5187  000548  D059               	goto	l4587
  5188                           
  5189                           ; BSR set to: 1
  5190  00054A  0100               	movlb	0	; () banked
  5191  00054C  29D1               	incf	CANSetFilter@type& (0+255),w,b
  5192  00054E  A4D8               	btfss	status,2,c
  5193  000550  D055               	goto	l4587
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;inc\CANlib.h: 818: {
  5197                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5198  000552  010F               	movlb	15	; () banked
  5199  000554  9715               	bcf	21,3,b	;volatile
  5200                           
  5201                           ; BSR set to: 15
  5202                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5203  000556  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5204  00055A  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5205  00055E  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5206  000562  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5207  000566  0E04               	movlw	4
  5208  000568  D006               	goto	u5620
  5209  00056A                     u5625:
  5210  00056A  0101               	movlb	1	; () banked
  5211  00056C  90D8               	bcf	status,0,c
  5212  00056E  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5213  000570  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5214  000572  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5215  000574  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5216  000576                     u5620:
  5217  000576  2EE8               	decfsz	wreg,f,c
  5218  000578  D7F8               	goto	u5625
  5219  00057A  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5220  00057E  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5221  000582  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5222  000586  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5223                           
  5224                           ; BSR set to: 1
  5225                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5226  00058A  0101               	movlb	1	; () banked
  5227  00058C  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5228  00058E  0101               	movlb	1	; () banked
  5229  000590  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5230  000592  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5231  000594  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5232  000596  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5233                           
  5234                           ; BSR set to: 1
  5235                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5236  000598  C105  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5237                           
  5238                           ; BSR set to: 1
  5239                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5240  00059C  0E07               	movlw	7
  5241  00059E  0100               	movlb	0	; () banked
  5242  0005A0  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5243  0005A2  0101               	movlb	1	; () banked
  5244  0005A4  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5245  0005A6  0E00               	movlw	0
  5246  0005A8  0100               	movlb	0	; () banked
  5247  0005AA  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5248  0005AC  0101               	movlb	1	; () banked
  5249  0005AE  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5250  0005B0  0E00               	movlw	0
  5251  0005B2  0100               	movlb	0	; () banked
  5252  0005B4  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5253  0005B6  0101               	movlb	1	; () banked
  5254  0005B8  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5255  0005BA  0E00               	movlw	0
  5256  0005BC  0100               	movlb	0	; () banked
  5257  0005BE  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5258  0005C0  0101               	movlb	1	; () banked
  5259  0005C2  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5260                           
  5261                           ; BSR set to: 1
  5262                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5263  0005C4  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5264  0005C8  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5265  0005CC  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5266  0005D0  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5267  0005D4  0E05               	movlw	5
  5268  0005D6                     u5635:
  5269  0005D6  90D8               	bcf	status,0,c
  5270  0005D8  0101               	movlb	1	; () banked
  5271  0005DA  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  5272  0005DC  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5273  0005DE  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5274  0005E0  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5275  0005E2  2EE8               	decfsz	wreg,f,c
  5276  0005E4  D7F8               	goto	u5635
  5277  0005E6  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5278  0005EA  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5279  0005EE  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5280  0005F2  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5281                           
  5282                           ; BSR set to: 1
  5283                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5284  0005F6  C105  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5285  0005FA  D000               	goto	l4587
  5286  0005FC                     l4587:
  5287                           
  5288                           ;inc\CANlib.h: 828: }
  5289                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5290  0005FC  0101               	movlb	1	; () banked
  5291  0005FE  5104               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5292  000600  0101               	movlb	1	; () banked
  5293  000602  A4D8               	btfss	status,2,c
  5294  000604  D08B               	goto	l4621
  5295                           
  5296                           ; BSR set to: 1
  5297  000606  0EF7               	movlw	247
  5298  000608  0100               	movlb	0	; () banked
  5299  00060A  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5300  00060C  A4D8               	btfss	status,2,c
  5301  00060E  D086               	goto	l4621
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;inc\CANlib.h: 832: {
  5305                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5306  000610  010F               	movlb	15	; () banked
  5307  000612  8701               	bsf	1,3,b	;volatile
  5308                           
  5309                           ; BSR set to: 15
  5310                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5311  000614  0100               	movlb	0	; () banked
  5312  000616  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5313  000618  0101               	movlb	1	; () banked
  5314  00061A  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5315  00061C  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5316  00061E  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5317  000620  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5318                           
  5319                           ; BSR set to: 1
  5320                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5321  000622  C105  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5325  000626  0E00               	movlw	0
  5326  000628  0100               	movlb	0	; () banked
  5327  00062A  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5328  00062C  0101               	movlb	1	; () banked
  5329  00062E  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5330  000630  0EFF               	movlw	255
  5331  000632  0100               	movlb	0	; () banked
  5332  000634  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5333  000636  0101               	movlb	1	; () banked
  5334  000638  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5335  00063A  0E00               	movlw	0
  5336  00063C  0100               	movlb	0	; () banked
  5337  00063E  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5338  000640  0101               	movlb	1	; () banked
  5339  000642  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5340  000644  0E00               	movlw	0
  5341  000646  0100               	movlb	0	; () banked
  5342  000648  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5343  00064A  0101               	movlb	1	; () banked
  5344  00064C  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5345                           
  5346                           ; BSR set to: 1
  5347                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5348  00064E  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5349  000652  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5350  000656  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5351  00065A  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5352  00065E  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  5353  000662  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5354  000666  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5355  00066A  0101               	movlb	1	; () banked
  5356  00066C  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  5357  00066E  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5358  000672  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5359  000676  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5360  00067A  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5361                           
  5362                           ; BSR set to: 1
  5363                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5364  00067E  C105  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5365                           
  5366                           ; BSR set to: 1
  5367                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5368  000682  0100               	movlb	0	; () banked
  5369  000684  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5370  000686  D003               	goto	l473
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5374  000688  010F               	movlb	15	; () banked
  5375  00068A  8101               	bsf	1,0,b	;volatile
  5376  00068C  D002               	goto	l474
  5377  00068E                     l473:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;inc\CANlib.h: 844: else
  5381                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5382  00068E  010F               	movlb	15	; () banked
  5383  000690  9101               	bcf	1,0,b	;volatile
  5384  000692                     l474:
  5385                           
  5386                           ; BSR set to: 15
  5387                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5388  000692  0100               	movlb	0	; () banked
  5389  000694  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5390  000696  D003               	goto	l475
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5394  000698  010F               	movlb	15	; () banked
  5395  00069A  8301               	bsf	1,1,b	;volatile
  5396  00069C  D002               	goto	l476
  5397  00069E                     l475:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;inc\CANlib.h: 849: else
  5401                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5402  00069E  010F               	movlb	15	; () banked
  5403  0006A0  9301               	bcf	1,1,b	;volatile
  5404  0006A2                     l476:
  5405                           
  5406                           ; BSR set to: 15
  5407                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5408  0006A2  0100               	movlb	0	; () banked
  5409  0006A4  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5410  0006A6  D003               	goto	l477
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5414  0006A8  010F               	movlb	15	; () banked
  5415  0006AA  8B01               	bsf	1,5,b	;volatile
  5416  0006AC  D002               	goto	l478
  5417  0006AE                     l477:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 854: else
  5421                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5422  0006AE  010F               	movlb	15	; () banked
  5423  0006B0  9B01               	bcf	1,5,b	;volatile
  5424  0006B2                     l478:
  5425                           
  5426                           ; BSR set to: 15
  5427                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5428  0006B2  0100               	movlb	0	; () banked
  5429  0006B4  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5430  0006B6  D003               	goto	l479
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5434  0006B8  010F               	movlb	15	; () banked
  5435  0006BA  8D01               	bsf	1,6,b	;volatile
  5436  0006BC  D002               	goto	l480
  5437  0006BE                     l479:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;inc\CANlib.h: 859: else
  5441                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5442  0006BE  010F               	movlb	15	; () banked
  5443  0006C0  9D01               	bcf	1,6,b	;volatile
  5444  0006C2                     l480:
  5445                           
  5446                           ; BSR set to: 15
  5447                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5448  0006C2  0100               	movlb	0	; () banked
  5449  0006C4  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5450  0006C6  D003               	goto	l481
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5454  0006C8  010F               	movlb	15	; () banked
  5455  0006CA  8F01               	bsf	1,7,b	;volatile
  5456  0006CC  D003               	goto	l4615
  5457  0006CE                     l481:
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 864: else
  5461                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5462  0006CE  010F               	movlb	15	; () banked
  5463  0006D0  9F01               	bcf	1,7,b	;volatile
  5464  0006D2  D000               	goto	l4615
  5465  0006D4                     l4615:
  5466                           
  5467                           ; BSR set to: 15
  5468                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5469  0006D4  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5470  0006D8  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5471  0006DC  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5472  0006E0  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5473  0006E4  0E16               	movlw	22
  5474  0006E6  D006               	goto	u5710
  5475  0006E8                     u5715:
  5476  0006E8  0101               	movlb	1	; () banked
  5477  0006EA  90D8               	bcf	status,0,c
  5478  0006EC  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5479  0006EE  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5480  0006F0  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5481  0006F2  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5482  0006F4                     u5710:
  5483  0006F4  2EE8               	decfsz	wreg,f,c
  5484  0006F6  D7F8               	goto	u5715
  5485  0006F8  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5486  0006FC  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5487  000700  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5488  000704  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5489                           
  5490                           ; BSR set to: 1
  5491                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5492  000708  0101               	movlb	1	; () banked
  5493  00070A  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5494  00070C  0101               	movlb	1	; () banked
  5495  00070E  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5496  000710  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5497  000712  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5498  000714  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5499                           
  5500                           ; BSR set to: 1
  5501                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5502  000716  C105  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5503  00071A  D000               	goto	l4621
  5504  00071C                     l4621:
  5505                           
  5506                           ;inc\CANlib.h: 870: }
  5507                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5508  00071C  0101               	movlb	1	; () banked
  5509  00071E  0504               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5510  000720  A4D8               	btfss	status,2,c
  5511  000722  D08B               	goto	l4655
  5512                           
  5513                           ; BSR set to: 1
  5514  000724  0EF7               	movlw	247
  5515  000726  0100               	movlb	0	; () banked
  5516  000728  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5517  00072A  A4D8               	btfss	status,2,c
  5518  00072C  D086               	goto	l4655
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 873: {
  5522                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5523  00072E  010F               	movlb	15	; () banked
  5524  000730  8705               	bsf	5,3,b	;volatile
  5525                           
  5526                           ; BSR set to: 15
  5527                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5528  000732  0100               	movlb	0	; () banked
  5529  000734  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5530  000736  0101               	movlb	1	; () banked
  5531  000738  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5532  00073A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5533  00073C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5534  00073E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5535                           
  5536                           ; BSR set to: 1
  5537                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5538  000740  C105  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5539                           
  5540                           ; BSR set to: 1
  5541                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5542  000744  0E00               	movlw	0
  5543  000746  0100               	movlb	0	; () banked
  5544  000748  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5545  00074A  0101               	movlb	1	; () banked
  5546  00074C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5547  00074E  0EFF               	movlw	255
  5548  000750  0100               	movlb	0	; () banked
  5549  000752  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5550  000754  0101               	movlb	1	; () banked
  5551  000756  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5552  000758  0E00               	movlw	0
  5553  00075A  0100               	movlb	0	; () banked
  5554  00075C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5555  00075E  0101               	movlb	1	; () banked
  5556  000760  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5557  000762  0E00               	movlw	0
  5558  000764  0100               	movlb	0	; () banked
  5559  000766  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5560  000768  0101               	movlb	1	; () banked
  5561  00076A  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5562                           
  5563                           ; BSR set to: 1
  5564                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5565  00076C  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5566  000770  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5567  000774  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5568  000778  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5569  00077C  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  5570  000780  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5571  000784  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5572  000788  0101               	movlb	1	; () banked
  5573  00078A  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  5574  00078C  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5575  000790  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5576  000794  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5577  000798  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5581  00079C  C105  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5582                           
  5583                           ; BSR set to: 1
  5584                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5585  0007A0  0100               	movlb	0	; () banked
  5586  0007A2  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5587  0007A4  D003               	goto	l484
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5591  0007A6  010F               	movlb	15	; () banked
  5592  0007A8  8105               	bsf	5,0,b	;volatile
  5593  0007AA  D002               	goto	l485
  5594  0007AC                     l484:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;inc\CANlib.h: 885: else
  5598                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5599  0007AC  010F               	movlb	15	; () banked
  5600  0007AE  9105               	bcf	5,0,b	;volatile
  5601  0007B0                     l485:
  5602                           
  5603                           ; BSR set to: 15
  5604                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5605  0007B0  0100               	movlb	0	; () banked
  5606  0007B2  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5607  0007B4  D003               	goto	l486
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5611  0007B6  010F               	movlb	15	; () banked
  5612  0007B8  8305               	bsf	5,1,b	;volatile
  5613  0007BA  D002               	goto	l487
  5614  0007BC                     l486:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;inc\CANlib.h: 890: else
  5618                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5619  0007BC  010F               	movlb	15	; () banked
  5620  0007BE  9305               	bcf	5,1,b	;volatile
  5621  0007C0                     l487:
  5622                           
  5623                           ; BSR set to: 15
  5624                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5625  0007C0  0100               	movlb	0	; () banked
  5626  0007C2  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5627  0007C4  D003               	goto	l488
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5631  0007C6  010F               	movlb	15	; () banked
  5632  0007C8  8B05               	bsf	5,5,b	;volatile
  5633  0007CA  D002               	goto	l489
  5634  0007CC                     l488:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 895: else
  5638                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5639  0007CC  010F               	movlb	15	; () banked
  5640  0007CE  9B05               	bcf	5,5,b	;volatile
  5641  0007D0                     l489:
  5642                           
  5643                           ; BSR set to: 15
  5644                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5645  0007D0  0100               	movlb	0	; () banked
  5646  0007D2  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5647  0007D4  D003               	goto	l490
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5651  0007D6  010F               	movlb	15	; () banked
  5652  0007D8  8D05               	bsf	5,6,b	;volatile
  5653  0007DA  D002               	goto	l491
  5654  0007DC                     l490:
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;inc\CANlib.h: 900: else
  5658                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5659  0007DC  010F               	movlb	15	; () banked
  5660  0007DE  9D05               	bcf	5,6,b	;volatile
  5661  0007E0                     l491:
  5662                           
  5663                           ; BSR set to: 15
  5664                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5665  0007E0  0100               	movlb	0	; () banked
  5666  0007E2  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5667  0007E4  D003               	goto	l492
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5671  0007E6  010F               	movlb	15	; () banked
  5672  0007E8  8F05               	bsf	5,7,b	;volatile
  5673  0007EA  D003               	goto	l4649
  5674  0007EC                     l492:
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;inc\CANlib.h: 905: else
  5678                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5679  0007EC  010F               	movlb	15	; () banked
  5680  0007EE  9F05               	bcf	5,7,b	;volatile
  5681  0007F0  D000               	goto	l4649
  5682  0007F2                     l4649:
  5683                           
  5684                           ; BSR set to: 15
  5685                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5686  0007F2  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5687  0007F6  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5688  0007FA  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5689  0007FE  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5690  000802  0E16               	movlw	22
  5691  000804  D006               	goto	u5790
  5692  000806                     u5795:
  5693  000806  0101               	movlb	1	; () banked
  5694  000808  90D8               	bcf	status,0,c
  5695  00080A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5696  00080C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5697  00080E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5698  000810  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5699  000812                     u5790:
  5700  000812  2EE8               	decfsz	wreg,f,c
  5701  000814  D7F8               	goto	u5795
  5702  000816  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5703  00081A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5704  00081E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5705  000822  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5706                           
  5707                           ; BSR set to: 1
  5708                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5709  000826  0101               	movlb	1	; () banked
  5710  000828  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5711  00082A  0101               	movlb	1	; () banked
  5712  00082C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5713  00082E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5714  000830  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5715  000832  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5716                           
  5717                           ; BSR set to: 1
  5718                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5719  000834  C105  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5720  000838  D000               	goto	l4655
  5721  00083A                     l4655:
  5722                           
  5723                           ;inc\CANlib.h: 911: }
  5724                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5725  00083A  0E02               	movlw	2
  5726  00083C  0101               	movlb	1	; () banked
  5727  00083E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5728  000840  A4D8               	btfss	status,2,c
  5729  000842  D08B               	goto	l4689
  5730                           
  5731                           ; BSR set to: 1
  5732  000844  0EF7               	movlw	247
  5733  000846  0100               	movlb	0	; () banked
  5734  000848  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5735  00084A  A4D8               	btfss	status,2,c
  5736  00084C  D086               	goto	l4689
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;inc\CANlib.h: 915: {
  5740                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5741  00084E  010F               	movlb	15	; () banked
  5742  000850  8709               	bsf	9,3,b	;volatile
  5743                           
  5744                           ; BSR set to: 15
  5745                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5746  000852  0100               	movlb	0	; () banked
  5747  000854  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5748  000856  0101               	movlb	1	; () banked
  5749  000858  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5750  00085A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5751  00085C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5752  00085E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5753                           
  5754                           ; BSR set to: 1
  5755                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5756  000860  C105  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5757                           
  5758                           ; BSR set to: 1
  5759                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5760  000864  0E00               	movlw	0
  5761  000866  0100               	movlb	0	; () banked
  5762  000868  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5763  00086A  0101               	movlb	1	; () banked
  5764  00086C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5765  00086E  0EFF               	movlw	255
  5766  000870  0100               	movlb	0	; () banked
  5767  000872  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5768  000874  0101               	movlb	1	; () banked
  5769  000876  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5770  000878  0E00               	movlw	0
  5771  00087A  0100               	movlb	0	; () banked
  5772  00087C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5773  00087E  0101               	movlb	1	; () banked
  5774  000880  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5775  000882  0E00               	movlw	0
  5776  000884  0100               	movlb	0	; () banked
  5777  000886  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5778  000888  0101               	movlb	1	; () banked
  5779  00088A  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5780                           
  5781                           ; BSR set to: 1
  5782                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5783  00088C  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5784  000890  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5785  000894  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5786  000898  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5787  00089C  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  5788  0008A0  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5789  0008A4  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5790  0008A8  0101               	movlb	1	; () banked
  5791  0008AA  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  5792  0008AC  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5793  0008B0  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5794  0008B4  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5795  0008B8  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5796                           
  5797                           ; BSR set to: 1
  5798                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5799  0008BC  C105  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5800                           
  5801                           ; BSR set to: 1
  5802                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5803  0008C0  0100               	movlb	0	; () banked
  5804  0008C2  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5805  0008C4  D003               	goto	l495
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5809  0008C6  010F               	movlb	15	; () banked
  5810  0008C8  8109               	bsf	9,0,b	;volatile
  5811  0008CA  D002               	goto	l496
  5812  0008CC                     l495:
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;inc\CANlib.h: 927: else
  5816                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5817  0008CC  010F               	movlb	15	; () banked
  5818  0008CE  9109               	bcf	9,0,b	;volatile
  5819  0008D0                     l496:
  5820                           
  5821                           ; BSR set to: 15
  5822                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5823  0008D0  0100               	movlb	0	; () banked
  5824  0008D2  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5825  0008D4  D003               	goto	l497
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5829  0008D6  010F               	movlb	15	; () banked
  5830  0008D8  8309               	bsf	9,1,b	;volatile
  5831  0008DA  D002               	goto	l498
  5832  0008DC                     l497:
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;inc\CANlib.h: 932: else
  5836                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5837  0008DC  010F               	movlb	15	; () banked
  5838  0008DE  9309               	bcf	9,1,b	;volatile
  5839  0008E0                     l498:
  5840                           
  5841                           ; BSR set to: 15
  5842                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5843  0008E0  0100               	movlb	0	; () banked
  5844  0008E2  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5845  0008E4  D003               	goto	l499
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5849  0008E6  010F               	movlb	15	; () banked
  5850  0008E8  8B09               	bsf	9,5,b	;volatile
  5851  0008EA  D002               	goto	l500
  5852  0008EC                     l499:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;inc\CANlib.h: 937: else
  5856                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5857  0008EC  010F               	movlb	15	; () banked
  5858  0008EE  9B09               	bcf	9,5,b	;volatile
  5859  0008F0                     l500:
  5860                           
  5861                           ; BSR set to: 15
  5862                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5863  0008F0  0100               	movlb	0	; () banked
  5864  0008F2  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5865  0008F4  D003               	goto	l501
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5869  0008F6  010F               	movlb	15	; () banked
  5870  0008F8  8D09               	bsf	9,6,b	;volatile
  5871  0008FA  D002               	goto	l502
  5872  0008FC                     l501:
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;inc\CANlib.h: 942: else
  5876                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5877  0008FC  010F               	movlb	15	; () banked
  5878  0008FE  9D09               	bcf	9,6,b	;volatile
  5879  000900                     l502:
  5880                           
  5881                           ; BSR set to: 15
  5882                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5883  000900  0100               	movlb	0	; () banked
  5884  000902  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5885  000904  D003               	goto	l503
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5889  000906  010F               	movlb	15	; () banked
  5890  000908  8F09               	bsf	9,7,b	;volatile
  5891  00090A  D003               	goto	l4683
  5892  00090C                     l503:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;inc\CANlib.h: 947: else
  5896                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5897  00090C  010F               	movlb	15	; () banked
  5898  00090E  9F09               	bcf	9,7,b	;volatile
  5899  000910  D000               	goto	l4683
  5900  000912                     l4683:
  5901                           
  5902                           ; BSR set to: 15
  5903                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5904  000912  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5905  000916  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5906  00091A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5907  00091E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5908  000922  0E16               	movlw	22
  5909  000924  D006               	goto	u5870
  5910  000926                     u5875:
  5911  000926  0101               	movlb	1	; () banked
  5912  000928  90D8               	bcf	status,0,c
  5913  00092A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5914  00092C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5915  00092E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5916  000930  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5917  000932                     u5870:
  5918  000932  2EE8               	decfsz	wreg,f,c
  5919  000934  D7F8               	goto	u5875
  5920  000936  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5921  00093A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5922  00093E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5923  000942  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5927  000946  0101               	movlb	1	; () banked
  5928  000948  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5929  00094A  0101               	movlb	1	; () banked
  5930  00094C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5931  00094E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5932  000950  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5933  000952  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5934                           
  5935                           ; BSR set to: 1
  5936                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5937  000954  C105  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5938  000958  D000               	goto	l4689
  5939  00095A                     l4689:
  5940                           
  5941                           ;inc\CANlib.h: 953: }
  5942                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5943  00095A  0E03               	movlw	3
  5944  00095C  0101               	movlb	1	; () banked
  5945  00095E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5946  000960  A4D8               	btfss	status,2,c
  5947  000962  D08B               	goto	l4723
  5948                           
  5949                           ; BSR set to: 1
  5950  000964  0EF7               	movlw	247
  5951  000966  0100               	movlb	0	; () banked
  5952  000968  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5953  00096A  A4D8               	btfss	status,2,c
  5954  00096C  D086               	goto	l4723
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;inc\CANlib.h: 956: {
  5958                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5959  00096E  010F               	movlb	15	; () banked
  5960  000970  870D               	bsf	13,3,b	;volatile
  5961                           
  5962                           ; BSR set to: 15
  5963                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5964  000972  0100               	movlb	0	; () banked
  5965  000974  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5966  000976  0101               	movlb	1	; () banked
  5967  000978  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5968  00097A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5969  00097C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5970  00097E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5971                           
  5972                           ; BSR set to: 1
  5973                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5974  000980  C105  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5978  000984  0E00               	movlw	0
  5979  000986  0100               	movlb	0	; () banked
  5980  000988  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5981  00098A  0101               	movlb	1	; () banked
  5982  00098C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5983  00098E  0EFF               	movlw	255
  5984  000990  0100               	movlb	0	; () banked
  5985  000992  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5986  000994  0101               	movlb	1	; () banked
  5987  000996  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5988  000998  0E00               	movlw	0
  5989  00099A  0100               	movlb	0	; () banked
  5990  00099C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5991  00099E  0101               	movlb	1	; () banked
  5992  0009A0  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5993  0009A2  0E00               	movlw	0
  5994  0009A4  0100               	movlb	0	; () banked
  5995  0009A6  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5996  0009A8  0101               	movlb	1	; () banked
  5997  0009AA  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5998                           
  5999                           ; BSR set to: 1
  6000                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6001  0009AC  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  6002  0009B0  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6003  0009B4  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6004  0009B8  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6005  0009BC  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  6006  0009C0  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6007  0009C4  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6008  0009C8  0101               	movlb	1	; () banked
  6009  0009CA  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  6010  0009CC  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6011  0009D0  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6012  0009D4  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6013  0009D8  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6017  0009DC  C105  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6018                           
  6019                           ; BSR set to: 1
  6020                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6021  0009E0  0100               	movlb	0	; () banked
  6022  0009E2  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6023  0009E4  D003               	goto	l506
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6027  0009E6  010F               	movlb	15	; () banked
  6028  0009E8  810D               	bsf	13,0,b	;volatile
  6029  0009EA  D002               	goto	l507
  6030  0009EC                     l506:
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;inc\CANlib.h: 968: else
  6034                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6035  0009EC  010F               	movlb	15	; () banked
  6036  0009EE  910D               	bcf	13,0,b	;volatile
  6037  0009F0                     l507:
  6038                           
  6039                           ; BSR set to: 15
  6040                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6041  0009F0  0100               	movlb	0	; () banked
  6042  0009F2  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6043  0009F4  D003               	goto	l508
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6047  0009F6  010F               	movlb	15	; () banked
  6048  0009F8  830D               	bsf	13,1,b	;volatile
  6049  0009FA  D002               	goto	l509
  6050  0009FC                     l508:
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;inc\CANlib.h: 973: else
  6054                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6055  0009FC  010F               	movlb	15	; () banked
  6056  0009FE  930D               	bcf	13,1,b	;volatile
  6057  000A00                     l509:
  6058                           
  6059                           ; BSR set to: 15
  6060                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6061  000A00  0100               	movlb	0	; () banked
  6062  000A02  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6063  000A04  D003               	goto	l510
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6067  000A06  010F               	movlb	15	; () banked
  6068  000A08  8B0D               	bsf	13,5,b	;volatile
  6069  000A0A  D002               	goto	l511
  6070  000A0C                     l510:
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;inc\CANlib.h: 978: else
  6074                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6075  000A0C  010F               	movlb	15	; () banked
  6076  000A0E  9B0D               	bcf	13,5,b	;volatile
  6077  000A10                     l511:
  6078                           
  6079                           ; BSR set to: 15
  6080                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6081  000A10  0100               	movlb	0	; () banked
  6082  000A12  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6083  000A14  D003               	goto	l512
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6087  000A16  010F               	movlb	15	; () banked
  6088  000A18  8D0D               	bsf	13,6,b	;volatile
  6089  000A1A  D002               	goto	l513
  6090  000A1C                     l512:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;inc\CANlib.h: 983: else
  6094                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6095  000A1C  010F               	movlb	15	; () banked
  6096  000A1E  9D0D               	bcf	13,6,b	;volatile
  6097  000A20                     l513:
  6098                           
  6099                           ; BSR set to: 15
  6100                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6101  000A20  0100               	movlb	0	; () banked
  6102  000A22  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6103  000A24  D003               	goto	l514
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6107  000A26  010F               	movlb	15	; () banked
  6108  000A28  8F0D               	bsf	13,7,b	;volatile
  6109  000A2A  D003               	goto	l4717
  6110  000A2C                     l514:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;inc\CANlib.h: 988: else
  6114                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6115  000A2C  010F               	movlb	15	; () banked
  6116  000A2E  9F0D               	bcf	13,7,b	;volatile
  6117  000A30  D000               	goto	l4717
  6118  000A32                     l4717:
  6119                           
  6120                           ; BSR set to: 15
  6121                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6122  000A32  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  6123  000A36  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6124  000A3A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6125  000A3E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6126  000A42  0E16               	movlw	22
  6127  000A44  D006               	goto	u5950
  6128  000A46                     u5955:
  6129  000A46  0101               	movlb	1	; () banked
  6130  000A48  90D8               	bcf	status,0,c
  6131  000A4A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6132  000A4C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6133  000A4E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6134  000A50  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  6135  000A52                     u5950:
  6136  000A52  2EE8               	decfsz	wreg,f,c
  6137  000A54  D7F8               	goto	u5955
  6138  000A56  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6139  000A5A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6140  000A5E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6141  000A62  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6142                           
  6143                           ; BSR set to: 1
  6144                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6145  000A66  0101               	movlb	1	; () banked
  6146  000A68  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  6147  000A6A  0101               	movlb	1	; () banked
  6148  000A6C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6149  000A6E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6150  000A70  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6151  000A72  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6152                           
  6153                           ; BSR set to: 1
  6154                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6155  000A74  C105  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6156  000A78  D000               	goto	l4723
  6157  000A7A                     l4723:
  6158                           
  6159                           ;inc\CANlib.h: 994: }
  6160                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6161  000A7A  0E04               	movlw	4
  6162  000A7C  0101               	movlb	1	; () banked
  6163  000A7E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6164  000A80  A4D8               	btfss	status,2,c
  6165  000A82  D08B               	goto	l4757
  6166                           
  6167                           ; BSR set to: 1
  6168  000A84  0EF7               	movlw	247
  6169  000A86  0100               	movlb	0	; () banked
  6170  000A88  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  6171  000A8A  A4D8               	btfss	status,2,c
  6172  000A8C  D086               	goto	l4757
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;inc\CANlib.h: 997: {
  6176                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6177  000A8E  010F               	movlb	15	; () banked
  6178  000A90  8711               	bsf	17,3,b	;volatile
  6179                           
  6180                           ; BSR set to: 15
  6181                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6182  000A92  0100               	movlb	0	; () banked
  6183  000A94  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  6184  000A96  0101               	movlb	1	; () banked
  6185  000A98  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6186  000A9A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6187  000A9C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6188  000A9E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6189                           
  6190                           ; BSR set to: 1
  6191                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6192  000AA0  C105  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6196  000AA4  0E00               	movlw	0
  6197  000AA6  0100               	movlb	0	; () banked
  6198  000AA8  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  6199  000AAA  0101               	movlb	1	; () banked
  6200  000AAC  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6201  000AAE  0EFF               	movlw	255
  6202  000AB0  0100               	movlb	0	; () banked
  6203  000AB2  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6204  000AB4  0101               	movlb	1	; () banked
  6205  000AB6  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6206  000AB8  0E00               	movlw	0
  6207  000ABA  0100               	movlb	0	; () banked
  6208  000ABC  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6209  000ABE  0101               	movlb	1	; () banked
  6210  000AC0  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6211  000AC2  0E00               	movlw	0
  6212  000AC4  0100               	movlb	0	; () banked
  6213  000AC6  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6214  000AC8  0101               	movlb	1	; () banked
  6215  000ACA  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6216                           
  6217                           ; BSR set to: 1
  6218                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6219  000ACC  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  6220  000AD0  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6221  000AD4  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6222  000AD8  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6223  000ADC  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  6224  000AE0  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6225  000AE4  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6226  000AE8  0101               	movlb	1	; () banked
  6227  000AEA  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  6228  000AEC  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6229  000AF0  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6230  000AF4  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6231  000AF8  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6232                           
  6233                           ; BSR set to: 1
  6234                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6235  000AFC  C105  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6236                           
  6237                           ; BSR set to: 1
  6238                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6239  000B00  0100               	movlb	0	; () banked
  6240  000B02  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6241  000B04  D003               	goto	l517
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6245  000B06  010F               	movlb	15	; () banked
  6246  000B08  8111               	bsf	17,0,b	;volatile
  6247  000B0A  D002               	goto	l518
  6248  000B0C                     l517:
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;inc\CANlib.h: 1009: else
  6252                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6253  000B0C  010F               	movlb	15	; () banked
  6254  000B0E  9111               	bcf	17,0,b	;volatile
  6255  000B10                     l518:
  6256                           
  6257                           ; BSR set to: 15
  6258                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6259  000B10  0100               	movlb	0	; () banked
  6260  000B12  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6261  000B14  D003               	goto	l519
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6265  000B16  010F               	movlb	15	; () banked
  6266  000B18  8311               	bsf	17,1,b	;volatile
  6267  000B1A  D002               	goto	l520
  6268  000B1C                     l519:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;inc\CANlib.h: 1014: else
  6272                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6273  000B1C  010F               	movlb	15	; () banked
  6274  000B1E  9311               	bcf	17,1,b	;volatile
  6275  000B20                     l520:
  6276                           
  6277                           ; BSR set to: 15
  6278                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6279  000B20  0100               	movlb	0	; () banked
  6280  000B22  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6281  000B24  D003               	goto	l521
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6285  000B26  010F               	movlb	15	; () banked
  6286  000B28  8B11               	bsf	17,5,b	;volatile
  6287  000B2A  D002               	goto	l522
  6288  000B2C                     l521:
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;inc\CANlib.h: 1019: else
  6292                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6293  000B2C  010F               	movlb	15	; () banked
  6294  000B2E  9B11               	bcf	17,5,b	;volatile
  6295  000B30                     l522:
  6296                           
  6297                           ; BSR set to: 15
  6298                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6299  000B30  0100               	movlb	0	; () banked
  6300  000B32  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6301  000B34  D003               	goto	l523
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6305  000B36  010F               	movlb	15	; () banked
  6306  000B38  8D11               	bsf	17,6,b	;volatile
  6307  000B3A  D002               	goto	l524
  6308  000B3C                     l523:
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;inc\CANlib.h: 1024: else
  6312                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6313  000B3C  010F               	movlb	15	; () banked
  6314  000B3E  9D11               	bcf	17,6,b	;volatile
  6315  000B40                     l524:
  6316                           
  6317                           ; BSR set to: 15
  6318                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6319  000B40  0100               	movlb	0	; () banked
  6320  000B42  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6321  000B44  D003               	goto	l525
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6325  000B46  010F               	movlb	15	; () banked
  6326  000B48  8F11               	bsf	17,7,b	;volatile
  6327  000B4A  D003               	goto	l4751
  6328  000B4C                     l525:
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;inc\CANlib.h: 1029: else
  6332                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6333  000B4C  010F               	movlb	15	; () banked
  6334  000B4E  9F11               	bcf	17,7,b	;volatile
  6335  000B50  D000               	goto	l4751
  6336  000B52                     l4751:
  6337                           
  6338                           ; BSR set to: 15
  6339                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6340  000B52  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  6341  000B56  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6342  000B5A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6343  000B5E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6344  000B62  0E16               	movlw	22
  6345  000B64  D006               	goto	u6030
  6346  000B66                     u6035:
  6347  000B66  0101               	movlb	1	; () banked
  6348  000B68  90D8               	bcf	status,0,c
  6349  000B6A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6350  000B6C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6351  000B6E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6352  000B70  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  6353  000B72                     u6030:
  6354  000B72  2EE8               	decfsz	wreg,f,c
  6355  000B74  D7F8               	goto	u6035
  6356  000B76  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6357  000B7A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6358  000B7E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6359  000B82  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6360                           
  6361                           ; BSR set to: 1
  6362                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6363  000B86  0101               	movlb	1	; () banked
  6364  000B88  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  6365  000B8A  0101               	movlb	1	; () banked
  6366  000B8C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6367  000B8E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6368  000B90  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6369  000B92  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6370                           
  6371                           ; BSR set to: 1
  6372                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6373  000B94  C105  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6374  000B98  D000               	goto	l4757
  6375  000B9A                     l4757:
  6376                           
  6377                           ;inc\CANlib.h: 1035: }
  6378                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6379  000B9A  0E05               	movlw	5
  6380  000B9C  0101               	movlb	1	; () banked
  6381  000B9E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6382  000BA0  A4D8               	btfss	status,2,c
  6383  000BA2  D08B               	goto	l538
  6384                           
  6385                           ; BSR set to: 1
  6386  000BA4  0EF7               	movlw	247
  6387  000BA6  0100               	movlb	0	; () banked
  6388  000BA8  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  6389  000BAA  A4D8               	btfss	status,2,c
  6390  000BAC  D086               	goto	l538
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;inc\CANlib.h: 1038: {
  6394                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6395  000BAE  010F               	movlb	15	; () banked
  6396  000BB0  8715               	bsf	21,3,b	;volatile
  6397                           
  6398                           ; BSR set to: 15
  6399                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6400  000BB2  0100               	movlb	0	; () banked
  6401  000BB4  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  6402  000BB6  0101               	movlb	1	; () banked
  6403  000BB8  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6404  000BBA  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6405  000BBC  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6406  000BBE  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6407                           
  6408                           ; BSR set to: 1
  6409                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6410  000BC0  C105  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6411                           
  6412                           ; BSR set to: 1
  6413                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6414  000BC4  0E00               	movlw	0
  6415  000BC6  0100               	movlb	0	; () banked
  6416  000BC8  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  6417  000BCA  0101               	movlb	1	; () banked
  6418  000BCC  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6419  000BCE  0EFF               	movlw	255
  6420  000BD0  0100               	movlb	0	; () banked
  6421  000BD2  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6422  000BD4  0101               	movlb	1	; () banked
  6423  000BD6  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6424  000BD8  0E00               	movlw	0
  6425  000BDA  0100               	movlb	0	; () banked
  6426  000BDC  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6427  000BDE  0101               	movlb	1	; () banked
  6428  000BE0  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6429  000BE2  0E00               	movlw	0
  6430  000BE4  0100               	movlb	0	; () banked
  6431  000BE6  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6432  000BE8  0101               	movlb	1	; () banked
  6433  000BEA  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6437  000BEC  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  6438  000BF0  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6439  000BF4  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6440  000BF8  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6441  000BFC  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  6442  000C00  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6443  000C04  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6444  000C08  0101               	movlb	1	; () banked
  6445  000C0A  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  6446  000C0C  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6447  000C10  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6448  000C14  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6449  000C18  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6450                           
  6451                           ; BSR set to: 1
  6452                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6453  000C1C  C105  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6457  000C20  0100               	movlb	0	; () banked
  6458  000C22  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6459  000C24  D003               	goto	l528
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6463  000C26  010F               	movlb	15	; () banked
  6464  000C28  8115               	bsf	21,0,b	;volatile
  6465  000C2A  D002               	goto	l529
  6466  000C2C                     l528:
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;inc\CANlib.h: 1050: else
  6470                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6471  000C2C  010F               	movlb	15	; () banked
  6472  000C2E  9115               	bcf	21,0,b	;volatile
  6473  000C30                     l529:
  6474                           
  6475                           ; BSR set to: 15
  6476                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6477  000C30  0100               	movlb	0	; () banked
  6478  000C32  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6479  000C34  D003               	goto	l530
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6483  000C36  010F               	movlb	15	; () banked
  6484  000C38  8315               	bsf	21,1,b	;volatile
  6485  000C3A  D002               	goto	l531
  6486  000C3C                     l530:
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;inc\CANlib.h: 1055: else
  6490                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6491  000C3C  010F               	movlb	15	; () banked
  6492  000C3E  9315               	bcf	21,1,b	;volatile
  6493  000C40                     l531:
  6494                           
  6495                           ; BSR set to: 15
  6496                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6497  000C40  0100               	movlb	0	; () banked
  6498  000C42  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6499  000C44  D003               	goto	l532
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6503  000C46  010F               	movlb	15	; () banked
  6504  000C48  8B15               	bsf	21,5,b	;volatile
  6505  000C4A  D002               	goto	l533
  6506  000C4C                     l532:
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;inc\CANlib.h: 1060: else
  6510                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6511  000C4C  010F               	movlb	15	; () banked
  6512  000C4E  9B15               	bcf	21,5,b	;volatile
  6513  000C50                     l533:
  6514                           
  6515                           ; BSR set to: 15
  6516                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6517  000C50  0100               	movlb	0	; () banked
  6518  000C52  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6519  000C54  D003               	goto	l534
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6523  000C56  010F               	movlb	15	; () banked
  6524  000C58  8D15               	bsf	21,6,b	;volatile
  6525  000C5A  D002               	goto	l535
  6526  000C5C                     l534:
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;inc\CANlib.h: 1065: else
  6530                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6531  000C5C  010F               	movlb	15	; () banked
  6532  000C5E  9D15               	bcf	21,6,b	;volatile
  6533  000C60                     l535:
  6534                           
  6535                           ; BSR set to: 15
  6536                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6537  000C60  0100               	movlb	0	; () banked
  6538  000C62  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6539  000C64  D003               	goto	l536
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6543  000C66  010F               	movlb	15	; () banked
  6544  000C68  8F15               	bsf	21,7,b	;volatile
  6545  000C6A  D003               	goto	l4785
  6546  000C6C                     l536:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;inc\CANlib.h: 1070: else
  6550                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6551  000C6C  010F               	movlb	15	; () banked
  6552  000C6E  9F15               	bcf	21,7,b	;volatile
  6553  000C70  D000               	goto	l4785
  6554  000C72                     l4785:
  6555                           
  6556                           ; BSR set to: 15
  6557                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6558  000C72  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  6559  000C76  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6560  000C7A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6561  000C7E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6562  000C82  0E16               	movlw	22
  6563  000C84  D006               	goto	u6110
  6564  000C86                     u6115:
  6565  000C86  0101               	movlb	1	; () banked
  6566  000C88  90D8               	bcf	status,0,c
  6567  000C8A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6568  000C8C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6569  000C8E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6570  000C90  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  6571  000C92                     u6110:
  6572  000C92  2EE8               	decfsz	wreg,f,c
  6573  000C94  D7F8               	goto	u6115
  6574  000C96  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6575  000C9A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6576  000C9E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6577  000CA2  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6578                           
  6579                           ; BSR set to: 1
  6580                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6581  000CA6  0101               	movlb	1	; () banked
  6582  000CA8  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  6583  000CAA  0101               	movlb	1	; () banked
  6584  000CAC  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6585  000CAE  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6586  000CB0  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6587  000CB2  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6588                           
  6589                           ; BSR set to: 1
  6590                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6591  000CB4  C105  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6592  000CB8  D000               	goto	l538
  6593  000CBA                     l538:
  6594  000CBA  0012               	return		;funcret
  6595  000CBC                     __end_of_CANSetFilter:
  6596                           	opt stack 0
  6597                           tblptru	equ	0xFF8
  6598                           tblptrh	equ	0xFF7
  6599                           tblptrl	equ	0xFF6
  6600                           tablat	equ	0xFF5
  6601                           prodh	equ	0xFF4
  6602                           prodl	equ	0xFF3
  6603                           intcon	equ	0xFF2
  6604                           intcon2	equ	0xFF1
  6605                           intcon3	equ	0xFF0
  6606                           postinc0	equ	0xFEE
  6607                           wreg	equ	0xFE8
  6608                           postdec1	equ	0xFE5
  6609                           fsr1l	equ	0xFE1
  6610                           indf2	equ	0xFDF
  6611                           fsr2h	equ	0xFDA
  6612                           fsr2l	equ	0xFD9
  6613                           status	equ	0xFD8
  6614                           
  6615 ;; *************** function _CANOperationMode *****************
  6616 ;; Defined at:
  6617 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  mode            1    wreg     enum E16879
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  mode            1   36[BANK0 ] enum E16879
  6622 ;; Return value:  Size  Location     Type
  6623 ;;		None               void
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6631 ;;      Params:         0       0       0       0
  6632 ;;      Locals:         0       1       0       0
  6633 ;;      Temps:          0       0       0       0
  6634 ;;      Totals:         0       1       0       0
  6635 ;;Total ram usage:        1 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    4
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_CANInitialize
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text9
  6646  002D04                     __ptext9:
  6647                           	opt stack 0
  6648  002D04                     _CANOperationMode:
  6649                           	opt stack 24
  6650                           
  6651                           ;incstack = 0
  6652                           ;CANOperationMode@mode stored from wreg
  6653  002D04  0100               	movlb	0	; () banked
  6654  002D06  6FCD               	movwf	CANOperationMode@mode& (0+255),b
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;inc\CANlib.h: 208: CANCON = mode;
  6658  002D08  C0CD  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6659                           
  6660                           ; BSR set to: 0
  6661                           
  6662                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6663  002D0C  D000               	goto	l4381
  6664  002D0E                     l4381:
  6665                           
  6666                           ; BSR set to: 0
  6667  002D0E  506E               	movf	3950,w,c	;volatile
  6668  002D10  0BE0               	andlw	224
  6669  002D12  0100               	movlb	0	; () banked
  6670  002D14  19CD               	xorwf	CANOperationMode@mode& (0+255),w,b
  6671  002D16  A4D8               	btfss	status,2,c
  6672  002D18  D7FA               	goto	l4381
  6673                           
  6674                           ; BSR set to: 0
  6675                           
  6676                           ; BSR set to: 0
  6677  002D1A  0012               	return		;funcret
  6678  002D1C                     __end_of_CANOperationMode:
  6679                           	opt stack 0
  6680                           tblptru	equ	0xFF8
  6681                           tblptrh	equ	0xFF7
  6682                           tblptrl	equ	0xFF6
  6683                           tablat	equ	0xFF5
  6684                           prodh	equ	0xFF4
  6685                           prodl	equ	0xFF3
  6686                           intcon	equ	0xFF2
  6687                           intcon2	equ	0xFF1
  6688                           intcon3	equ	0xFF0
  6689                           postinc0	equ	0xFEE
  6690                           wreg	equ	0xFE8
  6691                           postdec1	equ	0xFE5
  6692                           fsr1l	equ	0xFE1
  6693                           indf2	equ	0xFDF
  6694                           fsr2h	equ	0xFDA
  6695                           fsr2l	equ	0xFD9
  6696                           status	equ	0xFD8
  6697                           
  6698 ;; *************** function ___lmul *****************
  6699 ;; Defined at:
  6700 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  multiplier      4    0[BANK1 ] unsigned long 
  6703 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  product         4   36[BANK0 ] unsigned long 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  4    0[BANK1 ] unsigned long 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6715 ;;      Params:         0       0       8       0
  6716 ;;      Locals:         0       4       0       0
  6717 ;;      Temps:          0       0       0       0
  6718 ;;      Totals:         0       4       8       0
  6719 ;;Total ram usage:       12 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    4
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_main
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text10
  6730  002B56                     __ptext10:
  6731                           	opt stack 0
  6732  002B56                     ___lmul:
  6733                           	opt stack 26
  6734                           
  6735                           ; BSR set to: 0
  6736                           ;incstack = 0
  6737  002B56  0E00               	movlw	0
  6738  002B58  0100               	movlb	0	; () banked
  6739  002B5A  6FCD               	movwf	___lmul@product& (0+255),b
  6740  002B5C  0E00               	movlw	0
  6741  002B5E  6FCE               	movwf	(___lmul@product+1)& (0+255),b
  6742  002B60  0E00               	movlw	0
  6743  002B62  6FCF               	movwf	(___lmul@product+2)& (0+255),b
  6744  002B64  0E00               	movlw	0
  6745  002B66  6FD0               	movwf	(___lmul@product+3)& (0+255),b
  6746  002B68  D000               	goto	l5235
  6747  002B6A                     l5235:
  6748  002B6A  0101               	movlb	1	; () banked
  6749  002B6C  A100               	btfss	___lmul@multiplier& (0+255),0,b
  6750  002B6E  D011               	goto	l5239
  6751                           
  6752                           ; BSR set to: 1
  6753  002B70  0101               	movlb	1	; () banked
  6754  002B72  5104               	movf	___lmul@multiplicand& (0+255),w,b
  6755  002B74  0100               	movlb	0	; () banked
  6756  002B76  27CD               	addwf	___lmul@product& (0+255),f,b
  6757  002B78  0101               	movlb	1	; () banked
  6758  002B7A  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6759  002B7C  0100               	movlb	0	; () banked
  6760  002B7E  23CE               	addwfc	(___lmul@product+1)& (0+255),f,b
  6761  002B80  0101               	movlb	1	; () banked
  6762  002B82  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6763  002B84  0100               	movlb	0	; () banked
  6764  002B86  23CF               	addwfc	(___lmul@product+2)& (0+255),f,b
  6765  002B88  0101               	movlb	1	; () banked
  6766  002B8A  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6767  002B8C  0100               	movlb	0	; () banked
  6768  002B8E  23D0               	addwfc	(___lmul@product+3)& (0+255),f,b
  6769  002B90  D000               	goto	l5239
  6770  002B92                     l5239:
  6771  002B92  0101               	movlb	1	; () banked
  6772  002B94  90D8               	bcf	status,0,c
  6773  002B96  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
  6774  002B98  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6775  002B9A  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6776  002B9C  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6777                           
  6778                           ; BSR set to: 1
  6779  002B9E  0101               	movlb	1	; () banked
  6780  002BA0  90D8               	bcf	status,0,c
  6781  002BA2  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6782  002BA4  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6783  002BA6  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6784  002BA8  3300               	rrcf	___lmul@multiplier& (0+255),f,b
  6785  002BAA  0101               	movlb	1	; () banked
  6786  002BAC  5100               	movf	___lmul@multiplier& (0+255),w,b
  6787  002BAE  0101               	movlb	1	; () banked
  6788  002BB0  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6789  002BB2  0101               	movlb	1	; () banked
  6790  002BB4  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6791  002BB6  0101               	movlb	1	; () banked
  6792  002BB8  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6793  002BBA  A4D8               	btfss	status,2,c
  6794  002BBC  D7D6               	goto	l5235
  6795                           
  6796                           ; BSR set to: 1
  6797  002BBE  C0CD  F100         	movff	___lmul@product,?___lmul
  6798  002BC2  C0CE  F101         	movff	___lmul@product+1,?___lmul+1
  6799  002BC6  C0CF  F102         	movff	___lmul@product+2,?___lmul+2
  6800  002BCA  C0D0  F103         	movff	___lmul@product+3,?___lmul+3
  6801                           
  6802                           ; BSR set to: 1
  6803  002BCE  0012               	return		;funcret
  6804  002BD0                     __end_of___lmul:
  6805                           	opt stack 0
  6806                           tblptru	equ	0xFF8
  6807                           tblptrh	equ	0xFF7
  6808                           tblptrl	equ	0xFF6
  6809                           tablat	equ	0xFF5
  6810                           prodh	equ	0xFF4
  6811                           prodl	equ	0xFF3
  6812                           intcon	equ	0xFF2
  6813                           intcon2	equ	0xFF1
  6814                           intcon3	equ	0xFF0
  6815                           postinc0	equ	0xFEE
  6816                           wreg	equ	0xFE8
  6817                           postdec1	equ	0xFE5
  6818                           fsr1l	equ	0xFE1
  6819                           indf2	equ	0xFDF
  6820                           fsr2h	equ	0xFDA
  6821                           fsr2l	equ	0xFD9
  6822                           status	equ	0xFD8
  6823                           
  6824 ;; *************** function ___lldiv *****************
  6825 ;; Defined at:
  6826 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;  dividend        4    0[BANK1 ] unsigned long 
  6829 ;;  divisor         4    4[BANK1 ] unsigned long 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  quotient        4   36[BANK0 ] unsigned long 
  6832 ;;  counter         1   40[BANK0 ] unsigned char 
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  4    0[BANK1 ] unsigned long 
  6835 ;; Registers used:
  6836 ;;		wreg, status,2, status,0
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6842 ;;      Params:         0       0       8       0
  6843 ;;      Locals:         0       5       0       0
  6844 ;;      Temps:          0       0       0       0
  6845 ;;      Totals:         0       5       8       0
  6846 ;;Total ram usage:       13 bytes
  6847 ;; Hardware stack levels used:    1
  6848 ;; Hardware stack levels required when called:    4
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		_main
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text11
  6857  002976                     __ptext11:
  6858                           	opt stack 0
  6859  002976                     ___lldiv:
  6860                           	opt stack 26
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;incstack = 0
  6864  002976  0E00               	movlw	0
  6865  002978  0100               	movlb	0	; () banked
  6866  00297A  6FCD               	movwf	___lldiv@quotient& (0+255),b
  6867  00297C  0E00               	movlw	0
  6868  00297E  6FCE               	movwf	(___lldiv@quotient+1)& (0+255),b
  6869  002980  0E00               	movlw	0
  6870  002982  6FCF               	movwf	(___lldiv@quotient+2)& (0+255),b
  6871  002984  0E00               	movlw	0
  6872  002986  6FD0               	movwf	(___lldiv@quotient+3)& (0+255),b
  6873                           
  6874                           ; BSR set to: 0
  6875  002988  0101               	movlb	1	; () banked
  6876  00298A  5104               	movf	___lldiv@divisor& (0+255),w,b
  6877  00298C  0101               	movlb	1	; () banked
  6878  00298E  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6879  002990  0101               	movlb	1	; () banked
  6880  002992  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6881  002994  0101               	movlb	1	; () banked
  6882  002996  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6883  002998  B4D8               	btfsc	status,2,c
  6884  00299A  D047               	goto	l1235
  6885                           
  6886                           ; BSR set to: 1
  6887  00299C  0E01               	movlw	1
  6888  00299E  0100               	movlb	0	; () banked
  6889  0029A0  6FD1               	movwf	___lldiv@counter& (0+255),b
  6890  0029A2  D009               	goto	l5339
  6891  0029A4                     l5337:
  6892  0029A4  0101               	movlb	1	; () banked
  6893  0029A6  90D8               	bcf	status,0,c
  6894  0029A8  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  6895  0029AA  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6896  0029AC  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6897  0029AE  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6898  0029B0  0100               	movlb	0	; () banked
  6899  0029B2  2BD1               	incf	___lldiv@counter& (0+255),f,b
  6900  0029B4  D000               	goto	l5339
  6901  0029B6                     l5339:
  6902                           
  6903                           ; BSR set to: 0
  6904  0029B6  0101               	movlb	1	; () banked
  6905  0029B8  BF07               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  6906  0029BA  D002               	goto	l5341
  6907  0029BC  D7F3               	goto	l5337
  6908                           
  6909                           ; BSR set to: 1
  6910  0029BE  D000               	goto	l5341
  6911  0029C0                     l5341:
  6912  0029C0  0100               	movlb	0	; () banked
  6913  0029C2  90D8               	bcf	status,0,c
  6914  0029C4  37CD               	rlcf	___lldiv@quotient& (0+255),f,b
  6915  0029C6  37CE               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6916  0029C8  37CF               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6917  0029CA  37D0               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6918                           
  6919                           ; BSR set to: 0
  6920  0029CC  0101               	movlb	1	; () banked
  6921  0029CE  5104               	movf	___lldiv@divisor& (0+255),w,b
  6922  0029D0  0101               	movlb	1	; () banked
  6923  0029D2  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  6924  0029D4  0101               	movlb	1	; () banked
  6925  0029D6  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6926  0029D8  0101               	movlb	1	; () banked
  6927  0029DA  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6928  0029DC  0101               	movlb	1	; () banked
  6929  0029DE  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6930  0029E0  0101               	movlb	1	; () banked
  6931  0029E2  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6932  0029E4  0101               	movlb	1	; () banked
  6933  0029E6  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6934  0029E8  0101               	movlb	1	; () banked
  6935  0029EA  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6936  0029EC  A0D8               	btfss	status,0,c
  6937  0029EE  D013               	goto	l5349
  6938                           
  6939                           ; BSR set to: 1
  6940  0029F0  0101               	movlb	1	; () banked
  6941  0029F2  5104               	movf	___lldiv@divisor& (0+255),w,b
  6942  0029F4  0101               	movlb	1	; () banked
  6943  0029F6  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  6944  0029F8  0101               	movlb	1	; () banked
  6945  0029FA  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6946  0029FC  0101               	movlb	1	; () banked
  6947  0029FE  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6948  002A00  0101               	movlb	1	; () banked
  6949  002A02  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6950  002A04  0101               	movlb	1	; () banked
  6951  002A06  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6952  002A08  0101               	movlb	1	; () banked
  6953  002A0A  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6954  002A0C  0101               	movlb	1	; () banked
  6955  002A0E  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6956                           
  6957                           ; BSR set to: 1
  6958  002A10  0100               	movlb	0	; () banked
  6959  002A12  81CD               	bsf	___lldiv@quotient& (0+255),0,b
  6960  002A14  D000               	goto	l5349
  6961  002A16                     l5349:
  6962  002A16  0101               	movlb	1	; () banked
  6963  002A18  90D8               	bcf	status,0,c
  6964  002A1A  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6965  002A1C  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6966  002A1E  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6967  002A20  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  6968                           
  6969                           ; BSR set to: 1
  6970  002A22  0100               	movlb	0	; () banked
  6971  002A24  2FD1               	decfsz	___lldiv@counter& (0+255),f,b
  6972  002A26  D7CC               	goto	l5341
  6973  002A28  D000               	goto	l1235
  6974  002A2A                     l1235:
  6975  002A2A  C0CD  F100         	movff	___lldiv@quotient,?___lldiv
  6976  002A2E  C0CE  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  6977  002A32  C0CF  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  6978  002A36  C0D0  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  6979  002A3A  0012               	return		;funcret
  6980  002A3C                     __end_of___lldiv:
  6981                           	opt stack 0
  6982                           tblptru	equ	0xFF8
  6983                           tblptrh	equ	0xFF7
  6984                           tblptrl	equ	0xFF6
  6985                           tablat	equ	0xFF5
  6986                           prodh	equ	0xFF4
  6987                           prodl	equ	0xFF3
  6988                           intcon	equ	0xFF2
  6989                           intcon2	equ	0xFF1
  6990                           intcon3	equ	0xFF0
  6991                           postinc0	equ	0xFEE
  6992                           wreg	equ	0xFE8
  6993                           postdec1	equ	0xFE5
  6994                           fsr1l	equ	0xFE1
  6995                           indf2	equ	0xFDF
  6996                           fsr2h	equ	0xFDA
  6997                           fsr2l	equ	0xFD9
  6998                           status	equ	0xFD8
  6999                           
  7000 ;; *************** function ___awdiv *****************
  7001 ;; Defined at:
  7002 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  dividend        2   36[BANK0 ] int 
  7005 ;;  divisor         2   38[BANK0 ] int 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  quotient        2    2[BANK1 ] int 
  7008 ;;  sign            1    1[BANK1 ] unsigned char 
  7009 ;;  counter         1    0[BANK1 ] unsigned char 
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  2   36[BANK0 ] int 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7019 ;;      Params:         0       4       0       0
  7020 ;;      Locals:         0       0       4       0
  7021 ;;      Temps:          0       0       0       0
  7022 ;;      Totals:         0       4       4       0
  7023 ;;Total ram usage:        8 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    4
  7026 ;; This function calls:
  7027 ;;		Nothing
  7028 ;; This function is called by:
  7029 ;;		_main
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text12
  7034  0027D6                     __ptext12:
  7035                           	opt stack 0
  7036  0027D6                     ___awdiv:
  7037                           	opt stack 26
  7038                           
  7039                           ;incstack = 0
  7040  0027D6  0E00               	movlw	0
  7041  0027D8  0101               	movlb	1	; () banked
  7042  0027DA  6F01               	movwf	___awdiv@sign& (0+255),b
  7043                           
  7044                           ; BSR set to: 1
  7045  0027DC  0100               	movlb	0	; () banked
  7046  0027DE  AFD0               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7047  0027E0  D009               	goto	l5295
  7048                           
  7049                           ; BSR set to: 0
  7050  0027E2  0100               	movlb	0	; () banked
  7051  0027E4  6DCF               	negf	___awdiv@divisor& (0+255),b
  7052  0027E6  1FD0               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7053  0027E8  B0D8               	btfsc	status,0,c
  7054  0027EA  2BD0               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7055                           
  7056                           ; BSR set to: 0
  7057  0027EC  0E01               	movlw	1
  7058  0027EE  0101               	movlb	1	; () banked
  7059  0027F0  6F01               	movwf	___awdiv@sign& (0+255),b
  7060  0027F2  D000               	goto	l5295
  7061  0027F4                     l5295:
  7062  0027F4  0100               	movlb	0	; () banked
  7063  0027F6  AFCE               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7064  0027F8  D009               	goto	l5301
  7065                           
  7066                           ; BSR set to: 0
  7067  0027FA  0100               	movlb	0	; () banked
  7068  0027FC  6DCD               	negf	___awdiv@dividend& (0+255),b
  7069  0027FE  1FCE               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7070  002800  B0D8               	btfsc	status,0,c
  7071  002802  2BCE               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7072                           
  7073                           ; BSR set to: 0
  7074  002804  0E01               	movlw	1
  7075  002806  0101               	movlb	1	; () banked
  7076  002808  1B01               	xorwf	___awdiv@sign& (0+255),f,b
  7077  00280A  D000               	goto	l5301
  7078  00280C                     l5301:
  7079  00280C  0E00               	movlw	0
  7080  00280E  0101               	movlb	1	; () banked
  7081  002810  6F03               	movwf	(___awdiv@quotient+1)& (0+255),b
  7082  002812  0E00               	movlw	0
  7083  002814  6F02               	movwf	___awdiv@quotient& (0+255),b
  7084                           
  7085                           ; BSR set to: 1
  7086  002816  0100               	movlb	0	; () banked
  7087  002818  51CF               	movf	___awdiv@divisor& (0+255),w,b
  7088  00281A  0100               	movlb	0	; () banked
  7089  00281C  11D0               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7090  00281E  B4D8               	btfsc	status,2,c
  7091  002820  D031               	goto	l5323
  7092                           
  7093                           ; BSR set to: 0
  7094  002822  0E01               	movlw	1
  7095  002824  0101               	movlb	1	; () banked
  7096  002826  6F00               	movwf	___awdiv@counter& (0+255),b
  7097  002828  D007               	goto	l5309
  7098  00282A                     l5307:
  7099  00282A  0100               	movlb	0	; () banked
  7100  00282C  90D8               	bcf	status,0,c
  7101  00282E  37CF               	rlcf	___awdiv@divisor& (0+255),f,b
  7102  002830  37D0               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7103  002832  0101               	movlb	1	; () banked
  7104  002834  2B00               	incf	___awdiv@counter& (0+255),f,b
  7105  002836  D000               	goto	l5309
  7106  002838                     l5309:
  7107                           
  7108                           ; BSR set to: 1
  7109  002838  0100               	movlb	0	; () banked
  7110  00283A  BFD0               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7111  00283C  D002               	goto	l5311
  7112  00283E  D7F5               	goto	l5307
  7113                           
  7114                           ; BSR set to: 0
  7115  002840  D000               	goto	l5311
  7116  002842                     l5311:
  7117  002842  0101               	movlb	1	; () banked
  7118  002844  90D8               	bcf	status,0,c
  7119  002846  3702               	rlcf	___awdiv@quotient& (0+255),f,b
  7120  002848  3703               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7121                           
  7122                           ; BSR set to: 1
  7123  00284A  0100               	movlb	0	; () banked
  7124  00284C  51CF               	movf	___awdiv@divisor& (0+255),w,b
  7125  00284E  0100               	movlb	0	; () banked
  7126  002850  5DCD               	subwf	___awdiv@dividend& (0+255),w,b
  7127  002852  0100               	movlb	0	; () banked
  7128  002854  51D0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7129  002856  0100               	movlb	0	; () banked
  7130  002858  59CE               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7131  00285A  A0D8               	btfss	status,0,c
  7132  00285C  D00B               	goto	l5319
  7133                           
  7134                           ; BSR set to: 0
  7135  00285E  0100               	movlb	0	; () banked
  7136  002860  51CF               	movf	___awdiv@divisor& (0+255),w,b
  7137  002862  0100               	movlb	0	; () banked
  7138  002864  5FCD               	subwf	___awdiv@dividend& (0+255),f,b
  7139  002866  0100               	movlb	0	; () banked
  7140  002868  51D0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7141  00286A  0100               	movlb	0	; () banked
  7142  00286C  5BCE               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7143                           
  7144                           ; BSR set to: 0
  7145  00286E  0101               	movlb	1	; () banked
  7146  002870  8102               	bsf	___awdiv@quotient& (0+255),0,b
  7147  002872  D000               	goto	l5319
  7148  002874                     l5319:
  7149  002874  0100               	movlb	0	; () banked
  7150  002876  90D8               	bcf	status,0,c
  7151  002878  33D0               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7152  00287A  33CF               	rrcf	___awdiv@divisor& (0+255),f,b
  7153                           
  7154                           ; BSR set to: 0
  7155  00287C  0101               	movlb	1	; () banked
  7156  00287E  2F00               	decfsz	___awdiv@counter& (0+255),f,b
  7157  002880  D7E0               	goto	l5311
  7158                           
  7159                           ; BSR set to: 1
  7160  002882  D000               	goto	l5323
  7161  002884                     l5323:
  7162  002884  0101               	movlb	1	; () banked
  7163  002886  5101               	movf	___awdiv@sign& (0+255),w,b
  7164  002888  0101               	movlb	1	; () banked
  7165  00288A  B4D8               	btfsc	status,2,c
  7166  00288C  D006               	goto	l5327
  7167                           
  7168                           ; BSR set to: 1
  7169  00288E  0101               	movlb	1	; () banked
  7170  002890  6D02               	negf	___awdiv@quotient& (0+255),b
  7171  002892  1F03               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7172  002894  B0D8               	btfsc	status,0,c
  7173  002896  2B03               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7174  002898  D000               	goto	l5327
  7175  00289A                     l5327:
  7176                           
  7177                           ; BSR set to: 1
  7178  00289A  C102  F0CD         	movff	___awdiv@quotient,?___awdiv
  7179  00289E  C103  F0CE         	movff	___awdiv@quotient+1,?___awdiv+1
  7180  0028A2  D000               	goto	l973
  7181  0028A4                     l973:
  7182                           
  7183                           ; BSR set to: 1
  7184  0028A4  0012               	return		;funcret
  7185  0028A6                     __end_of___awdiv:
  7186                           	opt stack 0
  7187                           tblptru	equ	0xFF8
  7188                           tblptrh	equ	0xFF7
  7189                           tblptrl	equ	0xFF6
  7190                           tablat	equ	0xFF5
  7191                           prodh	equ	0xFF4
  7192                           prodl	equ	0xFF3
  7193                           intcon	equ	0xFF2
  7194                           intcon2	equ	0xFF1
  7195                           intcon3	equ	0xFF0
  7196                           postinc0	equ	0xFEE
  7197                           wreg	equ	0xFE8
  7198                           postdec1	equ	0xFE5
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           fsr2h	equ	0xFDA
  7202                           fsr2l	equ	0xFD9
  7203                           status	equ	0xFD8
  7204                           
  7205 ;; *************** function ___aldiv *****************
  7206 ;; Defined at:
  7207 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;  dividend        4    8[BANK1 ] long 
  7210 ;;  divisor         4   12[BANK1 ] long 
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  quotient        4   18[BANK1 ] long 
  7213 ;;  sign            1   17[BANK1 ] unsigned char 
  7214 ;;  counter         1   16[BANK1 ] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  4    8[BANK1 ] long 
  7217 ;; Registers used:
  7218 ;;		wreg, status,2, status,0
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7224 ;;      Params:         0       0       8       0
  7225 ;;      Locals:         0       0       6       0
  7226 ;;      Temps:          0       0       0       0
  7227 ;;      Totals:         0       0      14       0
  7228 ;;Total ram usage:       14 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    4
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_main
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text13
  7239  0026AA                     __ptext13:
  7240                           	opt stack 0
  7241  0026AA                     ___aldiv:
  7242                           	opt stack 26
  7243                           
  7244                           ; BSR set to: 1
  7245                           ;incstack = 0
  7246  0026AA  0E00               	movlw	0
  7247  0026AC  0101               	movlb	1	; () banked
  7248  0026AE  6F11               	movwf	___aldiv@sign& (0+255),b
  7249                           
  7250                           ; BSR set to: 1
  7251  0026B0  0101               	movlb	1	; () banked
  7252  0026B2  AF0F               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7253  0026B4  D00D               	goto	l5251
  7254                           
  7255                           ; BSR set to: 1
  7256  0026B6  0101               	movlb	1	; () banked
  7257  0026B8  1F0F               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7258  0026BA  1F0E               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7259  0026BC  1F0D               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7260  0026BE  6D0C               	negf	___aldiv@divisor& (0+255),b
  7261  0026C0  0E00               	movlw	0
  7262  0026C2  230D               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7263  0026C4  230E               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7264  0026C6  230F               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7265                           
  7266                           ; BSR set to: 1
  7267  0026C8  0E01               	movlw	1
  7268  0026CA  0101               	movlb	1	; () banked
  7269  0026CC  6F11               	movwf	___aldiv@sign& (0+255),b
  7270  0026CE  D000               	goto	l5251
  7271  0026D0                     l5251:
  7272                           
  7273                           ; BSR set to: 1
  7274  0026D0  0101               	movlb	1	; () banked
  7275  0026D2  AF0B               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7276  0026D4  D00D               	goto	l5257
  7277                           
  7278                           ; BSR set to: 1
  7279  0026D6  0101               	movlb	1	; () banked
  7280  0026D8  1F0B               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7281  0026DA  1F0A               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7282  0026DC  1F09               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7283  0026DE  6D08               	negf	___aldiv@dividend& (0+255),b
  7284  0026E0  0E00               	movlw	0
  7285  0026E2  2309               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7286  0026E4  230A               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7287  0026E6  230B               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7288                           
  7289                           ; BSR set to: 1
  7290  0026E8  0E01               	movlw	1
  7291  0026EA  0101               	movlb	1	; () banked
  7292  0026EC  1B11               	xorwf	___aldiv@sign& (0+255),f,b
  7293  0026EE  D000               	goto	l5257
  7294  0026F0                     l5257:
  7295                           
  7296                           ; BSR set to: 1
  7297  0026F0  0E00               	movlw	0
  7298  0026F2  0101               	movlb	1	; () banked
  7299  0026F4  6F12               	movwf	___aldiv@quotient& (0+255),b
  7300  0026F6  0E00               	movlw	0
  7301  0026F8  6F13               	movwf	(___aldiv@quotient+1)& (0+255),b
  7302  0026FA  0E00               	movlw	0
  7303  0026FC  6F14               	movwf	(___aldiv@quotient+2)& (0+255),b
  7304  0026FE  0E00               	movlw	0
  7305  002700  6F15               	movwf	(___aldiv@quotient+3)& (0+255),b
  7306                           
  7307                           ; BSR set to: 1
  7308  002702  0101               	movlb	1	; () banked
  7309  002704  510C               	movf	___aldiv@divisor& (0+255),w,b
  7310  002706  0101               	movlb	1	; () banked
  7311  002708  110D               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7312  00270A  0101               	movlb	1	; () banked
  7313  00270C  110E               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7314  00270E  0101               	movlb	1	; () banked
  7315  002710  110F               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7316  002712  B4D8               	btfsc	status,2,c
  7317  002714  D047               	goto	l5279
  7318                           
  7319                           ; BSR set to: 1
  7320  002716  0E01               	movlw	1
  7321  002718  0101               	movlb	1	; () banked
  7322  00271A  6F10               	movwf	___aldiv@counter& (0+255),b
  7323  00271C  D009               	goto	l5265
  7324  00271E                     l5263:
  7325                           
  7326                           ; BSR set to: 1
  7327  00271E  0101               	movlb	1	; () banked
  7328  002720  90D8               	bcf	status,0,c
  7329  002722  370C               	rlcf	___aldiv@divisor& (0+255),f,b
  7330  002724  370D               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7331  002726  370E               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7332  002728  370F               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7333  00272A  0101               	movlb	1	; () banked
  7334  00272C  2B10               	incf	___aldiv@counter& (0+255),f,b
  7335  00272E  D000               	goto	l5265
  7336  002730                     l5265:
  7337                           
  7338                           ; BSR set to: 1
  7339  002730  0101               	movlb	1	; () banked
  7340  002732  BF0F               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  7341  002734  D002               	goto	l5267
  7342  002736  D7F3               	goto	l5263
  7343                           
  7344                           ; BSR set to: 1
  7345  002738  D000               	goto	l5267
  7346  00273A                     l5267:
  7347                           
  7348                           ; BSR set to: 1
  7349  00273A  0101               	movlb	1	; () banked
  7350  00273C  90D8               	bcf	status,0,c
  7351  00273E  3712               	rlcf	___aldiv@quotient& (0+255),f,b
  7352  002740  3713               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7353  002742  3714               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7354  002744  3715               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7355                           
  7356                           ; BSR set to: 1
  7357  002746  0101               	movlb	1	; () banked
  7358  002748  510C               	movf	___aldiv@divisor& (0+255),w,b
  7359  00274A  0101               	movlb	1	; () banked
  7360  00274C  5D08               	subwf	___aldiv@dividend& (0+255),w,b
  7361  00274E  0101               	movlb	1	; () banked
  7362  002750  510D               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7363  002752  0101               	movlb	1	; () banked
  7364  002754  5909               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7365  002756  0101               	movlb	1	; () banked
  7366  002758  510E               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7367  00275A  0101               	movlb	1	; () banked
  7368  00275C  590A               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7369  00275E  0101               	movlb	1	; () banked
  7370  002760  510F               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7371  002762  0101               	movlb	1	; () banked
  7372  002764  590B               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7373  002766  A0D8               	btfss	status,0,c
  7374  002768  D013               	goto	l5275
  7375                           
  7376                           ; BSR set to: 1
  7377  00276A  0101               	movlb	1	; () banked
  7378  00276C  510C               	movf	___aldiv@divisor& (0+255),w,b
  7379  00276E  0101               	movlb	1	; () banked
  7380  002770  5F08               	subwf	___aldiv@dividend& (0+255),f,b
  7381  002772  0101               	movlb	1	; () banked
  7382  002774  510D               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7383  002776  0101               	movlb	1	; () banked
  7384  002778  5B09               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7385  00277A  0101               	movlb	1	; () banked
  7386  00277C  510E               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7387  00277E  0101               	movlb	1	; () banked
  7388  002780  5B0A               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7389  002782  0101               	movlb	1	; () banked
  7390  002784  510F               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7391  002786  0101               	movlb	1	; () banked
  7392  002788  5B0B               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7393                           
  7394                           ; BSR set to: 1
  7395  00278A  0101               	movlb	1	; () banked
  7396  00278C  8112               	bsf	___aldiv@quotient& (0+255),0,b
  7397  00278E  D000               	goto	l5275
  7398  002790                     l5275:
  7399                           
  7400                           ; BSR set to: 1
  7401  002790  0101               	movlb	1	; () banked
  7402  002792  90D8               	bcf	status,0,c
  7403  002794  330F               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7404  002796  330E               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7405  002798  330D               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7406  00279A  330C               	rrcf	___aldiv@divisor& (0+255),f,b
  7407                           
  7408                           ; BSR set to: 1
  7409  00279C  0101               	movlb	1	; () banked
  7410  00279E  2F10               	decfsz	___aldiv@counter& (0+255),f,b
  7411  0027A0  D7CC               	goto	l5267
  7412                           
  7413                           ; BSR set to: 1
  7414  0027A2  D000               	goto	l5279
  7415  0027A4                     l5279:
  7416                           
  7417                           ; BSR set to: 1
  7418  0027A4  0101               	movlb	1	; () banked
  7419  0027A6  5111               	movf	___aldiv@sign& (0+255),w,b
  7420  0027A8  0101               	movlb	1	; () banked
  7421  0027AA  B4D8               	btfsc	status,2,c
  7422  0027AC  D00A               	goto	l5283
  7423                           
  7424                           ; BSR set to: 1
  7425  0027AE  0101               	movlb	1	; () banked
  7426  0027B0  1F15               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7427  0027B2  1F14               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7428  0027B4  1F13               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7429  0027B6  6D12               	negf	___aldiv@quotient& (0+255),b
  7430  0027B8  0E00               	movlw	0
  7431  0027BA  2313               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7432  0027BC  2314               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7433  0027BE  2315               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7434  0027C0  D000               	goto	l5283
  7435  0027C2                     l5283:
  7436                           
  7437                           ; BSR set to: 1
  7438  0027C2  C112  F108         	movff	___aldiv@quotient,?___aldiv
  7439  0027C6  C113  F109         	movff	___aldiv@quotient+1,?___aldiv+1
  7440  0027CA  C114  F10A         	movff	___aldiv@quotient+2,?___aldiv+2
  7441  0027CE  C115  F10B         	movff	___aldiv@quotient+3,?___aldiv+3
  7442  0027D2  D000               	goto	l849
  7443  0027D4                     l849:
  7444                           
  7445                           ; BSR set to: 1
  7446  0027D4  0012               	return		;funcret
  7447  0027D6                     __end_of___aldiv:
  7448                           	opt stack 0
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           intcon2	equ	0xFF1
  7457                           intcon3	equ	0xFF0
  7458                           postinc0	equ	0xFEE
  7459                           wreg	equ	0xFE8
  7460                           postdec1	equ	0xFE5
  7461                           fsr1l	equ	0xFE1
  7462                           indf2	equ	0xFDF
  7463                           fsr2h	equ	0xFDA
  7464                           fsr2l	equ	0xFD9
  7465                           status	equ	0xFD8
  7466                           
  7467 ;; *************** function _CANisTXwarningON *****************
  7468 ;; Defined at:
  7469 ;;		line 1119 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      unsigned char 
  7476 ;; Registers used:
  7477 ;;		wreg
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7483 ;;      Params:         0       0       0       0
  7484 ;;      Locals:         0       0       0       0
  7485 ;;      Temps:          0       0       0       0
  7486 ;;      Totals:         0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:    4
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_main
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text14
  7498  002D46                     __ptext14:
  7499                           	opt stack 0
  7500  002D46                     _CANisTXwarningON:
  7501                           	opt stack 26
  7502                           
  7503                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7504                           
  7505                           ; BSR set to: 1
  7506                           ;incstack = 0
  7507  002D46  A474               	btfss	3956,2,c	;volatile
  7508  002D48  D002               	goto	u6580
  7509  002D4A  0E01               	movlw	1
  7510  002D4C  D002               	goto	l553
  7511  002D4E                     u6580:
  7512  002D4E  0E00               	movlw	0
  7513  002D50  D000               	goto	l553
  7514  002D52                     l553:
  7515  002D52  0012               	return		;funcret
  7516  002D54                     __end_of_CANisTXwarningON:
  7517                           	opt stack 0
  7518                           tblptru	equ	0xFF8
  7519                           tblptrh	equ	0xFF7
  7520                           tblptrl	equ	0xFF6
  7521                           tablat	equ	0xFF5
  7522                           prodh	equ	0xFF4
  7523                           prodl	equ	0xFF3
  7524                           intcon	equ	0xFF2
  7525                           intcon2	equ	0xFF1
  7526                           intcon3	equ	0xFF0
  7527                           postinc0	equ	0xFEE
  7528                           wreg	equ	0xFE8
  7529                           postdec1	equ	0xFE5
  7530                           fsr1l	equ	0xFE1
  7531                           indf2	equ	0xFDF
  7532                           fsr2h	equ	0xFDA
  7533                           fsr2l	equ	0xFD9
  7534                           status	equ	0xFD8
  7535                           
  7536 ;; *************** function _CANisRXwarningON *****************
  7537 ;; Defined at:
  7538 ;;		line 1127 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;		None
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;		None
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  1    wreg      unsigned char 
  7545 ;; Registers used:
  7546 ;;		wreg
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7552 ;;      Params:         0       0       0       0
  7553 ;;      Locals:         0       0       0       0
  7554 ;;      Temps:          0       0       0       0
  7555 ;;      Totals:         0       0       0       0
  7556 ;;Total ram usage:        0 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    4
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_main
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text15
  7567  002D54                     __ptext15:
  7568                           	opt stack 0
  7569  002D54                     _CANisRXwarningON:
  7570                           	opt stack 26
  7571                           
  7572                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7573                           
  7574                           ;incstack = 0
  7575  002D54  A274               	btfss	3956,1,c	;volatile
  7576  002D56  D002               	goto	u6590
  7577  002D58  0E01               	movlw	1
  7578  002D5A  D002               	goto	l556
  7579  002D5C                     u6590:
  7580  002D5C  0E00               	movlw	0
  7581  002D5E  D000               	goto	l556
  7582  002D60                     l556:
  7583  002D60  0012               	return		;funcret
  7584  002D62                     __end_of_CANisRXwarningON:
  7585                           	opt stack 0
  7586                           tblptru	equ	0xFF8
  7587                           tblptrh	equ	0xFF7
  7588                           tblptrl	equ	0xFF6
  7589                           tablat	equ	0xFF5
  7590                           prodh	equ	0xFF4
  7591                           prodl	equ	0xFF3
  7592                           intcon	equ	0xFF2
  7593                           intcon2	equ	0xFF1
  7594                           intcon3	equ	0xFF0
  7595                           postinc0	equ	0xFEE
  7596                           wreg	equ	0xFE8
  7597                           postdec1	equ	0xFE5
  7598                           fsr1l	equ	0xFE1
  7599                           indf2	equ	0xFDF
  7600                           fsr2h	equ	0xFDA
  7601                           fsr2l	equ	0xFD9
  7602                           status	equ	0xFD8
  7603                           
  7604 ;; *************** function _ISR_Bassa *****************
  7605 ;; Defined at:
  7606 ;;		line 236 in file "ABS_Code.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;		None               void
  7613 ;; Registers used:
  7614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7620 ;;      Params:         0       0       0       0
  7621 ;;      Locals:         0       0       0       0
  7622 ;;      Temps:         18       0       0       0
  7623 ;;      Totals:        18       0       0       0
  7624 ;;Total ram usage:       18 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    3
  7627 ;; This function calls:
  7628 ;;		_CANisRxReady
  7629 ;;		_CANreceiveMessage
  7630 ;;		___lbdiv
  7631 ;; This function is called by:
  7632 ;;		Interrupt level 1
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           	psect	intcodelo
  7637  000018                     __pintcodelo:
  7638                           	opt stack 0
  7639  000018                     _ISR_Bassa:
  7640                           	opt stack 24
  7641                           
  7642                           ;incstack = 0
  7643  000018  CFD8 F037          	movff	status,??_ISR_Bassa+1
  7644  00001C  CFE8 F038          	movff	wreg,??_ISR_Bassa+2
  7645  000020  CFE0 F039          	movff	bsr,??_ISR_Bassa+3
  7646  000024  CFFA F03A          	movff	pclath,??_ISR_Bassa+4
  7647  000028  CFFB F03B          	movff	pclatu,??_ISR_Bassa+5
  7648  00002C  CFE9 F03C          	movff	fsr0l,??_ISR_Bassa+6
  7649  000030  CFEA F03D          	movff	fsr0h,??_ISR_Bassa+7
  7650  000034  CFE1 F03E          	movff	fsr1l,??_ISR_Bassa+8
  7651  000038  CFE2 F03F          	movff	fsr1h,??_ISR_Bassa+9
  7652  00003C  CFD9 F040          	movff	fsr2l,??_ISR_Bassa+10
  7653  000040  CFDA F041          	movff	fsr2h,??_ISR_Bassa+11
  7654  000044  CFF3 F042          	movff	prodl,??_ISR_Bassa+12
  7655  000048  CFF4 F043          	movff	prodh,??_ISR_Bassa+13
  7656  00004C  CFF6 F044          	movff	tblptrl,??_ISR_Bassa+14
  7657  000050  CFF7 F045          	movff	tblptrh,??_ISR_Bassa+15
  7658  000054  CFF8 F046          	movff	tblptru,??_ISR_Bassa+16
  7659  000058  CFF5 F047          	movff	tablat,??_ISR_Bassa+17
  7660                           
  7661                           ;ABS_Code.c: 238: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7662  00005C  B0A4               	btfsc	4004,0,c	;volatile
  7663  00005E  D002               	goto	i1l4203
  7664  000060  A2A4               	btfss	4004,1,c	;volatile
  7665  000062  D060               	goto	i1l4239
  7666  000064                     i1l4203:
  7667                           
  7668                           ;ABS_Code.c: 239: if (CANisRxReady()) {
  7669  000064  EC8E  F016         	call	_CANisRxReady	;wreg free
  7670  000068  0900               	iorlw	0
  7671  00006A  B4D8               	btfsc	status,2,c
  7672  00006C  D058               	goto	i1l4235
  7673                           
  7674                           ;ABS_Code.c: 240: CANreceiveMessage(&msg);
  7675  00006E  0E82               	movlw	low _msg
  7676  000070  6E2A               	movwf	CANreceiveMessage@msg,c
  7677  000072  0E00               	movlw	high _msg
  7678  000074  6E2B               	movwf	CANreceiveMessage@msg+1,c
  7679  000076  EC2E  F00A         	call	_CANreceiveMessage	;wreg free
  7680                           
  7681                           ;ABS_Code.c: 241: if (msg.RTR == 1) {
  7682  00007A  0100               	movlb	0	; () banked
  7683  00007C  0590               	decf	(_msg+14)& (0+255),w,b
  7684  00007E  A4D8               	btfss	status,2,c
  7685  000080  D00A               	goto	i1l4211
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;ABS_Code.c: 242: remote_frame_id = msg.identifier;
  7689  000082  C082  F001         	movff	_msg,_remote_frame_id	;volatile
  7690  000086  C083  F002         	movff	_msg+1,_remote_frame_id+1	;volatile
  7691  00008A  C084  F003         	movff	_msg+2,_remote_frame_id+2	;volatile
  7692  00008E  C085  F004         	movff	_msg+3,_remote_frame_id+3	;volatile
  7693                           
  7694                           ;ABS_Code.c: 243: remote_frame = 1;
  7695  000092  8049               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7696  000094  D000               	goto	i1l4211
  7697  000096                     i1l4211:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;ABS_Code.c: 244: }
  7701                           ;ABS_Code.c: 245: if (msg.identifier == 0b00000000111) {
  7702  000096  0E07               	movlw	7
  7703  000098  0100               	movlb	0	; () banked
  7704  00009A  1982               	xorwf	_msg& (0+255),w,b
  7705  00009C  0100               	movlb	0	; () banked
  7706  00009E  1183               	iorwf	(_msg+1)& (0+255),w,b
  7707  0000A0  0100               	movlb	0	; () banked
  7708  0000A2  1184               	iorwf	(_msg+2)& (0+255),w,b
  7709  0000A4  0100               	movlb	0	; () banked
  7710  0000A6  1185               	iorwf	(_msg+3)& (0+255),w,b
  7711  0000A8  A4D8               	btfss	status,2,c
  7712  0000AA  D008               	goto	i1l4217
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;ABS_Code.c: 246: if (msg.data[0] >= 90) {
  7716  0000AC  0E59               	movlw	89
  7717  0000AE  0100               	movlb	0	; () banked
  7718  0000B0  6586               	cpfsgt	(_msg+4)& (0+255),b
  7719  0000B2  D002               	goto	i1l708
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;ABS_Code.c: 247: steering_dir = 1;
  7723  0000B4  8249               	bsf	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  7724                           
  7725                           ;ABS_Code.c: 248: } else {
  7726  0000B6  D002               	goto	i1l4217
  7727  0000B8                     i1l708:
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;ABS_Code.c: 249: steering_dir = 0;
  7731  0000B8  9249               	bcf	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  7732                           
  7733                           ; BSR set to: 0
  7734  0000BA  D000               	goto	i1l4217
  7735  0000BC                     i1l4217:
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;ABS_Code.c: 250: }
  7739                           ;ABS_Code.c: 251: }
  7740                           ;ABS_Code.c: 252: if (msg.identifier == 0b00000000110) {
  7741  0000BC  0E06               	movlw	6
  7742  0000BE  0100               	movlb	0	; () banked
  7743  0000C0  1982               	xorwf	_msg& (0+255),w,b
  7744  0000C2  0100               	movlb	0	; () banked
  7745  0000C4  1183               	iorwf	(_msg+1)& (0+255),w,b
  7746  0000C6  0100               	movlb	0	; () banked
  7747  0000C8  1184               	iorwf	(_msg+2)& (0+255),w,b
  7748  0000CA  0100               	movlb	0	; () banked
  7749  0000CC  1185               	iorwf	(_msg+3)& (0+255),w,b
  7750  0000CE  A4D8               	btfss	status,2,c
  7751  0000D0  D005               	goto	i1l4221
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;ABS_Code.c: 253: brake_signal_CAN = msg.data[0];
  7755  0000D2  C086  F024         	movff	_msg+4,_brake_signal_CAN	;volatile
  7756                           
  7757                           ;ABS_Code.c: 254: Analogic_Mode = msg.data[1];
  7758  0000D6  C087  F023         	movff	_msg+5,_Analogic_Mode	;volatile
  7759  0000DA  D000               	goto	i1l4221
  7760  0000DC                     i1l4221:
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;ABS_Code.c: 255: }
  7764                           ;ABS_Code.c: 256: if (msg.identifier == 0b00000001111) {
  7765  0000DC  0E0F               	movlw	15
  7766  0000DE  0100               	movlb	0	; () banked
  7767  0000E0  1982               	xorwf	_msg& (0+255),w,b
  7768  0000E2  0100               	movlb	0	; () banked
  7769  0000E4  1183               	iorwf	(_msg+1)& (0+255),w,b
  7770  0000E6  0100               	movlb	0	; () banked
  7771  0000E8  1184               	iorwf	(_msg+2)& (0+255),w,b
  7772  0000EA  0100               	movlb	0	; () banked
  7773  0000EC  1185               	iorwf	(_msg+3)& (0+255),w,b
  7774  0000EE  A4D8               	btfss	status,2,c
  7775  0000F0  D016               	goto	i1l4235
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;ABS_Code.c: 257: distance_set_value = (msg.data[0]) / step;
  7779  0000F2  C027  F02A         	movff	_step,___lbdiv@divisor	;volatile
  7780  0000F6  0100               	movlb	0	; () banked
  7781  0000F8  5186               	movf	(_msg+4)& (0+255),w,b
  7782  0000FA  EC14  F016         	call	___lbdiv
  7783  0000FE  6E36               	movwf	??_ISR_Bassa& (0+255),c
  7784  000100  5036               	movf	??_ISR_Bassa,w,c
  7785  000102  6E1D               	movwf	_distance_set_value,c	;volatile
  7786  000104  6A1E               	clrf	_distance_set_value+1,c	;volatile
  7787                           
  7788                           ;ABS_Code.c: 258: distance_set_counter_1 = 0;
  7789  000106  0E00               	movlw	0
  7790  000108  6E1A               	movwf	_distance_set_counter_1+1,c	;volatile
  7791  00010A  0E00               	movlw	0
  7792  00010C  6E19               	movwf	_distance_set_counter_1,c	;volatile
  7793                           
  7794                           ;ABS_Code.c: 259: distance_set_counter_2 = 0;
  7795  00010E  0E00               	movlw	0
  7796  000110  6E1C               	movwf	_distance_set_counter_2+1,c	;volatile
  7797  000112  0E00               	movlw	0
  7798  000114  6E1B               	movwf	_distance_set_counter_2,c	;volatile
  7799                           
  7800                           ;ABS_Code.c: 260: distance_reached_flag = 0;
  7801  000116  9C48               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  7802                           
  7803                           ;ABS_Code.c: 261: distance_set_flag = 1;
  7804  000118  8E48               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  7805                           
  7806                           ;ABS_Code.c: 262: PORTAbits.RA1 = 0;
  7807  00011A  9280               	bcf	3968,1,c	;volatile
  7808  00011C  D000               	goto	i1l4235
  7809  00011E                     i1l4235:
  7810                           
  7811                           ;ABS_Code.c: 263: }
  7812                           ;ABS_Code.c: 264: }
  7813                           ;ABS_Code.c: 265: PIR3bits.RXB0IF = 0;
  7814  00011E  90A4               	bcf	4004,0,c	;volatile
  7815                           
  7816                           ;ABS_Code.c: 266: PIR3bits.RXB1IF = 0;
  7817  000120  92A4               	bcf	4004,1,c	;volatile
  7818  000122  D000               	goto	i1l4239
  7819  000124                     i1l4239:
  7820                           
  7821                           ;ABS_Code.c: 267: }
  7822                           ;ABS_Code.c: 270: if (PIR1bits.TMR1IF == 1) {
  7823  000124  A09E               	btfss	3998,0,c	;volatile
  7824  000126  D007               	goto	i1l4247
  7825                           
  7826                           ;ABS_Code.c: 271: TMR1_overflow = 1;
  7827  000128  8448               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7828                           
  7829                           ;ABS_Code.c: 272: TMR1H = 0x00;
  7830  00012A  0E00               	movlw	0
  7831  00012C  6ECF               	movwf	4047,c	;volatile
  7832                           
  7833                           ;ABS_Code.c: 273: TMR1L = 0x00;
  7834  00012E  0E00               	movlw	0
  7835  000130  6ECE               	movwf	4046,c	;volatile
  7836                           
  7837                           ;ABS_Code.c: 274: PIR1bits.TMR1IF = 0;
  7838  000132  909E               	bcf	3998,0,c	;volatile
  7839  000134  D000               	goto	i1l4247
  7840  000136                     i1l4247:
  7841                           
  7842                           ;ABS_Code.c: 275: }
  7843                           ;ABS_Code.c: 278: if (PIR2bits.TMR3IF == 1) {
  7844  000136  A2A1               	btfss	4001,1,c	;volatile
  7845  000138  D007               	goto	i1l714
  7846                           
  7847                           ;ABS_Code.c: 279: TMR3_overflow = 1;
  7848  00013A  8648               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7849                           
  7850                           ;ABS_Code.c: 280: TMR3H = 0x00;
  7851  00013C  0E00               	movlw	0
  7852  00013E  6EB3               	movwf	4019,c	;volatile
  7853                           
  7854                           ;ABS_Code.c: 281: TMR3L = 0x00;
  7855  000140  0E00               	movlw	0
  7856  000142  6EB2               	movwf	4018,c	;volatile
  7857                           
  7858                           ;ABS_Code.c: 282: PIR2bits.TMR3IF = 0;
  7859  000144  92A1               	bcf	4001,1,c	;volatile
  7860  000146  D000               	goto	i1l714
  7861  000148                     i1l714:
  7862  000148  C047  FFF5         	movff	??_ISR_Bassa+17,tablat
  7863  00014C  C046  FFF8         	movff	??_ISR_Bassa+16,tblptru
  7864  000150  C045  FFF7         	movff	??_ISR_Bassa+15,tblptrh
  7865  000154  C044  FFF6         	movff	??_ISR_Bassa+14,tblptrl
  7866  000158  C043  FFF4         	movff	??_ISR_Bassa+13,prodh
  7867  00015C  C042  FFF3         	movff	??_ISR_Bassa+12,prodl
  7868  000160  C041  FFDA         	movff	??_ISR_Bassa+11,fsr2h
  7869  000164  C040  FFD9         	movff	??_ISR_Bassa+10,fsr2l
  7870  000168  C03F  FFE2         	movff	??_ISR_Bassa+9,fsr1h
  7871  00016C  C03E  FFE1         	movff	??_ISR_Bassa+8,fsr1l
  7872  000170  C03D  FFEA         	movff	??_ISR_Bassa+7,fsr0h
  7873  000174  C03C  FFE9         	movff	??_ISR_Bassa+6,fsr0l
  7874  000178  C03B  FFFB         	movff	??_ISR_Bassa+5,pclatu
  7875  00017C  C03A  FFFA         	movff	??_ISR_Bassa+4,pclath
  7876  000180  C039  FFE0         	movff	??_ISR_Bassa+3,bsr
  7877  000184  C038  FFE8         	movff	??_ISR_Bassa+2,wreg
  7878  000188  C037  FFD8         	movff	??_ISR_Bassa+1,status
  7879  00018C  0010               	retfie	
  7880  00018E                     __end_of_ISR_Bassa:
  7881                           	opt stack 0
  7882                           pclatu	equ	0xFFB
  7883                           pclath	equ	0xFFA
  7884                           tblptru	equ	0xFF8
  7885                           tblptrh	equ	0xFF7
  7886                           tblptrl	equ	0xFF6
  7887                           tablat	equ	0xFF5
  7888                           prodh	equ	0xFF4
  7889                           prodl	equ	0xFF3
  7890                           intcon	equ	0xFF2
  7891                           intcon2	equ	0xFF1
  7892                           intcon3	equ	0xFF0
  7893                           postinc0	equ	0xFEE
  7894                           fsr0h	equ	0xFEA
  7895                           fsr0l	equ	0xFE9
  7896                           wreg	equ	0xFE8
  7897                           postdec1	equ	0xFE5
  7898                           fsr1h	equ	0xFE2
  7899                           fsr1l	equ	0xFE1
  7900                           bsr	equ	0xFE0
  7901                           indf2	equ	0xFDF
  7902                           fsr2h	equ	0xFDA
  7903                           fsr2l	equ	0xFD9
  7904                           status	equ	0xFD8
  7905                           
  7906 ;; *************** function ___lbdiv *****************
  7907 ;; Defined at:
  7908 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbdiv.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  dividend        1    wreg     unsigned char 
  7911 ;;  divisor         1    0[COMRAM] unsigned char 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  dividend        1    1[COMRAM] unsigned char 
  7914 ;;  quotient        1    3[COMRAM] unsigned char 
  7915 ;;  counter         1    2[COMRAM] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      unsigned char 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7925 ;;      Params:         1       0       0       0
  7926 ;;      Locals:         3       0       0       0
  7927 ;;      Temps:          0       0       0       0
  7928 ;;      Totals:         4       0       0       0
  7929 ;;Total ram usage:        4 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    2
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_ISR_Bassa
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text17
  7940  002C28                     __ptext17:
  7941                           	opt stack 0
  7942  002C28                     ___lbdiv:
  7943                           	opt stack 24
  7944                           
  7945                           ;incstack = 0
  7946                           ;___lbdiv@dividend stored from wreg
  7947  002C28  6E2B               	movwf	___lbdiv@dividend,c
  7948  002C2A  0E00               	movlw	0
  7949  002C2C  6E2D               	movwf	___lbdiv@quotient,c
  7950  002C2E  502A               	movf	___lbdiv@divisor,w,c
  7951  002C30  B4D8               	btfsc	status,2,c
  7952  002C32  D01A               	goto	i1l4007
  7953  002C34  0E01               	movlw	1
  7954  002C36  6E2C               	movwf	___lbdiv@counter,c
  7955  002C38  D004               	goto	i1l3995
  7956  002C3A                     i1l3991:
  7957  002C3A  90D8               	bcf	status,0,c
  7958  002C3C  362A               	rlcf	___lbdiv@divisor,f,c
  7959  002C3E  2A2C               	incf	___lbdiv@counter,f,c
  7960  002C40  D000               	goto	i1l3995
  7961  002C42                     i1l3995:
  7962  002C42  BE2A               	btfsc	___lbdiv@divisor,7,c
  7963  002C44  D002               	goto	i1l3997
  7964  002C46  D7F9               	goto	i1l3991
  7965  002C48  D000               	goto	i1l3997
  7966  002C4A                     i1l3997:
  7967  002C4A  90D8               	bcf	status,0,c
  7968  002C4C  362D               	rlcf	___lbdiv@quotient,f,c
  7969  002C4E  502A               	movf	___lbdiv@divisor,w,c
  7970  002C50  5C2B               	subwf	___lbdiv@dividend,w,c
  7971  002C52  A0D8               	btfss	status,0,c
  7972  002C54  D004               	goto	i1l4003
  7973  002C56  502A               	movf	___lbdiv@divisor,w,c
  7974  002C58  5E2B               	subwf	___lbdiv@dividend,f,c
  7975  002C5A  802D               	bsf	___lbdiv@quotient,0,c
  7976  002C5C  D000               	goto	i1l4003
  7977  002C5E                     i1l4003:
  7978  002C5E  90D8               	bcf	status,0,c
  7979  002C60  322A               	rrcf	___lbdiv@divisor,f,c
  7980  002C62  2E2C               	decfsz	___lbdiv@counter,f,c
  7981  002C64  D7F2               	goto	i1l3997
  7982  002C66  D000               	goto	i1l4007
  7983  002C68                     i1l4007:
  7984  002C68  502D               	movf	___lbdiv@quotient,w,c
  7985  002C6A  D000               	goto	i1l1216
  7986  002C6C                     i1l1216:
  7987  002C6C  0012               	return		;funcret
  7988  002C6E                     __end_of___lbdiv:
  7989                           	opt stack 0
  7990                           pclatu	equ	0xFFB
  7991                           pclath	equ	0xFFA
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           intcon2	equ	0xFF1
  8000                           intcon3	equ	0xFF0
  8001                           postinc0	equ	0xFEE
  8002                           fsr0h	equ	0xFEA
  8003                           fsr0l	equ	0xFE9
  8004                           wreg	equ	0xFE8
  8005                           postdec1	equ	0xFE5
  8006                           fsr1h	equ	0xFE2
  8007                           fsr1l	equ	0xFE1
  8008                           bsr	equ	0xFE0
  8009                           indf2	equ	0xFDF
  8010                           fsr2h	equ	0xFDA
  8011                           fsr2l	equ	0xFD9
  8012                           status	equ	0xFD8
  8013                           
  8014 ;; *************** function _CANreceiveMessage *****************
  8015 ;; Defined at:
  8016 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  msg             2    0[COMRAM] PTR struct .
  8019 ;;		 -> msg(15), 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  tamp            1   11[COMRAM] unsigned char 
  8022 ;;  error           1   10[COMRAM] unsigned char 
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  1    wreg      unsigned char 
  8025 ;; Registers used:
  8026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8032 ;;      Params:         2       0       0       0
  8033 ;;      Locals:         2       0       0       0
  8034 ;;      Temps:          8       0       0       0
  8035 ;;      Totals:        12       0       0       0
  8036 ;;Total ram usage:       12 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    2
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_ISR_Bassa
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           	psect	text18
  8047  00145C                     __ptext18:
  8048                           	opt stack 0
  8049  00145C                     _CANreceiveMessage:
  8050                           	opt stack 24
  8051                           
  8052                           ;inc\CANlib.h: 530: BYTE tamp;
  8053                           ;inc\CANlib.h: 531: BYTE error = 0;
  8054                           
  8055                           ;incstack = 0
  8056  00145C  0E00               	movlw	0
  8057  00145E  6E34               	movwf	CANreceiveMessage@error,c
  8058                           
  8059                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  8060  001460  AE74               	btfss	3956,7,c	;volatile
  8061  001462  D002               	goto	i1l3607
  8062                           
  8063                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  8064  001464  8034               	bsf	CANreceiveMessage@error,0,c
  8065  001466  D000               	goto	i1l3607
  8066  001468                     i1l3607:
  8067                           
  8068                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  8069  001468  AC74               	btfss	3956,6,c	;volatile
  8070  00146A  D002               	goto	i1l3611
  8071                           
  8072                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  8073  00146C  8234               	bsf	CANreceiveMessage@error,1,c
  8074  00146E  D000               	goto	i1l3611
  8075  001470                     i1l3611:
  8076                           
  8077                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  8078  001470  010F               	movlb	15	; () banked
  8079  001472  AF50               	btfss	80,7,b	;volatile
  8080  001474  D149               	goto	i1l420
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;inc\CANlib.h: 541: {
  8084                           ;inc\CANlib.h: 542: msg->identifier = 0;
  8085  001476  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8086  00147A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8087  00147E  6ADE               	clrf	postinc2,c
  8088  001480  6ADE               	clrf	postinc2,c
  8089  001482  6ADE               	clrf	postinc2,c
  8090  001484  6ADD               	clrf	postdec2,c
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  8094  001486  EE20 F004          	lfsr	2,4
  8095  00148A  502A               	movf	CANreceiveMessage@msg,w,c
  8096  00148C  26D9               	addwf	fsr2l,f,c
  8097  00148E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8098  001490  22DA               	addwfc	fsr2h,f,c
  8099  001492  CF56 FFDF          	movff	3926,indf2	;volatile
  8100                           
  8101                           ; BSR set to: 15
  8102                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  8103  001496  EE20 F005          	lfsr	2,5
  8104  00149A  502A               	movf	CANreceiveMessage@msg,w,c
  8105  00149C  26D9               	addwf	fsr2l,f,c
  8106  00149E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8107  0014A0  22DA               	addwfc	fsr2h,f,c
  8108  0014A2  CF57 FFDF          	movff	3927,indf2	;volatile
  8109                           
  8110                           ; BSR set to: 15
  8111                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  8112  0014A6  EE20 F006          	lfsr	2,6
  8113  0014AA  502A               	movf	CANreceiveMessage@msg,w,c
  8114  0014AC  26D9               	addwf	fsr2l,f,c
  8115  0014AE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8116  0014B0  22DA               	addwfc	fsr2h,f,c
  8117  0014B2  CF58 FFDF          	movff	3928,indf2	;volatile
  8118                           
  8119                           ; BSR set to: 15
  8120                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  8121  0014B6  EE20 F007          	lfsr	2,7
  8122  0014BA  502A               	movf	CANreceiveMessage@msg,w,c
  8123  0014BC  26D9               	addwf	fsr2l,f,c
  8124  0014BE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8125  0014C0  22DA               	addwfc	fsr2h,f,c
  8126  0014C2  CF59 FFDF          	movff	3929,indf2	;volatile
  8127                           
  8128                           ; BSR set to: 15
  8129                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  8130  0014C6  EE20 F008          	lfsr	2,8
  8131  0014CA  502A               	movf	CANreceiveMessage@msg,w,c
  8132  0014CC  26D9               	addwf	fsr2l,f,c
  8133  0014CE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8134  0014D0  22DA               	addwfc	fsr2h,f,c
  8135  0014D2  CF5A FFDF          	movff	3930,indf2	;volatile
  8136                           
  8137                           ; BSR set to: 15
  8138                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  8139  0014D6  EE20 F009          	lfsr	2,9
  8140  0014DA  502A               	movf	CANreceiveMessage@msg,w,c
  8141  0014DC  26D9               	addwf	fsr2l,f,c
  8142  0014DE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8143  0014E0  22DA               	addwfc	fsr2h,f,c
  8144  0014E2  CF5B FFDF          	movff	3931,indf2	;volatile
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  8148  0014E6  EE20 F00A          	lfsr	2,10
  8149  0014EA  502A               	movf	CANreceiveMessage@msg,w,c
  8150  0014EC  26D9               	addwf	fsr2l,f,c
  8151  0014EE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8152  0014F0  22DA               	addwfc	fsr2h,f,c
  8153  0014F2  CF5C FFDF          	movff	3932,indf2	;volatile
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  8157  0014F6  EE20 F00B          	lfsr	2,11
  8158  0014FA  502A               	movf	CANreceiveMessage@msg,w,c
  8159  0014FC  26D9               	addwf	fsr2l,f,c
  8160  0014FE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8161  001500  22DA               	addwfc	fsr2h,f,c
  8162  001502  CF5D FFDF          	movff	3933,indf2	;volatile
  8163                           
  8164                           ; BSR set to: 15
  8165                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  8166  001506  EE20 F00E          	lfsr	2,14
  8167  00150A  502A               	movf	CANreceiveMessage@msg,w,c
  8168  00150C  26D9               	addwf	fsr2l,f,c
  8169  00150E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8170  001510  22DA               	addwfc	fsr2h,f,c
  8171  001512  010F               	movlb	15	; () banked
  8172  001514  AD55               	btfss	85,6,b	;volatile
  8173  001516  D002               	goto	i1u404_20
  8174  001518  0E01               	movlw	1
  8175  00151A  D001               	goto	i1u404_26
  8176  00151C                     i1u404_20:
  8177  00151C  0E00               	movlw	0
  8178  00151E                     i1u404_26:
  8179  00151E  6EDF               	movwf	indf2,c
  8180                           
  8181                           ; BSR set to: 15
  8182                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  8183  001520  EE20 F00D          	lfsr	2,13
  8184  001524  502A               	movf	CANreceiveMessage@msg,w,c
  8185  001526  26D9               	addwf	fsr2l,f,c
  8186  001528  502B               	movf	CANreceiveMessage@msg+1,w,c
  8187  00152A  22DA               	addwfc	fsr2h,f,c
  8188  00152C  010F               	movlb	15	; () banked
  8189  00152E  5155               	movf	85,w,b	;volatile
  8190  001530  0B0F               	andlw	15
  8191  001532  6EDF               	movwf	indf2,c
  8192                           
  8193                           ; BSR set to: 15
  8194                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  8195  001534  EE20 F00C          	lfsr	2,12
  8196  001538  502A               	movf	CANreceiveMessage@msg,w,c
  8197  00153A  26D9               	addwf	fsr2l,f,c
  8198  00153C  502B               	movf	CANreceiveMessage@msg+1,w,c
  8199  00153E  22DA               	addwfc	fsr2h,f,c
  8200  001540  010F               	movlb	15	; () banked
  8201  001542  A752               	btfss	82,3,b	;volatile
  8202  001544  D002               	goto	i1u405_20
  8203  001546  0E01               	movlw	1
  8204  001548  D001               	goto	i1u405_26
  8205  00154A                     i1u405_20:
  8206  00154A  0E00               	movlw	0
  8207  00154C                     i1u405_26:
  8208  00154C  6EDF               	movwf	indf2,c
  8209                           
  8210                           ; BSR set to: 15
  8211                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  8212  00154E  010F               	movlb	15	; () banked
  8213  001550  B752               	btfsc	82,3,b	;volatile
  8214  001552  D044               	goto	i1l3645
  8215                           
  8216                           ; BSR set to: 15
  8217                           ;inc\CANlib.h: 559: {
  8218                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8219  001554  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  8220  001558  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8221  00155A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8222  00155C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8223  00155E  0E03               	movlw	3
  8224  001560                     i1u407_25:
  8225  001560  90D8               	bcf	status,0,c
  8226  001562  362C               	rlcf	??_CANreceiveMessage,f,c
  8227  001564  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8228  001566  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8229  001568  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8230  00156A  2EE8               	decfsz	wreg,f,c
  8231  00156C  D7F9               	goto	i1u407_25
  8232  00156E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8233  001572  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8234  001576  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8235  00157A  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8236  00157E  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8237  001582  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8238                           
  8239                           ; BSR set to: 15
  8240                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8241  001586  010F               	movlb	15	; () banked
  8242  001588  3952               	swapf	82,w,b	;volatile
  8243  00158A  42E8               	rrncf	wreg,f,c
  8244  00158C  0B07               	andlw	7
  8245  00158E  0B07               	andlw	7
  8246  001590  6E35               	movwf	CANreceiveMessage@tamp,c
  8247                           
  8248                           ; BSR set to: 15
  8249                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8250  001592  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8251  001596  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8252  00159A  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8253  00159E  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8254  0015A2  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8255  0015A6  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8256  0015AA  5035               	movf	CANreceiveMessage@tamp,w,c
  8257  0015AC  242C               	addwf	??_CANreceiveMessage,w,c
  8258  0015AE  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8259  0015B0  0E00               	movlw	0
  8260  0015B2  202D               	addwfc	??_CANreceiveMessage+1,w,c
  8261  0015B4  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8262  0015B6  0E00               	movlw	0
  8263  0015B8  202E               	addwfc	??_CANreceiveMessage+2,w,c
  8264  0015BA  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8265  0015BC  0E00               	movlw	0
  8266  0015BE  202F               	addwfc	??_CANreceiveMessage+3,w,c
  8267  0015C0  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8268  0015C2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8269  0015C6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8270  0015CA  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8271  0015CE  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8272  0015D2  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8273  0015D6  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8274                           
  8275                           ;inc\CANlib.h: 563: }
  8276  0015DA  D093               	goto	i1l3671
  8277  0015DC                     i1l3645:
  8278                           
  8279                           ; BSR set to: 15
  8280                           ;inc\CANlib.h: 564: else
  8281                           ;inc\CANlib.h: 565: {
  8282                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8283  0015DC  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
  8284  0015E0  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8285  0015E2  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8286  0015E4  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8287  0015E6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8288  0015EA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8289  0015EE  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8290  0015F2  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8291  0015F6  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8292  0015FA  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8293                           
  8294                           ; BSR set to: 15
  8295                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8296  0015FE  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
  8297  001602  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8298  001604  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8299  001606  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8300  001608  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8301  00160C  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8302  001610  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8303  001614  6A2C               	clrf	??_CANreceiveMessage,c
  8304  001616  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8305  00161A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8306  00161E  502C               	movf	??_CANreceiveMessage,w,c
  8307  001620  26DE               	addwf	postinc2,f,c
  8308  001622  502D               	movf	??_CANreceiveMessage+1,w,c
  8309  001624  22DE               	addwfc	postinc2,f,c
  8310  001626  502E               	movf	??_CANreceiveMessage+2,w,c
  8311  001628  22DE               	addwfc	postinc2,f,c
  8312  00162A  502F               	movf	??_CANreceiveMessage+3,w,c
  8313  00162C  22DE               	addwfc	postinc2,f,c
  8314                           
  8315                           ; BSR set to: 15
  8316                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8317  00162E  010F               	movlb	15	; () banked
  8318  001630  A152               	btfss	82,0,b	;volatile
  8319  001632  D00D               	goto	i1l3653
  8320                           
  8321                           ; BSR set to: 15
  8322                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  8323  001634  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8324  001638  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8325  00163C  0E00               	movlw	0
  8326  00163E  12DE               	iorwf	postinc2,f,c
  8327  001640  0E00               	movlw	0
  8328  001642  12DE               	iorwf	postinc2,f,c
  8329  001644  0E01               	movlw	1
  8330  001646  12DE               	iorwf	postinc2,f,c
  8331  001648  0E00               	movlw	0
  8332  00164A  12DE               	iorwf	postinc2,f,c
  8333  00164C  D000               	goto	i1l3653
  8334  00164E                     i1l3653:
  8335                           
  8336                           ; BSR set to: 15
  8337                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8338  00164E  010F               	movlb	15	; () banked
  8339  001650  A352               	btfss	82,1,b	;volatile
  8340  001652  D00D               	goto	i1l3657
  8341                           
  8342                           ; BSR set to: 15
  8343                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  8344  001654  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8345  001658  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8346  00165C  0E00               	movlw	0
  8347  00165E  12DE               	iorwf	postinc2,f,c
  8348  001660  0E00               	movlw	0
  8349  001662  12DE               	iorwf	postinc2,f,c
  8350  001664  0E02               	movlw	2
  8351  001666  12DE               	iorwf	postinc2,f,c
  8352  001668  0E00               	movlw	0
  8353  00166A  12DE               	iorwf	postinc2,f,c
  8354  00166C  D000               	goto	i1l3657
  8355  00166E                     i1l3657:
  8356                           
  8357                           ; BSR set to: 15
  8358                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8359  00166E  010F               	movlb	15	; () banked
  8360  001670  AB52               	btfss	82,5,b	;volatile
  8361  001672  D00D               	goto	i1l3661
  8362                           
  8363                           ; BSR set to: 15
  8364                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8365  001674  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8366  001678  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8367  00167C  0E00               	movlw	0
  8368  00167E  12DE               	iorwf	postinc2,f,c
  8369  001680  0E00               	movlw	0
  8370  001682  12DE               	iorwf	postinc2,f,c
  8371  001684  0E04               	movlw	4
  8372  001686  12DE               	iorwf	postinc2,f,c
  8373  001688  0E00               	movlw	0
  8374  00168A  12DE               	iorwf	postinc2,f,c
  8375  00168C  D000               	goto	i1l3661
  8376  00168E                     i1l3661:
  8377                           
  8378                           ; BSR set to: 15
  8379                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8380  00168E  010F               	movlb	15	; () banked
  8381  001690  AD52               	btfss	82,6,b	;volatile
  8382  001692  D00D               	goto	i1l3665
  8383                           
  8384                           ; BSR set to: 15
  8385                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8386  001694  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8387  001698  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8388  00169C  0E00               	movlw	0
  8389  00169E  12DE               	iorwf	postinc2,f,c
  8390  0016A0  0E00               	movlw	0
  8391  0016A2  12DE               	iorwf	postinc2,f,c
  8392  0016A4  0E08               	movlw	8
  8393  0016A6  12DE               	iorwf	postinc2,f,c
  8394  0016A8  0E00               	movlw	0
  8395  0016AA  12DE               	iorwf	postinc2,f,c
  8396  0016AC  D000               	goto	i1l3665
  8397  0016AE                     i1l3665:
  8398                           
  8399                           ; BSR set to: 15
  8400                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8401  0016AE  010F               	movlb	15	; () banked
  8402  0016B0  AF52               	btfss	82,7,b	;volatile
  8403  0016B2  D00D               	goto	i1l3669
  8404                           
  8405                           ; BSR set to: 15
  8406                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8407  0016B4  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8408  0016B8  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8409  0016BC  0E00               	movlw	0
  8410  0016BE  12DE               	iorwf	postinc2,f,c
  8411  0016C0  0E00               	movlw	0
  8412  0016C2  12DE               	iorwf	postinc2,f,c
  8413  0016C4  0E10               	movlw	16
  8414  0016C6  12DE               	iorwf	postinc2,f,c
  8415  0016C8  0E00               	movlw	0
  8416  0016CA  12DE               	iorwf	postinc2,f,c
  8417  0016CC  D000               	goto	i1l3669
  8418  0016CE                     i1l3669:
  8419                           
  8420                           ; BSR set to: 15
  8421                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8422  0016CE  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  8423  0016D2  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8424  0016D4  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8425  0016D6  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8426  0016D8  0E15               	movlw	21
  8427  0016DA                     i1u413_25:
  8428  0016DA  90D8               	bcf	status,0,c
  8429  0016DC  362C               	rlcf	??_CANreceiveMessage,f,c
  8430  0016DE  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8431  0016E0  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8432  0016E2  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8433  0016E4  2EE8               	decfsz	wreg,f,c
  8434  0016E6  D7F9               	goto	i1u413_25
  8435  0016E8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8436  0016EC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8437  0016F0  502C               	movf	??_CANreceiveMessage,w,c
  8438  0016F2  12DE               	iorwf	postinc2,f,c
  8439  0016F4  502D               	movf	??_CANreceiveMessage+1,w,c
  8440  0016F6  12DE               	iorwf	postinc2,f,c
  8441  0016F8  502E               	movf	??_CANreceiveMessage+2,w,c
  8442  0016FA  12DE               	iorwf	postinc2,f,c
  8443  0016FC  502F               	movf	??_CANreceiveMessage+3,w,c
  8444  0016FE  12DE               	iorwf	postinc2,f,c
  8445  001700  D000               	goto	i1l3671
  8446  001702                     i1l3671:
  8447                           
  8448                           ; BSR set to: 15
  8449                           ;inc\CANlib.h: 581: }
  8450                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8451  001702  010F               	movlb	15	; () banked
  8452  001704  9F50               	bcf	80,7,b	;volatile
  8453                           
  8454                           ; BSR set to: 15
  8455                           ;inc\CANlib.h: 584: return (error);
  8456                           ;	Return value of _CANreceiveMessage is never used
  8457  001706  D140               	goto	i1l428
  8458  001708                     i1l420:
  8459                           
  8460                           ; BSR set to: 15
  8461                           ;inc\CANlib.h: 585: }
  8462                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8463  001708  AE60               	btfss	3936,7,c	;volatile
  8464  00170A  D13E               	goto	i1l428
  8465                           
  8466                           ; BSR set to: 15
  8467                           ;inc\CANlib.h: 588: {
  8468                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8469  00170C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8470  001710  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8471  001714  6ADE               	clrf	postinc2,c
  8472  001716  6ADE               	clrf	postinc2,c
  8473  001718  6ADE               	clrf	postinc2,c
  8474  00171A  6ADD               	clrf	postdec2,c
  8475                           
  8476                           ; BSR set to: 15
  8477                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8478  00171C  EE20 F004          	lfsr	2,4
  8479  001720  502A               	movf	CANreceiveMessage@msg,w,c
  8480  001722  26D9               	addwf	fsr2l,f,c
  8481  001724  502B               	movf	CANreceiveMessage@msg+1,w,c
  8482  001726  22DA               	addwfc	fsr2h,f,c
  8483  001728  CF66 FFDF          	movff	3942,indf2	;volatile
  8484                           
  8485                           ; BSR set to: 15
  8486                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8487  00172C  EE20 F005          	lfsr	2,5
  8488  001730  502A               	movf	CANreceiveMessage@msg,w,c
  8489  001732  26D9               	addwf	fsr2l,f,c
  8490  001734  502B               	movf	CANreceiveMessage@msg+1,w,c
  8491  001736  22DA               	addwfc	fsr2h,f,c
  8492  001738  CF67 FFDF          	movff	3943,indf2	;volatile
  8493                           
  8494                           ; BSR set to: 15
  8495                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8496  00173C  EE20 F006          	lfsr	2,6
  8497  001740  502A               	movf	CANreceiveMessage@msg,w,c
  8498  001742  26D9               	addwf	fsr2l,f,c
  8499  001744  502B               	movf	CANreceiveMessage@msg+1,w,c
  8500  001746  22DA               	addwfc	fsr2h,f,c
  8501  001748  CF68 FFDF          	movff	3944,indf2	;volatile
  8502                           
  8503                           ; BSR set to: 15
  8504                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8505  00174C  EE20 F007          	lfsr	2,7
  8506  001750  502A               	movf	CANreceiveMessage@msg,w,c
  8507  001752  26D9               	addwf	fsr2l,f,c
  8508  001754  502B               	movf	CANreceiveMessage@msg+1,w,c
  8509  001756  22DA               	addwfc	fsr2h,f,c
  8510  001758  CF69 FFDF          	movff	3945,indf2	;volatile
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8514  00175C  EE20 F008          	lfsr	2,8
  8515  001760  502A               	movf	CANreceiveMessage@msg,w,c
  8516  001762  26D9               	addwf	fsr2l,f,c
  8517  001764  502B               	movf	CANreceiveMessage@msg+1,w,c
  8518  001766  22DA               	addwfc	fsr2h,f,c
  8519  001768  CF6A FFDF          	movff	3946,indf2	;volatile
  8520                           
  8521                           ; BSR set to: 15
  8522                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8523  00176C  EE20 F009          	lfsr	2,9
  8524  001770  502A               	movf	CANreceiveMessage@msg,w,c
  8525  001772  26D9               	addwf	fsr2l,f,c
  8526  001774  502B               	movf	CANreceiveMessage@msg+1,w,c
  8527  001776  22DA               	addwfc	fsr2h,f,c
  8528  001778  CF6B FFDF          	movff	3947,indf2	;volatile
  8529                           
  8530                           ; BSR set to: 15
  8531                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8532  00177C  EE20 F00A          	lfsr	2,10
  8533  001780  502A               	movf	CANreceiveMessage@msg,w,c
  8534  001782  26D9               	addwf	fsr2l,f,c
  8535  001784  502B               	movf	CANreceiveMessage@msg+1,w,c
  8536  001786  22DA               	addwfc	fsr2h,f,c
  8537  001788  CF6C FFDF          	movff	3948,indf2	;volatile
  8538                           
  8539                           ; BSR set to: 15
  8540                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8541  00178C  EE20 F00B          	lfsr	2,11
  8542  001790  502A               	movf	CANreceiveMessage@msg,w,c
  8543  001792  26D9               	addwf	fsr2l,f,c
  8544  001794  502B               	movf	CANreceiveMessage@msg+1,w,c
  8545  001796  22DA               	addwfc	fsr2h,f,c
  8546  001798  CF6D FFDF          	movff	3949,indf2	;volatile
  8547                           
  8548                           ; BSR set to: 15
  8549                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8550  00179C  EE20 F00E          	lfsr	2,14
  8551  0017A0  502A               	movf	CANreceiveMessage@msg,w,c
  8552  0017A2  26D9               	addwf	fsr2l,f,c
  8553  0017A4  502B               	movf	CANreceiveMessage@msg+1,w,c
  8554  0017A6  22DA               	addwfc	fsr2h,f,c
  8555  0017A8  AC65               	btfss	3941,6,c	;volatile
  8556  0017AA  D002               	goto	i1u415_20
  8557  0017AC  0E01               	movlw	1
  8558  0017AE  D001               	goto	i1u415_26
  8559  0017B0                     i1u415_20:
  8560  0017B0  0E00               	movlw	0
  8561  0017B2                     i1u415_26:
  8562  0017B2  6EDF               	movwf	indf2,c
  8563                           
  8564                           ; BSR set to: 15
  8565                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8566  0017B4  EE20 F00D          	lfsr	2,13
  8567  0017B8  502A               	movf	CANreceiveMessage@msg,w,c
  8568  0017BA  26D9               	addwf	fsr2l,f,c
  8569  0017BC  502B               	movf	CANreceiveMessage@msg+1,w,c
  8570  0017BE  22DA               	addwfc	fsr2h,f,c
  8571  0017C0  5065               	movf	3941,w,c	;volatile
  8572  0017C2  0B0F               	andlw	15
  8573  0017C4  6EDF               	movwf	indf2,c
  8574                           
  8575                           ; BSR set to: 15
  8576                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8577  0017C6  EE20 F00C          	lfsr	2,12
  8578  0017CA  502A               	movf	CANreceiveMessage@msg,w,c
  8579  0017CC  26D9               	addwf	fsr2l,f,c
  8580  0017CE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8581  0017D0  22DA               	addwfc	fsr2h,f,c
  8582  0017D2  A662               	btfss	3938,3,c	;volatile
  8583  0017D4  D002               	goto	i1u416_20
  8584  0017D6  0E01               	movlw	1
  8585  0017D8  D001               	goto	i1u416_26
  8586  0017DA                     i1u416_20:
  8587  0017DA  0E00               	movlw	0
  8588  0017DC                     i1u416_26:
  8589  0017DC  6EDF               	movwf	indf2,c
  8590                           
  8591                           ; BSR set to: 15
  8592                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8593  0017DE  B662               	btfsc	3938,3,c	;volatile
  8594  0017E0  D043               	goto	i1l3707
  8595                           
  8596                           ; BSR set to: 15
  8597                           ;inc\CANlib.h: 606: {
  8598                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8599  0017E2  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8600  0017E6  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8601  0017E8  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8602  0017EA  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8603  0017EC  0E03               	movlw	3
  8604  0017EE                     i1u418_25:
  8605  0017EE  90D8               	bcf	status,0,c
  8606  0017F0  362C               	rlcf	??_CANreceiveMessage,f,c
  8607  0017F2  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8608  0017F4  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8609  0017F6  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8610  0017F8  2EE8               	decfsz	wreg,f,c
  8611  0017FA  D7F9               	goto	i1u418_25
  8612  0017FC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8613  001800  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8614  001804  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8615  001808  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8616  00180C  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8617  001810  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8618                           
  8619                           ; BSR set to: 15
  8620                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8621  001814  3862               	swapf	3938,w,c	;volatile
  8622  001816  42E8               	rrncf	wreg,f,c
  8623  001818  0B07               	andlw	7
  8624  00181A  0B07               	andlw	7
  8625  00181C  6E35               	movwf	CANreceiveMessage@tamp,c
  8626                           
  8627                           ; BSR set to: 15
  8628                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8629  00181E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8630  001822  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8631  001826  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8632  00182A  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8633  00182E  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8634  001832  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8635  001836  5035               	movf	CANreceiveMessage@tamp,w,c
  8636  001838  242C               	addwf	??_CANreceiveMessage,w,c
  8637  00183A  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8638  00183C  0E00               	movlw	0
  8639  00183E  202D               	addwfc	??_CANreceiveMessage+1,w,c
  8640  001840  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8641  001842  0E00               	movlw	0
  8642  001844  202E               	addwfc	??_CANreceiveMessage+2,w,c
  8643  001846  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8644  001848  0E00               	movlw	0
  8645  00184A  202F               	addwfc	??_CANreceiveMessage+3,w,c
  8646  00184C  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8647  00184E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8648  001852  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8649  001856  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8650  00185A  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8651  00185E  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8652  001862  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8653                           
  8654                           ;inc\CANlib.h: 610: }
  8655  001866  D08E               	goto	i1l3733
  8656  001868                     i1l3707:
  8657                           
  8658                           ; BSR set to: 15
  8659                           ;inc\CANlib.h: 611: else
  8660                           ;inc\CANlib.h: 612: {
  8661                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8662  001868  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
  8663  00186C  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8664  00186E  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8665  001870  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8666  001872  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8667  001876  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8668  00187A  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8669  00187E  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8670  001882  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8671  001886  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8672                           
  8673                           ; BSR set to: 15
  8674                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8675  00188A  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
  8676  00188E  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8677  001890  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8678  001892  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8679  001894  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8680  001898  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8681  00189C  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8682  0018A0  6A2C               	clrf	??_CANreceiveMessage,c
  8683  0018A2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8684  0018A6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8685  0018AA  502C               	movf	??_CANreceiveMessage,w,c
  8686  0018AC  26DE               	addwf	postinc2,f,c
  8687  0018AE  502D               	movf	??_CANreceiveMessage+1,w,c
  8688  0018B0  22DE               	addwfc	postinc2,f,c
  8689  0018B2  502E               	movf	??_CANreceiveMessage+2,w,c
  8690  0018B4  22DE               	addwfc	postinc2,f,c
  8691  0018B6  502F               	movf	??_CANreceiveMessage+3,w,c
  8692  0018B8  22DE               	addwfc	postinc2,f,c
  8693                           
  8694                           ; BSR set to: 15
  8695                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8696  0018BA  A062               	btfss	3938,0,c	;volatile
  8697  0018BC  D00D               	goto	i1l3715
  8698                           
  8699                           ; BSR set to: 15
  8700                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8701  0018BE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8702  0018C2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8703  0018C6  0E00               	movlw	0
  8704  0018C8  12DE               	iorwf	postinc2,f,c
  8705  0018CA  0E00               	movlw	0
  8706  0018CC  12DE               	iorwf	postinc2,f,c
  8707  0018CE  0E01               	movlw	1
  8708  0018D0  12DE               	iorwf	postinc2,f,c
  8709  0018D2  0E00               	movlw	0
  8710  0018D4  12DE               	iorwf	postinc2,f,c
  8711  0018D6  D000               	goto	i1l3715
  8712  0018D8                     i1l3715:
  8713                           
  8714                           ; BSR set to: 15
  8715                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8716  0018D8  A262               	btfss	3938,1,c	;volatile
  8717  0018DA  D00D               	goto	i1l3719
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8721  0018DC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8722  0018E0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8723  0018E4  0E00               	movlw	0
  8724  0018E6  12DE               	iorwf	postinc2,f,c
  8725  0018E8  0E00               	movlw	0
  8726  0018EA  12DE               	iorwf	postinc2,f,c
  8727  0018EC  0E02               	movlw	2
  8728  0018EE  12DE               	iorwf	postinc2,f,c
  8729  0018F0  0E00               	movlw	0
  8730  0018F2  12DE               	iorwf	postinc2,f,c
  8731  0018F4  D000               	goto	i1l3719
  8732  0018F6                     i1l3719:
  8733                           
  8734                           ; BSR set to: 15
  8735                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8736  0018F6  AA62               	btfss	3938,5,c	;volatile
  8737  0018F8  D00D               	goto	i1l3723
  8738                           
  8739                           ; BSR set to: 15
  8740                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8741  0018FA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8742  0018FE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8743  001902  0E00               	movlw	0
  8744  001904  12DE               	iorwf	postinc2,f,c
  8745  001906  0E00               	movlw	0
  8746  001908  12DE               	iorwf	postinc2,f,c
  8747  00190A  0E04               	movlw	4
  8748  00190C  12DE               	iorwf	postinc2,f,c
  8749  00190E  0E00               	movlw	0
  8750  001910  12DE               	iorwf	postinc2,f,c
  8751  001912  D000               	goto	i1l3723
  8752  001914                     i1l3723:
  8753                           
  8754                           ; BSR set to: 15
  8755                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8756  001914  AC62               	btfss	3938,6,c	;volatile
  8757  001916  D00D               	goto	i1l3727
  8758                           
  8759                           ; BSR set to: 15
  8760                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8761  001918  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8762  00191C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8763  001920  0E00               	movlw	0
  8764  001922  12DE               	iorwf	postinc2,f,c
  8765  001924  0E00               	movlw	0
  8766  001926  12DE               	iorwf	postinc2,f,c
  8767  001928  0E08               	movlw	8
  8768  00192A  12DE               	iorwf	postinc2,f,c
  8769  00192C  0E00               	movlw	0
  8770  00192E  12DE               	iorwf	postinc2,f,c
  8771  001930  D000               	goto	i1l3727
  8772  001932                     i1l3727:
  8773                           
  8774                           ; BSR set to: 15
  8775                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8776  001932  AE62               	btfss	3938,7,c	;volatile
  8777  001934  D00D               	goto	i1l3731
  8778                           
  8779                           ; BSR set to: 15
  8780                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8781  001936  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8782  00193A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8783  00193E  0E00               	movlw	0
  8784  001940  12DE               	iorwf	postinc2,f,c
  8785  001942  0E00               	movlw	0
  8786  001944  12DE               	iorwf	postinc2,f,c
  8787  001946  0E10               	movlw	16
  8788  001948  12DE               	iorwf	postinc2,f,c
  8789  00194A  0E00               	movlw	0
  8790  00194C  12DE               	iorwf	postinc2,f,c
  8791  00194E  D000               	goto	i1l3731
  8792  001950                     i1l3731:
  8793                           
  8794                           ; BSR set to: 15
  8795                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8796  001950  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8797  001954  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8798  001956  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8799  001958  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8800  00195A  0E15               	movlw	21
  8801  00195C                     i1u424_25:
  8802  00195C  90D8               	bcf	status,0,c
  8803  00195E  362C               	rlcf	??_CANreceiveMessage,f,c
  8804  001960  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8805  001962  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8806  001964  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8807  001966  2EE8               	decfsz	wreg,f,c
  8808  001968  D7F9               	goto	i1u424_25
  8809  00196A  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8810  00196E  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8811  001972  502C               	movf	??_CANreceiveMessage,w,c
  8812  001974  12DE               	iorwf	postinc2,f,c
  8813  001976  502D               	movf	??_CANreceiveMessage+1,w,c
  8814  001978  12DE               	iorwf	postinc2,f,c
  8815  00197A  502E               	movf	??_CANreceiveMessage+2,w,c
  8816  00197C  12DE               	iorwf	postinc2,f,c
  8817  00197E  502F               	movf	??_CANreceiveMessage+3,w,c
  8818  001980  12DE               	iorwf	postinc2,f,c
  8819  001982  D000               	goto	i1l3733
  8820  001984                     i1l3733:
  8821                           
  8822                           ; BSR set to: 15
  8823                           ;inc\CANlib.h: 629: }
  8824                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8825  001984  9E60               	bcf	3936,7,c	;volatile
  8826                           
  8827                           ; BSR set to: 15
  8828                           ;inc\CANlib.h: 632: return (error);
  8829                           ;	Return value of _CANreceiveMessage is never used
  8830  001986  D000               	goto	i1l428
  8831  001988                     i1l428:
  8832                           
  8833                           ; BSR set to: 15
  8834  001988  0012               	return		;funcret
  8835  00198A                     __end_of_CANreceiveMessage:
  8836                           	opt stack 0
  8837                           pclatu	equ	0xFFB
  8838                           pclath	equ	0xFFA
  8839                           tblptru	equ	0xFF8
  8840                           tblptrh	equ	0xFF7
  8841                           tblptrl	equ	0xFF6
  8842                           tablat	equ	0xFF5
  8843                           prodh	equ	0xFF4
  8844                           prodl	equ	0xFF3
  8845                           intcon	equ	0xFF2
  8846                           intcon2	equ	0xFF1
  8847                           intcon3	equ	0xFF0
  8848                           postinc0	equ	0xFEE
  8849                           fsr0h	equ	0xFEA
  8850                           fsr0l	equ	0xFE9
  8851                           wreg	equ	0xFE8
  8852                           postdec1	equ	0xFE5
  8853                           fsr1h	equ	0xFE2
  8854                           fsr1l	equ	0xFE1
  8855                           bsr	equ	0xFE0
  8856                           indf2	equ	0xFDF
  8857                           postinc2	equ	0xFDE
  8858                           postdec2	equ	0xFDD
  8859                           fsr2h	equ	0xFDA
  8860                           fsr2l	equ	0xFD9
  8861                           status	equ	0xFD8
  8862                           
  8863 ;; *************** function _CANisRxReady *****************
  8864 ;; Defined at:
  8865 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;		None
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;		None
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      unsigned char 
  8872 ;; Registers used:
  8873 ;;		wreg, status,2
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8879 ;;      Params:         0       0       0       0
  8880 ;;      Locals:         1       0       0       0
  8881 ;;      Temps:          0       0       0       0
  8882 ;;      Totals:         1       0       0       0
  8883 ;;Total ram usage:        1 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; Hardware stack levels required when called:    2
  8886 ;; This function calls:
  8887 ;;		Nothing
  8888 ;; This function is called by:
  8889 ;;		_ISR_Bassa
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text19
  8894  002D1C                     __ptext19:
  8895                           	opt stack 0
  8896  002D1C                     _CANisRxReady:
  8897                           	opt stack 24
  8898                           
  8899                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8900                           
  8901                           ; BSR set to: 15
  8902                           ;incstack = 0
  8903  002D1C  0E01               	movlw	1
  8904  002D1E  6E2A               	movwf	_CANisRxReady$3175,c
  8905  002D20  BE60               	btfsc	3936,7,c	;volatile
  8906  002D22  D005               	goto	i1l571
  8907  002D24  010F               	movlb	15	; () banked
  8908  002D26  BF50               	btfsc	80,7,b	;volatile
  8909  002D28  D002               	goto	i1l571
  8910                           
  8911                           ; BSR set to: 15
  8912  002D2A  0E00               	movlw	0
  8913  002D2C  6E2A               	movwf	_CANisRxReady$3175,c
  8914  002D2E                     i1l571:
  8915  002D2E  502A               	movf	_CANisRxReady$3175,w,c
  8916  002D30  D000               	goto	i1l572
  8917  002D32                     i1l572:
  8918  002D32  0012               	return		;funcret
  8919  002D34                     __end_of_CANisRxReady:
  8920                           	opt stack 0
  8921                           pclatu	equ	0xFFB
  8922                           pclath	equ	0xFFA
  8923                           tblptru	equ	0xFF8
  8924                           tblptrh	equ	0xFF7
  8925                           tblptrl	equ	0xFF6
  8926                           tablat	equ	0xFF5
  8927                           prodh	equ	0xFF4
  8928                           prodl	equ	0xFF3
  8929                           intcon	equ	0xFF2
  8930                           intcon2	equ	0xFF1
  8931                           intcon3	equ	0xFF0
  8932                           postinc0	equ	0xFEE
  8933                           fsr0h	equ	0xFEA
  8934                           fsr0l	equ	0xFE9
  8935                           wreg	equ	0xFE8
  8936                           postdec1	equ	0xFE5
  8937                           fsr1h	equ	0xFE2
  8938                           fsr1l	equ	0xFE1
  8939                           bsr	equ	0xFE0
  8940                           indf2	equ	0xFDF
  8941                           postinc2	equ	0xFDE
  8942                           postdec2	equ	0xFDD
  8943                           fsr2h	equ	0xFDA
  8944                           fsr2l	equ	0xFD9
  8945                           status	equ	0xFD8
  8946                           
  8947 ;; *************** function _ISR_Alta *****************
  8948 ;; Defined at:
  8949 ;;		line 154 in file "ABS_Code.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;		None
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;		None
  8954 ;; Return value:  Size  Location     Type
  8955 ;;		None               void
  8956 ;; Registers used:
  8957 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8963 ;;      Params:         0       0       0       0
  8964 ;;      Locals:         0       0       0       0
  8965 ;;      Temps:          0      22       0       0
  8966 ;;      Totals:         0      22       0       0
  8967 ;;Total ram usage:       22 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    1
  8970 ;; This function calls:
  8971 ;;		_WriteTimer0
  8972 ;;		___lwdiv
  8973 ;;		i2___awdiv
  8974 ;;		i2___wmul
  8975 ;; This function is called by:
  8976 ;;		Interrupt level 2
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	intcode
  8981  000008                     __pintcode:
  8982                           	opt stack 0
  8983  000008                     _ISR_Alta:
  8984                           	opt stack 24
  8985                           
  8986                           ;incstack = 0
  8987  000008  CFFA F0BF          	movff	pclath,??_ISR_Alta+8
  8988  00000C  CFFB F0C0          	movff	pclatu,??_ISR_Alta+9
  8989  000010  CFE9 F0C1          	movff	fsr0l,??_ISR_Alta+10
  8990  000014  ED20  F010         	call	int_func,f	;refresh shadow registers
  8991                           pclatu	equ	0xFFB
  8992                           pclath	equ	0xFFA
  8993                           tblptru	equ	0xFF8
  8994                           tblptrh	equ	0xFF7
  8995                           tblptrl	equ	0xFF6
  8996                           tablat	equ	0xFF5
  8997                           prodh	equ	0xFF4
  8998                           prodl	equ	0xFF3
  8999                           intcon	equ	0xFF2
  9000                           intcon2	equ	0xFF1
  9001                           intcon3	equ	0xFF0
  9002                           postinc0	equ	0xFEE
  9003                           fsr0h	equ	0xFEA
  9004                           fsr0l	equ	0xFE9
  9005                           wreg	equ	0xFE8
  9006                           postdec1	equ	0xFE5
  9007                           fsr1h	equ	0xFE2
  9008                           fsr1l	equ	0xFE1
  9009                           bsr	equ	0xFE0
  9010                           indf2	equ	0xFDF
  9011                           postinc2	equ	0xFDE
  9012                           postdec2	equ	0xFDD
  9013                           fsr2h	equ	0xFDA
  9014                           fsr2l	equ	0xFD9
  9015                           status	equ	0xFD8
  9016                           
  9017                           	psect	intcode_body
  9018  002040                     __pintcode_body:
  9019                           	opt stack 24
  9020  002040                     int_func:
  9021                           	opt stack 24
  9022  002040  0006               	pop		; remove dummy address from shadow register refresh
  9023  002042  CFEA F0C2          	movff	fsr0h,??_ISR_Alta+11
  9024  002046  CFE1 F0C3          	movff	fsr1l,??_ISR_Alta+12
  9025  00204A  CFE2 F0C4          	movff	fsr1h,??_ISR_Alta+13
  9026  00204E  CFD9 F0C5          	movff	fsr2l,??_ISR_Alta+14
  9027  002052  CFDA F0C6          	movff	fsr2h,??_ISR_Alta+15
  9028  002056  CFF3 F0C7          	movff	prodl,??_ISR_Alta+16
  9029  00205A  CFF4 F0C8          	movff	prodh,??_ISR_Alta+17
  9030  00205E  CFF6 F0C9          	movff	tblptrl,??_ISR_Alta+18
  9031  002062  CFF7 F0CA          	movff	tblptrh,??_ISR_Alta+19
  9032  002066  CFF8 F0CB          	movff	tblptru,??_ISR_Alta+20
  9033  00206A  CFF5 F0CC          	movff	tablat,??_ISR_Alta+21
  9034                           
  9035                           ;ABS_Code.c: 156: if (INTCONbits.TMR0IF == 1) {
  9036  00206E  A4F2               	btfss	intcon,2,c	;volatile
  9037  002070  D0AD               	goto	i2l5449
  9038                           
  9039                           ;ABS_Code.c: 157: PORTCbits.RC0 = ~PORTCbits.RC0;
  9040  002072  7082               	btg	3970,0,c	;volatile
  9041                           
  9042                           ;ABS_Code.c: 158: if (PORTCbits.RC0 == 1) {
  9043  002074  A082               	btfss	3970,0,c	;volatile
  9044  002076  D0A1               	goto	i2l5445
  9045                           
  9046                           ;ABS_Code.c: 159: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  9047  002078  0E40               	movlw	64
  9048  00207A  0100               	movlb	0	; () banked
  9049  00207C  6FB7               	movwf	??_ISR_Alta& (0+255),b
  9050  00207E  0E06               	movlw	6
  9051  002080  0100               	movlb	0	; () banked
  9052  002082  6FB8               	movwf	(??_ISR_Alta+1)& (0+255),b
  9053  002084  C029  F0A9         	movff	_brake_value_degree,i2___wmul@multiplier	;volatile
  9054  002088  0100               	movlb	0	; () banked
  9055  00208A  6BAA               	clrf	(i2___wmul@multiplier+1)& (0+255),b
  9056  00208C  0E05               	movlw	5
  9057  00208E  0100               	movlb	0	; () banked
  9058  002090  6FAC               	movwf	(i2___wmul@multiplicand+1)& (0+255),b
  9059  002092  0E78               	movlw	120
  9060  002094  6FAB               	movwf	i2___wmul@multiplicand& (0+255),b
  9061  002096  EC53  F016         	call	i2___wmul	;wreg free
  9062  00209A  C0A9  F0AF         	movff	?i2___wmul,i2___awdiv@dividend
  9063  00209E  C0AA  F0B0         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  9064  0020A2  0E00               	movlw	0
  9065  0020A4  0100               	movlb	0	; () banked
  9066  0020A6  6FB2               	movwf	(i2___awdiv@divisor+1)& (0+255),b
  9067  0020A8  0EB4               	movlw	180
  9068  0020AA  6FB1               	movwf	i2___awdiv@divisor& (0+255),b
  9069  0020AC  EC53  F014         	call	i2___awdiv	;wreg free
  9070  0020B0  90D8               	bcf	status,0,c
  9071  0020B2  0100               	movlb	0	; () banked
  9072  0020B4  37AF               	rlcf	?i2___awdiv& (0+255),f,b
  9073  0020B6  0100               	movlb	0	; () banked
  9074  0020B8  37B0               	rlcf	(?i2___awdiv+1)& (0+255),f,b
  9075  0020BA  0100               	movlb	0	; () banked
  9076  0020BC  51B7               	movf	??_ISR_Alta& (0+255),w,b
  9077  0020BE  0100               	movlb	0	; () banked
  9078  0020C0  27AF               	addwf	?i2___awdiv& (0+255),f,b
  9079  0020C2  0100               	movlb	0	; () banked
  9080  0020C4  51B8               	movf	(??_ISR_Alta+1)& (0+255),w,b
  9081  0020C6  0100               	movlb	0	; () banked
  9082  0020C8  23B0               	addwfc	(?i2___awdiv+1)& (0+255),f,b
  9083  0020CA  0100               	movlb	0	; () banked
  9084  0020CC  C0AF  F005         	movff	?i2___awdiv,_timer_on	;volatile
  9085  0020D0  0100               	movlb	0	; () banked
  9086  0020D2  C0B0  F006         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  9087  0020D6  0E00               	movlw	0
  9088  0020D8  BE06               	btfsc	_timer_on+1,7,c	;volatile
  9089  0020DA  0EFF               	movlw	-1
  9090  0020DC  6E07               	movwf	_timer_on+2,c	;volatile
  9091  0020DE  6E08               	movwf	_timer_on+3,c	;volatile
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;ABS_Code.c: 160: timer_off = 65536 - (40000 - timer_on);
  9095  0020E0  C005  F0B7         	movff	_timer_on,??_ISR_Alta	;volatile
  9096  0020E4  C006  F0B8         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  9097  0020E8  C007  F0B9         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  9098  0020EC  C008  F0BA         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  9099  0020F0  0100               	movlb	0	; () banked
  9100  0020F2  1FB7               	comf	??_ISR_Alta& (0+255),f,b
  9101  0020F4  1FB8               	comf	(??_ISR_Alta+1)& (0+255),f,b
  9102  0020F6  1FB9               	comf	(??_ISR_Alta+2)& (0+255),f,b
  9103  0020F8  1FBA               	comf	(??_ISR_Alta+3)& (0+255),f,b
  9104  0020FA  2BB7               	incf	??_ISR_Alta& (0+255),f,b
  9105  0020FC  0E00               	movlw	0
  9106  0020FE  23B8               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  9107  002100  23B9               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  9108  002102  23BA               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  9109  002104  0E40               	movlw	64
  9110  002106  0100               	movlb	0	; () banked
  9111  002108  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  9112  00210A  0100               	movlb	0	; () banked
  9113  00210C  6FBB               	movwf	(??_ISR_Alta+4)& (0+255),b
  9114  00210E  0E9C               	movlw	156
  9115  002110  0100               	movlb	0	; () banked
  9116  002112  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  9117  002114  0100               	movlb	0	; () banked
  9118  002116  6FBC               	movwf	(??_ISR_Alta+5)& (0+255),b
  9119  002118  0E00               	movlw	0
  9120  00211A  0100               	movlb	0	; () banked
  9121  00211C  21B9               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  9122  00211E  0100               	movlb	0	; () banked
  9123  002120  6FBD               	movwf	(??_ISR_Alta+6)& (0+255),b
  9124  002122  0E00               	movlw	0
  9125  002124  0100               	movlb	0	; () banked
  9126  002126  21BA               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  9127  002128  0100               	movlb	0	; () banked
  9128  00212A  6FBE               	movwf	(??_ISR_Alta+7)& (0+255),b
  9129  00212C  0100               	movlb	0	; () banked
  9130  00212E  1FBB               	comf	(??_ISR_Alta+4)& (0+255),f,b
  9131  002130  1FBC               	comf	(??_ISR_Alta+5)& (0+255),f,b
  9132  002132  1FBD               	comf	(??_ISR_Alta+6)& (0+255),f,b
  9133  002134  1FBE               	comf	(??_ISR_Alta+7)& (0+255),f,b
  9134  002136  2BBB               	incf	(??_ISR_Alta+4)& (0+255),f,b
  9135  002138  0E00               	movlw	0
  9136  00213A  23BC               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  9137  00213C  23BD               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  9138  00213E  23BE               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  9139  002140  0E00               	movlw	0
  9140  002142  0100               	movlb	0	; () banked
  9141  002144  25BB               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  9142  002146  0100               	movlb	0	; () banked
  9143  002148  6F74               	movwf	_timer_off& (0+255),b	;volatile
  9144  00214A  0E00               	movlw	0
  9145  00214C  0100               	movlb	0	; () banked
  9146  00214E  21BC               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  9147  002150  0100               	movlb	0	; () banked
  9148  002152  6F75               	movwf	(_timer_off+1)& (0+255),b	;volatile
  9149  002154  0E01               	movlw	1
  9150  002156  0100               	movlb	0	; () banked
  9151  002158  21BD               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  9152  00215A  0100               	movlb	0	; () banked
  9153  00215C  6F76               	movwf	(_timer_off+2)& (0+255),b	;volatile
  9154  00215E  0E00               	movlw	0
  9155  002160  0100               	movlb	0	; () banked
  9156  002162  21BE               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  9157  002164  0100               	movlb	0	; () banked
  9158  002166  6F77               	movwf	(_timer_off+3)& (0+255),b	;volatile
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;ABS_Code.c: 161: timer_on = 65536 - timer_on;
  9162  002168  C005  F0B7         	movff	_timer_on,??_ISR_Alta	;volatile
  9163  00216C  C006  F0B8         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  9164  002170  C007  F0B9         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  9165  002174  C008  F0BA         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  9166  002178  0100               	movlb	0	; () banked
  9167  00217A  1FB7               	comf	??_ISR_Alta& (0+255),f,b
  9168  00217C  1FB8               	comf	(??_ISR_Alta+1)& (0+255),f,b
  9169  00217E  1FB9               	comf	(??_ISR_Alta+2)& (0+255),f,b
  9170  002180  1FBA               	comf	(??_ISR_Alta+3)& (0+255),f,b
  9171  002182  2BB7               	incf	??_ISR_Alta& (0+255),f,b
  9172  002184  0E00               	movlw	0
  9173  002186  23B8               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  9174  002188  23B9               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  9175  00218A  23BA               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  9176  00218C  0E00               	movlw	0
  9177  00218E  0100               	movlb	0	; () banked
  9178  002190  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  9179  002192  6E05               	movwf	_timer_on,c	;volatile
  9180  002194  0E00               	movlw	0
  9181  002196  0100               	movlb	0	; () banked
  9182  002198  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  9183  00219A  6E06               	movwf	_timer_on+1,c	;volatile
  9184  00219C  0E01               	movlw	1
  9185  00219E  0100               	movlb	0	; () banked
  9186  0021A0  21B9               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  9187  0021A2  6E07               	movwf	_timer_on+2,c	;volatile
  9188  0021A4  0E00               	movlw	0
  9189  0021A6  0100               	movlb	0	; () banked
  9190  0021A8  21BA               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  9191  0021AA  6E08               	movwf	_timer_on+3,c	;volatile
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;ABS_Code.c: 162: WriteTimer0(timer_on);
  9195  0021AC  C005  F0A9         	movff	_timer_on,WriteTimer0@timer0	;volatile
  9196  0021B0  C006  F0AA         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  9197  0021B4  EC9A  F016         	call	_WriteTimer0	;wreg free
  9198                           
  9199                           ;ABS_Code.c: 163: } else {
  9200  0021B8  D007               	goto	i2l5447
  9201  0021BA                     i2l5445:
  9202                           
  9203                           ;ABS_Code.c: 164: WriteTimer0(timer_off);
  9204  0021BA  C074  F0A9         	movff	_timer_off,WriteTimer0@timer0	;volatile
  9205  0021BE  C075  F0AA         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  9206  0021C2  EC9A  F016         	call	_WriteTimer0	;wreg free
  9207  0021C6  D000               	goto	i2l5447
  9208  0021C8                     i2l5447:
  9209                           
  9210                           ;ABS_Code.c: 165: }
  9211                           ;ABS_Code.c: 166: INTCONbits.TMR0IF = 0;
  9212  0021C8  94F2               	bcf	intcon,2,c	;volatile
  9213  0021CA  D000               	goto	i2l5449
  9214  0021CC                     i2l5449:
  9215                           
  9216                           ;ABS_Code.c: 167: }
  9217                           ;ABS_Code.c: 170: if (INTCONbits.INT0IF == 1) {
  9218  0021CC  A2F2               	btfss	intcon,1,c	;volatile
  9219  0021CE  D04C               	goto	i2l685
  9220                           
  9221                           ;ABS_Code.c: 171: if (x == 0) {
  9222  0021D0  B449               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  9223  0021D2  D006               	goto	i2l5457
  9224                           
  9225                           ;ABS_Code.c: 172: TMR1H = 0x00;
  9226  0021D4  0E00               	movlw	0
  9227  0021D6  6ECF               	movwf	4047,c	;volatile
  9228                           
  9229                           ;ABS_Code.c: 173: TMR1L = 0x00;
  9230  0021D8  0E00               	movlw	0
  9231  0021DA  6ECE               	movwf	4046,c	;volatile
  9232                           
  9233                           ;ABS_Code.c: 174: x = 1;
  9234  0021DC  8449               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  9235                           
  9236                           ;ABS_Code.c: 175: } else {
  9237  0021DE  D043               	goto	i2l687
  9238  0021E0                     i2l5457:
  9239                           
  9240                           ;ABS_Code.c: 176: gap_time_1 = (TMR1H << 8) + TMR1L;
  9241  0021E0  50CF               	movf	4047,w,c	;volatile
  9242  0021E2  0100               	movlb	0	; () banked
  9243  0021E4  6FB8               	movwf	(??_ISR_Alta+1)& (0+255),b
  9244  0021E6  6BB7               	clrf	??_ISR_Alta& (0+255),b
  9245  0021E8  50CE               	movf	4046,w,c	;volatile
  9246  0021EA  0100               	movlb	0	; () banked
  9247  0021EC  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  9248  0021EE  6E1F               	movwf	_gap_time_1,c	;volatile
  9249  0021F0  0E00               	movlw	0
  9250  0021F2  0100               	movlb	0	; () banked
  9251  0021F4  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  9252  0021F6  6E20               	movwf	_gap_time_1+1,c	;volatile
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;ABS_Code.c: 177: gap_time_1 = gap_time_1 / 500;
  9256  0021F8  C01F  F0A9         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  9257  0021FC  C020  F0AA         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  9258  002200  0E01               	movlw	1
  9259  002202  0100               	movlb	0	; () banked
  9260  002204  6FAC               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9261  002206  0EF4               	movlw	244
  9262  002208  6FAB               	movwf	___lwdiv@divisor& (0+255),b
  9263  00220A  EC6A  F015         	call	___lwdiv	;wreg free
  9264  00220E  C0A9  F01F         	movff	?___lwdiv,_gap_time_1	;volatile
  9265  002212  C0AA  F020         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  9266                           
  9267                           ;ABS_Code.c: 178: ENC1_measure = 1;
  9268  002216  8048               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  9269                           
  9270                           ;ABS_Code.c: 179: TMR1H = 0x00;
  9271  002218  0E00               	movlw	0
  9272  00221A  6ECF               	movwf	4047,c	;volatile
  9273                           
  9274                           ;ABS_Code.c: 180: TMR1L = 0x00;
  9275  00221C  0E00               	movlw	0
  9276  00221E  6ECE               	movwf	4046,c	;volatile
  9277                           
  9278                           ;ABS_Code.c: 181: if (count_flag == 1) {
  9279  002220  AA48               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9280  002222  D008               	goto	i2l5471
  9281                           
  9282                           ;ABS_Code.c: 182: int_counter_1++;
  9283  002224  0E01               	movlw	1
  9284  002226  0100               	movlb	0	; () banked
  9285  002228  276C               	addwf	_int_counter_1& (0+255),f,b	;volatile
  9286  00222A  0E00               	movlw	0
  9287  00222C  236D               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  9288  00222E  236E               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  9289  002230  236F               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  9290  002232  D000               	goto	i2l5471
  9291  002234                     i2l5471:
  9292                           
  9293                           ;ABS_Code.c: 183: }
  9294                           ;ABS_Code.c: 184: if (distance_set_flag == 1) {
  9295  002234  AE48               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  9296  002236  D017               	goto	i2l687
  9297                           
  9298                           ;ABS_Code.c: 185: distance_set_counter_1++;
  9299  002238  4A19               	infsnz	_distance_set_counter_1,f,c	;volatile
  9300  00223A  2A1A               	incf	_distance_set_counter_1+1,f,c	;volatile
  9301                           
  9302                           ;ABS_Code.c: 186: if ((steering_dir == 1)&&(distance_set_counter_1 > distance_set_value)
      +                          ) {
  9303  00223C  A249               	btfss	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9304  00223E  D008               	goto	i2l690
  9305  002240  5019               	movf	_distance_set_counter_1,w,c	;volatile
  9306  002242  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9307  002244  501A               	movf	_distance_set_counter_1+1,w,c	;volatile
  9308  002246  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9309  002248  B0D8               	btfsc	status,0,c
  9310  00224A  D002               	goto	i2l690
  9311                           
  9312                           ;ABS_Code.c: 187: distance_reached_flag = 1;
  9313  00224C  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9314                           
  9315                           ;ABS_Code.c: 188: PORTAbits.RA1 = 1;
  9316  00224E  8280               	bsf	3968,1,c	;volatile
  9317  002250                     i2l690:
  9318                           
  9319                           ;ABS_Code.c: 189: }
  9320                           ;ABS_Code.c: 190: if ((steering_dir == 0)&&(distance_set_counter_2 > distance_set_value)
      +                          ) {
  9321  002250  B249               	btfsc	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9322  002252  D009               	goto	i2l687
  9323  002254  501B               	movf	_distance_set_counter_2,w,c	;volatile
  9324  002256  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9325  002258  501C               	movf	_distance_set_counter_2+1,w,c	;volatile
  9326  00225A  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9327  00225C  B0D8               	btfsc	status,0,c
  9328  00225E  D003               	goto	i2l687
  9329                           
  9330                           ;ABS_Code.c: 191: distance_reached_flag = 1;
  9331  002260  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9332                           
  9333                           ;ABS_Code.c: 192: PORTAbits.RA1 = 1;
  9334  002262  8280               	bsf	3968,1,c	;volatile
  9335  002264  D000               	goto	i2l687
  9336  002266                     i2l687:
  9337                           
  9338                           ;ABS_Code.c: 193: }
  9339                           ;ABS_Code.c: 194: }
  9340                           ;ABS_Code.c: 195: }
  9341                           ;ABS_Code.c: 196: INTCONbits.INT0IF = 0;
  9342  002266  92F2               	bcf	intcon,1,c	;volatile
  9343  002268                     i2l685:
  9344                           
  9345                           ;ABS_Code.c: 197: }
  9346                           ;ABS_Code.c: 200: if (INTCON3bits.INT1IF == 1) {
  9347  002268  A0F0               	btfss	intcon3,0,c	;volatile
  9348  00226A  D04D               	goto	i2l699
  9349                           
  9350                           ;ABS_Code.c: 201: if (y == 0) {
  9351  00226C  B649               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  9352  00226E  D006               	goto	i2l5491
  9353                           
  9354                           ;ABS_Code.c: 202: TMR3H = 0x00;
  9355  002270  0E00               	movlw	0
  9356  002272  6EB3               	movwf	4019,c	;volatile
  9357                           
  9358                           ;ABS_Code.c: 203: TMR3L = 0x00;
  9359  002274  0E00               	movlw	0
  9360  002276  6EB2               	movwf	4018,c	;volatile
  9361                           
  9362                           ;ABS_Code.c: 204: y = 1;
  9363  002278  8649               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  9364                           
  9365                           ;ABS_Code.c: 205: } else {
  9366  00227A  D043               	goto	i2l694
  9367  00227C                     i2l5491:
  9368                           
  9369                           ;ABS_Code.c: 206: gap_time_2 = (TMR3H << 8) + TMR3L;
  9370  00227C  50B3               	movf	4019,w,c	;volatile
  9371  00227E  0100               	movlb	0	; () banked
  9372  002280  6FB8               	movwf	(??_ISR_Alta+1)& (0+255),b
  9373  002282  6BB7               	clrf	??_ISR_Alta& (0+255),b
  9374  002284  50B2               	movf	4018,w,c	;volatile
  9375  002286  0100               	movlb	0	; () banked
  9376  002288  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  9377  00228A  6E21               	movwf	_gap_time_2,c	;volatile
  9378  00228C  0E00               	movlw	0
  9379  00228E  0100               	movlb	0	; () banked
  9380  002290  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  9381  002292  6E22               	movwf	_gap_time_2+1,c	;volatile
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;ABS_Code.c: 207: gap_time_2 = gap_time_2 / 500;
  9385  002294  C021  F0A9         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  9386  002298  C022  F0AA         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  9387  00229C  0E01               	movlw	1
  9388  00229E  0100               	movlb	0	; () banked
  9389  0022A0  6FAC               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9390  0022A2  0EF4               	movlw	244
  9391  0022A4  6FAB               	movwf	___lwdiv@divisor& (0+255),b
  9392  0022A6  EC6A  F015         	call	___lwdiv	;wreg free
  9393  0022AA  C0A9  F021         	movff	?___lwdiv,_gap_time_2	;volatile
  9394  0022AE  C0AA  F022         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  9395                           
  9396                           ;ABS_Code.c: 208: ENC2_measure = 1;
  9397  0022B2  8248               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  9398                           
  9399                           ;ABS_Code.c: 209: TMR3H = 0x00;
  9400  0022B4  0E00               	movlw	0
  9401  0022B6  6EB3               	movwf	4019,c	;volatile
  9402                           
  9403                           ;ABS_Code.c: 210: TMR3L = 0x00;
  9404  0022B8  0E00               	movlw	0
  9405  0022BA  6EB2               	movwf	4018,c	;volatile
  9406                           
  9407                           ;ABS_Code.c: 211: if (count_flag == 1) {
  9408  0022BC  AA48               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9409  0022BE  D008               	goto	i2l5505
  9410                           
  9411                           ;ABS_Code.c: 212: int_counter_2++;
  9412  0022C0  0E01               	movlw	1
  9413  0022C2  0100               	movlb	0	; () banked
  9414  0022C4  2770               	addwf	_int_counter_2& (0+255),f,b	;volatile
  9415  0022C6  0E00               	movlw	0
  9416  0022C8  2371               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  9417  0022CA  2372               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  9418  0022CC  2373               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9419  0022CE  D000               	goto	i2l5505
  9420  0022D0                     i2l5505:
  9421                           
  9422                           ;ABS_Code.c: 213: }
  9423                           ;ABS_Code.c: 214: if (distance_set_flag == 1) {
  9424  0022D0  AE48               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  9425  0022D2  D017               	goto	i2l694
  9426                           
  9427                           ;ABS_Code.c: 215: distance_set_counter_2++;
  9428  0022D4  4A1B               	infsnz	_distance_set_counter_2,f,c	;volatile
  9429  0022D6  2A1C               	incf	_distance_set_counter_2+1,f,c	;volatile
  9430                           
  9431                           ;ABS_Code.c: 216: if ((steering_dir == 1)&&(distance_set_counter_1 > distance_set_value)
      +                          ) {
  9432  0022D8  A249               	btfss	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9433  0022DA  D008               	goto	i2l697
  9434  0022DC  5019               	movf	_distance_set_counter_1,w,c	;volatile
  9435  0022DE  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9436  0022E0  501A               	movf	_distance_set_counter_1+1,w,c	;volatile
  9437  0022E2  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9438  0022E4  B0D8               	btfsc	status,0,c
  9439  0022E6  D002               	goto	i2l697
  9440                           
  9441                           ;ABS_Code.c: 217: distance_reached_flag = 1;
  9442  0022E8  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9443                           
  9444                           ;ABS_Code.c: 218: PORTAbits.RA1 = 1;
  9445  0022EA  8280               	bsf	3968,1,c	;volatile
  9446  0022EC                     i2l697:
  9447                           
  9448                           ;ABS_Code.c: 219: }
  9449                           ;ABS_Code.c: 220: if ((steering_dir == 0)&&(distance_set_counter_2 > distance_set_value)
      +                          ) {
  9450  0022EC  B249               	btfsc	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9451  0022EE  D009               	goto	i2l694
  9452  0022F0  501B               	movf	_distance_set_counter_2,w,c	;volatile
  9453  0022F2  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9454  0022F4  501C               	movf	_distance_set_counter_2+1,w,c	;volatile
  9455  0022F6  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9456  0022F8  B0D8               	btfsc	status,0,c
  9457  0022FA  D003               	goto	i2l694
  9458                           
  9459                           ;ABS_Code.c: 221: distance_reached_flag = 1;
  9460  0022FC  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9461                           
  9462                           ;ABS_Code.c: 222: PORTAbits.RA1 = 1;
  9463  0022FE  8280               	bsf	3968,1,c	;volatile
  9464  002300  D000               	goto	i2l694
  9465  002302                     i2l694:
  9466                           
  9467                           ;ABS_Code.c: 223: }
  9468                           ;ABS_Code.c: 224: }
  9469                           ;ABS_Code.c: 225: }
  9470                           ;ABS_Code.c: 226: INTCON3bits.INT1IF = 0;
  9471  002302  90F0               	bcf	intcon3,0,c	;volatile
  9472  002304  D000               	goto	i2l699
  9473  002306                     i2l699:
  9474  002306  C0CC  FFF5         	movff	??_ISR_Alta+21,tablat
  9475  00230A  C0CB  FFF8         	movff	??_ISR_Alta+20,tblptru
  9476  00230E  C0CA  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9477  002312  C0C9  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9478  002316  C0C8  FFF4         	movff	??_ISR_Alta+17,prodh
  9479  00231A  C0C7  FFF3         	movff	??_ISR_Alta+16,prodl
  9480  00231E  C0C6  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9481  002322  C0C5  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9482  002326  C0C4  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9483  00232A  C0C3  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9484  00232E  C0C2  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9485  002332  C0C1  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9486  002336  C0C0  FFFB         	movff	??_ISR_Alta+9,pclatu
  9487  00233A  C0BF  FFFA         	movff	??_ISR_Alta+8,pclath
  9488  00233E  0011               	retfie		f
  9489  002340                     __end_of_ISR_Alta:
  9490                           	opt stack 0
  9491                           pclatu	equ	0xFFB
  9492                           pclath	equ	0xFFA
  9493                           tblptru	equ	0xFF8
  9494                           tblptrh	equ	0xFF7
  9495                           tblptrl	equ	0xFF6
  9496                           tablat	equ	0xFF5
  9497                           prodh	equ	0xFF4
  9498                           prodl	equ	0xFF3
  9499                           intcon	equ	0xFF2
  9500                           intcon2	equ	0xFF1
  9501                           intcon3	equ	0xFF0
  9502                           postinc0	equ	0xFEE
  9503                           fsr0h	equ	0xFEA
  9504                           fsr0l	equ	0xFE9
  9505                           wreg	equ	0xFE8
  9506                           postdec1	equ	0xFE5
  9507                           fsr1h	equ	0xFE2
  9508                           fsr1l	equ	0xFE1
  9509                           bsr	equ	0xFE0
  9510                           indf2	equ	0xFDF
  9511                           postinc2	equ	0xFDE
  9512                           postdec2	equ	0xFDD
  9513                           fsr2h	equ	0xFDA
  9514                           fsr2l	equ	0xFD9
  9515                           status	equ	0xFD8
  9516                           
  9517 ;; *************** function i2___wmul *****************
  9518 ;; Defined at:
  9519 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9522 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;  __wmul          2    4[BANK0 ] unsigned int 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  2    0[BANK0 ] unsigned int 
  9527 ;; Registers used:
  9528 ;;		wreg, status,2, status,0, prodl, prodh
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9534 ;;      Params:         0       4       0       0
  9535 ;;      Locals:         0       2       0       0
  9536 ;;      Temps:          0       0       0       0
  9537 ;;      Totals:         0       6       0       0
  9538 ;;Total ram usage:        6 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; This function calls:
  9541 ;;		Nothing
  9542 ;; This function is called by:
  9543 ;;		_ISR_Alta
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           	psect	text21
  9548  002CA6                     __ptext21:
  9549                           	opt stack 0
  9550  002CA6                     i2___wmul:
  9551                           	opt stack 24
  9552                           
  9553                           ;incstack = 0
  9554  002CA6  0100               	movlb	0	; () banked
  9555  002CA8  51A9               	movf	i2___wmul@multiplier& (0+255),w,b
  9556  002CAA  0100               	movlb	0	; () banked
  9557  002CAC  03AB               	mulwf	i2___wmul@multiplicand& (0+255),b
  9558  002CAE  CFF3 F0AD          	movff	prodl,i2___wmul@product
  9559  002CB2  CFF4 F0AE          	movff	prodh,i2___wmul@product+1
  9560  002CB6  0100               	movlb	0	; () banked
  9561  002CB8  51A9               	movf	i2___wmul@multiplier& (0+255),w,b
  9562  002CBA  0100               	movlb	0	; () banked
  9563  002CBC  03AC               	mulwf	(i2___wmul@multiplicand+1)& (0+255),b
  9564  002CBE  50F3               	movf	prodl,w,c
  9565  002CC0  0100               	movlb	0	; () banked
  9566  002CC2  27AE               	addwf	(i2___wmul@product+1)& (0+255),f,b
  9567  002CC4  0100               	movlb	0	; () banked
  9568  002CC6  51AA               	movf	(i2___wmul@multiplier+1)& (0+255),w,b
  9569  002CC8  0100               	movlb	0	; () banked
  9570  002CCA  03AB               	mulwf	i2___wmul@multiplicand& (0+255),b
  9571  002CCC  50F3               	movf	prodl,w,c
  9572  002CCE  0100               	movlb	0	; () banked
  9573  002CD0  27AE               	addwf	(i2___wmul@product+1)& (0+255),f,b
  9574                           
  9575                           ; BSR set to: 0
  9576  002CD2  C0AD  F0A9         	movff	i2___wmul@product,?i2___wmul
  9577  002CD6  C0AE  F0AA         	movff	i2___wmul@product+1,?i2___wmul+1
  9578  002CDA  D000               	goto	i2l780
  9579  002CDC                     i2l780:
  9580                           
  9581                           ; BSR set to: 0
  9582  002CDC  0012               	return		;funcret
  9583  002CDE                     __end_ofi2___wmul:
  9584                           	opt stack 0
  9585                           pclatu	equ	0xFFB
  9586                           pclath	equ	0xFFA
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           intcon	equ	0xFF2
  9594                           intcon2	equ	0xFF1
  9595                           intcon3	equ	0xFF0
  9596                           postinc0	equ	0xFEE
  9597                           fsr0h	equ	0xFEA
  9598                           fsr0l	equ	0xFE9
  9599                           wreg	equ	0xFE8
  9600                           postdec1	equ	0xFE5
  9601                           fsr1h	equ	0xFE2
  9602                           fsr1l	equ	0xFE1
  9603                           bsr	equ	0xFE0
  9604                           indf2	equ	0xFDF
  9605                           postinc2	equ	0xFDE
  9606                           postdec2	equ	0xFDD
  9607                           fsr2h	equ	0xFDA
  9608                           fsr2l	equ	0xFD9
  9609                           status	equ	0xFD8
  9610                           
  9611 ;; *************** function i2___awdiv *****************
  9612 ;; Defined at:
  9613 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;  dividend        2    6[BANK0 ] int 
  9616 ;;  divisor         2    8[BANK0 ] int 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  __awdiv         2   12[BANK0 ] int 
  9619 ;;  __awdiv         1   11[BANK0 ] unsigned char 
  9620 ;;  __awdiv         1   10[BANK0 ] unsigned char 
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  2    6[BANK0 ] int 
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9630 ;;      Params:         0       4       0       0
  9631 ;;      Locals:         0       4       0       0
  9632 ;;      Temps:          0       0       0       0
  9633 ;;      Totals:         0       8       0       0
  9634 ;;Total ram usage:        8 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_ISR_Alta
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text22
  9644  0028A6                     __ptext22:
  9645                           	opt stack 0
  9646  0028A6                     i2___awdiv:
  9647                           	opt stack 24
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;incstack = 0
  9651  0028A6  0E00               	movlw	0
  9652  0028A8  0100               	movlb	0	; () banked
  9653  0028AA  6FB4               	movwf	i2___awdiv@sign& (0+255),b
  9654                           
  9655                           ; BSR set to: 0
  9656  0028AC  0100               	movlb	0	; () banked
  9657  0028AE  AFB2               	btfss	(i2___awdiv@divisor+1)& (0+255),7,b
  9658  0028B0  D009               	goto	i2l5389
  9659                           
  9660                           ; BSR set to: 0
  9661  0028B2  0100               	movlb	0	; () banked
  9662  0028B4  6DB1               	negf	i2___awdiv@divisor& (0+255),b
  9663  0028B6  1FB2               	comf	(i2___awdiv@divisor+1)& (0+255),f,b
  9664  0028B8  B0D8               	btfsc	status,0,c
  9665  0028BA  2BB2               	incf	(i2___awdiv@divisor+1)& (0+255),f,b
  9666                           
  9667                           ; BSR set to: 0
  9668  0028BC  0E01               	movlw	1
  9669  0028BE  0100               	movlb	0	; () banked
  9670  0028C0  6FB4               	movwf	i2___awdiv@sign& (0+255),b
  9671  0028C2  D000               	goto	i2l5389
  9672  0028C4                     i2l5389:
  9673                           
  9674                           ; BSR set to: 0
  9675  0028C4  0100               	movlb	0	; () banked
  9676  0028C6  AFB0               	btfss	(i2___awdiv@dividend+1)& (0+255),7,b
  9677  0028C8  D009               	goto	i2l5395
  9678                           
  9679                           ; BSR set to: 0
  9680  0028CA  0100               	movlb	0	; () banked
  9681  0028CC  6DAF               	negf	i2___awdiv@dividend& (0+255),b
  9682  0028CE  1FB0               	comf	(i2___awdiv@dividend+1)& (0+255),f,b
  9683  0028D0  B0D8               	btfsc	status,0,c
  9684  0028D2  2BB0               	incf	(i2___awdiv@dividend+1)& (0+255),f,b
  9685                           
  9686                           ; BSR set to: 0
  9687  0028D4  0E01               	movlw	1
  9688  0028D6  0100               	movlb	0	; () banked
  9689  0028D8  1BB4               	xorwf	i2___awdiv@sign& (0+255),f,b
  9690  0028DA  D000               	goto	i2l5395
  9691  0028DC                     i2l5395:
  9692                           
  9693                           ; BSR set to: 0
  9694  0028DC  0E00               	movlw	0
  9695  0028DE  0100               	movlb	0	; () banked
  9696  0028E0  6FB6               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9697  0028E2  0E00               	movlw	0
  9698  0028E4  6FB5               	movwf	i2___awdiv@quotient& (0+255),b
  9699                           
  9700                           ; BSR set to: 0
  9701  0028E6  0100               	movlb	0	; () banked
  9702  0028E8  51B1               	movf	i2___awdiv@divisor& (0+255),w,b
  9703  0028EA  0100               	movlb	0	; () banked
  9704  0028EC  11B2               	iorwf	(i2___awdiv@divisor+1)& (0+255),w,b
  9705  0028EE  B4D8               	btfsc	status,2,c
  9706  0028F0  D031               	goto	i2l5417
  9707                           
  9708                           ; BSR set to: 0
  9709  0028F2  0E01               	movlw	1
  9710  0028F4  0100               	movlb	0	; () banked
  9711  0028F6  6FB3               	movwf	i2___awdiv@counter& (0+255),b
  9712  0028F8  D007               	goto	i2l5403
  9713  0028FA                     i2l5401:
  9714                           
  9715                           ; BSR set to: 0
  9716  0028FA  0100               	movlb	0	; () banked
  9717  0028FC  90D8               	bcf	status,0,c
  9718  0028FE  37B1               	rlcf	i2___awdiv@divisor& (0+255),f,b
  9719  002900  37B2               	rlcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9720  002902  0100               	movlb	0	; () banked
  9721  002904  2BB3               	incf	i2___awdiv@counter& (0+255),f,b
  9722  002906  D000               	goto	i2l5403
  9723  002908                     i2l5403:
  9724                           
  9725                           ; BSR set to: 0
  9726  002908  0100               	movlb	0	; () banked
  9727  00290A  BFB2               	btfsc	(i2___awdiv@divisor+1)& (0+255),7,b
  9728  00290C  D002               	goto	i2l5405
  9729  00290E  D7F5               	goto	i2l5401
  9730                           
  9731                           ; BSR set to: 0
  9732  002910  D000               	goto	i2l5405
  9733  002912                     i2l5405:
  9734                           
  9735                           ; BSR set to: 0
  9736  002912  0100               	movlb	0	; () banked
  9737  002914  90D8               	bcf	status,0,c
  9738  002916  37B5               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9739  002918  37B6               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9740                           
  9741                           ; BSR set to: 0
  9742  00291A  0100               	movlb	0	; () banked
  9743  00291C  51B1               	movf	i2___awdiv@divisor& (0+255),w,b
  9744  00291E  0100               	movlb	0	; () banked
  9745  002920  5DAF               	subwf	i2___awdiv@dividend& (0+255),w,b
  9746  002922  0100               	movlb	0	; () banked
  9747  002924  51B2               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9748  002926  0100               	movlb	0	; () banked
  9749  002928  59B0               	subwfb	(i2___awdiv@dividend+1)& (0+255),w,b
  9750  00292A  A0D8               	btfss	status,0,c
  9751  00292C  D00B               	goto	i2l5413
  9752                           
  9753                           ; BSR set to: 0
  9754  00292E  0100               	movlb	0	; () banked
  9755  002930  51B1               	movf	i2___awdiv@divisor& (0+255),w,b
  9756  002932  0100               	movlb	0	; () banked
  9757  002934  5FAF               	subwf	i2___awdiv@dividend& (0+255),f,b
  9758  002936  0100               	movlb	0	; () banked
  9759  002938  51B2               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9760  00293A  0100               	movlb	0	; () banked
  9761  00293C  5BB0               	subwfb	(i2___awdiv@dividend+1)& (0+255),f,b
  9762                           
  9763                           ; BSR set to: 0
  9764  00293E  0100               	movlb	0	; () banked
  9765  002940  81B5               	bsf	i2___awdiv@quotient& (0+255),0,b
  9766  002942  D000               	goto	i2l5413
  9767  002944                     i2l5413:
  9768                           
  9769                           ; BSR set to: 0
  9770  002944  0100               	movlb	0	; () banked
  9771  002946  90D8               	bcf	status,0,c
  9772  002948  33B2               	rrcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9773  00294A  33B1               	rrcf	i2___awdiv@divisor& (0+255),f,b
  9774                           
  9775                           ; BSR set to: 0
  9776  00294C  0100               	movlb	0	; () banked
  9777  00294E  2FB3               	decfsz	i2___awdiv@counter& (0+255),f,b
  9778  002950  D7E0               	goto	i2l5405
  9779                           
  9780                           ; BSR set to: 0
  9781  002952  D000               	goto	i2l5417
  9782  002954                     i2l5417:
  9783                           
  9784                           ; BSR set to: 0
  9785  002954  0100               	movlb	0	; () banked
  9786  002956  51B4               	movf	i2___awdiv@sign& (0+255),w,b
  9787  002958  0100               	movlb	0	; () banked
  9788  00295A  B4D8               	btfsc	status,2,c
  9789  00295C  D006               	goto	i2l5421
  9790                           
  9791                           ; BSR set to: 0
  9792  00295E  0100               	movlb	0	; () banked
  9793  002960  6DB5               	negf	i2___awdiv@quotient& (0+255),b
  9794  002962  1FB6               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9795  002964  B0D8               	btfsc	status,0,c
  9796  002966  2BB6               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9797  002968  D000               	goto	i2l5421
  9798  00296A                     i2l5421:
  9799                           
  9800                           ; BSR set to: 0
  9801  00296A  C0B5  F0AF         	movff	i2___awdiv@quotient,?i2___awdiv
  9802  00296E  C0B6  F0B0         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9803  002972  D000               	goto	i2l973
  9804  002974                     i2l973:
  9805                           
  9806                           ; BSR set to: 0
  9807  002974  0012               	return		;funcret
  9808  002976                     __end_ofi2___awdiv:
  9809                           	opt stack 0
  9810                           pclatu	equ	0xFFB
  9811                           pclath	equ	0xFFA
  9812                           tblptru	equ	0xFF8
  9813                           tblptrh	equ	0xFF7
  9814                           tblptrl	equ	0xFF6
  9815                           tablat	equ	0xFF5
  9816                           prodh	equ	0xFF4
  9817                           prodl	equ	0xFF3
  9818                           intcon	equ	0xFF2
  9819                           intcon2	equ	0xFF1
  9820                           intcon3	equ	0xFF0
  9821                           postinc0	equ	0xFEE
  9822                           fsr0h	equ	0xFEA
  9823                           fsr0l	equ	0xFE9
  9824                           wreg	equ	0xFE8
  9825                           postdec1	equ	0xFE5
  9826                           fsr1h	equ	0xFE2
  9827                           fsr1l	equ	0xFE1
  9828                           bsr	equ	0xFE0
  9829                           indf2	equ	0xFDF
  9830                           postinc2	equ	0xFDE
  9831                           postdec2	equ	0xFDD
  9832                           fsr2h	equ	0xFDA
  9833                           fsr2l	equ	0xFD9
  9834                           status	equ	0xFD8
  9835                           
  9836 ;; *************** function ___lwdiv *****************
  9837 ;; Defined at:
  9838 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  dividend        2    0[BANK0 ] unsigned int 
  9841 ;;  divisor         2    2[BANK0 ] unsigned int 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  quotient        2    5[BANK0 ] unsigned int 
  9844 ;;  counter         1    4[BANK0 ] unsigned char 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  2    0[BANK0 ] unsigned int 
  9847 ;; Registers used:
  9848 ;;		wreg, status,2, status,0
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9854 ;;      Params:         0       4       0       0
  9855 ;;      Locals:         0       3       0       0
  9856 ;;      Temps:          0       0       0       0
  9857 ;;      Totals:         0       7       0       0
  9858 ;;Total ram usage:        7 bytes
  9859 ;; Hardware stack levels used:    1
  9860 ;; This function calls:
  9861 ;;		Nothing
  9862 ;; This function is called by:
  9863 ;;		_ISR_Alta
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text23
  9868  002AD4                     __ptext23:
  9869                           	opt stack 0
  9870  002AD4                     ___lwdiv:
  9871                           	opt stack 24
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;incstack = 0
  9875  002AD4  0E00               	movlw	0
  9876  002AD6  0100               	movlb	0	; () banked
  9877  002AD8  6FAF               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9878  002ADA  0E00               	movlw	0
  9879  002ADC  6FAE               	movwf	___lwdiv@quotient& (0+255),b
  9880                           
  9881                           ; BSR set to: 0
  9882  002ADE  0100               	movlb	0	; () banked
  9883  002AE0  51AB               	movf	___lwdiv@divisor& (0+255),w,b
  9884  002AE2  0100               	movlb	0	; () banked
  9885  002AE4  11AC               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9886  002AE6  B4D8               	btfsc	status,2,c
  9887  002AE8  D031               	goto	i2l1298
  9888                           
  9889                           ; BSR set to: 0
  9890  002AEA  0E01               	movlw	1
  9891  002AEC  0100               	movlb	0	; () banked
  9892  002AEE  6FAD               	movwf	___lwdiv@counter& (0+255),b
  9893  002AF0  D007               	goto	i2l5361
  9894  002AF2                     i2l5359:
  9895                           
  9896                           ; BSR set to: 0
  9897  002AF2  0100               	movlb	0	; () banked
  9898  002AF4  90D8               	bcf	status,0,c
  9899  002AF6  37AB               	rlcf	___lwdiv@divisor& (0+255),f,b
  9900  002AF8  37AC               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9901  002AFA  0100               	movlb	0	; () banked
  9902  002AFC  2BAD               	incf	___lwdiv@counter& (0+255),f,b
  9903  002AFE  D000               	goto	i2l5361
  9904  002B00                     i2l5361:
  9905                           
  9906                           ; BSR set to: 0
  9907  002B00  0100               	movlb	0	; () banked
  9908  002B02  BFAC               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  9909  002B04  D002               	goto	i2l5363
  9910  002B06  D7F5               	goto	i2l5359
  9911                           
  9912                           ; BSR set to: 0
  9913  002B08  D000               	goto	i2l5363
  9914  002B0A                     i2l5363:
  9915                           
  9916                           ; BSR set to: 0
  9917  002B0A  0100               	movlb	0	; () banked
  9918  002B0C  90D8               	bcf	status,0,c
  9919  002B0E  37AE               	rlcf	___lwdiv@quotient& (0+255),f,b
  9920  002B10  37AF               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9921                           
  9922                           ; BSR set to: 0
  9923  002B12  0100               	movlb	0	; () banked
  9924  002B14  51AB               	movf	___lwdiv@divisor& (0+255),w,b
  9925  002B16  0100               	movlb	0	; () banked
  9926  002B18  5DA9               	subwf	___lwdiv@dividend& (0+255),w,b
  9927  002B1A  0100               	movlb	0	; () banked
  9928  002B1C  51AC               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9929  002B1E  0100               	movlb	0	; () banked
  9930  002B20  59AA               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9931  002B22  A0D8               	btfss	status,0,c
  9932  002B24  D00B               	goto	i2l5371
  9933                           
  9934                           ; BSR set to: 0
  9935  002B26  0100               	movlb	0	; () banked
  9936  002B28  51AB               	movf	___lwdiv@divisor& (0+255),w,b
  9937  002B2A  0100               	movlb	0	; () banked
  9938  002B2C  5FA9               	subwf	___lwdiv@dividend& (0+255),f,b
  9939  002B2E  0100               	movlb	0	; () banked
  9940  002B30  51AC               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9941  002B32  0100               	movlb	0	; () banked
  9942  002B34  5BAA               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9943                           
  9944                           ; BSR set to: 0
  9945  002B36  0100               	movlb	0	; () banked
  9946  002B38  81AE               	bsf	___lwdiv@quotient& (0+255),0,b
  9947  002B3A  D000               	goto	i2l5371
  9948  002B3C                     i2l5371:
  9949                           
  9950                           ; BSR set to: 0
  9951  002B3C  0100               	movlb	0	; () banked
  9952  002B3E  90D8               	bcf	status,0,c
  9953  002B40  33AC               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9954  002B42  33AB               	rrcf	___lwdiv@divisor& (0+255),f,b
  9955                           
  9956                           ; BSR set to: 0
  9957  002B44  0100               	movlb	0	; () banked
  9958  002B46  2FAD               	decfsz	___lwdiv@counter& (0+255),f,b
  9959  002B48  D7E0               	goto	i2l5363
  9960  002B4A  D000               	goto	i2l1298
  9961  002B4C                     i2l1298:
  9962                           
  9963                           ; BSR set to: 0
  9964  002B4C  C0AE  F0A9         	movff	___lwdiv@quotient,?___lwdiv
  9965  002B50  C0AF  F0AA         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9966                           
  9967                           ; BSR set to: 0
  9968  002B54  0012               	return		;funcret
  9969  002B56                     __end_of___lwdiv:
  9970                           	opt stack 0
  9971                           pclatu	equ	0xFFB
  9972                           pclath	equ	0xFFA
  9973                           tblptru	equ	0xFF8
  9974                           tblptrh	equ	0xFF7
  9975                           tblptrl	equ	0xFF6
  9976                           tablat	equ	0xFF5
  9977                           prodh	equ	0xFF4
  9978                           prodl	equ	0xFF3
  9979                           intcon	equ	0xFF2
  9980                           intcon2	equ	0xFF1
  9981                           intcon3	equ	0xFF0
  9982                           postinc0	equ	0xFEE
  9983                           fsr0h	equ	0xFEA
  9984                           fsr0l	equ	0xFE9
  9985                           wreg	equ	0xFE8
  9986                           postdec1	equ	0xFE5
  9987                           fsr1h	equ	0xFE2
  9988                           fsr1l	equ	0xFE1
  9989                           bsr	equ	0xFE0
  9990                           indf2	equ	0xFDF
  9991                           postinc2	equ	0xFDE
  9992                           postdec2	equ	0xFDD
  9993                           fsr2h	equ	0xFDA
  9994                           fsr2l	equ	0xFD9
  9995                           status	equ	0xFD8
  9996                           
  9997 ;; *************** function _WriteTimer0 *****************
  9998 ;; Defined at:
  9999 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  timer0          2    0[BANK0 ] unsigned int 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  timer           2    2[BANK0 ] struct Timers
 10004 ;; Return value:  Size  Location     Type
 10005 ;;		None               void
 10006 ;; Registers used:
 10007 ;;		None
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10013 ;;      Params:         0       2       0       0
 10014 ;;      Locals:         0       2       0       0
 10015 ;;      Temps:          0       0       0       0
 10016 ;;      Totals:         0       4       0       0
 10017 ;;Total ram usage:        4 bytes
 10018 ;; Hardware stack levels used:    1
 10019 ;; This function calls:
 10020 ;;		Nothing
 10021 ;; This function is called by:
 10022 ;;		_ISR_Alta
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text24
 10027  002D34                     __ptext24:
 10028                           	opt stack 0
 10029  002D34                     _WriteTimer0:
 10030                           	opt stack 24
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;incstack = 0
 10034  002D34  C0A9  F0AB         	movff	WriteTimer0@timer0,WriteTimer0@timer
 10035  002D38  C0AA  F0AC         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 10036  002D3C  C0AC  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 10037  002D40  C0AB  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 10038  002D44  0012               	return		;funcret
 10039  002D46                     __end_of_WriteTimer0:
 10040                           	opt stack 0
 10041  0000                     pclatu	equ	0xFFB
 10042                           pclath	equ	0xFFA
 10043                           tblptru	equ	0xFF8
 10044                           tblptrh	equ	0xFF7
 10045                           tblptrl	equ	0xFF6
 10046                           tablat	equ	0xFF5
 10047                           prodh	equ	0xFF4
 10048                           prodl	equ	0xFF3
 10049                           intcon	equ	0xFF2
 10050                           intcon2	equ	0xFF1
 10051                           intcon3	equ	0xFF0
 10052                           postinc0	equ	0xFEE
 10053                           fsr0h	equ	0xFEA
 10054                           fsr0l	equ	0xFE9
 10055                           wreg	equ	0xFE8
 10056                           postdec1	equ	0xFE5
 10057                           fsr1h	equ	0xFE2
 10058                           fsr1l	equ	0xFE1
 10059                           bsr	equ	0xFE0
 10060                           indf2	equ	0xFDF
 10061                           postinc2	equ	0xFDE
 10062                           postdec2	equ	0xFDD
 10063                           fsr2h	equ	0xFDA
 10064                           fsr2l	equ	0xFD9
 10065                           status	equ	0xFD8
 10066                           pclatu	equ	0xFFB
 10067                           pclath	equ	0xFFA
 10068                           tblptru	equ	0xFF8
 10069                           tblptrh	equ	0xFF7
 10070                           tblptrl	equ	0xFF6
 10071                           tablat	equ	0xFF5
 10072                           prodh	equ	0xFF4
 10073                           prodl	equ	0xFF3
 10074                           intcon	equ	0xFF2
 10075                           intcon2	equ	0xFF1
 10076                           intcon3	equ	0xFF0
 10077                           postinc0	equ	0xFEE
 10078                           fsr0h	equ	0xFEA
 10079                           fsr0l	equ	0xFE9
 10080                           wreg	equ	0xFE8
 10081                           postdec1	equ	0xFE5
 10082                           fsr1h	equ	0xFE2
 10083                           fsr1l	equ	0xFE1
 10084                           bsr	equ	0xFE0
 10085                           indf2	equ	0xFDF
 10086                           postinc2	equ	0xFDE
 10087                           postdec2	equ	0xFDD
 10088                           fsr2h	equ	0xFDA
 10089                           fsr2l	equ	0xFD9
 10090                           status	equ	0xFD8
 10091                           
 10092                           	psect	param0
 10093  0000                     pclatu	equ	0xFFB
 10094                           pclath	equ	0xFFA
 10095                           tblptru	equ	0xFF8
 10096                           tblptrh	equ	0xFF7
 10097                           tblptrl	equ	0xFF6
 10098                           tablat	equ	0xFF5
 10099                           prodh	equ	0xFF4
 10100                           prodl	equ	0xFF3
 10101                           intcon	equ	0xFF2
 10102                           intcon2	equ	0xFF1
 10103                           intcon3	equ	0xFF0
 10104                           postinc0	equ	0xFEE
 10105                           fsr0h	equ	0xFEA
 10106                           fsr0l	equ	0xFE9
 10107                           wreg	equ	0xFE8
 10108                           postdec1	equ	0xFE5
 10109                           fsr1h	equ	0xFE2
 10110                           fsr1l	equ	0xFE1
 10111                           bsr	equ	0xFE0
 10112                           indf2	equ	0xFDF
 10113                           postinc2	equ	0xFDE
 10114                           postdec2	equ	0xFDD
 10115                           fsr2h	equ	0xFDA
 10116                           fsr2l	equ	0xFD9
 10117                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      74
    BANK0           160     42     123
    BANK1           256     24      24
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), remote_frame_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   20770
                                             22 BANK1      2     2      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                            ___aldiv
                            ___awdiv
                            ___lldiv
                             ___lmul
               _board_initialization
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 0     0      0    5418
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     784
                                             36 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                             36 BANK0      4     4      0
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK1     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             36 BANK0      5     0      5
                                              0 BANK1      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             36 BANK0      5     0      5
                                              0 BANK1      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     558
                                             36 BANK0      4     4      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     549
                                             36 BANK0      5     5      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     683
                                             36 BANK0      4     0      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                              8 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           18    18      0    1387
                                             12 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     226
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1613
                                             14 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     296
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                              6 BANK0      8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     549
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lldiv
   ___lmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___lbdiv

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     18      18       6        9.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2A      7B       4       76.9%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     1E      4A       1       77.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DD       9        0.0%
DATA                 0      0      DD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jun 11 18:38:11 2016

           ??_CANisTXwarningON 00CD                              _x 024A                              _y 024B  
         __end_of_CANSetFilter 0CBC                   ___awdiv@sign 0101                             bsr 000FE0  
          ___wmul@multiplicand 00CF                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 112A  
                          l403 11E6                            l500 08F0                            l412 13A4  
                          l404 11EA                            l501 08FC                            l413 13A8  
                          l405 12E4                            l510 0A0C                            l502 0900  
                          l414 13B4                            l406 1272                            l511 0A10  
                          l503 090C                            l407 127C                            l520 0B20  
                          l512 0A1C                            l408 1286                            l521 0B2C  
                          l513 0A20                            l409 1290                            l530 0C3C  
                          l522 0B30                            l514 0A2C                            l506 09EC  
                          l450 1BC8                            l442 1B88                            l531 0C40  
                          l523 0B3C                            l507 09F0                            l443 1B8C  
                          l532 0C4C                            l524 0B40                            l508 09FC  
                          l460 1CD8                            l444 1B98                            l380 0D7C  
                          l533 0C50                            l525 0B4C                            l517 0B0C  
                          l509 0A00                            l461 1CE4                            l453 1CA4  
                          l445 1B9C                            l373 0F46                            l534 0C5C  
                          l518 0B10                            l454 1CA8                            l446 1BA8  
                          l390 0F60                            l374 0CD2                            l535 0C60  
                          l519 0B1C                            l455 1CB4                            l463 1D32  
                          l447 1BAC                            l391 105A                            l383 0E90  
                          l375 0CD6                            l536 0C6C                            l528 0C2C  
                          l480 06C2                            l456 1CB8                            l448 1BB8  
                          l368 2404                            l392 0FE8                            l384 0E94  
                          l376 0DD0                            l720 1D56                            l553 2D52  
                          l529 0C30                            l481 06CE                            l473 068E  
                          l457 1CC4                            l449 1BBC                            l369 240E  
                          l393 0FF2                            l385 0EA0                            l377 0D5E  
                          l721 1D5E                            l538 0CBA                            l490 07DC  
                          l474 0692                            l458 1CC8                            l394 0FFC  
                          l378 0D68                            l491 07E0                            l475 069E  
                          l459 1CD4                            l395 1006                            l387 145A  
                          l379 0D72                            l556 2D60                            l492 07EC  
                          l484 07AC                            l476 06A2                            l388 11D0  
                          l485 07B0                            l477 06AE                            l389 0F5C  
                          l725 1D9C                            l486 07BC                            l478 06B2  
                          l566 2CFC                            l398 111A                            l742 1F34  
                          l726 1DDC                            l495 08CC                            l487 07C0  
                          l479 06BE                            l567 2D02                            l399 111E  
                          l751 26A4                            l496 08D0                            l488 07CC  
                          l736 1E36                            l497 08DC                            l489 07D0  
                          l498 08E0                            l499 08EC                            l780 2CA4  
                          l764 26A8                            l849 27D4                            l973 28A4  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 0082                            wreg 000FE8                   _steering_dir 0249  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l1235 2A2A  
                         l5203 259A                           l5301 280C                           l5029 129C  
                         l5213 260A                           l5311 2842                           l4415 1AFC  
                         l5055 13BA                           l5207 25D4                           l4441 1BCE  
                         l5049 1398                           l5251 26D0                           l5307 282A  
                         l5323 2884                           l5235 2B6A                           l4515 030C  
                         l5309 2838                           l5341 29C0                           l4381 2D0E  
                         l4621 071C                           l4533 03C8                           l5229 2694  
                         l5263 271E                           l5327 289A                           l5319 2874  
                         l5239 2B92                           l4615 06D4                           l4551 0484  
                         l4447 1C16                           l5265 2730                           l5257 26F0  
                         l5337 29A4                           l4473 1CEA                           l5283 27C2  
                         l5275 2790                           l5267 273A                           l5339 29B6  
                         l4723 0A7A                           l5603 1F4C                           l5349 2A16  
                         l4717 0A32                           l5605 1FA2                           l5533 1D94  
                         l5525 1D42                           l5279 27A4                           l5295 27F4  
                         l4751 0B52                           l4655 083A                           l4399 1A44  
                         l4831 2412                           l4823 23A6                           l4903 0EA6  
                         l5199 255E                           l4649 07F2                           l4569 0540  
                         l4497 0252                           l4817 2396                           l5553 1DD0  
                         l5545 1DB6                           l4683 0912                           l4587 05FC  
                         l4835 241A                           l5563 1E08                           l5539 1DA4  
                         l4757 0B9A                           l4837 245E                           l4829 23FC  
                         l5557 1DE2                           l5549 1DC2                           l5575 1E4E  
                         l5567 1E2E                           l4785 0C72                           l4689 095A  
                         l4953 1012                           l5577 1EA4                           l5595 1F2C  
                         l4973 110E                           l4877 0D88                           l4897 0E84  
                         l4979 1130                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           _LATD 000F8C                           _LATE 000F8D  
                         u5220 1A76                           u6110 0C92                           u6030 0B72  
                         u5310 1BEE                           u5225 1A6A                           u6115 0C86  
                         u6035 0B66                           u5315 1BE2                           u5235 1AD6  
                         u5500 0342                           u5420 01CC                           u5180 19BE  
                         u6240 0DA8                           u5505 0336                           u5425 01C0  
                         u5185 19B2                           u6250 0DF4                           u5515 03A2  
                         u5435 022C                           u5195 1A1E                           u5620 0576  
                         u5540 03FE                           u5460 0286                           u6500 12BC  
                         u6245 0D9C                           u5710 06F4                           u5390 1D0A  
                         u6510 1308                           u6255 0DE8                           u5625 056A  
                         u5545 03F2                           u5465 027A                           u6505 12B0  
                         u6265 0E54                           u6370 1032                           u5715 06E8  
                         u5635 05D6                           u5555 045E                           u5475 02E6  
                         u5395 1CFE                           u6515 12FC                           u5580 04BA  
                         u6380 107E                           u6525 1368                           u6375 1026  
                         u5585 04AE                           u6385 1072                           u5595 051A  
                         u6395 10DE                           u6580 2D4E                           u6590 2D5C  
                         u5950 0A52                           u5870 0932                           u5790 0812  
                         u5955 0A46                           u5875 0926                           u5795 0806  
          __size_of_CANSetMask 03AA                           _main 1D34                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         _step 0027                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 018E                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                   ___param_bank 000000               _CANOperationMode 2D04  
                 _status_array 00A1                _brake_value_inc 0025           _remote_frame_handler 250E  
   __size_of_CANreceiveMessage 052E                __end_of___aldiv 27D6                          ?_main 002A  
              __end_of___awdiv 28A6                __end_of___lbdiv 2C6E                __end_of___lldiv 2A3C  
                        _T0CON 000FD5                ___awdiv@divisor 00CF                          _T1CON 000FCD  
                        _T3CON 000FB1             __size_of_ISR_Bassa 0176                __end_of___lwdiv 2B56  
                        i1l420 1708                          i1l428 1988                          i1l714 0148  
                        i1l571 2D2E                          i1l572 2D32                          i1l708 00B8  
                        i2l690 2250                          i2l780 2CDC                          i2l685 2268  
                        i2l694 2302                          i2l687 2266                          i2l697 22EC  
                        i2l699 2306                ___awdiv@counter 0100                          i2l973 2974  
                        _TMR0H 000FD7                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR3H 000FB3                          _TMR1L 000FCE                          _TMR3L 000FB2  
            _CANisRxReady$3175 002A                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 2340                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000            ___lmul@multiplicand 0104                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 010D  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0240           __end_of_CANisRxReady 2D34  
                        tablat 000FF5         _distance_set_counter_1 0019         _distance_set_counter_2 001B  
         __end_of_CANisTxReady 2D04               __end_ofi2___wmul 2CDE                          status 000FD8  
              ___lbdiv@divisor 002A                ___lbdiv@counter 002C             __size_ofi2___awdiv 00D0  
              __initialization 2BD0                   __end_of_main 2040  __size_of_board_initialization 0098  
             _brake_signal_CAN 0024          ?_remote_frame_handler 002A                         ??_main 0116  
                __activetblptr 000002              _CANisTxReady$3173 00CD                         _CANCON 000F6F  
             ___awdiv@dividend 00CD                __CFG_BBSIZ$1024 000000                         i1l1216 2C6C  
                       i1l4003 2C5E                         i1l4007 2C68                         i1l4211 0096  
                       i1l4203 0064                         i1l4221 00DC                         i1l4217 00BC  
                       i1l3611 1470                         i1l4235 011E                         i1l3607 1468  
                       i1l4247 0136                         i1l4239 0124                         i1l3731 1950  
                       i1l3723 1914                         i1l3715 18D8                         i1l3707 1868  
                       i1l3733 1984                         i1l3661 168E                         i1l3653 164E  
                       i1l3645 15DC                         i1l3727 1932                         i1l3719 18F6  
                       i1l3671 1702                         i1l3665 16AE                         i1l3657 166E  
                       i1l3669 16CE                         i2l1298 2B4C                         i1l3991 2C3A  
                       i1l3995 2C42                         i1l3997 2C4A                         i2l5401 28FA  
                       i2l5403 2908                         i2l5421 296A                         i2l5413 2944  
                       i2l5405 2912                         i2l5361 2B00                         i2l5417 2954  
                       i2l5505 22D0                         i2l5371 2B3C                         i2l5363 2B0A  
                       i2l5445 21BA                         i2l5359 2AF2                         i2l5471 2234  
                       i2l5447 21C8                         i2l5457 21E0                         i2l5449 21CC  
                       i2l5395 28DC                         i2l5491 227C                         i2l5389 28C4  
                       _RXB0D0 000F66                         _RXB0D1 000F67                         _RXB0D2 000F68  
                       _RXB0D3 000F69                         _RXB0D4 000F6A                         _RXB1D0 000F56  
                       _RXB0D5 000F6B                         _RXB1D1 000F57                         _RXB0D6 000F6C  
                       _RXB1D2 000F58                         _RXB0D7 000F6D                         _RXB1D3 000F59  
                       _RXB1D4 000F5A                         _RXB1D5 000F5B                         _RXB1D6 000F5C  
                       _RXB1D7 000F5D                         _TXB0D0 000F46                         _TXB0D1 000F47  
                       _TXB0D2 000F48                         _TXB0D3 000F49                         _TXB1D0 000F36  
                       _TXB0D4 000F4A                         _TXB1D1 000F37                         _TXB0D5 000F4B  
                       _TXB1D2 000F38                         _TXB0D6 000F4C                         _TXB1D3 000F39  
                       _TXB0D7 000F4D                         _TXB2D0 000F26                         _TXB1D4 000F3A  
                       _TXB2D1 000F27                         _TXB1D5 000F3B                         _TXB2D2 000F28  
                       _TXB1D6 000F3C                         _TXB2D3 000F29                         _TXB1D7 000F3D  
                       _TXB2D4 000F2A                         _TXB2D5 000F2B                         _TXB2D6 000F2C  
                       _TXB2D7 000F2D             CANsendMessage@data 0104             CANsendMessage@tamp 0108  
            __end_of_ISR_Bassa 018E          __size_of_CANSetFilter 0B2A             _distance_set_value 001D  
               __CFG_XINST$OFF 000000                         ___lmul 2B56                      ??___aldiv 00D1  
                       ___wmul 2C6E                      ??___awdiv 00D1                      ??___lbdiv 002B  
               __CFG_STVREN$ON 000000                      ??___lldiv 00CD                      ??___lwdiv 00AD  
                 ??_CANSetMask 0100                         clear_0 2BD6                         clear_1 2BE6  
             ___awdiv@quotient 0102                 i2___awdiv@sign 00B4                __CFG_BOREN$BOHW 000000  
                 __pdataCOMRAM 004A              __end_ofi2___awdiv 2976                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  _home_position 0026  
                 _CANSetFilter 0192               ___lbdiv@dividend 002B                     __accesstop 0060  
      __end_of__initialization 2C1E             __end_of_CANSetMask 1D34                __CFG_PBADEN$OFF 000000  
                ___rparam_used 000000      __size_of_CANisRXwarningON 000E                 __pcstackCOMRAM 002A  
                    ?_ISR_Alta 002A                   __pidataBANK0 2D62         ??_remote_frame_handler 00D3  
             ___lbdiv@quotient 002D                   _ENC1_measure 0240          CANSetFilter@numBuffer 0104  
                    ?i2___wmul 00A9      __size_of_CANisTXwarningON 000E                   _ENC2_measure 0241  
        __size_of_CANisRxReady 0018          __size_of_CANisTxReady 0026       __end_of_CANOperationMode 2D1C  
                   __pbssBANK0 0060        __size_of_CANsendMessage 07A0                     ??_ISR_Alta 00B7  
                      ?___lmul 0100                        ?___wmul 00CD                     _gap_time_1 001F  
                   _gap_time_2 0021               WriteTimer0@timer 00AB                  ??_WriteTimer0 00AB  
               ___lmul@product 00CD                   _CANisRxReady 2D1C                        _CANSTAT 000F6E  
                 _CANisTxReady 2CDE                        _BRGCON1 000F70                        _BRGCON2 000F71  
                      _BRGCON3 000F72                     ??i2___wmul 00AD                  _int_counter_1 006C  
                _int_counter_2 0070         __size_of_CANInitialize 01CE          _distance_reached_flag 0246  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25                     _distance_1 0015                     _distance_2 0017  
          CANsendMessage@flags 0107                     _count_flag 0245                        __Hparam 0000  
                      __Lparam 0000                        ___aldiv 26AA                        ___awdiv 27D6  
                      ___lbdiv 2C28                __size_of___lmul 007A                        ___lldiv 2976  
              __size_of___wmul 0038                        ___lwdiv 2AD4           CANInitialize@propSeg 0112  
                      __pcinit 2BD0                        __ramtop 0300                        __ptext0 1D34  
                      __ptext1 250E                        __ptext2 2C6E                        __ptext3 0CBC  
                      __ptext4 2CDE                        __ptext5 2A3C                        __ptext6 2340  
                      __ptext7 198A                        __ptext8 0192                        __ptext9 2D04  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T3CONbits 000FB1  
             ___aldiv@dividend 0108            __end_of_WriteTimer0 2D46         CANreceiveMessage@error 0034  
 __end_of_board_initialization 2AD4                 __pintcode_body 2040           end_of_initialization 2C1E  
        _wheel_speed_average_1 0011          _wheel_speed_average_2 0078                  _Analogic_Mode 0023  
                __Lmediumconst 0000                        int_func 2040            i2___wmul@multiplier 00A9  
             _CANisRXwarningON 2D54                  _CANInitialize 2340                ___lldiv@divisor 0104  
              ___lldiv@counter 00D1               ___aldiv@quotient 0112                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTAbits 000F80                 CANSetMask@mask 00CD  
                    _PORTCbits 000F82                 CANSetMask@tamp 0105                 CANSetMask@type 00D1  
             _CANisTXwarningON 2D46                      i2___awdiv 28A6        _clock_counter_reference 007C  
               _CANsendMessage 0CBC             _remote_frame_array 00D3               CANInitialize@BRP 010C  
             CANInitialize@SJW 010B                 ?_CANInitialize 0109             i2___awdiv@dividend 00AF  
                   ?_ISR_Bassa 002A                 __end_of___lmul 2BD0              __size_of_ISR_Alta 2338  
               __end_of___wmul 2CA6                  __pidataCOMRAM 2D6A                    _WriteTimer0 2D34  
             i2___wmul@product 00AD            start_initialization 2BD0             i2___awdiv@quotient 00B5  
            __size_ofi2___wmul 0038            CANSetMask@numBuffer 0104                     ?i2___awdiv 00AF  
       __end_of_CANsendMessage 145C              ?_CANOperationMode 002A             ??_CANOperationMode 00CD  
   CANInitialize@FilterConfig1 0113     CANInitialize@FilterConfig2 0114              _distance_set_flag 0247  
                     ??___lmul 00CD           _board_initialization 2A3C                       ??___wmul 00D1  
                  __pdataBANK0 00D3               __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 019C  
           _brake_value_degree 0029         CANInitialize@phaseSeg1 0109         CANInitialize@phaseSeg2 010A  
                  __pbssCOMRAM 0001                  __pcstackBANK0 00A9                  __pcstackBANK1 0100  
                  _data_debug1 0060                    _BRGCON2bits 000F71                    _BRGCON3bits 000F72  
              ?_CANsendMessage 0100                ??_CANInitialize 010E             CANSetFilter@filter 00CD  
             ___lwdiv@dividend 00A9          ?_board_initialization 002A                    ??_ISR_Bassa 0036  
                    __pintcode 0008                       ?___aldiv 0108                       ?___awdiv 00CD  
                     ?___lbdiv 002A                       ?___lldiv 0100                       ?___lwdiv 00A9  
                  __pintcodelo 0018              WriteTimer0@timer0 00A9       __end_of_CANisRXwarningON 2D62  
                  _brake_value 0028                    _COMSTATbits 000F74               ___lwdiv@quotient 00AE  
                  ??i2___awdiv 00B3                ___aldiv@divisor 010C          CANreceiveMessage@tamp 0035  
              ___aldiv@counter 0110                 ___wmul@product 00D1                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2   _delay_quartz_frequency_value 004A                       _PIE1bits 000F9D  
                     _IPR3bits 000FA5                       _PIE2bits 000FA0                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 2D54                       i1u404_20 151C                       i1u404_26 151E  
                     i1u405_20 154A                       i1u413_25 16DA                       i1u405_26 154C  
                     i1u415_20 17B0                       i1u407_25 1560                       i1u415_26 17B2  
                     i1u416_20 17DA                       i1u424_25 195C                       i1u416_26 17DC  
                     i1u418_25 17EE                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _PIR3bits 000FA4                       _RXB0EIDH 000F63                       _RXB0EIDL 000F64  
                     _RXB1EIDH 000F53                       _RXB1EIDL 000F54                       _ISR_Alta 0008  
                     _RCONbits 000FD0               __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61  
                     _RXB0SIDL 000F62                       _RXF0EIDH 000F02                       _RXB1SIDH 000F51  
                     _RXF0EIDL 000F03                       _RXB1SIDL 000F52                       _RXF1EIDH 000F06  
                     _RXF1EIDL 000F07                       _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B  
                     _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F                       _RXF4EIDH 000F12  
                     _RXF4EIDL 000F13                       _RXF5EIDH 000F16                       _RXF5EIDL 000F17  
                     _RXF0SIDH 000F00                       _RXF0SIDL 000F01                       _TXB0EIDH 000F43  
                     _RXF1SIDH 000F04                       _TXB0EIDL 000F44                       _RXF1SIDL 000F05  
                     _TXB1EIDH 000F33                       _RXF2SIDH 000F08                       _TXB1EIDL 000F34  
                     _RXF2SIDL 000F09                       _TXB2EIDH 000F23                       _RXF3SIDH 000F0C  
                     _TXB2EIDL 000F24                       _RXF3SIDL 000F0D                       _RXF4SIDH 000F10  
                     _RXF4SIDL 000F11                       _RXF5SIDH 000F14                       _RXF5SIDL 000F15  
                     _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B                       _TXB0SIDH 000F41  
                     _RXM1EIDH 000F1E                       _TXB0SIDL 000F42                       _RXM1EIDL 000F1F  
                     _TXB1SIDH 000F31                       _TXB1SIDL 000F32                       _TXB2SIDH 000F21  
                     _TXB2SIDL 000F22                      _timer_off 0074                       _RXM0SIDH 000F18  
                     _RXM0SIDL 000F19                       _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D  
                     _RXERRCNT 000F75                       _TXERRCNT 000F76              ___wmul@multiplier 00CD  
                     i2___wmul 2CA6              i2___awdiv@divisor 00B1              i2___awdiv@counter 00B3  
                ?_CANSetFilter 00CD              ___lmul@multiplier 0100                    _INTCON2bits 000FF1  
                  _INTCON3bits 000FF0                      copy_data0 2C00                     _CANCONbits 000F6F  
                     __Hparam0 0000                       __Lparam0 0000                   _RXB0SIDLbits 000F62  
       ??_board_initialization 00D2                   _RXB1SIDLbits 000F52               __size_of___aldiv 012C  
                   _CANSetMask 198A               __size_of___awdiv 00D0               __size_of___lbdiv 0046  
        i2___wmul@multiplicand 00AB               __size_of___lldiv 00C6               __size_of___lwdiv 0082  
              _remote_frame_id 0001                       _Tx_retry 0244                   ?_WriteTimer0 00A9  
                 _RXF0SIDLbits 000F01                ___lwdiv@divisor 00AB                   _RXF1SIDLbits 000F05  
                _TMR1_overflow 0242                ___lwdiv@counter 00AD                 ??_CANSetFilter 0100  
                     __ptext10 2B56                       __ptext11 2976                       __ptext12 27D6  
                     __ptext21 2CA6                       __ptext13 26AA                       __ptext22 28A6  
                     __ptext14 2D46                       __ptext23 2AD4                       __ptext15 2D54  
                     __ptext24 2D34                       __ptext17 2C28                       __ptext18 145C  
                     __ptext19 2D1C                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 0106  
                 _remote_frame 0248                  _TMR3_overflow 0243                  __size_of_main 030C  
         CANreceiveMessage@msg 002A                   _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32  
                     _timer_on 0005                   _TXB2SIDLbits 000F22      __size_of_CANOperationMode 0018  
                ?_CANisRxReady 002A                  ?_CANisTxReady 002A                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 145C                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 00CD                  _wheel_speed_1 0009  
                _wheel_speed_2 000D             ?_CANreceiveMessage 002A       CANsendMessage@identifier 0100  
 __end_of_remote_frame_handler 26AA                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 0105               CANSetFilter@type 00D1            ??_CANreceiveMessage 002C  
             ___lldiv@dividend 0100                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00CD                 ??_CANisRxReady 002A  
                  ?_CANSetMask 00CD                 ??_CANisTxReady 00CD                 _distance_array 0091  
    __end_of_CANreceiveMessage 198A               ___lldiv@quotient 00CD              ?_CANisRXwarningON 002A  
                  _speed_array 0099                   ___aldiv@sign 0111             ??_CANisRXwarningON 00CD  
        _distance_actual_value 0068          __end_of_CANInitialize 250E            _int_counter_1_count 007E  
          _int_counter_2_count 0080              ?_CANisTXwarningON 002A  
