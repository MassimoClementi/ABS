

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 06 15:10:44 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataBANK0
    43  002862                     __pidataBANK0:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _delay_quartz_frequency_value
    47  002862  10                 	db	16
    48                           
    49                           ;initializer for _status_array
    50  002863  00                 	db	0
    51  002864  00                 	db	0
    52  002865  00                 	db	0
    53  002866  00                 	db	0
    54  002867  00                 	db	0
    55  002868  00                 	db	0
    56  002869  00                 	db	0
    57  00286A  01                 	db	1
    58  0000                     _RXB1CON	set	3920
    59  0000                     _RXB1CONbits	set	3920
    60  0000                     _RXB1D0	set	3926
    61  0000                     _RXB1D1	set	3927
    62  0000                     _RXB1D2	set	3928
    63  0000                     _RXB1D3	set	3929
    64  0000                     _RXB1D4	set	3930
    65  0000                     _RXB1D5	set	3931
    66  0000                     _RXB1D6	set	3932
    67  0000                     _RXB1D7	set	3933
    68  0000                     _RXB1DLC	set	3925
    69  0000                     _RXB1DLCbits	set	3925
    70  0000                     _RXB1EIDH	set	3923
    71  0000                     _RXB1EIDL	set	3924
    72  0000                     _RXB1SIDH	set	3921
    73  0000                     _RXB1SIDL	set	3922
    74  0000                     _RXB1SIDLbits	set	3922
    75  0000                     _RXF0EIDH	set	3842
    76  0000                     _RXF0EIDL	set	3843
    77  0000                     _RXF0SIDH	set	3840
    78  0000                     _RXF0SIDL	set	3841
    79  0000                     _RXF0SIDLbits	set	3841
    80  0000                     _RXF1EIDH	set	3846
    81  0000                     _RXF1EIDL	set	3847
    82  0000                     _RXF1SIDH	set	3844
    83  0000                     _RXF1SIDL	set	3845
    84  0000                     _RXF1SIDLbits	set	3845
    85  0000                     _RXF2EIDH	set	3850
    86  0000                     _RXF2EIDL	set	3851
    87  0000                     _RXF2SIDH	set	3848
    88  0000                     _RXF2SIDL	set	3849
    89  0000                     _RXF2SIDLbits	set	3849
    90  0000                     _RXF3EIDH	set	3854
    91  0000                     _RXF3EIDL	set	3855
    92  0000                     _RXF3SIDH	set	3852
    93  0000                     _RXF3SIDL	set	3853
    94  0000                     _RXF3SIDLbits	set	3853
    95  0000                     _RXF4EIDH	set	3858
    96  0000                     _RXF4EIDL	set	3859
    97  0000                     _RXF4SIDH	set	3856
    98  0000                     _RXF4SIDL	set	3857
    99  0000                     _RXF4SIDLbits	set	3857
   100  0000                     _RXF5EIDH	set	3862
   101  0000                     _RXF5EIDL	set	3863
   102  0000                     _RXF5SIDH	set	3860
   103  0000                     _RXF5SIDL	set	3861
   104  0000                     _RXF5SIDLbits	set	3861
   105  0000                     _RXM0EIDH	set	3866
   106  0000                     _RXM0EIDL	set	3867
   107  0000                     _RXM0SIDH	set	3864
   108  0000                     _RXM0SIDL	set	3865
   109  0000                     _RXM0SIDLbits	set	3865
   110  0000                     _RXM1EIDH	set	3870
   111  0000                     _RXM1EIDL	set	3871
   112  0000                     _RXM1SIDH	set	3868
   113  0000                     _RXM1SIDL	set	3869
   114  0000                     _RXM1SIDLbits	set	3869
   115  0000                     _TXB0CONbits	set	3904
   116  0000                     _TXB0D0	set	3910
   117  0000                     _TXB0D1	set	3911
   118  0000                     _TXB0D2	set	3912
   119  0000                     _TXB0D3	set	3913
   120  0000                     _TXB0D4	set	3914
   121  0000                     _TXB0D5	set	3915
   122  0000                     _TXB0D6	set	3916
   123  0000                     _TXB0D7	set	3917
   124  0000                     _TXB0DLC	set	3909
   125  0000                     _TXB0DLCbits	set	3909
   126  0000                     _TXB0EIDH	set	3907
   127  0000                     _TXB0EIDL	set	3908
   128  0000                     _TXB0SIDH	set	3905
   129  0000                     _TXB0SIDL	set	3906
   130  0000                     _TXB0SIDLbits	set	3906
   131  0000                     _TXB1CONbits	set	3888
   132  0000                     _TXB1D0	set	3894
   133  0000                     _TXB1D1	set	3895
   134  0000                     _TXB1D2	set	3896
   135  0000                     _TXB1D3	set	3897
   136  0000                     _TXB1D4	set	3898
   137  0000                     _TXB1D5	set	3899
   138  0000                     _TXB1D6	set	3900
   139  0000                     _TXB1D7	set	3901
   140  0000                     _TXB1DLC	set	3893
   141  0000                     _TXB1DLCbits	set	3893
   142  0000                     _TXB1EIDH	set	3891
   143  0000                     _TXB1EIDL	set	3892
   144  0000                     _TXB1SIDH	set	3889
   145  0000                     _TXB1SIDL	set	3890
   146  0000                     _TXB1SIDLbits	set	3890
   147  0000                     _TXB2CONbits	set	3872
   148  0000                     _TXB2D0	set	3878
   149  0000                     _TXB2D1	set	3879
   150  0000                     _TXB2D2	set	3880
   151  0000                     _TXB2D3	set	3881
   152  0000                     _TXB2D4	set	3882
   153  0000                     _TXB2D5	set	3883
   154  0000                     _TXB2D6	set	3884
   155  0000                     _TXB2D7	set	3885
   156  0000                     _TXB2DLC	set	3877
   157  0000                     _TXB2DLCbits	set	3877
   158  0000                     _TXB2EIDH	set	3875
   159  0000                     _TXB2EIDL	set	3876
   160  0000                     _TXB2SIDH	set	3873
   161  0000                     _TXB2SIDL	set	3874
   162  0000                     _TXB2SIDLbits	set	3874
   163  0000                     _ADCON0bits	set	4034
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON2bits	set	4032
   166  0000                     _ADRESH	set	4036
   167  0000                     _BRGCON1	set	3952
   168  0000                     _BRGCON2	set	3953
   169  0000                     _BRGCON2bits	set	3953
   170  0000                     _BRGCON3	set	3954
   171  0000                     _BRGCON3bits	set	3954
   172  0000                     _CANCON	set	3951
   173  0000                     _CANCONbits	set	3951
   174  0000                     _CANSTAT	set	3950
   175  0000                     _COMSTATbits	set	3956
   176  0000                     _INTCON2bits	set	4081
   177  0000                     _INTCON3bits	set	4080
   178  0000                     _INTCONbits	set	4082
   179  0000                     _IPR1bits	set	3999
   180  0000                     _IPR2bits	set	4002
   181  0000                     _IPR3bits	set	4005
   182  0000                     _LATA	set	3977
   183  0000                     _LATB	set	3978
   184  0000                     _LATC	set	3979
   185  0000                     _LATD	set	3980
   186  0000                     _LATE	set	3981
   187  0000                     _PIE1bits	set	3997
   188  0000                     _PIE2bits	set	4000
   189  0000                     _PIE3bits	set	4003
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PIR2bits	set	4001
   192  0000                     _PIR3bits	set	4004
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTCbits	set	3970
   195  0000                     _RCONbits	set	4048
   196  0000                     _RXB0CON	set	3936
   197  0000                     _RXB0CONbits	set	3936
   198  0000                     _RXB0D0	set	3942
   199  0000                     _RXB0D1	set	3943
   200  0000                     _RXB0D2	set	3944
   201  0000                     _RXB0D3	set	3945
   202  0000                     _RXB0D4	set	3946
   203  0000                     _RXB0D5	set	3947
   204  0000                     _RXB0D6	set	3948
   205  0000                     _RXB0D7	set	3949
   206  0000                     _RXB0DLC	set	3941
   207  0000                     _RXB0DLCbits	set	3941
   208  0000                     _RXB0EIDH	set	3939
   209  0000                     _RXB0EIDL	set	3940
   210  0000                     _RXB0SIDH	set	3937
   211  0000                     _RXB0SIDL	set	3938
   212  0000                     _RXB0SIDLbits	set	3938
   213  0000                     _RXERRCNT	set	3957
   214  0000                     _T0CON	set	4053
   215  0000                     _T0CONbits	set	4053
   216  0000                     _T1CON	set	4045
   217  0000                     _T1CONbits	set	4045
   218  0000                     _T3CON	set	4017
   219  0000                     _T3CONbits	set	4017
   220  0000                     _TMR0H	set	4055
   221  0000                     _TMR0L	set	4054
   222  0000                     _TMR1H	set	4047
   223  0000                     _TMR1L	set	4046
   224  0000                     _TMR3H	set	4019
   225  0000                     _TMR3L	set	4018
   226  0000                     _TRISA	set	3986
   227  0000                     _TRISB	set	3987
   228  0000                     _TRISC	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TXERRCNT	set	3958
   232                           
   233                           ; #config settings
   234  0000                     
   235                           	psect	cinit
   236  0026CA                     __pcinit:
   237                           	opt stack 0
   238  0026CA                     start_initialization:
   239                           	opt stack 0
   240  0026CA                     __initialization:
   241                           	opt stack 0
   242                           
   243                           ; Clear objects allocated to BANK0 (66 bytes)
   244  0026CA  EE00  F060         	lfsr	0,__pbssBANK0
   245  0026CE  0E42               	movlw	66
   246  0026D0                     clear_0:
   247  0026D0  6AEE               	clrf	postinc0,c
   248  0026D2  06E8               	decf	wreg,f,c
   249  0026D4  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   252  0026D6  6A3A               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   253  0026D8  6A39               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   254                           
   255                           ; Clear objects allocated to COMRAM (13 bytes)
   256  0026DA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   257  0026DE  0E0D               	movlw	13
   258  0026E0                     clear_1:
   259  0026E0  6AEE               	clrf	postinc0,c
   260  0026E2  06E8               	decf	wreg,f,c
   261  0026E4  E1FD               	bnz	clear_1
   262                           
   263                           ; Initialize objects allocated to BANK0 (9 bytes)
   264                           ; load TBLPTR registers with __pidataBANK0
   265  0026E6  0E62               	movlw	low __pidataBANK0
   266  0026E8  6EF6               	movwf	tblptrl,c
   267  0026EA  0E28               	movlw	high __pidataBANK0
   268  0026EC  6EF7               	movwf	tblptrh,c
   269  0026EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   270  0026F0  6EF8               	movwf	tblptru,c
   271  0026F2  EE00  F0D2         	lfsr	0,__pdataBANK0
   272  0026F6  EE10 F009          	lfsr	1,9
   273  0026FA                     copy_data0:
   274  0026FA  0009               	tblrd		*+
   275  0026FC  CFF5 FFEE          	movff	tablat,postinc0
   276  002700  50E5               	movf	postdec1,w,c
   277  002702  50E1               	movf	fsr1l,w,c
   278  002704  E1FA               	bnz	copy_data0
   279  002706                     end_of_initialization:
   280                           	opt stack 0
   281  002706                     __end_of__initialization:
   282                           	opt stack 0
   283  002706  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   284  002708  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   285  00270A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   286  00270C  6EF8               	movwf	tblptru,c
   287  00270E  0100               	movlb	0
   288  002710  EF57  F010         	goto	_main	;jump to C main() function
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	bitbssCOMRAM
   299  0001C8                     __pbitbssCOMRAM:
   300                           	opt stack 0
   301  0001C8                     _ENC1_measure:
   302                           	opt stack 0
   303  0001C8                     	ds	1
   304  0001C9                     _ENC2_measure:
   305                           	opt stack 0
   306  0001C9                     	ds	1
   307  0001CA                     _TMR1_overflow:
   308                           	opt stack 0
   309  0001CA                     	ds	1
   310  0001CB                     _TMR3_overflow:
   311                           	opt stack 0
   312  0001CB                     	ds	1
   313  0001CC                     _Tx_retry:
   314                           	opt stack 0
   315  0001CC                     	ds	1
   316  0001CD                     _count_flag:
   317                           	opt stack 0
   318  0001CD                     	ds	1
   319  0001CE                     _remote_frame:
   320                           	opt stack 0
   321  0001CE                     	ds	1
   322  0001CF                     _x:
   323                           	opt stack 0
   324  0001CF                     	ds	1
   325  0001D0                     _y:
   326                           	opt stack 0
   327  0001D0                     	ds	1
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssCOMRAM
   338  00002C                     __pbssCOMRAM:
   339                           	opt stack 0
   340  00002C                     _timer_off:
   341                           	opt stack 0
   342  00002C                     	ds	4
   343  000030                     _timer_on:
   344                           	opt stack 0
   345  000030                     	ds	4
   346  000034                     _gap_time_1:
   347                           	opt stack 0
   348  000034                     	ds	2
   349  000036                     _gap_time_2:
   350                           	opt stack 0
   351  000036                     	ds	2
   352  000038                     _brake_value_degree:
   353                           	opt stack 0
   354  000038                     	ds	1
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           
   364                           	psect	bssBANK0
   365  000060                     __pbssBANK0:
   366                           	opt stack 0
   367  000060                     _int_counter_1:
   368                           	opt stack 0
   369  000060                     	ds	4
   370  000064                     _int_counter_2:
   371                           	opt stack 0
   372  000064                     	ds	4
   373  000068                     _remote_frame_id:
   374                           	opt stack 0
   375  000068                     	ds	4
   376  00006C                     _wheel_speed_1:
   377                           	opt stack 0
   378  00006C                     	ds	4
   379  000070                     _wheel_speed_2:
   380                           	opt stack 0
   381  000070                     	ds	4
   382  000074                     _clock_counter_reference:
   383                           	opt stack 0
   384  000074                     	ds	2
   385  000076                     _correction_factor:
   386                           	opt stack 0
   387  000076                     	ds	2
   388  000078                     _distance_1:
   389                           	opt stack 0
   390  000078                     	ds	2
   391  00007A                     _distance_2:
   392                           	opt stack 0
   393  00007A                     	ds	2
   394  00007C                     _Analogic_Mode:
   395                           	opt stack 0
   396  00007C                     	ds	1
   397  00007D                     _brake_signal_CAN:
   398                           	opt stack 0
   399  00007D                     	ds	1
   400  00007E                     _brake_value_inc:
   401                           	opt stack 0
   402  00007E                     	ds	1
   403  00007F                     _home_position:
   404                           	opt stack 0
   405  00007F                     	ds	1
   406  000080                     _read:
   407                           	opt stack 0
   408  000080                     	ds	1
   409  000081                     _msg:
   410                           	opt stack 0
   411  000081                     	ds	15
   412  000090                     _distance_array:
   413                           	opt stack 0
   414  000090                     	ds	8
   415  000098                     _speed_array:
   416                           	opt stack 0
   417  000098                     	ds	8
   418  0000A0                     _brake_value:
   419                           	opt stack 0
   420  0000A0                     	ds	1
   421  0000A1                     _step:
   422                           	opt stack 0
   423  0000A1                     	ds	1
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	dataBANK0
   434  0000D2                     __pdataBANK0:
   435                           	opt stack 0
   436  0000D2                     _delay_quartz_frequency_value:
   437                           	opt stack 0
   438  0000D2                     	ds	1
   439  0000D3                     _status_array:
   440                           	opt stack 0
   441  0000D3                     	ds	8
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	cstackBANK0
   452  0000A2                     __pcstackBANK0:
   453                           	opt stack 0
   454  0000A2                     ??_ISR_Alta:
   455                           
   456                           ; 0 bytes @ 0x0
   457  0000A2                     	ds	22
   458  0000B8                     ?___wmul:
   459                           	opt stack 0
   460  0000B8                     ?___awdiv:
   461                           	opt stack 0
   462  0000B8                     CANOperationMode@mode:
   463                           	opt stack 0
   464  0000B8                     _CANisTxReady$3282:
   465                           	opt stack 0
   466  0000B8                     ___wmul@multiplier:
   467                           	opt stack 0
   468  0000B8                     ___awdiv@dividend:
   469                           	opt stack 0
   470  0000B8                     CANsendMessage@identifier:
   471                           	opt stack 0
   472  0000B8                     CANSetMask@mask:
   473                           	opt stack 0
   474  0000B8                     CANSetFilter@filter:
   475                           	opt stack 0
   476                           
   477                           ; 4 bytes @ 0x16
   478  0000B8                     	ds	2
   479  0000BA                     ___wmul@multiplicand:
   480                           	opt stack 0
   481  0000BA                     ___awdiv@divisor:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x18
   485  0000BA                     	ds	2
   486  0000BC                     CANSetMask@type:
   487                           	opt stack 0
   488  0000BC                     CANSetFilter@type:
   489                           	opt stack 0
   490  0000BC                     ___awdiv@counter:
   491                           	opt stack 0
   492  0000BC                     CANsendMessage@data:
   493                           	opt stack 0
   494  0000BC                     ___wmul@product:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x1A
   498  0000BC                     	ds	1
   499  0000BD                     ??_CANSetMask:
   500  0000BD                     ??_CANSetFilter:
   501  0000BD                     ___awdiv@sign:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x1B
   505  0000BD                     	ds	1
   506  0000BE                     ?___lwdiv:
   507                           	opt stack 0
   508  0000BE                     CANsendMessage@dataLength:
   509                           	opt stack 0
   510  0000BE                     delay_ms@value_ms:
   511                           	opt stack 0
   512  0000BE                     ___awdiv@quotient:
   513                           	opt stack 0
   514  0000BE                     ___lwdiv@dividend:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x1C
   518  0000BE                     	ds	1
   519  0000BF                     CANsendMessage@flags:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x1D
   523  0000BF                     	ds	1
   524  0000C0                     ??_CANsendMessage:
   525  0000C0                     ___lwdiv@divisor:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x1E
   529  0000C0                     	ds	1
   530  0000C1                     CANSetMask@numBuffer:
   531                           	opt stack 0
   532  0000C1                     CANSetFilter@numBuffer:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x1F
   536  0000C1                     	ds	1
   537  0000C2                     ___lwdiv@quotient:
   538                           	opt stack 0
   539  0000C2                     CANSetMask@tamp:
   540                           	opt stack 0
   541  0000C2                     CANSetFilter@tamp:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x20
   545  0000C2                     	ds	2
   546  0000C4                     ___lwdiv@counter:
   547                           	opt stack 0
   548  0000C4                     CANsendMessage@tamp:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x22
   552  0000C4                     	ds	2
   553  0000C6                     CANInitialize@phaseSeg1:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x24
   557  0000C6                     	ds	1
   558  0000C7                     CANInitialize@phaseSeg2:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x25
   562  0000C7                     	ds	1
   563  0000C8                     ??_remote_frame_handler:
   564  0000C8                     CANInitialize@SJW:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x26
   568  0000C8                     	ds	1
   569  0000C9                     CANInitialize@BRP:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x27
   573  0000C9                     	ds	1
   574  0000CA                     CANInitialize@flags:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x28
   578  0000CA                     	ds	1
   579  0000CB                     ??_CANInitialize:
   580                           
   581                           ; 0 bytes @ 0x29
   582  0000CB                     	ds	4
   583  0000CF                     CANInitialize@propSeg:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x2D
   587  0000CF                     	ds	1
   588  0000D0                     CANInitialize@FilterConfig1:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x2E
   592  0000D0                     	ds	1
   593  0000D1                     CANInitialize@FilterConfig2:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x2F
   597  0000D1                     	ds	1
   598  0000D2                     tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           postdec1	equ	0xFE5
   605                           fsr1l	equ	0xFE1
   606                           
   607                           ; 0 bytes @ 0x30
   608                           
   609                           	psect	cstackCOMRAM
   610  000001                     __pcstackCOMRAM:
   611                           	opt stack 0
   612  000001                     _CANisRxReady$3284:
   613                           	opt stack 0
   614  000001                     CANreceiveMessage@msg:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x0
   618  000001                     	ds	2
   619  000003                     ??_CANreceiveMessage:
   620                           
   621                           ; 0 bytes @ 0x2
   622  000003                     	ds	8
   623  00000B                     CANreceiveMessage@error:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0xA
   627  00000B                     	ds	1
   628  00000C                     CANreceiveMessage@tamp:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0xB
   632  00000C                     	ds	1
   633  00000D                     ??_ISR_Bassa:
   634                           
   635                           ; 0 bytes @ 0xC
   636  00000D                     	ds	17
   637  00001E                     ?i2___wmul:
   638                           	opt stack 0
   639  00001E                     ?i2___lwdiv:
   640                           	opt stack 0
   641  00001E                     WriteTimer0@timer0:
   642                           	opt stack 0
   643  00001E                     i2___wmul@multiplier:
   644                           	opt stack 0
   645  00001E                     i2___lwdiv@dividend:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x1D
   649  00001E                     	ds	2
   650  000020                     WriteTimer0@timer:
   651                           	opt stack 0
   652  000020                     i2___wmul@multiplicand:
   653                           	opt stack 0
   654  000020                     i2___lwdiv@divisor:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x1F
   658  000020                     	ds	2
   659  000022                     i2___wmul@product:
   660                           	opt stack 0
   661  000022                     i2___lwdiv@quotient:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x21
   665  000022                     	ds	2
   666  000024                     ?i2___awdiv:
   667                           	opt stack 0
   668  000024                     i2___lwdiv@counter:
   669                           	opt stack 0
   670  000024                     i2___awdiv@dividend:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x23
   674  000024                     	ds	2
   675  000026                     i2___awdiv@divisor:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x25
   679  000026                     	ds	2
   680  000028                     i2___awdiv@counter:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x27
   684  000028                     	ds	1
   685  000029                     i2___awdiv@sign:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x28
   689  000029                     	ds	1
   690  00002A                     i2___awdiv@quotient:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x29
   694  00002A                     	ds	2
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           postdec1	equ	0xFE5
   702                           fsr1l	equ	0xFE1
   703                           
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 225 in file "ABS_Code.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  2  694[None  ] int 
   716 ;; Registers used:
   717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   723 ;;      Params:         0       0       0       0
   724 ;;      Locals:         0       0       0       0
   725 ;;      Temps:          0       0       0       0
   726 ;;      Totals:         0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels required when called:    7
   729 ;; This function calls:
   730 ;;		_ADC_Read
   731 ;;		_CANisRXwarningON
   732 ;;		_CANisTXwarningON
   733 ;;		___awdiv
   734 ;;		___lwdiv
   735 ;;		___wmul
   736 ;;		_board_initialization
   737 ;;		_delay_ms
   738 ;;		_remote_frame_handler
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text0
   745  0020AE                     __ptext0:
   746                           	opt stack 0
   747  0020AE                     _main:
   748                           	opt stack 24
   749                           
   750                           ;ABS_Code.c: 226: board_initialization();
   751                           
   752                           ;incstack = 0
   753  0020AE  ECFD  F011         	call	_board_initialization	;wreg free
   754                           
   755                           ;ABS_Code.c: 227: step = (11 * (3.1415)) / 16;
   756  0020B2  0E02               	movlw	2
   757  0020B4  0100               	movlb	0	; () banked
   758  0020B6  6FA1               	movwf	_step& (0+255),b
   759                           
   760                           ; BSR set to: 0
   761                           ;ABS_Code.c: 230: PORTAbits.RA1 = 1;
   762  0020B8  8280               	bsf	3968,1,c	;volatile
   763                           
   764                           ; BSR set to: 0
   765                           ;ABS_Code.c: 231: PORTCbits.RC1 = 1;
   766  0020BA  8282               	bsf	3970,1,c	;volatile
   767                           
   768                           ; BSR set to: 0
   769                           ;ABS_Code.c: 232: delay_ms(500);
   770  0020BC  0E01               	movlw	1
   771  0020BE  0100               	movlb	0	; () banked
   772  0020C0  6FBF               	movwf	(delay_ms@value_ms+1)& (0+255),b
   773  0020C2  0EF4               	movlw	244
   774  0020C4  6FBE               	movwf	delay_ms@value_ms& (0+255),b
   775  0020C6  ECA9  F013         	call	_delay_ms	;wreg free
   776                           
   777                           ;ABS_Code.c: 233: PORTAbits.RA1 = 0;
   778  0020CA  9280               	bcf	3968,1,c	;volatile
   779                           
   780                           ;ABS_Code.c: 234: PORTCbits.RC1 = 0;
   781  0020CC  9282               	bcf	3970,1,c	;volatile
   782                           
   783                           ;ABS_Code.c: 235: delay_ms(100);
   784  0020CE  0E00               	movlw	0
   785  0020D0  0100               	movlb	0	; () banked
   786  0020D2  6FBF               	movwf	(delay_ms@value_ms+1)& (0+255),b
   787  0020D4  0E64               	movlw	100
   788  0020D6  6FBE               	movwf	delay_ms@value_ms& (0+255),b
   789  0020D8  ECA9  F013         	call	_delay_ms	;wreg free
   790  0020DC                     l4014:
   791                           
   792                           ;ABS_Code.c: 238: ADC_Read();
   793  0020DC  EC8A  F013         	call	_ADC_Read	;wreg free
   794                           
   795                           ;ABS_Code.c: 239: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   796  0020E0  EC25  F014         	call	_CANisTXwarningON	;wreg free
   797  0020E4  06E8               	decf	wreg,f,c
   798  0020E6  B4D8               	btfsc	status,2,c
   799  0020E8  D005               	goto	l698
   800  0020EA  EC2B  F014         	call	_CANisRXwarningON	;wreg free
   801  0020EE  06E8               	decf	wreg,f,c
   802  0020F0  A4D8               	btfss	status,2,c
   803  0020F2  D004               	goto	l696
   804  0020F4                     l698:
   805                           
   806                           ;ABS_Code.c: 240: PORTAbits.RA1 = 1;
   807  0020F4  8280               	bsf	3968,1,c	;volatile
   808                           
   809                           ;ABS_Code.c: 241: COMSTATbits.TXWARN = 0;
   810  0020F6  9474               	bcf	3956,2,c	;volatile
   811                           
   812                           ;ABS_Code.c: 242: COMSTATbits.RXWARN = 0;
   813  0020F8  9274               	bcf	3956,1,c	;volatile
   814                           
   815                           ;ABS_Code.c: 243: } else {
   816  0020FA  D001               	goto	l699
   817  0020FC                     l696:
   818                           
   819                           ;ABS_Code.c: 244: PORTAbits.RA1 = 0;
   820  0020FC  9280               	bcf	3968,1,c	;volatile
   821  0020FE                     l699:
   822                           
   823                           ;ABS_Code.c: 245: }
   824                           ;ABS_Code.c: 247: if ((remote_frame == 1) || (Tx_retry == 1)) {
   825  0020FE  BC39               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
   826  002100  D002               	goto	l702
   827  002102  A839               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   828  002104  D003               	goto	l4024
   829  002106                     l702:
   830                           
   831                           ;ABS_Code.c: 248: remote_frame = 0;
   832  002106  9C39               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   833                           
   834                           ;ABS_Code.c: 249: remote_frame_handler();
   835  002108  EC34  F011         	call	_remote_frame_handler	;wreg free
   836  00210C                     l4024:
   837                           
   838                           ;ABS_Code.c: 250: }
   839                           ;ABS_Code.c: 252: if (Analogic_Mode == 0) {
   840  00210C  0100               	movlb	0	; () banked
   841  00210E  517C               	movf	_Analogic_Mode& (0+255),w,b
   842  002110  A4D8               	btfss	status,2,c
   843  002112  D01E               	goto	l703
   844                           
   845                           ; BSR set to: 0
   846                           ;ABS_Code.c: 253: if (brake_signal_CAN == 00) {
   847  002114  0100               	movlb	0	; () banked
   848  002116  517D               	movf	_brake_signal_CAN& (0+255),w,b
   849  002118  A4D8               	btfss	status,2,c
   850  00211A  D003               	goto	l4030
   851                           
   852                           ; BSR set to: 0
   853                           ;ABS_Code.c: 254: brake_value_inc = 0;
   854  00211C  0E00               	movlw	0
   855  00211E  0100               	movlb	0	; () banked
   856  002120  6F7E               	movwf	_brake_value_inc& (0+255),b
   857  002122                     l4030:
   858                           
   859                           ; BSR set to: 0
   860                           ;ABS_Code.c: 255: }
   861                           ;ABS_Code.c: 256: if (brake_signal_CAN == 01) {
   862  002122  0100               	movlb	0	; () banked
   863  002124  057D               	decf	_brake_signal_CAN& (0+255),w,b
   864  002126  A4D8               	btfss	status,2,c
   865  002128  D003               	goto	l4034
   866                           
   867                           ; BSR set to: 0
   868                           ;ABS_Code.c: 257: brake_value_inc = 150;
   869  00212A  0E96               	movlw	150
   870  00212C  0100               	movlb	0	; () banked
   871  00212E  6F7E               	movwf	_brake_value_inc& (0+255),b
   872  002130                     l4034:
   873                           
   874                           ; BSR set to: 0
   875                           ;ABS_Code.c: 258: }
   876                           ;ABS_Code.c: 259: if (brake_signal_CAN == 10) {
   877  002130  0E0A               	movlw	10
   878  002132  0100               	movlb	0	; () banked
   879  002134  197D               	xorwf	_brake_signal_CAN& (0+255),w,b
   880  002136  A4D8               	btfss	status,2,c
   881  002138  D003               	goto	l4038
   882                           
   883                           ; BSR set to: 0
   884                           ;ABS_Code.c: 260: brake_value_inc = 200;
   885  00213A  0EC8               	movlw	200
   886  00213C  0100               	movlb	0	; () banked
   887  00213E  6F7E               	movwf	_brake_value_inc& (0+255),b
   888  002140                     l4038:
   889                           
   890                           ; BSR set to: 0
   891                           ;ABS_Code.c: 261: }
   892                           ;ABS_Code.c: 262: if (brake_signal_CAN == 11) {
   893  002140  0E0B               	movlw	11
   894  002142  0100               	movlb	0	; () banked
   895  002144  197D               	xorwf	_brake_signal_CAN& (0+255),w,b
   896  002146  A4D8               	btfss	status,2,c
   897  002148  D005               	goto	l4042
   898                           
   899                           ; BSR set to: 0
   900                           ;ABS_Code.c: 263: brake_value_inc = 255;
   901  00214A  0100               	movlb	0	; () banked
   902  00214C  697E               	setf	_brake_value_inc& (0+255),b
   903                           
   904                           ; BSR set to: 0
   905                           ;ABS_Code.c: 264: }
   906                           ;ABS_Code.c: 265: } else {
   907  00214E  D002               	goto	l4042
   908  002150                     l703:
   909                           
   910                           ; BSR set to: 0
   911                           ;ABS_Code.c: 266: brake_value_inc = brake_signal_CAN;
   912  002150  C07D  F07E         	movff	_brake_signal_CAN,_brake_value_inc
   913  002154                     l4042:
   914                           
   915                           ; BSR set to: 0
   916                           ;ABS_Code.c: 267: }
   917                           ;ABS_Code.c: 269: brake_value = (brake_value_inc / 17) + home_position;
   918  002154  C07E  F0B8         	movff	_brake_value_inc,___awdiv@dividend
   919  002158  0100               	movlb	0	; () banked
   920  00215A  6BB9               	clrf	(___awdiv@dividend+1)& (0+255),b
   921  00215C  0E00               	movlw	0
   922  00215E  0100               	movlb	0	; () banked
   923  002160  6FBB               	movwf	(___awdiv@divisor+1)& (0+255),b
   924  002162  0E11               	movlw	17
   925  002164  6FBA               	movwf	___awdiv@divisor& (0+255),b
   926  002166  EC5F  F012         	call	___awdiv	;wreg free
   927  00216A  0100               	movlb	0	; () banked
   928  00216C  51B8               	movf	?___awdiv& (0+255),w,b
   929  00216E  0100               	movlb	0	; () banked
   930  002170  257F               	addwf	_home_position& (0+255),w,b
   931  002172  0100               	movlb	0	; () banked
   932  002174  6FA0               	movwf	_brake_value& (0+255),b
   933                           
   934                           ; BSR set to: 0
   935                           ;ABS_Code.c: 270: brake_value_degree = (180 * brake_value) / 255;
   936  002176  0100               	movlb	0	; () banked
   937  002178  51A0               	movf	_brake_value& (0+255),w,b
   938  00217A  0DB4               	mullw	180
   939  00217C  CFF3 F0B8          	movff	prodl,___awdiv@dividend
   940  002180  CFF4 F0B9          	movff	prodh,___awdiv@dividend+1
   941  002184  0E00               	movlw	0
   942  002186  0100               	movlb	0	; () banked
   943  002188  6FBB               	movwf	(___awdiv@divisor+1)& (0+255),b
   944  00218A  69BA               	setf	___awdiv@divisor& (0+255),b
   945  00218C  EC5F  F012         	call	___awdiv	;wreg free
   946  002190  0100               	movlb	0	; () banked
   947  002192  51B8               	movf	?___awdiv& (0+255),w,b
   948  002194  6E38               	movwf	_brake_value_degree,c
   949                           
   950                           ; BSR set to: 0
   951                           ;ABS_Code.c: 272: if ((ENC1_measure == 1)||(TMR1_overflow == 1)) {
   952  002196  B039               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   953  002198  D002               	goto	l711
   954                           
   955                           ; BSR set to: 0
   956  00219A  A439               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   957  00219C  D030               	goto	l4062
   958  00219E                     l711:
   959                           
   960                           ; BSR set to: 0
   961                           ;ABS_Code.c: 273: if (TMR1_overflow == 1){
   962  00219E  A439               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   963  0021A0  D00B               	goto	l4054
   964                           
   965                           ; BSR set to: 0
   966                           ;ABS_Code.c: 274: wheel_speed_1 = 0;
   967  0021A2  0E00               	movlw	0
   968  0021A4  0100               	movlb	0	; () banked
   969  0021A6  6F6C               	movwf	_wheel_speed_1& (0+255),b
   970  0021A8  0E00               	movlw	0
   971  0021AA  6F6D               	movwf	(_wheel_speed_1+1)& (0+255),b
   972  0021AC  0E00               	movlw	0
   973  0021AE  6F6E               	movwf	(_wheel_speed_1+2)& (0+255),b
   974  0021B0  0E00               	movlw	0
   975  0021B2  6F6F               	movwf	(_wheel_speed_1+3)& (0+255),b
   976                           
   977                           ; BSR set to: 0
   978                           ;ABS_Code.c: 275: TMR1_overflow = 0;
   979  0021B4  9439               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   980                           
   981                           ;ABS_Code.c: 276: } else {
   982  0021B6  D01E               	goto	l4056
   983  0021B8                     l4054:
   984                           
   985                           ; BSR set to: 0
   986                           ;ABS_Code.c: 277: wheel_speed_1 = (step * 10000) / gap_time_1;
   987  0021B8  C0A1  F0B8         	movff	_step,___wmul@multiplier
   988  0021BC  0100               	movlb	0	; () banked
   989  0021BE  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
   990  0021C0  0E27               	movlw	39
   991  0021C2  0100               	movlb	0	; () banked
   992  0021C4  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
   993  0021C6  0E10               	movlw	16
   994  0021C8  6FBA               	movwf	___wmul@multiplicand& (0+255),b
   995  0021CA  ECC6  F013         	call	___wmul	;wreg free
   996  0021CE  C0B8  F0BE         	movff	?___wmul,___lwdiv@dividend
   997  0021D2  C0B9  F0BF         	movff	?___wmul+1,___lwdiv@dividend+1
   998  0021D6  C034  F0C0         	movff	_gap_time_1,___lwdiv@divisor
   999  0021DA  C035  F0C1         	movff	_gap_time_1+1,___lwdiv@divisor+1
  1000  0021DE  EC00  F013         	call	___lwdiv	;wreg free
  1001  0021E2  0100               	movlb	0	; () banked
  1002  0021E4  C0BE  F06C         	movff	?___lwdiv,_wheel_speed_1
  1003  0021E8  0100               	movlb	0	; () banked
  1004  0021EA  C0BF  F06D         	movff	?___lwdiv+1,_wheel_speed_1+1
  1005  0021EE  0100               	movlb	0	; () banked
  1006  0021F0  6B6E               	clrf	(_wheel_speed_1+2)& (0+255),b
  1007  0021F2  6B6F               	clrf	(_wheel_speed_1+3)& (0+255),b
  1008  0021F4                     l4056:
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;ABS_Code.c: 278: }
  1012                           ;ABS_Code.c: 279: speed_array[3] = wheel_speed_1 >> 8;
  1013  0021F4  C06D  F09B         	movff	_wheel_speed_1+1,_speed_array+3
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;ABS_Code.c: 280: speed_array[2] = wheel_speed_1;
  1017  0021F8  C06C  F09A         	movff	_wheel_speed_1,_speed_array+2
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;ABS_Code.c: 281: ENC1_measure = 0;
  1021  0021FC  9039               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  1022  0021FE                     l4062:
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;ABS_Code.c: 282: }
  1026                           ;ABS_Code.c: 284: if ((ENC2_measure == 1)||(TMR3_overflow == 1)) {
  1027  0021FE  B239               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1028  002200  D002               	goto	l716
  1029                           
  1030                           ; BSR set to: 0
  1031  002202  A639               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1032  002204  D76B               	goto	l4014
  1033  002206                     l716:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;ABS_Code.c: 285: if (TMR3_overflow == 1){
  1037  002206  A639               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1038  002208  D00B               	goto	l4070
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;ABS_Code.c: 286: wheel_speed_2 = 0;
  1042  00220A  0E00               	movlw	0
  1043  00220C  0100               	movlb	0	; () banked
  1044  00220E  6F70               	movwf	_wheel_speed_2& (0+255),b
  1045  002210  0E00               	movlw	0
  1046  002212  6F71               	movwf	(_wheel_speed_2+1)& (0+255),b
  1047  002214  0E00               	movlw	0
  1048  002216  6F72               	movwf	(_wheel_speed_2+2)& (0+255),b
  1049  002218  0E00               	movlw	0
  1050  00221A  6F73               	movwf	(_wheel_speed_2+3)& (0+255),b
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;ABS_Code.c: 287: TMR3_overflow = 0;
  1054  00221C  9639               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1055                           
  1056                           ;ABS_Code.c: 288: } else {
  1057  00221E  D01E               	goto	l4072
  1058  002220                     l4070:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;ABS_Code.c: 289: wheel_speed_2 = (step * 10000) / gap_time_2;
  1062  002220  C0A1  F0B8         	movff	_step,___wmul@multiplier
  1063  002224  0100               	movlb	0	; () banked
  1064  002226  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1065  002228  0E27               	movlw	39
  1066  00222A  0100               	movlb	0	; () banked
  1067  00222C  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1068  00222E  0E10               	movlw	16
  1069  002230  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1070  002232  ECC6  F013         	call	___wmul	;wreg free
  1071  002236  C0B8  F0BE         	movff	?___wmul,___lwdiv@dividend
  1072  00223A  C0B9  F0BF         	movff	?___wmul+1,___lwdiv@dividend+1
  1073  00223E  C036  F0C0         	movff	_gap_time_2,___lwdiv@divisor
  1074  002242  C037  F0C1         	movff	_gap_time_2+1,___lwdiv@divisor+1
  1075  002246  EC00  F013         	call	___lwdiv	;wreg free
  1076  00224A  0100               	movlb	0	; () banked
  1077  00224C  C0BE  F070         	movff	?___lwdiv,_wheel_speed_2
  1078  002250  0100               	movlb	0	; () banked
  1079  002252  C0BF  F071         	movff	?___lwdiv+1,_wheel_speed_2+1
  1080  002256  0100               	movlb	0	; () banked
  1081  002258  6B72               	clrf	(_wheel_speed_2+2)& (0+255),b
  1082  00225A  6B73               	clrf	(_wheel_speed_2+3)& (0+255),b
  1083  00225C                     l4072:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;ABS_Code.c: 290: }
  1087                           ;ABS_Code.c: 291: speed_array[1] = wheel_speed_2 >> 8;
  1088  00225C  C071  F099         	movff	_wheel_speed_2+1,_speed_array+1
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;ABS_Code.c: 292: speed_array[0] = wheel_speed_2;
  1092  002260  C070  F098         	movff	_wheel_speed_2,_speed_array
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;ABS_Code.c: 293: ENC2_measure = 0;
  1096  002264  9239               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1097                           
  1098                           ; BSR set to: 0
  1099                           
  1100                           ; BSR set to: 0
  1101  002266  D73A               	goto	l4014
  1102  002268                     __end_of_main:
  1103                           	opt stack 0
  1104                           tblptru	equ	0xFF8
  1105                           tblptrh	equ	0xFF7
  1106                           tblptrl	equ	0xFF6
  1107                           tablat	equ	0xFF5
  1108                           prodh	equ	0xFF4
  1109                           prodl	equ	0xFF3
  1110                           postinc0	equ	0xFEE
  1111                           wreg	equ	0xFE8
  1112                           postdec1	equ	0xFE5
  1113                           fsr1l	equ	0xFE1
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function _remote_frame_handler *****************
  1117 ;; Defined at:
  1118 ;;		line 303 in file "ABS_Code.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;		None               void
  1125 ;; Registers used:
  1126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1132 ;;      Params:         0       0       0       0
  1133 ;;      Locals:         0       0       0       0
  1134 ;;      Temps:          0       1       0       0
  1135 ;;      Totals:         0       1       0       0
  1136 ;;Total ram usage:        1 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    5
  1139 ;; This function calls:
  1140 ;;		_CANisTxReady
  1141 ;;		_CANsendMessage
  1142 ;;		___wmul
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text1
  1149  002268                     __ptext1:
  1150                           	opt stack 0
  1151  002268                     _remote_frame_handler:
  1152                           	opt stack 25
  1153                           
  1154                           ;ABS_Code.c: 304: if (CANisTxReady()) {
  1155                           
  1156                           ; BSR set to: 0
  1157                           ;incstack = 0
  1158  002268  ECF4  F013         	call	_CANisTxReady	;wreg free
  1159  00226C  0900               	iorlw	0
  1160  00226E  B4D8               	btfsc	status,2,c
  1161  002270  D0C2               	goto	l724
  1162                           
  1163                           ;ABS_Code.c: 305: if (remote_frame_id == 0b00000000000000000000000000010) {
  1164  002272  0E02               	movlw	2
  1165  002274  0100               	movlb	0	; () banked
  1166  002276  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1167  002278  0100               	movlb	0	; () banked
  1168  00227A  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1169  00227C  0100               	movlb	0	; () banked
  1170  00227E  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1171  002280  0100               	movlb	0	; () banked
  1172  002282  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1173  002284  A4D8               	btfss	status,2,c
  1174  002286  D016               	goto	l3778
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;ABS_Code.c: 306: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1178  002288  C068  F0B8         	movff	_remote_frame_id,CANsendMessage@identifier
  1179  00228C  C069  F0B9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1180  002290  C06A  F0BA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1181  002294  C06B  F0BB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1182  002298  0ED3               	movlw	low _status_array
  1183  00229A  0100               	movlb	0	; () banked
  1184  00229C  6FBC               	movwf	CANsendMessage@data& (0+255),b
  1185  00229E  0E00               	movlw	high _status_array
  1186  0022A0  0100               	movlb	0	; () banked
  1187  0022A2  6FBD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1188  0022A4  0E08               	movlw	8
  1189  0022A6  0100               	movlb	0	; () banked
  1190  0022A8  6FBE               	movwf	CANsendMessage@dataLength& (0+255),b
  1191  0022AA  0EBC               	movlw	188
  1192  0022AC  0100               	movlb	0	; () banked
  1193  0022AE  6FBF               	movwf	CANsendMessage@flags& (0+255),b
  1194  0022B0  EC0D  F006         	call	_CANsendMessage	;wreg free
  1195  0022B4                     l3778:
  1196                           
  1197                           ;ABS_Code.c: 307: }
  1198                           ;ABS_Code.c: 308: if (remote_frame_id == 0b00000000000000000000000000110) {
  1199  0022B4  0E06               	movlw	6
  1200  0022B6  0100               	movlb	0	; () banked
  1201  0022B8  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1202  0022BA  0100               	movlb	0	; () banked
  1203  0022BC  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1204  0022BE  0100               	movlb	0	; () banked
  1205  0022C0  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1206  0022C2  0100               	movlb	0	; () banked
  1207  0022C4  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1208  0022C6  A4D8               	btfss	status,2,c
  1209  0022C8  D024               	goto	l3784
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;ABS_Code.c: 309: PORTCbits.RC0 = ~PORTCbits.RC0;
  1213  0022CA  A082               	btfss	3970,0,c	;volatile
  1214  0022CC  D002               	goto	u4140
  1215  0022CE  0E01               	movlw	1
  1216  0022D0  D001               	goto	u4146
  1217  0022D2                     u4140:
  1218  0022D2  0E00               	movlw	0
  1219  0022D4                     u4146:
  1220  0022D4  0AFF               	xorlw	255
  1221  0022D6  0100               	movlb	0	; () banked
  1222  0022D8  6FC8               	movwf	??_remote_frame_handler& (0+255),b
  1223  0022DA  5082               	movf	3970,w,c	;volatile
  1224  0022DC  0100               	movlb	0	; () banked
  1225  0022DE  19C8               	xorwf	??_remote_frame_handler& (0+255),w,b
  1226  0022E0  0BFE               	andlw	-2
  1227  0022E2  19C8               	xorwf	??_remote_frame_handler& (0+255),w,b
  1228  0022E4  6E82               	movwf	3970,c	;volatile
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;ABS_Code.c: 310: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1232  0022E6  C068  F0B8         	movff	_remote_frame_id,CANsendMessage@identifier
  1233  0022EA  C069  F0B9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1234  0022EE  C06A  F0BA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1235  0022F2  C06B  F0BB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1236  0022F6  0E98               	movlw	low _speed_array
  1237  0022F8  0100               	movlb	0	; () banked
  1238  0022FA  6FBC               	movwf	CANsendMessage@data& (0+255),b
  1239  0022FC  0E00               	movlw	high _speed_array
  1240  0022FE  0100               	movlb	0	; () banked
  1241  002300  6FBD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1242  002302  0E08               	movlw	8
  1243  002304  0100               	movlb	0	; () banked
  1244  002306  6FBE               	movwf	CANsendMessage@dataLength& (0+255),b
  1245  002308  0EBC               	movlw	188
  1246  00230A  0100               	movlb	0	; () banked
  1247  00230C  6FBF               	movwf	CANsendMessage@flags& (0+255),b
  1248  00230E  EC0D  F006         	call	_CANsendMessage	;wreg free
  1249  002312                     l3784:
  1250                           
  1251                           ;ABS_Code.c: 311: }
  1252                           ;ABS_Code.c: 312: if (remote_frame_id == 0b00000000000000000000000001000) {
  1253  002312  0E08               	movlw	8
  1254  002314  0100               	movlb	0	; () banked
  1255  002316  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1256  002318  0100               	movlb	0	; () banked
  1257  00231A  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1258  00231C  0100               	movlb	0	; () banked
  1259  00231E  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1260  002320  0100               	movlb	0	; () banked
  1261  002322  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1262  002324  A4D8               	btfss	status,2,c
  1263  002326  D013               	goto	l3790
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;ABS_Code.c: 313: int_counter_1 = 0;
  1267  002328  0E00               	movlw	0
  1268  00232A  0100               	movlb	0	; () banked
  1269  00232C  6F60               	movwf	_int_counter_1& (0+255),b
  1270  00232E  0E00               	movlw	0
  1271  002330  6F61               	movwf	(_int_counter_1+1)& (0+255),b
  1272  002332  0E00               	movlw	0
  1273  002334  6F62               	movwf	(_int_counter_1+2)& (0+255),b
  1274  002336  0E00               	movlw	0
  1275  002338  6F63               	movwf	(_int_counter_1+3)& (0+255),b
  1276                           
  1277                           ;ABS_Code.c: 314: int_counter_2 = 0;
  1278  00233A  0E00               	movlw	0
  1279  00233C  0100               	movlb	0	; () banked
  1280  00233E  6F64               	movwf	_int_counter_2& (0+255),b
  1281  002340  0E00               	movlw	0
  1282  002342  6F65               	movwf	(_int_counter_2+1)& (0+255),b
  1283  002344  0E00               	movlw	0
  1284  002346  6F66               	movwf	(_int_counter_2+2)& (0+255),b
  1285  002348  0E00               	movlw	0
  1286  00234A  6F67               	movwf	(_int_counter_2+3)& (0+255),b
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;ABS_Code.c: 315: count_flag = 1;
  1290  00234C  8A39               	bsf	_count_flag/(0+8),_count_flag& (0+7),c
  1291  00234E                     l3790:
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;ABS_Code.c: 316: }
  1295                           ;ABS_Code.c: 317: if (remote_frame_id == 0b00000000000000000000000000111) {
  1296  00234E  0E07               	movlw	7
  1297  002350  0100               	movlb	0	; () banked
  1298  002352  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1299  002354  0100               	movlb	0	; () banked
  1300  002356  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1301  002358  0100               	movlb	0	; () banked
  1302  00235A  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1303  00235C  0100               	movlb	0	; () banked
  1304  00235E  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1305  002360  A4D8               	btfss	status,2,c
  1306  002362  D03F               	goto	l3806
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;ABS_Code.c: 318: distance_1 = step * (int_counter_1);
  1310  002364  C0A1  F0B8         	movff	_step,___wmul@multiplier
  1311  002368  0100               	movlb	0	; () banked
  1312  00236A  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1313  00236C  C060  F0BA         	movff	_int_counter_1,___wmul@multiplicand
  1314  002370  C061  F0BB         	movff	_int_counter_1+1,___wmul@multiplicand+1
  1315  002374  ECC6  F013         	call	___wmul	;wreg free
  1316  002378  C0B8  F078         	movff	?___wmul,_distance_1
  1317  00237C  C0B9  F079         	movff	?___wmul+1,_distance_1+1
  1318                           
  1319                           ;ABS_Code.c: 319: distance_2 = step * (int_counter_2);
  1320  002380  C0A1  F0B8         	movff	_step,___wmul@multiplier
  1321  002384  0100               	movlb	0	; () banked
  1322  002386  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1323  002388  C064  F0BA         	movff	_int_counter_2,___wmul@multiplicand
  1324  00238C  C065  F0BB         	movff	_int_counter_2+1,___wmul@multiplicand+1
  1325  002390  ECC6  F013         	call	___wmul	;wreg free
  1326  002394  C0B8  F07A         	movff	?___wmul,_distance_2
  1327  002398  C0B9  F07B         	movff	?___wmul+1,_distance_2+1
  1328                           
  1329                           ;ABS_Code.c: 320: count_flag = 0;
  1330  00239C  9A39               	bcf	_count_flag/(0+8),_count_flag& (0+7),c
  1331                           
  1332                           ;ABS_Code.c: 321: distance_array[0] = distance_1;
  1333  00239E  C078  F090         	movff	_distance_1,_distance_array
  1334                           
  1335                           ;ABS_Code.c: 322: distance_array[1] = distance_1 >> 8;
  1336  0023A2  0100               	movlb	0	; () banked
  1337  0023A4  5179               	movf	(_distance_1+1)& (0+255),w,b
  1338  0023A6  0100               	movlb	0	; () banked
  1339  0023A8  6F91               	movwf	(_distance_array+1)& (0+255),b
  1340                           
  1341                           ; BSR set to: 0
  1342                           ;ABS_Code.c: 323: distance_array[2] = distance_2;
  1343  0023AA  C07A  F092         	movff	_distance_2,_distance_array+2
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;ABS_Code.c: 324: distance_array[3] = distance_2 >> 8;
  1347  0023AE  0100               	movlb	0	; () banked
  1348  0023B0  517B               	movf	(_distance_2+1)& (0+255),w,b
  1349  0023B2  0100               	movlb	0	; () banked
  1350  0023B4  6F93               	movwf	(_distance_array+3)& (0+255),b
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;ABS_Code.c: 325: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1354  0023B6  C068  F0B8         	movff	_remote_frame_id,CANsendMessage@identifier
  1355  0023BA  C069  F0B9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1356  0023BE  C06A  F0BA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1357  0023C2  C06B  F0BB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1358  0023C6  0E90               	movlw	low _distance_array
  1359  0023C8  0100               	movlb	0	; () banked
  1360  0023CA  6FBC               	movwf	CANsendMessage@data& (0+255),b
  1361  0023CC  0E00               	movlw	high _distance_array
  1362  0023CE  0100               	movlb	0	; () banked
  1363  0023D0  6FBD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1364  0023D2  0E08               	movlw	8
  1365  0023D4  0100               	movlb	0	; () banked
  1366  0023D6  6FBE               	movwf	CANsendMessage@dataLength& (0+255),b
  1367  0023D8  0EBC               	movlw	188
  1368  0023DA  0100               	movlb	0	; () banked
  1369  0023DC  6FBF               	movwf	CANsendMessage@flags& (0+255),b
  1370  0023DE  EC0D  F006         	call	_CANsendMessage	;wreg free
  1371  0023E2                     l3806:
  1372                           
  1373                           ;ABS_Code.c: 326: }
  1374                           ;ABS_Code.c: 327: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1375  0023E2  010F               	movlb	15	; () banked
  1376  0023E4  BD40               	btfsc	64,6,b	;volatile
  1377  0023E6  D003               	goto	l731
  1378                           
  1379                           ; BSR set to: 15
  1380  0023E8  010F               	movlb	15	; () banked
  1381  0023EA  AD30               	btfss	48,6,b	;volatile
  1382  0023EC  D002               	goto	l729
  1383  0023EE                     l731:
  1384                           
  1385                           ; BSR set to: 15
  1386                           ;ABS_Code.c: 328: Tx_retry = 1;
  1387  0023EE  8839               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1388                           
  1389                           ;ABS_Code.c: 329: } else {
  1390  0023F0  0012               	return	
  1391  0023F2                     l729:
  1392                           
  1393                           ; BSR set to: 15
  1394                           ;ABS_Code.c: 330: Tx_retry = 0;
  1395  0023F2  9839               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1396                           
  1397                           ; BSR set to: 15
  1398                           ;ABS_Code.c: 331: }
  1399                           ;ABS_Code.c: 332: } else {
  1400  0023F4  0012               	return	
  1401  0023F6                     l724:
  1402                           
  1403                           ;ABS_Code.c: 333: Tx_retry = 1;
  1404  0023F6  8839               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1405  0023F8  0012               	return	
  1406  0023FA                     __end_of_remote_frame_handler:
  1407                           	opt stack 0
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           prodh	equ	0xFF4
  1413                           prodl	equ	0xFF3
  1414                           postinc0	equ	0xFEE
  1415                           wreg	equ	0xFE8
  1416                           postdec1	equ	0xFE5
  1417                           fsr1l	equ	0xFE1
  1418                           status	equ	0xFD8
  1419                           
  1420 ;; *************** function _CANsendMessage *****************
  1421 ;; Defined at:
  1422 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  identifier      4   22[BANK0 ] unsigned long 
  1425 ;;  data            2   26[BANK0 ] PTR unsigned char 
  1426 ;;		 -> distance_array(8), status_array(8), speed_array(8), 
  1427 ;;  dataLength      1   28[BANK0 ] unsigned char 
  1428 ;;  flags           1   29[BANK0 ] enum E16866
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  tamp            4   34[BANK0 ] unsigned long 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1440 ;;      Params:         0       8       0       0
  1441 ;;      Locals:         0       4       0       0
  1442 ;;      Temps:          0       4       0       0
  1443 ;;      Totals:         0      16       0       0
  1444 ;;Total ram usage:       16 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    4
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_remote_frame_handler
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text2
  1455  000C1A                     __ptext2:
  1456                           	opt stack 0
  1457  000C1A                     _CANsendMessage:
  1458                           	opt stack 25
  1459                           
  1460                           ;inc\CANlib.h: 296: unsigned long tamp;
  1461                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1462                           
  1463                           ;incstack = 0
  1464  000C1A  010F               	movlb	15	; () banked
  1465  000C1C  B740               	btfsc	64,3,b	;volatile
  1466  000C1E  D13F               	goto	l383
  1467                           
  1468                           ; BSR set to: 15
  1469                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1470  000C20  C0BE  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1471                           
  1472                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1473  000C24  0100               	movlb	0	; () banked
  1474  000C26  ADBF               	btfss	CANsendMessage@flags& (0+255),6,b
  1475  000C28  D003               	goto	l384
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1479  000C2A  010F               	movlb	15	; () banked
  1480  000C2C  8D45               	bsf	69,6,b	;volatile
  1481  000C2E  D002               	goto	l385
  1482  000C30                     l384:
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;inc\CANlib.h: 302: else
  1486                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1487  000C30  010F               	movlb	15	; () banked
  1488  000C32  9D45               	bcf	69,6,b	;volatile
  1489  000C34                     l385:
  1490                           
  1491                           ; BSR set to: 15
  1492                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1493  000C34  0100               	movlb	0	; () banked
  1494  000C36  A7BF               	btfss	CANsendMessage@flags& (0+255),3,b
  1495  000C38  D079               	goto	l386
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;inc\CANlib.h: 306: {
  1499                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1500  000C3A  0100               	movlb	0	; () banked
  1501  000C3C  51B8               	movf	CANsendMessage@identifier& (0+255),w,b
  1502  000C3E  0100               	movlb	0	; () banked
  1503  000C40  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1504  000C42  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1505  000C44  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1506  000C46  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1510  000C48  C0C4  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1514  000C4C  0E00               	movlw	0
  1515  000C4E  0100               	movlb	0	; () banked
  1516  000C50  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1517  000C52  0100               	movlb	0	; () banked
  1518  000C54  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1519  000C56  0EFF               	movlw	255
  1520  000C58  0100               	movlb	0	; () banked
  1521  000C5A  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1522  000C5C  0100               	movlb	0	; () banked
  1523  000C5E  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1524  000C60  0E00               	movlw	0
  1525  000C62  0100               	movlb	0	; () banked
  1526  000C64  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1527  000C66  0100               	movlb	0	; () banked
  1528  000C68  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1529  000C6A  0E00               	movlw	0
  1530  000C6C  0100               	movlb	0	; () banked
  1531  000C6E  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1532  000C70  0100               	movlb	0	; () banked
  1533  000C72  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1537  000C74  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1538  000C78  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1539  000C7C  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1540  000C80  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1541  000C84  C0C1  F0C0         	movff	??_CANsendMessage+1,??_CANsendMessage
  1542  000C88  C0C2  F0C1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1543  000C8C  C0C3  F0C2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1544  000C90  0100               	movlb	0	; () banked
  1545  000C92  6BC3               	clrf	(??_CANsendMessage+3)& (0+255),b
  1546  000C94  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1547  000C98  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1548  000C9C  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1549  000CA0  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1553  000CA4  C0C4  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1557  000CA8  0E00               	movlw	0
  1558  000CAA  010F               	movlb	15	; () banked
  1559  000CAC  6F42               	movwf	66,b	;volatile
  1560                           
  1561                           ; BSR set to: 15
  1562                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1563  000CAE  010F               	movlb	15	; () banked
  1564  000CB0  8742               	bsf	66,3,b	;volatile
  1565                           
  1566                           ; BSR set to: 15
  1567                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1568  000CB2  0100               	movlb	0	; () banked
  1569  000CB4  A1BA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1570  000CB6  D002               	goto	l387
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1574  000CB8  010F               	movlb	15	; () banked
  1575  000CBA  8142               	bsf	66,0,b	;volatile
  1576  000CBC                     l387:
  1577                           
  1578                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1579  000CBC  0100               	movlb	0	; () banked
  1580  000CBE  A3BA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1581  000CC0  D002               	goto	l388
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1585  000CC2  010F               	movlb	15	; () banked
  1586  000CC4  8342               	bsf	66,1,b	;volatile
  1587  000CC6                     l388:
  1588                           
  1589                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1590  000CC6  0100               	movlb	0	; () banked
  1591  000CC8  A5BA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1592  000CCA  D002               	goto	l389
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1596  000CCC  010F               	movlb	15	; () banked
  1597  000CCE  8B42               	bsf	66,5,b	;volatile
  1598  000CD0                     l389:
  1599                           
  1600                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1601  000CD0  0100               	movlb	0	; () banked
  1602  000CD2  A7BA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1603  000CD4  D002               	goto	l390
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1607  000CD6  010F               	movlb	15	; () banked
  1608  000CD8  8D42               	bsf	66,6,b	;volatile
  1609  000CDA                     l390:
  1610                           
  1611                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1612  000CDA  0100               	movlb	0	; () banked
  1613  000CDC  A9BA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1614  000CDE  D002               	goto	l3244
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1618  000CE0  010F               	movlb	15	; () banked
  1619  000CE2  8F42               	bsf	66,7,b	;volatile
  1620  000CE4                     l3244:
  1621                           
  1622                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1623  000CE4  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1624  000CE8  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1625  000CEC  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1626  000CF0  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1627  000CF4  0E16               	movlw	22
  1628  000CF6  D006               	goto	u3410
  1629  000CF8                     u3415:
  1630  000CF8  0100               	movlb	0	; () banked
  1631  000CFA  90D8               	bcf	status,0,c
  1632  000CFC  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1633  000CFE  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1634  000D00  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1635  000D02  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  1636  000D04                     u3410:
  1637  000D04  2EE8               	decfsz	wreg,f,c
  1638  000D06  D7F8               	goto	u3415
  1639  000D08  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1640  000D0C  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1641  000D10  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1642  000D14  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1646  000D18  0100               	movlb	0	; () banked
  1647  000D1A  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  1648  000D1C  0100               	movlb	0	; () banked
  1649  000D1E  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1650  000D20  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1651  000D22  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1652  000D24  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1656  000D26  C0C4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1657                           
  1658                           ;inc\CANlib.h: 332: }
  1659  000D2A  D059               	goto	l3264
  1660  000D2C                     l386:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;inc\CANlib.h: 334: else
  1664                           ;inc\CANlib.h: 336: {
  1665                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1666  000D2C  010F               	movlb	15	; () banked
  1667  000D2E  9742               	bcf	66,3,b	;volatile
  1668                           
  1669                           ; BSR set to: 15
  1670                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1671  000D30  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1672  000D34  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1673  000D38  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1674  000D3C  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1675  000D40  0E04               	movlw	4
  1676  000D42  D006               	goto	u3420
  1677  000D44                     u3425:
  1678  000D44  0100               	movlb	0	; () banked
  1679  000D46  90D8               	bcf	status,0,c
  1680  000D48  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1681  000D4A  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1682  000D4C  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1683  000D4E  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  1684  000D50                     u3420:
  1685  000D50  2EE8               	decfsz	wreg,f,c
  1686  000D52  D7F8               	goto	u3425
  1687  000D54  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1688  000D58  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1689  000D5C  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1690  000D60  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1694  000D64  0100               	movlb	0	; () banked
  1695  000D66  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  1696  000D68  0100               	movlb	0	; () banked
  1697  000D6A  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1698  000D6C  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1699  000D6E  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1700  000D70  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1704  000D72  C0C4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1708  000D76  0E07               	movlw	7
  1709  000D78  0100               	movlb	0	; () banked
  1710  000D7A  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1711  000D7C  0100               	movlb	0	; () banked
  1712  000D7E  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1713  000D80  0E00               	movlw	0
  1714  000D82  0100               	movlb	0	; () banked
  1715  000D84  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1716  000D86  0100               	movlb	0	; () banked
  1717  000D88  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1718  000D8A  0E00               	movlw	0
  1719  000D8C  0100               	movlb	0	; () banked
  1720  000D8E  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1721  000D90  0100               	movlb	0	; () banked
  1722  000D92  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1723  000D94  0E00               	movlw	0
  1724  000D96  0100               	movlb	0	; () banked
  1725  000D98  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1726  000D9A  0100               	movlb	0	; () banked
  1727  000D9C  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1731  000D9E  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1732  000DA2  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1733  000DA6  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1734  000DAA  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1735  000DAE  0E05               	movlw	5
  1736  000DB0                     u3435:
  1737  000DB0  90D8               	bcf	status,0,c
  1738  000DB2  0100               	movlb	0	; () banked
  1739  000DB4  37C0               	rlcf	??_CANsendMessage& (0+255),f,b
  1740  000DB6  37C1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1741  000DB8  37C2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1742  000DBA  37C3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1743  000DBC  2EE8               	decfsz	wreg,f,c
  1744  000DBE  D7F8               	goto	u3435
  1745  000DC0  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1746  000DC4  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1747  000DC8  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1748  000DCC  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1752  000DD0  010F               	movlb	15	; () banked
  1753  000DD2  5142               	movf	66,w,b	;volatile
  1754  000DD4  0B1F               	andlw	31
  1755  000DD6  010F               	movlb	15	; () banked
  1756  000DD8  6F42               	movwf	66,b	;volatile
  1757                           
  1758                           ; BSR set to: 15
  1759                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1760  000DDA  C0C4  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1761  000DDE                     l3264:
  1762                           
  1763                           ;inc\CANlib.h: 347: }
  1764                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1765  000DDE  0100               	movlb	0	; () banked
  1766  000DE0  A1BF               	btfss	CANsendMessage@flags& (0+255),0,b
  1767  000DE2  D003               	goto	l393
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1771  000DE4  010F               	movlb	15	; () banked
  1772  000DE6  8140               	bsf	64,0,b	;volatile
  1773  000DE8  D002               	goto	l394
  1774  000DEA                     l393:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;inc\CANlib.h: 351: else
  1778                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1779  000DEA  010F               	movlb	15	; () banked
  1780  000DEC  9140               	bcf	64,0,b	;volatile
  1781  000DEE                     l394:
  1782                           
  1783                           ; BSR set to: 15
  1784                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1785  000DEE  0100               	movlb	0	; () banked
  1786  000DF0  A3BF               	btfss	CANsendMessage@flags& (0+255),1,b
  1787  000DF2  D003               	goto	l395
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1791  000DF4  010F               	movlb	15	; () banked
  1792  000DF6  8340               	bsf	64,1,b	;volatile
  1793  000DF8  D002               	goto	l3270
  1794  000DFA                     l395:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;inc\CANlib.h: 355: else
  1798                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1799  000DFA  010F               	movlb	15	; () banked
  1800  000DFC  9340               	bcf	64,1,b	;volatile
  1801  000DFE                     l3270:
  1802                           
  1803                           ; BSR set to: 15
  1804                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1805  000DFE  C0BC  FFD9         	movff	CANsendMessage@data,fsr2l
  1806  000E02  C0BD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1807  000E06  50DF               	movf	indf2,w,c
  1808  000E08  010F               	movlb	15	; () banked
  1809  000E0A  6F46               	movwf	70,b	;volatile
  1810                           
  1811                           ; BSR set to: 15
  1812                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1813  000E0C  0100               	movlb	0	; () banked
  1814  000E0E  EE20 F001          	lfsr	2,1
  1815  000E12  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1816  000E14  26D9               	addwf	fsr2l,f,c
  1817  000E16  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1818  000E18  22DA               	addwfc	fsr2h,f,c
  1819  000E1A  50DF               	movf	indf2,w,c
  1820  000E1C  010F               	movlb	15	; () banked
  1821  000E1E  6F47               	movwf	71,b	;volatile
  1822                           
  1823                           ; BSR set to: 15
  1824                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1825  000E20  0100               	movlb	0	; () banked
  1826  000E22  EE20 F002          	lfsr	2,2
  1827  000E26  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1828  000E28  26D9               	addwf	fsr2l,f,c
  1829  000E2A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1830  000E2C  22DA               	addwfc	fsr2h,f,c
  1831  000E2E  50DF               	movf	indf2,w,c
  1832  000E30  010F               	movlb	15	; () banked
  1833  000E32  6F48               	movwf	72,b	;volatile
  1834                           
  1835                           ; BSR set to: 15
  1836                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1837  000E34  0100               	movlb	0	; () banked
  1838  000E36  EE20 F003          	lfsr	2,3
  1839  000E3A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1840  000E3C  26D9               	addwf	fsr2l,f,c
  1841  000E3E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1842  000E40  22DA               	addwfc	fsr2h,f,c
  1843  000E42  50DF               	movf	indf2,w,c
  1844  000E44  010F               	movlb	15	; () banked
  1845  000E46  6F49               	movwf	73,b	;volatile
  1846                           
  1847                           ; BSR set to: 15
  1848                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1849  000E48  0100               	movlb	0	; () banked
  1850  000E4A  EE20 F004          	lfsr	2,4
  1851  000E4E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1852  000E50  26D9               	addwf	fsr2l,f,c
  1853  000E52  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1854  000E54  22DA               	addwfc	fsr2h,f,c
  1855  000E56  50DF               	movf	indf2,w,c
  1856  000E58  010F               	movlb	15	; () banked
  1857  000E5A  6F4A               	movwf	74,b	;volatile
  1858                           
  1859                           ; BSR set to: 15
  1860                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1861  000E5C  0100               	movlb	0	; () banked
  1862  000E5E  EE20 F005          	lfsr	2,5
  1863  000E62  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1864  000E64  26D9               	addwf	fsr2l,f,c
  1865  000E66  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1866  000E68  22DA               	addwfc	fsr2h,f,c
  1867  000E6A  50DF               	movf	indf2,w,c
  1868  000E6C  010F               	movlb	15	; () banked
  1869  000E6E  6F4B               	movwf	75,b	;volatile
  1870                           
  1871                           ; BSR set to: 15
  1872                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1873  000E70  0100               	movlb	0	; () banked
  1874  000E72  EE20 F006          	lfsr	2,6
  1875  000E76  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1876  000E78  26D9               	addwf	fsr2l,f,c
  1877  000E7A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1878  000E7C  22DA               	addwfc	fsr2h,f,c
  1879  000E7E  50DF               	movf	indf2,w,c
  1880  000E80  010F               	movlb	15	; () banked
  1881  000E82  6F4C               	movwf	76,b	;volatile
  1882                           
  1883                           ; BSR set to: 15
  1884                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1885  000E84  0100               	movlb	0	; () banked
  1886  000E86  EE20 F007          	lfsr	2,7
  1887  000E8A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1888  000E8C  26D9               	addwf	fsr2l,f,c
  1889  000E8E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1890  000E90  22DA               	addwfc	fsr2h,f,c
  1891  000E92  50DF               	movf	indf2,w,c
  1892  000E94  010F               	movlb	15	; () banked
  1893  000E96  6F4D               	movwf	77,b	;volatile
  1894                           
  1895                           ; BSR set to: 15
  1896                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1897  000E98  010F               	movlb	15	; () banked
  1898  000E9A  8740               	bsf	64,3,b	;volatile
  1899                           
  1900                           ; BSR set to: 15
  1901                           ;inc\CANlib.h: 368: return;
  1902  000E9C  0012               	return	
  1903  000E9E                     l383:
  1904                           
  1905                           ; BSR set to: 15
  1906                           ;inc\CANlib.h: 369: }
  1907                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1908  000E9E  010F               	movlb	15	; () banked
  1909  000EA0  B730               	btfsc	48,3,b	;volatile
  1910  000EA2  D13F               	goto	l398
  1911                           
  1912                           ; BSR set to: 15
  1913                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1914  000EA4  C0BE  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1915                           
  1916                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1917  000EA8  0100               	movlb	0	; () banked
  1918  000EAA  ADBF               	btfss	CANsendMessage@flags& (0+255),6,b
  1919  000EAC  D003               	goto	l399
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1923  000EAE  010F               	movlb	15	; () banked
  1924  000EB0  8D35               	bsf	53,6,b	;volatile
  1925  000EB2  D002               	goto	l400
  1926  000EB4                     l399:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;inc\CANlib.h: 378: else
  1930                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1931  000EB4  010F               	movlb	15	; () banked
  1932  000EB6  9D35               	bcf	53,6,b	;volatile
  1933  000EB8                     l400:
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1937  000EB8  0100               	movlb	0	; () banked
  1938  000EBA  A7BF               	btfss	CANsendMessage@flags& (0+255),3,b
  1939  000EBC  D079               	goto	l401
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;inc\CANlib.h: 382: {
  1943                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1944  000EBE  0100               	movlb	0	; () banked
  1945  000EC0  51B8               	movf	CANsendMessage@identifier& (0+255),w,b
  1946  000EC2  0100               	movlb	0	; () banked
  1947  000EC4  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1948  000EC6  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1949  000EC8  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1950  000ECA  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1954  000ECC  C0C4  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1958  000ED0  0E00               	movlw	0
  1959  000ED2  0100               	movlb	0	; () banked
  1960  000ED4  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1961  000ED6  0100               	movlb	0	; () banked
  1962  000ED8  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1963  000EDA  0EFF               	movlw	255
  1964  000EDC  0100               	movlb	0	; () banked
  1965  000EDE  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1966  000EE0  0100               	movlb	0	; () banked
  1967  000EE2  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1968  000EE4  0E00               	movlw	0
  1969  000EE6  0100               	movlb	0	; () banked
  1970  000EE8  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1971  000EEA  0100               	movlb	0	; () banked
  1972  000EEC  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1973  000EEE  0E00               	movlw	0
  1974  000EF0  0100               	movlb	0	; () banked
  1975  000EF2  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1976  000EF4  0100               	movlb	0	; () banked
  1977  000EF6  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1981  000EF8  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1982  000EFC  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1983  000F00  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1984  000F04  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1985  000F08  C0C1  F0C0         	movff	??_CANsendMessage+1,??_CANsendMessage
  1986  000F0C  C0C2  F0C1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1987  000F10  C0C3  F0C2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1988  000F14  0100               	movlb	0	; () banked
  1989  000F16  6BC3               	clrf	(??_CANsendMessage+3)& (0+255),b
  1990  000F18  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1991  000F1C  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1992  000F20  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1993  000F24  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1997  000F28  C0C4  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2001  000F2C  0E00               	movlw	0
  2002  000F2E  010F               	movlb	15	; () banked
  2003  000F30  6F32               	movwf	50,b	;volatile
  2004                           
  2005                           ; BSR set to: 15
  2006                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2007  000F32  010F               	movlb	15	; () banked
  2008  000F34  8732               	bsf	50,3,b	;volatile
  2009                           
  2010                           ; BSR set to: 15
  2011                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2012  000F36  0100               	movlb	0	; () banked
  2013  000F38  A1BA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2014  000F3A  D002               	goto	l402
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2018  000F3C  010F               	movlb	15	; () banked
  2019  000F3E  8132               	bsf	50,0,b	;volatile
  2020  000F40                     l402:
  2021                           
  2022                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2023  000F40  0100               	movlb	0	; () banked
  2024  000F42  A3BA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2025  000F44  D002               	goto	l403
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2029  000F46  010F               	movlb	15	; () banked
  2030  000F48  8332               	bsf	50,1,b	;volatile
  2031  000F4A                     l403:
  2032                           
  2033                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2034  000F4A  0100               	movlb	0	; () banked
  2035  000F4C  A5BA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2036  000F4E  D002               	goto	l404
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2040  000F50  010F               	movlb	15	; () banked
  2041  000F52  8B32               	bsf	50,5,b	;volatile
  2042  000F54                     l404:
  2043                           
  2044                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2045  000F54  0100               	movlb	0	; () banked
  2046  000F56  A7BA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2047  000F58  D002               	goto	l405
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2051  000F5A  010F               	movlb	15	; () banked
  2052  000F5C  8D32               	bsf	50,6,b	;volatile
  2053  000F5E                     l405:
  2054                           
  2055                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2056  000F5E  0100               	movlb	0	; () banked
  2057  000F60  A9BA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2058  000F62  D002               	goto	l3320
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2062  000F64  010F               	movlb	15	; () banked
  2063  000F66  8F32               	bsf	50,7,b	;volatile
  2064  000F68                     l3320:
  2065                           
  2066                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2067  000F68  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2068  000F6C  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2069  000F70  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2070  000F74  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2071  000F78  0E16               	movlw	22
  2072  000F7A  D006               	goto	u3540
  2073  000F7C                     u3545:
  2074  000F7C  0100               	movlb	0	; () banked
  2075  000F7E  90D8               	bcf	status,0,c
  2076  000F80  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2077  000F82  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2078  000F84  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2079  000F86  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2080  000F88                     u3540:
  2081  000F88  2EE8               	decfsz	wreg,f,c
  2082  000F8A  D7F8               	goto	u3545
  2083  000F8C  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2084  000F90  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2085  000F94  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2086  000F98  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2090  000F9C  0100               	movlb	0	; () banked
  2091  000F9E  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2092  000FA0  0100               	movlb	0	; () banked
  2093  000FA2  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2094  000FA4  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2095  000FA6  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2096  000FA8  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2100  000FAA  C0C4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2101                           
  2102                           ;inc\CANlib.h: 407: }
  2103  000FAE  D059               	goto	l3340
  2104  000FB0                     l401:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;inc\CANlib.h: 409: else
  2108                           ;inc\CANlib.h: 411: {
  2109                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2110  000FB0  010F               	movlb	15	; () banked
  2111  000FB2  9732               	bcf	50,3,b	;volatile
  2112                           
  2113                           ; BSR set to: 15
  2114                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2115  000FB4  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2116  000FB8  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2117  000FBC  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2118  000FC0  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2119  000FC4  0E04               	movlw	4
  2120  000FC6  D006               	goto	u3550
  2121  000FC8                     u3555:
  2122  000FC8  0100               	movlb	0	; () banked
  2123  000FCA  90D8               	bcf	status,0,c
  2124  000FCC  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2125  000FCE  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2126  000FD0  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2127  000FD2  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2128  000FD4                     u3550:
  2129  000FD4  2EE8               	decfsz	wreg,f,c
  2130  000FD6  D7F8               	goto	u3555
  2131  000FD8  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2132  000FDC  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2133  000FE0  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2134  000FE4  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2138  000FE8  0100               	movlb	0	; () banked
  2139  000FEA  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2140  000FEC  0100               	movlb	0	; () banked
  2141  000FEE  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2142  000FF0  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2143  000FF2  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2144  000FF4  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2148  000FF6  C0C4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2152  000FFA  0E07               	movlw	7
  2153  000FFC  0100               	movlb	0	; () banked
  2154  000FFE  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2155  001000  0100               	movlb	0	; () banked
  2156  001002  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2157  001004  0E00               	movlw	0
  2158  001006  0100               	movlb	0	; () banked
  2159  001008  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2160  00100A  0100               	movlb	0	; () banked
  2161  00100C  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2162  00100E  0E00               	movlw	0
  2163  001010  0100               	movlb	0	; () banked
  2164  001012  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2165  001014  0100               	movlb	0	; () banked
  2166  001016  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2167  001018  0E00               	movlw	0
  2168  00101A  0100               	movlb	0	; () banked
  2169  00101C  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2170  00101E  0100               	movlb	0	; () banked
  2171  001020  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2175  001022  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2176  001026  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2177  00102A  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2178  00102E  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2179  001032  0E05               	movlw	5
  2180  001034                     u3565:
  2181  001034  90D8               	bcf	status,0,c
  2182  001036  0100               	movlb	0	; () banked
  2183  001038  37C0               	rlcf	??_CANsendMessage& (0+255),f,b
  2184  00103A  37C1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2185  00103C  37C2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2186  00103E  37C3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2187  001040  2EE8               	decfsz	wreg,f,c
  2188  001042  D7F8               	goto	u3565
  2189  001044  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2190  001048  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2191  00104C  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2192  001050  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2196  001054  010F               	movlb	15	; () banked
  2197  001056  5132               	movf	50,w,b	;volatile
  2198  001058  0B1F               	andlw	31
  2199  00105A  010F               	movlb	15	; () banked
  2200  00105C  6F32               	movwf	50,b	;volatile
  2201                           
  2202                           ; BSR set to: 15
  2203                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2204  00105E  C0C4  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2205  001062                     l3340:
  2206                           
  2207                           ;inc\CANlib.h: 422: }
  2208                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2209  001062  0100               	movlb	0	; () banked
  2210  001064  A1BF               	btfss	CANsendMessage@flags& (0+255),0,b
  2211  001066  D003               	goto	l408
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2215  001068  010F               	movlb	15	; () banked
  2216  00106A  8130               	bsf	48,0,b	;volatile
  2217  00106C  D002               	goto	l409
  2218  00106E                     l408:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;inc\CANlib.h: 426: else
  2222                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2223  00106E  010F               	movlb	15	; () banked
  2224  001070  9130               	bcf	48,0,b	;volatile
  2225  001072                     l409:
  2226                           
  2227                           ; BSR set to: 15
  2228                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2229  001072  0100               	movlb	0	; () banked
  2230  001074  A3BF               	btfss	CANsendMessage@flags& (0+255),1,b
  2231  001076  D003               	goto	l410
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2235  001078  010F               	movlb	15	; () banked
  2236  00107A  8330               	bsf	48,1,b	;volatile
  2237  00107C  D002               	goto	l3346
  2238  00107E                     l410:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;inc\CANlib.h: 430: else
  2242                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2243  00107E  010F               	movlb	15	; () banked
  2244  001080  9330               	bcf	48,1,b	;volatile
  2245  001082                     l3346:
  2246                           
  2247                           ; BSR set to: 15
  2248                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2249  001082  C0BC  FFD9         	movff	CANsendMessage@data,fsr2l
  2250  001086  C0BD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2251  00108A  50DF               	movf	indf2,w,c
  2252  00108C  010F               	movlb	15	; () banked
  2253  00108E  6F36               	movwf	54,b	;volatile
  2254                           
  2255                           ; BSR set to: 15
  2256                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2257  001090  0100               	movlb	0	; () banked
  2258  001092  EE20 F001          	lfsr	2,1
  2259  001096  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2260  001098  26D9               	addwf	fsr2l,f,c
  2261  00109A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2262  00109C  22DA               	addwfc	fsr2h,f,c
  2263  00109E  50DF               	movf	indf2,w,c
  2264  0010A0  010F               	movlb	15	; () banked
  2265  0010A2  6F37               	movwf	55,b	;volatile
  2266                           
  2267                           ; BSR set to: 15
  2268                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2269  0010A4  0100               	movlb	0	; () banked
  2270  0010A6  EE20 F002          	lfsr	2,2
  2271  0010AA  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2272  0010AC  26D9               	addwf	fsr2l,f,c
  2273  0010AE  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2274  0010B0  22DA               	addwfc	fsr2h,f,c
  2275  0010B2  50DF               	movf	indf2,w,c
  2276  0010B4  010F               	movlb	15	; () banked
  2277  0010B6  6F38               	movwf	56,b	;volatile
  2278                           
  2279                           ; BSR set to: 15
  2280                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2281  0010B8  0100               	movlb	0	; () banked
  2282  0010BA  EE20 F003          	lfsr	2,3
  2283  0010BE  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2284  0010C0  26D9               	addwf	fsr2l,f,c
  2285  0010C2  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2286  0010C4  22DA               	addwfc	fsr2h,f,c
  2287  0010C6  50DF               	movf	indf2,w,c
  2288  0010C8  010F               	movlb	15	; () banked
  2289  0010CA  6F39               	movwf	57,b	;volatile
  2290                           
  2291                           ; BSR set to: 15
  2292                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2293  0010CC  0100               	movlb	0	; () banked
  2294  0010CE  EE20 F004          	lfsr	2,4
  2295  0010D2  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2296  0010D4  26D9               	addwf	fsr2l,f,c
  2297  0010D6  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2298  0010D8  22DA               	addwfc	fsr2h,f,c
  2299  0010DA  50DF               	movf	indf2,w,c
  2300  0010DC  010F               	movlb	15	; () banked
  2301  0010DE  6F3A               	movwf	58,b	;volatile
  2302                           
  2303                           ; BSR set to: 15
  2304                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2305  0010E0  0100               	movlb	0	; () banked
  2306  0010E2  EE20 F005          	lfsr	2,5
  2307  0010E6  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2308  0010E8  26D9               	addwf	fsr2l,f,c
  2309  0010EA  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2310  0010EC  22DA               	addwfc	fsr2h,f,c
  2311  0010EE  50DF               	movf	indf2,w,c
  2312  0010F0  010F               	movlb	15	; () banked
  2313  0010F2  6F3B               	movwf	59,b	;volatile
  2314                           
  2315                           ; BSR set to: 15
  2316                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2317  0010F4  0100               	movlb	0	; () banked
  2318  0010F6  EE20 F006          	lfsr	2,6
  2319  0010FA  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2320  0010FC  26D9               	addwf	fsr2l,f,c
  2321  0010FE  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2322  001100  22DA               	addwfc	fsr2h,f,c
  2323  001102  50DF               	movf	indf2,w,c
  2324  001104  010F               	movlb	15	; () banked
  2325  001106  6F3C               	movwf	60,b	;volatile
  2326                           
  2327                           ; BSR set to: 15
  2328                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2329  001108  0100               	movlb	0	; () banked
  2330  00110A  EE20 F007          	lfsr	2,7
  2331  00110E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2332  001110  26D9               	addwf	fsr2l,f,c
  2333  001112  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2334  001114  22DA               	addwfc	fsr2h,f,c
  2335  001116  50DF               	movf	indf2,w,c
  2336  001118  010F               	movlb	15	; () banked
  2337  00111A  6F3D               	movwf	61,b	;volatile
  2338                           
  2339                           ; BSR set to: 15
  2340                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2341  00111C  010F               	movlb	15	; () banked
  2342  00111E  8730               	bsf	48,3,b	;volatile
  2343                           
  2344                           ; BSR set to: 15
  2345                           ;inc\CANlib.h: 444: return;
  2346  001120  0012               	return	
  2347  001122                     l398:
  2348                           
  2349                           ; BSR set to: 15
  2350                           ;inc\CANlib.h: 445: }
  2351                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2352  001122  010F               	movlb	15	; () banked
  2353  001124  B720               	btfsc	32,3,b	;volatile
  2354  001126  0012               	return	
  2355                           
  2356                           ; BSR set to: 15
  2357                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2358  001128  C0BE  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2359                           
  2360                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2361  00112C  0100               	movlb	0	; () banked
  2362  00112E  ADBF               	btfss	CANsendMessage@flags& (0+255),6,b
  2363  001130  D003               	goto	l413
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2367  001132  010F               	movlb	15	; () banked
  2368  001134  8D25               	bsf	37,6,b	;volatile
  2369  001136  D002               	goto	l414
  2370  001138                     l413:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;inc\CANlib.h: 454: else
  2374                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2375  001138  010F               	movlb	15	; () banked
  2376  00113A  9D25               	bcf	37,6,b	;volatile
  2377  00113C                     l414:
  2378                           
  2379                           ; BSR set to: 15
  2380                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2381  00113C  0100               	movlb	0	; () banked
  2382  00113E  A7BF               	btfss	CANsendMessage@flags& (0+255),3,b
  2383  001140  D079               	goto	l415
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;inc\CANlib.h: 458: {
  2387                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2388  001142  0100               	movlb	0	; () banked
  2389  001144  51B8               	movf	CANsendMessage@identifier& (0+255),w,b
  2390  001146  0100               	movlb	0	; () banked
  2391  001148  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2392  00114A  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2393  00114C  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2394  00114E  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2398  001150  C0C4  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2402  001154  0E00               	movlw	0
  2403  001156  0100               	movlb	0	; () banked
  2404  001158  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2405  00115A  0100               	movlb	0	; () banked
  2406  00115C  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2407  00115E  0EFF               	movlw	255
  2408  001160  0100               	movlb	0	; () banked
  2409  001162  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2410  001164  0100               	movlb	0	; () banked
  2411  001166  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2412  001168  0E00               	movlw	0
  2413  00116A  0100               	movlb	0	; () banked
  2414  00116C  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2415  00116E  0100               	movlb	0	; () banked
  2416  001170  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2417  001172  0E00               	movlw	0
  2418  001174  0100               	movlb	0	; () banked
  2419  001176  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2420  001178  0100               	movlb	0	; () banked
  2421  00117A  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2425  00117C  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2426  001180  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2427  001184  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2428  001188  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2429  00118C  C0C1  F0C0         	movff	??_CANsendMessage+1,??_CANsendMessage
  2430  001190  C0C2  F0C1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2431  001194  C0C3  F0C2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2432  001198  0100               	movlb	0	; () banked
  2433  00119A  6BC3               	clrf	(??_CANsendMessage+3)& (0+255),b
  2434  00119C  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2435  0011A0  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2436  0011A4  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2437  0011A8  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2441  0011AC  C0C4  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2445  0011B0  0E00               	movlw	0
  2446  0011B2  010F               	movlb	15	; () banked
  2447  0011B4  6F22               	movwf	34,b	;volatile
  2448                           
  2449                           ; BSR set to: 15
  2450                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2451  0011B6  010F               	movlb	15	; () banked
  2452  0011B8  8722               	bsf	34,3,b	;volatile
  2453                           
  2454                           ; BSR set to: 15
  2455                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2456  0011BA  0100               	movlb	0	; () banked
  2457  0011BC  A1BA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2458  0011BE  D002               	goto	l416
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2462  0011C0  010F               	movlb	15	; () banked
  2463  0011C2  8122               	bsf	34,0,b	;volatile
  2464  0011C4                     l416:
  2465                           
  2466                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2467  0011C4  0100               	movlb	0	; () banked
  2468  0011C6  A3BA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2469  0011C8  D002               	goto	l417
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2473  0011CA  010F               	movlb	15	; () banked
  2474  0011CC  8322               	bsf	34,1,b	;volatile
  2475  0011CE                     l417:
  2476                           
  2477                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2478  0011CE  0100               	movlb	0	; () banked
  2479  0011D0  A5BA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2480  0011D2  D002               	goto	l418
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2484  0011D4  010F               	movlb	15	; () banked
  2485  0011D6  8B22               	bsf	34,5,b	;volatile
  2486  0011D8                     l418:
  2487                           
  2488                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2489  0011D8  0100               	movlb	0	; () banked
  2490  0011DA  A7BA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2491  0011DC  D002               	goto	l419
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2495  0011DE  010F               	movlb	15	; () banked
  2496  0011E0  8D22               	bsf	34,6,b	;volatile
  2497  0011E2                     l419:
  2498                           
  2499                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2500  0011E2  0100               	movlb	0	; () banked
  2501  0011E4  A9BA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2502  0011E6  D002               	goto	l3396
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2506  0011E8  010F               	movlb	15	; () banked
  2507  0011EA  8F22               	bsf	34,7,b	;volatile
  2508  0011EC                     l3396:
  2509                           
  2510                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2511  0011EC  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2512  0011F0  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2513  0011F4  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2514  0011F8  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2515  0011FC  0E16               	movlw	22
  2516  0011FE  D006               	goto	u3670
  2517  001200                     u3675:
  2518  001200  0100               	movlb	0	; () banked
  2519  001202  90D8               	bcf	status,0,c
  2520  001204  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2521  001206  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2522  001208  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2523  00120A  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2524  00120C                     u3670:
  2525  00120C  2EE8               	decfsz	wreg,f,c
  2526  00120E  D7F8               	goto	u3675
  2527  001210  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2528  001214  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2529  001218  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2530  00121C  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2534  001220  0100               	movlb	0	; () banked
  2535  001222  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2536  001224  0100               	movlb	0	; () banked
  2537  001226  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2538  001228  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2539  00122A  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2540  00122C  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2544  00122E  C0C4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2545                           
  2546                           ;inc\CANlib.h: 483: }
  2547  001232  D059               	goto	l3416
  2548  001234                     l415:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;inc\CANlib.h: 485: else
  2552                           ;inc\CANlib.h: 487: {
  2553                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2554  001234  010F               	movlb	15	; () banked
  2555  001236  9722               	bcf	34,3,b	;volatile
  2556                           
  2557                           ; BSR set to: 15
  2558                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2559  001238  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2560  00123C  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2561  001240  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2562  001244  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2563  001248  0E04               	movlw	4
  2564  00124A  D006               	goto	u3680
  2565  00124C                     u3685:
  2566  00124C  0100               	movlb	0	; () banked
  2567  00124E  90D8               	bcf	status,0,c
  2568  001250  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2569  001252  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2570  001254  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2571  001256  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2572  001258                     u3680:
  2573  001258  2EE8               	decfsz	wreg,f,c
  2574  00125A  D7F8               	goto	u3685
  2575  00125C  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2576  001260  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2577  001264  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2578  001268  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2582  00126C  0100               	movlb	0	; () banked
  2583  00126E  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2584  001270  0100               	movlb	0	; () banked
  2585  001272  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2586  001274  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2587  001276  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2588  001278  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2592  00127A  C0C4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2596  00127E  0E07               	movlw	7
  2597  001280  0100               	movlb	0	; () banked
  2598  001282  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2599  001284  0100               	movlb	0	; () banked
  2600  001286  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2601  001288  0E00               	movlw	0
  2602  00128A  0100               	movlb	0	; () banked
  2603  00128C  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2604  00128E  0100               	movlb	0	; () banked
  2605  001290  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2606  001292  0E00               	movlw	0
  2607  001294  0100               	movlb	0	; () banked
  2608  001296  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2609  001298  0100               	movlb	0	; () banked
  2610  00129A  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2611  00129C  0E00               	movlw	0
  2612  00129E  0100               	movlb	0	; () banked
  2613  0012A0  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2614  0012A2  0100               	movlb	0	; () banked
  2615  0012A4  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2619  0012A6  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2620  0012AA  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2621  0012AE  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2622  0012B2  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2623  0012B6  0E05               	movlw	5
  2624  0012B8                     u3695:
  2625  0012B8  90D8               	bcf	status,0,c
  2626  0012BA  0100               	movlb	0	; () banked
  2627  0012BC  37C0               	rlcf	??_CANsendMessage& (0+255),f,b
  2628  0012BE  37C1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2629  0012C0  37C2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2630  0012C2  37C3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2631  0012C4  2EE8               	decfsz	wreg,f,c
  2632  0012C6  D7F8               	goto	u3695
  2633  0012C8  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2634  0012CC  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2635  0012D0  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2636  0012D4  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2640  0012D8  010F               	movlb	15	; () banked
  2641  0012DA  5122               	movf	34,w,b	;volatile
  2642  0012DC  0B1F               	andlw	31
  2643  0012DE  010F               	movlb	15	; () banked
  2644  0012E0  6F22               	movwf	34,b	;volatile
  2645                           
  2646                           ; BSR set to: 15
  2647                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2648  0012E2  C0C4  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2649  0012E6                     l3416:
  2650                           
  2651                           ;inc\CANlib.h: 498: }
  2652                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2653  0012E6  0100               	movlb	0	; () banked
  2654  0012E8  A1BF               	btfss	CANsendMessage@flags& (0+255),0,b
  2655  0012EA  D003               	goto	l422
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2659  0012EC  010F               	movlb	15	; () banked
  2660  0012EE  8120               	bsf	32,0,b	;volatile
  2661  0012F0  D002               	goto	l423
  2662  0012F2                     l422:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;inc\CANlib.h: 502: else
  2666                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2667  0012F2  010F               	movlb	15	; () banked
  2668  0012F4  9120               	bcf	32,0,b	;volatile
  2669  0012F6                     l423:
  2670                           
  2671                           ; BSR set to: 15
  2672                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2673  0012F6  0100               	movlb	0	; () banked
  2674  0012F8  A3BF               	btfss	CANsendMessage@flags& (0+255),1,b
  2675  0012FA  D003               	goto	l424
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2679  0012FC  010F               	movlb	15	; () banked
  2680  0012FE  8320               	bsf	32,1,b	;volatile
  2681  001300  D002               	goto	l3422
  2682  001302                     l424:
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;inc\CANlib.h: 506: else
  2686                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2687  001302  010F               	movlb	15	; () banked
  2688  001304  9320               	bcf	32,1,b	;volatile
  2689  001306                     l3422:
  2690                           
  2691                           ; BSR set to: 15
  2692                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2693  001306  C0BC  FFD9         	movff	CANsendMessage@data,fsr2l
  2694  00130A  C0BD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2695  00130E  50DF               	movf	indf2,w,c
  2696  001310  010F               	movlb	15	; () banked
  2697  001312  6F26               	movwf	38,b	;volatile
  2698                           
  2699                           ; BSR set to: 15
  2700                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2701  001314  0100               	movlb	0	; () banked
  2702  001316  EE20 F001          	lfsr	2,1
  2703  00131A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2704  00131C  26D9               	addwf	fsr2l,f,c
  2705  00131E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2706  001320  22DA               	addwfc	fsr2h,f,c
  2707  001322  50DF               	movf	indf2,w,c
  2708  001324  010F               	movlb	15	; () banked
  2709  001326  6F27               	movwf	39,b	;volatile
  2710                           
  2711                           ; BSR set to: 15
  2712                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2713  001328  0100               	movlb	0	; () banked
  2714  00132A  EE20 F002          	lfsr	2,2
  2715  00132E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2716  001330  26D9               	addwf	fsr2l,f,c
  2717  001332  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2718  001334  22DA               	addwfc	fsr2h,f,c
  2719  001336  50DF               	movf	indf2,w,c
  2720  001338  010F               	movlb	15	; () banked
  2721  00133A  6F28               	movwf	40,b	;volatile
  2722                           
  2723                           ; BSR set to: 15
  2724                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2725  00133C  0100               	movlb	0	; () banked
  2726  00133E  EE20 F003          	lfsr	2,3
  2727  001342  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2728  001344  26D9               	addwf	fsr2l,f,c
  2729  001346  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2730  001348  22DA               	addwfc	fsr2h,f,c
  2731  00134A  50DF               	movf	indf2,w,c
  2732  00134C  010F               	movlb	15	; () banked
  2733  00134E  6F29               	movwf	41,b	;volatile
  2734                           
  2735                           ; BSR set to: 15
  2736                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2737  001350  0100               	movlb	0	; () banked
  2738  001352  EE20 F004          	lfsr	2,4
  2739  001356  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2740  001358  26D9               	addwf	fsr2l,f,c
  2741  00135A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2742  00135C  22DA               	addwfc	fsr2h,f,c
  2743  00135E  50DF               	movf	indf2,w,c
  2744  001360  010F               	movlb	15	; () banked
  2745  001362  6F2A               	movwf	42,b	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2749  001364  0100               	movlb	0	; () banked
  2750  001366  EE20 F005          	lfsr	2,5
  2751  00136A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2752  00136C  26D9               	addwf	fsr2l,f,c
  2753  00136E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2754  001370  22DA               	addwfc	fsr2h,f,c
  2755  001372  50DF               	movf	indf2,w,c
  2756  001374  010F               	movlb	15	; () banked
  2757  001376  6F2B               	movwf	43,b	;volatile
  2758                           
  2759                           ; BSR set to: 15
  2760                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2761  001378  0100               	movlb	0	; () banked
  2762  00137A  EE20 F006          	lfsr	2,6
  2763  00137E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2764  001380  26D9               	addwf	fsr2l,f,c
  2765  001382  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2766  001384  22DA               	addwfc	fsr2h,f,c
  2767  001386  50DF               	movf	indf2,w,c
  2768  001388  010F               	movlb	15	; () banked
  2769  00138A  6F2C               	movwf	44,b	;volatile
  2770                           
  2771                           ; BSR set to: 15
  2772                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2773  00138C  0100               	movlb	0	; () banked
  2774  00138E  EE20 F007          	lfsr	2,7
  2775  001392  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2776  001394  26D9               	addwf	fsr2l,f,c
  2777  001396  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2778  001398  22DA               	addwfc	fsr2h,f,c
  2779  00139A  50DF               	movf	indf2,w,c
  2780  00139C  010F               	movlb	15	; () banked
  2781  00139E  6F2D               	movwf	45,b	;volatile
  2782                           
  2783                           ; BSR set to: 15
  2784                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2785  0013A0  010F               	movlb	15	; () banked
  2786  0013A2  8720               	bsf	32,3,b	;volatile
  2787                           
  2788                           ; BSR set to: 15
  2789                           ;inc\CANlib.h: 520: return;
  2790  0013A4  0012               	return	
  2791  0013A6                     __end_of_CANsendMessage:
  2792                           	opt stack 0
  2793                           tblptru	equ	0xFF8
  2794                           tblptrh	equ	0xFF7
  2795                           tblptrl	equ	0xFF6
  2796                           tablat	equ	0xFF5
  2797                           prodh	equ	0xFF4
  2798                           prodl	equ	0xFF3
  2799                           postinc0	equ	0xFEE
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1l	equ	0xFE1
  2803                           indf2	equ	0xFDF
  2804                           fsr2h	equ	0xFDA
  2805                           fsr2l	equ	0xFD9
  2806                           status	equ	0xFD8
  2807                           
  2808 ;; *************** function _CANisTxReady *****************
  2809 ;; Defined at:
  2810 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      unsigned char 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2824 ;;      Params:         0       0       0       0
  2825 ;;      Locals:         0       1       0       0
  2826 ;;      Temps:          0       0       0       0
  2827 ;;      Totals:         0       1       0       0
  2828 ;;Total ram usage:        1 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    4
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_remote_frame_handler
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text3
  2839  0027E8                     __ptext3:
  2840                           	opt stack 0
  2841  0027E8                     _CANisTxReady:
  2842                           	opt stack 25
  2843                           
  2844                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;incstack = 0
  2848  0027E8  0E01               	movlw	1
  2849  0027EA  0100               	movlb	0	; () banked
  2850  0027EC  6FB8               	movwf	_CANisTxReady$3282& (0+255),b
  2851                           
  2852                           ; BSR set to: 0
  2853  0027EE  010F               	movlb	15	; () banked
  2854  0027F0  A740               	btfss	64,3,b	;volatile
  2855  0027F2  D009               	goto	l576
  2856                           
  2857                           ; BSR set to: 15
  2858  0027F4  010F               	movlb	15	; () banked
  2859  0027F6  A730               	btfss	48,3,b	;volatile
  2860  0027F8  D006               	goto	l576
  2861                           
  2862                           ; BSR set to: 15
  2863  0027FA  010F               	movlb	15	; () banked
  2864  0027FC  A720               	btfss	32,3,b	;volatile
  2865  0027FE  D003               	goto	l576
  2866                           
  2867                           ; BSR set to: 15
  2868  002800  0E00               	movlw	0
  2869  002802  0100               	movlb	0	; () banked
  2870  002804  6FB8               	movwf	_CANisTxReady$3282& (0+255),b
  2871  002806                     l576:
  2872  002806  0100               	movlb	0	; () banked
  2873  002808  51B8               	movf	_CANisTxReady$3282& (0+255),w,b
  2874  00280A  0012               	return	
  2875  00280C                     __end_of_CANisTxReady:
  2876                           	opt stack 0
  2877                           tblptru	equ	0xFF8
  2878                           tblptrh	equ	0xFF7
  2879                           tblptrl	equ	0xFF6
  2880                           tablat	equ	0xFF5
  2881                           prodh	equ	0xFF4
  2882                           prodl	equ	0xFF3
  2883                           postinc0	equ	0xFEE
  2884                           wreg	equ	0xFE8
  2885                           postdec1	equ	0xFE5
  2886                           fsr1l	equ	0xFE1
  2887                           indf2	equ	0xFDF
  2888                           fsr2h	equ	0xFDA
  2889                           fsr2l	equ	0xFD9
  2890                           status	equ	0xFD8
  2891                           
  2892 ;; *************** function _board_initialization *****************
  2893 ;; Defined at:
  2894 ;;		line 345 in file "ABS_Code.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;		None               void
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2908 ;;      Params:         0       0       0       0
  2909 ;;      Locals:         0       0       0       0
  2910 ;;      Temps:          0       0       0       0
  2911 ;;      Totals:         0       0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used:    1
  2914 ;; Hardware stack levels required when called:    6
  2915 ;; This function calls:
  2916 ;;		_CANInitialize
  2917 ;;		_delay_ms
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text4
  2924  0023FA                     __ptext4:
  2925                           	opt stack 0
  2926  0023FA                     _board_initialization:
  2927                           	opt stack 24
  2928                           
  2929                           ;ABS_Code.c: 347: LATA = 0x00;
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;incstack = 0
  2933  0023FA  0E00               	movlw	0
  2934  0023FC  6E89               	movwf	3977,c	;volatile
  2935                           
  2936                           ;ABS_Code.c: 348: TRISA = 0b11111101;
  2937  0023FE  0EFD               	movlw	253
  2938  002400  6E92               	movwf	3986,c	;volatile
  2939                           
  2940                           ;ABS_Code.c: 349: LATB = 0x00;
  2941  002402  0E00               	movlw	0
  2942  002404  6E8A               	movwf	3978,c	;volatile
  2943                           
  2944                           ;ABS_Code.c: 350: TRISB = 0b11111111;
  2945  002406  6893               	setf	3987,c	;volatile
  2946                           
  2947                           ;ABS_Code.c: 351: LATC = 0x00;
  2948  002408  0E00               	movlw	0
  2949  00240A  6E8B               	movwf	3979,c	;volatile
  2950                           
  2951                           ;ABS_Code.c: 352: TRISC = 0b11111100;
  2952  00240C  0EFC               	movlw	252
  2953  00240E  6E94               	movwf	3988,c	;volatile
  2954                           
  2955                           ;ABS_Code.c: 353: LATD = 0x00;
  2956  002410  0E00               	movlw	0
  2957  002412  6E8C               	movwf	3980,c	;volatile
  2958                           
  2959                           ;ABS_Code.c: 354: TRISD = 0xFF;
  2960  002414  6895               	setf	3989,c	;volatile
  2961                           
  2962                           ;ABS_Code.c: 355: LATE = 0x00;
  2963  002416  0E00               	movlw	0
  2964  002418  6E8D               	movwf	3981,c	;volatile
  2965                           
  2966                           ;ABS_Code.c: 356: TRISE = 0xFF;
  2967  00241A  6896               	setf	3990,c	;volatile
  2968                           
  2969                           ;ABS_Code.c: 358: ADCON1 = 0x11111110;
  2970  00241C  0E10               	movlw	16
  2971  00241E  6EC1               	movwf	4033,c	;volatile
  2972                           
  2973                           ;ABS_Code.c: 361: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2974  002420  0E06               	movlw	6
  2975  002422  0100               	movlb	0	; () banked
  2976  002424  6FC6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2977  002426  0E05               	movlw	5
  2978  002428  0100               	movlb	0	; () banked
  2979  00242A  6FC7               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2980  00242C  0E01               	movlw	1
  2981  00242E  0100               	movlb	0	; () banked
  2982  002430  6FC8               	movwf	CANInitialize@SJW& (0+255),b
  2983  002432  0E03               	movlw	3
  2984  002434  0100               	movlb	0	; () banked
  2985  002436  6FC9               	movwf	CANInitialize@BRP& (0+255),b
  2986  002438  0E9D               	movlw	157
  2987  00243A  0100               	movlb	0	; () banked
  2988  00243C  6FCA               	movwf	CANInitialize@flags& (0+255),b
  2989  00243E  0E04               	movlw	4
  2990  002440  EC74  F00F         	call	_CANInitialize
  2991                           
  2992                           ;ABS_Code.c: 364: PIR3bits.RXB1IF = 0;
  2993  002444  92A4               	bcf	4004,1,c	;volatile
  2994                           
  2995                           ;ABS_Code.c: 365: PIR3bits.RXB0IF = 0;
  2996  002446  90A4               	bcf	4004,0,c	;volatile
  2997                           
  2998                           ;ABS_Code.c: 366: INTCONbits.TMR0IF = 0;
  2999  002448  94F2               	bcf	intcon,2,c	;volatile
  3000                           
  3001                           ;ABS_Code.c: 367: PIR1bits.TMR1IF = 0;
  3002  00244A  909E               	bcf	3998,0,c	;volatile
  3003                           
  3004                           ;ABS_Code.c: 368: PIR2bits.TMR3IF = 0;
  3005  00244C  92A1               	bcf	4001,1,c	;volatile
  3006                           
  3007                           ;ABS_Code.c: 369: INTCONbits.INT0IF = 0;
  3008  00244E  92F2               	bcf	intcon,1,c	;volatile
  3009                           
  3010                           ;ABS_Code.c: 370: INTCON3bits.INT1IF = 0;
  3011  002450  90F0               	bcf	intcon3,0,c	;volatile
  3012                           
  3013                           ;ABS_Code.c: 374: RCONbits.IPEN = 1;
  3014  002452  8ED0               	bsf	4048,7,c	;volatile
  3015                           
  3016                           ;ABS_Code.c: 375: IPR3bits.RXB1IP = 0;
  3017  002454  92A5               	bcf	4005,1,c	;volatile
  3018                           
  3019                           ;ABS_Code.c: 376: IPR3bits.RXB0IP = 0;
  3020  002456  90A5               	bcf	4005,0,c	;volatile
  3021                           
  3022                           ;ABS_Code.c: 377: INTCON2bits.TMR0IP = 1;
  3023  002458  84F1               	bsf	intcon2,2,c	;volatile
  3024                           
  3025                           ;ABS_Code.c: 378: INTCON3bits.INT1IP = 1;
  3026  00245A  8CF0               	bsf	intcon3,6,c	;volatile
  3027                           
  3028                           ;ABS_Code.c: 379: IPR1bits.TMR1IP = 0;
  3029  00245C  909F               	bcf	3999,0,c	;volatile
  3030                           
  3031                           ;ABS_Code.c: 380: IPR2bits.TMR3IP = 0;
  3032  00245E  92A2               	bcf	4002,1,c	;volatile
  3033                           
  3034                           ;ABS_Code.c: 383: T0CON = 0x80;
  3035  002460  0E80               	movlw	128
  3036  002462  6ED5               	movwf	4053,c	;volatile
  3037                           
  3038                           ;ABS_Code.c: 390: TMR0H = 0xFF;
  3039  002464  68D7               	setf	4055,c	;volatile
  3040                           
  3041                           ;ABS_Code.c: 391: TMR0L = 0xFE;
  3042  002466  0EFE               	movlw	254
  3043  002468  6ED6               	movwf	4054,c	;volatile
  3044                           
  3045                           ;ABS_Code.c: 392: PORTCbits.RC0 = 0;
  3046  00246A  9082               	bcf	3970,0,c	;volatile
  3047                           
  3048                           ;ABS_Code.c: 393: brake_value_degree = 90;
  3049  00246C  0E5A               	movlw	90
  3050  00246E  6E38               	movwf	_brake_value_degree,c
  3051                           
  3052                           ;ABS_Code.c: 394: T1CON = 00010000;
  3053  002470  0E00               	movlw	0
  3054  002472  6ECD               	movwf	4045,c	;volatile
  3055                           
  3056                           ;ABS_Code.c: 395: T3CON = 01010000;
  3057  002474  0E00               	movlw	0
  3058  002476  6EB1               	movwf	4017,c	;volatile
  3059                           
  3060                           ;ABS_Code.c: 396: INTCON2bits.INTEDG0 = 1;
  3061  002478  8CF1               	bsf	intcon2,6,c	;volatile
  3062                           
  3063                           ;ABS_Code.c: 397: INTCON2bits.INTEDG1 = 1;
  3064  00247A  8AF1               	bsf	intcon2,5,c	;volatile
  3065                           
  3066                           ;ABS_Code.c: 400: ADCON1 = 0b01110111;
  3067  00247C  0E77               	movlw	119
  3068  00247E  6EC1               	movwf	4033,c	;volatile
  3069                           
  3070                           ;ABS_Code.c: 401: ADCON0bits.CHS2 = 0;
  3071  002480  98C2               	bcf	4034,4,c	;volatile
  3072                           
  3073                           ;ABS_Code.c: 402: ADCON0bits.CHS1 = 0;
  3074  002482  96C2               	bcf	4034,3,c	;volatile
  3075                           
  3076                           ;ABS_Code.c: 403: ADCON0bits.CHS0 = 0;
  3077  002484  94C2               	bcf	4034,2,c	;volatile
  3078                           
  3079                           ;ABS_Code.c: 404: ADCON2bits.ACQT2 = 1;
  3080  002486  8AC0               	bsf	4032,5,c	;volatile
  3081                           
  3082                           ;ABS_Code.c: 405: ADCON2bits.ACQT1 = 1;
  3083  002488  88C0               	bsf	4032,4,c	;volatile
  3084                           
  3085                           ;ABS_Code.c: 406: ADCON2bits.ACQT0 = 0;
  3086  00248A  96C0               	bcf	4032,3,c	;volatile
  3087                           
  3088                           ;ABS_Code.c: 407: ADCON2bits.ADCS2 = 1;
  3089  00248C  84C0               	bsf	4032,2,c	;volatile
  3090                           
  3091                           ;ABS_Code.c: 408: ADCON2bits.ADCS1 = 0;
  3092  00248E  92C0               	bcf	4032,1,c	;volatile
  3093                           
  3094                           ;ABS_Code.c: 409: ADCON2bits.ADCS0 = 1;
  3095  002490  80C0               	bsf	4032,0,c	;volatile
  3096                           
  3097                           ;ABS_Code.c: 410: ADCON2bits.ADFM = 0;
  3098  002492  9EC0               	bcf	4032,7,c	;volatile
  3099                           
  3100                           ;ABS_Code.c: 411: ADCON0bits.ADON = 1;
  3101  002494  80C2               	bsf	4034,0,c	;volatile
  3102                           
  3103                           ;ABS_Code.c: 414: PIE3bits.RXB1IE = 1;
  3104  002496  82A3               	bsf	4003,1,c	;volatile
  3105                           
  3106                           ;ABS_Code.c: 415: PIE3bits.RXB0IE = 1;
  3107  002498  80A3               	bsf	4003,0,c	;volatile
  3108                           
  3109                           ;ABS_Code.c: 416: INTCONbits.TMR0IE = 1;
  3110  00249A  8AF2               	bsf	intcon,5,c	;volatile
  3111                           
  3112                           ;ABS_Code.c: 417: PIE1bits.TMR1IE = 1;
  3113  00249C  809D               	bsf	3997,0,c	;volatile
  3114                           
  3115                           ;ABS_Code.c: 418: PIE2bits.TMR3IE = 1;
  3116  00249E  82A0               	bsf	4000,1,c	;volatile
  3117                           
  3118                           ;ABS_Code.c: 419: INTCONbits.INT0IE = 1;
  3119  0024A0  88F2               	bsf	intcon,4,c	;volatile
  3120                           
  3121                           ;ABS_Code.c: 420: INTCON3bits.INT1IE = 1;
  3122  0024A2  86F0               	bsf	intcon3,3,c	;volatile
  3123                           
  3124                           ;ABS_Code.c: 421: INTCONbits.GIEH = 1;
  3125  0024A4  8EF2               	bsf	intcon,7,c	;volatile
  3126                           
  3127                           ;ABS_Code.c: 422: INTCONbits.GIEL = 1;
  3128  0024A6  8CF2               	bsf	intcon,6,c	;volatile
  3129                           
  3130                           ;ABS_Code.c: 425: T1CONbits.TMR1ON = 1;
  3131  0024A8  80CD               	bsf	4045,0,c	;volatile
  3132                           
  3133                           ;ABS_Code.c: 426: T3CONbits.TMR3ON = 1;
  3134  0024AA  80B1               	bsf	4017,0,c	;volatile
  3135                           
  3136                           ;ABS_Code.c: 427: T0CONbits.TMR0ON = 1;
  3137  0024AC  8ED5               	bsf	4053,7,c	;volatile
  3138                           
  3139                           ;ABS_Code.c: 428: delay_ms(2);
  3140  0024AE  0E00               	movlw	0
  3141  0024B0  0100               	movlb	0	; () banked
  3142  0024B2  6FBF               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3143  0024B4  0E02               	movlw	2
  3144  0024B6  6FBE               	movwf	delay_ms@value_ms& (0+255),b
  3145  0024B8  ECA9  F013         	call	_delay_ms	;wreg free
  3146  0024BC  0012               	return		;funcret
  3147  0024BE                     __end_of_board_initialization:
  3148                           	opt stack 0
  3149                           tblptru	equ	0xFF8
  3150                           tblptrh	equ	0xFF7
  3151                           tblptrl	equ	0xFF6
  3152                           tablat	equ	0xFF5
  3153                           prodh	equ	0xFF4
  3154                           prodl	equ	0xFF3
  3155                           intcon	equ	0xFF2
  3156                           intcon2	equ	0xFF1
  3157                           intcon3	equ	0xFF0
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           postdec1	equ	0xFE5
  3161                           fsr1l	equ	0xFE1
  3162                           indf2	equ	0xFDF
  3163                           fsr2h	equ	0xFDA
  3164                           fsr2l	equ	0xFD9
  3165                           status	equ	0xFD8
  3166                           
  3167 ;; *************** function _delay_ms *****************
  3168 ;; Defined at:
  3169 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  value_ms        2   28[BANK0 ] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3183 ;;      Params:         0       2       0       0
  3184 ;;      Locals:         0       0       0       0
  3185 ;;      Temps:          0       0       0       0
  3186 ;;      Totals:         0       2       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    5
  3190 ;; This function calls:
  3191 ;;		___wmul
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;;		_board_initialization
  3195 ;;		_delay_s
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text5
  3200  002752                     __ptext5:
  3201                           	opt stack 0
  3202  002752                     _delay_ms:
  3203                           	opt stack 25
  3204                           
  3205                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3206                           
  3207                           ;incstack = 0
  3208  002752  C0D2  F0B8         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3209  002756  0100               	movlb	0	; () banked
  3210  002758  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
  3211  00275A  C0BE  F0BA         	movff	delay_ms@value_ms,___wmul@multiplicand
  3212  00275E  C0BF  F0BB         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3213  002762  ECC6  F013         	call	___wmul	;wreg free
  3214  002766  C0B8  F074         	movff	?___wmul,_clock_counter_reference	;volatile
  3215  00276A  C0B9  F075         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3216                           
  3217                           ;src\delay.c: 75: while (clock_counter_reference) {
  3218  00276E  D007               	goto	l589
  3219  002770                     l3456:
  3220                           
  3221                           ;src\delay.c: 85: _delay(240);
  3222  002770  0E50               	movlw	80
  3223  002772                     u4727:
  3224  002772  2EE8               	decfsz	wreg,f,c
  3225  002774  D7FE               	goto	u4727
  3226                           
  3227                           ;src\delay.c: 88: clock_counter_reference--;
  3228  002776  0100               	movlb	0	; () banked
  3229  002778  0774               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3230  00277A  A0D8               	btfss	status,0,c
  3231  00277C  0775               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3232  00277E                     l589:
  3233  00277E  0100               	movlb	0	; () banked
  3234  002780  5174               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3235  002782  0100               	movlb	0	; () banked
  3236  002784  1175               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3237  002786  B4D8               	btfsc	status,2,c
  3238  002788  0012               	return	
  3239  00278A  D7F2               	goto	l3456
  3240  00278C                     __end_of_delay_ms:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           intcon2	equ	0xFF1
  3250                           intcon3	equ	0xFF0
  3251                           postinc0	equ	0xFEE
  3252                           wreg	equ	0xFE8
  3253                           postdec1	equ	0xFE5
  3254                           fsr1l	equ	0xFE1
  3255                           indf2	equ	0xFDF
  3256                           fsr2h	equ	0xFDA
  3257                           fsr2l	equ	0xFD9
  3258                           status	equ	0xFD8
  3259                           
  3260 ;; *************** function ___wmul *****************
  3261 ;; Defined at:
  3262 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  multiplier      2   22[BANK0 ] unsigned int 
  3265 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  product         2   26[BANK0 ] unsigned int 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2   22[BANK0 ] unsigned int 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2, status,0, prodl, prodh
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3277 ;;      Params:         0       4       0       0
  3278 ;;      Locals:         0       2       0       0
  3279 ;;      Temps:          0       0       0       0
  3280 ;;      Totals:         0       6       0       0
  3281 ;;Total ram usage:        6 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    4
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_delay_ms
  3288 ;;		_main
  3289 ;;		_remote_frame_handler
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text6
  3294  00278C                     __ptext6:
  3295                           	opt stack 0
  3296  00278C                     ___wmul:
  3297                           	opt stack 25
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;incstack = 0
  3301  00278C  0100               	movlb	0	; () banked
  3302  00278E  51B8               	movf	___wmul@multiplier& (0+255),w,b
  3303  002790  0100               	movlb	0	; () banked
  3304  002792  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  3305  002794  CFF3 F0BC          	movff	prodl,___wmul@product
  3306  002798  CFF4 F0BD          	movff	prodh,___wmul@product+1
  3307  00279C  0100               	movlb	0	; () banked
  3308  00279E  51B8               	movf	___wmul@multiplier& (0+255),w,b
  3309  0027A0  0100               	movlb	0	; () banked
  3310  0027A2  03BB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3311  0027A4  50F3               	movf	prodl,w,c
  3312  0027A6  0100               	movlb	0	; () banked
  3313  0027A8  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  3314  0027AA  0100               	movlb	0	; () banked
  3315  0027AC  51B9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3316  0027AE  0100               	movlb	0	; () banked
  3317  0027B0  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  3318  0027B2  50F3               	movf	prodl,w,c
  3319  0027B4  0100               	movlb	0	; () banked
  3320  0027B6  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  3321                           
  3322                           ; BSR set to: 0
  3323  0027B8  C0BC  F0B8         	movff	___wmul@product,?___wmul
  3324  0027BC  C0BD  F0B9         	movff	___wmul@product+1,?___wmul+1
  3325  0027C0  0012               	return	
  3326  0027C2                     __end_of___wmul:
  3327                           	opt stack 0
  3328                           tblptru	equ	0xFF8
  3329                           tblptrh	equ	0xFF7
  3330                           tblptrl	equ	0xFF6
  3331                           tablat	equ	0xFF5
  3332                           prodh	equ	0xFF4
  3333                           prodl	equ	0xFF3
  3334                           intcon	equ	0xFF2
  3335                           intcon2	equ	0xFF1
  3336                           intcon3	equ	0xFF0
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           postdec1	equ	0xFE5
  3340                           fsr1l	equ	0xFE1
  3341                           indf2	equ	0xFDF
  3342                           fsr2h	equ	0xFDA
  3343                           fsr2l	equ	0xFD9
  3344                           status	equ	0xFD8
  3345                           
  3346 ;; *************** function _CANInitialize *****************
  3347 ;; Defined at:
  3348 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  propSeg         1    wreg     unsigned char 
  3351 ;;  phaseSeg1       1   36[BANK0 ] unsigned char 
  3352 ;;  phaseSeg2       1   37[BANK0 ] unsigned char 
  3353 ;;  SJW             1   38[BANK0 ] unsigned char 
  3354 ;;  BRP             1   39[BANK0 ] unsigned char 
  3355 ;;  flags           1   40[BANK0 ] enum E16844
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  propSeg         1   45[BANK0 ] unsigned char 
  3358 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  3359 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;		None               void
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3369 ;;      Params:         0       5       0       0
  3370 ;;      Locals:         0       3       0       0
  3371 ;;      Temps:          0       4       0       0
  3372 ;;      Totals:         0      12       0       0
  3373 ;;Total ram usage:       12 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    5
  3376 ;; This function calls:
  3377 ;;		_CANOperationMode
  3378 ;;		_CANSetFilter
  3379 ;;		_CANSetMask
  3380 ;; This function is called by:
  3381 ;;		_board_initialization
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text7
  3386  001EE8                     __ptext7:
  3387                           	opt stack 0
  3388  001EE8                     _CANInitialize:
  3389                           	opt stack 24
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;incstack = 0
  3393                           ;CANInitialize@propSeg stored from wreg
  3394  001EE8  0100               	movlb	0	; () banked
  3395  001EEA  6FCF               	movwf	CANInitialize@propSeg& (0+255),b
  3396                           
  3397                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3398                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3399                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3400  001EEC  0E80               	movlw	128
  3401  001EEE  EC06  F014         	call	_CANOperationMode
  3402                           
  3403                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3404  001EF2  0E00               	movlw	0
  3405  001EF4  6E70               	movwf	3952,c	;volatile
  3406                           
  3407                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3408  001EF6  0E00               	movlw	0
  3409  001EF8  6E71               	movwf	3953,c	;volatile
  3410                           
  3411                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3412  001EFA  0E00               	movlw	0
  3413  001EFC  6E72               	movwf	3954,c	;volatile
  3414                           
  3415                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3416  001EFE  0100               	movlb	0	; () banked
  3417  001F00  41C8               	rrncf	CANInitialize@SJW& (0+255),w,b
  3418  001F02  42E8               	rrncf	wreg,f,c
  3419  001F04  0BC0               	andlw	192
  3420  001F06  0100               	movlb	0	; () banked
  3421  001F08  6FC8               	movwf	CANInitialize@SJW& (0+255),b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3425  001F0A  0100               	movlb	0	; () banked
  3426  001F0C  51C8               	movf	CANInitialize@SJW& (0+255),w,b
  3427  001F0E  1270               	iorwf	3952,f,c	;volatile
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3431  001F10  0100               	movlb	0	; () banked
  3432  001F12  51C9               	movf	CANInitialize@BRP& (0+255),w,b
  3433  001F14  1270               	iorwf	3952,f,c	;volatile
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3437  001F16  0100               	movlb	0	; () banked
  3438  001F18  51CF               	movf	CANInitialize@propSeg& (0+255),w,b
  3439  001F1A  1271               	iorwf	3953,f,c	;volatile
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3443  001F1C  0100               	movlb	0	; () banked
  3444  001F1E  39C6               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3445  001F20  42E8               	rrncf	wreg,f,c
  3446  001F22  0BF8               	andlw	248
  3447  001F24  0100               	movlb	0	; () banked
  3448  001F26  6FC6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3452  001F28  0100               	movlb	0	; () banked
  3453  001F2A  51C6               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3454  001F2C  1271               	iorwf	3953,f,c	;volatile
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3458  001F2E  0100               	movlb	0	; () banked
  3459  001F30  A5CA               	btfss	CANInitialize@flags& (0+255),2,b
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3463  001F32  8C71               	bsf	3953,6,c	;volatile
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3467  001F34  0100               	movlb	0	; () banked
  3468  001F36  B1CA               	btfsc	CANInitialize@flags& (0+255),0,b
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3472  001F38  8E71               	bsf	3953,7,c	;volatile
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3476                           
  3477                           ; BSR set to: 0
  3478  001F3A  0100               	movlb	0	; () banked
  3479  001F3C  51C7               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3480  001F3E  1272               	iorwf	3954,f,c	;volatile
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3484  001F40  0100               	movlb	0	; () banked
  3485  001F42  B3CA               	btfsc	CANInitialize@flags& (0+255),1,b
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3489  001F44  8C72               	bsf	3954,6,c	;volatile
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3493                           
  3494                           ; BSR set to: 0
  3495  001F46  0100               	movlb	0	; () banked
  3496  001F48  51CA               	movf	CANInitialize@flags& (0+255),w,b
  3497  001F4A  0B60               	andlw	96
  3498  001F4C  6E60               	movwf	3936,c	;volatile
  3499                           
  3500                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3501  001F4E  0100               	movlb	0	; () banked
  3502  001F50  51CA               	movf	CANInitialize@flags& (0+255),w,b
  3503  001F52  0B10               	andlw	16
  3504  001F54  0AFF               	xorlw	255
  3505  001F56  B4D8               	btfsc	status,2,c
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3509  001F58  8460               	bsf	3936,2,c	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3513  001F5A  CF60 FF50          	movff	3936,3920	;volatile
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3517  001F5E  0E00               	movlw	0
  3518  001F60  0100               	movlb	0	; () banked
  3519  001F62  6FB8               	movwf	CANSetMask@mask& (0+255),b
  3520  001F64  0E00               	movlw	0
  3521  001F66  6FB9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3522  001F68  0E00               	movlw	0
  3523  001F6A  6FBA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3524  001F6C  0E00               	movlw	0
  3525  001F6E  6FBB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3526  001F70  0EF7               	movlw	247
  3527  001F72  0100               	movlb	0	; () banked
  3528  001F74  6FBC               	movwf	CANSetMask@type& (0+255),b
  3529  001F76  0E01               	movlw	1
  3530  001F78  EC59  F00C         	call	_CANSetMask
  3531                           
  3532                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3533  001F7C  0E00               	movlw	0
  3534  001F7E  0100               	movlb	0	; () banked
  3535  001F80  6FB8               	movwf	CANSetMask@mask& (0+255),b
  3536  001F82  0E00               	movlw	0
  3537  001F84  6FB9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3538  001F86  0E00               	movlw	0
  3539  001F88  6FBA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3540  001F8A  0E00               	movlw	0
  3541  001F8C  6FBB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3542  001F8E  0EF7               	movlw	247
  3543  001F90  0100               	movlb	0	; () banked
  3544  001F92  6FBC               	movwf	CANSetMask@type& (0+255),b
  3545  001F94  0E02               	movlw	2
  3546  001F96  EC59  F00C         	call	_CANSetMask
  3547                           
  3548                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3549  001F9A  D00F               	goto	l3204
  3550  001F9C                     l3198:
  3551                           
  3552                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3553  001F9C  0EF7               	movlw	247
  3554  001F9E  0100               	movlb	0	; () banked
  3555  001FA0  6FD0               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3556  001FA2  D007               	goto	l3200
  3557  001FA4                     l378:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3561  001FA4  0100               	movlb	0	; () banked
  3562  001FA6  69D0               	setf	CANInitialize@FilterConfig1& (0+255),b
  3563                           
  3564                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3565  001FA8  0100               	movlb	0	; () banked
  3566  001FAA  69D1               	setf	CANInitialize@FilterConfig2& (0+255),b
  3567                           
  3568                           ;inc\CANlib.h: 273: break;
  3569  001FAC  D028               	goto	l3206
  3570  001FAE                     l379:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3574  001FAE  0100               	movlb	0	; () banked
  3575  001FB0  69D0               	setf	CANInitialize@FilterConfig1& (0+255),b
  3576  001FB2                     l3200:
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3580  001FB2  0EF7               	movlw	247
  3581  001FB4  0100               	movlb	0	; () banked
  3582  001FB6  6FD1               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;inc\CANlib.h: 278: }
  3586                           
  3587                           ;inc\CANlib.h: 277: break;
  3588  001FB8  D022               	goto	l3206
  3589  001FBA                     l3204:
  3590  001FBA  0E9F               	movlw	159
  3591  001FBC  0100               	movlb	0	; () banked
  3592  001FBE  6FCB               	movwf	??_CANInitialize& (0+255),b
  3593  001FC0  0EFF               	movlw	255
  3594  001FC2  0100               	movlb	0	; () banked
  3595  001FC4  6FCC               	movwf	(??_CANInitialize+1)& (0+255),b
  3596  001FC6  0100               	movlb	0	; () banked
  3597  001FC8  51CA               	movf	CANInitialize@flags& (0+255),w,b
  3598  001FCA  0B60               	andlw	96
  3599  001FCC  0100               	movlb	0	; () banked
  3600  001FCE  6FCD               	movwf	(??_CANInitialize+2)& (0+255),b
  3601  001FD0  6BCE               	clrf	(??_CANInitialize+3)& (0+255),b
  3602  001FD2  0100               	movlb	0	; () banked
  3603  001FD4  51CB               	movf	??_CANInitialize& (0+255),w,b
  3604  001FD6  0100               	movlb	0	; () banked
  3605  001FD8  13CD               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3606  001FDA  0100               	movlb	0	; () banked
  3607  001FDC  51CC               	movf	(??_CANInitialize+1)& (0+255),w,b
  3608  001FDE  0100               	movlb	0	; () banked
  3609  001FE0  13CE               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3610                           
  3611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3612                           ; Switch size 1, requested type "space"
  3613                           ; Number of cases is 1, Range of values is 0 to 0
  3614                           ; switch strategies available:
  3615                           ; Name         Instructions Cycles
  3616                           ; simple_byte            4     3 (average)
  3617                           ;	Chosen strategy is simple_byte
  3618  001FE2  0100               	movlb	0	; () banked
  3619  001FE4  51CE               	movf	(??_CANInitialize+3)& (0+255),w,b
  3620  001FE6  0A00               	xorlw	0	; case 0
  3621  001FE8  A4D8               	btfss	status,2,c
  3622  001FEA  D7E1               	goto	l379
  3623                           
  3624                           ; BSR set to: 0
  3625                           ; Switch size 1, requested type "space"
  3626                           ; Number of cases is 2, Range of values is 191 to 223
  3627                           ; switch strategies available:
  3628                           ; Name         Instructions Cycles
  3629                           ; simple_byte            7     4 (average)
  3630                           ;	Chosen strategy is simple_byte
  3631  001FEC  0100               	movlb	0	; () banked
  3632  001FEE  51CD               	movf	(??_CANInitialize+2)& (0+255),w,b
  3633  001FF0  0ABF               	xorlw	191	; case 191
  3634  001FF2  B4D8               	btfsc	status,2,c
  3635  001FF4  D7D7               	goto	l378
  3636  001FF6  0A60               	xorlw	96	; case 223
  3637  001FF8  B4D8               	btfsc	status,2,c
  3638  001FFA  D7D0               	goto	l3198
  3639  001FFC  D7D8               	goto	l379
  3640  001FFE                     l3206:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3644  001FFE  0E00               	movlw	0
  3645  002000  0100               	movlb	0	; () banked
  3646  002002  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3647  002004  0E00               	movlw	0
  3648  002006  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3649  002008  0E00               	movlw	0
  3650  00200A  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3651  00200C  0E00               	movlw	0
  3652  00200E  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3653  002010  C0D0  F0BC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3654  002014  0E00               	movlw	0
  3655  002016  EC8A  F000         	call	_CANSetFilter
  3656                           
  3657                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3658  00201A  0E00               	movlw	0
  3659  00201C  0100               	movlb	0	; () banked
  3660  00201E  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3661  002020  0E00               	movlw	0
  3662  002022  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3663  002024  0E00               	movlw	0
  3664  002026  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3665  002028  0E00               	movlw	0
  3666  00202A  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3667  00202C  C0D0  F0BC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3668  002030  0E01               	movlw	1
  3669  002032  EC8A  F000         	call	_CANSetFilter
  3670                           
  3671                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3672  002036  0E00               	movlw	0
  3673  002038  0100               	movlb	0	; () banked
  3674  00203A  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3675  00203C  0E00               	movlw	0
  3676  00203E  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3677  002040  0E00               	movlw	0
  3678  002042  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3679  002044  0E00               	movlw	0
  3680  002046  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3681  002048  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3682  00204C  0E02               	movlw	2
  3683  00204E  EC8A  F000         	call	_CANSetFilter
  3684                           
  3685                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3686  002052  0E00               	movlw	0
  3687  002054  0100               	movlb	0	; () banked
  3688  002056  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3689  002058  0E00               	movlw	0
  3690  00205A  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3691  00205C  0E00               	movlw	0
  3692  00205E  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3693  002060  0E00               	movlw	0
  3694  002062  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3695  002064  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3696  002068  0E03               	movlw	3
  3697  00206A  EC8A  F000         	call	_CANSetFilter
  3698                           
  3699                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3700  00206E  0E00               	movlw	0
  3701  002070  0100               	movlb	0	; () banked
  3702  002072  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3703  002074  0E00               	movlw	0
  3704  002076  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3705  002078  0E00               	movlw	0
  3706  00207A  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3707  00207C  0E00               	movlw	0
  3708  00207E  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3709  002080  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3710  002084  0E04               	movlw	4
  3711  002086  EC8A  F000         	call	_CANSetFilter
  3712                           
  3713                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3714  00208A  0E00               	movlw	0
  3715  00208C  0100               	movlb	0	; () banked
  3716  00208E  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3717  002090  0E00               	movlw	0
  3718  002092  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3719  002094  0E00               	movlw	0
  3720  002096  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3721  002098  0E00               	movlw	0
  3722  00209A  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3723  00209C  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3724  0020A0  0E05               	movlw	5
  3725  0020A2  EC8A  F000         	call	_CANSetFilter
  3726                           
  3727                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3728  0020A6  0E00               	movlw	0
  3729  0020A8  EC06  F014         	call	_CANOperationMode
  3730  0020AC  0012               	return		;funcret
  3731  0020AE                     __end_of_CANInitialize:
  3732                           	opt stack 0
  3733                           tblptru	equ	0xFF8
  3734                           tblptrh	equ	0xFF7
  3735                           tblptrl	equ	0xFF6
  3736                           tablat	equ	0xFF5
  3737                           prodh	equ	0xFF4
  3738                           prodl	equ	0xFF3
  3739                           intcon	equ	0xFF2
  3740                           intcon2	equ	0xFF1
  3741                           intcon3	equ	0xFF0
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           postdec1	equ	0xFE5
  3745                           fsr1l	equ	0xFE1
  3746                           indf2	equ	0xFDF
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _CANSetMask *****************
  3752 ;; Defined at:
  3753 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  numBuffer       1    wreg     enum E16878
  3756 ;;  mask            4   22[BANK0 ] unsigned long 
  3757 ;;  type            1   26[BANK0 ] enum E16844
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  numBuffer       1   31[BANK0 ] enum E16878
  3760 ;;  tamp            4   32[BANK0 ] unsigned long 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;		None               void
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3770 ;;      Params:         0       5       0       0
  3771 ;;      Locals:         0       5       0       0
  3772 ;;      Temps:          0       4       0       0
  3773 ;;      Totals:         0      14       0       0
  3774 ;;Total ram usage:       14 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    4
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_CANInitialize
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text8
  3785  0018B2                     __ptext8:
  3786                           	opt stack 0
  3787  0018B2                     _CANSetMask:
  3788                           	opt stack 24
  3789                           
  3790                           ;incstack = 0
  3791                           ;CANSetMask@numBuffer stored from wreg
  3792  0018B2  0100               	movlb	0	; () banked
  3793  0018B4  6FC1               	movwf	CANSetMask@numBuffer& (0+255),b
  3794                           
  3795                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3796  0018B6  0100               	movlb	0	; () banked
  3797  0018B8  05C1               	decf	CANSetMask@numBuffer& (0+255),w,b
  3798  0018BA  A4D8               	btfss	status,2,c
  3799  0018BC  D056               	goto	l2762
  3800                           
  3801                           ; BSR set to: 0
  3802  0018BE  0100               	movlb	0	; () banked
  3803  0018C0  29BC               	incf	CANSetMask@type& (0+255),w,b
  3804  0018C2  A4D8               	btfss	status,2,c
  3805  0018C4  D052               	goto	l2762
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;inc\CANlib.h: 644: {
  3809                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3810  0018C6  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  3811  0018CA  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3812  0018CE  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3813  0018D2  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3814  0018D6  0E04               	movlw	4
  3815  0018D8  D006               	goto	u2350
  3816  0018DA                     u2355:
  3817  0018DA  0100               	movlb	0	; () banked
  3818  0018DC  90D8               	bcf	status,0,c
  3819  0018DE  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3820  0018E0  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3821  0018E2  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3822  0018E4  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  3823  0018E6                     u2350:
  3824  0018E6  2EE8               	decfsz	wreg,f,c
  3825  0018E8  D7F8               	goto	u2355
  3826  0018EA  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3827  0018EE  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3828  0018F2  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3829  0018F6  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3833  0018FA  0100               	movlb	0	; () banked
  3834  0018FC  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  3835  0018FE  0100               	movlb	0	; () banked
  3836  001900  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3837  001902  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3838  001904  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3839  001906  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3843  001908  C0C2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3847  00190C  0E07               	movlw	7
  3848  00190E  0100               	movlb	0	; () banked
  3849  001910  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  3850  001912  0100               	movlb	0	; () banked
  3851  001914  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3852  001916  0E00               	movlw	0
  3853  001918  0100               	movlb	0	; () banked
  3854  00191A  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3855  00191C  0100               	movlb	0	; () banked
  3856  00191E  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3857  001920  0E00               	movlw	0
  3858  001922  0100               	movlb	0	; () banked
  3859  001924  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3860  001926  0100               	movlb	0	; () banked
  3861  001928  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3862  00192A  0E00               	movlw	0
  3863  00192C  0100               	movlb	0	; () banked
  3864  00192E  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3865  001930  0100               	movlb	0	; () banked
  3866  001932  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3870  001934  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  3871  001938  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3872  00193C  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3873  001940  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3874  001944  0E05               	movlw	5
  3875  001946                     u2365:
  3876  001946  90D8               	bcf	status,0,c
  3877  001948  0100               	movlb	0	; () banked
  3878  00194A  37BD               	rlcf	??_CANSetMask& (0+255),f,b
  3879  00194C  37BE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3880  00194E  37BF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3881  001950  37C0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3882  001952  2EE8               	decfsz	wreg,f,c
  3883  001954  D7F8               	goto	u2365
  3884  001956  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3885  00195A  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3886  00195E  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3887  001962  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3891  001966  C0C2  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3892  00196A                     l2762:
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;inc\CANlib.h: 652: }
  3896                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3897  00196A  0E02               	movlw	2
  3898  00196C  0100               	movlb	0	; () banked
  3899  00196E  19C1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3900  001970  A4D8               	btfss	status,2,c
  3901  001972  D056               	goto	l2778
  3902                           
  3903                           ; BSR set to: 0
  3904  001974  0100               	movlb	0	; () banked
  3905  001976  29BC               	incf	CANSetMask@type& (0+255),w,b
  3906  001978  A4D8               	btfss	status,2,c
  3907  00197A  D052               	goto	l2778
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;inc\CANlib.h: 655: {
  3911                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3912  00197C  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  3913  001980  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3914  001984  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3915  001988  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3916  00198C  0E04               	movlw	4
  3917  00198E  D006               	goto	u2390
  3918  001990                     u2395:
  3919  001990  0100               	movlb	0	; () banked
  3920  001992  90D8               	bcf	status,0,c
  3921  001994  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3922  001996  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3923  001998  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3924  00199A  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  3925  00199C                     u2390:
  3926  00199C  2EE8               	decfsz	wreg,f,c
  3927  00199E  D7F8               	goto	u2395
  3928  0019A0  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3929  0019A4  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3930  0019A8  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3931  0019AC  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3935  0019B0  0100               	movlb	0	; () banked
  3936  0019B2  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  3937  0019B4  0100               	movlb	0	; () banked
  3938  0019B6  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3939  0019B8  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3940  0019BA  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3941  0019BC  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3945  0019BE  C0C2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3949  0019C2  0E07               	movlw	7
  3950  0019C4  0100               	movlb	0	; () banked
  3951  0019C6  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  3952  0019C8  0100               	movlb	0	; () banked
  3953  0019CA  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3954  0019CC  0E00               	movlw	0
  3955  0019CE  0100               	movlb	0	; () banked
  3956  0019D0  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3957  0019D2  0100               	movlb	0	; () banked
  3958  0019D4  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3959  0019D6  0E00               	movlw	0
  3960  0019D8  0100               	movlb	0	; () banked
  3961  0019DA  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3962  0019DC  0100               	movlb	0	; () banked
  3963  0019DE  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3964  0019E0  0E00               	movlw	0
  3965  0019E2  0100               	movlb	0	; () banked
  3966  0019E4  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3967  0019E6  0100               	movlb	0	; () banked
  3968  0019E8  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3972  0019EA  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  3973  0019EE  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3974  0019F2  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3975  0019F6  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3976  0019FA  0E05               	movlw	5
  3977  0019FC                     u2405:
  3978  0019FC  90D8               	bcf	status,0,c
  3979  0019FE  0100               	movlb	0	; () banked
  3980  001A00  37BD               	rlcf	??_CANSetMask& (0+255),f,b
  3981  001A02  37BE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3982  001A04  37BF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3983  001A06  37C0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3984  001A08  2EE8               	decfsz	wreg,f,c
  3985  001A0A  D7F8               	goto	u2405
  3986  001A0C  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3987  001A10  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3988  001A14  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3989  001A18  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3993  001A1C  C0C2  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3994  001A20                     l2778:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;inc\CANlib.h: 663: }
  3998                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3999  001A20  0100               	movlb	0	; () banked
  4000  001A22  05C1               	decf	CANSetMask@numBuffer& (0+255),w,b
  4001  001A24  A4D8               	btfss	status,2,c
  4002  001A26  D087               	goto	l2810
  4003                           
  4004                           ; BSR set to: 0
  4005  001A28  0EF7               	movlw	247
  4006  001A2A  0100               	movlb	0	; () banked
  4007  001A2C  19BC               	xorwf	CANSetMask@type& (0+255),w,b
  4008  001A2E  A4D8               	btfss	status,2,c
  4009  001A30  D082               	goto	l2810
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 666: {
  4013                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4014  001A32  0100               	movlb	0	; () banked
  4015  001A34  51B8               	movf	CANSetMask@mask& (0+255),w,b
  4016  001A36  0100               	movlb	0	; () banked
  4017  001A38  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4018  001A3A  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4019  001A3C  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4020  001A3E  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4024  001A40  C0C2  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4028  001A44  0E00               	movlw	0
  4029  001A46  0100               	movlb	0	; () banked
  4030  001A48  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  4031  001A4A  0100               	movlb	0	; () banked
  4032  001A4C  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4033  001A4E  0EFF               	movlw	255
  4034  001A50  0100               	movlb	0	; () banked
  4035  001A52  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4036  001A54  0100               	movlb	0	; () banked
  4037  001A56  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4038  001A58  0E00               	movlw	0
  4039  001A5A  0100               	movlb	0	; () banked
  4040  001A5C  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4041  001A5E  0100               	movlb	0	; () banked
  4042  001A60  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4043  001A62  0E00               	movlw	0
  4044  001A64  0100               	movlb	0	; () banked
  4045  001A66  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4046  001A68  0100               	movlb	0	; () banked
  4047  001A6A  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4051  001A6C  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  4052  001A70  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4053  001A74  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4054  001A78  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4055  001A7C  C0BE  F0BD         	movff	??_CANSetMask+1,??_CANSetMask
  4056  001A80  C0BF  F0BE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4057  001A84  C0C0  F0BF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4058  001A88  0100               	movlb	0	; () banked
  4059  001A8A  6BC0               	clrf	(??_CANSetMask+3)& (0+255),b
  4060  001A8C  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4061  001A90  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4062  001A94  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4063  001A98  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4067  001A9C  C0C2  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4071  001AA0  0100               	movlb	0	; () banked
  4072  001AA2  A1BA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4073  001AA4  D003               	goto	l452
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4077  001AA6  010F               	movlb	15	; () banked
  4078  001AA8  8119               	bsf	25,0,b	;volatile
  4079  001AAA  D002               	goto	l453
  4080  001AAC                     l452:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;inc\CANlib.h: 676: else
  4084                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4085  001AAC  010F               	movlb	15	; () banked
  4086  001AAE  9119               	bcf	25,0,b	;volatile
  4087  001AB0                     l453:
  4088                           
  4089                           ; BSR set to: 15
  4090                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4091  001AB0  0100               	movlb	0	; () banked
  4092  001AB2  A3BA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4093  001AB4  D003               	goto	l454
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4097  001AB6  010F               	movlb	15	; () banked
  4098  001AB8  8319               	bsf	25,1,b	;volatile
  4099  001ABA  D002               	goto	l455
  4100  001ABC                     l454:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;inc\CANlib.h: 681: else
  4104                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4105  001ABC  010F               	movlb	15	; () banked
  4106  001ABE  9319               	bcf	25,1,b	;volatile
  4107  001AC0                     l455:
  4108                           
  4109                           ; BSR set to: 15
  4110                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4111  001AC0  0100               	movlb	0	; () banked
  4112  001AC2  A5BA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4113  001AC4  D003               	goto	l456
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4117  001AC6  010F               	movlb	15	; () banked
  4118  001AC8  8B19               	bsf	25,5,b	;volatile
  4119  001ACA  D002               	goto	l457
  4120  001ACC                     l456:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;inc\CANlib.h: 686: else
  4124                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4125  001ACC  010F               	movlb	15	; () banked
  4126  001ACE  9B19               	bcf	25,5,b	;volatile
  4127  001AD0                     l457:
  4128                           
  4129                           ; BSR set to: 15
  4130                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4131  001AD0  0100               	movlb	0	; () banked
  4132  001AD2  A7BA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4133  001AD4  D003               	goto	l458
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4137  001AD6  010F               	movlb	15	; () banked
  4138  001AD8  8D19               	bsf	25,6,b	;volatile
  4139  001ADA  D002               	goto	l459
  4140  001ADC                     l458:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;inc\CANlib.h: 691: else
  4144                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4145  001ADC  010F               	movlb	15	; () banked
  4146  001ADE  9D19               	bcf	25,6,b	;volatile
  4147  001AE0                     l459:
  4148                           
  4149                           ; BSR set to: 15
  4150                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4151  001AE0  0100               	movlb	0	; () banked
  4152  001AE2  A9BA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4153  001AE4  D003               	goto	l460
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4157  001AE6  010F               	movlb	15	; () banked
  4158  001AE8  8F19               	bsf	25,7,b	;volatile
  4159  001AEA  D002               	goto	l2804
  4160  001AEC                     l460:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 696: else
  4164                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4165  001AEC  010F               	movlb	15	; () banked
  4166  001AEE  9F19               	bcf	25,7,b	;volatile
  4167  001AF0                     l2804:
  4168                           
  4169                           ; BSR set to: 15
  4170                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4171  001AF0  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  4172  001AF4  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4173  001AF8  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4174  001AFC  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4175  001B00  0E16               	movlw	22
  4176  001B02  D006               	goto	u2480
  4177  001B04                     u2485:
  4178  001B04  0100               	movlb	0	; () banked
  4179  001B06  90D8               	bcf	status,0,c
  4180  001B08  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4181  001B0A  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4182  001B0C  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4183  001B0E  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  4184  001B10                     u2480:
  4185  001B10  2EE8               	decfsz	wreg,f,c
  4186  001B12  D7F8               	goto	u2485
  4187  001B14  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4188  001B18  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4189  001B1C  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4190  001B20  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4194  001B24  0100               	movlb	0	; () banked
  4195  001B26  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  4196  001B28  0100               	movlb	0	; () banked
  4197  001B2A  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4198  001B2C  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4199  001B2E  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4200  001B30  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4204  001B32  C0C2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4205  001B36                     l2810:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;inc\CANlib.h: 702: }
  4209                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4210  001B36  0E02               	movlw	2
  4211  001B38  0100               	movlb	0	; () banked
  4212  001B3A  19C1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4213  001B3C  A4D8               	btfss	status,2,c
  4214  001B3E  0012               	return	
  4215                           
  4216                           ; BSR set to: 0
  4217  001B40  0EF7               	movlw	247
  4218  001B42  0100               	movlb	0	; () banked
  4219  001B44  19BC               	xorwf	CANSetMask@type& (0+255),w,b
  4220  001B46  A4D8               	btfss	status,2,c
  4221  001B48  0012               	return	
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;inc\CANlib.h: 705: {
  4225                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4226  001B4A  0100               	movlb	0	; () banked
  4227  001B4C  51B8               	movf	CANSetMask@mask& (0+255),w,b
  4228  001B4E  0100               	movlb	0	; () banked
  4229  001B50  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4230  001B52  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4231  001B54  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4232  001B56  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4236  001B58  C0C2  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4240  001B5C  0E00               	movlw	0
  4241  001B5E  0100               	movlb	0	; () banked
  4242  001B60  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  4243  001B62  0100               	movlb	0	; () banked
  4244  001B64  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4245  001B66  0EFF               	movlw	255
  4246  001B68  0100               	movlb	0	; () banked
  4247  001B6A  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4248  001B6C  0100               	movlb	0	; () banked
  4249  001B6E  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4250  001B70  0E00               	movlw	0
  4251  001B72  0100               	movlb	0	; () banked
  4252  001B74  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4253  001B76  0100               	movlb	0	; () banked
  4254  001B78  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4255  001B7A  0E00               	movlw	0
  4256  001B7C  0100               	movlb	0	; () banked
  4257  001B7E  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4258  001B80  0100               	movlb	0	; () banked
  4259  001B82  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4263  001B84  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  4264  001B88  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4265  001B8C  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4266  001B90  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4267  001B94  C0BE  F0BD         	movff	??_CANSetMask+1,??_CANSetMask
  4268  001B98  C0BF  F0BE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4269  001B9C  C0C0  F0BF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4270  001BA0  0100               	movlb	0	; () banked
  4271  001BA2  6BC0               	clrf	(??_CANSetMask+3)& (0+255),b
  4272  001BA4  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4273  001BA8  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4274  001BAC  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4275  001BB0  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4279  001BB4  C0C2  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4283  001BB8  0100               	movlb	0	; () banked
  4284  001BBA  A1BA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4285  001BBC  D003               	goto	l463
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4289  001BBE  010F               	movlb	15	; () banked
  4290  001BC0  811D               	bsf	29,0,b	;volatile
  4291  001BC2  D002               	goto	l464
  4292  001BC4                     l463:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;inc\CANlib.h: 715: else
  4296                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4297  001BC4  010F               	movlb	15	; () banked
  4298  001BC6  911D               	bcf	29,0,b	;volatile
  4299  001BC8                     l464:
  4300                           
  4301                           ; BSR set to: 15
  4302                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4303  001BC8  0100               	movlb	0	; () banked
  4304  001BCA  A3BA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4305  001BCC  D003               	goto	l465
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4309  001BCE  010F               	movlb	15	; () banked
  4310  001BD0  831D               	bsf	29,1,b	;volatile
  4311  001BD2  D002               	goto	l466
  4312  001BD4                     l465:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;inc\CANlib.h: 720: else
  4316                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4317  001BD4  010F               	movlb	15	; () banked
  4318  001BD6  931D               	bcf	29,1,b	;volatile
  4319  001BD8                     l466:
  4320                           
  4321                           ; BSR set to: 15
  4322                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4323  001BD8  0100               	movlb	0	; () banked
  4324  001BDA  A5BA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4325  001BDC  D003               	goto	l467
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4329  001BDE  010F               	movlb	15	; () banked
  4330  001BE0  8B1D               	bsf	29,5,b	;volatile
  4331  001BE2  D002               	goto	l468
  4332  001BE4                     l467:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;inc\CANlib.h: 725: else
  4336                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4337  001BE4  010F               	movlb	15	; () banked
  4338  001BE6  9B1D               	bcf	29,5,b	;volatile
  4339  001BE8                     l468:
  4340                           
  4341                           ; BSR set to: 15
  4342                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4343  001BE8  0100               	movlb	0	; () banked
  4344  001BEA  A7BA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4345  001BEC  D003               	goto	l469
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4349  001BEE  010F               	movlb	15	; () banked
  4350  001BF0  8D1D               	bsf	29,6,b	;volatile
  4351  001BF2  D002               	goto	l470
  4352  001BF4                     l469:
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;inc\CANlib.h: 730: else
  4356                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4357  001BF4  010F               	movlb	15	; () banked
  4358  001BF6  9D1D               	bcf	29,6,b	;volatile
  4359  001BF8                     l470:
  4360                           
  4361                           ; BSR set to: 15
  4362                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4363  001BF8  0100               	movlb	0	; () banked
  4364  001BFA  A9BA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4365  001BFC  D003               	goto	l471
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4369  001BFE  010F               	movlb	15	; () banked
  4370  001C00  8F1D               	bsf	29,7,b	;volatile
  4371  001C02  D002               	goto	l2836
  4372  001C04                     l471:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;inc\CANlib.h: 735: else
  4376                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4377  001C04  010F               	movlb	15	; () banked
  4378  001C06  9F1D               	bcf	29,7,b	;volatile
  4379  001C08                     l2836:
  4380                           
  4381                           ; BSR set to: 15
  4382                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4383  001C08  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  4384  001C0C  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4385  001C10  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4386  001C14  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4387  001C18  0E16               	movlw	22
  4388  001C1A  D006               	goto	u2560
  4389  001C1C                     u2565:
  4390  001C1C  0100               	movlb	0	; () banked
  4391  001C1E  90D8               	bcf	status,0,c
  4392  001C20  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4393  001C22  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4394  001C24  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4395  001C26  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  4396  001C28                     u2560:
  4397  001C28  2EE8               	decfsz	wreg,f,c
  4398  001C2A  D7F8               	goto	u2565
  4399  001C2C  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4400  001C30  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4401  001C34  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4402  001C38  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4406  001C3C  0100               	movlb	0	; () banked
  4407  001C3E  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  4408  001C40  0100               	movlb	0	; () banked
  4409  001C42  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4410  001C44  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4411  001C46  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4412  001C48  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4416  001C4A  C0C2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4417  001C4E  0012               	return	
  4418  001C50                     __end_of_CANSetMask:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           tblptrh	equ	0xFF7
  4422                           tblptrl	equ	0xFF6
  4423                           tablat	equ	0xFF5
  4424                           prodh	equ	0xFF4
  4425                           prodl	equ	0xFF3
  4426                           intcon	equ	0xFF2
  4427                           intcon2	equ	0xFF1
  4428                           intcon3	equ	0xFF0
  4429                           postinc0	equ	0xFEE
  4430                           wreg	equ	0xFE8
  4431                           postdec1	equ	0xFE5
  4432                           fsr1l	equ	0xFE1
  4433                           indf2	equ	0xFDF
  4434                           fsr2h	equ	0xFDA
  4435                           fsr2l	equ	0xFD9
  4436                           status	equ	0xFD8
  4437                           
  4438 ;; *************** function _CANSetFilter *****************
  4439 ;; Defined at:
  4440 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  numBuffer       1    wreg     enum E16881
  4443 ;;  filter          4   22[BANK0 ] unsigned long 
  4444 ;;  type            1   26[BANK0 ] enum E16844
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  numBuffer       1   31[BANK0 ] enum E16881
  4447 ;;  tamp            4   32[BANK0 ] unsigned long 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;		None               void
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4457 ;;      Params:         0       5       0       0
  4458 ;;      Locals:         0       5       0       0
  4459 ;;      Temps:          0       4       0       0
  4460 ;;      Totals:         0      14       0       0
  4461 ;;Total ram usage:       14 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:    4
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_CANInitialize
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text9
  4472  000114                     __ptext9:
  4473                           	opt stack 0
  4474  000114                     _CANSetFilter:
  4475                           	opt stack 24
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;incstack = 0
  4479                           ;CANSetFilter@numBuffer stored from wreg
  4480  000114  0100               	movlb	0	; () banked
  4481  000116  6FC1               	movwf	CANSetFilter@numBuffer& (0+255),b
  4482                           
  4483                           ;inc\CANlib.h: 750: unsigned long tamp;
  4484                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4485  000118  0100               	movlb	0	; () banked
  4486  00011A  51C1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4487  00011C  0100               	movlb	0	; () banked
  4488  00011E  A4D8               	btfss	status,2,c
  4489  000120  D058               	goto	l2860
  4490                           
  4491                           ; BSR set to: 0
  4492  000122  0100               	movlb	0	; () banked
  4493  000124  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4494  000126  A4D8               	btfss	status,2,c
  4495  000128  D054               	goto	l2860
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 753: {
  4499                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4500  00012A  010F               	movlb	15	; () banked
  4501  00012C  9701               	bcf	1,3,b	;volatile
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4505  00012E  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4506  000132  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4507  000136  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4508  00013A  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4509  00013E  0E04               	movlw	4
  4510  000140  D006               	goto	u2590
  4511  000142                     u2595:
  4512  000142  0100               	movlb	0	; () banked
  4513  000144  90D8               	bcf	status,0,c
  4514  000146  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4515  000148  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4516  00014A  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4517  00014C  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4518  00014E                     u2590:
  4519  00014E  2EE8               	decfsz	wreg,f,c
  4520  000150  D7F8               	goto	u2595
  4521  000152  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4522  000156  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4523  00015A  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4524  00015E  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4528  000162  0100               	movlb	0	; () banked
  4529  000164  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4530  000166  0100               	movlb	0	; () banked
  4531  000168  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4532  00016A  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4533  00016C  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4534  00016E  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4538  000170  C0C2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4542  000174  0E07               	movlw	7
  4543  000176  0100               	movlb	0	; () banked
  4544  000178  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4545  00017A  0100               	movlb	0	; () banked
  4546  00017C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4547  00017E  0E00               	movlw	0
  4548  000180  0100               	movlb	0	; () banked
  4549  000182  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4550  000184  0100               	movlb	0	; () banked
  4551  000186  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4552  000188  0E00               	movlw	0
  4553  00018A  0100               	movlb	0	; () banked
  4554  00018C  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4555  00018E  0100               	movlb	0	; () banked
  4556  000190  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4557  000192  0E00               	movlw	0
  4558  000194  0100               	movlb	0	; () banked
  4559  000196  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4560  000198  0100               	movlb	0	; () banked
  4561  00019A  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4565  00019C  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4566  0001A0  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4567  0001A4  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4568  0001A8  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4569  0001AC  0E05               	movlw	5
  4570  0001AE                     u2605:
  4571  0001AE  90D8               	bcf	status,0,c
  4572  0001B0  0100               	movlb	0	; () banked
  4573  0001B2  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4574  0001B4  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4575  0001B6  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4576  0001B8  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4577  0001BA  2EE8               	decfsz	wreg,f,c
  4578  0001BC  D7F8               	goto	u2605
  4579  0001BE  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4580  0001C2  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4581  0001C6  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4582  0001CA  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4586  0001CE  C0C2  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4587  0001D2                     l2860:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 763: }
  4591                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4592  0001D2  0100               	movlb	0	; () banked
  4593  0001D4  05C1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4594  0001D6  A4D8               	btfss	status,2,c
  4595  0001D8  D058               	goto	l2878
  4596                           
  4597                           ; BSR set to: 0
  4598  0001DA  0100               	movlb	0	; () banked
  4599  0001DC  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4600  0001DE  A4D8               	btfss	status,2,c
  4601  0001E0  D054               	goto	l2878
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;inc\CANlib.h: 766: {
  4605                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4606  0001E2  010F               	movlb	15	; () banked
  4607  0001E4  9705               	bcf	5,3,b	;volatile
  4608                           
  4609                           ; BSR set to: 15
  4610                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4611  0001E6  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4612  0001EA  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4613  0001EE  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4614  0001F2  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4615  0001F6  0E04               	movlw	4
  4616  0001F8  D006               	goto	u2630
  4617  0001FA                     u2635:
  4618  0001FA  0100               	movlb	0	; () banked
  4619  0001FC  90D8               	bcf	status,0,c
  4620  0001FE  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4621  000200  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4622  000202  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4623  000204  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4624  000206                     u2630:
  4625  000206  2EE8               	decfsz	wreg,f,c
  4626  000208  D7F8               	goto	u2635
  4627  00020A  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4628  00020E  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4629  000212  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4630  000216  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4634  00021A  0100               	movlb	0	; () banked
  4635  00021C  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4636  00021E  0100               	movlb	0	; () banked
  4637  000220  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4638  000222  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4639  000224  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4640  000226  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4644  000228  C0C2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4648  00022C  0E07               	movlw	7
  4649  00022E  0100               	movlb	0	; () banked
  4650  000230  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4651  000232  0100               	movlb	0	; () banked
  4652  000234  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4653  000236  0E00               	movlw	0
  4654  000238  0100               	movlb	0	; () banked
  4655  00023A  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4656  00023C  0100               	movlb	0	; () banked
  4657  00023E  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4658  000240  0E00               	movlw	0
  4659  000242  0100               	movlb	0	; () banked
  4660  000244  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4661  000246  0100               	movlb	0	; () banked
  4662  000248  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4663  00024A  0E00               	movlw	0
  4664  00024C  0100               	movlb	0	; () banked
  4665  00024E  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4666  000250  0100               	movlb	0	; () banked
  4667  000252  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4671  000254  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4672  000258  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4673  00025C  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4674  000260  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4675  000264  0E05               	movlw	5
  4676  000266                     u2645:
  4677  000266  90D8               	bcf	status,0,c
  4678  000268  0100               	movlb	0	; () banked
  4679  00026A  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4680  00026C  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4681  00026E  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4682  000270  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4683  000272  2EE8               	decfsz	wreg,f,c
  4684  000274  D7F8               	goto	u2645
  4685  000276  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4686  00027A  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4687  00027E  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4688  000282  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4692  000286  C0C2  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4693  00028A                     l2878:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;inc\CANlib.h: 776: }
  4697                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4698  00028A  0E02               	movlw	2
  4699  00028C  0100               	movlb	0	; () banked
  4700  00028E  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4701  000290  A4D8               	btfss	status,2,c
  4702  000292  D058               	goto	l2896
  4703                           
  4704                           ; BSR set to: 0
  4705  000294  0100               	movlb	0	; () banked
  4706  000296  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4707  000298  A4D8               	btfss	status,2,c
  4708  00029A  D054               	goto	l2896
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;inc\CANlib.h: 779: {
  4712                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4713  00029C  010F               	movlb	15	; () banked
  4714  00029E  9709               	bcf	9,3,b	;volatile
  4715                           
  4716                           ; BSR set to: 15
  4717                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4718  0002A0  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4719  0002A4  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4720  0002A8  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4721  0002AC  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4722  0002B0  0E04               	movlw	4
  4723  0002B2  D006               	goto	u2670
  4724  0002B4                     u2675:
  4725  0002B4  0100               	movlb	0	; () banked
  4726  0002B6  90D8               	bcf	status,0,c
  4727  0002B8  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4728  0002BA  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4729  0002BC  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4730  0002BE  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4731  0002C0                     u2670:
  4732  0002C0  2EE8               	decfsz	wreg,f,c
  4733  0002C2  D7F8               	goto	u2675
  4734  0002C4  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4735  0002C8  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4736  0002CC  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4737  0002D0  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4741  0002D4  0100               	movlb	0	; () banked
  4742  0002D6  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4743  0002D8  0100               	movlb	0	; () banked
  4744  0002DA  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4745  0002DC  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4746  0002DE  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4747  0002E0  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4751  0002E2  C0C2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4755  0002E6  0E07               	movlw	7
  4756  0002E8  0100               	movlb	0	; () banked
  4757  0002EA  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4758  0002EC  0100               	movlb	0	; () banked
  4759  0002EE  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4760  0002F0  0E00               	movlw	0
  4761  0002F2  0100               	movlb	0	; () banked
  4762  0002F4  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4763  0002F6  0100               	movlb	0	; () banked
  4764  0002F8  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4765  0002FA  0E00               	movlw	0
  4766  0002FC  0100               	movlb	0	; () banked
  4767  0002FE  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4768  000300  0100               	movlb	0	; () banked
  4769  000302  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4770  000304  0E00               	movlw	0
  4771  000306  0100               	movlb	0	; () banked
  4772  000308  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4773  00030A  0100               	movlb	0	; () banked
  4774  00030C  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4778  00030E  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4779  000312  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4780  000316  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4781  00031A  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4782  00031E  0E05               	movlw	5
  4783  000320                     u2685:
  4784  000320  90D8               	bcf	status,0,c
  4785  000322  0100               	movlb	0	; () banked
  4786  000324  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4787  000326  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4788  000328  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4789  00032A  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4790  00032C  2EE8               	decfsz	wreg,f,c
  4791  00032E  D7F8               	goto	u2685
  4792  000330  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4793  000334  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4794  000338  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4795  00033C  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4799  000340  C0C2  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4800  000344                     l2896:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 789: }
  4804                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4805  000344  0E03               	movlw	3
  4806  000346  0100               	movlb	0	; () banked
  4807  000348  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4808  00034A  A4D8               	btfss	status,2,c
  4809  00034C  D058               	goto	l2914
  4810                           
  4811                           ; BSR set to: 0
  4812  00034E  0100               	movlb	0	; () banked
  4813  000350  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4814  000352  A4D8               	btfss	status,2,c
  4815  000354  D054               	goto	l2914
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;inc\CANlib.h: 792: {
  4819                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4820  000356  010F               	movlb	15	; () banked
  4821  000358  970D               	bcf	13,3,b	;volatile
  4822                           
  4823                           ; BSR set to: 15
  4824                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4825  00035A  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4826  00035E  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4827  000362  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4828  000366  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4829  00036A  0E04               	movlw	4
  4830  00036C  D006               	goto	u2710
  4831  00036E                     u2715:
  4832  00036E  0100               	movlb	0	; () banked
  4833  000370  90D8               	bcf	status,0,c
  4834  000372  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4835  000374  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4836  000376  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4837  000378  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4838  00037A                     u2710:
  4839  00037A  2EE8               	decfsz	wreg,f,c
  4840  00037C  D7F8               	goto	u2715
  4841  00037E  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4842  000382  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4843  000386  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4844  00038A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4848  00038E  0100               	movlb	0	; () banked
  4849  000390  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4850  000392  0100               	movlb	0	; () banked
  4851  000394  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4852  000396  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4853  000398  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4854  00039A  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4858  00039C  C0C2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4862  0003A0  0E07               	movlw	7
  4863  0003A2  0100               	movlb	0	; () banked
  4864  0003A4  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4865  0003A6  0100               	movlb	0	; () banked
  4866  0003A8  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4867  0003AA  0E00               	movlw	0
  4868  0003AC  0100               	movlb	0	; () banked
  4869  0003AE  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4870  0003B0  0100               	movlb	0	; () banked
  4871  0003B2  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4872  0003B4  0E00               	movlw	0
  4873  0003B6  0100               	movlb	0	; () banked
  4874  0003B8  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4875  0003BA  0100               	movlb	0	; () banked
  4876  0003BC  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4877  0003BE  0E00               	movlw	0
  4878  0003C0  0100               	movlb	0	; () banked
  4879  0003C2  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4880  0003C4  0100               	movlb	0	; () banked
  4881  0003C6  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4885  0003C8  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4886  0003CC  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4887  0003D0  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4888  0003D4  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4889  0003D8  0E05               	movlw	5
  4890  0003DA                     u2725:
  4891  0003DA  90D8               	bcf	status,0,c
  4892  0003DC  0100               	movlb	0	; () banked
  4893  0003DE  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4894  0003E0  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4895  0003E2  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4896  0003E4  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4897  0003E6  2EE8               	decfsz	wreg,f,c
  4898  0003E8  D7F8               	goto	u2725
  4899  0003EA  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4900  0003EE  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4901  0003F2  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4902  0003F6  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4906  0003FA  C0C2  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4907  0003FE                     l2914:
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 802: }
  4911                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4912  0003FE  0E04               	movlw	4
  4913  000400  0100               	movlb	0	; () banked
  4914  000402  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4915  000404  A4D8               	btfss	status,2,c
  4916  000406  D058               	goto	l2932
  4917                           
  4918                           ; BSR set to: 0
  4919  000408  0100               	movlb	0	; () banked
  4920  00040A  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4921  00040C  A4D8               	btfss	status,2,c
  4922  00040E  D054               	goto	l2932
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;inc\CANlib.h: 805: {
  4926                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4927  000410  010F               	movlb	15	; () banked
  4928  000412  9711               	bcf	17,3,b	;volatile
  4929                           
  4930                           ; BSR set to: 15
  4931                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4932  000414  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4933  000418  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4934  00041C  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4935  000420  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4936  000424  0E04               	movlw	4
  4937  000426  D006               	goto	u2750
  4938  000428                     u2755:
  4939  000428  0100               	movlb	0	; () banked
  4940  00042A  90D8               	bcf	status,0,c
  4941  00042C  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4942  00042E  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4943  000430  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4944  000432  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4945  000434                     u2750:
  4946  000434  2EE8               	decfsz	wreg,f,c
  4947  000436  D7F8               	goto	u2755
  4948  000438  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4949  00043C  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4950  000440  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4951  000444  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4955  000448  0100               	movlb	0	; () banked
  4956  00044A  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4957  00044C  0100               	movlb	0	; () banked
  4958  00044E  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4959  000450  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4960  000452  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4961  000454  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4965  000456  C0C2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4969  00045A  0E07               	movlw	7
  4970  00045C  0100               	movlb	0	; () banked
  4971  00045E  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4972  000460  0100               	movlb	0	; () banked
  4973  000462  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4974  000464  0E00               	movlw	0
  4975  000466  0100               	movlb	0	; () banked
  4976  000468  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4977  00046A  0100               	movlb	0	; () banked
  4978  00046C  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4979  00046E  0E00               	movlw	0
  4980  000470  0100               	movlb	0	; () banked
  4981  000472  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4982  000474  0100               	movlb	0	; () banked
  4983  000476  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4984  000478  0E00               	movlw	0
  4985  00047A  0100               	movlb	0	; () banked
  4986  00047C  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4987  00047E  0100               	movlb	0	; () banked
  4988  000480  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4992  000482  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4993  000486  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4994  00048A  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4995  00048E  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4996  000492  0E05               	movlw	5
  4997  000494                     u2765:
  4998  000494  90D8               	bcf	status,0,c
  4999  000496  0100               	movlb	0	; () banked
  5000  000498  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  5001  00049A  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5002  00049C  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5003  00049E  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5004  0004A0  2EE8               	decfsz	wreg,f,c
  5005  0004A2  D7F8               	goto	u2765
  5006  0004A4  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5007  0004A8  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5008  0004AC  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5009  0004B0  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5013  0004B4  C0C2  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5014  0004B8                     l2932:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;inc\CANlib.h: 815: }
  5018                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5019  0004B8  0E05               	movlw	5
  5020  0004BA  0100               	movlb	0	; () banked
  5021  0004BC  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5022  0004BE  A4D8               	btfss	status,2,c
  5023  0004C0  D058               	goto	l2950
  5024                           
  5025                           ; BSR set to: 0
  5026  0004C2  0100               	movlb	0	; () banked
  5027  0004C4  29BC               	incf	CANSetFilter@type& (0+255),w,b
  5028  0004C6  A4D8               	btfss	status,2,c
  5029  0004C8  D054               	goto	l2950
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;inc\CANlib.h: 818: {
  5033                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5034  0004CA  010F               	movlb	15	; () banked
  5035  0004CC  9715               	bcf	21,3,b	;volatile
  5036                           
  5037                           ; BSR set to: 15
  5038                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5039  0004CE  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5040  0004D2  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5041  0004D6  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5042  0004DA  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5043  0004DE  0E04               	movlw	4
  5044  0004E0  D006               	goto	u2790
  5045  0004E2                     u2795:
  5046  0004E2  0100               	movlb	0	; () banked
  5047  0004E4  90D8               	bcf	status,0,c
  5048  0004E6  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5049  0004E8  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5050  0004EA  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5051  0004EC  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5052  0004EE                     u2790:
  5053  0004EE  2EE8               	decfsz	wreg,f,c
  5054  0004F0  D7F8               	goto	u2795
  5055  0004F2  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5056  0004F6  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5057  0004FA  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5058  0004FE  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5062  000502  0100               	movlb	0	; () banked
  5063  000504  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5064  000506  0100               	movlb	0	; () banked
  5065  000508  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5066  00050A  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5067  00050C  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5068  00050E  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5072  000510  C0C2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5076  000514  0E07               	movlw	7
  5077  000516  0100               	movlb	0	; () banked
  5078  000518  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5079  00051A  0100               	movlb	0	; () banked
  5080  00051C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5081  00051E  0E00               	movlw	0
  5082  000520  0100               	movlb	0	; () banked
  5083  000522  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5084  000524  0100               	movlb	0	; () banked
  5085  000526  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5086  000528  0E00               	movlw	0
  5087  00052A  0100               	movlb	0	; () banked
  5088  00052C  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5089  00052E  0100               	movlb	0	; () banked
  5090  000530  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5091  000532  0E00               	movlw	0
  5092  000534  0100               	movlb	0	; () banked
  5093  000536  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5094  000538  0100               	movlb	0	; () banked
  5095  00053A  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5099  00053C  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5100  000540  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5101  000544  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5102  000548  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5103  00054C  0E05               	movlw	5
  5104  00054E                     u2805:
  5105  00054E  90D8               	bcf	status,0,c
  5106  000550  0100               	movlb	0	; () banked
  5107  000552  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  5108  000554  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5109  000556  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5110  000558  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5111  00055A  2EE8               	decfsz	wreg,f,c
  5112  00055C  D7F8               	goto	u2805
  5113  00055E  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5114  000562  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5115  000566  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5116  00056A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5120  00056E  C0C2  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5121  000572                     l2950:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;inc\CANlib.h: 828: }
  5125                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5126  000572  0100               	movlb	0	; () banked
  5127  000574  51C1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5128  000576  0100               	movlb	0	; () banked
  5129  000578  A4D8               	btfss	status,2,c
  5130  00057A  D089               	goto	l2984
  5131                           
  5132                           ; BSR set to: 0
  5133  00057C  0EF7               	movlw	247
  5134  00057E  0100               	movlb	0	; () banked
  5135  000580  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5136  000582  A4D8               	btfss	status,2,c
  5137  000584  D084               	goto	l2984
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;inc\CANlib.h: 832: {
  5141                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5142  000586  010F               	movlb	15	; () banked
  5143  000588  8701               	bsf	1,3,b	;volatile
  5144                           
  5145                           ; BSR set to: 15
  5146                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5147  00058A  0100               	movlb	0	; () banked
  5148  00058C  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5149  00058E  0100               	movlb	0	; () banked
  5150  000590  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5151  000592  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5152  000594  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5153  000596  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5157  000598  C0C2  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5161  00059C  0E00               	movlw	0
  5162  00059E  0100               	movlb	0	; () banked
  5163  0005A0  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5164  0005A2  0100               	movlb	0	; () banked
  5165  0005A4  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5166  0005A6  0EFF               	movlw	255
  5167  0005A8  0100               	movlb	0	; () banked
  5168  0005AA  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5169  0005AC  0100               	movlb	0	; () banked
  5170  0005AE  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5171  0005B0  0E00               	movlw	0
  5172  0005B2  0100               	movlb	0	; () banked
  5173  0005B4  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5174  0005B6  0100               	movlb	0	; () banked
  5175  0005B8  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5176  0005BA  0E00               	movlw	0
  5177  0005BC  0100               	movlb	0	; () banked
  5178  0005BE  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5179  0005C0  0100               	movlb	0	; () banked
  5180  0005C2  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5184  0005C4  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5185  0005C8  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5186  0005CC  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5187  0005D0  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5188  0005D4  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5189  0005D8  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5190  0005DC  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5191  0005E0  0100               	movlb	0	; () banked
  5192  0005E2  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5193  0005E4  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5194  0005E8  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5195  0005EC  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5196  0005F0  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5200  0005F4  C0C2  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5204  0005F8  0100               	movlb	0	; () banked
  5205  0005FA  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5206  0005FC  D003               	goto	l483
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5210  0005FE  010F               	movlb	15	; () banked
  5211  000600  8101               	bsf	1,0,b	;volatile
  5212  000602  D002               	goto	l484
  5213  000604                     l483:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;inc\CANlib.h: 844: else
  5217                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5218  000604  010F               	movlb	15	; () banked
  5219  000606  9101               	bcf	1,0,b	;volatile
  5220  000608                     l484:
  5221                           
  5222                           ; BSR set to: 15
  5223                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5224  000608  0100               	movlb	0	; () banked
  5225  00060A  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5226  00060C  D003               	goto	l485
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5230  00060E  010F               	movlb	15	; () banked
  5231  000610  8301               	bsf	1,1,b	;volatile
  5232  000612  D002               	goto	l486
  5233  000614                     l485:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;inc\CANlib.h: 849: else
  5237                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5238  000614  010F               	movlb	15	; () banked
  5239  000616  9301               	bcf	1,1,b	;volatile
  5240  000618                     l486:
  5241                           
  5242                           ; BSR set to: 15
  5243                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5244  000618  0100               	movlb	0	; () banked
  5245  00061A  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5246  00061C  D003               	goto	l487
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5250  00061E  010F               	movlb	15	; () banked
  5251  000620  8B01               	bsf	1,5,b	;volatile
  5252  000622  D002               	goto	l488
  5253  000624                     l487:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 854: else
  5257                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5258  000624  010F               	movlb	15	; () banked
  5259  000626  9B01               	bcf	1,5,b	;volatile
  5260  000628                     l488:
  5261                           
  5262                           ; BSR set to: 15
  5263                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5264  000628  0100               	movlb	0	; () banked
  5265  00062A  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5266  00062C  D003               	goto	l489
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5270  00062E  010F               	movlb	15	; () banked
  5271  000630  8D01               	bsf	1,6,b	;volatile
  5272  000632  D002               	goto	l490
  5273  000634                     l489:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 859: else
  5277                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5278  000634  010F               	movlb	15	; () banked
  5279  000636  9D01               	bcf	1,6,b	;volatile
  5280  000638                     l490:
  5281                           
  5282                           ; BSR set to: 15
  5283                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5284  000638  0100               	movlb	0	; () banked
  5285  00063A  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5286  00063C  D003               	goto	l491
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5290  00063E  010F               	movlb	15	; () banked
  5291  000640  8F01               	bsf	1,7,b	;volatile
  5292  000642  D002               	goto	l2978
  5293  000644                     l491:
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;inc\CANlib.h: 864: else
  5297                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5298  000644  010F               	movlb	15	; () banked
  5299  000646  9F01               	bcf	1,7,b	;volatile
  5300  000648                     l2978:
  5301                           
  5302                           ; BSR set to: 15
  5303                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5304  000648  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5305  00064C  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5306  000650  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5307  000654  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5308  000658  0E16               	movlw	22
  5309  00065A  D006               	goto	u2880
  5310  00065C                     u2885:
  5311  00065C  0100               	movlb	0	; () banked
  5312  00065E  90D8               	bcf	status,0,c
  5313  000660  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5314  000662  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5315  000664  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5316  000666  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5317  000668                     u2880:
  5318  000668  2EE8               	decfsz	wreg,f,c
  5319  00066A  D7F8               	goto	u2885
  5320  00066C  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5321  000670  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5322  000674  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5323  000678  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5327  00067C  0100               	movlb	0	; () banked
  5328  00067E  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5329  000680  0100               	movlb	0	; () banked
  5330  000682  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5331  000684  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5332  000686  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5333  000688  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5337  00068A  C0C2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5338  00068E                     l2984:
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;inc\CANlib.h: 870: }
  5342                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5343  00068E  0100               	movlb	0	; () banked
  5344  000690  05C1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5345  000692  A4D8               	btfss	status,2,c
  5346  000694  D089               	goto	l3018
  5347                           
  5348                           ; BSR set to: 0
  5349  000696  0EF7               	movlw	247
  5350  000698  0100               	movlb	0	; () banked
  5351  00069A  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5352  00069C  A4D8               	btfss	status,2,c
  5353  00069E  D084               	goto	l3018
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;inc\CANlib.h: 873: {
  5357                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5358  0006A0  010F               	movlb	15	; () banked
  5359  0006A2  8705               	bsf	5,3,b	;volatile
  5360                           
  5361                           ; BSR set to: 15
  5362                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5363  0006A4  0100               	movlb	0	; () banked
  5364  0006A6  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5365  0006A8  0100               	movlb	0	; () banked
  5366  0006AA  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5367  0006AC  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5368  0006AE  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5369  0006B0  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5373  0006B2  C0C2  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5377  0006B6  0E00               	movlw	0
  5378  0006B8  0100               	movlb	0	; () banked
  5379  0006BA  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5380  0006BC  0100               	movlb	0	; () banked
  5381  0006BE  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5382  0006C0  0EFF               	movlw	255
  5383  0006C2  0100               	movlb	0	; () banked
  5384  0006C4  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5385  0006C6  0100               	movlb	0	; () banked
  5386  0006C8  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5387  0006CA  0E00               	movlw	0
  5388  0006CC  0100               	movlb	0	; () banked
  5389  0006CE  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5390  0006D0  0100               	movlb	0	; () banked
  5391  0006D2  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5392  0006D4  0E00               	movlw	0
  5393  0006D6  0100               	movlb	0	; () banked
  5394  0006D8  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5395  0006DA  0100               	movlb	0	; () banked
  5396  0006DC  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5400  0006DE  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5401  0006E2  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5402  0006E6  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5403  0006EA  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5404  0006EE  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5405  0006F2  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5406  0006F6  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5407  0006FA  0100               	movlb	0	; () banked
  5408  0006FC  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5409  0006FE  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5410  000702  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5411  000706  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5412  00070A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5416  00070E  C0C2  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5420  000712  0100               	movlb	0	; () banked
  5421  000714  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5422  000716  D003               	goto	l494
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5426  000718  010F               	movlb	15	; () banked
  5427  00071A  8105               	bsf	5,0,b	;volatile
  5428  00071C  D002               	goto	l495
  5429  00071E                     l494:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;inc\CANlib.h: 885: else
  5433                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5434  00071E  010F               	movlb	15	; () banked
  5435  000720  9105               	bcf	5,0,b	;volatile
  5436  000722                     l495:
  5437                           
  5438                           ; BSR set to: 15
  5439                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5440  000722  0100               	movlb	0	; () banked
  5441  000724  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5442  000726  D003               	goto	l496
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5446  000728  010F               	movlb	15	; () banked
  5447  00072A  8305               	bsf	5,1,b	;volatile
  5448  00072C  D002               	goto	l497
  5449  00072E                     l496:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 890: else
  5453                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5454  00072E  010F               	movlb	15	; () banked
  5455  000730  9305               	bcf	5,1,b	;volatile
  5456  000732                     l497:
  5457                           
  5458                           ; BSR set to: 15
  5459                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5460  000732  0100               	movlb	0	; () banked
  5461  000734  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5462  000736  D003               	goto	l498
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5466  000738  010F               	movlb	15	; () banked
  5467  00073A  8B05               	bsf	5,5,b	;volatile
  5468  00073C  D002               	goto	l499
  5469  00073E                     l498:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;inc\CANlib.h: 895: else
  5473                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5474  00073E  010F               	movlb	15	; () banked
  5475  000740  9B05               	bcf	5,5,b	;volatile
  5476  000742                     l499:
  5477                           
  5478                           ; BSR set to: 15
  5479                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5480  000742  0100               	movlb	0	; () banked
  5481  000744  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5482  000746  D003               	goto	l500
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5486  000748  010F               	movlb	15	; () banked
  5487  00074A  8D05               	bsf	5,6,b	;volatile
  5488  00074C  D002               	goto	l501
  5489  00074E                     l500:
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 900: else
  5493                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5494  00074E  010F               	movlb	15	; () banked
  5495  000750  9D05               	bcf	5,6,b	;volatile
  5496  000752                     l501:
  5497                           
  5498                           ; BSR set to: 15
  5499                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5500  000752  0100               	movlb	0	; () banked
  5501  000754  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5502  000756  D003               	goto	l502
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5506  000758  010F               	movlb	15	; () banked
  5507  00075A  8F05               	bsf	5,7,b	;volatile
  5508  00075C  D002               	goto	l3012
  5509  00075E                     l502:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;inc\CANlib.h: 905: else
  5513                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5514  00075E  010F               	movlb	15	; () banked
  5515  000760  9F05               	bcf	5,7,b	;volatile
  5516  000762                     l3012:
  5517                           
  5518                           ; BSR set to: 15
  5519                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5520  000762  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5521  000766  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5522  00076A  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5523  00076E  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5524  000772  0E16               	movlw	22
  5525  000774  D006               	goto	u2960
  5526  000776                     u2965:
  5527  000776  0100               	movlb	0	; () banked
  5528  000778  90D8               	bcf	status,0,c
  5529  00077A  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5530  00077C  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5531  00077E  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5532  000780  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5533  000782                     u2960:
  5534  000782  2EE8               	decfsz	wreg,f,c
  5535  000784  D7F8               	goto	u2965
  5536  000786  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5537  00078A  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5538  00078E  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5539  000792  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5543  000796  0100               	movlb	0	; () banked
  5544  000798  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5545  00079A  0100               	movlb	0	; () banked
  5546  00079C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5547  00079E  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5548  0007A0  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5549  0007A2  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5553  0007A4  C0C2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5554  0007A8                     l3018:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;inc\CANlib.h: 911: }
  5558                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5559  0007A8  0E02               	movlw	2
  5560  0007AA  0100               	movlb	0	; () banked
  5561  0007AC  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5562  0007AE  A4D8               	btfss	status,2,c
  5563  0007B0  D089               	goto	l3052
  5564                           
  5565                           ; BSR set to: 0
  5566  0007B2  0EF7               	movlw	247
  5567  0007B4  0100               	movlb	0	; () banked
  5568  0007B6  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5569  0007B8  A4D8               	btfss	status,2,c
  5570  0007BA  D084               	goto	l3052
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;inc\CANlib.h: 915: {
  5574                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5575  0007BC  010F               	movlb	15	; () banked
  5576  0007BE  8709               	bsf	9,3,b	;volatile
  5577                           
  5578                           ; BSR set to: 15
  5579                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5580  0007C0  0100               	movlb	0	; () banked
  5581  0007C2  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5582  0007C4  0100               	movlb	0	; () banked
  5583  0007C6  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5584  0007C8  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5585  0007CA  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5586  0007CC  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5590  0007CE  C0C2  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5594  0007D2  0E00               	movlw	0
  5595  0007D4  0100               	movlb	0	; () banked
  5596  0007D6  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5597  0007D8  0100               	movlb	0	; () banked
  5598  0007DA  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5599  0007DC  0EFF               	movlw	255
  5600  0007DE  0100               	movlb	0	; () banked
  5601  0007E0  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5602  0007E2  0100               	movlb	0	; () banked
  5603  0007E4  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5604  0007E6  0E00               	movlw	0
  5605  0007E8  0100               	movlb	0	; () banked
  5606  0007EA  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5607  0007EC  0100               	movlb	0	; () banked
  5608  0007EE  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5609  0007F0  0E00               	movlw	0
  5610  0007F2  0100               	movlb	0	; () banked
  5611  0007F4  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5612  0007F6  0100               	movlb	0	; () banked
  5613  0007F8  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5617  0007FA  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5618  0007FE  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5619  000802  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5620  000806  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5621  00080A  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5622  00080E  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5623  000812  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5624  000816  0100               	movlb	0	; () banked
  5625  000818  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5626  00081A  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5627  00081E  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5628  000822  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5629  000826  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5633  00082A  C0C2  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5637  00082E  0100               	movlb	0	; () banked
  5638  000830  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5639  000832  D003               	goto	l505
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5643  000834  010F               	movlb	15	; () banked
  5644  000836  8109               	bsf	9,0,b	;volatile
  5645  000838  D002               	goto	l506
  5646  00083A                     l505:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;inc\CANlib.h: 927: else
  5650                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5651  00083A  010F               	movlb	15	; () banked
  5652  00083C  9109               	bcf	9,0,b	;volatile
  5653  00083E                     l506:
  5654                           
  5655                           ; BSR set to: 15
  5656                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5657  00083E  0100               	movlb	0	; () banked
  5658  000840  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5659  000842  D003               	goto	l507
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5663  000844  010F               	movlb	15	; () banked
  5664  000846  8309               	bsf	9,1,b	;volatile
  5665  000848  D002               	goto	l508
  5666  00084A                     l507:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 932: else
  5670                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5671  00084A  010F               	movlb	15	; () banked
  5672  00084C  9309               	bcf	9,1,b	;volatile
  5673  00084E                     l508:
  5674                           
  5675                           ; BSR set to: 15
  5676                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5677  00084E  0100               	movlb	0	; () banked
  5678  000850  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5679  000852  D003               	goto	l509
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5683  000854  010F               	movlb	15	; () banked
  5684  000856  8B09               	bsf	9,5,b	;volatile
  5685  000858  D002               	goto	l510
  5686  00085A                     l509:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 937: else
  5690                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5691  00085A  010F               	movlb	15	; () banked
  5692  00085C  9B09               	bcf	9,5,b	;volatile
  5693  00085E                     l510:
  5694                           
  5695                           ; BSR set to: 15
  5696                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5697  00085E  0100               	movlb	0	; () banked
  5698  000860  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5699  000862  D003               	goto	l511
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5703  000864  010F               	movlb	15	; () banked
  5704  000866  8D09               	bsf	9,6,b	;volatile
  5705  000868  D002               	goto	l512
  5706  00086A                     l511:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;inc\CANlib.h: 942: else
  5710                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5711  00086A  010F               	movlb	15	; () banked
  5712  00086C  9D09               	bcf	9,6,b	;volatile
  5713  00086E                     l512:
  5714                           
  5715                           ; BSR set to: 15
  5716                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5717  00086E  0100               	movlb	0	; () banked
  5718  000870  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5719  000872  D003               	goto	l513
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5723  000874  010F               	movlb	15	; () banked
  5724  000876  8F09               	bsf	9,7,b	;volatile
  5725  000878  D002               	goto	l3046
  5726  00087A                     l513:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;inc\CANlib.h: 947: else
  5730                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5731  00087A  010F               	movlb	15	; () banked
  5732  00087C  9F09               	bcf	9,7,b	;volatile
  5733  00087E                     l3046:
  5734                           
  5735                           ; BSR set to: 15
  5736                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5737  00087E  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5738  000882  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5739  000886  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5740  00088A  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5741  00088E  0E16               	movlw	22
  5742  000890  D006               	goto	u3040
  5743  000892                     u3045:
  5744  000892  0100               	movlb	0	; () banked
  5745  000894  90D8               	bcf	status,0,c
  5746  000896  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5747  000898  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5748  00089A  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5749  00089C  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5750  00089E                     u3040:
  5751  00089E  2EE8               	decfsz	wreg,f,c
  5752  0008A0  D7F8               	goto	u3045
  5753  0008A2  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5754  0008A6  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5755  0008AA  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5756  0008AE  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5760  0008B2  0100               	movlb	0	; () banked
  5761  0008B4  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5762  0008B6  0100               	movlb	0	; () banked
  5763  0008B8  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5764  0008BA  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5765  0008BC  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5766  0008BE  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5770  0008C0  C0C2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5771  0008C4                     l3052:
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;inc\CANlib.h: 953: }
  5775                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5776  0008C4  0E03               	movlw	3
  5777  0008C6  0100               	movlb	0	; () banked
  5778  0008C8  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5779  0008CA  A4D8               	btfss	status,2,c
  5780  0008CC  D089               	goto	l3086
  5781                           
  5782                           ; BSR set to: 0
  5783  0008CE  0EF7               	movlw	247
  5784  0008D0  0100               	movlb	0	; () banked
  5785  0008D2  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5786  0008D4  A4D8               	btfss	status,2,c
  5787  0008D6  D084               	goto	l3086
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;inc\CANlib.h: 956: {
  5791                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5792  0008D8  010F               	movlb	15	; () banked
  5793  0008DA  870D               	bsf	13,3,b	;volatile
  5794                           
  5795                           ; BSR set to: 15
  5796                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5797  0008DC  0100               	movlb	0	; () banked
  5798  0008DE  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5799  0008E0  0100               	movlb	0	; () banked
  5800  0008E2  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5801  0008E4  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5802  0008E6  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5803  0008E8  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5807  0008EA  C0C2  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5811  0008EE  0E00               	movlw	0
  5812  0008F0  0100               	movlb	0	; () banked
  5813  0008F2  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5814  0008F4  0100               	movlb	0	; () banked
  5815  0008F6  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5816  0008F8  0EFF               	movlw	255
  5817  0008FA  0100               	movlb	0	; () banked
  5818  0008FC  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5819  0008FE  0100               	movlb	0	; () banked
  5820  000900  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5821  000902  0E00               	movlw	0
  5822  000904  0100               	movlb	0	; () banked
  5823  000906  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5824  000908  0100               	movlb	0	; () banked
  5825  00090A  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5826  00090C  0E00               	movlw	0
  5827  00090E  0100               	movlb	0	; () banked
  5828  000910  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5829  000912  0100               	movlb	0	; () banked
  5830  000914  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5834  000916  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5835  00091A  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5836  00091E  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5837  000922  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5838  000926  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5839  00092A  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5840  00092E  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5841  000932  0100               	movlb	0	; () banked
  5842  000934  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5843  000936  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5844  00093A  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5845  00093E  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5846  000942  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5850  000946  C0C2  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5854  00094A  0100               	movlb	0	; () banked
  5855  00094C  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5856  00094E  D003               	goto	l516
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5860  000950  010F               	movlb	15	; () banked
  5861  000952  810D               	bsf	13,0,b	;volatile
  5862  000954  D002               	goto	l517
  5863  000956                     l516:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;inc\CANlib.h: 968: else
  5867                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5868  000956  010F               	movlb	15	; () banked
  5869  000958  910D               	bcf	13,0,b	;volatile
  5870  00095A                     l517:
  5871                           
  5872                           ; BSR set to: 15
  5873                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5874  00095A  0100               	movlb	0	; () banked
  5875  00095C  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5876  00095E  D003               	goto	l518
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5880  000960  010F               	movlb	15	; () banked
  5881  000962  830D               	bsf	13,1,b	;volatile
  5882  000964  D002               	goto	l519
  5883  000966                     l518:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;inc\CANlib.h: 973: else
  5887                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5888  000966  010F               	movlb	15	; () banked
  5889  000968  930D               	bcf	13,1,b	;volatile
  5890  00096A                     l519:
  5891                           
  5892                           ; BSR set to: 15
  5893                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5894  00096A  0100               	movlb	0	; () banked
  5895  00096C  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5896  00096E  D003               	goto	l520
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5900  000970  010F               	movlb	15	; () banked
  5901  000972  8B0D               	bsf	13,5,b	;volatile
  5902  000974  D002               	goto	l521
  5903  000976                     l520:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;inc\CANlib.h: 978: else
  5907                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5908  000976  010F               	movlb	15	; () banked
  5909  000978  9B0D               	bcf	13,5,b	;volatile
  5910  00097A                     l521:
  5911                           
  5912                           ; BSR set to: 15
  5913                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5914  00097A  0100               	movlb	0	; () banked
  5915  00097C  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5916  00097E  D003               	goto	l522
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5920  000980  010F               	movlb	15	; () banked
  5921  000982  8D0D               	bsf	13,6,b	;volatile
  5922  000984  D002               	goto	l523
  5923  000986                     l522:
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;inc\CANlib.h: 983: else
  5927                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5928  000986  010F               	movlb	15	; () banked
  5929  000988  9D0D               	bcf	13,6,b	;volatile
  5930  00098A                     l523:
  5931                           
  5932                           ; BSR set to: 15
  5933                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5934  00098A  0100               	movlb	0	; () banked
  5935  00098C  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5936  00098E  D003               	goto	l524
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5940  000990  010F               	movlb	15	; () banked
  5941  000992  8F0D               	bsf	13,7,b	;volatile
  5942  000994  D002               	goto	l3080
  5943  000996                     l524:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;inc\CANlib.h: 988: else
  5947                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5948  000996  010F               	movlb	15	; () banked
  5949  000998  9F0D               	bcf	13,7,b	;volatile
  5950  00099A                     l3080:
  5951                           
  5952                           ; BSR set to: 15
  5953                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5954  00099A  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5955  00099E  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5956  0009A2  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5957  0009A6  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5958  0009AA  0E16               	movlw	22
  5959  0009AC  D006               	goto	u3120
  5960  0009AE                     u3125:
  5961  0009AE  0100               	movlb	0	; () banked
  5962  0009B0  90D8               	bcf	status,0,c
  5963  0009B2  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5964  0009B4  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5965  0009B6  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5966  0009B8  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5967  0009BA                     u3120:
  5968  0009BA  2EE8               	decfsz	wreg,f,c
  5969  0009BC  D7F8               	goto	u3125
  5970  0009BE  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5971  0009C2  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5972  0009C6  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5973  0009CA  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5977  0009CE  0100               	movlb	0	; () banked
  5978  0009D0  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5979  0009D2  0100               	movlb	0	; () banked
  5980  0009D4  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5981  0009D6  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5982  0009D8  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5983  0009DA  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5987  0009DC  C0C2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5988  0009E0                     l3086:
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;inc\CANlib.h: 994: }
  5992                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5993  0009E0  0E04               	movlw	4
  5994  0009E2  0100               	movlb	0	; () banked
  5995  0009E4  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5996  0009E6  A4D8               	btfss	status,2,c
  5997  0009E8  D089               	goto	l3120
  5998                           
  5999                           ; BSR set to: 0
  6000  0009EA  0EF7               	movlw	247
  6001  0009EC  0100               	movlb	0	; () banked
  6002  0009EE  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  6003  0009F0  A4D8               	btfss	status,2,c
  6004  0009F2  D084               	goto	l3120
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;inc\CANlib.h: 997: {
  6008                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6009  0009F4  010F               	movlb	15	; () banked
  6010  0009F6  8711               	bsf	17,3,b	;volatile
  6011                           
  6012                           ; BSR set to: 15
  6013                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6014  0009F8  0100               	movlb	0	; () banked
  6015  0009FA  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  6016  0009FC  0100               	movlb	0	; () banked
  6017  0009FE  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6018  000A00  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6019  000A02  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6020  000A04  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6024  000A06  C0C2  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6028  000A0A  0E00               	movlw	0
  6029  000A0C  0100               	movlb	0	; () banked
  6030  000A0E  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  6031  000A10  0100               	movlb	0	; () banked
  6032  000A12  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6033  000A14  0EFF               	movlw	255
  6034  000A16  0100               	movlb	0	; () banked
  6035  000A18  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6036  000A1A  0100               	movlb	0	; () banked
  6037  000A1C  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6038  000A1E  0E00               	movlw	0
  6039  000A20  0100               	movlb	0	; () banked
  6040  000A22  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6041  000A24  0100               	movlb	0	; () banked
  6042  000A26  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6043  000A28  0E00               	movlw	0
  6044  000A2A  0100               	movlb	0	; () banked
  6045  000A2C  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6046  000A2E  0100               	movlb	0	; () banked
  6047  000A30  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6051  000A32  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6052  000A36  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6053  000A3A  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6054  000A3E  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6055  000A42  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6056  000A46  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6057  000A4A  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6058  000A4E  0100               	movlb	0	; () banked
  6059  000A50  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6060  000A52  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6061  000A56  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6062  000A5A  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6063  000A5E  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6067  000A62  C0C2  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6071  000A66  0100               	movlb	0	; () banked
  6072  000A68  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6073  000A6A  D003               	goto	l527
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6077  000A6C  010F               	movlb	15	; () banked
  6078  000A6E  8111               	bsf	17,0,b	;volatile
  6079  000A70  D002               	goto	l528
  6080  000A72                     l527:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;inc\CANlib.h: 1009: else
  6084                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6085  000A72  010F               	movlb	15	; () banked
  6086  000A74  9111               	bcf	17,0,b	;volatile
  6087  000A76                     l528:
  6088                           
  6089                           ; BSR set to: 15
  6090                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6091  000A76  0100               	movlb	0	; () banked
  6092  000A78  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6093  000A7A  D003               	goto	l529
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6097  000A7C  010F               	movlb	15	; () banked
  6098  000A7E  8311               	bsf	17,1,b	;volatile
  6099  000A80  D002               	goto	l530
  6100  000A82                     l529:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;inc\CANlib.h: 1014: else
  6104                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6105  000A82  010F               	movlb	15	; () banked
  6106  000A84  9311               	bcf	17,1,b	;volatile
  6107  000A86                     l530:
  6108                           
  6109                           ; BSR set to: 15
  6110                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6111  000A86  0100               	movlb	0	; () banked
  6112  000A88  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6113  000A8A  D003               	goto	l531
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6117  000A8C  010F               	movlb	15	; () banked
  6118  000A8E  8B11               	bsf	17,5,b	;volatile
  6119  000A90  D002               	goto	l532
  6120  000A92                     l531:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;inc\CANlib.h: 1019: else
  6124                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6125  000A92  010F               	movlb	15	; () banked
  6126  000A94  9B11               	bcf	17,5,b	;volatile
  6127  000A96                     l532:
  6128                           
  6129                           ; BSR set to: 15
  6130                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6131  000A96  0100               	movlb	0	; () banked
  6132  000A98  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6133  000A9A  D003               	goto	l533
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6137  000A9C  010F               	movlb	15	; () banked
  6138  000A9E  8D11               	bsf	17,6,b	;volatile
  6139  000AA0  D002               	goto	l534
  6140  000AA2                     l533:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;inc\CANlib.h: 1024: else
  6144                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6145  000AA2  010F               	movlb	15	; () banked
  6146  000AA4  9D11               	bcf	17,6,b	;volatile
  6147  000AA6                     l534:
  6148                           
  6149                           ; BSR set to: 15
  6150                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6151  000AA6  0100               	movlb	0	; () banked
  6152  000AA8  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6153  000AAA  D003               	goto	l535
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6157  000AAC  010F               	movlb	15	; () banked
  6158  000AAE  8F11               	bsf	17,7,b	;volatile
  6159  000AB0  D002               	goto	l3114
  6160  000AB2                     l535:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;inc\CANlib.h: 1029: else
  6164                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6165  000AB2  010F               	movlb	15	; () banked
  6166  000AB4  9F11               	bcf	17,7,b	;volatile
  6167  000AB6                     l3114:
  6168                           
  6169                           ; BSR set to: 15
  6170                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6171  000AB6  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  6172  000ABA  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6173  000ABE  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6174  000AC2  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6175  000AC6  0E16               	movlw	22
  6176  000AC8  D006               	goto	u3200
  6177  000ACA                     u3205:
  6178  000ACA  0100               	movlb	0	; () banked
  6179  000ACC  90D8               	bcf	status,0,c
  6180  000ACE  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6181  000AD0  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6182  000AD2  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6183  000AD4  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  6184  000AD6                     u3200:
  6185  000AD6  2EE8               	decfsz	wreg,f,c
  6186  000AD8  D7F8               	goto	u3205
  6187  000ADA  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6188  000ADE  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6189  000AE2  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6190  000AE6  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6194  000AEA  0100               	movlb	0	; () banked
  6195  000AEC  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  6196  000AEE  0100               	movlb	0	; () banked
  6197  000AF0  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6198  000AF2  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6199  000AF4  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6200  000AF6  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6204  000AF8  C0C2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6205  000AFC                     l3120:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;inc\CANlib.h: 1035: }
  6209                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6210  000AFC  0E05               	movlw	5
  6211  000AFE  0100               	movlb	0	; () banked
  6212  000B00  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6213  000B02  A4D8               	btfss	status,2,c
  6214  000B04  0012               	return	
  6215                           
  6216                           ; BSR set to: 0
  6217  000B06  0EF7               	movlw	247
  6218  000B08  0100               	movlb	0	; () banked
  6219  000B0A  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  6220  000B0C  A4D8               	btfss	status,2,c
  6221  000B0E  0012               	return	
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;inc\CANlib.h: 1038: {
  6225                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6226  000B10  010F               	movlb	15	; () banked
  6227  000B12  8715               	bsf	21,3,b	;volatile
  6228                           
  6229                           ; BSR set to: 15
  6230                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6231  000B14  0100               	movlb	0	; () banked
  6232  000B16  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  6233  000B18  0100               	movlb	0	; () banked
  6234  000B1A  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6235  000B1C  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6236  000B1E  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6237  000B20  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6241  000B22  C0C2  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6245  000B26  0E00               	movlw	0
  6246  000B28  0100               	movlb	0	; () banked
  6247  000B2A  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  6248  000B2C  0100               	movlb	0	; () banked
  6249  000B2E  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6250  000B30  0EFF               	movlw	255
  6251  000B32  0100               	movlb	0	; () banked
  6252  000B34  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6253  000B36  0100               	movlb	0	; () banked
  6254  000B38  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6255  000B3A  0E00               	movlw	0
  6256  000B3C  0100               	movlb	0	; () banked
  6257  000B3E  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6258  000B40  0100               	movlb	0	; () banked
  6259  000B42  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6260  000B44  0E00               	movlw	0
  6261  000B46  0100               	movlb	0	; () banked
  6262  000B48  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6263  000B4A  0100               	movlb	0	; () banked
  6264  000B4C  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6265                           
  6266                           ; BSR set to: 0
  6267                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6268  000B4E  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6269  000B52  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6270  000B56  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6271  000B5A  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6272  000B5E  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6273  000B62  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6274  000B66  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6275  000B6A  0100               	movlb	0	; () banked
  6276  000B6C  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6277  000B6E  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6278  000B72  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6279  000B76  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6280  000B7A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6284  000B7E  C0C2  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6288  000B82  0100               	movlb	0	; () banked
  6289  000B84  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6290  000B86  D003               	goto	l538
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6294  000B88  010F               	movlb	15	; () banked
  6295  000B8A  8115               	bsf	21,0,b	;volatile
  6296  000B8C  D002               	goto	l539
  6297  000B8E                     l538:
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;inc\CANlib.h: 1050: else
  6301                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6302  000B8E  010F               	movlb	15	; () banked
  6303  000B90  9115               	bcf	21,0,b	;volatile
  6304  000B92                     l539:
  6305                           
  6306                           ; BSR set to: 15
  6307                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6308  000B92  0100               	movlb	0	; () banked
  6309  000B94  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6310  000B96  D003               	goto	l540
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6314  000B98  010F               	movlb	15	; () banked
  6315  000B9A  8315               	bsf	21,1,b	;volatile
  6316  000B9C  D002               	goto	l541
  6317  000B9E                     l540:
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;inc\CANlib.h: 1055: else
  6321                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6322  000B9E  010F               	movlb	15	; () banked
  6323  000BA0  9315               	bcf	21,1,b	;volatile
  6324  000BA2                     l541:
  6325                           
  6326                           ; BSR set to: 15
  6327                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6328  000BA2  0100               	movlb	0	; () banked
  6329  000BA4  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6330  000BA6  D003               	goto	l542
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6334  000BA8  010F               	movlb	15	; () banked
  6335  000BAA  8B15               	bsf	21,5,b	;volatile
  6336  000BAC  D002               	goto	l543
  6337  000BAE                     l542:
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;inc\CANlib.h: 1060: else
  6341                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6342  000BAE  010F               	movlb	15	; () banked
  6343  000BB0  9B15               	bcf	21,5,b	;volatile
  6344  000BB2                     l543:
  6345                           
  6346                           ; BSR set to: 15
  6347                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6348  000BB2  0100               	movlb	0	; () banked
  6349  000BB4  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6350  000BB6  D003               	goto	l544
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6354  000BB8  010F               	movlb	15	; () banked
  6355  000BBA  8D15               	bsf	21,6,b	;volatile
  6356  000BBC  D002               	goto	l545
  6357  000BBE                     l544:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;inc\CANlib.h: 1065: else
  6361                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6362  000BBE  010F               	movlb	15	; () banked
  6363  000BC0  9D15               	bcf	21,6,b	;volatile
  6364  000BC2                     l545:
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6368  000BC2  0100               	movlb	0	; () banked
  6369  000BC4  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6370  000BC6  D003               	goto	l546
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6374  000BC8  010F               	movlb	15	; () banked
  6375  000BCA  8F15               	bsf	21,7,b	;volatile
  6376  000BCC  D002               	goto	l3148
  6377  000BCE                     l546:
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;inc\CANlib.h: 1070: else
  6381                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6382  000BCE  010F               	movlb	15	; () banked
  6383  000BD0  9F15               	bcf	21,7,b	;volatile
  6384  000BD2                     l3148:
  6385                           
  6386                           ; BSR set to: 15
  6387                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6388  000BD2  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  6389  000BD6  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6390  000BDA  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6391  000BDE  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6392  000BE2  0E16               	movlw	22
  6393  000BE4  D006               	goto	u3280
  6394  000BE6                     u3285:
  6395  000BE6  0100               	movlb	0	; () banked
  6396  000BE8  90D8               	bcf	status,0,c
  6397  000BEA  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6398  000BEC  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6399  000BEE  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6400  000BF0  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  6401  000BF2                     u3280:
  6402  000BF2  2EE8               	decfsz	wreg,f,c
  6403  000BF4  D7F8               	goto	u3285
  6404  000BF6  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6405  000BFA  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6406  000BFE  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6407  000C02  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6411  000C06  0100               	movlb	0	; () banked
  6412  000C08  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  6413  000C0A  0100               	movlb	0	; () banked
  6414  000C0C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6415  000C0E  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6416  000C10  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6417  000C12  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6421  000C14  C0C2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6422  000C18  0012               	return	
  6423  000C1A                     __end_of_CANSetFilter:
  6424                           	opt stack 0
  6425                           tblptru	equ	0xFF8
  6426                           tblptrh	equ	0xFF7
  6427                           tblptrl	equ	0xFF6
  6428                           tablat	equ	0xFF5
  6429                           prodh	equ	0xFF4
  6430                           prodl	equ	0xFF3
  6431                           intcon	equ	0xFF2
  6432                           intcon2	equ	0xFF1
  6433                           intcon3	equ	0xFF0
  6434                           postinc0	equ	0xFEE
  6435                           wreg	equ	0xFE8
  6436                           postdec1	equ	0xFE5
  6437                           fsr1l	equ	0xFE1
  6438                           indf2	equ	0xFDF
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function _CANOperationMode *****************
  6444 ;; Defined at:
  6445 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  mode            1    wreg     enum E16838
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  mode            1   22[BANK0 ] enum E16838
  6450 ;; Return value:  Size  Location     Type
  6451 ;;		None               void
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6459 ;;      Params:         0       0       0       0
  6460 ;;      Locals:         0       1       0       0
  6461 ;;      Temps:          0       0       0       0
  6462 ;;      Totals:         0       1       0       0
  6463 ;;Total ram usage:        1 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    4
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_CANInitialize
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473                           	psect	text10
  6474  00280C                     __ptext10:
  6475                           	opt stack 0
  6476  00280C                     _CANOperationMode:
  6477                           	opt stack 24
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;incstack = 0
  6481                           ;CANOperationMode@mode stored from wreg
  6482  00280C  0100               	movlb	0	; () banked
  6483  00280E  6FB8               	movwf	CANOperationMode@mode& (0+255),b
  6484                           
  6485                           ;inc\CANlib.h: 208: CANCON = mode;
  6486  002810  C0B8  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6487  002814                     l2744:
  6488  002814  506E               	movf	3950,w,c	;volatile
  6489  002816  0BE0               	andlw	224
  6490  002818  0100               	movlb	0	; () banked
  6491  00281A  19B8               	xorwf	CANOperationMode@mode& (0+255),w,b
  6492  00281C  B4D8               	btfsc	status,2,c
  6493  00281E  0012               	return	
  6494  002820  D7F9               	goto	l2744
  6495  002822                     __end_of_CANOperationMode:
  6496                           	opt stack 0
  6497                           tblptru	equ	0xFF8
  6498                           tblptrh	equ	0xFF7
  6499                           tblptrl	equ	0xFF6
  6500                           tablat	equ	0xFF5
  6501                           prodh	equ	0xFF4
  6502                           prodl	equ	0xFF3
  6503                           intcon	equ	0xFF2
  6504                           intcon2	equ	0xFF1
  6505                           intcon3	equ	0xFF0
  6506                           postinc0	equ	0xFEE
  6507                           wreg	equ	0xFE8
  6508                           postdec1	equ	0xFE5
  6509                           fsr1l	equ	0xFE1
  6510                           indf2	equ	0xFDF
  6511                           fsr2h	equ	0xFDA
  6512                           fsr2l	equ	0xFD9
  6513                           status	equ	0xFD8
  6514                           
  6515 ;; *************** function ___lwdiv *****************
  6516 ;; Defined at:
  6517 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  dividend        2   28[BANK0 ] unsigned int 
  6520 ;;  divisor         2   30[BANK0 ] unsigned int 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  quotient        2   32[BANK0 ] unsigned int 
  6523 ;;  counter         1   34[BANK0 ] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  2   28[BANK0 ] unsigned int 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6533 ;;      Params:         0       4       0       0
  6534 ;;      Locals:         0       3       0       0
  6535 ;;      Temps:          0       0       0       0
  6536 ;;      Totals:         0       7       0       0
  6537 ;;Total ram usage:        7 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    4
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_main
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text11
  6548  002600                     __ptext11:
  6549                           	opt stack 0
  6550  002600                     ___lwdiv:
  6551                           	opt stack 26
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;incstack = 0
  6555  002600  0E00               	movlw	0
  6556  002602  0100               	movlb	0	; () banked
  6557  002604  6FC3               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6558  002606  0E00               	movlw	0
  6559  002608  6FC2               	movwf	___lwdiv@quotient& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562  00260A  0100               	movlb	0	; () banked
  6563  00260C  51C0               	movf	___lwdiv@divisor& (0+255),w,b
  6564  00260E  0100               	movlb	0	; () banked
  6565  002610  11C1               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6566  002612  B4D8               	btfsc	status,2,c
  6567  002614  D02C               	goto	l1153
  6568                           
  6569                           ; BSR set to: 0
  6570  002616  0E01               	movlw	1
  6571  002618  0100               	movlb	0	; () banked
  6572  00261A  6FC4               	movwf	___lwdiv@counter& (0+255),b
  6573  00261C  D006               	goto	l3818
  6574  00261E                     l3816:
  6575                           
  6576                           ; BSR set to: 0
  6577  00261E  0100               	movlb	0	; () banked
  6578  002620  90D8               	bcf	status,0,c
  6579  002622  37C0               	rlcf	___lwdiv@divisor& (0+255),f,b
  6580  002624  37C1               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6581  002626  0100               	movlb	0	; () banked
  6582  002628  2BC4               	incf	___lwdiv@counter& (0+255),f,b
  6583  00262A                     l3818:
  6584                           
  6585                           ; BSR set to: 0
  6586  00262A  0100               	movlb	0	; () banked
  6587  00262C  AFC1               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6588  00262E  D7F7               	goto	l3816
  6589  002630                     l3820:
  6590                           
  6591                           ; BSR set to: 0
  6592  002630  0100               	movlb	0	; () banked
  6593  002632  90D8               	bcf	status,0,c
  6594  002634  37C2               	rlcf	___lwdiv@quotient& (0+255),f,b
  6595  002636  37C3               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6596                           
  6597                           ; BSR set to: 0
  6598  002638  0100               	movlb	0	; () banked
  6599  00263A  51C0               	movf	___lwdiv@divisor& (0+255),w,b
  6600  00263C  0100               	movlb	0	; () banked
  6601  00263E  5DBE               	subwf	___lwdiv@dividend& (0+255),w,b
  6602  002640  0100               	movlb	0	; () banked
  6603  002642  51C1               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6604  002644  0100               	movlb	0	; () banked
  6605  002646  59BF               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6606  002648  A0D8               	btfss	status,0,c
  6607  00264A  D00A               	goto	l3828
  6608                           
  6609                           ; BSR set to: 0
  6610  00264C  0100               	movlb	0	; () banked
  6611  00264E  51C0               	movf	___lwdiv@divisor& (0+255),w,b
  6612  002650  0100               	movlb	0	; () banked
  6613  002652  5FBE               	subwf	___lwdiv@dividend& (0+255),f,b
  6614  002654  0100               	movlb	0	; () banked
  6615  002656  51C1               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6616  002658  0100               	movlb	0	; () banked
  6617  00265A  5BBF               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6618                           
  6619                           ; BSR set to: 0
  6620  00265C  0100               	movlb	0	; () banked
  6621  00265E  81C2               	bsf	___lwdiv@quotient& (0+255),0,b
  6622  002660                     l3828:
  6623                           
  6624                           ; BSR set to: 0
  6625  002660  0100               	movlb	0	; () banked
  6626  002662  90D8               	bcf	status,0,c
  6627  002664  33C1               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6628  002666  33C0               	rrcf	___lwdiv@divisor& (0+255),f,b
  6629                           
  6630                           ; BSR set to: 0
  6631  002668  0100               	movlb	0	; () banked
  6632  00266A  2FC4               	decfsz	___lwdiv@counter& (0+255),f,b
  6633  00266C  D7E1               	goto	l3820
  6634  00266E                     l1153:
  6635                           
  6636                           ; BSR set to: 0
  6637  00266E  C0C2  F0BE         	movff	___lwdiv@quotient,?___lwdiv
  6638  002672  C0C3  F0BF         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6639                           
  6640                           ; BSR set to: 0
  6641  002676  0012               	return		;funcret
  6642  002678                     __end_of___lwdiv:
  6643                           	opt stack 0
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           intcon2	equ	0xFF1
  6652                           intcon3	equ	0xFF0
  6653                           postinc0	equ	0xFEE
  6654                           wreg	equ	0xFE8
  6655                           postdec1	equ	0xFE5
  6656                           fsr1l	equ	0xFE1
  6657                           indf2	equ	0xFDF
  6658                           fsr2h	equ	0xFDA
  6659                           fsr2l	equ	0xFD9
  6660                           status	equ	0xFD8
  6661                           
  6662 ;; *************** function _CANisTXwarningON *****************
  6663 ;; Defined at:
  6664 ;;		line 1119 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;		None
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;		None
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  1    wreg      unsigned char 
  6671 ;; Registers used:
  6672 ;;		wreg
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6678 ;;      Params:         0       0       0       0
  6679 ;;      Locals:         0       0       0       0
  6680 ;;      Temps:          0       0       0       0
  6681 ;;      Totals:         0       0       0       0
  6682 ;;Total ram usage:        0 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    4
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_main
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text12
  6693  00284A                     __ptext12:
  6694                           	opt stack 0
  6695  00284A                     _CANisTXwarningON:
  6696                           	opt stack 26
  6697                           
  6698                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;incstack = 0
  6702  00284A  A474               	btfss	3956,2,c	;volatile
  6703  00284C  D002               	goto	u4060
  6704  00284E  0E01               	movlw	1
  6705  002850  0012               	return	
  6706  002852                     u4060:
  6707  002852  0E00               	movlw	0
  6708  002854  0012               	return	
  6709  002856                     __end_of_CANisTXwarningON:
  6710                           	opt stack 0
  6711                           tblptru	equ	0xFF8
  6712                           tblptrh	equ	0xFF7
  6713                           tblptrl	equ	0xFF6
  6714                           tablat	equ	0xFF5
  6715                           prodh	equ	0xFF4
  6716                           prodl	equ	0xFF3
  6717                           intcon	equ	0xFF2
  6718                           intcon2	equ	0xFF1
  6719                           intcon3	equ	0xFF0
  6720                           postinc0	equ	0xFEE
  6721                           wreg	equ	0xFE8
  6722                           postdec1	equ	0xFE5
  6723                           fsr1l	equ	0xFE1
  6724                           indf2	equ	0xFDF
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _CANisRXwarningON *****************
  6730 ;; Defined at:
  6731 ;;		line 1127 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      unsigned char 
  6738 ;; Registers used:
  6739 ;;		wreg
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6745 ;;      Params:         0       0       0       0
  6746 ;;      Locals:         0       0       0       0
  6747 ;;      Temps:          0       0       0       0
  6748 ;;      Totals:         0       0       0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    4
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_main
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text13
  6760  002856                     __ptext13:
  6761                           	opt stack 0
  6762  002856                     _CANisRXwarningON:
  6763                           	opt stack 26
  6764                           
  6765                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6766                           
  6767                           ;incstack = 0
  6768  002856  A274               	btfss	3956,1,c	;volatile
  6769  002858  D002               	goto	u4070
  6770  00285A  0E01               	movlw	1
  6771  00285C  0012               	return	
  6772  00285E                     u4070:
  6773  00285E  0E00               	movlw	0
  6774  002860  0012               	return	
  6775  002862                     __end_of_CANisRXwarningON:
  6776                           	opt stack 0
  6777                           tblptru	equ	0xFF8
  6778                           tblptrh	equ	0xFF7
  6779                           tblptrl	equ	0xFF6
  6780                           tablat	equ	0xFF5
  6781                           prodh	equ	0xFF4
  6782                           prodl	equ	0xFF3
  6783                           intcon	equ	0xFF2
  6784                           intcon2	equ	0xFF1
  6785                           intcon3	equ	0xFF0
  6786                           postinc0	equ	0xFEE
  6787                           wreg	equ	0xFE8
  6788                           postdec1	equ	0xFE5
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           fsr2h	equ	0xFDA
  6792                           fsr2l	equ	0xFD9
  6793                           status	equ	0xFD8
  6794                           
  6795 ;; *************** function _ADC_Read *****************
  6796 ;; Defined at:
  6797 ;;		line 337 in file "ABS_Code.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;		None               void
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6811 ;;      Params:         0       0       0       0
  6812 ;;      Locals:         0       0       0       0
  6813 ;;      Temps:          0       0       0       0
  6814 ;;      Totals:         0       0       0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    5
  6818 ;; This function calls:
  6819 ;;		___awdiv
  6820 ;; This function is called by:
  6821 ;;		_main
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text14
  6826  002714                     __ptext14:
  6827                           	opt stack 0
  6828  002714                     _ADC_Read:
  6829                           	opt stack 25
  6830                           
  6831                           ;ABS_Code.c: 338: ADCON0bits.GO = 1;
  6832                           
  6833                           ;incstack = 0
  6834  002714  82C2               	bsf	4034,1,c	;volatile
  6835  002716                     l737:
  6836  002716  B2C2               	btfsc	4034,1,c	;volatile
  6837  002718  D7FE               	goto	l737
  6838                           
  6839                           ;ABS_Code.c: 340: read = ADRESH;
  6840  00271A  CFC4 F080          	movff	4036,_read	;volatile
  6841                           
  6842                           ;ABS_Code.c: 341: correction_factor = read - 127;
  6843  00271E  0E81               	movlw	129
  6844  002720  0100               	movlb	0	; () banked
  6845  002722  2580               	addwf	_read& (0+255),w,b
  6846  002724  0100               	movlb	0	; () banked
  6847  002726  6F76               	movwf	_correction_factor& (0+255),b
  6848  002728  0100               	movlb	0	; () banked
  6849  00272A  6B77               	clrf	(_correction_factor+1)& (0+255),b
  6850  00272C  0EFF               	movlw	255
  6851  00272E  2377               	addwfc	(_correction_factor+1)& (0+255),f,b
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;ABS_Code.c: 342: home_position = correction_factor / 4 + 127;
  6855  002730  C076  F0B8         	movff	_correction_factor,___awdiv@dividend
  6856  002734  C077  F0B9         	movff	_correction_factor+1,___awdiv@dividend+1
  6857  002738  0E00               	movlw	0
  6858  00273A  0100               	movlb	0	; () banked
  6859  00273C  6FBB               	movwf	(___awdiv@divisor+1)& (0+255),b
  6860  00273E  0E04               	movlw	4
  6861  002740  6FBA               	movwf	___awdiv@divisor& (0+255),b
  6862  002742  EC5F  F012         	call	___awdiv	;wreg free
  6863  002746  0100               	movlb	0	; () banked
  6864  002748  51B8               	movf	?___awdiv& (0+255),w,b
  6865  00274A  0F7F               	addlw	127
  6866  00274C  0100               	movlb	0	; () banked
  6867  00274E  6F7F               	movwf	_home_position& (0+255),b
  6868                           
  6869                           ; BSR set to: 0
  6870  002750  0012               	return		;funcret
  6871  002752                     __end_of_ADC_Read:
  6872                           	opt stack 0
  6873                           tblptru	equ	0xFF8
  6874                           tblptrh	equ	0xFF7
  6875                           tblptrl	equ	0xFF6
  6876                           tablat	equ	0xFF5
  6877                           prodh	equ	0xFF4
  6878                           prodl	equ	0xFF3
  6879                           intcon	equ	0xFF2
  6880                           intcon2	equ	0xFF1
  6881                           intcon3	equ	0xFF0
  6882                           postinc0	equ	0xFEE
  6883                           wreg	equ	0xFE8
  6884                           postdec1	equ	0xFE5
  6885                           fsr1l	equ	0xFE1
  6886                           indf2	equ	0xFDF
  6887                           fsr2h	equ	0xFDA
  6888                           fsr2l	equ	0xFD9
  6889                           status	equ	0xFD8
  6890                           
  6891 ;; *************** function ___awdiv *****************
  6892 ;; Defined at:
  6893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  dividend        2   22[BANK0 ] int 
  6896 ;;  divisor         2   24[BANK0 ] int 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  quotient        2   28[BANK0 ] int 
  6899 ;;  sign            1   27[BANK0 ] unsigned char 
  6900 ;;  counter         1   26[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  2   22[BANK0 ] int 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6910 ;;      Params:         0       4       0       0
  6911 ;;      Locals:         0       4       0       0
  6912 ;;      Temps:          0       0       0       0
  6913 ;;      Totals:         0       8       0       0
  6914 ;;Total ram usage:        8 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    4
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_main
  6921 ;;		_ADC_Read
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text15
  6926  0024BE                     __ptext15:
  6927                           	opt stack 0
  6928  0024BE                     ___awdiv:
  6929                           	opt stack 26
  6930                           
  6931                           ; BSR set to: 0
  6932                           ;incstack = 0
  6933  0024BE  0E00               	movlw	0
  6934  0024C0  0100               	movlb	0	; () banked
  6935  0024C2  6FBD               	movwf	___awdiv@sign& (0+255),b
  6936                           
  6937                           ; BSR set to: 0
  6938  0024C4  0100               	movlb	0	; () banked
  6939  0024C6  AFBB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6940  0024C8  D008               	goto	l3468
  6941                           
  6942                           ; BSR set to: 0
  6943  0024CA  0100               	movlb	0	; () banked
  6944  0024CC  6DBA               	negf	___awdiv@divisor& (0+255),b
  6945  0024CE  1FBB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6946  0024D0  B0D8               	btfsc	status,0,c
  6947  0024D2  2BBB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6948                           
  6949                           ; BSR set to: 0
  6950  0024D4  0E01               	movlw	1
  6951  0024D6  0100               	movlb	0	; () banked
  6952  0024D8  6FBD               	movwf	___awdiv@sign& (0+255),b
  6953  0024DA                     l3468:
  6954                           
  6955                           ; BSR set to: 0
  6956  0024DA  0100               	movlb	0	; () banked
  6957  0024DC  AFB9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6958  0024DE  D008               	goto	l3474
  6959                           
  6960                           ; BSR set to: 0
  6961  0024E0  0100               	movlb	0	; () banked
  6962  0024E2  6DB8               	negf	___awdiv@dividend& (0+255),b
  6963  0024E4  1FB9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6964  0024E6  B0D8               	btfsc	status,0,c
  6965  0024E8  2BB9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6966                           
  6967                           ; BSR set to: 0
  6968  0024EA  0E01               	movlw	1
  6969  0024EC  0100               	movlb	0	; () banked
  6970  0024EE  1BBD               	xorwf	___awdiv@sign& (0+255),f,b
  6971  0024F0                     l3474:
  6972                           
  6973                           ; BSR set to: 0
  6974  0024F0  0E00               	movlw	0
  6975  0024F2  0100               	movlb	0	; () banked
  6976  0024F4  6FBF               	movwf	(___awdiv@quotient+1)& (0+255),b
  6977  0024F6  0E00               	movlw	0
  6978  0024F8  6FBE               	movwf	___awdiv@quotient& (0+255),b
  6979                           
  6980                           ; BSR set to: 0
  6981  0024FA  0100               	movlb	0	; () banked
  6982  0024FC  51BA               	movf	___awdiv@divisor& (0+255),w,b
  6983  0024FE  0100               	movlb	0	; () banked
  6984  002500  11BB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6985  002502  B4D8               	btfsc	status,2,c
  6986  002504  D02C               	goto	l3496
  6987                           
  6988                           ; BSR set to: 0
  6989  002506  0E01               	movlw	1
  6990  002508  0100               	movlb	0	; () banked
  6991  00250A  6FBC               	movwf	___awdiv@counter& (0+255),b
  6992  00250C  D006               	goto	l3482
  6993  00250E                     l3480:
  6994                           
  6995                           ; BSR set to: 0
  6996  00250E  0100               	movlb	0	; () banked
  6997  002510  90D8               	bcf	status,0,c
  6998  002512  37BA               	rlcf	___awdiv@divisor& (0+255),f,b
  6999  002514  37BB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7000  002516  0100               	movlb	0	; () banked
  7001  002518  2BBC               	incf	___awdiv@counter& (0+255),f,b
  7002  00251A                     l3482:
  7003                           
  7004                           ; BSR set to: 0
  7005  00251A  0100               	movlb	0	; () banked
  7006  00251C  AFBB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7007  00251E  D7F7               	goto	l3480
  7008  002520                     l3484:
  7009                           
  7010                           ; BSR set to: 0
  7011  002520  0100               	movlb	0	; () banked
  7012  002522  90D8               	bcf	status,0,c
  7013  002524  37BE               	rlcf	___awdiv@quotient& (0+255),f,b
  7014  002526  37BF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7015                           
  7016                           ; BSR set to: 0
  7017  002528  0100               	movlb	0	; () banked
  7018  00252A  51BA               	movf	___awdiv@divisor& (0+255),w,b
  7019  00252C  0100               	movlb	0	; () banked
  7020  00252E  5DB8               	subwf	___awdiv@dividend& (0+255),w,b
  7021  002530  0100               	movlb	0	; () banked
  7022  002532  51BB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7023  002534  0100               	movlb	0	; () banked
  7024  002536  59B9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7025  002538  A0D8               	btfss	status,0,c
  7026  00253A  D00A               	goto	l3492
  7027                           
  7028                           ; BSR set to: 0
  7029  00253C  0100               	movlb	0	; () banked
  7030  00253E  51BA               	movf	___awdiv@divisor& (0+255),w,b
  7031  002540  0100               	movlb	0	; () banked
  7032  002542  5FB8               	subwf	___awdiv@dividend& (0+255),f,b
  7033  002544  0100               	movlb	0	; () banked
  7034  002546  51BB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7035  002548  0100               	movlb	0	; () banked
  7036  00254A  5BB9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7037                           
  7038                           ; BSR set to: 0
  7039  00254C  0100               	movlb	0	; () banked
  7040  00254E  81BE               	bsf	___awdiv@quotient& (0+255),0,b
  7041  002550                     l3492:
  7042                           
  7043                           ; BSR set to: 0
  7044  002550  0100               	movlb	0	; () banked
  7045  002552  90D8               	bcf	status,0,c
  7046  002554  33BB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7047  002556  33BA               	rrcf	___awdiv@divisor& (0+255),f,b
  7048                           
  7049                           ; BSR set to: 0
  7050  002558  0100               	movlb	0	; () banked
  7051  00255A  2FBC               	decfsz	___awdiv@counter& (0+255),f,b
  7052  00255C  D7E1               	goto	l3484
  7053  00255E                     l3496:
  7054                           
  7055                           ; BSR set to: 0
  7056  00255E  0100               	movlb	0	; () banked
  7057  002560  51BD               	movf	___awdiv@sign& (0+255),w,b
  7058  002562  0100               	movlb	0	; () banked
  7059  002564  B4D8               	btfsc	status,2,c
  7060  002566  D005               	goto	l3500
  7061                           
  7062                           ; BSR set to: 0
  7063  002568  0100               	movlb	0	; () banked
  7064  00256A  6DBE               	negf	___awdiv@quotient& (0+255),b
  7065  00256C  1FBF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7066  00256E  B0D8               	btfsc	status,0,c
  7067  002570  2BBF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7068  002572                     l3500:
  7069                           
  7070                           ; BSR set to: 0
  7071  002572  C0BE  F0B8         	movff	___awdiv@quotient,?___awdiv
  7072  002576  C0BF  F0B9         	movff	___awdiv@quotient+1,?___awdiv+1
  7073  00257A  0012               	return	
  7074  00257C                     __end_of___awdiv:
  7075                           	opt stack 0
  7076                           tblptru	equ	0xFF8
  7077                           tblptrh	equ	0xFF7
  7078                           tblptrl	equ	0xFF6
  7079                           tablat	equ	0xFF5
  7080                           prodh	equ	0xFF4
  7081                           prodl	equ	0xFF3
  7082                           intcon	equ	0xFF2
  7083                           intcon2	equ	0xFF1
  7084                           intcon3	equ	0xFF0
  7085                           postinc0	equ	0xFEE
  7086                           wreg	equ	0xFE8
  7087                           postdec1	equ	0xFE5
  7088                           fsr1l	equ	0xFE1
  7089                           indf2	equ	0xFDF
  7090                           fsr2h	equ	0xFDA
  7091                           fsr2l	equ	0xFD9
  7092                           status	equ	0xFD8
  7093                           
  7094 ;; *************** function _ISR_Bassa *****************
  7095 ;; Defined at:
  7096 ;;		line 190 in file "ABS_Code.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;		None               void
  7103 ;; Registers used:
  7104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7110 ;;      Params:         0       0       0       0
  7111 ;;      Locals:         0       0       0       0
  7112 ;;      Temps:         17       0       0       0
  7113 ;;      Totals:        17       0       0       0
  7114 ;;Total ram usage:       17 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    3
  7117 ;; This function calls:
  7118 ;;		_CANisRxReady
  7119 ;;		_CANreceiveMessage
  7120 ;; This function is called by:
  7121 ;;		Interrupt level 1
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	intcodelo
  7126  000018                     __pintcodelo:
  7127                           	opt stack 0
  7128  000018                     _ISR_Bassa:
  7129                           	opt stack 24
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;incstack = 0
  7133  000018  803B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7134  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7135  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7136  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7137  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7138  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7139  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7140  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7141  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7142  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7143  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7144  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7145  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7146  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7147  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7148  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7149  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7150  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7151                           
  7152                           ;ABS_Code.c: 192: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7153  00005E  A0A4               	btfss	4004,0,c	;volatile
  7154  000060  B2A4               	btfsc	4004,1,c	;volatile
  7155  000062  D001               	goto	i1l3982
  7156  000064  D029               	goto	i1l684
  7157  000066                     i1l3982:
  7158                           
  7159                           ;ABS_Code.c: 193: if (CANisRxReady()) {
  7160  000066  EC11  F014         	call	_CANisRxReady	;wreg free
  7161  00006A  0900               	iorlw	0
  7162  00006C  B4D8               	btfsc	status,2,c
  7163  00006E  D022               	goto	i1l687
  7164                           
  7165                           ;ABS_Code.c: 194: CANreceiveMessage(&msg);
  7166  000070  0E81               	movlw	low _msg
  7167  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7168  000074  0E00               	movlw	high _msg
  7169  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7170  000078  ECD3  F009         	call	_CANreceiveMessage	;wreg free
  7171                           
  7172                           ;ABS_Code.c: 195: if (msg.RTR == 1) {
  7173  00007C  0100               	movlb	0	; () banked
  7174  00007E  058F               	decf	(_msg+14)& (0+255),w,b
  7175  000080  A4D8               	btfss	status,2,c
  7176  000082  D009               	goto	i1l3990
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;ABS_Code.c: 196: remote_frame_id = msg.identifier;
  7180  000084  C081  F068         	movff	_msg,_remote_frame_id
  7181  000088  C082  F069         	movff	_msg+1,_remote_frame_id+1
  7182  00008C  C083  F06A         	movff	_msg+2,_remote_frame_id+2
  7183  000090  C084  F06B         	movff	_msg+3,_remote_frame_id+3
  7184                           
  7185                           ;ABS_Code.c: 197: remote_frame = 1;
  7186  000094  8C39               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7187  000096                     i1l3990:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;ABS_Code.c: 198: }
  7191                           ;ABS_Code.c: 199: if (msg.identifier == 0b00000000000000000000000000100) {
  7192  000096  0E04               	movlw	4
  7193  000098  0100               	movlb	0	; () banked
  7194  00009A  1981               	xorwf	_msg& (0+255),w,b
  7195  00009C  0100               	movlb	0	; () banked
  7196  00009E  1182               	iorwf	(_msg+1)& (0+255),w,b
  7197  0000A0  0100               	movlb	0	; () banked
  7198  0000A2  1183               	iorwf	(_msg+2)& (0+255),w,b
  7199  0000A4  0100               	movlb	0	; () banked
  7200  0000A6  1184               	iorwf	(_msg+3)& (0+255),w,b
  7201  0000A8  A4D8               	btfss	status,2,c
  7202  0000AA  D004               	goto	i1l687
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;ABS_Code.c: 200: brake_signal_CAN = msg.data[0];
  7206  0000AC  C085  F07D         	movff	_msg+4,_brake_signal_CAN
  7207                           
  7208                           ;ABS_Code.c: 201: Analogic_Mode = msg.data[1];
  7209  0000B0  C086  F07C         	movff	_msg+5,_Analogic_Mode
  7210  0000B4                     i1l687:
  7211                           
  7212                           ;ABS_Code.c: 202: }
  7213                           ;ABS_Code.c: 203: }
  7214                           ;ABS_Code.c: 204: PIR3bits.RXB0IF = 0;
  7215  0000B4  90A4               	bcf	4004,0,c	;volatile
  7216                           
  7217                           ;ABS_Code.c: 205: PIR3bits.RXB1IF = 0;
  7218  0000B6  92A4               	bcf	4004,1,c	;volatile
  7219  0000B8                     i1l684:
  7220                           
  7221                           ;ABS_Code.c: 206: }
  7222                           ;ABS_Code.c: 209: if(PIR1bits.TMR1IF == 1) {
  7223  0000B8  A09E               	btfss	3998,0,c	;volatile
  7224  0000BA  D002               	goto	i1l690
  7225                           
  7226                           ;ABS_Code.c: 210: TMR1_overflow = 1;
  7227  0000BC  8439               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
  7228                           
  7229                           ;ABS_Code.c: 211: PIR1bits.TMR1IF = 0;
  7230  0000BE  909E               	bcf	3998,0,c	;volatile
  7231  0000C0                     i1l690:
  7232                           
  7233                           ;ABS_Code.c: 212: }
  7234                           ;ABS_Code.c: 215: if(PIR2bits.TMR3IF == 1){
  7235  0000C0  A2A1               	btfss	4001,1,c	;volatile
  7236  0000C2  D002               	goto	i1l692
  7237                           
  7238                           ;ABS_Code.c: 216: TMR3_overflow = 1;
  7239  0000C4  8639               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  7240                           
  7241                           ;ABS_Code.c: 217: PIR2bits.TMR3IF = 0;
  7242  0000C6  92A1               	bcf	4001,1,c	;volatile
  7243  0000C8                     i1l692:
  7244  0000C8  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7245  0000CC  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7246  0000D0  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7247  0000D4  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7248  0000D8  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7249  0000DC  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7250  0000E0  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7251  0000E4  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7252  0000E8  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7253  0000EC  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7254  0000F0  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7255  0000F4  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7256  0000F8  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7257  0000FC  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7258  000100  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7259  000104  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7260  000108  C00D  FFD8         	movff	??_ISR_Bassa,status
  7261  00010C  903B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7262  00010E  0010               	retfie	
  7263  000110                     __end_of_ISR_Bassa:
  7264                           	opt stack 0
  7265                           pclatu	equ	0xFFB
  7266                           pclath	equ	0xFFA
  7267                           tblptru	equ	0xFF8
  7268                           tblptrh	equ	0xFF7
  7269                           tblptrl	equ	0xFF6
  7270                           tablat	equ	0xFF5
  7271                           prodh	equ	0xFF4
  7272                           prodl	equ	0xFF3
  7273                           intcon	equ	0xFF2
  7274                           intcon2	equ	0xFF1
  7275                           intcon3	equ	0xFF0
  7276                           postinc0	equ	0xFEE
  7277                           fsr0h	equ	0xFEA
  7278                           fsr0l	equ	0xFE9
  7279                           wreg	equ	0xFE8
  7280                           postdec1	equ	0xFE5
  7281                           fsr1h	equ	0xFE2
  7282                           fsr1l	equ	0xFE1
  7283                           bsr	equ	0xFE0
  7284                           indf2	equ	0xFDF
  7285                           fsr2h	equ	0xFDA
  7286                           fsr2l	equ	0xFD9
  7287                           status	equ	0xFD8
  7288                           
  7289 ;; *************** function _CANreceiveMessage *****************
  7290 ;; Defined at:
  7291 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  msg             2    0[COMRAM] PTR struct .
  7294 ;;		 -> msg(15), 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  tamp            1   11[COMRAM] unsigned char 
  7297 ;;  error           1   10[COMRAM] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      unsigned char 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7307 ;;      Params:         2       0       0       0
  7308 ;;      Locals:         2       0       0       0
  7309 ;;      Temps:          8       0       0       0
  7310 ;;      Totals:        12       0       0       0
  7311 ;;Total ram usage:       12 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    2
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_ISR_Bassa
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text17
  7322  0013A6                     __ptext17:
  7323                           	opt stack 0
  7324  0013A6                     _CANreceiveMessage:
  7325                           	opt stack 24
  7326                           
  7327                           ;inc\CANlib.h: 530: BYTE tamp;
  7328                           ;inc\CANlib.h: 531: BYTE error = 0;
  7329                           
  7330                           ;incstack = 0
  7331  0013A6  0E00               	movlw	0
  7332  0013A8  6E0B               	movwf	CANreceiveMessage@error,c
  7333                           
  7334                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7335  0013AA  BE74               	btfsc	3956,7,c	;volatile
  7336                           
  7337                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7338  0013AC  800B               	bsf	CANreceiveMessage@error,0,c
  7339                           
  7340                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7341  0013AE  BC74               	btfsc	3956,6,c	;volatile
  7342                           
  7343                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7344  0013B0  820B               	bsf	CANreceiveMessage@error,1,c
  7345                           
  7346                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7347  0013B2  010F               	movlb	15	; () banked
  7348  0013B4  AF50               	btfss	80,7,b	;volatile
  7349  0013B6  D143               	goto	i1l430
  7350                           
  7351                           ; BSR set to: 15
  7352                           ;inc\CANlib.h: 541: {
  7353                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7354  0013B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7355  0013BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7356  0013C0  6ADE               	clrf	postinc2,c
  7357  0013C2  6ADE               	clrf	postinc2,c
  7358  0013C4  6ADE               	clrf	postinc2,c
  7359  0013C6  6ADD               	clrf	postdec2,c
  7360                           
  7361                           ; BSR set to: 15
  7362                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7363  0013C8  EE20 F004          	lfsr	2,4
  7364  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7365  0013CE  26D9               	addwf	fsr2l,f,c
  7366  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7367  0013D2  22DA               	addwfc	fsr2h,f,c
  7368  0013D4  CF56 FFDF          	movff	3926,indf2	;volatile
  7369                           
  7370                           ; BSR set to: 15
  7371                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7372  0013D8  EE20 F005          	lfsr	2,5
  7373  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7374  0013DE  26D9               	addwf	fsr2l,f,c
  7375  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7376  0013E2  22DA               	addwfc	fsr2h,f,c
  7377  0013E4  CF57 FFDF          	movff	3927,indf2	;volatile
  7378                           
  7379                           ; BSR set to: 15
  7380                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7381  0013E8  EE20 F006          	lfsr	2,6
  7382  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7383  0013EE  26D9               	addwf	fsr2l,f,c
  7384  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7385  0013F2  22DA               	addwfc	fsr2h,f,c
  7386  0013F4  CF58 FFDF          	movff	3928,indf2	;volatile
  7387                           
  7388                           ; BSR set to: 15
  7389                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7390  0013F8  EE20 F007          	lfsr	2,7
  7391  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7392  0013FE  26D9               	addwf	fsr2l,f,c
  7393  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7394  001402  22DA               	addwfc	fsr2h,f,c
  7395  001404  CF59 FFDF          	movff	3929,indf2	;volatile
  7396                           
  7397                           ; BSR set to: 15
  7398                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7399  001408  EE20 F008          	lfsr	2,8
  7400  00140C  5001               	movf	CANreceiveMessage@msg,w,c
  7401  00140E  26D9               	addwf	fsr2l,f,c
  7402  001410  5002               	movf	CANreceiveMessage@msg+1,w,c
  7403  001412  22DA               	addwfc	fsr2h,f,c
  7404  001414  CF5A FFDF          	movff	3930,indf2	;volatile
  7405                           
  7406                           ; BSR set to: 15
  7407                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7408  001418  EE20 F009          	lfsr	2,9
  7409  00141C  5001               	movf	CANreceiveMessage@msg,w,c
  7410  00141E  26D9               	addwf	fsr2l,f,c
  7411  001420  5002               	movf	CANreceiveMessage@msg+1,w,c
  7412  001422  22DA               	addwfc	fsr2h,f,c
  7413  001424  CF5B FFDF          	movff	3931,indf2	;volatile
  7414                           
  7415                           ; BSR set to: 15
  7416                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7417  001428  EE20 F00A          	lfsr	2,10
  7418  00142C  5001               	movf	CANreceiveMessage@msg,w,c
  7419  00142E  26D9               	addwf	fsr2l,f,c
  7420  001430  5002               	movf	CANreceiveMessage@msg+1,w,c
  7421  001432  22DA               	addwfc	fsr2h,f,c
  7422  001434  CF5C FFDF          	movff	3932,indf2	;volatile
  7423                           
  7424                           ; BSR set to: 15
  7425                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7426  001438  EE20 F00B          	lfsr	2,11
  7427  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7428  00143E  26D9               	addwf	fsr2l,f,c
  7429  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7430  001442  22DA               	addwfc	fsr2h,f,c
  7431  001444  CF5D FFDF          	movff	3933,indf2	;volatile
  7432                           
  7433                           ; BSR set to: 15
  7434                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7435  001448  EE20 F00E          	lfsr	2,14
  7436  00144C  5001               	movf	CANreceiveMessage@msg,w,c
  7437  00144E  26D9               	addwf	fsr2l,f,c
  7438  001450  5002               	movf	CANreceiveMessage@msg+1,w,c
  7439  001452  22DA               	addwfc	fsr2h,f,c
  7440  001454  010F               	movlb	15	; () banked
  7441  001456  AD55               	btfss	85,6,b	;volatile
  7442  001458  D002               	goto	i1u385_20
  7443  00145A  0E01               	movlw	1
  7444  00145C  D001               	goto	i1u385_26
  7445  00145E                     i1u385_20:
  7446  00145E  0E00               	movlw	0
  7447  001460                     i1u385_26:
  7448  001460  6EDF               	movwf	indf2,c
  7449                           
  7450                           ; BSR set to: 15
  7451                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7452  001462  EE20 F00D          	lfsr	2,13
  7453  001466  5001               	movf	CANreceiveMessage@msg,w,c
  7454  001468  26D9               	addwf	fsr2l,f,c
  7455  00146A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7456  00146C  22DA               	addwfc	fsr2h,f,c
  7457  00146E  010F               	movlb	15	; () banked
  7458  001470  5155               	movf	85,w,b	;volatile
  7459  001472  0B0F               	andlw	15
  7460  001474  6EDF               	movwf	indf2,c
  7461                           
  7462                           ; BSR set to: 15
  7463                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7464  001476  EE20 F00C          	lfsr	2,12
  7465  00147A  5001               	movf	CANreceiveMessage@msg,w,c
  7466  00147C  26D9               	addwf	fsr2l,f,c
  7467  00147E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7468  001480  22DA               	addwfc	fsr2h,f,c
  7469  001482  010F               	movlb	15	; () banked
  7470  001484  A752               	btfss	82,3,b	;volatile
  7471  001486  D002               	goto	i1u386_20
  7472  001488  0E01               	movlw	1
  7473  00148A  D001               	goto	i1u386_26
  7474  00148C                     i1u386_20:
  7475  00148C  0E00               	movlw	0
  7476  00148E                     i1u386_26:
  7477  00148E  6EDF               	movwf	indf2,c
  7478                           
  7479                           ; BSR set to: 15
  7480                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7481  001490  010F               	movlb	15	; () banked
  7482  001492  B752               	btfsc	82,3,b	;volatile
  7483  001494  D044               	goto	i1l3548
  7484                           
  7485                           ; BSR set to: 15
  7486                           ;inc\CANlib.h: 559: {
  7487                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7488  001496  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7489  00149A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7490  00149C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7491  00149E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7492  0014A0  0E03               	movlw	3
  7493  0014A2                     i1u388_25:
  7494  0014A2  90D8               	bcf	status,0,c
  7495  0014A4  3603               	rlcf	??_CANreceiveMessage,f,c
  7496  0014A6  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7497  0014A8  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7498  0014AA  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7499  0014AC  2EE8               	decfsz	wreg,f,c
  7500  0014AE  D7F9               	goto	i1u388_25
  7501  0014B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7502  0014B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7503  0014B8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7504  0014BC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7505  0014C0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7506  0014C4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7507                           
  7508                           ; BSR set to: 15
  7509                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7510  0014C8  010F               	movlb	15	; () banked
  7511  0014CA  3952               	swapf	82,w,b	;volatile
  7512  0014CC  42E8               	rrncf	wreg,f,c
  7513  0014CE  0B07               	andlw	7
  7514  0014D0  0B07               	andlw	7
  7515  0014D2  6E0C               	movwf	CANreceiveMessage@tamp,c
  7516                           
  7517                           ; BSR set to: 15
  7518                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7519  0014D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7520  0014D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7521  0014DC  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7522  0014E0  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7523  0014E4  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7524  0014E8  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7525  0014EC  500C               	movf	CANreceiveMessage@tamp,w,c
  7526  0014EE  2403               	addwf	??_CANreceiveMessage,w,c
  7527  0014F0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7528  0014F2  0E00               	movlw	0
  7529  0014F4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7530  0014F6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7531  0014F8  0E00               	movlw	0
  7532  0014FA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7533  0014FC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7534  0014FE  0E00               	movlw	0
  7535  001500  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7536  001502  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7537  001504  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7538  001508  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7539  00150C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7540  001510  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7541  001514  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7542  001518  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7543                           
  7544                           ;inc\CANlib.h: 563: }
  7545  00151C  D08D               	goto	i1l3574
  7546  00151E                     i1l3548:
  7547                           
  7548                           ; BSR set to: 15
  7549                           ;inc\CANlib.h: 564: else
  7550                           ;inc\CANlib.h: 565: {
  7551                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7552  00151E  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7553  001522  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7554  001524  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7555  001526  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7556  001528  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7557  00152C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7558  001530  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7559  001534  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7560  001538  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7561  00153C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7562                           
  7563                           ; BSR set to: 15
  7564                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7565  001540  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7566  001544  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7567  001546  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7568  001548  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7569  00154A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7570  00154E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7571  001552  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7572  001556  6A03               	clrf	??_CANreceiveMessage,c
  7573  001558  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7574  00155C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7575  001560  5003               	movf	??_CANreceiveMessage,w,c
  7576  001562  26DE               	addwf	postinc2,f,c
  7577  001564  5004               	movf	??_CANreceiveMessage+1,w,c
  7578  001566  22DE               	addwfc	postinc2,f,c
  7579  001568  5005               	movf	??_CANreceiveMessage+2,w,c
  7580  00156A  22DE               	addwfc	postinc2,f,c
  7581  00156C  5006               	movf	??_CANreceiveMessage+3,w,c
  7582  00156E  22DE               	addwfc	postinc2,f,c
  7583                           
  7584                           ; BSR set to: 15
  7585                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7586  001570  010F               	movlb	15	; () banked
  7587  001572  A152               	btfss	82,0,b	;volatile
  7588  001574  D00C               	goto	i1l3556
  7589                           
  7590                           ; BSR set to: 15
  7591                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7592  001576  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7593  00157A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7594  00157E  0E00               	movlw	0
  7595  001580  12DE               	iorwf	postinc2,f,c
  7596  001582  0E00               	movlw	0
  7597  001584  12DE               	iorwf	postinc2,f,c
  7598  001586  0E01               	movlw	1
  7599  001588  12DE               	iorwf	postinc2,f,c
  7600  00158A  0E00               	movlw	0
  7601  00158C  12DE               	iorwf	postinc2,f,c
  7602  00158E                     i1l3556:
  7603                           
  7604                           ; BSR set to: 15
  7605                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7606  00158E  010F               	movlb	15	; () banked
  7607  001590  A352               	btfss	82,1,b	;volatile
  7608  001592  D00C               	goto	i1l3560
  7609                           
  7610                           ; BSR set to: 15
  7611                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7612  001594  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7613  001598  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7614  00159C  0E00               	movlw	0
  7615  00159E  12DE               	iorwf	postinc2,f,c
  7616  0015A0  0E00               	movlw	0
  7617  0015A2  12DE               	iorwf	postinc2,f,c
  7618  0015A4  0E02               	movlw	2
  7619  0015A6  12DE               	iorwf	postinc2,f,c
  7620  0015A8  0E00               	movlw	0
  7621  0015AA  12DE               	iorwf	postinc2,f,c
  7622  0015AC                     i1l3560:
  7623                           
  7624                           ; BSR set to: 15
  7625                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7626  0015AC  010F               	movlb	15	; () banked
  7627  0015AE  AB52               	btfss	82,5,b	;volatile
  7628  0015B0  D00C               	goto	i1l3564
  7629                           
  7630                           ; BSR set to: 15
  7631                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7632  0015B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7633  0015B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7634  0015BA  0E00               	movlw	0
  7635  0015BC  12DE               	iorwf	postinc2,f,c
  7636  0015BE  0E00               	movlw	0
  7637  0015C0  12DE               	iorwf	postinc2,f,c
  7638  0015C2  0E04               	movlw	4
  7639  0015C4  12DE               	iorwf	postinc2,f,c
  7640  0015C6  0E00               	movlw	0
  7641  0015C8  12DE               	iorwf	postinc2,f,c
  7642  0015CA                     i1l3564:
  7643                           
  7644                           ; BSR set to: 15
  7645                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7646  0015CA  010F               	movlb	15	; () banked
  7647  0015CC  AD52               	btfss	82,6,b	;volatile
  7648  0015CE  D00C               	goto	i1l3568
  7649                           
  7650                           ; BSR set to: 15
  7651                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7652  0015D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7653  0015D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7654  0015D8  0E00               	movlw	0
  7655  0015DA  12DE               	iorwf	postinc2,f,c
  7656  0015DC  0E00               	movlw	0
  7657  0015DE  12DE               	iorwf	postinc2,f,c
  7658  0015E0  0E08               	movlw	8
  7659  0015E2  12DE               	iorwf	postinc2,f,c
  7660  0015E4  0E00               	movlw	0
  7661  0015E6  12DE               	iorwf	postinc2,f,c
  7662  0015E8                     i1l3568:
  7663                           
  7664                           ; BSR set to: 15
  7665                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7666  0015E8  010F               	movlb	15	; () banked
  7667  0015EA  AF52               	btfss	82,7,b	;volatile
  7668  0015EC  D00C               	goto	i1l3572
  7669                           
  7670                           ; BSR set to: 15
  7671                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7672  0015EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7673  0015F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7674  0015F6  0E00               	movlw	0
  7675  0015F8  12DE               	iorwf	postinc2,f,c
  7676  0015FA  0E00               	movlw	0
  7677  0015FC  12DE               	iorwf	postinc2,f,c
  7678  0015FE  0E10               	movlw	16
  7679  001600  12DE               	iorwf	postinc2,f,c
  7680  001602  0E00               	movlw	0
  7681  001604  12DE               	iorwf	postinc2,f,c
  7682  001606                     i1l3572:
  7683                           
  7684                           ; BSR set to: 15
  7685                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7686  001606  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7687  00160A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7688  00160C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7689  00160E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7690  001610  0E15               	movlw	21
  7691  001612                     i1u394_25:
  7692  001612  90D8               	bcf	status,0,c
  7693  001614  3603               	rlcf	??_CANreceiveMessage,f,c
  7694  001616  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7695  001618  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7696  00161A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7697  00161C  2EE8               	decfsz	wreg,f,c
  7698  00161E  D7F9               	goto	i1u394_25
  7699  001620  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7700  001624  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7701  001628  5003               	movf	??_CANreceiveMessage,w,c
  7702  00162A  12DE               	iorwf	postinc2,f,c
  7703  00162C  5004               	movf	??_CANreceiveMessage+1,w,c
  7704  00162E  12DE               	iorwf	postinc2,f,c
  7705  001630  5005               	movf	??_CANreceiveMessage+2,w,c
  7706  001632  12DE               	iorwf	postinc2,f,c
  7707  001634  5006               	movf	??_CANreceiveMessage+3,w,c
  7708  001636  12DE               	iorwf	postinc2,f,c
  7709  001638                     i1l3574:
  7710                           
  7711                           ; BSR set to: 15
  7712                           ;inc\CANlib.h: 581: }
  7713                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7714  001638  010F               	movlb	15	; () banked
  7715  00163A  9F50               	bcf	80,7,b	;volatile
  7716                           
  7717                           ; BSR set to: 15
  7718                           ;inc\CANlib.h: 584: return (error);
  7719                           ;	Return value of _CANreceiveMessage is never used
  7720  00163C  0012               	return	
  7721  00163E                     i1l430:
  7722                           
  7723                           ; BSR set to: 15
  7724                           ;inc\CANlib.h: 585: }
  7725                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7726  00163E  AE60               	btfss	3936,7,c	;volatile
  7727  001640  0012               	return	
  7728                           
  7729                           ; BSR set to: 15
  7730                           ;inc\CANlib.h: 588: {
  7731                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7732  001642  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7733  001646  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7734  00164A  6ADE               	clrf	postinc2,c
  7735  00164C  6ADE               	clrf	postinc2,c
  7736  00164E  6ADE               	clrf	postinc2,c
  7737  001650  6ADD               	clrf	postdec2,c
  7738                           
  7739                           ; BSR set to: 15
  7740                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7741  001652  EE20 F004          	lfsr	2,4
  7742  001656  5001               	movf	CANreceiveMessage@msg,w,c
  7743  001658  26D9               	addwf	fsr2l,f,c
  7744  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7745  00165C  22DA               	addwfc	fsr2h,f,c
  7746  00165E  CF66 FFDF          	movff	3942,indf2	;volatile
  7747                           
  7748                           ; BSR set to: 15
  7749                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7750  001662  EE20 F005          	lfsr	2,5
  7751  001666  5001               	movf	CANreceiveMessage@msg,w,c
  7752  001668  26D9               	addwf	fsr2l,f,c
  7753  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7754  00166C  22DA               	addwfc	fsr2h,f,c
  7755  00166E  CF67 FFDF          	movff	3943,indf2	;volatile
  7756                           
  7757                           ; BSR set to: 15
  7758                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7759  001672  EE20 F006          	lfsr	2,6
  7760  001676  5001               	movf	CANreceiveMessage@msg,w,c
  7761  001678  26D9               	addwf	fsr2l,f,c
  7762  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7763  00167C  22DA               	addwfc	fsr2h,f,c
  7764  00167E  CF68 FFDF          	movff	3944,indf2	;volatile
  7765                           
  7766                           ; BSR set to: 15
  7767                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7768  001682  EE20 F007          	lfsr	2,7
  7769  001686  5001               	movf	CANreceiveMessage@msg,w,c
  7770  001688  26D9               	addwf	fsr2l,f,c
  7771  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7772  00168C  22DA               	addwfc	fsr2h,f,c
  7773  00168E  CF69 FFDF          	movff	3945,indf2	;volatile
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7777  001692  EE20 F008          	lfsr	2,8
  7778  001696  5001               	movf	CANreceiveMessage@msg,w,c
  7779  001698  26D9               	addwf	fsr2l,f,c
  7780  00169A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7781  00169C  22DA               	addwfc	fsr2h,f,c
  7782  00169E  CF6A FFDF          	movff	3946,indf2	;volatile
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7786  0016A2  EE20 F009          	lfsr	2,9
  7787  0016A6  5001               	movf	CANreceiveMessage@msg,w,c
  7788  0016A8  26D9               	addwf	fsr2l,f,c
  7789  0016AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7790  0016AC  22DA               	addwfc	fsr2h,f,c
  7791  0016AE  CF6B FFDF          	movff	3947,indf2	;volatile
  7792                           
  7793                           ; BSR set to: 15
  7794                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7795  0016B2  EE20 F00A          	lfsr	2,10
  7796  0016B6  5001               	movf	CANreceiveMessage@msg,w,c
  7797  0016B8  26D9               	addwf	fsr2l,f,c
  7798  0016BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7799  0016BC  22DA               	addwfc	fsr2h,f,c
  7800  0016BE  CF6C FFDF          	movff	3948,indf2	;volatile
  7801                           
  7802                           ; BSR set to: 15
  7803                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7804  0016C2  EE20 F00B          	lfsr	2,11
  7805  0016C6  5001               	movf	CANreceiveMessage@msg,w,c
  7806  0016C8  26D9               	addwf	fsr2l,f,c
  7807  0016CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7808  0016CC  22DA               	addwfc	fsr2h,f,c
  7809  0016CE  CF6D FFDF          	movff	3949,indf2	;volatile
  7810                           
  7811                           ; BSR set to: 15
  7812                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7813  0016D2  EE20 F00E          	lfsr	2,14
  7814  0016D6  5001               	movf	CANreceiveMessage@msg,w,c
  7815  0016D8  26D9               	addwf	fsr2l,f,c
  7816  0016DA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7817  0016DC  22DA               	addwfc	fsr2h,f,c
  7818  0016DE  AC65               	btfss	3941,6,c	;volatile
  7819  0016E0  D002               	goto	i1u396_20
  7820  0016E2  0E01               	movlw	1
  7821  0016E4  D001               	goto	i1u396_26
  7822  0016E6                     i1u396_20:
  7823  0016E6  0E00               	movlw	0
  7824  0016E8                     i1u396_26:
  7825  0016E8  6EDF               	movwf	indf2,c
  7826                           
  7827                           ; BSR set to: 15
  7828                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7829  0016EA  EE20 F00D          	lfsr	2,13
  7830  0016EE  5001               	movf	CANreceiveMessage@msg,w,c
  7831  0016F0  26D9               	addwf	fsr2l,f,c
  7832  0016F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7833  0016F4  22DA               	addwfc	fsr2h,f,c
  7834  0016F6  5065               	movf	3941,w,c	;volatile
  7835  0016F8  0B0F               	andlw	15
  7836  0016FA  6EDF               	movwf	indf2,c
  7837                           
  7838                           ; BSR set to: 15
  7839                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7840  0016FC  EE20 F00C          	lfsr	2,12
  7841  001700  5001               	movf	CANreceiveMessage@msg,w,c
  7842  001702  26D9               	addwf	fsr2l,f,c
  7843  001704  5002               	movf	CANreceiveMessage@msg+1,w,c
  7844  001706  22DA               	addwfc	fsr2h,f,c
  7845  001708  A662               	btfss	3938,3,c	;volatile
  7846  00170A  D002               	goto	i1u397_20
  7847  00170C  0E01               	movlw	1
  7848  00170E  D001               	goto	i1u397_26
  7849  001710                     i1u397_20:
  7850  001710  0E00               	movlw	0
  7851  001712                     i1u397_26:
  7852  001712  6EDF               	movwf	indf2,c
  7853                           
  7854                           ; BSR set to: 15
  7855                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7856  001714  B662               	btfsc	3938,3,c	;volatile
  7857  001716  D043               	goto	i1l3610
  7858                           
  7859                           ; BSR set to: 15
  7860                           ;inc\CANlib.h: 606: {
  7861                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7862  001718  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7863  00171C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7864  00171E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7865  001720  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7866  001722  0E03               	movlw	3
  7867  001724                     i1u399_25:
  7868  001724  90D8               	bcf	status,0,c
  7869  001726  3603               	rlcf	??_CANreceiveMessage,f,c
  7870  001728  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7871  00172A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7872  00172C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7873  00172E  2EE8               	decfsz	wreg,f,c
  7874  001730  D7F9               	goto	i1u399_25
  7875  001732  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7876  001736  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7877  00173A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7878  00173E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7879  001742  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7880  001746  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7881                           
  7882                           ; BSR set to: 15
  7883                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7884  00174A  3862               	swapf	3938,w,c	;volatile
  7885  00174C  42E8               	rrncf	wreg,f,c
  7886  00174E  0B07               	andlw	7
  7887  001750  0B07               	andlw	7
  7888  001752  6E0C               	movwf	CANreceiveMessage@tamp,c
  7889                           
  7890                           ; BSR set to: 15
  7891                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7892  001754  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7893  001758  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7894  00175C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7895  001760  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7896  001764  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7897  001768  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7898  00176C  500C               	movf	CANreceiveMessage@tamp,w,c
  7899  00176E  2403               	addwf	??_CANreceiveMessage,w,c
  7900  001770  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7901  001772  0E00               	movlw	0
  7902  001774  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7903  001776  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7904  001778  0E00               	movlw	0
  7905  00177A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7906  00177C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7907  00177E  0E00               	movlw	0
  7908  001780  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7909  001782  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7910  001784  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7911  001788  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7912  00178C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7913  001790  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7914  001794  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7915  001798  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7916                           
  7917                           ;inc\CANlib.h: 610: }
  7918  00179C  D088               	goto	i1l3636
  7919  00179E                     i1l3610:
  7920                           
  7921                           ; BSR set to: 15
  7922                           ;inc\CANlib.h: 611: else
  7923                           ;inc\CANlib.h: 612: {
  7924                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7925  00179E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7926  0017A2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7927  0017A4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7928  0017A6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7929  0017A8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7930  0017AC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7931  0017B0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7932  0017B4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7933  0017B8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7934  0017BC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7935                           
  7936                           ; BSR set to: 15
  7937                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7938  0017C0  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7939  0017C4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7940  0017C6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7941  0017C8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7942  0017CA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7943  0017CE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7944  0017D2  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7945  0017D6  6A03               	clrf	??_CANreceiveMessage,c
  7946  0017D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7947  0017DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7948  0017E0  5003               	movf	??_CANreceiveMessage,w,c
  7949  0017E2  26DE               	addwf	postinc2,f,c
  7950  0017E4  5004               	movf	??_CANreceiveMessage+1,w,c
  7951  0017E6  22DE               	addwfc	postinc2,f,c
  7952  0017E8  5005               	movf	??_CANreceiveMessage+2,w,c
  7953  0017EA  22DE               	addwfc	postinc2,f,c
  7954  0017EC  5006               	movf	??_CANreceiveMessage+3,w,c
  7955  0017EE  22DE               	addwfc	postinc2,f,c
  7956                           
  7957                           ; BSR set to: 15
  7958                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7959  0017F0  A062               	btfss	3938,0,c	;volatile
  7960  0017F2  D00C               	goto	i1l3618
  7961                           
  7962                           ; BSR set to: 15
  7963                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7964  0017F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7965  0017F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7966  0017FC  0E00               	movlw	0
  7967  0017FE  12DE               	iorwf	postinc2,f,c
  7968  001800  0E00               	movlw	0
  7969  001802  12DE               	iorwf	postinc2,f,c
  7970  001804  0E01               	movlw	1
  7971  001806  12DE               	iorwf	postinc2,f,c
  7972  001808  0E00               	movlw	0
  7973  00180A  12DE               	iorwf	postinc2,f,c
  7974  00180C                     i1l3618:
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7978  00180C  A262               	btfss	3938,1,c	;volatile
  7979  00180E  D00C               	goto	i1l3622
  7980                           
  7981                           ; BSR set to: 15
  7982                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7983  001810  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7984  001814  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7985  001818  0E00               	movlw	0
  7986  00181A  12DE               	iorwf	postinc2,f,c
  7987  00181C  0E00               	movlw	0
  7988  00181E  12DE               	iorwf	postinc2,f,c
  7989  001820  0E02               	movlw	2
  7990  001822  12DE               	iorwf	postinc2,f,c
  7991  001824  0E00               	movlw	0
  7992  001826  12DE               	iorwf	postinc2,f,c
  7993  001828                     i1l3622:
  7994                           
  7995                           ; BSR set to: 15
  7996                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7997  001828  AA62               	btfss	3938,5,c	;volatile
  7998  00182A  D00C               	goto	i1l3626
  7999                           
  8000                           ; BSR set to: 15
  8001                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8002  00182C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8003  001830  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8004  001834  0E00               	movlw	0
  8005  001836  12DE               	iorwf	postinc2,f,c
  8006  001838  0E00               	movlw	0
  8007  00183A  12DE               	iorwf	postinc2,f,c
  8008  00183C  0E04               	movlw	4
  8009  00183E  12DE               	iorwf	postinc2,f,c
  8010  001840  0E00               	movlw	0
  8011  001842  12DE               	iorwf	postinc2,f,c
  8012  001844                     i1l3626:
  8013                           
  8014                           ; BSR set to: 15
  8015                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8016  001844  AC62               	btfss	3938,6,c	;volatile
  8017  001846  D00C               	goto	i1l3630
  8018                           
  8019                           ; BSR set to: 15
  8020                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8021  001848  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8022  00184C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8023  001850  0E00               	movlw	0
  8024  001852  12DE               	iorwf	postinc2,f,c
  8025  001854  0E00               	movlw	0
  8026  001856  12DE               	iorwf	postinc2,f,c
  8027  001858  0E08               	movlw	8
  8028  00185A  12DE               	iorwf	postinc2,f,c
  8029  00185C  0E00               	movlw	0
  8030  00185E  12DE               	iorwf	postinc2,f,c
  8031  001860                     i1l3630:
  8032                           
  8033                           ; BSR set to: 15
  8034                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8035  001860  AE62               	btfss	3938,7,c	;volatile
  8036  001862  D00C               	goto	i1l3634
  8037                           
  8038                           ; BSR set to: 15
  8039                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8040  001864  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8041  001868  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8042  00186C  0E00               	movlw	0
  8043  00186E  12DE               	iorwf	postinc2,f,c
  8044  001870  0E00               	movlw	0
  8045  001872  12DE               	iorwf	postinc2,f,c
  8046  001874  0E10               	movlw	16
  8047  001876  12DE               	iorwf	postinc2,f,c
  8048  001878  0E00               	movlw	0
  8049  00187A  12DE               	iorwf	postinc2,f,c
  8050  00187C                     i1l3634:
  8051                           
  8052                           ; BSR set to: 15
  8053                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8054  00187C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8055  001880  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8056  001882  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8057  001884  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8058  001886  0E15               	movlw	21
  8059  001888                     i1u405_25:
  8060  001888  90D8               	bcf	status,0,c
  8061  00188A  3603               	rlcf	??_CANreceiveMessage,f,c
  8062  00188C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8063  00188E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8064  001890  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8065  001892  2EE8               	decfsz	wreg,f,c
  8066  001894  D7F9               	goto	i1u405_25
  8067  001896  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8068  00189A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8069  00189E  5003               	movf	??_CANreceiveMessage,w,c
  8070  0018A0  12DE               	iorwf	postinc2,f,c
  8071  0018A2  5004               	movf	??_CANreceiveMessage+1,w,c
  8072  0018A4  12DE               	iorwf	postinc2,f,c
  8073  0018A6  5005               	movf	??_CANreceiveMessage+2,w,c
  8074  0018A8  12DE               	iorwf	postinc2,f,c
  8075  0018AA  5006               	movf	??_CANreceiveMessage+3,w,c
  8076  0018AC  12DE               	iorwf	postinc2,f,c
  8077  0018AE                     i1l3636:
  8078                           
  8079                           ; BSR set to: 15
  8080                           ;inc\CANlib.h: 629: }
  8081                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8082  0018AE  9E60               	bcf	3936,7,c	;volatile
  8083                           
  8084                           ; BSR set to: 15
  8085                           ;inc\CANlib.h: 632: return (error);
  8086                           ;	Return value of _CANreceiveMessage is never used
  8087  0018B0  0012               	return	
  8088  0018B2                     __end_of_CANreceiveMessage:
  8089                           	opt stack 0
  8090                           pclatu	equ	0xFFB
  8091                           pclath	equ	0xFFA
  8092                           tblptru	equ	0xFF8
  8093                           tblptrh	equ	0xFF7
  8094                           tblptrl	equ	0xFF6
  8095                           tablat	equ	0xFF5
  8096                           prodh	equ	0xFF4
  8097                           prodl	equ	0xFF3
  8098                           intcon	equ	0xFF2
  8099                           intcon2	equ	0xFF1
  8100                           intcon3	equ	0xFF0
  8101                           postinc0	equ	0xFEE
  8102                           fsr0h	equ	0xFEA
  8103                           fsr0l	equ	0xFE9
  8104                           wreg	equ	0xFE8
  8105                           postdec1	equ	0xFE5
  8106                           fsr1h	equ	0xFE2
  8107                           fsr1l	equ	0xFE1
  8108                           bsr	equ	0xFE0
  8109                           indf2	equ	0xFDF
  8110                           postinc2	equ	0xFDE
  8111                           postdec2	equ	0xFDD
  8112                           fsr2h	equ	0xFDA
  8113                           fsr2l	equ	0xFD9
  8114                           status	equ	0xFD8
  8115                           
  8116 ;; *************** function _CANisRxReady *****************
  8117 ;; Defined at:
  8118 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      unsigned char 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8132 ;;      Params:         0       0       0       0
  8133 ;;      Locals:         1       0       0       0
  8134 ;;      Temps:          0       0       0       0
  8135 ;;      Totals:         1       0       0       0
  8136 ;;Total ram usage:        1 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    2
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_ISR_Bassa
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text18
  8147  002822                     __ptext18:
  8148                           	opt stack 0
  8149  002822                     _CANisRxReady:
  8150                           	opt stack 24
  8151                           
  8152                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8153                           
  8154                           ; BSR set to: 15
  8155                           ;incstack = 0
  8156  002822  0E01               	movlw	1
  8157  002824  6E01               	movwf	_CANisRxReady$3284,c
  8158  002826  BE60               	btfsc	3936,7,c	;volatile
  8159  002828  D005               	goto	i1l581
  8160  00282A  010F               	movlb	15	; () banked
  8161  00282C  BF50               	btfsc	80,7,b	;volatile
  8162  00282E  D002               	goto	i1l581
  8163                           
  8164                           ; BSR set to: 15
  8165  002830  0E00               	movlw	0
  8166  002832  6E01               	movwf	_CANisRxReady$3284,c
  8167  002834                     i1l581:
  8168  002834  5001               	movf	_CANisRxReady$3284,w,c
  8169  002836  0012               	return	
  8170  002838                     __end_of_CANisRxReady:
  8171                           	opt stack 0
  8172                           pclatu	equ	0xFFB
  8173                           pclath	equ	0xFFA
  8174                           tblptru	equ	0xFF8
  8175                           tblptrh	equ	0xFF7
  8176                           tblptrl	equ	0xFF6
  8177                           tablat	equ	0xFF5
  8178                           prodh	equ	0xFF4
  8179                           prodl	equ	0xFF3
  8180                           intcon	equ	0xFF2
  8181                           intcon2	equ	0xFF1
  8182                           intcon3	equ	0xFF0
  8183                           postinc0	equ	0xFEE
  8184                           fsr0h	equ	0xFEA
  8185                           fsr0l	equ	0xFE9
  8186                           wreg	equ	0xFE8
  8187                           postdec1	equ	0xFE5
  8188                           fsr1h	equ	0xFE2
  8189                           fsr1l	equ	0xFE1
  8190                           bsr	equ	0xFE0
  8191                           indf2	equ	0xFDF
  8192                           postinc2	equ	0xFDE
  8193                           postdec2	equ	0xFDD
  8194                           fsr2h	equ	0xFDA
  8195                           fsr2l	equ	0xFD9
  8196                           status	equ	0xFD8
  8197                           
  8198 ;; *************** function _ISR_Alta *****************
  8199 ;; Defined at:
  8200 ;;		line 129 in file "ABS_Code.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;		None
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;		None               void
  8207 ;; Registers used:
  8208 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8214 ;;      Params:         0       0       0       0
  8215 ;;      Locals:         0       0       0       0
  8216 ;;      Temps:          0      22       0       0
  8217 ;;      Totals:         0      22       0       0
  8218 ;;Total ram usage:       22 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; Hardware stack levels required when called:    1
  8221 ;; This function calls:
  8222 ;;		_WriteTimer0
  8223 ;;		i2___awdiv
  8224 ;;		i2___lwdiv
  8225 ;;		i2___wmul
  8226 ;; This function is called by:
  8227 ;;		Interrupt level 2
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           	psect	intcode
  8232  000008                     __pintcode:
  8233                           	opt stack 0
  8234  000008                     _ISR_Alta:
  8235                           	opt stack 24
  8236                           
  8237                           ;incstack = 0
  8238  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8239  00000A  CFFA F0AA          	movff	pclath,??_ISR_Alta+8
  8240  00000E  CFFB F0AB          	movff	pclatu,??_ISR_Alta+9
  8241  000012  ED28  F00E         	call	int_func,f	;refresh shadow registers
  8242                           pclatu	equ	0xFFB
  8243                           pclath	equ	0xFFA
  8244                           tblptru	equ	0xFF8
  8245                           tblptrh	equ	0xFF7
  8246                           tblptrl	equ	0xFF6
  8247                           tablat	equ	0xFF5
  8248                           prodh	equ	0xFF4
  8249                           prodl	equ	0xFF3
  8250                           intcon	equ	0xFF2
  8251                           intcon2	equ	0xFF1
  8252                           intcon3	equ	0xFF0
  8253                           postinc0	equ	0xFEE
  8254                           fsr0h	equ	0xFEA
  8255                           fsr0l	equ	0xFE9
  8256                           wreg	equ	0xFE8
  8257                           postdec1	equ	0xFE5
  8258                           fsr1h	equ	0xFE2
  8259                           fsr1l	equ	0xFE1
  8260                           bsr	equ	0xFE0
  8261                           indf2	equ	0xFDF
  8262                           postinc2	equ	0xFDE
  8263                           postdec2	equ	0xFDD
  8264                           fsr2h	equ	0xFDA
  8265                           fsr2l	equ	0xFD9
  8266                           status	equ	0xFD8
  8267                           
  8268                           	psect	intcode_body
  8269  001C50                     __pintcode_body:
  8270                           	opt stack 24
  8271  001C50                     int_func:
  8272                           	opt stack 24
  8273  001C50  0006               	pop		; remove dummy address from shadow register refresh
  8274  001C52  CFE9 F0AC          	movff	fsr0l,??_ISR_Alta+10
  8275  001C56  CFEA F0AD          	movff	fsr0h,??_ISR_Alta+11
  8276  001C5A  CFE1 F0AE          	movff	fsr1l,??_ISR_Alta+12
  8277  001C5E  CFE2 F0AF          	movff	fsr1h,??_ISR_Alta+13
  8278  001C62  CFD9 F0B0          	movff	fsr2l,??_ISR_Alta+14
  8279  001C66  CFDA F0B1          	movff	fsr2h,??_ISR_Alta+15
  8280  001C6A  CFF3 F0B2          	movff	prodl,??_ISR_Alta+16
  8281  001C6E  CFF4 F0B3          	movff	prodh,??_ISR_Alta+17
  8282  001C72  CFF6 F0B4          	movff	tblptrl,??_ISR_Alta+18
  8283  001C76  CFF7 F0B5          	movff	tblptrh,??_ISR_Alta+19
  8284  001C7A  CFF8 F0B6          	movff	tblptru,??_ISR_Alta+20
  8285  001C7E  CFF5 F0B7          	movff	tablat,??_ISR_Alta+21
  8286                           
  8287                           ;ABS_Code.c: 131: if (INTCONbits.TMR0IF == 1) {
  8288  001C82  A4F2               	btfss	intcon,2,c	;volatile
  8289  001C84  D09D               	goto	i2l4114
  8290                           
  8291                           ;ABS_Code.c: 132: if (PORTCbits.RC0 == 1) {
  8292  001C86  A082               	btfss	3970,0,c	;volatile
  8293  001C88  D094               	goto	i2l4110
  8294                           
  8295                           ;ABS_Code.c: 133: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8296  001C8A  0E40               	movlw	64
  8297  001C8C  0100               	movlb	0	; () banked
  8298  001C8E  6FA2               	movwf	??_ISR_Alta& (0+255),b
  8299  001C90  0E06               	movlw	6
  8300  001C92  0100               	movlb	0	; () banked
  8301  001C94  6FA3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8302  001C96  C038  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8303  001C9A  6A1F               	clrf	i2___wmul@multiplier+1,c
  8304  001C9C  0E05               	movlw	5
  8305  001C9E  6E21               	movwf	i2___wmul@multiplicand+1,c
  8306  001CA0  0E78               	movlw	120
  8307  001CA2  6E20               	movwf	i2___wmul@multiplicand,c
  8308  001CA4  ECE1  F013         	call	i2___wmul	;wreg free
  8309  001CA8  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8310  001CAC  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8311  001CB0  0E00               	movlw	0
  8312  001CB2  6E27               	movwf	i2___awdiv@divisor+1,c
  8313  001CB4  0EB4               	movlw	180
  8314  001CB6  6E26               	movwf	i2___awdiv@divisor,c
  8315  001CB8  ECBE  F012         	call	i2___awdiv	;wreg free
  8316  001CBC  90D8               	bcf	status,0,c
  8317  001CBE  3624               	rlcf	?i2___awdiv,f,c
  8318  001CC0  3625               	rlcf	?i2___awdiv+1,f,c
  8319  001CC2  0100               	movlb	0	; () banked
  8320  001CC4  51A2               	movf	??_ISR_Alta& (0+255),w,b
  8321  001CC6  2624               	addwf	?i2___awdiv,f,c
  8322  001CC8  0100               	movlb	0	; () banked
  8323  001CCA  51A3               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8324  001CCC  2225               	addwfc	?i2___awdiv+1,f,c
  8325  001CCE  C024  F030         	movff	?i2___awdiv,_timer_on
  8326  001CD2  C025  F031         	movff	?i2___awdiv+1,_timer_on+1
  8327  001CD6  0E00               	movlw	0
  8328  001CD8  BE31               	btfsc	_timer_on+1,7,c
  8329  001CDA  0EFF               	movlw	-1
  8330  001CDC  6E32               	movwf	_timer_on+2,c
  8331  001CDE  6E33               	movwf	_timer_on+3,c
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;ABS_Code.c: 134: timer_off = 65536 - (40000 - timer_on);
  8335  001CE0  C030  F0A2         	movff	_timer_on,??_ISR_Alta
  8336  001CE4  C031  F0A3         	movff	_timer_on+1,??_ISR_Alta+1
  8337  001CE8  C032  F0A4         	movff	_timer_on+2,??_ISR_Alta+2
  8338  001CEC  C033  F0A5         	movff	_timer_on+3,??_ISR_Alta+3
  8339  001CF0  0100               	movlb	0	; () banked
  8340  001CF2  1FA2               	comf	??_ISR_Alta& (0+255),f,b
  8341  001CF4  1FA3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8342  001CF6  1FA4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8343  001CF8  1FA5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8344  001CFA  2BA2               	incf	??_ISR_Alta& (0+255),f,b
  8345  001CFC  0E00               	movlw	0
  8346  001CFE  23A3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8347  001D00  23A4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8348  001D02  23A5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8349  001D04  0E40               	movlw	64
  8350  001D06  0100               	movlb	0	; () banked
  8351  001D08  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8352  001D0A  0100               	movlb	0	; () banked
  8353  001D0C  6FA6               	movwf	(??_ISR_Alta+4)& (0+255),b
  8354  001D0E  0E9C               	movlw	156
  8355  001D10  0100               	movlb	0	; () banked
  8356  001D12  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8357  001D14  0100               	movlb	0	; () banked
  8358  001D16  6FA7               	movwf	(??_ISR_Alta+5)& (0+255),b
  8359  001D18  0E00               	movlw	0
  8360  001D1A  0100               	movlb	0	; () banked
  8361  001D1C  21A4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8362  001D1E  0100               	movlb	0	; () banked
  8363  001D20  6FA8               	movwf	(??_ISR_Alta+6)& (0+255),b
  8364  001D22  0E00               	movlw	0
  8365  001D24  0100               	movlb	0	; () banked
  8366  001D26  21A5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8367  001D28  0100               	movlb	0	; () banked
  8368  001D2A  6FA9               	movwf	(??_ISR_Alta+7)& (0+255),b
  8369  001D2C  0100               	movlb	0	; () banked
  8370  001D2E  1FA6               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8371  001D30  1FA7               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8372  001D32  1FA8               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8373  001D34  1FA9               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8374  001D36  2BA6               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8375  001D38  0E00               	movlw	0
  8376  001D3A  23A7               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8377  001D3C  23A8               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8378  001D3E  23A9               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8379  001D40  0E00               	movlw	0
  8380  001D42  0100               	movlb	0	; () banked
  8381  001D44  25A6               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8382  001D46  6E2C               	movwf	_timer_off,c
  8383  001D48  0E00               	movlw	0
  8384  001D4A  0100               	movlb	0	; () banked
  8385  001D4C  21A7               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8386  001D4E  6E2D               	movwf	_timer_off+1,c
  8387  001D50  0E01               	movlw	1
  8388  001D52  0100               	movlb	0	; () banked
  8389  001D54  21A8               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8390  001D56  6E2E               	movwf	_timer_off+2,c
  8391  001D58  0E00               	movlw	0
  8392  001D5A  0100               	movlb	0	; () banked
  8393  001D5C  21A9               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8394  001D5E  6E2F               	movwf	_timer_off+3,c
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;ABS_Code.c: 135: timer_on = 65536 - timer_on;
  8398  001D60  C030  F0A2         	movff	_timer_on,??_ISR_Alta
  8399  001D64  C031  F0A3         	movff	_timer_on+1,??_ISR_Alta+1
  8400  001D68  C032  F0A4         	movff	_timer_on+2,??_ISR_Alta+2
  8401  001D6C  C033  F0A5         	movff	_timer_on+3,??_ISR_Alta+3
  8402  001D70  0100               	movlb	0	; () banked
  8403  001D72  1FA2               	comf	??_ISR_Alta& (0+255),f,b
  8404  001D74  1FA3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8405  001D76  1FA4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8406  001D78  1FA5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8407  001D7A  2BA2               	incf	??_ISR_Alta& (0+255),f,b
  8408  001D7C  0E00               	movlw	0
  8409  001D7E  23A3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8410  001D80  23A4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8411  001D82  23A5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8412  001D84  0E00               	movlw	0
  8413  001D86  0100               	movlb	0	; () banked
  8414  001D88  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8415  001D8A  6E30               	movwf	_timer_on,c
  8416  001D8C  0E00               	movlw	0
  8417  001D8E  0100               	movlb	0	; () banked
  8418  001D90  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8419  001D92  6E31               	movwf	_timer_on+1,c
  8420  001D94  0E01               	movlw	1
  8421  001D96  0100               	movlb	0	; () banked
  8422  001D98  21A4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8423  001D9A  6E32               	movwf	_timer_on+2,c
  8424  001D9C  0E00               	movlw	0
  8425  001D9E  0100               	movlb	0	; () banked
  8426  001DA0  21A5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8427  001DA2  6E33               	movwf	_timer_on+3,c
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;ABS_Code.c: 136: WriteTimer0(timer_on);
  8431  001DA4  C030  F01E         	movff	_timer_on,WriteTimer0@timer0
  8432  001DA8  C031  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1
  8433  001DAC  EC1C  F014         	call	_WriteTimer0	;wreg free
  8434                           
  8435                           ;ABS_Code.c: 137: } else {
  8436  001DB0  D006               	goto	i2l4112
  8437  001DB2                     i2l4110:
  8438                           
  8439                           ;ABS_Code.c: 138: WriteTimer0(timer_off);
  8440  001DB2  C02C  F01E         	movff	_timer_off,WriteTimer0@timer0
  8441  001DB6  C02D  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1
  8442  001DBA  EC1C  F014         	call	_WriteTimer0	;wreg free
  8443  001DBE                     i2l4112:
  8444                           
  8445                           ;ABS_Code.c: 139: }
  8446                           ;ABS_Code.c: 140: INTCONbits.TMR0IF = 0;
  8447  001DBE  94F2               	bcf	intcon,2,c	;volatile
  8448  001DC0                     i2l4114:
  8449                           
  8450                           ;ABS_Code.c: 141: }
  8451                           ;ABS_Code.c: 144: if (INTCONbits.INT0IF == 1) {
  8452  001DC0  A2F2               	btfss	intcon,1,c	;volatile
  8453  001DC2  D041               	goto	i2l4138
  8454                           
  8455                           ;ABS_Code.c: 145: if (x == 0) {
  8456  001DC4  BE39               	btfsc	_x/(0+8),_x& (0+7),c
  8457  001DC6  D006               	goto	i2l4122
  8458                           
  8459                           ;ABS_Code.c: 146: TMR1H = 0x00;
  8460  001DC8  0E00               	movlw	0
  8461  001DCA  6ECF               	movwf	4047,c	;volatile
  8462                           
  8463                           ;ABS_Code.c: 147: TMR1L = 0x00;
  8464  001DCC  0E00               	movlw	0
  8465  001DCE  6ECE               	movwf	4046,c	;volatile
  8466                           
  8467                           ;ABS_Code.c: 148: x = 1;
  8468  001DD0  8E39               	bsf	_x/(0+8),_x& (0+7),c
  8469                           
  8470                           ;ABS_Code.c: 149: } else {
  8471  001DD2  D028               	goto	i2l4136
  8472  001DD4                     i2l4122:
  8473                           
  8474                           ;ABS_Code.c: 150: gap_time_1 = (TMR1H <<8) + TMR1L;
  8475  001DD4  50CF               	movf	4047,w,c	;volatile
  8476  001DD6  0100               	movlb	0	; () banked
  8477  001DD8  6FA3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8478  001DDA  6BA2               	clrf	??_ISR_Alta& (0+255),b
  8479  001DDC  50CE               	movf	4046,w,c	;volatile
  8480  001DDE  0100               	movlb	0	; () banked
  8481  001DE0  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8482  001DE2  6E34               	movwf	_gap_time_1,c
  8483  001DE4  0E00               	movlw	0
  8484  001DE6  0100               	movlb	0	; () banked
  8485  001DE8  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8486  001DEA  6E35               	movwf	_gap_time_1+1,c
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;ABS_Code.c: 151: gap_time_1 = gap_time_1 / 500;
  8490  001DEC  C034  F01E         	movff	_gap_time_1,i2___lwdiv@dividend
  8491  001DF0  C035  F01F         	movff	_gap_time_1+1,i2___lwdiv@dividend+1
  8492  001DF4  0E01               	movlw	1
  8493  001DF6  6E21               	movwf	i2___lwdiv@divisor+1,c
  8494  001DF8  0EF4               	movlw	244
  8495  001DFA  6E20               	movwf	i2___lwdiv@divisor,c
  8496  001DFC  EC3C  F013         	call	i2___lwdiv	;wreg free
  8497  001E00  C01E  F034         	movff	?i2___lwdiv,_gap_time_1
  8498  001E04  C01F  F035         	movff	?i2___lwdiv+1,_gap_time_1+1
  8499                           
  8500                           ;ABS_Code.c: 152: ENC1_measure = 1;
  8501  001E08  8039               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  8502                           
  8503                           ;ABS_Code.c: 153: TMR1H = 0x00;
  8504  001E0A  0E00               	movlw	0
  8505  001E0C  6ECF               	movwf	4047,c	;volatile
  8506                           
  8507                           ;ABS_Code.c: 154: TMR1H = 0x00;
  8508  001E0E  0E00               	movlw	0
  8509  001E10  6ECF               	movwf	4047,c	;volatile
  8510                           
  8511                           ;ABS_Code.c: 155: if (count_flag == 1) {
  8512  001E12  AA39               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8513  001E14  D007               	goto	i2l4136
  8514                           
  8515                           ;ABS_Code.c: 156: int_counter_1++;
  8516  001E16  0E01               	movlw	1
  8517  001E18  0100               	movlb	0	; () banked
  8518  001E1A  2760               	addwf	_int_counter_1& (0+255),f,b
  8519  001E1C  0E00               	movlw	0
  8520  001E1E  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b
  8521  001E20  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b
  8522  001E22  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b
  8523  001E24                     i2l4136:
  8524                           
  8525                           ;ABS_Code.c: 157: }
  8526                           ;ABS_Code.c: 158: }
  8527                           ;ABS_Code.c: 159: INTCONbits.INT0IF = 0;
  8528  001E24  92F2               	bcf	intcon,1,c	;volatile
  8529                           
  8530                           ;ABS_Code.c: 160: PORTCbits.RC1 = ~PORTCbits.RC1;
  8531  001E26  A282               	btfss	3970,1,c	;volatile
  8532  001E28  D002               	goto	i2u468_40
  8533  001E2A  0E01               	movlw	1
  8534  001E2C  D001               	goto	i2u468_46
  8535  001E2E                     i2u468_40:
  8536  001E2E  0E00               	movlw	0
  8537  001E30                     i2u468_46:
  8538  001E30  0AFF               	xorlw	255
  8539  001E32  0100               	movlb	0	; () banked
  8540  001E34  6FA2               	movwf	??_ISR_Alta& (0+255),b
  8541  001E36  0100               	movlb	0	; () banked
  8542  001E38  47A2               	rlncf	??_ISR_Alta& (0+255),f,b
  8543  001E3A  5082               	movf	3970,w,c	;volatile
  8544  001E3C  0100               	movlb	0	; () banked
  8545  001E3E  19A2               	xorwf	??_ISR_Alta& (0+255),w,b
  8546  001E40  0BFD               	andlw	-3
  8547  001E42  19A2               	xorwf	??_ISR_Alta& (0+255),w,b
  8548  001E44  6E82               	movwf	3970,c	;volatile
  8549  001E46                     i2l4138:
  8550                           
  8551                           ;ABS_Code.c: 161: }
  8552                           ;ABS_Code.c: 164: if (INTCON3bits.INT1IF == 1) {
  8553  001E46  A0F0               	btfss	intcon3,0,c	;volatile
  8554  001E48  D031               	goto	i2l681
  8555                           
  8556                           ;ABS_Code.c: 165: if (y == 0) {
  8557  001E4A  B03A               	btfsc	_y/(0+8),_y& (0+7),c
  8558  001E4C  D006               	goto	i2l4146
  8559                           
  8560                           ;ABS_Code.c: 166: TMR3H = 0x00;
  8561  001E4E  0E00               	movlw	0
  8562  001E50  6EB3               	movwf	4019,c	;volatile
  8563                           
  8564                           ;ABS_Code.c: 167: TMR3L = 0x00;
  8565  001E52  0E00               	movlw	0
  8566  001E54  6EB2               	movwf	4018,c	;volatile
  8567                           
  8568                           ;ABS_Code.c: 168: y = 1;
  8569  001E56  803A               	bsf	_y/(0+8),_y& (0+7),c
  8570                           
  8571                           ;ABS_Code.c: 169: } else {
  8572  001E58  D028               	goto	i2l4160
  8573  001E5A                     i2l4146:
  8574                           
  8575                           ;ABS_Code.c: 170: gap_time_2 = (TMR3H <<8) + TMR3L;
  8576  001E5A  50B3               	movf	4019,w,c	;volatile
  8577  001E5C  0100               	movlb	0	; () banked
  8578  001E5E  6FA3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8579  001E60  6BA2               	clrf	??_ISR_Alta& (0+255),b
  8580  001E62  50B2               	movf	4018,w,c	;volatile
  8581  001E64  0100               	movlb	0	; () banked
  8582  001E66  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8583  001E68  6E36               	movwf	_gap_time_2,c
  8584  001E6A  0E00               	movlw	0
  8585  001E6C  0100               	movlb	0	; () banked
  8586  001E6E  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8587  001E70  6E37               	movwf	_gap_time_2+1,c
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;ABS_Code.c: 171: gap_time_2 = gap_time_2 / 500;
  8591  001E72  C036  F01E         	movff	_gap_time_2,i2___lwdiv@dividend
  8592  001E76  C037  F01F         	movff	_gap_time_2+1,i2___lwdiv@dividend+1
  8593  001E7A  0E01               	movlw	1
  8594  001E7C  6E21               	movwf	i2___lwdiv@divisor+1,c
  8595  001E7E  0EF4               	movlw	244
  8596  001E80  6E20               	movwf	i2___lwdiv@divisor,c
  8597  001E82  EC3C  F013         	call	i2___lwdiv	;wreg free
  8598  001E86  C01E  F036         	movff	?i2___lwdiv,_gap_time_2
  8599  001E8A  C01F  F037         	movff	?i2___lwdiv+1,_gap_time_2+1
  8600                           
  8601                           ;ABS_Code.c: 172: ENC2_measure = 1;
  8602  001E8E  8239               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  8603                           
  8604                           ;ABS_Code.c: 173: TMR3H = 0x00;
  8605  001E90  0E00               	movlw	0
  8606  001E92  6EB3               	movwf	4019,c	;volatile
  8607                           
  8608                           ;ABS_Code.c: 174: TMR3H = 0x00;
  8609  001E94  0E00               	movlw	0
  8610  001E96  6EB3               	movwf	4019,c	;volatile
  8611                           
  8612                           ;ABS_Code.c: 175: if (count_flag == 1) {
  8613  001E98  AA39               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8614  001E9A  D007               	goto	i2l4160
  8615                           
  8616                           ;ABS_Code.c: 176: int_counter_2++;
  8617  001E9C  0E01               	movlw	1
  8618  001E9E  0100               	movlb	0	; () banked
  8619  001EA0  2764               	addwf	_int_counter_2& (0+255),f,b
  8620  001EA2  0E00               	movlw	0
  8621  001EA4  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b
  8622  001EA6  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b
  8623  001EA8  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b
  8624  001EAA                     i2l4160:
  8625                           
  8626                           ;ABS_Code.c: 177: }
  8627                           ;ABS_Code.c: 178: }
  8628                           ;ABS_Code.c: 179: INTCON3bits.INT1IF = 0;
  8629  001EAA  90F0               	bcf	intcon3,0,c	;volatile
  8630  001EAC                     i2l681:
  8631  001EAC  C0B7  FFF5         	movff	??_ISR_Alta+21,tablat
  8632  001EB0  C0B6  FFF8         	movff	??_ISR_Alta+20,tblptru
  8633  001EB4  C0B5  FFF7         	movff	??_ISR_Alta+19,tblptrh
  8634  001EB8  C0B4  FFF6         	movff	??_ISR_Alta+18,tblptrl
  8635  001EBC  C0B3  FFF4         	movff	??_ISR_Alta+17,prodh
  8636  001EC0  C0B2  FFF3         	movff	??_ISR_Alta+16,prodl
  8637  001EC4  C0B1  FFDA         	movff	??_ISR_Alta+15,fsr2h
  8638  001EC8  C0B0  FFD9         	movff	??_ISR_Alta+14,fsr2l
  8639  001ECC  C0AF  FFE2         	movff	??_ISR_Alta+13,fsr1h
  8640  001ED0  C0AE  FFE1         	movff	??_ISR_Alta+12,fsr1l
  8641  001ED4  C0AD  FFEA         	movff	??_ISR_Alta+11,fsr0h
  8642  001ED8  C0AC  FFE9         	movff	??_ISR_Alta+10,fsr0l
  8643  001EDC  C0AB  FFFB         	movff	??_ISR_Alta+9,pclatu
  8644  001EE0  C0AA  FFFA         	movff	??_ISR_Alta+8,pclath
  8645  001EE4  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8646  001EE6  0011               	retfie		f
  8647  001EE8                     __end_of_ISR_Alta:
  8648                           	opt stack 0
  8649                           pclatu	equ	0xFFB
  8650                           pclath	equ	0xFFA
  8651                           tblptru	equ	0xFF8
  8652                           tblptrh	equ	0xFF7
  8653                           tblptrl	equ	0xFF6
  8654                           tablat	equ	0xFF5
  8655                           prodh	equ	0xFF4
  8656                           prodl	equ	0xFF3
  8657                           intcon	equ	0xFF2
  8658                           intcon2	equ	0xFF1
  8659                           intcon3	equ	0xFF0
  8660                           postinc0	equ	0xFEE
  8661                           fsr0h	equ	0xFEA
  8662                           fsr0l	equ	0xFE9
  8663                           wreg	equ	0xFE8
  8664                           postdec1	equ	0xFE5
  8665                           fsr1h	equ	0xFE2
  8666                           fsr1l	equ	0xFE1
  8667                           bsr	equ	0xFE0
  8668                           indf2	equ	0xFDF
  8669                           postinc2	equ	0xFDE
  8670                           postdec2	equ	0xFDD
  8671                           fsr2h	equ	0xFDA
  8672                           fsr2l	equ	0xFD9
  8673                           status	equ	0xFD8
  8674                           
  8675 ;; *************** function i2___wmul *****************
  8676 ;; Defined at:
  8677 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  multiplier      2   29[COMRAM] unsigned int 
  8680 ;;  multiplicand    2   31[COMRAM] unsigned int 
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;  __wmul          2   33[COMRAM] unsigned int 
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  2   29[COMRAM] unsigned int 
  8685 ;; Registers used:
  8686 ;;		wreg, status,2, status,0, prodl, prodh
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8692 ;;      Params:         4       0       0       0
  8693 ;;      Locals:         2       0       0       0
  8694 ;;      Temps:          0       0       0       0
  8695 ;;      Totals:         6       0       0       0
  8696 ;;Total ram usage:        6 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_ISR_Alta
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text20
  8706  0027C2                     __ptext20:
  8707                           	opt stack 0
  8708  0027C2                     i2___wmul:
  8709                           	opt stack 24
  8710                           
  8711                           ;incstack = 0
  8712  0027C2  501E               	movf	i2___wmul@multiplier,w,c
  8713  0027C4  0220               	mulwf	i2___wmul@multiplicand,c
  8714  0027C6  CFF3 F022          	movff	prodl,i2___wmul@product
  8715  0027CA  CFF4 F023          	movff	prodh,i2___wmul@product+1
  8716  0027CE  501E               	movf	i2___wmul@multiplier,w,c
  8717  0027D0  0221               	mulwf	i2___wmul@multiplicand+1,c
  8718  0027D2  50F3               	movf	prodl,w,c
  8719  0027D4  2623               	addwf	i2___wmul@product+1,f,c
  8720  0027D6  501F               	movf	i2___wmul@multiplier+1,w,c
  8721  0027D8  0220               	mulwf	i2___wmul@multiplicand,c
  8722  0027DA  50F3               	movf	prodl,w,c
  8723  0027DC  2623               	addwf	i2___wmul@product+1,f,c
  8724  0027DE  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  8725  0027E2  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  8726  0027E6  0012               	return	
  8727  0027E8                     __end_ofi2___wmul:
  8728                           	opt stack 0
  8729                           pclatu	equ	0xFFB
  8730                           pclath	equ	0xFFA
  8731                           tblptru	equ	0xFF8
  8732                           tblptrh	equ	0xFF7
  8733                           tblptrl	equ	0xFF6
  8734                           tablat	equ	0xFF5
  8735                           prodh	equ	0xFF4
  8736                           prodl	equ	0xFF3
  8737                           intcon	equ	0xFF2
  8738                           intcon2	equ	0xFF1
  8739                           intcon3	equ	0xFF0
  8740                           postinc0	equ	0xFEE
  8741                           fsr0h	equ	0xFEA
  8742                           fsr0l	equ	0xFE9
  8743                           wreg	equ	0xFE8
  8744                           postdec1	equ	0xFE5
  8745                           fsr1h	equ	0xFE2
  8746                           fsr1l	equ	0xFE1
  8747                           bsr	equ	0xFE0
  8748                           indf2	equ	0xFDF
  8749                           postinc2	equ	0xFDE
  8750                           postdec2	equ	0xFDD
  8751                           fsr2h	equ	0xFDA
  8752                           fsr2l	equ	0xFD9
  8753                           status	equ	0xFD8
  8754                           
  8755 ;; *************** function i2___lwdiv *****************
  8756 ;; Defined at:
  8757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  dividend        2   29[COMRAM] unsigned int 
  8760 ;;  divisor         2   31[COMRAM] unsigned int 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  __lwdiv         2   33[COMRAM] unsigned int 
  8763 ;;  __lwdiv         1   35[COMRAM] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  2   29[COMRAM] unsigned int 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8773 ;;      Params:         4       0       0       0
  8774 ;;      Locals:         3       0       0       0
  8775 ;;      Temps:          0       0       0       0
  8776 ;;      Totals:         7       0       0       0
  8777 ;;Total ram usage:        7 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_ISR_Alta
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text21
  8787  002678                     __ptext21:
  8788                           	opt stack 0
  8789  002678                     i2___lwdiv:
  8790                           	opt stack 24
  8791                           
  8792                           ;incstack = 0
  8793  002678  0E00               	movlw	0
  8794  00267A  6E23               	movwf	i2___lwdiv@quotient+1,c
  8795  00267C  0E00               	movlw	0
  8796  00267E  6E22               	movwf	i2___lwdiv@quotient,c
  8797  002680  5020               	movf	i2___lwdiv@divisor,w,c
  8798  002682  1021               	iorwf	i2___lwdiv@divisor+1,w,c
  8799  002684  B4D8               	btfsc	status,2,c
  8800  002686  D01C               	goto	i2l1153
  8801  002688  0E01               	movlw	1
  8802  00268A  6E24               	movwf	i2___lwdiv@counter,c
  8803  00268C  D004               	goto	i2l3890
  8804  00268E                     i2l3888:
  8805  00268E  90D8               	bcf	status,0,c
  8806  002690  3620               	rlcf	i2___lwdiv@divisor,f,c
  8807  002692  3621               	rlcf	i2___lwdiv@divisor+1,f,c
  8808  002694  2A24               	incf	i2___lwdiv@counter,f,c
  8809  002696                     i2l3890:
  8810  002696  AE21               	btfss	i2___lwdiv@divisor+1,7,c
  8811  002698  D7FA               	goto	i2l3888
  8812  00269A                     i2l3892:
  8813  00269A  90D8               	bcf	status,0,c
  8814  00269C  3622               	rlcf	i2___lwdiv@quotient,f,c
  8815  00269E  3623               	rlcf	i2___lwdiv@quotient+1,f,c
  8816  0026A0  5020               	movf	i2___lwdiv@divisor,w,c
  8817  0026A2  5C1E               	subwf	i2___lwdiv@dividend,w,c
  8818  0026A4  5021               	movf	i2___lwdiv@divisor+1,w,c
  8819  0026A6  581F               	subwfb	i2___lwdiv@dividend+1,w,c
  8820  0026A8  A0D8               	btfss	status,0,c
  8821  0026AA  D005               	goto	i2l3900
  8822  0026AC  5020               	movf	i2___lwdiv@divisor,w,c
  8823  0026AE  5E1E               	subwf	i2___lwdiv@dividend,f,c
  8824  0026B0  5021               	movf	i2___lwdiv@divisor+1,w,c
  8825  0026B2  5A1F               	subwfb	i2___lwdiv@dividend+1,f,c
  8826  0026B4  8022               	bsf	i2___lwdiv@quotient,0,c
  8827  0026B6                     i2l3900:
  8828  0026B6  90D8               	bcf	status,0,c
  8829  0026B8  3221               	rrcf	i2___lwdiv@divisor+1,f,c
  8830  0026BA  3220               	rrcf	i2___lwdiv@divisor,f,c
  8831  0026BC  2E24               	decfsz	i2___lwdiv@counter,f,c
  8832  0026BE  D7ED               	goto	i2l3892
  8833  0026C0                     i2l1153:
  8834  0026C0  C022  F01E         	movff	i2___lwdiv@quotient,?i2___lwdiv
  8835  0026C4  C023  F01F         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  8836  0026C8  0012               	return		;funcret
  8837  0026CA                     __end_ofi2___lwdiv:
  8838                           	opt stack 0
  8839                           pclatu	equ	0xFFB
  8840                           pclath	equ	0xFFA
  8841                           tblptru	equ	0xFF8
  8842                           tblptrh	equ	0xFF7
  8843                           tblptrl	equ	0xFF6
  8844                           tablat	equ	0xFF5
  8845                           prodh	equ	0xFF4
  8846                           prodl	equ	0xFF3
  8847                           intcon	equ	0xFF2
  8848                           intcon2	equ	0xFF1
  8849                           intcon3	equ	0xFF0
  8850                           postinc0	equ	0xFEE
  8851                           fsr0h	equ	0xFEA
  8852                           fsr0l	equ	0xFE9
  8853                           wreg	equ	0xFE8
  8854                           postdec1	equ	0xFE5
  8855                           fsr1h	equ	0xFE2
  8856                           fsr1l	equ	0xFE1
  8857                           bsr	equ	0xFE0
  8858                           indf2	equ	0xFDF
  8859                           postinc2	equ	0xFDE
  8860                           postdec2	equ	0xFDD
  8861                           fsr2h	equ	0xFDA
  8862                           fsr2l	equ	0xFD9
  8863                           status	equ	0xFD8
  8864                           
  8865 ;; *************** function i2___awdiv *****************
  8866 ;; Defined at:
  8867 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;  dividend        2   35[COMRAM] int 
  8870 ;;  divisor         2   37[COMRAM] int 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;  __awdiv         2   41[COMRAM] int 
  8873 ;;  __awdiv         1   40[COMRAM] unsigned char 
  8874 ;;  __awdiv         1   39[COMRAM] unsigned char 
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  2   35[COMRAM] int 
  8877 ;; Registers used:
  8878 ;;		wreg, status,2, status,0
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8884 ;;      Params:         4       0       0       0
  8885 ;;      Locals:         4       0       0       0
  8886 ;;      Temps:          0       0       0       0
  8887 ;;      Totals:         8       0       0       0
  8888 ;;Total ram usage:        8 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; This function calls:
  8891 ;;		Nothing
  8892 ;; This function is called by:
  8893 ;;		_ISR_Alta
  8894 ;; This function uses a non-reentrant model
  8895 ;;
  8896                           
  8897                           	psect	text22
  8898  00257C                     __ptext22:
  8899                           	opt stack 0
  8900  00257C                     i2___awdiv:
  8901                           	opt stack 24
  8902                           
  8903                           ;incstack = 0
  8904  00257C  0E00               	movlw	0
  8905  00257E  6E29               	movwf	i2___awdiv@sign,c
  8906  002580  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8907  002582  D006               	goto	i2l3846
  8908  002584  6C26               	negf	i2___awdiv@divisor,c
  8909  002586  1E27               	comf	i2___awdiv@divisor+1,f,c
  8910  002588  B0D8               	btfsc	status,0,c
  8911  00258A  2A27               	incf	i2___awdiv@divisor+1,f,c
  8912  00258C  0E01               	movlw	1
  8913  00258E  6E29               	movwf	i2___awdiv@sign,c
  8914  002590                     i2l3846:
  8915  002590  AE25               	btfss	i2___awdiv@dividend+1,7,c
  8916  002592  D006               	goto	i2l3852
  8917  002594  6C24               	negf	i2___awdiv@dividend,c
  8918  002596  1E25               	comf	i2___awdiv@dividend+1,f,c
  8919  002598  B0D8               	btfsc	status,0,c
  8920  00259A  2A25               	incf	i2___awdiv@dividend+1,f,c
  8921  00259C  0E01               	movlw	1
  8922  00259E  1A29               	xorwf	i2___awdiv@sign,f,c
  8923  0025A0                     i2l3852:
  8924  0025A0  0E00               	movlw	0
  8925  0025A2  6E2B               	movwf	i2___awdiv@quotient+1,c
  8926  0025A4  0E00               	movlw	0
  8927  0025A6  6E2A               	movwf	i2___awdiv@quotient,c
  8928  0025A8  5026               	movf	i2___awdiv@divisor,w,c
  8929  0025AA  1027               	iorwf	i2___awdiv@divisor+1,w,c
  8930  0025AC  B4D8               	btfsc	status,2,c
  8931  0025AE  D01C               	goto	i2l3874
  8932  0025B0  0E01               	movlw	1
  8933  0025B2  6E28               	movwf	i2___awdiv@counter,c
  8934  0025B4  D004               	goto	i2l3860
  8935  0025B6                     i2l3858:
  8936  0025B6  90D8               	bcf	status,0,c
  8937  0025B8  3626               	rlcf	i2___awdiv@divisor,f,c
  8938  0025BA  3627               	rlcf	i2___awdiv@divisor+1,f,c
  8939  0025BC  2A28               	incf	i2___awdiv@counter,f,c
  8940  0025BE                     i2l3860:
  8941  0025BE  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8942  0025C0  D7FA               	goto	i2l3858
  8943  0025C2                     i2l3862:
  8944  0025C2  90D8               	bcf	status,0,c
  8945  0025C4  362A               	rlcf	i2___awdiv@quotient,f,c
  8946  0025C6  362B               	rlcf	i2___awdiv@quotient+1,f,c
  8947  0025C8  5026               	movf	i2___awdiv@divisor,w,c
  8948  0025CA  5C24               	subwf	i2___awdiv@dividend,w,c
  8949  0025CC  5027               	movf	i2___awdiv@divisor+1,w,c
  8950  0025CE  5825               	subwfb	i2___awdiv@dividend+1,w,c
  8951  0025D0  A0D8               	btfss	status,0,c
  8952  0025D2  D005               	goto	i2l3870
  8953  0025D4  5026               	movf	i2___awdiv@divisor,w,c
  8954  0025D6  5E24               	subwf	i2___awdiv@dividend,f,c
  8955  0025D8  5027               	movf	i2___awdiv@divisor+1,w,c
  8956  0025DA  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  8957  0025DC  802A               	bsf	i2___awdiv@quotient,0,c
  8958  0025DE                     i2l3870:
  8959  0025DE  90D8               	bcf	status,0,c
  8960  0025E0  3227               	rrcf	i2___awdiv@divisor+1,f,c
  8961  0025E2  3226               	rrcf	i2___awdiv@divisor,f,c
  8962  0025E4  2E28               	decfsz	i2___awdiv@counter,f,c
  8963  0025E6  D7ED               	goto	i2l3862
  8964  0025E8                     i2l3874:
  8965  0025E8  5029               	movf	i2___awdiv@sign,w,c
  8966  0025EA  B4D8               	btfsc	status,2,c
  8967  0025EC  D004               	goto	i2l3878
  8968  0025EE  6C2A               	negf	i2___awdiv@quotient,c
  8969  0025F0  1E2B               	comf	i2___awdiv@quotient+1,f,c
  8970  0025F2  B0D8               	btfsc	status,0,c
  8971  0025F4  2A2B               	incf	i2___awdiv@quotient+1,f,c
  8972  0025F6                     i2l3878:
  8973  0025F6  C02A  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  8974  0025FA  C02B  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8975  0025FE  0012               	return	
  8976  002600                     __end_ofi2___awdiv:
  8977                           	opt stack 0
  8978                           pclatu	equ	0xFFB
  8979                           pclath	equ	0xFFA
  8980                           tblptru	equ	0xFF8
  8981                           tblptrh	equ	0xFF7
  8982                           tblptrl	equ	0xFF6
  8983                           tablat	equ	0xFF5
  8984                           prodh	equ	0xFF4
  8985                           prodl	equ	0xFF3
  8986                           intcon	equ	0xFF2
  8987                           intcon2	equ	0xFF1
  8988                           intcon3	equ	0xFF0
  8989                           postinc0	equ	0xFEE
  8990                           fsr0h	equ	0xFEA
  8991                           fsr0l	equ	0xFE9
  8992                           wreg	equ	0xFE8
  8993                           postdec1	equ	0xFE5
  8994                           fsr1h	equ	0xFE2
  8995                           fsr1l	equ	0xFE1
  8996                           bsr	equ	0xFE0
  8997                           indf2	equ	0xFDF
  8998                           postinc2	equ	0xFDE
  8999                           postdec2	equ	0xFDD
  9000                           fsr2h	equ	0xFDA
  9001                           fsr2l	equ	0xFD9
  9002                           status	equ	0xFD8
  9003                           
  9004 ;; *************** function _WriteTimer0 *****************
  9005 ;; Defined at:
  9006 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;  timer0          2   29[COMRAM] unsigned int 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  timer           2   31[COMRAM] struct Timers
  9011 ;; Return value:  Size  Location     Type
  9012 ;;		None               void
  9013 ;; Registers used:
  9014 ;;		None
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9020 ;;      Params:         2       0       0       0
  9021 ;;      Locals:         2       0       0       0
  9022 ;;      Temps:          0       0       0       0
  9023 ;;      Totals:         4       0       0       0
  9024 ;;Total ram usage:        4 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_ISR_Alta
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text23
  9034  002838                     __ptext23:
  9035                           	opt stack 0
  9036  002838                     _WriteTimer0:
  9037                           	opt stack 24
  9038                           
  9039                           ;incstack = 0
  9040  002838  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9041  00283C  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9042  002840  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9043  002844  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9044  002848  0012               	return		;funcret
  9045  00284A                     __end_of_WriteTimer0:
  9046                           	opt stack 0
  9047  0000                     pclatu	equ	0xFFB
  9048                           pclath	equ	0xFFA
  9049                           tblptru	equ	0xFF8
  9050                           tblptrh	equ	0xFF7
  9051                           tblptrl	equ	0xFF6
  9052                           tablat	equ	0xFF5
  9053                           prodh	equ	0xFF4
  9054                           prodl	equ	0xFF3
  9055                           intcon	equ	0xFF2
  9056                           intcon2	equ	0xFF1
  9057                           intcon3	equ	0xFF0
  9058                           postinc0	equ	0xFEE
  9059                           fsr0h	equ	0xFEA
  9060                           fsr0l	equ	0xFE9
  9061                           wreg	equ	0xFE8
  9062                           postdec1	equ	0xFE5
  9063                           fsr1h	equ	0xFE2
  9064                           fsr1l	equ	0xFE1
  9065                           bsr	equ	0xFE0
  9066                           indf2	equ	0xFDF
  9067                           postinc2	equ	0xFDE
  9068                           postdec2	equ	0xFDD
  9069                           fsr2h	equ	0xFDA
  9070                           fsr2l	equ	0xFD9
  9071                           status	equ	0xFD8
  9072                           pclatu	equ	0xFFB
  9073                           pclath	equ	0xFFA
  9074                           tblptru	equ	0xFF8
  9075                           tblptrh	equ	0xFF7
  9076                           tblptrl	equ	0xFF6
  9077                           tablat	equ	0xFF5
  9078                           prodh	equ	0xFF4
  9079                           prodl	equ	0xFF3
  9080                           intcon	equ	0xFF2
  9081                           intcon2	equ	0xFF1
  9082                           intcon3	equ	0xFF0
  9083                           postinc0	equ	0xFEE
  9084                           fsr0h	equ	0xFEA
  9085                           fsr0l	equ	0xFE9
  9086                           wreg	equ	0xFE8
  9087                           postdec1	equ	0xFE5
  9088                           fsr1h	equ	0xFE2
  9089                           fsr1l	equ	0xFE1
  9090                           bsr	equ	0xFE0
  9091                           indf2	equ	0xFDF
  9092                           postinc2	equ	0xFDE
  9093                           postdec2	equ	0xFDD
  9094                           fsr2h	equ	0xFDA
  9095                           fsr2l	equ	0xFD9
  9096                           status	equ	0xFD8
  9097                           
  9098                           	psect	rparam
  9099  0000                     pclatu	equ	0xFFB
  9100                           pclath	equ	0xFFA
  9101                           tblptru	equ	0xFF8
  9102                           tblptrh	equ	0xFF7
  9103                           tblptrl	equ	0xFF6
  9104                           tablat	equ	0xFF5
  9105                           prodh	equ	0xFF4
  9106                           prodl	equ	0xFF3
  9107                           intcon	equ	0xFF2
  9108                           intcon2	equ	0xFF1
  9109                           intcon3	equ	0xFF0
  9110                           postinc0	equ	0xFEE
  9111                           fsr0h	equ	0xFEA
  9112                           fsr0l	equ	0xFE9
  9113                           wreg	equ	0xFE8
  9114                           postdec1	equ	0xFE5
  9115                           fsr1h	equ	0xFE2
  9116                           fsr1l	equ	0xFE1
  9117                           bsr	equ	0xFE0
  9118                           indf2	equ	0xFDF
  9119                           postinc2	equ	0xFDE
  9120                           postdec2	equ	0xFDD
  9121                           fsr2h	equ	0xFDA
  9122                           fsr2l	equ	0xFD9
  9123                           status	equ	0xFD8
  9124                           
  9125                           	psect	temp
  9126  00003B                     btemp:
  9127                           	opt stack 0
  9128  00003B                     	ds	1
  9129  0000                     int$flags	set	btemp
  9130                           pclatu	equ	0xFFB
  9131                           pclath	equ	0xFFA
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           intcon2	equ	0xFF1
  9140                           intcon3	equ	0xFF0
  9141                           postinc0	equ	0xFEE
  9142                           fsr0h	equ	0xFEA
  9143                           fsr0l	equ	0xFE9
  9144                           wreg	equ	0xFE8
  9145                           postdec1	equ	0xFE5
  9146                           fsr1h	equ	0xFE2
  9147                           fsr1l	equ	0xFE1
  9148                           bsr	equ	0xFE0
  9149                           indf2	equ	0xFDF
  9150                           postinc2	equ	0xFDE
  9151                           postdec2	equ	0xFDD
  9152                           fsr2h	equ	0xFDA
  9153                           fsr2l	equ	0xFD9
  9154                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      58
    BANK0           160     48     123
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___lwdiv->___wmul
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15019
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___lwdiv
                             ___wmul
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    3808
                                             38 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             22 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    7089
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1155
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     877
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             36 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     570
                                             28 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1023
                                              0 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                          i2___lwdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     266
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     352
                                             35 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___lwdiv
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     30      7B       4       76.9%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     2B      3A       1       61.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B5       9        0.0%
DATA                 0      0      B5      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 06 15:10:44 2016

           ??_CANisTXwarningON 00B8                              _x 01CF                              _y 01D0  
         __end_of_CANSetFilter 0C1A                   ___awdiv@sign 00BD                             bsr 000FE0  
          ___wmul@multiplicand 00BA             i2___lwdiv@dividend 001E                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000  
                  __CFG_LVP$ON 000000                            l400 0EB8                            l401 0FB0  
                          l410 107E                            l402 0F40                            l403 0F4A  
                          l500 074E                            l404 0F54                            l501 0752  
                          l413 1138                            l405 0F5E                            l510 085E  
                          l502 075E                            l422 12F2                            l414 113C  
                          l511 086A                            l423 12F6                            l415 1234  
                          l520 0976                            l512 086E                            l424 1302  
                          l416 11C4                            l408 106E                            l521 097A  
                          l513 087A                            l505 083A                            l417 11CE  
                          l409 1072                            l530 0A86                            l522 0986  
                          l506 083E                            l418 11D8                            l531 0A92  
                          l523 098A                            l507 084A                            l419 11E2  
                          l540 0B9E                            l532 0A96                            l524 0996  
                          l516 0956                            l508 084E                            l460 1AEC  
                          l452 1AAC                            l541 0BA2                            l533 0AA2  
                          l517 095A                            l509 085A                            l453 1AB0  
                          l542 0BAE                            l534 0AA6                            l518 0966  
                          l470 1BF8                            l454 1ABC                            l390 0CDA  
                          l702 2106                            l543 0BB2                            l535 0AB2  
                          l527 0A72                            l519 096A                            l471 1C04  
                          l463 1BC4                            l455 1AC0                            l383 0E9E  
                          l711 219E                            l703 2150                            l544 0BBE  
                          l528 0A76                            l464 1BC8                            l456 1ACC  
                          l384 0C30                            l545 0BC2                            l529 0A82  
                          l465 1BD4                            l457 1AD0                            l393 0DEA  
                          l385 0C34                            l546 0BCE                            l538 0B8E  
                          l490 0638                            l466 1BD8                            l458 1ADC  
                          l378 1FA4                            l394 0DEE                            l386 0D2C  
                          l539 0B92                            l491 0644                            l483 0604  
                          l467 1BE4                            l459 1AE0                            l379 1FAE  
                          l395 0DFA                            l387 0CBC                            l731 23EE  
                          l484 0608                            l468 1BE8                            l388 0CC6  
                          l724 23F6                            l716 2206                            l485 0614  
                          l469 1BF4                            l389 0CD0                            l494 071E  
                          l486 0618                            l398 1122                            l495 0722  
                          l487 0624                            l399 0EB4                            l496 072E  
                          l488 0628                            l576 2806                            l737 2716  
                          l497 0732                            l489 0634                            l729 23F2  
                          l498 073E                            l499 0742                            l589 277E  
                          l696 20FC                            l698 20F4                            l699 20FE  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 0081                            wreg 000FE8                   __CFG_WDT$OFF 000000  
                         l1153 266E                           l3012 0762                           l3120 0AFC  
                         l3200 1FB2                           l3114 0AB6                           l3018 07A8  
                         l3052 08C4                           l3204 1FBA                           l3046 087E  
                         l3206 1FFE                           l4030 2122                           l4014 20DC  
                         l3080 099A                           l3320 0F68                           l4024 210C  
                         l4042 2154                           l4034 2130                           l3500 2572  
                         l3148 0BD2                           l3340 1062                           l3244 0CE4  
                         l3086 09E0                           l3422 1306                           l3270 0DFE  
                         l4070 2220                           l4054 21B8                           l4062 21FE  
                         l4038 2140                           l3416 12E6                           l3264 0DDE  
                         l4072 225C                           l4056 21F4                           l2810 1B36  
                         l3346 1082                           l2804 1AF0                           l3198 1F9C  
                         l3480 250E                           l2744 2814                           l3456 2770  
                         l3482 251A                           l3474 24F0                           l2914 03FE  
                         l2762 196A                           l3492 2550                           l3484 2520  
                         l3468 24DA                           l3820 2630                           l2932 04B8  
                         l2860 01D2                           l2836 1C08                           l3396 11EC  
                         l2950 0572                           l3806 23E2                           l3496 255E  
                         l3816 261E                           l3818 262A                           l2778 1A20  
                         l3828 2660                           l2878 028A                           l3790 234E  
                         l2984 068E                           l2896 0344                           l3784 2312  
                         l2978 0648                           l3778 22B4                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           u3200 0AD6  
                         u3120 09BA                           u3040 089E                           _LATD 000F8C  
                         _LATE 000F8D                           u3205 0ACA                           u3125 09AE  
                         u3045 0892                           u2405 19FC                           u2350 18E6  
                         u3410 0D04                           u2355 18DA                           u4060 2852  
                         u3420 0D50                           u4140 22D2                           u2605 01AE  
                         u2365 1946                           u4070 285E                           u2710 037A  
                         u2630 0206                           u2390 199C                           u3415 0CF8  
                         u3280 0BF2                           u2560 1C28                           u2480 1B10  
                         u3425 0D44                           u4146 22D4                           u2715 036E  
                         u2635 01FA                           u2395 1990                           u3435 0DB0  
                         u3540 0F88                           u3285 0BE6                           u2805 054E  
                         u2725 03DA                           u2645 0266                           u2565 1C1C  
                         u2485 1B04                           u2750 0434                           u2670 02C0  
                         u2590 014E                           u3550 0FD4                           u3545 0F7C  
                         u2755 0428                           u2675 02B4                           u2595 0142  
                         u3555 0FC8                           u2765 0494                           u2685 0320  
                         u3565 1034                           u2790 04EE                           u3670 120C  
                         u2960 0782                           u2880 0668                           u3680 1258  
                         u2795 04E2                           u3675 1200                           u2965 0776  
                         u2885 065C                           u3685 124C                           u4727 2772  
                         u3695 12B8            __size_of_CANSetMask 039E                           _main 20AE  
                         _read 0080                           fsr0h 000FEA                           fsr1h 000FE2  
           i2___lwdiv@quotient 0022                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         _step 00A1                           btemp 003B               __end_of_ADC_Read 2752  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0110                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 280C                   _status_array 00D3  
              _brake_value_inc 007E           _remote_frame_handler 2268     __size_of_CANreceiveMessage 050C  
                        ?_main 0001                __end_of___awdiv 257C                          _T0CON 000FD5  
              ___awdiv@divisor 00BA                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 00F8                __end_of___lwdiv 2678                          i1l430 163E  
                        i1l581 2834                          i1l690 00C0                          i1l692 00C8  
                        i1l684 00B8                          i1l687 00B4                          i2l681 1EAC  
              ___awdiv@counter 00BC                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2              _CANisRxReady$3284 0001                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1EE8  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 00CA  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 01C8           __end_of_CANisRxReady 2838  
                        tablat 000FF5           __end_of_CANisTxReady 280C               __end_ofi2___wmul 27E8  
                        status 000FD8             __size_ofi2___awdiv 0084                 __CFG_PBADEN$ON 000000  
           __size_ofi2___lwdiv 0052                __initialization 26CA                   __end_of_main 2268  
__size_of_board_initialization 00C4               _brake_signal_CAN 007D          ?_remote_frame_handler 0001  
                       ??_main 00D2                  __activetblptr 000002              _CANisTxReady$3282 00B8  
                       _ADCON1 000FC1                         _CANCON 000F6F                         _ADRESH 000FC4  
             ___awdiv@dividend 00B8                __CFG_BBSIZ$1024 000000                         i1l3610 179E  
                       i1l3630 1860                         i1l3622 1828                         i1l3560 15AC  
                       i2l1153 26C0                         i1l3634 187C                         i1l3626 1844  
                       i1l3618 180C                         i1l3636 18AE                         i1l3572 1606  
                       i1l3564 15CA                         i1l3556 158E                         i1l3548 151E  
                       i1l3574 1638                         i1l3568 15E8                         i2l4110 1DB2  
                       i2l4112 1DBE                         i2l4122 1DD4                         i2l4114 1DC0  
                       i1l3990 0096                         i1l3982 0066                         i2l4160 1EAA  
                       i2l4136 1E24                         i2l4146 1E5A                         i2l4138 1E46  
                       i2l3900 26B6                         i2l3860 25BE                         i2l3852 25A0  
                       i2l3870 25DE                         i2l3862 25C2                         i2l3846 2590  
                       i2l3858 25B6                         i2l3874 25E8                         i2l3890 2696  
                       i2l3892 269A                         i2l3878 25F6                         i2l3888 268E  
                       _RXB0D0 000F66                         _RXB0D1 000F67                         _RXB0D2 000F68  
                       _RXB0D3 000F69                         _RXB0D4 000F6A                         _RXB1D0 000F56  
                       _RXB0D5 000F6B                         _RXB1D1 000F57                         _RXB0D6 000F6C  
                       _RXB1D2 000F58                         _RXB0D7 000F6D                         _RXB1D3 000F59  
                       _RXB1D4 000F5A                         _RXB1D5 000F5B                         _RXB1D6 000F5C  
                       _RXB1D7 000F5D                         _TXB0D0 000F46                         _TXB0D1 000F47  
                       _TXB0D2 000F48                         _TXB0D3 000F49                         _TXB1D0 000F36  
                       _TXB0D4 000F4A                         _TXB1D1 000F37                         _TXB0D5 000F4B  
                       _TXB1D2 000F38                         _TXB0D6 000F4C                         _TXB1D3 000F39  
                       _TXB0D7 000F4D                         _TXB2D0 000F26                         _TXB1D4 000F3A  
                       _TXB2D1 000F27                         _TXB1D5 000F3B                         _TXB2D2 000F28  
                       _TXB1D6 000F3C                         _TXB2D3 000F29                         _TXB1D7 000F3D  
                       _TXB2D4 000F2A                         _TXB2D5 000F2B                         _TXB2D6 000F2C  
                       _TXB2D7 000F2D             CANsendMessage@data 00BC             CANsendMessage@tamp 00C4  
            __end_of_ISR_Bassa 0110               __end_of_delay_ms 278C          __size_of_CANSetFilter 0B06  
               __CFG_XINST$OFF 000000                         ___wmul 278C                      ??___awdiv 00BC  
               __CFG_STVREN$ON 000000                      ??___lwdiv 00C2                   ??_CANSetMask 00BD  
                       clear_0 26D0                         clear_1 26E0               ___awdiv@quotient 00BE  
               i2___awdiv@sign 0029                __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 2600  
                    ?_ADC_Read 0001              __end_ofi2___lwdiv 26CA                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  _home_position 007F  
                 _CANSetFilter 0114                     __accesstop 0060        __end_of__initialization 2706  
           __end_of_CANSetMask 1C50                  ___rparam_used 000001      __size_of_CANisRXwarningON 000C  
               __pcstackCOMRAM 0001                      ?_ISR_Alta 0001                   __pidataBANK0 2862  
       ??_remote_frame_handler 00C8                   _ENC1_measure 01C8          CANSetFilter@numBuffer 00C1  
                    ?i2___wmul 001E      __size_of_CANisTXwarningON 000C                   _ENC2_measure 01C9  
                   ??_ADC_Read 00C0          __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024  
     __end_of_CANOperationMode 2822                     __pbssBANK0 0060        __size_of_CANsendMessage 078C  
                   ??_ISR_Alta 00A2                        ?___wmul 00B8                     _gap_time_1 0034  
                   _gap_time_2 0036               WriteTimer0@timer 0020                  ??_WriteTimer0 0020  
                 _CANisRxReady 2822                        _CANSTAT 000F6E                   _CANisTxReady 27E8  
                      _BRGCON1 000F70                        _BRGCON2 000F71                        _BRGCON3 000F72  
                   ??i2___wmul 0022                  _int_counter_1 0060                  _int_counter_2 0064  
       __size_of_CANInitialize 01C6                      ?_delay_ms 00BE                        _RXB0DLC 000F65  
                      _RXB1DLC 000F55                        _RXB0CON 000F60                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
                   _distance_1 0078                     _distance_2 007A            CANsendMessage@flags 00BF  
                   _count_flag 01CD                        __Hparam 0000                        __Lparam 0000  
             delay_ms@value_ms 00BE                        ___awdiv 24BE                __size_of___wmul 0036  
                      ___lwdiv 2600           CANInitialize@propSeg 00CF                        __pcinit 26CA  
                      __ramtop 0300                        __ptext0 20AE                        __ptext1 2268  
                      __ptext2 0C1A                        __ptext3 27E8                        __ptext4 23FA  
                      __ptext5 2752                        __ptext6 278C                        __ptext7 1EE8  
                      __ptext8 18B2                        __ptext9 0114                      _T0CONbits 000FD5  
                    _T1CONbits 000FCD                      _T3CONbits 000FB1            __end_of_WriteTimer0 284A  
                   ??_delay_ms 00C0         CANreceiveMessage@error 000B   __end_of_board_initialization 24BE  
               __pintcode_body 1C50           end_of_initialization 2706                  _Analogic_Mode 007C  
                __Lmediumconst 0000                        int_func 1C50            i2___wmul@multiplier 001E  
             _CANisRXwarningON 2856                  _CANInitialize 1EE8                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTAbits 000F80                 CANSetMask@mask 00B8  
                    _PORTCbits 000F82              _correction_factor 0076                 CANSetMask@tamp 00C2  
               CANSetMask@type 00BC               _CANisTXwarningON 284A              __size_of_ADC_Read 003E  
                    i2___awdiv 257C              i2___lwdiv@divisor 0020                      i2___lwdiv 2678  
            i2___lwdiv@counter 0024        _clock_counter_reference 0074                 _CANsendMessage 0C1A  
             CANInitialize@BRP 00C9               CANInitialize@SJW 00C8                 ?_CANInitialize 00C6  
           i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001              __size_of_ISR_Alta 1EE0  
               __end_of___wmul 27C2                    _WriteTimer0 2838               i2___wmul@product 0022  
          start_initialization 26CA             i2___awdiv@quotient 002A              __size_ofi2___wmul 0026  
          CANSetMask@numBuffer 00C1                     ?i2___awdiv 0024         __end_of_CANsendMessage 13A6  
                   ?i2___lwdiv 001E              ?_CANOperationMode 0001             ??_CANOperationMode 00B8  
   CANInitialize@FilterConfig1 00D0     CANInitialize@FilterConfig2 00D1           _board_initialization 23FA  
                     ??___wmul 00BC                    __pdataBANK0 00D2               __CFG_LPT1OSC$OFF 000000  
__size_of_remote_frame_handler 0192             _brake_value_degree 0038         CANInitialize@phaseSeg1 00C6  
       CANInitialize@phaseSeg2 00C7                    __pbssCOMRAM 002C                  __pcstackBANK0 00A2  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72              __size_of_delay_ms 003A  
              ?_CANsendMessage 00B8                ??_CANInitialize 00CB             CANSetFilter@filter 00B8  
             ___lwdiv@dividend 00BE          ?_board_initialization 0001                    ??_ISR_Bassa 000D  
                    __pintcode 0008                       ?___awdiv 00B8                       ?___lwdiv 00BE  
                  __pintcodelo 0018              WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2862  
                  _brake_value 00A0                    _COMSTATbits 000F74                       _ADC_Read 2714  
             ___lwdiv@quotient 00C2                    ??i2___awdiv 0028                    ??i2___lwdiv 0022  
        CANreceiveMessage@tamp 000C                 ___wmul@product 00BC                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2   _delay_quartz_frequency_value 00D2                       _PIE1bits 000F9D  
                     _IPR3bits 000FA5                       _PIE2bits 000FA0                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 2856                       i1u405_25 1888                       i1u385_20 145E  
                     i1u385_26 1460                       i1u386_20 148C                       i1u394_25 1612  
                     i1u386_26 148E                       i1u396_20 16E6                       i1u388_25 14A2  
                     i1u396_26 16E8                       i1u397_20 1710                       i1u397_26 1712  
                     i1u399_25 1724                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _PIR3bits 000FA4                       i2u468_40 1E2E                       i2u468_46 1E30  
                     _RXB0EIDH 000F63                       _RXB0EIDL 000F64                       _RXB1EIDH 000F53  
                     _RXB1EIDL 000F54                       _ISR_Alta 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0EIDH 000F02                       _RXB1SIDH 000F51                       _RXF0EIDL 000F03  
                     _RXB1SIDL 000F52                       _RXF1EIDH 000F06                       _RXF1EIDL 000F07  
                     _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E  
                     _RXF3EIDL 000F0F                       _RXF4EIDH 000F12                       _RXF4EIDL 000F13  
                     _RXF5EIDH 000F16                       _RXF5EIDL 000F17                       _RXF0SIDH 000F00  
                     _RXF0SIDL 000F01                       _TXB0EIDH 000F43                       _RXF1SIDH 000F04  
                     _TXB0EIDL 000F44                       _RXF1SIDL 000F05                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 002C                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 00B8                       i2___wmul 27C2              i2___awdiv@divisor 0026  
            i2___awdiv@counter 0028                  ?_CANSetFilter 00B8                    _INTCON2bits 000FF1  
                  _INTCON3bits 000FF0                      copy_data0 26FA                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00D2  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52                     _CANSetMask 18B2  
             __size_of___awdiv 00BE          i2___wmul@multiplicand 0020               __size_of___lwdiv 0078  
              _remote_frame_id 0068                       _Tx_retry 01CC                   ?_WriteTimer0 001E  
                 _RXF0SIDLbits 000F01                       _delay_ms 2752                ___lwdiv@divisor 00C0  
                 _RXF1SIDLbits 000F05                  _TMR1_overflow 01CA                ___lwdiv@counter 00C4  
               ??_CANSetFilter 00BD                       __ptext10 280C                       __ptext11 2600  
                     __ptext20 27C2                       __ptext12 284A                       __ptext21 2678  
                     __ptext13 2856                       __ptext22 257C                       __ptext14 2714  
                     __ptext23 2838                       __ptext15 24BE                       __ptext17 13A6  
                     __ptext18 2822                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00BE  
                 _remote_frame 01CE                  _TMR3_overflow 01CB                  __size_of_main 01BA  
         CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32  
                     _timer_on 0030                   _TXB2SIDLbits 000F22                       int$flags 003B  
    __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001                  ?_CANisTxReady 0001  
                  _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19  
                  _RXB0CONbits 000F60                    _RXB1CONbits 000F50              _CANreceiveMessage 13A6  
                 _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2               ??_CANsendMessage 00C0  
                _wheel_speed_1 006C                  _wheel_speed_2 0070             ?_CANreceiveMessage 0001  
     CANsendMessage@identifier 00B8   __end_of_remote_frame_handler 23FA                       intlevel1 0000  
                     intlevel2 0000               CANSetFilter@tamp 00C2               CANSetFilter@type 00BC  
          ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00B8                 ??_CANisRxReady 0001  
                  ?_CANSetMask 00B8                 ??_CANisTxReady 00B8                 _distance_array 0090  
    __end_of_CANreceiveMessage 18B2              ?_CANisRXwarningON 0001                    _speed_array 0098  
           ??_CANisRXwarningON 00B8          __end_of_CANInitialize 20AE              ?_CANisTXwarningON 0001  
