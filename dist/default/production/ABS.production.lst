

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Apr 28 22:12:48 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataBANK0
    44  002AC0                     __pidataBANK0:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _delay_quartz_frequency_value
    48  002AC0  10                 	db	16
    49                           
    50                           ;initializer for _remote_frame_array
    51  002AC1  01                 	db	1
    52  002AC2  00                 	db	0
    53  002AC3  00                 	db	0
    54  002AC4  00                 	db	0
    55  002AC5  00                 	db	0
    56  002AC6  00                 	db	0
    57  002AC7  00                 	db	0
    58  002AC8  00                 	db	0
    59  0000                     _RXB1CON	set	3920
    60  0000                     _RXB1CONbits	set	3920
    61  0000                     _RXB1D0	set	3926
    62  0000                     _RXB1D1	set	3927
    63  0000                     _RXB1D2	set	3928
    64  0000                     _RXB1D3	set	3929
    65  0000                     _RXB1D4	set	3930
    66  0000                     _RXB1D5	set	3931
    67  0000                     _RXB1D6	set	3932
    68  0000                     _RXB1D7	set	3933
    69  0000                     _RXB1DLC	set	3925
    70  0000                     _RXB1DLCbits	set	3925
    71  0000                     _RXB1EIDH	set	3923
    72  0000                     _RXB1EIDL	set	3924
    73  0000                     _RXB1SIDH	set	3921
    74  0000                     _RXB1SIDL	set	3922
    75  0000                     _RXB1SIDLbits	set	3922
    76  0000                     _RXF0EIDH	set	3842
    77  0000                     _RXF0EIDL	set	3843
    78  0000                     _RXF0SIDH	set	3840
    79  0000                     _RXF0SIDL	set	3841
    80  0000                     _RXF0SIDLbits	set	3841
    81  0000                     _RXF1EIDH	set	3846
    82  0000                     _RXF1EIDL	set	3847
    83  0000                     _RXF1SIDH	set	3844
    84  0000                     _RXF1SIDL	set	3845
    85  0000                     _RXF1SIDLbits	set	3845
    86  0000                     _RXF2EIDH	set	3850
    87  0000                     _RXF2EIDL	set	3851
    88  0000                     _RXF2SIDH	set	3848
    89  0000                     _RXF2SIDL	set	3849
    90  0000                     _RXF2SIDLbits	set	3849
    91  0000                     _RXF3EIDH	set	3854
    92  0000                     _RXF3EIDL	set	3855
    93  0000                     _RXF3SIDH	set	3852
    94  0000                     _RXF3SIDL	set	3853
    95  0000                     _RXF3SIDLbits	set	3853
    96  0000                     _RXF4EIDH	set	3858
    97  0000                     _RXF4EIDL	set	3859
    98  0000                     _RXF4SIDH	set	3856
    99  0000                     _RXF4SIDL	set	3857
   100  0000                     _RXF4SIDLbits	set	3857
   101  0000                     _RXF5EIDH	set	3862
   102  0000                     _RXF5EIDL	set	3863
   103  0000                     _RXF5SIDH	set	3860
   104  0000                     _RXF5SIDL	set	3861
   105  0000                     _RXF5SIDLbits	set	3861
   106  0000                     _RXM0EIDH	set	3866
   107  0000                     _RXM0EIDL	set	3867
   108  0000                     _RXM0SIDH	set	3864
   109  0000                     _RXM0SIDL	set	3865
   110  0000                     _RXM0SIDLbits	set	3865
   111  0000                     _RXM1EIDH	set	3870
   112  0000                     _RXM1EIDL	set	3871
   113  0000                     _RXM1SIDH	set	3868
   114  0000                     _RXM1SIDL	set	3869
   115  0000                     _RXM1SIDLbits	set	3869
   116  0000                     _TXB0CONbits	set	3904
   117  0000                     _TXB0D0	set	3910
   118  0000                     _TXB0D1	set	3911
   119  0000                     _TXB0D2	set	3912
   120  0000                     _TXB0D3	set	3913
   121  0000                     _TXB0D4	set	3914
   122  0000                     _TXB0D5	set	3915
   123  0000                     _TXB0D6	set	3916
   124  0000                     _TXB0D7	set	3917
   125  0000                     _TXB0DLC	set	3909
   126  0000                     _TXB0DLCbits	set	3909
   127  0000                     _TXB0EIDH	set	3907
   128  0000                     _TXB0EIDL	set	3908
   129  0000                     _TXB0SIDH	set	3905
   130  0000                     _TXB0SIDL	set	3906
   131  0000                     _TXB0SIDLbits	set	3906
   132  0000                     _TXB1CONbits	set	3888
   133  0000                     _TXB1D0	set	3894
   134  0000                     _TXB1D1	set	3895
   135  0000                     _TXB1D2	set	3896
   136  0000                     _TXB1D3	set	3897
   137  0000                     _TXB1D4	set	3898
   138  0000                     _TXB1D5	set	3899
   139  0000                     _TXB1D6	set	3900
   140  0000                     _TXB1D7	set	3901
   141  0000                     _TXB1DLC	set	3893
   142  0000                     _TXB1DLCbits	set	3893
   143  0000                     _TXB1EIDH	set	3891
   144  0000                     _TXB1EIDL	set	3892
   145  0000                     _TXB1SIDH	set	3889
   146  0000                     _TXB1SIDL	set	3890
   147  0000                     _TXB1SIDLbits	set	3890
   148  0000                     _TXB2CONbits	set	3872
   149  0000                     _TXB2D0	set	3878
   150  0000                     _TXB2D1	set	3879
   151  0000                     _TXB2D2	set	3880
   152  0000                     _TXB2D3	set	3881
   153  0000                     _TXB2D4	set	3882
   154  0000                     _TXB2D5	set	3883
   155  0000                     _TXB2D6	set	3884
   156  0000                     _TXB2D7	set	3885
   157  0000                     _TXB2DLC	set	3877
   158  0000                     _TXB2DLCbits	set	3877
   159  0000                     _TXB2EIDH	set	3875
   160  0000                     _TXB2EIDL	set	3876
   161  0000                     _TXB2SIDH	set	3873
   162  0000                     _TXB2SIDL	set	3874
   163  0000                     _TXB2SIDLbits	set	3874
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON1	set	4033
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADRESH	set	4036
   168  0000                     _BRGCON1	set	3952
   169  0000                     _BRGCON2	set	3953
   170  0000                     _BRGCON2bits	set	3953
   171  0000                     _BRGCON3	set	3954
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _CANCON	set	3951
   174  0000                     _CANCONbits	set	3951
   175  0000                     _CANSTAT	set	3950
   176  0000                     _COMSTATbits	set	3956
   177  0000                     _INTCON2bits	set	4081
   178  0000                     _INTCON3bits	set	4080
   179  0000                     _INTCONbits	set	4082
   180  0000                     _IPR1bits	set	3999
   181  0000                     _IPR2bits	set	4002
   182  0000                     _IPR3bits	set	4005
   183  0000                     _LATA	set	3977
   184  0000                     _LATB	set	3978
   185  0000                     _LATC	set	3979
   186  0000                     _LATD	set	3980
   187  0000                     _LATE	set	3981
   188  0000                     _PIE1bits	set	3997
   189  0000                     _PIE2bits	set	4000
   190  0000                     _PIE3bits	set	4003
   191  0000                     _PIR1bits	set	3998
   192  0000                     _PIR2bits	set	4001
   193  0000                     _PIR3bits	set	4004
   194  0000                     _PORTAbits	set	3968
   195  0000                     _PORTCbits	set	3970
   196  0000                     _RCONbits	set	4048
   197  0000                     _RXB0CON	set	3936
   198  0000                     _RXB0CONbits	set	3936
   199  0000                     _RXB0D0	set	3942
   200  0000                     _RXB0D1	set	3943
   201  0000                     _RXB0D2	set	3944
   202  0000                     _RXB0D3	set	3945
   203  0000                     _RXB0D4	set	3946
   204  0000                     _RXB0D5	set	3947
   205  0000                     _RXB0D6	set	3948
   206  0000                     _RXB0D7	set	3949
   207  0000                     _RXB0DLC	set	3941
   208  0000                     _RXB0DLCbits	set	3941
   209  0000                     _RXB0EIDH	set	3939
   210  0000                     _RXB0EIDL	set	3940
   211  0000                     _RXB0SIDH	set	3937
   212  0000                     _RXB0SIDL	set	3938
   213  0000                     _RXB0SIDLbits	set	3938
   214  0000                     _RXERRCNT	set	3957
   215  0000                     _T0CON	set	4053
   216  0000                     _T0CONbits	set	4053
   217  0000                     _T1CON	set	4045
   218  0000                     _T1CONbits	set	4045
   219  0000                     _T3CON	set	4017
   220  0000                     _T3CONbits	set	4017
   221  0000                     _TMR0H	set	4055
   222  0000                     _TMR0L	set	4054
   223  0000                     _TMR1H	set	4047
   224  0000                     _TMR1L	set	4046
   225  0000                     _TMR3H	set	4019
   226  0000                     _TMR3L	set	4018
   227  0000                     _TRISA	set	3986
   228  0000                     _TRISB	set	3987
   229  0000                     _TRISC	set	3988
   230  0000                     _TRISD	set	3989
   231  0000                     _TRISE	set	3990
   232  0000                     _TXERRCNT	set	3958
   233                           
   234                           ; #config settings
   235  0000                     
   236                           	psect	cinit
   237  002966                     __pcinit:
   238                           	opt stack 0
   239  002966                     start_initialization:
   240                           	opt stack 0
   241  002966                     __initialization:
   242                           	opt stack 0
   243                           
   244                           ; Clear objects allocated to BANK0 (81 bytes)
   245  002966  EE00  F060         	lfsr	0,__pbssBANK0
   246  00296A  0E51               	movlw	81
   247  00296C                     clear_0:
   248  00296C  6AEE               	clrf	postinc0,c
   249  00296E  06E8               	decf	wreg,f,c
   250  002970  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   253  002972  6A3E               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   254  002974  6A3D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   255                           
   256                           ; Clear objects allocated to COMRAM (21 bytes)
   257  002976  EE00  F028         	lfsr	0,__pbssCOMRAM
   258  00297A  0E15               	movlw	21
   259  00297C                     clear_1:
   260  00297C  6AEE               	clrf	postinc0,c
   261  00297E  06E8               	decf	wreg,f,c
   262  002980  E1FD               	bnz	clear_1
   263                           
   264                           ; Initialize objects allocated to BANK0 (9 bytes)
   265                           ; load TBLPTR registers with __pidataBANK0
   266  002982  0EC0               	movlw	low __pidataBANK0
   267  002984  6EF6               	movwf	tblptrl,c
   268  002986  0E2A               	movlw	high __pidataBANK0
   269  002988  6EF7               	movwf	tblptrh,c
   270  00298A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   271  00298C  6EF8               	movwf	tblptru,c
   272  00298E  EE00  F0DD         	lfsr	0,__pdataBANK0
   273  002992  EE10 F009          	lfsr	1,9
   274  002996                     copy_data0:
   275  002996  0009               	tblrd		*+
   276  002998  CFF5 FFEE          	movff	tablat,postinc0
   277  00299C  50E5               	movf	postdec1,w,c
   278  00299E  50E1               	movf	fsr1l,w,c
   279  0029A0  E1FA               	bnz	copy_data0
   280  0029A2                     end_of_initialization:
   281                           	opt stack 0
   282  0029A2                     __end_of__initialization:
   283                           	opt stack 0
   284  0029A2  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  0029A4  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  0029A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   287  0029A8  6EF8               	movwf	tblptru,c
   288  0029AA  0100               	movlb	0
   289  0029AC  EF42  F00E         	goto	_main	;jump to C main() function
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           tblptrl	equ	0xFF6
   293                           tablat	equ	0xFF5
   294                           postinc0	equ	0xFEE
   295                           wreg	equ	0xFE8
   296                           postdec1	equ	0xFE5
   297                           fsr1l	equ	0xFE1
   298                           
   299                           	psect	bitbssCOMRAM
   300  0001E8                     __pbitbssCOMRAM:
   301                           	opt stack 0
   302  0001E8                     _ENC1_measure:
   303                           	opt stack 0
   304  0001E8                     	ds	1
   305  0001E9                     _ENC2_measure:
   306                           	opt stack 0
   307  0001E9                     	ds	1
   308  0001EA                     _TMR1_overflow:
   309                           	opt stack 0
   310  0001EA                     	ds	1
   311  0001EB                     _TMR3_overflow:
   312                           	opt stack 0
   313  0001EB                     	ds	1
   314  0001EC                     _Tx_retry:
   315                           	opt stack 0
   316  0001EC                     	ds	1
   317  0001ED                     _count_flag:
   318                           	opt stack 0
   319  0001ED                     	ds	1
   320  0001EE                     _distance_reached_flag:
   321                           	opt stack 0
   322  0001EE                     	ds	1
   323  0001EF                     _distance_set_flag:
   324                           	opt stack 0
   325  0001EF                     	ds	1
   326  0001F0                     _remote_frame:
   327                           	opt stack 0
   328  0001F0                     	ds	1
   329  0001F1                     _x:
   330                           	opt stack 0
   331  0001F1                     	ds	1
   332  0001F2                     _y:
   333                           	opt stack 0
   334  0001F2                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	bssCOMRAM
   345  000028                     __pbssCOMRAM:
   346                           	opt stack 0
   347  000028                     _data_debug1:
   348                           	opt stack 0
   349  000028                     	ds	8
   350  000030                     _timer_off:
   351                           	opt stack 0
   352  000030                     	ds	4
   353  000034                     _timer_on:
   354                           	opt stack 0
   355  000034                     	ds	4
   356  000038                     _gap_time_1:
   357                           	opt stack 0
   358  000038                     	ds	2
   359  00003A                     _gap_time_2:
   360                           	opt stack 0
   361  00003A                     	ds	2
   362  00003C                     _brake_value_degree:
   363                           	opt stack 0
   364  00003C                     	ds	1
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	bssBANK0
   375  000060                     __pbssBANK0:
   376                           	opt stack 0
   377  000060                     _distance_actual_value:
   378                           	opt stack 0
   379  000060                     	ds	4
   380  000064                     _int_counter_1:
   381                           	opt stack 0
   382  000064                     	ds	4
   383  000068                     _int_counter_2:
   384                           	opt stack 0
   385  000068                     	ds	4
   386  00006C                     _remote_frame_id:
   387                           	opt stack 0
   388  00006C                     	ds	4
   389  000070                     _wheel_speed_1:
   390                           	opt stack 0
   391  000070                     	ds	4
   392  000074                     _wheel_speed_2:
   393                           	opt stack 0
   394  000074                     	ds	4
   395  000078                     _clock_counter_reference:
   396                           	opt stack 0
   397  000078                     	ds	2
   398  00007A                     _distance_1:
   399                           	opt stack 0
   400  00007A                     	ds	2
   401  00007C                     _distance_2:
   402                           	opt stack 0
   403  00007C                     	ds	2
   404  00007E                     _distance_set_counter_1:
   405                           	opt stack 0
   406  00007E                     	ds	2
   407  000080                     _distance_set_counter_2:
   408                           	opt stack 0
   409  000080                     	ds	2
   410  000082                     _distance_set_value:
   411                           	opt stack 0
   412  000082                     	ds	2
   413  000084                     _Analogic_Mode:
   414                           	opt stack 0
   415  000084                     	ds	1
   416  000085                     _brake_signal_CAN:
   417                           	opt stack 0
   418  000085                     	ds	1
   419  000086                     _brake_value_inc:
   420                           	opt stack 0
   421  000086                     	ds	1
   422  000087                     _home_position:
   423                           	opt stack 0
   424  000087                     	ds	1
   425  000088                     _step:
   426                           	opt stack 0
   427  000088                     	ds	1
   428  000089                     _msg:
   429                           	opt stack 0
   430  000089                     	ds	15
   431  000098                     _distance_array:
   432                           	opt stack 0
   433  000098                     	ds	8
   434  0000A0                     _speed_array:
   435                           	opt stack 0
   436  0000A0                     	ds	8
   437  0000A8                     _status_array:
   438                           	opt stack 0
   439  0000A8                     	ds	8
   440  0000B0                     _brake_value:
   441                           	opt stack 0
   442  0000B0                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	dataBANK0
   453  0000DD                     __pdataBANK0:
   454                           	opt stack 0
   455  0000DD                     _delay_quartz_frequency_value:
   456                           	opt stack 0
   457  0000DD                     	ds	1
   458  0000DE                     _remote_frame_array:
   459                           	opt stack 0
   460  0000DE                     	ds	8
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           
   470                           	psect	cstackBANK1
   471  000100                     __pcstackBANK1:
   472                           	opt stack 0
   473  000100                     ?___aldiv:
   474                           	opt stack 0
   475  000100                     CANInitialize@phaseSeg1:
   476                           	opt stack 0
   477  000100                     ___aldiv@dividend:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x0
   481  000100                     	ds	1
   482  000101                     CANInitialize@phaseSeg2:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x1
   486  000101                     	ds	1
   487  000102                     CANInitialize@SJW:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x2
   491  000102                     	ds	1
   492  000103                     CANInitialize@BRP:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x3
   496  000103                     	ds	1
   497  000104                     CANInitialize@flags:
   498                           	opt stack 0
   499  000104                     ___aldiv@divisor:
   500                           	opt stack 0
   501                           
   502                           ; 4 bytes @ 0x4
   503  000104                     	ds	1
   504  000105                     CANInitialize@propSeg:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x5
   508  000105                     	ds	1
   509  000106                     CANInitialize@FilterConfig1:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x6
   513  000106                     	ds	1
   514  000107                     CANInitialize@FilterConfig2:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x7
   518  000107                     	ds	1
   519  000108                     ??_main:
   520                           
   521                           ; 0 bytes @ 0x8
   522  000108                     	ds	4
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	cstackBANK0
   533  0000B1                     __pcstackBANK0:
   534                           	opt stack 0
   535  0000B1                     i2___awdiv@counter:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x0
   539  0000B1                     	ds	1
   540  0000B2                     i2___awdiv@sign:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x1
   544  0000B2                     	ds	1
   545  0000B3                     i2___awdiv@quotient:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x2
   549  0000B3                     	ds	2
   550  0000B5                     ??_ISR_Alta:
   551                           
   552                           ; 0 bytes @ 0x4
   553  0000B5                     	ds	22
   554  0000CB                     ?___wmul:
   555                           	opt stack 0
   556  0000CB                     ?___awdiv:
   557                           	opt stack 0
   558  0000CB                     ?___lmul:
   559                           	opt stack 0
   560  0000CB                     CANOperationMode@mode:
   561                           	opt stack 0
   562  0000CB                     _CANisTxReady$3278:
   563                           	opt stack 0
   564  0000CB                     ___wmul@multiplier:
   565                           	opt stack 0
   566  0000CB                     ___awdiv@dividend:
   567                           	opt stack 0
   568  0000CB                     CANsendMessage@identifier:
   569                           	opt stack 0
   570  0000CB                     CANSetMask@mask:
   571                           	opt stack 0
   572  0000CB                     CANSetFilter@filter:
   573                           	opt stack 0
   574  0000CB                     ___lmul@multiplier:
   575                           	opt stack 0
   576                           
   577                           ; 4 bytes @ 0x1A
   578  0000CB                     	ds	2
   579  0000CD                     ___wmul@multiplicand:
   580                           	opt stack 0
   581  0000CD                     ___awdiv@divisor:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x1C
   585  0000CD                     	ds	2
   586  0000CF                     CANSetMask@type:
   587                           	opt stack 0
   588  0000CF                     CANSetFilter@type:
   589                           	opt stack 0
   590  0000CF                     ___awdiv@counter:
   591                           	opt stack 0
   592  0000CF                     CANsendMessage@data:
   593                           	opt stack 0
   594  0000CF                     ___wmul@product:
   595                           	opt stack 0
   596  0000CF                     ___lmul@multiplicand:
   597                           	opt stack 0
   598                           
   599                           ; 4 bytes @ 0x1E
   600  0000CF                     	ds	1
   601  0000D0                     ??_CANSetMask:
   602  0000D0                     ??_CANSetFilter:
   603  0000D0                     ___awdiv@sign:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x1F
   607  0000D0                     	ds	1
   608  0000D1                     CANsendMessage@dataLength:
   609                           	opt stack 0
   610  0000D1                     delay_ms@value_ms:
   611                           	opt stack 0
   612  0000D1                     ___awdiv@quotient:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x20
   616  0000D1                     	ds	1
   617  0000D2                     CANsendMessage@flags:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x21
   621  0000D2                     	ds	1
   622  0000D3                     ??_CANsendMessage:
   623  0000D3                     ___lmul@product:
   624                           	opt stack 0
   625                           
   626                           ; 4 bytes @ 0x22
   627  0000D3                     	ds	1
   628  0000D4                     CANSetMask@numBuffer:
   629                           	opt stack 0
   630  0000D4                     CANSetFilter@numBuffer:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x23
   634  0000D4                     	ds	1
   635  0000D5                     CANSetMask@tamp:
   636                           	opt stack 0
   637  0000D5                     CANSetFilter@tamp:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x24
   641  0000D5                     	ds	2
   642  0000D7                     ___aldiv@counter:
   643                           	opt stack 0
   644  0000D7                     CANsendMessage@tamp:
   645                           	opt stack 0
   646                           
   647                           ; 4 bytes @ 0x26
   648  0000D7                     	ds	1
   649  0000D8                     ___aldiv@sign:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x27
   653  0000D8                     	ds	1
   654  0000D9                     ??_CANInitialize:
   655  0000D9                     ___aldiv@quotient:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x28
   659  0000D9                     	ds	2
   660  0000DB                     ??_remote_frame_handler:
   661                           
   662                           ; 0 bytes @ 0x2A
   663  0000DB                     	ds	2
   664  0000DD                     tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           ; 0 bytes @ 0x2C
   674                           
   675                           	psect	cstackCOMRAM
   676  000001                     __pcstackCOMRAM:
   677                           	opt stack 0
   678  000001                     _CANisRxReady$3280:
   679                           	opt stack 0
   680  000001                     CANreceiveMessage@msg:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x0
   684  000001                     	ds	2
   685  000003                     ??_CANreceiveMessage:
   686                           
   687                           ; 0 bytes @ 0x2
   688  000003                     	ds	8
   689  00000B                     CANreceiveMessage@error:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0xA
   693  00000B                     	ds	1
   694  00000C                     CANreceiveMessage@tamp:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0xB
   698  00000C                     	ds	1
   699  00000D                     ??_ISR_Bassa:
   700                           
   701                           ; 0 bytes @ 0xC
   702  00000D                     	ds	17
   703  00001E                     ?___lwdiv:
   704                           	opt stack 0
   705  00001E                     ?i2___wmul:
   706                           	opt stack 0
   707  00001E                     WriteTimer0@timer0:
   708                           	opt stack 0
   709  00001E                     ___lwdiv@dividend:
   710                           	opt stack 0
   711  00001E                     i2___wmul@multiplier:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x1D
   715  00001E                     	ds	2
   716  000020                     WriteTimer0@timer:
   717                           	opt stack 0
   718  000020                     ___lwdiv@divisor:
   719                           	opt stack 0
   720  000020                     i2___wmul@multiplicand:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x1F
   724  000020                     	ds	2
   725  000022                     ___lwdiv@quotient:
   726                           	opt stack 0
   727  000022                     i2___wmul@product:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x21
   731  000022                     	ds	2
   732  000024                     ?i2___awdiv:
   733                           	opt stack 0
   734  000024                     ___lwdiv@counter:
   735                           	opt stack 0
   736  000024                     i2___awdiv@dividend:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x23
   740  000024                     	ds	2
   741  000026                     i2___awdiv@divisor:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x25
   745  000026                     	ds	2
   746  000028                     tblptru	equ	0xFF8
   747                           tblptrh	equ	0xFF7
   748                           tblptrl	equ	0xFF6
   749                           tablat	equ	0xFF5
   750                           postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           postdec1	equ	0xFE5
   753                           fsr1l	equ	0xFE1
   754                           
   755                           ; 0 bytes @ 0x27
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 254 in file "ABS_Code.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  2  707[None  ] int 
   768 ;; Registers used:
   769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   775 ;;      Params:         0       0       0       0
   776 ;;      Locals:         0       0       0       0
   777 ;;      Temps:          0       0       4       0
   778 ;;      Totals:         0       0       4       0
   779 ;;Total ram usage:        4 bytes
   780 ;; Hardware stack levels required when called:    7
   781 ;; This function calls:
   782 ;;		_CANisRXwarningON
   783 ;;		_CANisTXwarningON
   784 ;;		___aldiv
   785 ;;		___awdiv
   786 ;;		___lmul
   787 ;;		___wmul
   788 ;;		_board_initialization
   789 ;;		_delay_ms
   790 ;;		_remote_frame_handler
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797  001C84                     __ptext0:
   798                           	opt stack 0
   799  001C84                     _main:
   800                           	opt stack 24
   801                           
   802                           ;ABS_Code.c: 255: board_initialization();
   803                           
   804                           ;incstack = 0
   805  001C84  ECA5  F013         	call	_board_initialization	;wreg free
   806                           
   807                           ;ABS_Code.c: 256: step = (11 * (3.1415)) / 16;
   808  001C88  0E02               	movlw	2
   809  001C8A  0100               	movlb	0	; () banked
   810  001C8C  6F88               	movwf	_step& (0+255),b
   811                           
   812                           ; BSR set to: 0
   813                           ;ABS_Code.c: 259: PORTAbits.RA1 = 1;
   814  001C8E  8280               	bsf	3968,1,c	;volatile
   815                           
   816                           ; BSR set to: 0
   817                           ;ABS_Code.c: 260: PORTCbits.RC1 = 1;
   818  001C90  8282               	bsf	3970,1,c	;volatile
   819                           
   820                           ; BSR set to: 0
   821                           ;ABS_Code.c: 261: delay_ms(500);
   822  001C92  0E01               	movlw	1
   823  001C94  0100               	movlb	0	; () banked
   824  001C96  6FD2               	movwf	(delay_ms@value_ms+1)& (0+255),b
   825  001C98  0EF4               	movlw	244
   826  001C9A  6FD1               	movwf	delay_ms@value_ms& (0+255),b
   827  001C9C  ECD8  F014         	call	_delay_ms	;wreg free
   828                           
   829                           ;ABS_Code.c: 262: PORTAbits.RA1 = 0;
   830  001CA0  9280               	bcf	3968,1,c	;volatile
   831                           
   832                           ;ABS_Code.c: 263: PORTCbits.RC1 = 0;
   833  001CA2  9282               	bcf	3970,1,c	;volatile
   834                           
   835                           ;ABS_Code.c: 264: delay_ms(100);
   836  001CA4  0E00               	movlw	0
   837  001CA6  0100               	movlb	0	; () banked
   838  001CA8  6FD2               	movwf	(delay_ms@value_ms+1)& (0+255),b
   839  001CAA  0E64               	movlw	100
   840  001CAC  6FD1               	movwf	delay_ms@value_ms& (0+255),b
   841  001CAE  ECD8  F014         	call	_delay_ms	;wreg free
   842  001CB2                     l5002:
   843                           
   844                           ;ABS_Code.c: 268: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   845  001CB2  EC54  F015         	call	_CANisTXwarningON	;wreg free
   846  001CB6  06E8               	decf	wreg,f,c
   847  001CB8  B4D8               	btfsc	status,2,c
   848  001CBA  D005               	goto	l711
   849  001CBC  EC5A  F015         	call	_CANisRXwarningON	;wreg free
   850  001CC0  06E8               	decf	wreg,f,c
   851  001CC2  A4D8               	btfss	status,2,c
   852  001CC4  D004               	goto	l709
   853  001CC6                     l711:
   854                           
   855                           ;ABS_Code.c: 269: PORTAbits.RA1 = 1;
   856  001CC6  8280               	bsf	3968,1,c	;volatile
   857                           
   858                           ;ABS_Code.c: 270: COMSTATbits.TXWARN = 0;
   859  001CC8  9474               	bcf	3956,2,c	;volatile
   860                           
   861                           ;ABS_Code.c: 271: COMSTATbits.RXWARN = 0;
   862  001CCA  9274               	bcf	3956,1,c	;volatile
   863                           
   864                           ;ABS_Code.c: 272: } else {
   865  001CCC  D001               	goto	l712
   866  001CCE                     l709:
   867                           
   868                           ;ABS_Code.c: 273: PORTAbits.RA1 = 0;
   869  001CCE  9280               	bcf	3968,1,c	;volatile
   870  001CD0                     l712:
   871                           
   872                           ;ABS_Code.c: 274: }
   873                           ;ABS_Code.c: 277: if (distance_set_flag == 1) {
   874  001CD0  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   875  001CD2  D043               	goto	l713
   876                           
   877                           ;ABS_Code.c: 278: distance_actual_value = (step * (distance_set_counter_1 + distance_set
      +                          _counter_2)) / 2;
   878  001CD4  0100               	movlb	0	; () banked
   879  001CD6  5180               	movf	_distance_set_counter_2& (0+255),w,b	;volatile
   880  001CD8  0100               	movlb	0	; () banked
   881  001CDA  257E               	addwf	_distance_set_counter_1& (0+255),w,b	;volatile
   882  001CDC  0100               	movlb	0	; () banked
   883  001CDE  6FCB               	movwf	___wmul@multiplier& (0+255),b
   884  001CE0  0100               	movlb	0	; () banked
   885  001CE2  5181               	movf	(_distance_set_counter_2+1)& (0+255),w,b	;volatile
   886  001CE4  0100               	movlb	0	; () banked
   887  001CE6  217F               	addwfc	(_distance_set_counter_1+1)& (0+255),w,b	;volatile
   888  001CE8  0100               	movlb	0	; () banked
   889  001CEA  6FCC               	movwf	(___wmul@multiplier+1)& (0+255),b
   890  001CEC  C088  F0CD         	movff	_step,___wmul@multiplicand
   891  001CF0  0100               	movlb	0	; () banked
   892  001CF2  6BCE               	clrf	(___wmul@multiplicand+1)& (0+255),b
   893  001CF4  ECF5  F014         	call	___wmul	;wreg free
   894  001CF8  90D8               	bcf	status,0,c
   895  001CFA  0100               	movlb	0	; () banked
   896  001CFC  31CC               	rrcf	(?___wmul+1)& (0+255),w,b
   897  001CFE  0101               	movlb	1	; () banked
   898  001D00  6F09               	movwf	(??_main+1)& (0+255),b
   899  001D02  0100               	movlb	0	; () banked
   900  001D04  31CB               	rrcf	?___wmul& (0+255),w,b
   901  001D06  0101               	movlb	1	; () banked
   902  001D08  6F08               	movwf	??_main& (0+255),b
   903  001D0A  C108  F060         	movff	??_main,_distance_actual_value	;volatile
   904  001D0E  C109  F061         	movff	??_main+1,_distance_actual_value+1	;volatile
   905  001D12  0100               	movlb	0	; () banked
   906  001D14  6B62               	clrf	(_distance_actual_value+2)& (0+255),b	;volatile
   907  001D16  6B63               	clrf	(_distance_actual_value+3)& (0+255),b	;volatile
   908                           
   909                           ; BSR set to: 0
   910                           ;ABS_Code.c: 279: if (distance_actual_value >= distance_set_value) {
   911  001D18  0100               	movlb	0	; () banked
   912  001D1A  5182               	movf	_distance_set_value& (0+255),w,b	;volatile
   913  001D1C  0101               	movlb	1	; () banked
   914  001D1E  6F08               	movwf	??_main& (0+255),b
   915  001D20  0100               	movlb	0	; () banked
   916  001D22  5183               	movf	(_distance_set_value+1)& (0+255),w,b	;volatile
   917  001D24  0101               	movlb	1	; () banked
   918  001D26  6F09               	movwf	(??_main+1)& (0+255),b
   919  001D28  0101               	movlb	1	; () banked
   920  001D2A  6B0A               	clrf	(??_main+2)& (0+255),b
   921  001D2C  0101               	movlb	1	; () banked
   922  001D2E  6B0B               	clrf	(??_main+3)& (0+255),b
   923  001D30  0101               	movlb	1	; () banked
   924  001D32  5108               	movf	??_main& (0+255),w,b
   925  001D34  0100               	movlb	0	; () banked
   926  001D36  5D60               	subwf	_distance_actual_value& (0+255),w,b	;volatile
   927  001D38  0101               	movlb	1	; () banked
   928  001D3A  5109               	movf	(??_main+1)& (0+255),w,b
   929  001D3C  0100               	movlb	0	; () banked
   930  001D3E  5961               	subwfb	(_distance_actual_value+1)& (0+255),w,b	;volatile
   931  001D40  0101               	movlb	1	; () banked
   932  001D42  510A               	movf	(??_main+2)& (0+255),w,b
   933  001D44  0100               	movlb	0	; () banked
   934  001D46  5962               	subwfb	(_distance_actual_value+2)& (0+255),w,b	;volatile
   935  001D48  0101               	movlb	1	; () banked
   936  001D4A  510B               	movf	(??_main+3)& (0+255),w,b
   937  001D4C  0100               	movlb	0	; () banked
   938  001D4E  5963               	subwfb	(_distance_actual_value+3)& (0+255),w,b	;volatile
   939  001D50  A0D8               	btfss	status,0,c
   940  001D52  D003               	goto	l713
   941                           
   942                           ; BSR set to: 0
   943                           ;ABS_Code.c: 280: distance_set_flag = 0;
   944  001D54  9E3D               	bcf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
   945                           
   946                           ;ABS_Code.c: 281: distance_reached_flag = 1;
   947  001D56  8C3D               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
   948                           
   949                           ;ABS_Code.c: 282: Tx_retry = 1;
   950  001D58  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   951  001D5A                     l713:
   952                           
   953                           ;ABS_Code.c: 283: }
   954                           ;ABS_Code.c: 284: }
   955                           ;ABS_Code.c: 286: if ((remote_frame == 1) || (Tx_retry == 1)) {
   956  001D5A  B03E               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   957  001D5C  D002               	goto	l717
   958  001D5E  A83D               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   959  001D60  D003               	goto	l5016
   960  001D62                     l717:
   961                           
   962                           ;ABS_Code.c: 287: remote_frame = 0;
   963  001D62  903E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   964                           
   965                           ;ABS_Code.c: 288: remote_frame_handler();
   966  001D64  ECED  F010         	call	_remote_frame_handler	;wreg free
   967  001D68                     l5016:
   968                           
   969                           ;ABS_Code.c: 289: }
   970                           ;ABS_Code.c: 292: if (Analogic_Mode == 0b00000000) {
   971  001D68  0100               	movlb	0	; () banked
   972  001D6A  5184               	movf	_Analogic_Mode& (0+255),w,b	;volatile
   973  001D6C  A4D8               	btfss	status,2,c
   974  001D6E  D01E               	goto	l718
   975                           
   976                           ; BSR set to: 0
   977                           ;ABS_Code.c: 293: if (brake_signal_CAN == 0b00000000) {
   978  001D70  0100               	movlb	0	; () banked
   979  001D72  5185               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
   980  001D74  A4D8               	btfss	status,2,c
   981  001D76  D003               	goto	l5022
   982                           
   983                           ; BSR set to: 0
   984                           ;ABS_Code.c: 294: brake_value_inc = 0;
   985  001D78  0E00               	movlw	0
   986  001D7A  0100               	movlb	0	; () banked
   987  001D7C  6F86               	movwf	_brake_value_inc& (0+255),b
   988  001D7E                     l5022:
   989                           
   990                           ; BSR set to: 0
   991                           ;ABS_Code.c: 295: }
   992                           ;ABS_Code.c: 296: if (brake_signal_CAN == 0b00000001) {
   993  001D7E  0100               	movlb	0	; () banked
   994  001D80  0585               	decf	_brake_signal_CAN& (0+255),w,b	;volatile
   995  001D82  A4D8               	btfss	status,2,c
   996  001D84  D003               	goto	l5026
   997                           
   998                           ; BSR set to: 0
   999                           ;ABS_Code.c: 297: brake_value_inc = 150;
  1000  001D86  0E96               	movlw	150
  1001  001D88  0100               	movlb	0	; () banked
  1002  001D8A  6F86               	movwf	_brake_value_inc& (0+255),b
  1003  001D8C                     l5026:
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;ABS_Code.c: 298: }
  1007                           ;ABS_Code.c: 299: if (brake_signal_CAN == 0b00000010) {
  1008  001D8C  0E02               	movlw	2
  1009  001D8E  0100               	movlb	0	; () banked
  1010  001D90  1985               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1011  001D92  A4D8               	btfss	status,2,c
  1012  001D94  D003               	goto	l5030
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;ABS_Code.c: 300: brake_value_inc = 200;
  1016  001D96  0EC8               	movlw	200
  1017  001D98  0100               	movlb	0	; () banked
  1018  001D9A  6F86               	movwf	_brake_value_inc& (0+255),b
  1019  001D9C                     l5030:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;ABS_Code.c: 301: }
  1023                           ;ABS_Code.c: 302: if (brake_signal_CAN == 0b00000011) {
  1024  001D9C  0E03               	movlw	3
  1025  001D9E  0100               	movlb	0	; () banked
  1026  001DA0  1985               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1027  001DA2  A4D8               	btfss	status,2,c
  1028  001DA4  D005               	goto	l5034
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;ABS_Code.c: 303: brake_value_inc = 255;
  1032  001DA6  0100               	movlb	0	; () banked
  1033  001DA8  6986               	setf	_brake_value_inc& (0+255),b
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;ABS_Code.c: 304: }
  1037                           ;ABS_Code.c: 305: } else {
  1038  001DAA  D002               	goto	l5034
  1039  001DAC                     l718:
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;ABS_Code.c: 306: brake_value_inc = brake_signal_CAN;
  1043  001DAC  C085  F086         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
  1044  001DB0                     l5034:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;ABS_Code.c: 307: }
  1048                           ;ABS_Code.c: 310: if (((brake_value_inc / 17) + home_position) > 255) {
  1049  001DB0  C086  F0CB         	movff	_brake_value_inc,___awdiv@dividend
  1050  001DB4  0100               	movlb	0	; () banked
  1051  001DB6  6BCC               	clrf	(___awdiv@dividend+1)& (0+255),b
  1052  001DB8  0E00               	movlw	0
  1053  001DBA  0100               	movlb	0	; () banked
  1054  001DBC  6FCE               	movwf	(___awdiv@divisor+1)& (0+255),b
  1055  001DBE  0E11               	movlw	17
  1056  001DC0  6FCD               	movwf	___awdiv@divisor& (0+255),b
  1057  001DC2  EC46  F013         	call	___awdiv	;wreg free
  1058  001DC6  0100               	movlb	0	; () banked
  1059  001DC8  5187               	movf	_home_position& (0+255),w,b
  1060  001DCA  0100               	movlb	0	; () banked
  1061  001DCC  27CB               	addwf	?___awdiv& (0+255),f,b
  1062  001DCE  0E00               	movlw	0
  1063  001DD0  0100               	movlb	0	; () banked
  1064  001DD2  23CC               	addwfc	(?___awdiv+1)& (0+255),f,b
  1065  001DD4  0100               	movlb	0	; () banked
  1066  001DD6  BFCC               	btfsc	(?___awdiv+1)& (0+255),7,b
  1067  001DD8  D008               	goto	l5040
  1068  001DDA  0100               	movlb	0	; () banked
  1069  001DDC  05CC               	decf	(?___awdiv+1)& (0+255),w,b
  1070  001DDE  A0D8               	btfss	status,0,c
  1071  001DE0  D004               	goto	l5040
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;ABS_Code.c: 311: brake_value = 255;
  1075  001DE2  0100               	movlb	0	; () banked
  1076  001DE4  69B0               	setf	_brake_value& (0+255),b
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;ABS_Code.c: 312: brake_value_degree = 180;
  1080  001DE6  0EB4               	movlw	180
  1081  001DE8  D020               	goto	L1
  1082  001DEA                     l5040:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;ABS_Code.c: 314: brake_value = (brake_value_inc / 17) + home_position;
  1086  001DEA  C086  F0CB         	movff	_brake_value_inc,___awdiv@dividend
  1087  001DEE  0100               	movlb	0	; () banked
  1088  001DF0  6BCC               	clrf	(___awdiv@dividend+1)& (0+255),b
  1089  001DF2  0E00               	movlw	0
  1090  001DF4  0100               	movlb	0	; () banked
  1091  001DF6  6FCE               	movwf	(___awdiv@divisor+1)& (0+255),b
  1092  001DF8  0E11               	movlw	17
  1093  001DFA  6FCD               	movwf	___awdiv@divisor& (0+255),b
  1094  001DFC  EC46  F013         	call	___awdiv	;wreg free
  1095  001E00  0100               	movlb	0	; () banked
  1096  001E02  51CB               	movf	?___awdiv& (0+255),w,b
  1097  001E04  0100               	movlb	0	; () banked
  1098  001E06  2587               	addwf	_home_position& (0+255),w,b
  1099  001E08  0100               	movlb	0	; () banked
  1100  001E0A  6FB0               	movwf	_brake_value& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;ABS_Code.c: 315: brake_value_degree = (180 * brake_value) / 255;
  1104  001E0C  0100               	movlb	0	; () banked
  1105  001E0E  51B0               	movf	_brake_value& (0+255),w,b
  1106  001E10  0DB4               	mullw	180
  1107  001E12  CFF3 F0CB          	movff	prodl,___awdiv@dividend
  1108  001E16  CFF4 F0CC          	movff	prodh,___awdiv@dividend+1
  1109  001E1A  0E00               	movlw	0
  1110  001E1C  0100               	movlb	0	; () banked
  1111  001E1E  6FCE               	movwf	(___awdiv@divisor+1)& (0+255),b
  1112  001E20  69CD               	setf	___awdiv@divisor& (0+255),b
  1113  001E22  EC46  F013         	call	___awdiv	;wreg free
  1114  001E26  0100               	movlb	0	; () banked
  1115  001E28  51CB               	movf	?___awdiv& (0+255),w,b
  1116  001E2A                     L1:
  1117  001E2A  6E3C               	movwf	_brake_value_degree,c
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;ABS_Code.c: 316: }
  1121                           ;ABS_Code.c: 319: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1122                           
  1123                           ; BSR set to: 0
  1124  001E2C  B03D               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1125  001E2E  D002               	goto	l728
  1126                           
  1127                           ; BSR set to: 0
  1128  001E30  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1129  001E32  D03D               	goto	l5060
  1130  001E34                     l728:
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;ABS_Code.c: 320: if (TMR1_overflow == 1) {
  1134  001E34  A43D               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1135  001E36  D00B               	goto	l5052
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;ABS_Code.c: 321: wheel_speed_1 = 0;
  1139  001E38  0E00               	movlw	0
  1140  001E3A  0100               	movlb	0	; () banked
  1141  001E3C  6F70               	movwf	_wheel_speed_1& (0+255),b	;volatile
  1142  001E3E  0E00               	movlw	0
  1143  001E40  6F71               	movwf	(_wheel_speed_1+1)& (0+255),b	;volatile
  1144  001E42  0E00               	movlw	0
  1145  001E44  6F72               	movwf	(_wheel_speed_1+2)& (0+255),b	;volatile
  1146  001E46  0E00               	movlw	0
  1147  001E48  6F73               	movwf	(_wheel_speed_1+3)& (0+255),b	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;ABS_Code.c: 322: TMR1_overflow = 0;
  1151  001E4A  943D               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1152                           
  1153                           ;ABS_Code.c: 323: } else {
  1154  001E4C  D02B               	goto	l5054
  1155  001E4E                     l5052:
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;ABS_Code.c: 324: wheel_speed_1 = (step * 100000) / gap_time_1;
  1159  001E4E  0100               	movlb	0	; () banked
  1160  001E50  5188               	movf	_step& (0+255),w,b
  1161  001E52  0100               	movlb	0	; () banked
  1162  001E54  6FCB               	movwf	___lmul@multiplier& (0+255),b
  1163  001E56  6BCC               	clrf	(___lmul@multiplier+1)& (0+255),b
  1164  001E58  6BCD               	clrf	(___lmul@multiplier+2)& (0+255),b
  1165  001E5A  6BCE               	clrf	(___lmul@multiplier+3)& (0+255),b
  1166  001E5C  0EA0               	movlw	160
  1167  001E5E  0100               	movlb	0	; () banked
  1168  001E60  6FCF               	movwf	___lmul@multiplicand& (0+255),b
  1169  001E62  0E86               	movlw	134
  1170  001E64  6FD0               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1171  001E66  0E01               	movlw	1
  1172  001E68  6FD1               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1173  001E6A  0E00               	movlw	0
  1174  001E6C  6FD2               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1175  001E6E  EC4F  F014         	call	___lmul	;wreg free
  1176  001E72  C0CB  F100         	movff	?___lmul,___aldiv@dividend
  1177  001E76  C0CC  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1178  001E7A  C0CD  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1179  001E7E  C0CE  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1180  001E82  C038  F104         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1181  001E86  C039  F105         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1182  001E8A  0101               	movlb	1	; () banked
  1183  001E8C  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1184  001E8E  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1185  001E90  ECB9  F012         	call	___aldiv	;wreg free
  1186  001E94  C100  F070         	movff	?___aldiv,_wheel_speed_1	;volatile
  1187  001E98  C101  F071         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1188  001E9C  C102  F072         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1189  001EA0  C103  F073         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1190  001EA4                     l5054:
  1191                           
  1192                           ;ABS_Code.c: 325: }
  1193                           ;ABS_Code.c: 326: speed_array[3] = wheel_speed_1 >> 8;
  1194  001EA4  C071  F0A3         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1195                           
  1196                           ;ABS_Code.c: 327: speed_array[2] = wheel_speed_1;
  1197  001EA8  C070  F0A2         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1198                           
  1199                           ;ABS_Code.c: 328: ENC1_measure = 0;
  1200  001EAC  903D               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1201  001EAE                     l5060:
  1202                           
  1203                           ;ABS_Code.c: 329: }
  1204                           ;ABS_Code.c: 332: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1205  001EAE  B23D               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1206  001EB0  D002               	goto	l733
  1207  001EB2  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1208  001EB4  D6FE               	goto	l5002
  1209  001EB6                     l733:
  1210                           
  1211                           ;ABS_Code.c: 333: if (TMR3_overflow == 1) {
  1212  001EB6  A63D               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1213  001EB8  D00B               	goto	l5068
  1214                           
  1215                           ;ABS_Code.c: 334: wheel_speed_2 = 0;
  1216  001EBA  0E00               	movlw	0
  1217  001EBC  0100               	movlb	0	; () banked
  1218  001EBE  6F74               	movwf	_wheel_speed_2& (0+255),b	;volatile
  1219  001EC0  0E00               	movlw	0
  1220  001EC2  6F75               	movwf	(_wheel_speed_2+1)& (0+255),b	;volatile
  1221  001EC4  0E00               	movlw	0
  1222  001EC6  6F76               	movwf	(_wheel_speed_2+2)& (0+255),b	;volatile
  1223  001EC8  0E00               	movlw	0
  1224  001ECA  6F77               	movwf	(_wheel_speed_2+3)& (0+255),b	;volatile
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;ABS_Code.c: 335: TMR3_overflow = 0;
  1228  001ECC  963D               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1229                           
  1230                           ;ABS_Code.c: 336: } else {
  1231  001ECE  D02B               	goto	l5070
  1232  001ED0                     l5068:
  1233                           
  1234                           ;ABS_Code.c: 337: wheel_speed_2 = (step * 100000) / gap_time_2;
  1235  001ED0  0100               	movlb	0	; () banked
  1236  001ED2  5188               	movf	_step& (0+255),w,b
  1237  001ED4  0100               	movlb	0	; () banked
  1238  001ED6  6FCB               	movwf	___lmul@multiplier& (0+255),b
  1239  001ED8  6BCC               	clrf	(___lmul@multiplier+1)& (0+255),b
  1240  001EDA  6BCD               	clrf	(___lmul@multiplier+2)& (0+255),b
  1241  001EDC  6BCE               	clrf	(___lmul@multiplier+3)& (0+255),b
  1242  001EDE  0EA0               	movlw	160
  1243  001EE0  0100               	movlb	0	; () banked
  1244  001EE2  6FCF               	movwf	___lmul@multiplicand& (0+255),b
  1245  001EE4  0E86               	movlw	134
  1246  001EE6  6FD0               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1247  001EE8  0E01               	movlw	1
  1248  001EEA  6FD1               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1249  001EEC  0E00               	movlw	0
  1250  001EEE  6FD2               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1251  001EF0  EC4F  F014         	call	___lmul	;wreg free
  1252  001EF4  C0CB  F100         	movff	?___lmul,___aldiv@dividend
  1253  001EF8  C0CC  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1254  001EFC  C0CD  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1255  001F00  C0CE  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1256  001F04  C03A  F104         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1257  001F08  C03B  F105         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1258  001F0C  0101               	movlb	1	; () banked
  1259  001F0E  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1260  001F10  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1261  001F12  ECB9  F012         	call	___aldiv	;wreg free
  1262  001F16  C100  F074         	movff	?___aldiv,_wheel_speed_2	;volatile
  1263  001F1A  C101  F075         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1264  001F1E  C102  F076         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1265  001F22  C103  F077         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1266  001F26                     l5070:
  1267                           
  1268                           ;ABS_Code.c: 338: }
  1269                           ;ABS_Code.c: 339: speed_array[1] = wheel_speed_2 >> 8;
  1270  001F26  C075  F0A1         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1271                           
  1272                           ;ABS_Code.c: 340: speed_array[0] = wheel_speed_2;
  1273  001F2A  C074  F0A0         	movff	_wheel_speed_2,_speed_array	;volatile
  1274                           
  1275                           ;ABS_Code.c: 341: ENC2_measure = 0;
  1276  001F2E  923D               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1277  001F30  D6C0               	goto	l5002
  1278  001F32                     __end_of_main:
  1279                           	opt stack 0
  1280                           tblptru	equ	0xFF8
  1281                           tblptrh	equ	0xFF7
  1282                           tblptrl	equ	0xFF6
  1283                           tablat	equ	0xFF5
  1284                           prodh	equ	0xFF4
  1285                           prodl	equ	0xFF3
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1l	equ	0xFE1
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _remote_frame_handler *****************
  1293 ;; Defined at:
  1294 ;;		line 351 in file "ABS_Code.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;		None               void
  1301 ;; Registers used:
  1302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1308 ;;      Params:         0       0       0       0
  1309 ;;      Locals:         0       0       0       0
  1310 ;;      Temps:          0       1       0       0
  1311 ;;      Totals:         0       1       0       0
  1312 ;;Total ram usage:        1 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    5
  1315 ;; This function calls:
  1316 ;;		_CANisTxReady
  1317 ;;		_CANsendMessage
  1318 ;;		___wmul
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text1
  1325  0021DA                     __ptext1:
  1326                           	opt stack 0
  1327  0021DA                     _remote_frame_handler:
  1328                           	opt stack 25
  1329                           
  1330                           ;ABS_Code.c: 352: if (CANisTxReady()) {
  1331                           
  1332                           ;incstack = 0
  1333  0021DA  EC23  F015         	call	_CANisTxReady	;wreg free
  1334  0021DE  0900               	iorlw	0
  1335  0021E0  B4D8               	btfsc	status,2,c
  1336  0021E2  D0E2               	goto	l741
  1337                           
  1338                           ;ABS_Code.c: 353: if (remote_frame_id == 0b00000000010) {
  1339  0021E4  0E02               	movlw	2
  1340  0021E6  0100               	movlb	0	; () banked
  1341  0021E8  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1342  0021EA  0100               	movlb	0	; () banked
  1343  0021EC  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1344  0021EE  0100               	movlb	0	; () banked
  1345  0021F0  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1346  0021F2  0100               	movlb	0	; () banked
  1347  0021F4  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1348  0021F6  A4D8               	btfss	status,2,c
  1349  0021F8  D02A               	goto	l3818
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;ABS_Code.c: 354: status_array[0] = 0x01;
  1353  0021FA  0E01               	movlw	1
  1354  0021FC  0100               	movlb	0	; () banked
  1355  0021FE  6FA8               	movwf	_status_array& (0+255),b
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;ABS_Code.c: 355: CANsendMessage(0b00000000010, status_array, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1359  002200  0E02               	movlw	2
  1360  002202  0100               	movlb	0	; () banked
  1361  002204  6FCB               	movwf	CANsendMessage@identifier& (0+255),b
  1362  002206  0E00               	movlw	0
  1363  002208  6FCC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1364  00220A  0E00               	movlw	0
  1365  00220C  6FCD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1366  00220E  0E00               	movlw	0
  1367  002210  6FCE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1368  002212  0EA8               	movlw	low _status_array
  1369  002214  0100               	movlb	0	; () banked
  1370  002216  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1371  002218  0E00               	movlw	high _status_array
  1372  00221A  0100               	movlb	0	; () banked
  1373  00221C  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1374  00221E  0E08               	movlw	8
  1375  002220  0100               	movlb	0	; () banked
  1376  002222  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1377  002224  0EBC               	movlw	188
  1378  002226  0100               	movlb	0	; () banked
  1379  002228  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1380  00222A  EC27  F006         	call	_CANsendMessage	;wreg free
  1381                           
  1382                           ;ABS_Code.c: 356: PORTCbits.RC1 = ~PORTCbits.RC1;
  1383  00222E  A282               	btfss	3970,1,c	;volatile
  1384  002230  D002               	goto	u4180
  1385  002232  0E01               	movlw	1
  1386  002234  D001               	goto	u4186
  1387  002236                     u4180:
  1388  002236  0E00               	movlw	0
  1389  002238                     u4186:
  1390  002238  0AFF               	xorlw	255
  1391  00223A  0100               	movlb	0	; () banked
  1392  00223C  6FDB               	movwf	??_remote_frame_handler& (0+255),b
  1393  00223E  0100               	movlb	0	; () banked
  1394  002240  47DB               	rlncf	??_remote_frame_handler& (0+255),f,b
  1395  002242  5082               	movf	3970,w,c	;volatile
  1396  002244  0100               	movlb	0	; () banked
  1397  002246  19DB               	xorwf	??_remote_frame_handler& (0+255),w,b
  1398  002248  0BFD               	andlw	-3
  1399  00224A  19DB               	xorwf	??_remote_frame_handler& (0+255),w,b
  1400  00224C  6E82               	movwf	3970,c	;volatile
  1401  00224E                     l3818:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;ABS_Code.c: 357: }
  1405                           ;ABS_Code.c: 358: if (remote_frame_id == 0b00000000110) {
  1406  00224E  0E06               	movlw	6
  1407  002250  0100               	movlb	0	; () banked
  1408  002252  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1409  002254  0100               	movlb	0	; () banked
  1410  002256  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1411  002258  0100               	movlb	0	; () banked
  1412  00225A  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1413  00225C  0100               	movlb	0	; () banked
  1414  00225E  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1415  002260  A4D8               	btfss	status,2,c
  1416  002262  D016               	goto	l3822
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;ABS_Code.c: 359: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1420  002264  C06C  F0CB         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1421  002268  C06D  F0CC         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1422  00226C  C06E  F0CD         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1423  002270  C06F  F0CE         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1424  002274  0EA0               	movlw	low _speed_array
  1425  002276  0100               	movlb	0	; () banked
  1426  002278  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1427  00227A  0E00               	movlw	high _speed_array
  1428  00227C  0100               	movlb	0	; () banked
  1429  00227E  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1430  002280  0E08               	movlw	8
  1431  002282  0100               	movlb	0	; () banked
  1432  002284  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1433  002286  0EBC               	movlw	188
  1434  002288  0100               	movlb	0	; () banked
  1435  00228A  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1436  00228C  EC27  F006         	call	_CANsendMessage	;wreg free
  1437  002290                     l3822:
  1438                           
  1439                           ;ABS_Code.c: 360: }
  1440                           ;ABS_Code.c: 361: if (remote_frame_id == 0b00000001000) {
  1441  002290  0E08               	movlw	8
  1442  002292  0100               	movlb	0	; () banked
  1443  002294  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1444  002296  0100               	movlb	0	; () banked
  1445  002298  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1446  00229A  0100               	movlb	0	; () banked
  1447  00229C  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1448  00229E  0100               	movlb	0	; () banked
  1449  0022A0  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1450  0022A2  A4D8               	btfss	status,2,c
  1451  0022A4  D013               	goto	l3828
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;ABS_Code.c: 362: int_counter_1 = 0;
  1455  0022A6  0E00               	movlw	0
  1456  0022A8  0100               	movlb	0	; () banked
  1457  0022AA  6F64               	movwf	_int_counter_1& (0+255),b	;volatile
  1458  0022AC  0E00               	movlw	0
  1459  0022AE  6F65               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1460  0022B0  0E00               	movlw	0
  1461  0022B2  6F66               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1462  0022B4  0E00               	movlw	0
  1463  0022B6  6F67               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1464                           
  1465                           ;ABS_Code.c: 363: int_counter_2 = 0;
  1466  0022B8  0E00               	movlw	0
  1467  0022BA  0100               	movlb	0	; () banked
  1468  0022BC  6F68               	movwf	_int_counter_2& (0+255),b	;volatile
  1469  0022BE  0E00               	movlw	0
  1470  0022C0  6F69               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1471  0022C2  0E00               	movlw	0
  1472  0022C4  6F6A               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1473  0022C6  0E00               	movlw	0
  1474  0022C8  6F6B               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;ABS_Code.c: 364: count_flag = 1;
  1478  0022CA  8A3D               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1479  0022CC                     l3828:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;ABS_Code.c: 365: }
  1483                           ;ABS_Code.c: 366: if (remote_frame_id == 0b00000000111) {
  1484  0022CC  0E07               	movlw	7
  1485  0022CE  0100               	movlb	0	; () banked
  1486  0022D0  196C               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1487  0022D2  0100               	movlb	0	; () banked
  1488  0022D4  116D               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1489  0022D6  0100               	movlb	0	; () banked
  1490  0022D8  116E               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1491  0022DA  0100               	movlb	0	; () banked
  1492  0022DC  116F               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1493  0022DE  A4D8               	btfss	status,2,c
  1494  0022E0  D03F               	goto	l3844
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;ABS_Code.c: 367: distance_1 = step * (int_counter_1);
  1498  0022E2  C088  F0CB         	movff	_step,___wmul@multiplier
  1499  0022E6  0100               	movlb	0	; () banked
  1500  0022E8  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  1501  0022EA  C064  F0CD         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1502  0022EE  C065  F0CE         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1503  0022F2  ECF5  F014         	call	___wmul	;wreg free
  1504  0022F6  C0CB  F07A         	movff	?___wmul,_distance_1	;volatile
  1505  0022FA  C0CC  F07B         	movff	?___wmul+1,_distance_1+1	;volatile
  1506                           
  1507                           ;ABS_Code.c: 368: distance_2 = step * (int_counter_2);
  1508  0022FE  C088  F0CB         	movff	_step,___wmul@multiplier
  1509  002302  0100               	movlb	0	; () banked
  1510  002304  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  1511  002306  C068  F0CD         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1512  00230A  C069  F0CE         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1513  00230E  ECF5  F014         	call	___wmul	;wreg free
  1514  002312  C0CB  F07C         	movff	?___wmul,_distance_2	;volatile
  1515  002316  C0CC  F07D         	movff	?___wmul+1,_distance_2+1	;volatile
  1516                           
  1517                           ;ABS_Code.c: 369: count_flag = 0;
  1518  00231A  9A3D               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1519                           
  1520                           ;ABS_Code.c: 370: distance_array[0] = distance_1;
  1521  00231C  C07A  F098         	movff	_distance_1,_distance_array	;volatile
  1522                           
  1523                           ;ABS_Code.c: 371: distance_array[1] = distance_1 >> 8;
  1524  002320  0100               	movlb	0	; () banked
  1525  002322  517B               	movf	(_distance_1+1)& (0+255),w,b	;volatile
  1526  002324  0100               	movlb	0	; () banked
  1527  002326  6F99               	movwf	(_distance_array+1)& (0+255),b
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;ABS_Code.c: 372: distance_array[2] = distance_2;
  1531  002328  C07C  F09A         	movff	_distance_2,_distance_array+2	;volatile
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;ABS_Code.c: 373: distance_array[3] = distance_2 >> 8;
  1535  00232C  0100               	movlb	0	; () banked
  1536  00232E  517D               	movf	(_distance_2+1)& (0+255),w,b	;volatile
  1537  002330  0100               	movlb	0	; () banked
  1538  002332  6F9B               	movwf	(_distance_array+3)& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;ABS_Code.c: 374: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1542  002334  C06C  F0CB         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1543  002338  C06D  F0CC         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1544  00233C  C06E  F0CD         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1545  002340  C06F  F0CE         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1546  002344  0E98               	movlw	low _distance_array
  1547  002346  0100               	movlb	0	; () banked
  1548  002348  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1549  00234A  0E00               	movlw	high _distance_array
  1550  00234C  0100               	movlb	0	; () banked
  1551  00234E  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1552  002350  0E08               	movlw	8
  1553  002352  0100               	movlb	0	; () banked
  1554  002354  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1555  002356  0EBC               	movlw	188
  1556  002358  0100               	movlb	0	; () banked
  1557  00235A  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1558  00235C  EC27  F006         	call	_CANsendMessage	;wreg free
  1559  002360                     l3844:
  1560                           
  1561                           ;ABS_Code.c: 375: }
  1562                           ;ABS_Code.c: 376: if (distance_reached_flag == 1) {
  1563  002360  AC3D               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1564  002362  D017               	goto	l3848
  1565                           
  1566                           ;ABS_Code.c: 377: CANsendMessage(0b00000001101, remote_frame_array, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1567  002364  0E0D               	movlw	13
  1568  002366  0100               	movlb	0	; () banked
  1569  002368  6FCB               	movwf	CANsendMessage@identifier& (0+255),b
  1570  00236A  0E00               	movlw	0
  1571  00236C  6FCC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1572  00236E  0E00               	movlw	0
  1573  002370  6FCD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1574  002372  0E00               	movlw	0
  1575  002374  6FCE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1576  002376  0EDE               	movlw	low _remote_frame_array
  1577  002378  0100               	movlb	0	; () banked
  1578  00237A  6FCF               	movwf	CANsendMessage@data& (0+255),b
  1579  00237C  0E00               	movlw	high _remote_frame_array
  1580  00237E  0100               	movlb	0	; () banked
  1581  002380  6FD0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1582  002382  0E08               	movlw	8
  1583  002384  0100               	movlb	0	; () banked
  1584  002386  6FD1               	movwf	CANsendMessage@dataLength& (0+255),b
  1585  002388  0EFC               	movlw	252
  1586  00238A  0100               	movlb	0	; () banked
  1587  00238C  6FD2               	movwf	CANsendMessage@flags& (0+255),b
  1588  00238E  EC27  F006         	call	_CANsendMessage	;wreg free
  1589  002392                     l3848:
  1590                           
  1591                           ;ABS_Code.c: 378: }
  1592                           ;ABS_Code.c: 379: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1593  002392  010F               	movlb	15	; () banked
  1594  002394  BD40               	btfsc	64,6,b	;volatile
  1595  002396  D003               	goto	l749
  1596                           
  1597                           ; BSR set to: 15
  1598  002398  010F               	movlb	15	; () banked
  1599  00239A  AD30               	btfss	48,6,b	;volatile
  1600  00239C  D002               	goto	l747
  1601  00239E                     l749:
  1602                           
  1603                           ; BSR set to: 15
  1604                           ;ABS_Code.c: 380: Tx_retry = 1;
  1605  00239E  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1606                           
  1607                           ;ABS_Code.c: 381: } else {
  1608  0023A0  0012               	return	
  1609  0023A2                     l747:
  1610                           
  1611                           ; BSR set to: 15
  1612                           ;ABS_Code.c: 382: Tx_retry = 0;
  1613  0023A2  983D               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1614                           
  1615                           ;ABS_Code.c: 383: distance_reached_flag = 0;
  1616  0023A4  9C3D               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c
  1617                           
  1618                           ; BSR set to: 15
  1619                           ;ABS_Code.c: 384: }
  1620                           ;ABS_Code.c: 385: } else {
  1621  0023A6  0012               	return	
  1622  0023A8                     l741:
  1623                           
  1624                           ;ABS_Code.c: 386: Tx_retry = 1;
  1625  0023A8  883D               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1626  0023AA  0012               	return	
  1627  0023AC                     __end_of_remote_frame_handler:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           prodh	equ	0xFF4
  1634                           prodl	equ	0xFF3
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           postdec1	equ	0xFE5
  1638                           fsr1l	equ	0xFE1
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _CANsendMessage *****************
  1642 ;; Defined at:
  1643 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  identifier      4   26[BANK0 ] unsigned long 
  1646 ;;  data            2   30[BANK0 ] PTR unsigned char 
  1647 ;;		 -> remote_frame_array(8), distance_array(8), status_array(8), speed_array(8), 
  1648 ;;  dataLength      1   32[BANK0 ] unsigned char 
  1649 ;;  flags           1   33[BANK0 ] enum E16866
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  tamp            4   38[BANK0 ] unsigned long 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1661 ;;      Params:         0       8       0       0
  1662 ;;      Locals:         0       4       0       0
  1663 ;;      Temps:          0       4       0       0
  1664 ;;      Totals:         0      16       0       0
  1665 ;;Total ram usage:       16 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    4
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_remote_frame_handler
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text2
  1676  000C4E                     __ptext2:
  1677                           	opt stack 0
  1678  000C4E                     _CANsendMessage:
  1679                           	opt stack 25
  1680                           
  1681                           ;inc\CANlib.h: 296: unsigned long tamp;
  1682                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1683                           
  1684                           ;incstack = 0
  1685  000C4E  010F               	movlb	15	; () banked
  1686  000C50  B740               	btfsc	64,3,b	;volatile
  1687  000C52  D13F               	goto	l381
  1688                           
  1689                           ; BSR set to: 15
  1690                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1691  000C54  C0D1  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1692                           
  1693                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1694  000C58  0100               	movlb	0	; () banked
  1695  000C5A  ADD2               	btfss	CANsendMessage@flags& (0+255),6,b
  1696  000C5C  D003               	goto	l382
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1700  000C5E  010F               	movlb	15	; () banked
  1701  000C60  8D45               	bsf	69,6,b	;volatile
  1702  000C62  D002               	goto	l383
  1703  000C64                     l382:
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;inc\CANlib.h: 302: else
  1707                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1708  000C64  010F               	movlb	15	; () banked
  1709  000C66  9D45               	bcf	69,6,b	;volatile
  1710  000C68                     l383:
  1711                           
  1712                           ; BSR set to: 15
  1713                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1714  000C68  0100               	movlb	0	; () banked
  1715  000C6A  A7D2               	btfss	CANsendMessage@flags& (0+255),3,b
  1716  000C6C  D079               	goto	l384
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;inc\CANlib.h: 306: {
  1720                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1721  000C6E  0100               	movlb	0	; () banked
  1722  000C70  51CB               	movf	CANsendMessage@identifier& (0+255),w,b
  1723  000C72  0100               	movlb	0	; () banked
  1724  000C74  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1725  000C76  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1726  000C78  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1727  000C7A  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1731  000C7C  C0D7  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1735  000C80  0E00               	movlw	0
  1736  000C82  0100               	movlb	0	; () banked
  1737  000C84  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  1738  000C86  0100               	movlb	0	; () banked
  1739  000C88  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1740  000C8A  0EFF               	movlw	255
  1741  000C8C  0100               	movlb	0	; () banked
  1742  000C8E  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1743  000C90  0100               	movlb	0	; () banked
  1744  000C92  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1745  000C94  0E00               	movlw	0
  1746  000C96  0100               	movlb	0	; () banked
  1747  000C98  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1748  000C9A  0100               	movlb	0	; () banked
  1749  000C9C  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1750  000C9E  0E00               	movlw	0
  1751  000CA0  0100               	movlb	0	; () banked
  1752  000CA2  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1753  000CA4  0100               	movlb	0	; () banked
  1754  000CA6  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1758  000CA8  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  1759  000CAC  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1760  000CB0  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1761  000CB4  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1762  000CB8  C0D4  F0D3         	movff	??_CANsendMessage+1,??_CANsendMessage
  1763  000CBC  C0D5  F0D4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1764  000CC0  C0D6  F0D5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1765  000CC4  0100               	movlb	0	; () banked
  1766  000CC6  6BD6               	clrf	(??_CANsendMessage+3)& (0+255),b
  1767  000CC8  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1768  000CCC  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1769  000CD0  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1770  000CD4  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1774  000CD8  C0D7  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1778  000CDC  0E00               	movlw	0
  1779  000CDE  010F               	movlb	15	; () banked
  1780  000CE0  6F42               	movwf	66,b	;volatile
  1781                           
  1782                           ; BSR set to: 15
  1783                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1784  000CE2  010F               	movlb	15	; () banked
  1785  000CE4  8742               	bsf	66,3,b	;volatile
  1786                           
  1787                           ; BSR set to: 15
  1788                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1789  000CE6  0100               	movlb	0	; () banked
  1790  000CE8  A1CD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1791  000CEA  D002               	goto	l385
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1795  000CEC  010F               	movlb	15	; () banked
  1796  000CEE  8142               	bsf	66,0,b	;volatile
  1797  000CF0                     l385:
  1798                           
  1799                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1800  000CF0  0100               	movlb	0	; () banked
  1801  000CF2  A3CD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1802  000CF4  D002               	goto	l386
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1806  000CF6  010F               	movlb	15	; () banked
  1807  000CF8  8342               	bsf	66,1,b	;volatile
  1808  000CFA                     l386:
  1809                           
  1810                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1811  000CFA  0100               	movlb	0	; () banked
  1812  000CFC  A5CD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1813  000CFE  D002               	goto	l387
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1817  000D00  010F               	movlb	15	; () banked
  1818  000D02  8B42               	bsf	66,5,b	;volatile
  1819  000D04                     l387:
  1820                           
  1821                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1822  000D04  0100               	movlb	0	; () banked
  1823  000D06  A7CD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1824  000D08  D002               	goto	l388
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1828  000D0A  010F               	movlb	15	; () banked
  1829  000D0C  8D42               	bsf	66,6,b	;volatile
  1830  000D0E                     l388:
  1831                           
  1832                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1833  000D0E  0100               	movlb	0	; () banked
  1834  000D10  A9CD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1835  000D12  D002               	goto	l3324
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1839  000D14  010F               	movlb	15	; () banked
  1840  000D16  8F42               	bsf	66,7,b	;volatile
  1841  000D18                     l3324:
  1842                           
  1843                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1844  000D18  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  1845  000D1C  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1846  000D20  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1847  000D24  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1848  000D28  0E16               	movlw	22
  1849  000D2A  D006               	goto	u3530
  1850  000D2C                     u3535:
  1851  000D2C  0100               	movlb	0	; () banked
  1852  000D2E  90D8               	bcf	status,0,c
  1853  000D30  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1854  000D32  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1855  000D34  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1856  000D36  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  1857  000D38                     u3530:
  1858  000D38  2EE8               	decfsz	wreg,f,c
  1859  000D3A  D7F8               	goto	u3535
  1860  000D3C  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1861  000D40  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1862  000D44  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1863  000D48  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1867  000D4C  0100               	movlb	0	; () banked
  1868  000D4E  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  1869  000D50  0100               	movlb	0	; () banked
  1870  000D52  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1871  000D54  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1872  000D56  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1873  000D58  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1877  000D5A  C0D7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1878                           
  1879                           ;inc\CANlib.h: 332: }
  1880  000D5E  D059               	goto	l3344
  1881  000D60                     l384:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;inc\CANlib.h: 334: else
  1885                           ;inc\CANlib.h: 336: {
  1886                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1887  000D60  010F               	movlb	15	; () banked
  1888  000D62  9742               	bcf	66,3,b	;volatile
  1889                           
  1890                           ; BSR set to: 15
  1891                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1892  000D64  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  1893  000D68  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1894  000D6C  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1895  000D70  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1896  000D74  0E04               	movlw	4
  1897  000D76  D006               	goto	u3540
  1898  000D78                     u3545:
  1899  000D78  0100               	movlb	0	; () banked
  1900  000D7A  90D8               	bcf	status,0,c
  1901  000D7C  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1902  000D7E  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1903  000D80  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1904  000D82  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  1905  000D84                     u3540:
  1906  000D84  2EE8               	decfsz	wreg,f,c
  1907  000D86  D7F8               	goto	u3545
  1908  000D88  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1909  000D8C  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1910  000D90  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1911  000D94  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1915  000D98  0100               	movlb	0	; () banked
  1916  000D9A  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  1917  000D9C  0100               	movlb	0	; () banked
  1918  000D9E  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1919  000DA0  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1920  000DA2  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1921  000DA4  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1925  000DA6  C0D7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1929  000DAA  0E07               	movlw	7
  1930  000DAC  0100               	movlb	0	; () banked
  1931  000DAE  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  1932  000DB0  0100               	movlb	0	; () banked
  1933  000DB2  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  1934  000DB4  0E00               	movlw	0
  1935  000DB6  0100               	movlb	0	; () banked
  1936  000DB8  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1937  000DBA  0100               	movlb	0	; () banked
  1938  000DBC  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1939  000DBE  0E00               	movlw	0
  1940  000DC0  0100               	movlb	0	; () banked
  1941  000DC2  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1942  000DC4  0100               	movlb	0	; () banked
  1943  000DC6  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1944  000DC8  0E00               	movlw	0
  1945  000DCA  0100               	movlb	0	; () banked
  1946  000DCC  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1947  000DCE  0100               	movlb	0	; () banked
  1948  000DD0  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1952  000DD2  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  1953  000DD6  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1954  000DDA  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1955  000DDE  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1956  000DE2  0E05               	movlw	5
  1957  000DE4                     u3555:
  1958  000DE4  90D8               	bcf	status,0,c
  1959  000DE6  0100               	movlb	0	; () banked
  1960  000DE8  37D3               	rlcf	??_CANsendMessage& (0+255),f,b
  1961  000DEA  37D4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1962  000DEC  37D5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1963  000DEE  37D6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1964  000DF0  2EE8               	decfsz	wreg,f,c
  1965  000DF2  D7F8               	goto	u3555
  1966  000DF4  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  1967  000DF8  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1968  000DFC  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1969  000E00  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1973  000E04  010F               	movlb	15	; () banked
  1974  000E06  5142               	movf	66,w,b	;volatile
  1975  000E08  0B1F               	andlw	31
  1976  000E0A  010F               	movlb	15	; () banked
  1977  000E0C  6F42               	movwf	66,b	;volatile
  1978                           
  1979                           ; BSR set to: 15
  1980                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1981  000E0E  C0D7  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1982  000E12                     l3344:
  1983                           
  1984                           ;inc\CANlib.h: 347: }
  1985                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1986  000E12  0100               	movlb	0	; () banked
  1987  000E14  A1D2               	btfss	CANsendMessage@flags& (0+255),0,b
  1988  000E16  D003               	goto	l391
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1992  000E18  010F               	movlb	15	; () banked
  1993  000E1A  8140               	bsf	64,0,b	;volatile
  1994  000E1C  D002               	goto	l392
  1995  000E1E                     l391:
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;inc\CANlib.h: 351: else
  1999                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2000  000E1E  010F               	movlb	15	; () banked
  2001  000E20  9140               	bcf	64,0,b	;volatile
  2002  000E22                     l392:
  2003                           
  2004                           ; BSR set to: 15
  2005                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2006  000E22  0100               	movlb	0	; () banked
  2007  000E24  A3D2               	btfss	CANsendMessage@flags& (0+255),1,b
  2008  000E26  D003               	goto	l393
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2012  000E28  010F               	movlb	15	; () banked
  2013  000E2A  8340               	bsf	64,1,b	;volatile
  2014  000E2C  D002               	goto	l3350
  2015  000E2E                     l393:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;inc\CANlib.h: 355: else
  2019                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2020  000E2E  010F               	movlb	15	; () banked
  2021  000E30  9340               	bcf	64,1,b	;volatile
  2022  000E32                     l3350:
  2023                           
  2024                           ; BSR set to: 15
  2025                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2026  000E32  C0CF  FFD9         	movff	CANsendMessage@data,fsr2l
  2027  000E36  C0D0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2028  000E3A  50DF               	movf	indf2,w,c
  2029  000E3C  010F               	movlb	15	; () banked
  2030  000E3E  6F46               	movwf	70,b	;volatile
  2031                           
  2032                           ; BSR set to: 15
  2033                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2034  000E40  0100               	movlb	0	; () banked
  2035  000E42  EE20 F001          	lfsr	2,1
  2036  000E46  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2037  000E48  26D9               	addwf	fsr2l,f,c
  2038  000E4A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2039  000E4C  22DA               	addwfc	fsr2h,f,c
  2040  000E4E  50DF               	movf	indf2,w,c
  2041  000E50  010F               	movlb	15	; () banked
  2042  000E52  6F47               	movwf	71,b	;volatile
  2043                           
  2044                           ; BSR set to: 15
  2045                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2046  000E54  0100               	movlb	0	; () banked
  2047  000E56  EE20 F002          	lfsr	2,2
  2048  000E5A  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2049  000E5C  26D9               	addwf	fsr2l,f,c
  2050  000E5E  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2051  000E60  22DA               	addwfc	fsr2h,f,c
  2052  000E62  50DF               	movf	indf2,w,c
  2053  000E64  010F               	movlb	15	; () banked
  2054  000E66  6F48               	movwf	72,b	;volatile
  2055                           
  2056                           ; BSR set to: 15
  2057                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2058  000E68  0100               	movlb	0	; () banked
  2059  000E6A  EE20 F003          	lfsr	2,3
  2060  000E6E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2061  000E70  26D9               	addwf	fsr2l,f,c
  2062  000E72  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2063  000E74  22DA               	addwfc	fsr2h,f,c
  2064  000E76  50DF               	movf	indf2,w,c
  2065  000E78  010F               	movlb	15	; () banked
  2066  000E7A  6F49               	movwf	73,b	;volatile
  2067                           
  2068                           ; BSR set to: 15
  2069                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2070  000E7C  0100               	movlb	0	; () banked
  2071  000E7E  EE20 F004          	lfsr	2,4
  2072  000E82  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2073  000E84  26D9               	addwf	fsr2l,f,c
  2074  000E86  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2075  000E88  22DA               	addwfc	fsr2h,f,c
  2076  000E8A  50DF               	movf	indf2,w,c
  2077  000E8C  010F               	movlb	15	; () banked
  2078  000E8E  6F4A               	movwf	74,b	;volatile
  2079                           
  2080                           ; BSR set to: 15
  2081                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2082  000E90  0100               	movlb	0	; () banked
  2083  000E92  EE20 F005          	lfsr	2,5
  2084  000E96  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2085  000E98  26D9               	addwf	fsr2l,f,c
  2086  000E9A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2087  000E9C  22DA               	addwfc	fsr2h,f,c
  2088  000E9E  50DF               	movf	indf2,w,c
  2089  000EA0  010F               	movlb	15	; () banked
  2090  000EA2  6F4B               	movwf	75,b	;volatile
  2091                           
  2092                           ; BSR set to: 15
  2093                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2094  000EA4  0100               	movlb	0	; () banked
  2095  000EA6  EE20 F006          	lfsr	2,6
  2096  000EAA  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2097  000EAC  26D9               	addwf	fsr2l,f,c
  2098  000EAE  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2099  000EB0  22DA               	addwfc	fsr2h,f,c
  2100  000EB2  50DF               	movf	indf2,w,c
  2101  000EB4  010F               	movlb	15	; () banked
  2102  000EB6  6F4C               	movwf	76,b	;volatile
  2103                           
  2104                           ; BSR set to: 15
  2105                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2106  000EB8  0100               	movlb	0	; () banked
  2107  000EBA  EE20 F007          	lfsr	2,7
  2108  000EBE  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2109  000EC0  26D9               	addwf	fsr2l,f,c
  2110  000EC2  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2111  000EC4  22DA               	addwfc	fsr2h,f,c
  2112  000EC6  50DF               	movf	indf2,w,c
  2113  000EC8  010F               	movlb	15	; () banked
  2114  000ECA  6F4D               	movwf	77,b	;volatile
  2115                           
  2116                           ; BSR set to: 15
  2117                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2118  000ECC  010F               	movlb	15	; () banked
  2119  000ECE  8740               	bsf	64,3,b	;volatile
  2120                           
  2121                           ; BSR set to: 15
  2122                           ;inc\CANlib.h: 368: return;
  2123  000ED0  0012               	return	
  2124  000ED2                     l381:
  2125                           
  2126                           ; BSR set to: 15
  2127                           ;inc\CANlib.h: 369: }
  2128                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2129  000ED2  010F               	movlb	15	; () banked
  2130  000ED4  B730               	btfsc	48,3,b	;volatile
  2131  000ED6  D13F               	goto	l396
  2132                           
  2133                           ; BSR set to: 15
  2134                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2135  000ED8  C0D1  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2136                           
  2137                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2138  000EDC  0100               	movlb	0	; () banked
  2139  000EDE  ADD2               	btfss	CANsendMessage@flags& (0+255),6,b
  2140  000EE0  D003               	goto	l397
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2144  000EE2  010F               	movlb	15	; () banked
  2145  000EE4  8D35               	bsf	53,6,b	;volatile
  2146  000EE6  D002               	goto	l398
  2147  000EE8                     l397:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;inc\CANlib.h: 378: else
  2151                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2152  000EE8  010F               	movlb	15	; () banked
  2153  000EEA  9D35               	bcf	53,6,b	;volatile
  2154  000EEC                     l398:
  2155                           
  2156                           ; BSR set to: 15
  2157                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2158  000EEC  0100               	movlb	0	; () banked
  2159  000EEE  A7D2               	btfss	CANsendMessage@flags& (0+255),3,b
  2160  000EF0  D079               	goto	l399
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;inc\CANlib.h: 382: {
  2164                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2165  000EF2  0100               	movlb	0	; () banked
  2166  000EF4  51CB               	movf	CANsendMessage@identifier& (0+255),w,b
  2167  000EF6  0100               	movlb	0	; () banked
  2168  000EF8  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2169  000EFA  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2170  000EFC  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2171  000EFE  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2175  000F00  C0D7  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2179  000F04  0E00               	movlw	0
  2180  000F06  0100               	movlb	0	; () banked
  2181  000F08  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2182  000F0A  0100               	movlb	0	; () banked
  2183  000F0C  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2184  000F0E  0EFF               	movlw	255
  2185  000F10  0100               	movlb	0	; () banked
  2186  000F12  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2187  000F14  0100               	movlb	0	; () banked
  2188  000F16  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2189  000F18  0E00               	movlw	0
  2190  000F1A  0100               	movlb	0	; () banked
  2191  000F1C  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2192  000F1E  0100               	movlb	0	; () banked
  2193  000F20  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2194  000F22  0E00               	movlw	0
  2195  000F24  0100               	movlb	0	; () banked
  2196  000F26  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2197  000F28  0100               	movlb	0	; () banked
  2198  000F2A  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2202  000F2C  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2203  000F30  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2204  000F34  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2205  000F38  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2206  000F3C  C0D4  F0D3         	movff	??_CANsendMessage+1,??_CANsendMessage
  2207  000F40  C0D5  F0D4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2208  000F44  C0D6  F0D5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2209  000F48  0100               	movlb	0	; () banked
  2210  000F4A  6BD6               	clrf	(??_CANsendMessage+3)& (0+255),b
  2211  000F4C  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2212  000F50  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2213  000F54  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2214  000F58  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2218  000F5C  C0D7  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2222  000F60  0E00               	movlw	0
  2223  000F62  010F               	movlb	15	; () banked
  2224  000F64  6F32               	movwf	50,b	;volatile
  2225                           
  2226                           ; BSR set to: 15
  2227                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2228  000F66  010F               	movlb	15	; () banked
  2229  000F68  8732               	bsf	50,3,b	;volatile
  2230                           
  2231                           ; BSR set to: 15
  2232                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2233  000F6A  0100               	movlb	0	; () banked
  2234  000F6C  A1CD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2235  000F6E  D002               	goto	l400
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2239  000F70  010F               	movlb	15	; () banked
  2240  000F72  8132               	bsf	50,0,b	;volatile
  2241  000F74                     l400:
  2242                           
  2243                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2244  000F74  0100               	movlb	0	; () banked
  2245  000F76  A3CD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2246  000F78  D002               	goto	l401
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2250  000F7A  010F               	movlb	15	; () banked
  2251  000F7C  8332               	bsf	50,1,b	;volatile
  2252  000F7E                     l401:
  2253                           
  2254                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2255  000F7E  0100               	movlb	0	; () banked
  2256  000F80  A5CD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2257  000F82  D002               	goto	l402
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2261  000F84  010F               	movlb	15	; () banked
  2262  000F86  8B32               	bsf	50,5,b	;volatile
  2263  000F88                     l402:
  2264                           
  2265                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2266  000F88  0100               	movlb	0	; () banked
  2267  000F8A  A7CD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2268  000F8C  D002               	goto	l403
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2272  000F8E  010F               	movlb	15	; () banked
  2273  000F90  8D32               	bsf	50,6,b	;volatile
  2274  000F92                     l403:
  2275                           
  2276                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2277  000F92  0100               	movlb	0	; () banked
  2278  000F94  A9CD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2279  000F96  D002               	goto	l3400
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2283  000F98  010F               	movlb	15	; () banked
  2284  000F9A  8F32               	bsf	50,7,b	;volatile
  2285  000F9C                     l3400:
  2286                           
  2287                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2288  000F9C  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2289  000FA0  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2290  000FA4  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2291  000FA8  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2292  000FAC  0E16               	movlw	22
  2293  000FAE  D006               	goto	u3660
  2294  000FB0                     u3665:
  2295  000FB0  0100               	movlb	0	; () banked
  2296  000FB2  90D8               	bcf	status,0,c
  2297  000FB4  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2298  000FB6  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2299  000FB8  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2300  000FBA  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2301  000FBC                     u3660:
  2302  000FBC  2EE8               	decfsz	wreg,f,c
  2303  000FBE  D7F8               	goto	u3665
  2304  000FC0  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2305  000FC4  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2306  000FC8  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2307  000FCC  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2311  000FD0  0100               	movlb	0	; () banked
  2312  000FD2  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2313  000FD4  0100               	movlb	0	; () banked
  2314  000FD6  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2315  000FD8  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2316  000FDA  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2317  000FDC  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2321  000FDE  C0D7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2322                           
  2323                           ;inc\CANlib.h: 407: }
  2324  000FE2  D059               	goto	l3420
  2325  000FE4                     l399:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;inc\CANlib.h: 409: else
  2329                           ;inc\CANlib.h: 411: {
  2330                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2331  000FE4  010F               	movlb	15	; () banked
  2332  000FE6  9732               	bcf	50,3,b	;volatile
  2333                           
  2334                           ; BSR set to: 15
  2335                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2336  000FE8  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2337  000FEC  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2338  000FF0  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2339  000FF4  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2340  000FF8  0E04               	movlw	4
  2341  000FFA  D006               	goto	u3670
  2342  000FFC                     u3675:
  2343  000FFC  0100               	movlb	0	; () banked
  2344  000FFE  90D8               	bcf	status,0,c
  2345  001000  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2346  001002  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2347  001004  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2348  001006  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2349  001008                     u3670:
  2350  001008  2EE8               	decfsz	wreg,f,c
  2351  00100A  D7F8               	goto	u3675
  2352  00100C  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2353  001010  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2354  001014  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2355  001018  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2359  00101C  0100               	movlb	0	; () banked
  2360  00101E  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2361  001020  0100               	movlb	0	; () banked
  2362  001022  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2363  001024  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2364  001026  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2365  001028  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2369  00102A  C0D7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2373  00102E  0E07               	movlw	7
  2374  001030  0100               	movlb	0	; () banked
  2375  001032  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2376  001034  0100               	movlb	0	; () banked
  2377  001036  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2378  001038  0E00               	movlw	0
  2379  00103A  0100               	movlb	0	; () banked
  2380  00103C  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2381  00103E  0100               	movlb	0	; () banked
  2382  001040  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2383  001042  0E00               	movlw	0
  2384  001044  0100               	movlb	0	; () banked
  2385  001046  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2386  001048  0100               	movlb	0	; () banked
  2387  00104A  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2388  00104C  0E00               	movlw	0
  2389  00104E  0100               	movlb	0	; () banked
  2390  001050  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2391  001052  0100               	movlb	0	; () banked
  2392  001054  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2396  001056  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2397  00105A  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2398  00105E  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2399  001062  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2400  001066  0E05               	movlw	5
  2401  001068                     u3685:
  2402  001068  90D8               	bcf	status,0,c
  2403  00106A  0100               	movlb	0	; () banked
  2404  00106C  37D3               	rlcf	??_CANsendMessage& (0+255),f,b
  2405  00106E  37D4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2406  001070  37D5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2407  001072  37D6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2408  001074  2EE8               	decfsz	wreg,f,c
  2409  001076  D7F8               	goto	u3685
  2410  001078  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2411  00107C  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2412  001080  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2413  001084  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2417  001088  010F               	movlb	15	; () banked
  2418  00108A  5132               	movf	50,w,b	;volatile
  2419  00108C  0B1F               	andlw	31
  2420  00108E  010F               	movlb	15	; () banked
  2421  001090  6F32               	movwf	50,b	;volatile
  2422                           
  2423                           ; BSR set to: 15
  2424                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2425  001092  C0D7  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2426  001096                     l3420:
  2427                           
  2428                           ;inc\CANlib.h: 422: }
  2429                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2430  001096  0100               	movlb	0	; () banked
  2431  001098  A1D2               	btfss	CANsendMessage@flags& (0+255),0,b
  2432  00109A  D003               	goto	l406
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2436  00109C  010F               	movlb	15	; () banked
  2437  00109E  8130               	bsf	48,0,b	;volatile
  2438  0010A0  D002               	goto	l407
  2439  0010A2                     l406:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;inc\CANlib.h: 426: else
  2443                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2444  0010A2  010F               	movlb	15	; () banked
  2445  0010A4  9130               	bcf	48,0,b	;volatile
  2446  0010A6                     l407:
  2447                           
  2448                           ; BSR set to: 15
  2449                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2450  0010A6  0100               	movlb	0	; () banked
  2451  0010A8  A3D2               	btfss	CANsendMessage@flags& (0+255),1,b
  2452  0010AA  D003               	goto	l408
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2456  0010AC  010F               	movlb	15	; () banked
  2457  0010AE  8330               	bsf	48,1,b	;volatile
  2458  0010B0  D002               	goto	l3426
  2459  0010B2                     l408:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;inc\CANlib.h: 430: else
  2463                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2464  0010B2  010F               	movlb	15	; () banked
  2465  0010B4  9330               	bcf	48,1,b	;volatile
  2466  0010B6                     l3426:
  2467                           
  2468                           ; BSR set to: 15
  2469                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2470  0010B6  C0CF  FFD9         	movff	CANsendMessage@data,fsr2l
  2471  0010BA  C0D0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2472  0010BE  50DF               	movf	indf2,w,c
  2473  0010C0  010F               	movlb	15	; () banked
  2474  0010C2  6F36               	movwf	54,b	;volatile
  2475                           
  2476                           ; BSR set to: 15
  2477                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2478  0010C4  0100               	movlb	0	; () banked
  2479  0010C6  EE20 F001          	lfsr	2,1
  2480  0010CA  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2481  0010CC  26D9               	addwf	fsr2l,f,c
  2482  0010CE  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2483  0010D0  22DA               	addwfc	fsr2h,f,c
  2484  0010D2  50DF               	movf	indf2,w,c
  2485  0010D4  010F               	movlb	15	; () banked
  2486  0010D6  6F37               	movwf	55,b	;volatile
  2487                           
  2488                           ; BSR set to: 15
  2489                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2490  0010D8  0100               	movlb	0	; () banked
  2491  0010DA  EE20 F002          	lfsr	2,2
  2492  0010DE  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2493  0010E0  26D9               	addwf	fsr2l,f,c
  2494  0010E2  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2495  0010E4  22DA               	addwfc	fsr2h,f,c
  2496  0010E6  50DF               	movf	indf2,w,c
  2497  0010E8  010F               	movlb	15	; () banked
  2498  0010EA  6F38               	movwf	56,b	;volatile
  2499                           
  2500                           ; BSR set to: 15
  2501                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2502  0010EC  0100               	movlb	0	; () banked
  2503  0010EE  EE20 F003          	lfsr	2,3
  2504  0010F2  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2505  0010F4  26D9               	addwf	fsr2l,f,c
  2506  0010F6  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2507  0010F8  22DA               	addwfc	fsr2h,f,c
  2508  0010FA  50DF               	movf	indf2,w,c
  2509  0010FC  010F               	movlb	15	; () banked
  2510  0010FE  6F39               	movwf	57,b	;volatile
  2511                           
  2512                           ; BSR set to: 15
  2513                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2514  001100  0100               	movlb	0	; () banked
  2515  001102  EE20 F004          	lfsr	2,4
  2516  001106  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2517  001108  26D9               	addwf	fsr2l,f,c
  2518  00110A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2519  00110C  22DA               	addwfc	fsr2h,f,c
  2520  00110E  50DF               	movf	indf2,w,c
  2521  001110  010F               	movlb	15	; () banked
  2522  001112  6F3A               	movwf	58,b	;volatile
  2523                           
  2524                           ; BSR set to: 15
  2525                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2526  001114  0100               	movlb	0	; () banked
  2527  001116  EE20 F005          	lfsr	2,5
  2528  00111A  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2529  00111C  26D9               	addwf	fsr2l,f,c
  2530  00111E  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2531  001120  22DA               	addwfc	fsr2h,f,c
  2532  001122  50DF               	movf	indf2,w,c
  2533  001124  010F               	movlb	15	; () banked
  2534  001126  6F3B               	movwf	59,b	;volatile
  2535                           
  2536                           ; BSR set to: 15
  2537                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2538  001128  0100               	movlb	0	; () banked
  2539  00112A  EE20 F006          	lfsr	2,6
  2540  00112E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2541  001130  26D9               	addwf	fsr2l,f,c
  2542  001132  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2543  001134  22DA               	addwfc	fsr2h,f,c
  2544  001136  50DF               	movf	indf2,w,c
  2545  001138  010F               	movlb	15	; () banked
  2546  00113A  6F3C               	movwf	60,b	;volatile
  2547                           
  2548                           ; BSR set to: 15
  2549                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2550  00113C  0100               	movlb	0	; () banked
  2551  00113E  EE20 F007          	lfsr	2,7
  2552  001142  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2553  001144  26D9               	addwf	fsr2l,f,c
  2554  001146  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2555  001148  22DA               	addwfc	fsr2h,f,c
  2556  00114A  50DF               	movf	indf2,w,c
  2557  00114C  010F               	movlb	15	; () banked
  2558  00114E  6F3D               	movwf	61,b	;volatile
  2559                           
  2560                           ; BSR set to: 15
  2561                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2562  001150  010F               	movlb	15	; () banked
  2563  001152  8730               	bsf	48,3,b	;volatile
  2564                           
  2565                           ; BSR set to: 15
  2566                           ;inc\CANlib.h: 444: return;
  2567  001154  0012               	return	
  2568  001156                     l396:
  2569                           
  2570                           ; BSR set to: 15
  2571                           ;inc\CANlib.h: 445: }
  2572                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2573  001156  010F               	movlb	15	; () banked
  2574  001158  B720               	btfsc	32,3,b	;volatile
  2575  00115A  0012               	return	
  2576                           
  2577                           ; BSR set to: 15
  2578                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2579  00115C  C0D1  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2580                           
  2581                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2582  001160  0100               	movlb	0	; () banked
  2583  001162  ADD2               	btfss	CANsendMessage@flags& (0+255),6,b
  2584  001164  D003               	goto	l411
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2588  001166  010F               	movlb	15	; () banked
  2589  001168  8D25               	bsf	37,6,b	;volatile
  2590  00116A  D002               	goto	l412
  2591  00116C                     l411:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;inc\CANlib.h: 454: else
  2595                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2596  00116C  010F               	movlb	15	; () banked
  2597  00116E  9D25               	bcf	37,6,b	;volatile
  2598  001170                     l412:
  2599                           
  2600                           ; BSR set to: 15
  2601                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2602  001170  0100               	movlb	0	; () banked
  2603  001172  A7D2               	btfss	CANsendMessage@flags& (0+255),3,b
  2604  001174  D079               	goto	l413
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;inc\CANlib.h: 458: {
  2608                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2609  001176  0100               	movlb	0	; () banked
  2610  001178  51CB               	movf	CANsendMessage@identifier& (0+255),w,b
  2611  00117A  0100               	movlb	0	; () banked
  2612  00117C  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2613  00117E  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2614  001180  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2615  001182  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2619  001184  C0D7  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2623  001188  0E00               	movlw	0
  2624  00118A  0100               	movlb	0	; () banked
  2625  00118C  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2626  00118E  0100               	movlb	0	; () banked
  2627  001190  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2628  001192  0EFF               	movlw	255
  2629  001194  0100               	movlb	0	; () banked
  2630  001196  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2631  001198  0100               	movlb	0	; () banked
  2632  00119A  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2633  00119C  0E00               	movlw	0
  2634  00119E  0100               	movlb	0	; () banked
  2635  0011A0  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2636  0011A2  0100               	movlb	0	; () banked
  2637  0011A4  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2638  0011A6  0E00               	movlw	0
  2639  0011A8  0100               	movlb	0	; () banked
  2640  0011AA  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2641  0011AC  0100               	movlb	0	; () banked
  2642  0011AE  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2646  0011B0  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2647  0011B4  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2648  0011B8  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2649  0011BC  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2650  0011C0  C0D4  F0D3         	movff	??_CANsendMessage+1,??_CANsendMessage
  2651  0011C4  C0D5  F0D4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2652  0011C8  C0D6  F0D5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2653  0011CC  0100               	movlb	0	; () banked
  2654  0011CE  6BD6               	clrf	(??_CANsendMessage+3)& (0+255),b
  2655  0011D0  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2656  0011D4  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2657  0011D8  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2658  0011DC  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2662  0011E0  C0D7  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2666  0011E4  0E00               	movlw	0
  2667  0011E6  010F               	movlb	15	; () banked
  2668  0011E8  6F22               	movwf	34,b	;volatile
  2669                           
  2670                           ; BSR set to: 15
  2671                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2672  0011EA  010F               	movlb	15	; () banked
  2673  0011EC  8722               	bsf	34,3,b	;volatile
  2674                           
  2675                           ; BSR set to: 15
  2676                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2677  0011EE  0100               	movlb	0	; () banked
  2678  0011F0  A1CD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2679  0011F2  D002               	goto	l414
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2683  0011F4  010F               	movlb	15	; () banked
  2684  0011F6  8122               	bsf	34,0,b	;volatile
  2685  0011F8                     l414:
  2686                           
  2687                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2688  0011F8  0100               	movlb	0	; () banked
  2689  0011FA  A3CD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2690  0011FC  D002               	goto	l415
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2694  0011FE  010F               	movlb	15	; () banked
  2695  001200  8322               	bsf	34,1,b	;volatile
  2696  001202                     l415:
  2697                           
  2698                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2699  001202  0100               	movlb	0	; () banked
  2700  001204  A5CD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2701  001206  D002               	goto	l416
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2705  001208  010F               	movlb	15	; () banked
  2706  00120A  8B22               	bsf	34,5,b	;volatile
  2707  00120C                     l416:
  2708                           
  2709                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2710  00120C  0100               	movlb	0	; () banked
  2711  00120E  A7CD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2712  001210  D002               	goto	l417
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2716  001212  010F               	movlb	15	; () banked
  2717  001214  8D22               	bsf	34,6,b	;volatile
  2718  001216                     l417:
  2719                           
  2720                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2721  001216  0100               	movlb	0	; () banked
  2722  001218  A9CD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2723  00121A  D002               	goto	l3476
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2727  00121C  010F               	movlb	15	; () banked
  2728  00121E  8F22               	bsf	34,7,b	;volatile
  2729  001220                     l3476:
  2730                           
  2731                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2732  001220  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2733  001224  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2734  001228  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2735  00122C  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2736  001230  0E16               	movlw	22
  2737  001232  D006               	goto	u3790
  2738  001234                     u3795:
  2739  001234  0100               	movlb	0	; () banked
  2740  001236  90D8               	bcf	status,0,c
  2741  001238  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2742  00123A  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2743  00123C  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2744  00123E  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2745  001240                     u3790:
  2746  001240  2EE8               	decfsz	wreg,f,c
  2747  001242  D7F8               	goto	u3795
  2748  001244  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2749  001248  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2750  00124C  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2751  001250  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2755  001254  0100               	movlb	0	; () banked
  2756  001256  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2757  001258  0100               	movlb	0	; () banked
  2758  00125A  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2759  00125C  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2760  00125E  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2761  001260  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2765  001262  C0D7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2766                           
  2767                           ;inc\CANlib.h: 483: }
  2768  001266  D059               	goto	l3496
  2769  001268                     l413:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;inc\CANlib.h: 485: else
  2773                           ;inc\CANlib.h: 487: {
  2774                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2775  001268  010F               	movlb	15	; () banked
  2776  00126A  9722               	bcf	34,3,b	;volatile
  2777                           
  2778                           ; BSR set to: 15
  2779                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2780  00126C  C0CB  F0D3         	movff	CANsendMessage@identifier,??_CANsendMessage
  2781  001270  C0CC  F0D4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2782  001274  C0CD  F0D5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2783  001278  C0CE  F0D6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2784  00127C  0E04               	movlw	4
  2785  00127E  D006               	goto	u3800
  2786  001280                     u3805:
  2787  001280  0100               	movlb	0	; () banked
  2788  001282  90D8               	bcf	status,0,c
  2789  001284  33D6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2790  001286  33D5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2791  001288  33D4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2792  00128A  33D3               	rrcf	??_CANsendMessage& (0+255),f,b
  2793  00128C                     u3800:
  2794  00128C  2EE8               	decfsz	wreg,f,c
  2795  00128E  D7F8               	goto	u3805
  2796  001290  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2797  001294  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2798  001298  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2799  00129C  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2803  0012A0  0100               	movlb	0	; () banked
  2804  0012A2  51D7               	movf	CANsendMessage@tamp& (0+255),w,b
  2805  0012A4  0100               	movlb	0	; () banked
  2806  0012A6  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2807  0012A8  6BD8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2808  0012AA  6BD9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2809  0012AC  6BDA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2813  0012AE  C0D7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2817  0012B2  0E07               	movlw	7
  2818  0012B4  0100               	movlb	0	; () banked
  2819  0012B6  15CB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2820  0012B8  0100               	movlb	0	; () banked
  2821  0012BA  6FD7               	movwf	CANsendMessage@tamp& (0+255),b
  2822  0012BC  0E00               	movlw	0
  2823  0012BE  0100               	movlb	0	; () banked
  2824  0012C0  15CC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2825  0012C2  0100               	movlb	0	; () banked
  2826  0012C4  6FD8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2827  0012C6  0E00               	movlw	0
  2828  0012C8  0100               	movlb	0	; () banked
  2829  0012CA  15CD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2830  0012CC  0100               	movlb	0	; () banked
  2831  0012CE  6FD9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2832  0012D0  0E00               	movlw	0
  2833  0012D2  0100               	movlb	0	; () banked
  2834  0012D4  15CE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2835  0012D6  0100               	movlb	0	; () banked
  2836  0012D8  6FDA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2840  0012DA  C0D7  F0D3         	movff	CANsendMessage@tamp,??_CANsendMessage
  2841  0012DE  C0D8  F0D4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2842  0012E2  C0D9  F0D5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2843  0012E6  C0DA  F0D6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2844  0012EA  0E05               	movlw	5
  2845  0012EC                     u3815:
  2846  0012EC  90D8               	bcf	status,0,c
  2847  0012EE  0100               	movlb	0	; () banked
  2848  0012F0  37D3               	rlcf	??_CANsendMessage& (0+255),f,b
  2849  0012F2  37D4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2850  0012F4  37D5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2851  0012F6  37D6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2852  0012F8  2EE8               	decfsz	wreg,f,c
  2853  0012FA  D7F8               	goto	u3815
  2854  0012FC  C0D3  F0D7         	movff	??_CANsendMessage,CANsendMessage@tamp
  2855  001300  C0D4  F0D8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2856  001304  C0D5  F0D9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2857  001308  C0D6  F0DA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2861  00130C  010F               	movlb	15	; () banked
  2862  00130E  5122               	movf	34,w,b	;volatile
  2863  001310  0B1F               	andlw	31
  2864  001312  010F               	movlb	15	; () banked
  2865  001314  6F22               	movwf	34,b	;volatile
  2866                           
  2867                           ; BSR set to: 15
  2868                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2869  001316  C0D7  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2870  00131A                     l3496:
  2871                           
  2872                           ;inc\CANlib.h: 498: }
  2873                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2874  00131A  0100               	movlb	0	; () banked
  2875  00131C  A1D2               	btfss	CANsendMessage@flags& (0+255),0,b
  2876  00131E  D003               	goto	l420
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2880  001320  010F               	movlb	15	; () banked
  2881  001322  8120               	bsf	32,0,b	;volatile
  2882  001324  D002               	goto	l421
  2883  001326                     l420:
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;inc\CANlib.h: 502: else
  2887                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2888  001326  010F               	movlb	15	; () banked
  2889  001328  9120               	bcf	32,0,b	;volatile
  2890  00132A                     l421:
  2891                           
  2892                           ; BSR set to: 15
  2893                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2894  00132A  0100               	movlb	0	; () banked
  2895  00132C  A3D2               	btfss	CANsendMessage@flags& (0+255),1,b
  2896  00132E  D003               	goto	l422
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2900  001330  010F               	movlb	15	; () banked
  2901  001332  8320               	bsf	32,1,b	;volatile
  2902  001334  D002               	goto	l3502
  2903  001336                     l422:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;inc\CANlib.h: 506: else
  2907                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2908  001336  010F               	movlb	15	; () banked
  2909  001338  9320               	bcf	32,1,b	;volatile
  2910  00133A                     l3502:
  2911                           
  2912                           ; BSR set to: 15
  2913                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2914  00133A  C0CF  FFD9         	movff	CANsendMessage@data,fsr2l
  2915  00133E  C0D0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2916  001342  50DF               	movf	indf2,w,c
  2917  001344  010F               	movlb	15	; () banked
  2918  001346  6F26               	movwf	38,b	;volatile
  2919                           
  2920                           ; BSR set to: 15
  2921                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2922  001348  0100               	movlb	0	; () banked
  2923  00134A  EE20 F001          	lfsr	2,1
  2924  00134E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2925  001350  26D9               	addwf	fsr2l,f,c
  2926  001352  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2927  001354  22DA               	addwfc	fsr2h,f,c
  2928  001356  50DF               	movf	indf2,w,c
  2929  001358  010F               	movlb	15	; () banked
  2930  00135A  6F27               	movwf	39,b	;volatile
  2931                           
  2932                           ; BSR set to: 15
  2933                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2934  00135C  0100               	movlb	0	; () banked
  2935  00135E  EE20 F002          	lfsr	2,2
  2936  001362  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2937  001364  26D9               	addwf	fsr2l,f,c
  2938  001366  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2939  001368  22DA               	addwfc	fsr2h,f,c
  2940  00136A  50DF               	movf	indf2,w,c
  2941  00136C  010F               	movlb	15	; () banked
  2942  00136E  6F28               	movwf	40,b	;volatile
  2943                           
  2944                           ; BSR set to: 15
  2945                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2946  001370  0100               	movlb	0	; () banked
  2947  001372  EE20 F003          	lfsr	2,3
  2948  001376  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2949  001378  26D9               	addwf	fsr2l,f,c
  2950  00137A  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2951  00137C  22DA               	addwfc	fsr2h,f,c
  2952  00137E  50DF               	movf	indf2,w,c
  2953  001380  010F               	movlb	15	; () banked
  2954  001382  6F29               	movwf	41,b	;volatile
  2955                           
  2956                           ; BSR set to: 15
  2957                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2958  001384  0100               	movlb	0	; () banked
  2959  001386  EE20 F004          	lfsr	2,4
  2960  00138A  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2961  00138C  26D9               	addwf	fsr2l,f,c
  2962  00138E  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2963  001390  22DA               	addwfc	fsr2h,f,c
  2964  001392  50DF               	movf	indf2,w,c
  2965  001394  010F               	movlb	15	; () banked
  2966  001396  6F2A               	movwf	42,b	;volatile
  2967                           
  2968                           ; BSR set to: 15
  2969                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2970  001398  0100               	movlb	0	; () banked
  2971  00139A  EE20 F005          	lfsr	2,5
  2972  00139E  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2973  0013A0  26D9               	addwf	fsr2l,f,c
  2974  0013A2  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2975  0013A4  22DA               	addwfc	fsr2h,f,c
  2976  0013A6  50DF               	movf	indf2,w,c
  2977  0013A8  010F               	movlb	15	; () banked
  2978  0013AA  6F2B               	movwf	43,b	;volatile
  2979                           
  2980                           ; BSR set to: 15
  2981                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2982  0013AC  0100               	movlb	0	; () banked
  2983  0013AE  EE20 F006          	lfsr	2,6
  2984  0013B2  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2985  0013B4  26D9               	addwf	fsr2l,f,c
  2986  0013B6  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2987  0013B8  22DA               	addwfc	fsr2h,f,c
  2988  0013BA  50DF               	movf	indf2,w,c
  2989  0013BC  010F               	movlb	15	; () banked
  2990  0013BE  6F2C               	movwf	44,b	;volatile
  2991                           
  2992                           ; BSR set to: 15
  2993                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2994  0013C0  0100               	movlb	0	; () banked
  2995  0013C2  EE20 F007          	lfsr	2,7
  2996  0013C6  51CF               	movf	CANsendMessage@data& (0+255),w,b
  2997  0013C8  26D9               	addwf	fsr2l,f,c
  2998  0013CA  51D0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2999  0013CC  22DA               	addwfc	fsr2h,f,c
  3000  0013CE  50DF               	movf	indf2,w,c
  3001  0013D0  010F               	movlb	15	; () banked
  3002  0013D2  6F2D               	movwf	45,b	;volatile
  3003                           
  3004                           ; BSR set to: 15
  3005                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3006  0013D4  010F               	movlb	15	; () banked
  3007  0013D6  8720               	bsf	32,3,b	;volatile
  3008                           
  3009                           ; BSR set to: 15
  3010                           ;inc\CANlib.h: 520: return;
  3011  0013D8  0012               	return	
  3012  0013DA                     __end_of_CANsendMessage:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           postinc0	equ	0xFEE
  3021                           wreg	equ	0xFE8
  3022                           postdec1	equ	0xFE5
  3023                           fsr1l	equ	0xFE1
  3024                           indf2	equ	0xFDF
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _CANisTxReady *****************
  3030 ;; Defined at:
  3031 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      unsigned char 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3045 ;;      Params:         0       0       0       0
  3046 ;;      Locals:         0       1       0       0
  3047 ;;      Temps:          0       0       0       0
  3048 ;;      Totals:         0       1       0       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    4
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_remote_frame_handler
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text3
  3060  002A46                     __ptext3:
  3061                           	opt stack 0
  3062  002A46                     _CANisTxReady:
  3063                           	opt stack 25
  3064                           
  3065                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3066                           
  3067                           ; BSR set to: 15
  3068                           ;incstack = 0
  3069  002A46  0E01               	movlw	1
  3070  002A48  0100               	movlb	0	; () banked
  3071  002A4A  6FCB               	movwf	_CANisTxReady$3278& (0+255),b
  3072                           
  3073                           ; BSR set to: 0
  3074  002A4C  010F               	movlb	15	; () banked
  3075  002A4E  A740               	btfss	64,3,b	;volatile
  3076  002A50  D009               	goto	l574
  3077                           
  3078                           ; BSR set to: 15
  3079  002A52  010F               	movlb	15	; () banked
  3080  002A54  A730               	btfss	48,3,b	;volatile
  3081  002A56  D006               	goto	l574
  3082                           
  3083                           ; BSR set to: 15
  3084  002A58  010F               	movlb	15	; () banked
  3085  002A5A  A720               	btfss	32,3,b	;volatile
  3086  002A5C  D003               	goto	l574
  3087                           
  3088                           ; BSR set to: 15
  3089  002A5E  0E00               	movlw	0
  3090  002A60  0100               	movlb	0	; () banked
  3091  002A62  6FCB               	movwf	_CANisTxReady$3278& (0+255),b
  3092  002A64                     l574:
  3093  002A64  0100               	movlb	0	; () banked
  3094  002A66  51CB               	movf	_CANisTxReady$3278& (0+255),w,b
  3095  002A68  0012               	return	
  3096  002A6A                     __end_of_CANisTxReady:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           prodh	equ	0xFF4
  3103                           prodl	equ	0xFF3
  3104                           postinc0	equ	0xFEE
  3105                           wreg	equ	0xFE8
  3106                           postdec1	equ	0xFE5
  3107                           fsr1l	equ	0xFE1
  3108                           indf2	equ	0xFDF
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _delay_ms *****************
  3114 ;; Defined at:
  3115 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  value_ms        2   32[BANK0 ] unsigned int 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;		None               void
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3129 ;;      Params:         0       2       0       0
  3130 ;;      Locals:         0       0       0       0
  3131 ;;      Temps:          0       0       0       0
  3132 ;;      Totals:         0       2       0       0
  3133 ;;Total ram usage:        2 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    5
  3136 ;; This function calls:
  3137 ;;		___wmul
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;;		_delay_s
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text4
  3145  0029B0                     __ptext4:
  3146                           	opt stack 0
  3147  0029B0                     _delay_ms:
  3148                           	opt stack 25
  3149                           
  3150                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;incstack = 0
  3154  0029B0  C0DD  F0CB         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3155  0029B4  0100               	movlb	0	; () banked
  3156  0029B6  6BCC               	clrf	(___wmul@multiplier+1)& (0+255),b
  3157  0029B8  C0D1  F0CD         	movff	delay_ms@value_ms,___wmul@multiplicand
  3158  0029BC  C0D2  F0CE         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3159  0029C0  ECF5  F014         	call	___wmul	;wreg free
  3160  0029C4  C0CB  F078         	movff	?___wmul,_clock_counter_reference	;volatile
  3161  0029C8  C0CC  F079         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3162                           
  3163                           ;src\delay.c: 75: while (clock_counter_reference) {
  3164  0029CC  D007               	goto	l587
  3165  0029CE                     l3696:
  3166                           
  3167                           ;src\delay.c: 85: _delay(240);
  3168  0029CE  0E50               	movlw	80
  3169  0029D0                     u6297:
  3170  0029D0  2EE8               	decfsz	wreg,f,c
  3171  0029D2  D7FE               	goto	u6297
  3172                           
  3173                           ;src\delay.c: 88: clock_counter_reference--;
  3174  0029D4  0100               	movlb	0	; () banked
  3175  0029D6  0778               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3176  0029D8  A0D8               	btfss	status,0,c
  3177  0029DA  0779               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3178  0029DC                     l587:
  3179  0029DC  0100               	movlb	0	; () banked
  3180  0029DE  5178               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3181  0029E0  0100               	movlb	0	; () banked
  3182  0029E2  1179               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3183  0029E4  B4D8               	btfsc	status,2,c
  3184  0029E6  0012               	return	
  3185  0029E8  D7F2               	goto	l3696
  3186  0029EA                     __end_of_delay_ms:
  3187                           	opt stack 0
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           prodh	equ	0xFF4
  3193                           prodl	equ	0xFF3
  3194                           postinc0	equ	0xFEE
  3195                           wreg	equ	0xFE8
  3196                           postdec1	equ	0xFE5
  3197                           fsr1l	equ	0xFE1
  3198                           indf2	equ	0xFDF
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function ___wmul *****************
  3204 ;; Defined at:
  3205 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  multiplier      2   26[BANK0 ] unsigned int 
  3208 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  product         2   30[BANK0 ] unsigned int 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  2   26[BANK0 ] unsigned int 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, prodl, prodh
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3220 ;;      Params:         0       4       0       0
  3221 ;;      Locals:         0       2       0       0
  3222 ;;      Temps:          0       0       0       0
  3223 ;;      Totals:         0       6       0       0
  3224 ;;Total ram usage:        6 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    4
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_delay_ms
  3231 ;;		_main
  3232 ;;		_remote_frame_handler
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text5
  3237  0029EA                     __ptext5:
  3238                           	opt stack 0
  3239  0029EA                     ___wmul:
  3240                           	opt stack 25
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;incstack = 0
  3244  0029EA  0100               	movlb	0	; () banked
  3245  0029EC  51CB               	movf	___wmul@multiplier& (0+255),w,b
  3246  0029EE  0100               	movlb	0	; () banked
  3247  0029F0  03CD               	mulwf	___wmul@multiplicand& (0+255),b
  3248  0029F2  CFF3 F0CF          	movff	prodl,___wmul@product
  3249  0029F6  CFF4 F0D0          	movff	prodh,___wmul@product+1
  3250  0029FA  0100               	movlb	0	; () banked
  3251  0029FC  51CB               	movf	___wmul@multiplier& (0+255),w,b
  3252  0029FE  0100               	movlb	0	; () banked
  3253  002A00  03CE               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3254  002A02  50F3               	movf	prodl,w,c
  3255  002A04  0100               	movlb	0	; () banked
  3256  002A06  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
  3257  002A08  0100               	movlb	0	; () banked
  3258  002A0A  51CC               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3259  002A0C  0100               	movlb	0	; () banked
  3260  002A0E  03CD               	mulwf	___wmul@multiplicand& (0+255),b
  3261  002A10  50F3               	movf	prodl,w,c
  3262  002A12  0100               	movlb	0	; () banked
  3263  002A14  27D0               	addwf	(___wmul@product+1)& (0+255),f,b
  3264                           
  3265                           ; BSR set to: 0
  3266  002A16  C0CF  F0CB         	movff	___wmul@product,?___wmul
  3267  002A1A  C0D0  F0CC         	movff	___wmul@product+1,?___wmul+1
  3268  002A1E  0012               	return	
  3269  002A20                     __end_of___wmul:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           postdec1	equ	0xFE5
  3280                           fsr1l	equ	0xFE1
  3281                           indf2	equ	0xFDF
  3282                           fsr2h	equ	0xFDA
  3283                           fsr2l	equ	0xFD9
  3284                           status	equ	0xFD8
  3285                           
  3286 ;; *************** function _board_initialization *****************
  3287 ;; Defined at:
  3288 ;;		line 396 in file "ABS_Code.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;		None
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;		None
  3293 ;; Return value:  Size  Location     Type
  3294 ;;		None               void
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3302 ;;      Params:         0       0       0       0
  3303 ;;      Locals:         0       0       0       0
  3304 ;;      Temps:          0       0       0       0
  3305 ;;      Totals:         0       0       0       0
  3306 ;;Total ram usage:        0 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    6
  3309 ;; This function calls:
  3310 ;;		_CANInitialize
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text6
  3317  00274A                     __ptext6:
  3318                           	opt stack 0
  3319  00274A                     _board_initialization:
  3320                           	opt stack 24
  3321                           
  3322                           ;ABS_Code.c: 398: LATA = 0x00;
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;incstack = 0
  3326  00274A  0E00               	movlw	0
  3327  00274C  6E89               	movwf	3977,c	;volatile
  3328                           
  3329                           ;ABS_Code.c: 399: TRISA = 0b11111101;
  3330  00274E  0EFD               	movlw	253
  3331  002750  6E92               	movwf	3986,c	;volatile
  3332                           
  3333                           ;ABS_Code.c: 400: LATB = 0x00;
  3334  002752  0E00               	movlw	0
  3335  002754  6E8A               	movwf	3978,c	;volatile
  3336                           
  3337                           ;ABS_Code.c: 401: TRISB = 0b11111111;
  3338  002756  6893               	setf	3987,c	;volatile
  3339                           
  3340                           ;ABS_Code.c: 402: LATC = 0x00;
  3341  002758  0E00               	movlw	0
  3342  00275A  6E8B               	movwf	3979,c	;volatile
  3343                           
  3344                           ;ABS_Code.c: 403: TRISC = 0b11111100;
  3345  00275C  0EFC               	movlw	252
  3346  00275E  6E94               	movwf	3988,c	;volatile
  3347                           
  3348                           ;ABS_Code.c: 404: LATD = 0x00;
  3349  002760  0E00               	movlw	0
  3350  002762  6E8C               	movwf	3980,c	;volatile
  3351                           
  3352                           ;ABS_Code.c: 405: TRISD = 0xFF;
  3353  002764  6895               	setf	3989,c	;volatile
  3354                           
  3355                           ;ABS_Code.c: 406: LATE = 0x00;
  3356  002766  0E00               	movlw	0
  3357  002768  6E8D               	movwf	3981,c	;volatile
  3358                           
  3359                           ;ABS_Code.c: 407: TRISE = 0xFF;
  3360  00276A  6896               	setf	3990,c	;volatile
  3361                           
  3362                           ;ABS_Code.c: 409: ADCON1 = 0b11111110;
  3363  00276C  0EFE               	movlw	254
  3364  00276E  6EC1               	movwf	4033,c	;volatile
  3365                           
  3366                           ;ABS_Code.c: 412: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3367  002770  0E06               	movlw	6
  3368  002772  0101               	movlb	1	; () banked
  3369  002774  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3370  002776  0E05               	movlw	5
  3371  002778  0101               	movlb	1	; () banked
  3372  00277A  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3373  00277C  0E01               	movlw	1
  3374  00277E  0101               	movlb	1	; () banked
  3375  002780  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3376  002782  0E03               	movlw	3
  3377  002784  0101               	movlb	1	; () banked
  3378  002786  6F03               	movwf	CANInitialize@BRP& (0+255),b
  3379  002788  0E9D               	movlw	157
  3380  00278A  0101               	movlb	1	; () banked
  3381  00278C  6F04               	movwf	CANInitialize@flags& (0+255),b
  3382  00278E  0E04               	movlw	4
  3383  002790  ECD6  F011         	call	_CANInitialize
  3384                           
  3385                           ;ABS_Code.c: 415: PIR3bits.RXB1IF = 0;
  3386  002794  92A4               	bcf	4004,1,c	;volatile
  3387                           
  3388                           ;ABS_Code.c: 416: PIR3bits.RXB0IF = 0;
  3389  002796  90A4               	bcf	4004,0,c	;volatile
  3390                           
  3391                           ;ABS_Code.c: 417: INTCONbits.TMR0IF = 0;
  3392  002798  94F2               	bcf	intcon,2,c	;volatile
  3393                           
  3394                           ;ABS_Code.c: 418: PIR1bits.TMR1IF = 0;
  3395  00279A  909E               	bcf	3998,0,c	;volatile
  3396                           
  3397                           ;ABS_Code.c: 419: PIR2bits.TMR3IF = 0;
  3398  00279C  92A1               	bcf	4001,1,c	;volatile
  3399                           
  3400                           ;ABS_Code.c: 420: INTCONbits.INT0IF = 0;
  3401  00279E  92F2               	bcf	intcon,1,c	;volatile
  3402                           
  3403                           ;ABS_Code.c: 421: INTCON3bits.INT1IF = 0;
  3404  0027A0  90F0               	bcf	intcon3,0,c	;volatile
  3405                           
  3406                           ;ABS_Code.c: 425: RCONbits.IPEN = 1;
  3407  0027A2  8ED0               	bsf	4048,7,c	;volatile
  3408                           
  3409                           ;ABS_Code.c: 426: IPR3bits.RXB1IP = 0;
  3410  0027A4  92A5               	bcf	4005,1,c	;volatile
  3411                           
  3412                           ;ABS_Code.c: 427: IPR3bits.RXB0IP = 0;
  3413  0027A6  90A5               	bcf	4005,0,c	;volatile
  3414                           
  3415                           ;ABS_Code.c: 428: INTCON2bits.TMR0IP = 1;
  3416  0027A8  84F1               	bsf	intcon2,2,c	;volatile
  3417                           
  3418                           ;ABS_Code.c: 429: INTCON3bits.INT1IP = 1;
  3419  0027AA  8CF0               	bsf	intcon3,6,c	;volatile
  3420                           
  3421                           ;ABS_Code.c: 430: IPR1bits.TMR1IP = 0;
  3422  0027AC  909F               	bcf	3999,0,c	;volatile
  3423                           
  3424                           ;ABS_Code.c: 431: IPR2bits.TMR3IP = 0;
  3425  0027AE  92A2               	bcf	4002,1,c	;volatile
  3426                           
  3427                           ;ABS_Code.c: 434: T0CON = 0x80;
  3428  0027B0  0E80               	movlw	128
  3429  0027B2  6ED5               	movwf	4053,c	;volatile
  3430                           
  3431                           ;ABS_Code.c: 441: TMR0H = 0xFF;
  3432  0027B4  68D7               	setf	4055,c	;volatile
  3433                           
  3434                           ;ABS_Code.c: 442: TMR0L = 0xFE;
  3435  0027B6  0EFE               	movlw	254
  3436  0027B8  6ED6               	movwf	4054,c	;volatile
  3437                           
  3438                           ;ABS_Code.c: 443: PORTCbits.RC0 = 0;
  3439  0027BA  9082               	bcf	3970,0,c	;volatile
  3440                           
  3441                           ;ABS_Code.c: 444: brake_value_degree = 90;
  3442  0027BC  0E5A               	movlw	90
  3443  0027BE  6E3C               	movwf	_brake_value_degree,c
  3444                           
  3445                           ;ABS_Code.c: 445: T1CON = 00110000;
  3446  0027C0  0E00               	movlw	0
  3447  0027C2  6ECD               	movwf	4045,c	;volatile
  3448                           
  3449                           ;ABS_Code.c: 446: T3CON = 01110000;
  3450  0027C4  0E00               	movlw	0
  3451  0027C6  6EB1               	movwf	4017,c	;volatile
  3452                           
  3453                           ;ABS_Code.c: 447: INTCON2bits.INTEDG0 = 1;
  3454  0027C8  8CF1               	bsf	intcon2,6,c	;volatile
  3455                           
  3456                           ;ABS_Code.c: 448: INTCON2bits.INTEDG1 = 1;
  3457  0027CA  8AF1               	bsf	intcon2,5,c	;volatile
  3458                           
  3459                           ;ABS_Code.c: 451: ADCON1 = 0b00001110;
  3460  0027CC  0E0E               	movlw	14
  3461  0027CE  6EC1               	movwf	4033,c	;volatile
  3462                           
  3463                           ;ABS_Code.c: 452: ADCON0bits.CHS3 = 0;
  3464  0027D0  9AC2               	bcf	4034,5,c	;volatile
  3465                           
  3466                           ;ABS_Code.c: 453: ADCON0bits.CHS2 = 0;
  3467  0027D2  98C2               	bcf	4034,4,c	;volatile
  3468                           
  3469                           ;ABS_Code.c: 454: ADCON0bits.CHS1 = 0;
  3470  0027D4  96C2               	bcf	4034,3,c	;volatile
  3471                           
  3472                           ;ABS_Code.c: 455: ADCON0bits.CHS0 = 0;
  3473  0027D6  94C2               	bcf	4034,2,c	;volatile
  3474                           
  3475                           ;ABS_Code.c: 456: ADCON2bits.ACQT2 = 1;
  3476  0027D8  8AC0               	bsf	4032,5,c	;volatile
  3477                           
  3478                           ;ABS_Code.c: 457: ADCON2bits.ACQT1 = 1;
  3479  0027DA  88C0               	bsf	4032,4,c	;volatile
  3480                           
  3481                           ;ABS_Code.c: 458: ADCON2bits.ACQT0 = 0;
  3482  0027DC  96C0               	bcf	4032,3,c	;volatile
  3483                           
  3484                           ;ABS_Code.c: 459: ADCON2bits.ADCS2 = 1;
  3485  0027DE  84C0               	bsf	4032,2,c	;volatile
  3486                           
  3487                           ;ABS_Code.c: 460: ADCON2bits.ADCS1 = 0;
  3488  0027E0  92C0               	bcf	4032,1,c	;volatile
  3489                           
  3490                           ;ABS_Code.c: 461: ADCON2bits.ADCS0 = 1;
  3491  0027E2  80C0               	bsf	4032,0,c	;volatile
  3492                           
  3493                           ;ABS_Code.c: 462: ADCON2bits.ADFM = 0;
  3494  0027E4  9EC0               	bcf	4032,7,c	;volatile
  3495                           
  3496                           ;ABS_Code.c: 463: ADCON0bits.ADON = 1;
  3497  0027E6  80C2               	bsf	4034,0,c	;volatile
  3498                           
  3499                           ;ABS_Code.c: 466: PIE3bits.RXB1IE = 1;
  3500  0027E8  82A3               	bsf	4003,1,c	;volatile
  3501                           
  3502                           ;ABS_Code.c: 467: PIE3bits.RXB0IE = 1;
  3503  0027EA  80A3               	bsf	4003,0,c	;volatile
  3504                           
  3505                           ;ABS_Code.c: 468: INTCONbits.TMR0IE = 1;
  3506  0027EC  8AF2               	bsf	intcon,5,c	;volatile
  3507                           
  3508                           ;ABS_Code.c: 469: PIE1bits.TMR1IE = 1;
  3509  0027EE  809D               	bsf	3997,0,c	;volatile
  3510                           
  3511                           ;ABS_Code.c: 470: PIE2bits.TMR3IE = 1;
  3512  0027F0  82A0               	bsf	4000,1,c	;volatile
  3513                           
  3514                           ;ABS_Code.c: 471: INTCONbits.INT0IE = 1;
  3515  0027F2  88F2               	bsf	intcon,4,c	;volatile
  3516                           
  3517                           ;ABS_Code.c: 472: INTCON3bits.INT1IE = 1;
  3518  0027F4  86F0               	bsf	intcon3,3,c	;volatile
  3519                           
  3520                           ;ABS_Code.c: 473: INTCONbits.GIEH = 1;
  3521  0027F6  8EF2               	bsf	intcon,7,c	;volatile
  3522                           
  3523                           ;ABS_Code.c: 474: INTCONbits.GIEL = 1;
  3524  0027F8  8CF2               	bsf	intcon,6,c	;volatile
  3525                           
  3526                           ;ABS_Code.c: 477: T1CONbits.TMR1ON = 1;
  3527  0027FA  80CD               	bsf	4045,0,c	;volatile
  3528                           
  3529                           ;ABS_Code.c: 478: T3CONbits.TMR3ON = 1;
  3530  0027FC  80B1               	bsf	4017,0,c	;volatile
  3531                           
  3532                           ;ABS_Code.c: 479: T0CONbits.TMR0ON = 1;
  3533  0027FE  8ED5               	bsf	4053,7,c	;volatile
  3534  002800  0012               	return		;funcret
  3535  002802                     __end_of_board_initialization:
  3536                           	opt stack 0
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           intcon2	equ	0xFF1
  3545                           intcon3	equ	0xFF0
  3546                           postinc0	equ	0xFEE
  3547                           wreg	equ	0xFE8
  3548                           postdec1	equ	0xFE5
  3549                           fsr1l	equ	0xFE1
  3550                           indf2	equ	0xFDF
  3551                           fsr2h	equ	0xFDA
  3552                           fsr2l	equ	0xFD9
  3553                           status	equ	0xFD8
  3554                           
  3555 ;; *************** function _CANInitialize *****************
  3556 ;; Defined at:
  3557 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  propSeg         1    wreg     unsigned char 
  3560 ;;  phaseSeg1       1    0[BANK1 ] unsigned char 
  3561 ;;  phaseSeg2       1    1[BANK1 ] unsigned char 
  3562 ;;  SJW             1    2[BANK1 ] unsigned char 
  3563 ;;  BRP             1    3[BANK1 ] unsigned char 
  3564 ;;  flags           1    4[BANK1 ] enum E16844
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  propSeg         1    5[BANK1 ] unsigned char 
  3567 ;;  FilterConfig    1    7[BANK1 ] unsigned char 
  3568 ;;  FilterConfig    1    6[BANK1 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;		None               void
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3578 ;;      Params:         0       0       5       0
  3579 ;;      Locals:         0       0       3       0
  3580 ;;      Temps:          0       4       0       0
  3581 ;;      Totals:         0       4       8       0
  3582 ;;Total ram usage:       12 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    5
  3585 ;; This function calls:
  3586 ;;		_CANOperationMode
  3587 ;;		_CANSetFilter
  3588 ;;		_CANSetMask
  3589 ;; This function is called by:
  3590 ;;		_board_initialization
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text7
  3595  0023AC                     __ptext7:
  3596                           	opt stack 0
  3597  0023AC                     _CANInitialize:
  3598                           	opt stack 24
  3599                           
  3600                           ;incstack = 0
  3601                           ;CANInitialize@propSeg stored from wreg
  3602  0023AC  0101               	movlb	1	; () banked
  3603  0023AE  6F05               	movwf	CANInitialize@propSeg& (0+255),b
  3604                           
  3605                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3606                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3607                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3608  0023B0  0E80               	movlw	128
  3609  0023B2  EC35  F015         	call	_CANOperationMode
  3610                           
  3611                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3612  0023B6  0E00               	movlw	0
  3613  0023B8  6E70               	movwf	3952,c	;volatile
  3614                           
  3615                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3616  0023BA  0E00               	movlw	0
  3617  0023BC  6E71               	movwf	3953,c	;volatile
  3618                           
  3619                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3620  0023BE  0E00               	movlw	0
  3621  0023C0  6E72               	movwf	3954,c	;volatile
  3622                           
  3623                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3624  0023C2  0101               	movlb	1	; () banked
  3625  0023C4  4102               	rrncf	CANInitialize@SJW& (0+255),w,b
  3626  0023C6  42E8               	rrncf	wreg,f,c
  3627  0023C8  0BC0               	andlw	192
  3628  0023CA  0101               	movlb	1	; () banked
  3629  0023CC  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3630                           
  3631                           ; BSR set to: 1
  3632                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3633  0023CE  0101               	movlb	1	; () banked
  3634  0023D0  5102               	movf	CANInitialize@SJW& (0+255),w,b
  3635  0023D2  1270               	iorwf	3952,f,c	;volatile
  3636                           
  3637                           ; BSR set to: 1
  3638                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3639  0023D4  0101               	movlb	1	; () banked
  3640  0023D6  5103               	movf	CANInitialize@BRP& (0+255),w,b
  3641  0023D8  1270               	iorwf	3952,f,c	;volatile
  3642                           
  3643                           ; BSR set to: 1
  3644                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3645  0023DA  0101               	movlb	1	; () banked
  3646  0023DC  5105               	movf	CANInitialize@propSeg& (0+255),w,b
  3647  0023DE  1271               	iorwf	3953,f,c	;volatile
  3648                           
  3649                           ; BSR set to: 1
  3650                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3651  0023E0  0101               	movlb	1	; () banked
  3652  0023E2  3900               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3653  0023E4  42E8               	rrncf	wreg,f,c
  3654  0023E6  0BF8               	andlw	248
  3655  0023E8  0101               	movlb	1	; () banked
  3656  0023EA  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3660  0023EC  0101               	movlb	1	; () banked
  3661  0023EE  5100               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3662  0023F0  1271               	iorwf	3953,f,c	;volatile
  3663                           
  3664                           ; BSR set to: 1
  3665                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3666  0023F2  0101               	movlb	1	; () banked
  3667  0023F4  A504               	btfss	CANInitialize@flags& (0+255),2,b
  3668                           
  3669                           ; BSR set to: 1
  3670                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3671  0023F6  8C71               	bsf	3953,6,c	;volatile
  3672                           
  3673                           ; BSR set to: 1
  3674                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3675  0023F8  0101               	movlb	1	; () banked
  3676  0023FA  B104               	btfsc	CANInitialize@flags& (0+255),0,b
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3680  0023FC  8E71               	bsf	3953,7,c	;volatile
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3684                           
  3685                           ; BSR set to: 1
  3686  0023FE  0101               	movlb	1	; () banked
  3687  002400  5101               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3688  002402  1272               	iorwf	3954,f,c	;volatile
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3692  002404  0101               	movlb	1	; () banked
  3693  002406  B304               	btfsc	CANInitialize@flags& (0+255),1,b
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3697  002408  8C72               	bsf	3954,6,c	;volatile
  3698                           
  3699                           ; BSR set to: 1
  3700                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3701                           
  3702                           ; BSR set to: 1
  3703  00240A  0101               	movlb	1	; () banked
  3704  00240C  5104               	movf	CANInitialize@flags& (0+255),w,b
  3705  00240E  0B60               	andlw	96
  3706  002410  6E60               	movwf	3936,c	;volatile
  3707                           
  3708                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3709  002412  0101               	movlb	1	; () banked
  3710  002414  5104               	movf	CANInitialize@flags& (0+255),w,b
  3711  002416  0B10               	andlw	16
  3712  002418  0AFF               	xorlw	255
  3713  00241A  B4D8               	btfsc	status,2,c
  3714                           
  3715                           ; BSR set to: 1
  3716                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3717  00241C  8460               	bsf	3936,2,c	;volatile
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3721  00241E  CF60 FF50          	movff	3936,3920	;volatile
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3725  002422  0E00               	movlw	0
  3726  002424  0100               	movlb	0	; () banked
  3727  002426  6FCB               	movwf	CANSetMask@mask& (0+255),b
  3728  002428  0E00               	movlw	0
  3729  00242A  6FCC               	movwf	(CANSetMask@mask+1)& (0+255),b
  3730  00242C  0E00               	movlw	0
  3731  00242E  6FCD               	movwf	(CANSetMask@mask+2)& (0+255),b
  3732  002430  0E00               	movlw	0
  3733  002432  6FCE               	movwf	(CANSetMask@mask+3)& (0+255),b
  3734  002434  0EF7               	movlw	247
  3735  002436  0100               	movlb	0	; () banked
  3736  002438  6FCF               	movwf	CANSetMask@type& (0+255),b
  3737  00243A  0E01               	movlw	1
  3738  00243C  EC73  F00C         	call	_CANSetMask
  3739                           
  3740                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3741  002440  0E00               	movlw	0
  3742  002442  0100               	movlb	0	; () banked
  3743  002444  6FCB               	movwf	CANSetMask@mask& (0+255),b
  3744  002446  0E00               	movlw	0
  3745  002448  6FCC               	movwf	(CANSetMask@mask+1)& (0+255),b
  3746  00244A  0E00               	movlw	0
  3747  00244C  6FCD               	movwf	(CANSetMask@mask+2)& (0+255),b
  3748  00244E  0E00               	movlw	0
  3749  002450  6FCE               	movwf	(CANSetMask@mask+3)& (0+255),b
  3750  002452  0EF7               	movlw	247
  3751  002454  0100               	movlb	0	; () banked
  3752  002456  6FCF               	movwf	CANSetMask@type& (0+255),b
  3753  002458  0E02               	movlw	2
  3754  00245A  EC73  F00C         	call	_CANSetMask
  3755                           
  3756                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3757  00245E  D00F               	goto	l4708
  3758  002460                     l4702:
  3759                           
  3760                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3761  002460  0EF7               	movlw	247
  3762  002462  0101               	movlb	1	; () banked
  3763  002464  6F06               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3764  002466  D007               	goto	l4704
  3765  002468                     l376:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3769  002468  0101               	movlb	1	; () banked
  3770  00246A  6906               	setf	CANInitialize@FilterConfig1& (0+255),b
  3771                           
  3772                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3773  00246C  0101               	movlb	1	; () banked
  3774  00246E  6907               	setf	CANInitialize@FilterConfig2& (0+255),b
  3775                           
  3776                           ;inc\CANlib.h: 273: break;
  3777  002470  D028               	goto	l4710
  3778  002472                     l377:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3782  002472  0101               	movlb	1	; () banked
  3783  002474  6906               	setf	CANInitialize@FilterConfig1& (0+255),b
  3784  002476                     l4704:
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3788  002476  0EF7               	movlw	247
  3789  002478  0101               	movlb	1	; () banked
  3790  00247A  6F07               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;inc\CANlib.h: 278: }
  3794                           
  3795                           ;inc\CANlib.h: 277: break;
  3796  00247C  D022               	goto	l4710
  3797  00247E                     l4708:
  3798  00247E  0E9F               	movlw	159
  3799  002480  0100               	movlb	0	; () banked
  3800  002482  6FD9               	movwf	??_CANInitialize& (0+255),b
  3801  002484  0EFF               	movlw	255
  3802  002486  0100               	movlb	0	; () banked
  3803  002488  6FDA               	movwf	(??_CANInitialize+1)& (0+255),b
  3804  00248A  0101               	movlb	1	; () banked
  3805  00248C  5104               	movf	CANInitialize@flags& (0+255),w,b
  3806  00248E  0B60               	andlw	96
  3807  002490  0100               	movlb	0	; () banked
  3808  002492  6FDB               	movwf	(??_CANInitialize+2)& (0+255),b
  3809  002494  6BDC               	clrf	(??_CANInitialize+3)& (0+255),b
  3810  002496  0100               	movlb	0	; () banked
  3811  002498  51D9               	movf	??_CANInitialize& (0+255),w,b
  3812  00249A  0100               	movlb	0	; () banked
  3813  00249C  13DB               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3814  00249E  0100               	movlb	0	; () banked
  3815  0024A0  51DA               	movf	(??_CANInitialize+1)& (0+255),w,b
  3816  0024A2  0100               	movlb	0	; () banked
  3817  0024A4  13DC               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3818                           
  3819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3820                           ; Switch size 1, requested type "space"
  3821                           ; Number of cases is 1, Range of values is 0 to 0
  3822                           ; switch strategies available:
  3823                           ; Name         Instructions Cycles
  3824                           ; simple_byte            4     3 (average)
  3825                           ;	Chosen strategy is simple_byte
  3826  0024A6  0100               	movlb	0	; () banked
  3827  0024A8  51DC               	movf	(??_CANInitialize+3)& (0+255),w,b
  3828  0024AA  0A00               	xorlw	0	; case 0
  3829  0024AC  A4D8               	btfss	status,2,c
  3830  0024AE  D7E1               	goto	l377
  3831                           
  3832                           ; BSR set to: 0
  3833                           ; Switch size 1, requested type "space"
  3834                           ; Number of cases is 2, Range of values is 191 to 223
  3835                           ; switch strategies available:
  3836                           ; Name         Instructions Cycles
  3837                           ; simple_byte            7     4 (average)
  3838                           ;	Chosen strategy is simple_byte
  3839  0024B0  0100               	movlb	0	; () banked
  3840  0024B2  51DB               	movf	(??_CANInitialize+2)& (0+255),w,b
  3841  0024B4  0ABF               	xorlw	191	; case 191
  3842  0024B6  B4D8               	btfsc	status,2,c
  3843  0024B8  D7D7               	goto	l376
  3844  0024BA  0A60               	xorlw	96	; case 223
  3845  0024BC  B4D8               	btfsc	status,2,c
  3846  0024BE  D7D0               	goto	l4702
  3847  0024C0  D7D8               	goto	l377
  3848  0024C2                     l4710:
  3849                           
  3850                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3851  0024C2  0E00               	movlw	0
  3852  0024C4  0100               	movlb	0	; () banked
  3853  0024C6  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3854  0024C8  0E00               	movlw	0
  3855  0024CA  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3856  0024CC  0E00               	movlw	0
  3857  0024CE  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3858  0024D0  0E00               	movlw	0
  3859  0024D2  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3860  0024D4  C106  F0CF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3861  0024D8  0E00               	movlw	0
  3862  0024DA  ECA4  F000         	call	_CANSetFilter
  3863                           
  3864                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3865  0024DE  0E00               	movlw	0
  3866  0024E0  0100               	movlb	0	; () banked
  3867  0024E2  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3868  0024E4  0E00               	movlw	0
  3869  0024E6  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3870  0024E8  0E00               	movlw	0
  3871  0024EA  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3872  0024EC  0E00               	movlw	0
  3873  0024EE  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3874  0024F0  C106  F0CF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3875  0024F4  0E01               	movlw	1
  3876  0024F6  ECA4  F000         	call	_CANSetFilter
  3877                           
  3878                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3879  0024FA  0E00               	movlw	0
  3880  0024FC  0100               	movlb	0	; () banked
  3881  0024FE  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3882  002500  0E00               	movlw	0
  3883  002502  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3884  002504  0E00               	movlw	0
  3885  002506  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3886  002508  0E00               	movlw	0
  3887  00250A  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3888  00250C  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3889  002510  0E02               	movlw	2
  3890  002512  ECA4  F000         	call	_CANSetFilter
  3891                           
  3892                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3893  002516  0E00               	movlw	0
  3894  002518  0100               	movlb	0	; () banked
  3895  00251A  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3896  00251C  0E00               	movlw	0
  3897  00251E  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3898  002520  0E00               	movlw	0
  3899  002522  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3900  002524  0E00               	movlw	0
  3901  002526  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3902  002528  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3903  00252C  0E03               	movlw	3
  3904  00252E  ECA4  F000         	call	_CANSetFilter
  3905                           
  3906                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3907  002532  0E00               	movlw	0
  3908  002534  0100               	movlb	0	; () banked
  3909  002536  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3910  002538  0E00               	movlw	0
  3911  00253A  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3912  00253C  0E00               	movlw	0
  3913  00253E  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3914  002540  0E00               	movlw	0
  3915  002542  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3916  002544  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3917  002548  0E04               	movlw	4
  3918  00254A  ECA4  F000         	call	_CANSetFilter
  3919                           
  3920                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3921  00254E  0E00               	movlw	0
  3922  002550  0100               	movlb	0	; () banked
  3923  002552  6FCB               	movwf	CANSetFilter@filter& (0+255),b
  3924  002554  0E00               	movlw	0
  3925  002556  6FCC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3926  002558  0E00               	movlw	0
  3927  00255A  6FCD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3928  00255C  0E00               	movlw	0
  3929  00255E  6FCE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3930  002560  C107  F0CF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3931  002564  0E05               	movlw	5
  3932  002566  ECA4  F000         	call	_CANSetFilter
  3933                           
  3934                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3935  00256A  0E00               	movlw	0
  3936  00256C  EC35  F015         	call	_CANOperationMode
  3937  002570  0012               	return		;funcret
  3938  002572                     __end_of_CANInitialize:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           intcon	equ	0xFF2
  3947                           intcon2	equ	0xFF1
  3948                           intcon3	equ	0xFF0
  3949                           postinc0	equ	0xFEE
  3950                           wreg	equ	0xFE8
  3951                           postdec1	equ	0xFE5
  3952                           fsr1l	equ	0xFE1
  3953                           indf2	equ	0xFDF
  3954                           fsr2h	equ	0xFDA
  3955                           fsr2l	equ	0xFD9
  3956                           status	equ	0xFD8
  3957                           
  3958 ;; *************** function _CANSetMask *****************
  3959 ;; Defined at:
  3960 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  numBuffer       1    wreg     enum E16878
  3963 ;;  mask            4   26[BANK0 ] unsigned long 
  3964 ;;  type            1   30[BANK0 ] enum E16844
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  numBuffer       1   35[BANK0 ] enum E16878
  3967 ;;  tamp            4   36[BANK0 ] unsigned long 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;		None               void
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3977 ;;      Params:         0       5       0       0
  3978 ;;      Locals:         0       5       0       0
  3979 ;;      Temps:          0       4       0       0
  3980 ;;      Totals:         0      14       0       0
  3981 ;;Total ram usage:       14 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    4
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_CANInitialize
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text8
  3992  0018E6                     __ptext8:
  3993                           	opt stack 0
  3994  0018E6                     _CANSetMask:
  3995                           	opt stack 24
  3996                           
  3997                           ;incstack = 0
  3998                           ;CANSetMask@numBuffer stored from wreg
  3999  0018E6  0100               	movlb	0	; () banked
  4000  0018E8  6FD4               	movwf	CANSetMask@numBuffer& (0+255),b
  4001                           
  4002                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4003  0018EA  0100               	movlb	0	; () banked
  4004  0018EC  05D4               	decf	CANSetMask@numBuffer& (0+255),w,b
  4005  0018EE  A4D8               	btfss	status,2,c
  4006  0018F0  D056               	goto	l4272
  4007                           
  4008                           ; BSR set to: 0
  4009  0018F2  0100               	movlb	0	; () banked
  4010  0018F4  29CF               	incf	CANSetMask@type& (0+255),w,b
  4011  0018F6  A4D8               	btfss	status,2,c
  4012  0018F8  D052               	goto	l4272
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;inc\CANlib.h: 644: {
  4016                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4017  0018FA  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4018  0018FE  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4019  001902  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4020  001906  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4021  00190A  0E04               	movlw	4
  4022  00190C  D006               	goto	u4900
  4023  00190E                     u4905:
  4024  00190E  0100               	movlb	0	; () banked
  4025  001910  90D8               	bcf	status,0,c
  4026  001912  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4027  001914  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4028  001916  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4029  001918  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4030  00191A                     u4900:
  4031  00191A  2EE8               	decfsz	wreg,f,c
  4032  00191C  D7F8               	goto	u4905
  4033  00191E  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4034  001922  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4035  001926  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4036  00192A  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4040  00192E  0100               	movlb	0	; () banked
  4041  001930  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4042  001932  0100               	movlb	0	; () banked
  4043  001934  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4044  001936  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4045  001938  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4046  00193A  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4050  00193C  C0D5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4054  001940  0E07               	movlw	7
  4055  001942  0100               	movlb	0	; () banked
  4056  001944  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4057  001946  0100               	movlb	0	; () banked
  4058  001948  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4059  00194A  0E00               	movlw	0
  4060  00194C  0100               	movlb	0	; () banked
  4061  00194E  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4062  001950  0100               	movlb	0	; () banked
  4063  001952  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4064  001954  0E00               	movlw	0
  4065  001956  0100               	movlb	0	; () banked
  4066  001958  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4067  00195A  0100               	movlb	0	; () banked
  4068  00195C  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4069  00195E  0E00               	movlw	0
  4070  001960  0100               	movlb	0	; () banked
  4071  001962  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4072  001964  0100               	movlb	0	; () banked
  4073  001966  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4077  001968  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4078  00196C  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4079  001970  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4080  001974  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4081  001978  0E05               	movlw	5
  4082  00197A                     u4915:
  4083  00197A  90D8               	bcf	status,0,c
  4084  00197C  0100               	movlb	0	; () banked
  4085  00197E  37D0               	rlcf	??_CANSetMask& (0+255),f,b
  4086  001980  37D1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4087  001982  37D2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4088  001984  37D3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4089  001986  2EE8               	decfsz	wreg,f,c
  4090  001988  D7F8               	goto	u4915
  4091  00198A  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4092  00198E  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4093  001992  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4094  001996  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4098  00199A  C0D5  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4099  00199E                     l4272:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;inc\CANlib.h: 652: }
  4103                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4104  00199E  0E02               	movlw	2
  4105  0019A0  0100               	movlb	0	; () banked
  4106  0019A2  19D4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4107  0019A4  A4D8               	btfss	status,2,c
  4108  0019A6  D056               	goto	l4288
  4109                           
  4110                           ; BSR set to: 0
  4111  0019A8  0100               	movlb	0	; () banked
  4112  0019AA  29CF               	incf	CANSetMask@type& (0+255),w,b
  4113  0019AC  A4D8               	btfss	status,2,c
  4114  0019AE  D052               	goto	l4288
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 655: {
  4118                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4119  0019B0  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4120  0019B4  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4121  0019B8  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4122  0019BC  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4123  0019C0  0E04               	movlw	4
  4124  0019C2  D006               	goto	u4940
  4125  0019C4                     u4945:
  4126  0019C4  0100               	movlb	0	; () banked
  4127  0019C6  90D8               	bcf	status,0,c
  4128  0019C8  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4129  0019CA  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4130  0019CC  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4131  0019CE  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4132  0019D0                     u4940:
  4133  0019D0  2EE8               	decfsz	wreg,f,c
  4134  0019D2  D7F8               	goto	u4945
  4135  0019D4  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4136  0019D8  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4137  0019DC  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4138  0019E0  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4142  0019E4  0100               	movlb	0	; () banked
  4143  0019E6  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4144  0019E8  0100               	movlb	0	; () banked
  4145  0019EA  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4146  0019EC  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4147  0019EE  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4148  0019F0  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4152  0019F2  C0D5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4156  0019F6  0E07               	movlw	7
  4157  0019F8  0100               	movlb	0	; () banked
  4158  0019FA  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4159  0019FC  0100               	movlb	0	; () banked
  4160  0019FE  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4161  001A00  0E00               	movlw	0
  4162  001A02  0100               	movlb	0	; () banked
  4163  001A04  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4164  001A06  0100               	movlb	0	; () banked
  4165  001A08  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4166  001A0A  0E00               	movlw	0
  4167  001A0C  0100               	movlb	0	; () banked
  4168  001A0E  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4169  001A10  0100               	movlb	0	; () banked
  4170  001A12  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4171  001A14  0E00               	movlw	0
  4172  001A16  0100               	movlb	0	; () banked
  4173  001A18  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4174  001A1A  0100               	movlb	0	; () banked
  4175  001A1C  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4179  001A1E  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4180  001A22  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4181  001A26  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4182  001A2A  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4183  001A2E  0E05               	movlw	5
  4184  001A30                     u4955:
  4185  001A30  90D8               	bcf	status,0,c
  4186  001A32  0100               	movlb	0	; () banked
  4187  001A34  37D0               	rlcf	??_CANSetMask& (0+255),f,b
  4188  001A36  37D1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4189  001A38  37D2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4190  001A3A  37D3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4191  001A3C  2EE8               	decfsz	wreg,f,c
  4192  001A3E  D7F8               	goto	u4955
  4193  001A40  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4194  001A44  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4195  001A48  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4196  001A4C  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4200  001A50  C0D5  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4201  001A54                     l4288:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 663: }
  4205                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4206  001A54  0100               	movlb	0	; () banked
  4207  001A56  05D4               	decf	CANSetMask@numBuffer& (0+255),w,b
  4208  001A58  A4D8               	btfss	status,2,c
  4209  001A5A  D087               	goto	l4320
  4210                           
  4211                           ; BSR set to: 0
  4212  001A5C  0EF7               	movlw	247
  4213  001A5E  0100               	movlb	0	; () banked
  4214  001A60  19CF               	xorwf	CANSetMask@type& (0+255),w,b
  4215  001A62  A4D8               	btfss	status,2,c
  4216  001A64  D082               	goto	l4320
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;inc\CANlib.h: 666: {
  4220                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4221  001A66  0100               	movlb	0	; () banked
  4222  001A68  51CB               	movf	CANSetMask@mask& (0+255),w,b
  4223  001A6A  0100               	movlb	0	; () banked
  4224  001A6C  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4225  001A6E  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4226  001A70  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4227  001A72  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4231  001A74  C0D5  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4235  001A78  0E00               	movlw	0
  4236  001A7A  0100               	movlb	0	; () banked
  4237  001A7C  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4238  001A7E  0100               	movlb	0	; () banked
  4239  001A80  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4240  001A82  0EFF               	movlw	255
  4241  001A84  0100               	movlb	0	; () banked
  4242  001A86  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4243  001A88  0100               	movlb	0	; () banked
  4244  001A8A  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4245  001A8C  0E00               	movlw	0
  4246  001A8E  0100               	movlb	0	; () banked
  4247  001A90  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4248  001A92  0100               	movlb	0	; () banked
  4249  001A94  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4250  001A96  0E00               	movlw	0
  4251  001A98  0100               	movlb	0	; () banked
  4252  001A9A  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4253  001A9C  0100               	movlb	0	; () banked
  4254  001A9E  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4258  001AA0  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4259  001AA4  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4260  001AA8  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4261  001AAC  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4262  001AB0  C0D1  F0D0         	movff	??_CANSetMask+1,??_CANSetMask
  4263  001AB4  C0D2  F0D1         	movff	??_CANSetMask+2,??_CANSetMask+1
  4264  001AB8  C0D3  F0D2         	movff	??_CANSetMask+3,??_CANSetMask+2
  4265  001ABC  0100               	movlb	0	; () banked
  4266  001ABE  6BD3               	clrf	(??_CANSetMask+3)& (0+255),b
  4267  001AC0  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4268  001AC4  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4269  001AC8  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4270  001ACC  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4274  001AD0  C0D5  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4278  001AD4  0100               	movlb	0	; () banked
  4279  001AD6  A1CD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4280  001AD8  D003               	goto	l450
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4284  001ADA  010F               	movlb	15	; () banked
  4285  001ADC  8119               	bsf	25,0,b	;volatile
  4286  001ADE  D002               	goto	l451
  4287  001AE0                     l450:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;inc\CANlib.h: 676: else
  4291                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4292  001AE0  010F               	movlb	15	; () banked
  4293  001AE2  9119               	bcf	25,0,b	;volatile
  4294  001AE4                     l451:
  4295                           
  4296                           ; BSR set to: 15
  4297                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4298  001AE4  0100               	movlb	0	; () banked
  4299  001AE6  A3CD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4300  001AE8  D003               	goto	l452
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4304  001AEA  010F               	movlb	15	; () banked
  4305  001AEC  8319               	bsf	25,1,b	;volatile
  4306  001AEE  D002               	goto	l453
  4307  001AF0                     l452:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;inc\CANlib.h: 681: else
  4311                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4312  001AF0  010F               	movlb	15	; () banked
  4313  001AF2  9319               	bcf	25,1,b	;volatile
  4314  001AF4                     l453:
  4315                           
  4316                           ; BSR set to: 15
  4317                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4318  001AF4  0100               	movlb	0	; () banked
  4319  001AF6  A5CD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4320  001AF8  D003               	goto	l454
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4324  001AFA  010F               	movlb	15	; () banked
  4325  001AFC  8B19               	bsf	25,5,b	;volatile
  4326  001AFE  D002               	goto	l455
  4327  001B00                     l454:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;inc\CANlib.h: 686: else
  4331                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4332  001B00  010F               	movlb	15	; () banked
  4333  001B02  9B19               	bcf	25,5,b	;volatile
  4334  001B04                     l455:
  4335                           
  4336                           ; BSR set to: 15
  4337                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4338  001B04  0100               	movlb	0	; () banked
  4339  001B06  A7CD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4340  001B08  D003               	goto	l456
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4344  001B0A  010F               	movlb	15	; () banked
  4345  001B0C  8D19               	bsf	25,6,b	;volatile
  4346  001B0E  D002               	goto	l457
  4347  001B10                     l456:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;inc\CANlib.h: 691: else
  4351                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4352  001B10  010F               	movlb	15	; () banked
  4353  001B12  9D19               	bcf	25,6,b	;volatile
  4354  001B14                     l457:
  4355                           
  4356                           ; BSR set to: 15
  4357                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4358  001B14  0100               	movlb	0	; () banked
  4359  001B16  A9CD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4360  001B18  D003               	goto	l458
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4364  001B1A  010F               	movlb	15	; () banked
  4365  001B1C  8F19               	bsf	25,7,b	;volatile
  4366  001B1E  D002               	goto	l4314
  4367  001B20                     l458:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;inc\CANlib.h: 696: else
  4371                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4372  001B20  010F               	movlb	15	; () banked
  4373  001B22  9F19               	bcf	25,7,b	;volatile
  4374  001B24                     l4314:
  4375                           
  4376                           ; BSR set to: 15
  4377                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4378  001B24  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4379  001B28  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4380  001B2C  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4381  001B30  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4382  001B34  0E16               	movlw	22
  4383  001B36  D006               	goto	u5030
  4384  001B38                     u5035:
  4385  001B38  0100               	movlb	0	; () banked
  4386  001B3A  90D8               	bcf	status,0,c
  4387  001B3C  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4388  001B3E  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4389  001B40  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4390  001B42  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4391  001B44                     u5030:
  4392  001B44  2EE8               	decfsz	wreg,f,c
  4393  001B46  D7F8               	goto	u5035
  4394  001B48  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4395  001B4C  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4396  001B50  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4397  001B54  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4401  001B58  0100               	movlb	0	; () banked
  4402  001B5A  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4403  001B5C  0100               	movlb	0	; () banked
  4404  001B5E  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4405  001B60  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4406  001B62  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4407  001B64  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4411  001B66  C0D5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4412  001B6A                     l4320:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;inc\CANlib.h: 702: }
  4416                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4417  001B6A  0E02               	movlw	2
  4418  001B6C  0100               	movlb	0	; () banked
  4419  001B6E  19D4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4420  001B70  A4D8               	btfss	status,2,c
  4421  001B72  0012               	return	
  4422                           
  4423                           ; BSR set to: 0
  4424  001B74  0EF7               	movlw	247
  4425  001B76  0100               	movlb	0	; () banked
  4426  001B78  19CF               	xorwf	CANSetMask@type& (0+255),w,b
  4427  001B7A  A4D8               	btfss	status,2,c
  4428  001B7C  0012               	return	
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;inc\CANlib.h: 705: {
  4432                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4433  001B7E  0100               	movlb	0	; () banked
  4434  001B80  51CB               	movf	CANSetMask@mask& (0+255),w,b
  4435  001B82  0100               	movlb	0	; () banked
  4436  001B84  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4437  001B86  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4438  001B88  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4439  001B8A  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4443  001B8C  C0D5  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4447  001B90  0E00               	movlw	0
  4448  001B92  0100               	movlb	0	; () banked
  4449  001B94  15CB               	andwf	CANSetMask@mask& (0+255),w,b
  4450  001B96  0100               	movlb	0	; () banked
  4451  001B98  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4452  001B9A  0EFF               	movlw	255
  4453  001B9C  0100               	movlb	0	; () banked
  4454  001B9E  15CC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4455  001BA0  0100               	movlb	0	; () banked
  4456  001BA2  6FD6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4457  001BA4  0E00               	movlw	0
  4458  001BA6  0100               	movlb	0	; () banked
  4459  001BA8  15CD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4460  001BAA  0100               	movlb	0	; () banked
  4461  001BAC  6FD7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4462  001BAE  0E00               	movlw	0
  4463  001BB0  0100               	movlb	0	; () banked
  4464  001BB2  15CE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4465  001BB4  0100               	movlb	0	; () banked
  4466  001BB6  6FD8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4470  001BB8  C0D5  F0D0         	movff	CANSetMask@tamp,??_CANSetMask
  4471  001BBC  C0D6  F0D1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4472  001BC0  C0D7  F0D2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4473  001BC4  C0D8  F0D3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4474  001BC8  C0D1  F0D0         	movff	??_CANSetMask+1,??_CANSetMask
  4475  001BCC  C0D2  F0D1         	movff	??_CANSetMask+2,??_CANSetMask+1
  4476  001BD0  C0D3  F0D2         	movff	??_CANSetMask+3,??_CANSetMask+2
  4477  001BD4  0100               	movlb	0	; () banked
  4478  001BD6  6BD3               	clrf	(??_CANSetMask+3)& (0+255),b
  4479  001BD8  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4480  001BDC  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4481  001BE0  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4482  001BE4  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4486  001BE8  C0D5  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4490  001BEC  0100               	movlb	0	; () banked
  4491  001BEE  A1CD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4492  001BF0  D003               	goto	l461
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4496  001BF2  010F               	movlb	15	; () banked
  4497  001BF4  811D               	bsf	29,0,b	;volatile
  4498  001BF6  D002               	goto	l462
  4499  001BF8                     l461:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;inc\CANlib.h: 715: else
  4503                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4504  001BF8  010F               	movlb	15	; () banked
  4505  001BFA  911D               	bcf	29,0,b	;volatile
  4506  001BFC                     l462:
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4510  001BFC  0100               	movlb	0	; () banked
  4511  001BFE  A3CD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4512  001C00  D003               	goto	l463
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4516  001C02  010F               	movlb	15	; () banked
  4517  001C04  831D               	bsf	29,1,b	;volatile
  4518  001C06  D002               	goto	l464
  4519  001C08                     l463:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;inc\CANlib.h: 720: else
  4523                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4524  001C08  010F               	movlb	15	; () banked
  4525  001C0A  931D               	bcf	29,1,b	;volatile
  4526  001C0C                     l464:
  4527                           
  4528                           ; BSR set to: 15
  4529                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4530  001C0C  0100               	movlb	0	; () banked
  4531  001C0E  A5CD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4532  001C10  D003               	goto	l465
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4536  001C12  010F               	movlb	15	; () banked
  4537  001C14  8B1D               	bsf	29,5,b	;volatile
  4538  001C16  D002               	goto	l466
  4539  001C18                     l465:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;inc\CANlib.h: 725: else
  4543                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4544  001C18  010F               	movlb	15	; () banked
  4545  001C1A  9B1D               	bcf	29,5,b	;volatile
  4546  001C1C                     l466:
  4547                           
  4548                           ; BSR set to: 15
  4549                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4550  001C1C  0100               	movlb	0	; () banked
  4551  001C1E  A7CD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4552  001C20  D003               	goto	l467
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4556  001C22  010F               	movlb	15	; () banked
  4557  001C24  8D1D               	bsf	29,6,b	;volatile
  4558  001C26  D002               	goto	l468
  4559  001C28                     l467:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;inc\CANlib.h: 730: else
  4563                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4564  001C28  010F               	movlb	15	; () banked
  4565  001C2A  9D1D               	bcf	29,6,b	;volatile
  4566  001C2C                     l468:
  4567                           
  4568                           ; BSR set to: 15
  4569                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4570  001C2C  0100               	movlb	0	; () banked
  4571  001C2E  A9CD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4572  001C30  D003               	goto	l469
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4576  001C32  010F               	movlb	15	; () banked
  4577  001C34  8F1D               	bsf	29,7,b	;volatile
  4578  001C36  D002               	goto	l4346
  4579  001C38                     l469:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;inc\CANlib.h: 735: else
  4583                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4584  001C38  010F               	movlb	15	; () banked
  4585  001C3A  9F1D               	bcf	29,7,b	;volatile
  4586  001C3C                     l4346:
  4587                           
  4588                           ; BSR set to: 15
  4589                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4590  001C3C  C0CB  F0D0         	movff	CANSetMask@mask,??_CANSetMask
  4591  001C40  C0CC  F0D1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4592  001C44  C0CD  F0D2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4593  001C48  C0CE  F0D3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4594  001C4C  0E16               	movlw	22
  4595  001C4E  D006               	goto	u5110
  4596  001C50                     u5115:
  4597  001C50  0100               	movlb	0	; () banked
  4598  001C52  90D8               	bcf	status,0,c
  4599  001C54  33D3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4600  001C56  33D2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4601  001C58  33D1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4602  001C5A  33D0               	rrcf	??_CANSetMask& (0+255),f,b
  4603  001C5C                     u5110:
  4604  001C5C  2EE8               	decfsz	wreg,f,c
  4605  001C5E  D7F8               	goto	u5115
  4606  001C60  C0D0  F0D5         	movff	??_CANSetMask,CANSetMask@tamp
  4607  001C64  C0D1  F0D6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4608  001C68  C0D2  F0D7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4609  001C6C  C0D3  F0D8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4613  001C70  0100               	movlb	0	; () banked
  4614  001C72  51D5               	movf	CANSetMask@tamp& (0+255),w,b
  4615  001C74  0100               	movlb	0	; () banked
  4616  001C76  6FD5               	movwf	CANSetMask@tamp& (0+255),b
  4617  001C78  6BD6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4618  001C7A  6BD7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4619  001C7C  6BD8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4623  001C7E  C0D5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4624  001C82  0012               	return	
  4625  001C84                     __end_of_CANSetMask:
  4626                           	opt stack 0
  4627                           tblptru	equ	0xFF8
  4628                           tblptrh	equ	0xFF7
  4629                           tblptrl	equ	0xFF6
  4630                           tablat	equ	0xFF5
  4631                           prodh	equ	0xFF4
  4632                           prodl	equ	0xFF3
  4633                           intcon	equ	0xFF2
  4634                           intcon2	equ	0xFF1
  4635                           intcon3	equ	0xFF0
  4636                           postinc0	equ	0xFEE
  4637                           wreg	equ	0xFE8
  4638                           postdec1	equ	0xFE5
  4639                           fsr1l	equ	0xFE1
  4640                           indf2	equ	0xFDF
  4641                           fsr2h	equ	0xFDA
  4642                           fsr2l	equ	0xFD9
  4643                           status	equ	0xFD8
  4644                           
  4645 ;; *************** function _CANSetFilter *****************
  4646 ;; Defined at:
  4647 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  numBuffer       1    wreg     enum E16881
  4650 ;;  filter          4   26[BANK0 ] unsigned long 
  4651 ;;  type            1   30[BANK0 ] enum E16844
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  numBuffer       1   35[BANK0 ] enum E16881
  4654 ;;  tamp            4   36[BANK0 ] unsigned long 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;		None               void
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4664 ;;      Params:         0       5       0       0
  4665 ;;      Locals:         0       5       0       0
  4666 ;;      Temps:          0       4       0       0
  4667 ;;      Totals:         0      14       0       0
  4668 ;;Total ram usage:       14 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    4
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_CANInitialize
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text9
  4679  000148                     __ptext9:
  4680                           	opt stack 0
  4681  000148                     _CANSetFilter:
  4682                           	opt stack 24
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;incstack = 0
  4686                           ;CANSetFilter@numBuffer stored from wreg
  4687  000148  0100               	movlb	0	; () banked
  4688  00014A  6FD4               	movwf	CANSetFilter@numBuffer& (0+255),b
  4689                           
  4690                           ;inc\CANlib.h: 750: unsigned long tamp;
  4691                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4692  00014C  0100               	movlb	0	; () banked
  4693  00014E  51D4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4694  000150  0100               	movlb	0	; () banked
  4695  000152  A4D8               	btfss	status,2,c
  4696  000154  D058               	goto	l4370
  4697                           
  4698                           ; BSR set to: 0
  4699  000156  0100               	movlb	0	; () banked
  4700  000158  29CF               	incf	CANSetFilter@type& (0+255),w,b
  4701  00015A  A4D8               	btfss	status,2,c
  4702  00015C  D054               	goto	l4370
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;inc\CANlib.h: 753: {
  4706                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4707  00015E  010F               	movlb	15	; () banked
  4708  000160  9701               	bcf	1,3,b	;volatile
  4709                           
  4710                           ; BSR set to: 15
  4711                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4712  000162  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  4713  000166  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4714  00016A  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4715  00016E  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4716  000172  0E04               	movlw	4
  4717  000174  D006               	goto	u5140
  4718  000176                     u5145:
  4719  000176  0100               	movlb	0	; () banked
  4720  000178  90D8               	bcf	status,0,c
  4721  00017A  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4722  00017C  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4723  00017E  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4724  000180  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  4725  000182                     u5140:
  4726  000182  2EE8               	decfsz	wreg,f,c
  4727  000184  D7F8               	goto	u5145
  4728  000186  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4729  00018A  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4730  00018E  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4731  000192  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4735  000196  0100               	movlb	0	; () banked
  4736  000198  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  4737  00019A  0100               	movlb	0	; () banked
  4738  00019C  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4739  00019E  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4740  0001A0  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4741  0001A2  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4745  0001A4  C0D5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4749  0001A8  0E07               	movlw	7
  4750  0001AA  0100               	movlb	0	; () banked
  4751  0001AC  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  4752  0001AE  0100               	movlb	0	; () banked
  4753  0001B0  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4754  0001B2  0E00               	movlw	0
  4755  0001B4  0100               	movlb	0	; () banked
  4756  0001B6  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4757  0001B8  0100               	movlb	0	; () banked
  4758  0001BA  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4759  0001BC  0E00               	movlw	0
  4760  0001BE  0100               	movlb	0	; () banked
  4761  0001C0  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4762  0001C2  0100               	movlb	0	; () banked
  4763  0001C4  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4764  0001C6  0E00               	movlw	0
  4765  0001C8  0100               	movlb	0	; () banked
  4766  0001CA  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4767  0001CC  0100               	movlb	0	; () banked
  4768  0001CE  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4772  0001D0  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4773  0001D4  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4774  0001D8  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4775  0001DC  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4776  0001E0  0E05               	movlw	5
  4777  0001E2                     u5155:
  4778  0001E2  90D8               	bcf	status,0,c
  4779  0001E4  0100               	movlb	0	; () banked
  4780  0001E6  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  4781  0001E8  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4782  0001EA  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4783  0001EC  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4784  0001EE  2EE8               	decfsz	wreg,f,c
  4785  0001F0  D7F8               	goto	u5155
  4786  0001F2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4787  0001F6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4788  0001FA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4789  0001FE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4793  000202  C0D5  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4794  000206                     l4370:
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;inc\CANlib.h: 763: }
  4798                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4799  000206  0100               	movlb	0	; () banked
  4800  000208  05D4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4801  00020A  A4D8               	btfss	status,2,c
  4802  00020C  D058               	goto	l4388
  4803                           
  4804                           ; BSR set to: 0
  4805  00020E  0100               	movlb	0	; () banked
  4806  000210  29CF               	incf	CANSetFilter@type& (0+255),w,b
  4807  000212  A4D8               	btfss	status,2,c
  4808  000214  D054               	goto	l4388
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;inc\CANlib.h: 766: {
  4812                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4813  000216  010F               	movlb	15	; () banked
  4814  000218  9705               	bcf	5,3,b	;volatile
  4815                           
  4816                           ; BSR set to: 15
  4817                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4818  00021A  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  4819  00021E  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4820  000222  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4821  000226  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4822  00022A  0E04               	movlw	4
  4823  00022C  D006               	goto	u5180
  4824  00022E                     u5185:
  4825  00022E  0100               	movlb	0	; () banked
  4826  000230  90D8               	bcf	status,0,c
  4827  000232  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4828  000234  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4829  000236  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4830  000238  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  4831  00023A                     u5180:
  4832  00023A  2EE8               	decfsz	wreg,f,c
  4833  00023C  D7F8               	goto	u5185
  4834  00023E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4835  000242  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4836  000246  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4837  00024A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4841  00024E  0100               	movlb	0	; () banked
  4842  000250  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  4843  000252  0100               	movlb	0	; () banked
  4844  000254  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4845  000256  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4846  000258  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4847  00025A  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4851  00025C  C0D5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4855  000260  0E07               	movlw	7
  4856  000262  0100               	movlb	0	; () banked
  4857  000264  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  4858  000266  0100               	movlb	0	; () banked
  4859  000268  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4860  00026A  0E00               	movlw	0
  4861  00026C  0100               	movlb	0	; () banked
  4862  00026E  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4863  000270  0100               	movlb	0	; () banked
  4864  000272  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4865  000274  0E00               	movlw	0
  4866  000276  0100               	movlb	0	; () banked
  4867  000278  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4868  00027A  0100               	movlb	0	; () banked
  4869  00027C  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4870  00027E  0E00               	movlw	0
  4871  000280  0100               	movlb	0	; () banked
  4872  000282  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4873  000284  0100               	movlb	0	; () banked
  4874  000286  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4878  000288  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4879  00028C  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4880  000290  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4881  000294  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4882  000298  0E05               	movlw	5
  4883  00029A                     u5195:
  4884  00029A  90D8               	bcf	status,0,c
  4885  00029C  0100               	movlb	0	; () banked
  4886  00029E  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  4887  0002A0  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4888  0002A2  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4889  0002A4  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4890  0002A6  2EE8               	decfsz	wreg,f,c
  4891  0002A8  D7F8               	goto	u5195
  4892  0002AA  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4893  0002AE  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4894  0002B2  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4895  0002B6  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4899  0002BA  C0D5  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4900  0002BE                     l4388:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;inc\CANlib.h: 776: }
  4904                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4905  0002BE  0E02               	movlw	2
  4906  0002C0  0100               	movlb	0	; () banked
  4907  0002C2  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4908  0002C4  A4D8               	btfss	status,2,c
  4909  0002C6  D058               	goto	l4406
  4910                           
  4911                           ; BSR set to: 0
  4912  0002C8  0100               	movlb	0	; () banked
  4913  0002CA  29CF               	incf	CANSetFilter@type& (0+255),w,b
  4914  0002CC  A4D8               	btfss	status,2,c
  4915  0002CE  D054               	goto	l4406
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 779: {
  4919                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4920  0002D0  010F               	movlb	15	; () banked
  4921  0002D2  9709               	bcf	9,3,b	;volatile
  4922                           
  4923                           ; BSR set to: 15
  4924                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4925  0002D4  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  4926  0002D8  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4927  0002DC  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4928  0002E0  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4929  0002E4  0E04               	movlw	4
  4930  0002E6  D006               	goto	u5220
  4931  0002E8                     u5225:
  4932  0002E8  0100               	movlb	0	; () banked
  4933  0002EA  90D8               	bcf	status,0,c
  4934  0002EC  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4935  0002EE  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4936  0002F0  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4937  0002F2  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  4938  0002F4                     u5220:
  4939  0002F4  2EE8               	decfsz	wreg,f,c
  4940  0002F6  D7F8               	goto	u5225
  4941  0002F8  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4942  0002FC  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4943  000300  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4944  000304  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4948  000308  0100               	movlb	0	; () banked
  4949  00030A  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  4950  00030C  0100               	movlb	0	; () banked
  4951  00030E  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4952  000310  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4953  000312  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4954  000314  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4958  000316  C0D5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4962  00031A  0E07               	movlw	7
  4963  00031C  0100               	movlb	0	; () banked
  4964  00031E  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  4965  000320  0100               	movlb	0	; () banked
  4966  000322  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  4967  000324  0E00               	movlw	0
  4968  000326  0100               	movlb	0	; () banked
  4969  000328  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4970  00032A  0100               	movlb	0	; () banked
  4971  00032C  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4972  00032E  0E00               	movlw	0
  4973  000330  0100               	movlb	0	; () banked
  4974  000332  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4975  000334  0100               	movlb	0	; () banked
  4976  000336  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4977  000338  0E00               	movlw	0
  4978  00033A  0100               	movlb	0	; () banked
  4979  00033C  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4980  00033E  0100               	movlb	0	; () banked
  4981  000340  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4985  000342  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4986  000346  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4987  00034A  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4988  00034E  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4989  000352  0E05               	movlw	5
  4990  000354                     u5235:
  4991  000354  90D8               	bcf	status,0,c
  4992  000356  0100               	movlb	0	; () banked
  4993  000358  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  4994  00035A  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4995  00035C  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4996  00035E  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4997  000360  2EE8               	decfsz	wreg,f,c
  4998  000362  D7F8               	goto	u5235
  4999  000364  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5000  000368  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5001  00036C  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5002  000370  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5006  000374  C0D5  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5007  000378                     l4406:
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;inc\CANlib.h: 789: }
  5011                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5012  000378  0E03               	movlw	3
  5013  00037A  0100               	movlb	0	; () banked
  5014  00037C  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5015  00037E  A4D8               	btfss	status,2,c
  5016  000380  D058               	goto	l4424
  5017                           
  5018                           ; BSR set to: 0
  5019  000382  0100               	movlb	0	; () banked
  5020  000384  29CF               	incf	CANSetFilter@type& (0+255),w,b
  5021  000386  A4D8               	btfss	status,2,c
  5022  000388  D054               	goto	l4424
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;inc\CANlib.h: 792: {
  5026                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5027  00038A  010F               	movlb	15	; () banked
  5028  00038C  970D               	bcf	13,3,b	;volatile
  5029                           
  5030                           ; BSR set to: 15
  5031                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5032  00038E  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5033  000392  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5034  000396  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5035  00039A  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5036  00039E  0E04               	movlw	4
  5037  0003A0  D006               	goto	u5260
  5038  0003A2                     u5265:
  5039  0003A2  0100               	movlb	0	; () banked
  5040  0003A4  90D8               	bcf	status,0,c
  5041  0003A6  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5042  0003A8  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5043  0003AA  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5044  0003AC  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5045  0003AE                     u5260:
  5046  0003AE  2EE8               	decfsz	wreg,f,c
  5047  0003B0  D7F8               	goto	u5265
  5048  0003B2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5049  0003B6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5050  0003BA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5051  0003BE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5055  0003C2  0100               	movlb	0	; () banked
  5056  0003C4  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5057  0003C6  0100               	movlb	0	; () banked
  5058  0003C8  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5059  0003CA  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5060  0003CC  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5061  0003CE  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5065  0003D0  C0D5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5069  0003D4  0E07               	movlw	7
  5070  0003D6  0100               	movlb	0	; () banked
  5071  0003D8  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5072  0003DA  0100               	movlb	0	; () banked
  5073  0003DC  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5074  0003DE  0E00               	movlw	0
  5075  0003E0  0100               	movlb	0	; () banked
  5076  0003E2  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5077  0003E4  0100               	movlb	0	; () banked
  5078  0003E6  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5079  0003E8  0E00               	movlw	0
  5080  0003EA  0100               	movlb	0	; () banked
  5081  0003EC  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5082  0003EE  0100               	movlb	0	; () banked
  5083  0003F0  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5084  0003F2  0E00               	movlw	0
  5085  0003F4  0100               	movlb	0	; () banked
  5086  0003F6  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5087  0003F8  0100               	movlb	0	; () banked
  5088  0003FA  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5092  0003FC  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5093  000400  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5094  000404  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5095  000408  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5096  00040C  0E05               	movlw	5
  5097  00040E                     u5275:
  5098  00040E  90D8               	bcf	status,0,c
  5099  000410  0100               	movlb	0	; () banked
  5100  000412  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  5101  000414  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5102  000416  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5103  000418  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5104  00041A  2EE8               	decfsz	wreg,f,c
  5105  00041C  D7F8               	goto	u5275
  5106  00041E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5107  000422  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5108  000426  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5109  00042A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5113  00042E  C0D5  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5114  000432                     l4424:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;inc\CANlib.h: 802: }
  5118                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5119  000432  0E04               	movlw	4
  5120  000434  0100               	movlb	0	; () banked
  5121  000436  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5122  000438  A4D8               	btfss	status,2,c
  5123  00043A  D058               	goto	l4442
  5124                           
  5125                           ; BSR set to: 0
  5126  00043C  0100               	movlb	0	; () banked
  5127  00043E  29CF               	incf	CANSetFilter@type& (0+255),w,b
  5128  000440  A4D8               	btfss	status,2,c
  5129  000442  D054               	goto	l4442
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;inc\CANlib.h: 805: {
  5133                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5134  000444  010F               	movlb	15	; () banked
  5135  000446  9711               	bcf	17,3,b	;volatile
  5136                           
  5137                           ; BSR set to: 15
  5138                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5139  000448  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5140  00044C  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5141  000450  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5142  000454  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5143  000458  0E04               	movlw	4
  5144  00045A  D006               	goto	u5300
  5145  00045C                     u5305:
  5146  00045C  0100               	movlb	0	; () banked
  5147  00045E  90D8               	bcf	status,0,c
  5148  000460  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5149  000462  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5150  000464  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5151  000466  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5152  000468                     u5300:
  5153  000468  2EE8               	decfsz	wreg,f,c
  5154  00046A  D7F8               	goto	u5305
  5155  00046C  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5156  000470  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5157  000474  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5158  000478  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5162  00047C  0100               	movlb	0	; () banked
  5163  00047E  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5164  000480  0100               	movlb	0	; () banked
  5165  000482  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5166  000484  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5167  000486  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5168  000488  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5172  00048A  C0D5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5176  00048E  0E07               	movlw	7
  5177  000490  0100               	movlb	0	; () banked
  5178  000492  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5179  000494  0100               	movlb	0	; () banked
  5180  000496  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5181  000498  0E00               	movlw	0
  5182  00049A  0100               	movlb	0	; () banked
  5183  00049C  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5184  00049E  0100               	movlb	0	; () banked
  5185  0004A0  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5186  0004A2  0E00               	movlw	0
  5187  0004A4  0100               	movlb	0	; () banked
  5188  0004A6  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5189  0004A8  0100               	movlb	0	; () banked
  5190  0004AA  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5191  0004AC  0E00               	movlw	0
  5192  0004AE  0100               	movlb	0	; () banked
  5193  0004B0  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5194  0004B2  0100               	movlb	0	; () banked
  5195  0004B4  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5199  0004B6  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5200  0004BA  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5201  0004BE  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5202  0004C2  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5203  0004C6  0E05               	movlw	5
  5204  0004C8                     u5315:
  5205  0004C8  90D8               	bcf	status,0,c
  5206  0004CA  0100               	movlb	0	; () banked
  5207  0004CC  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  5208  0004CE  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5209  0004D0  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5210  0004D2  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5211  0004D4  2EE8               	decfsz	wreg,f,c
  5212  0004D6  D7F8               	goto	u5315
  5213  0004D8  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5214  0004DC  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5215  0004E0  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5216  0004E4  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5220  0004E8  C0D5  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5221  0004EC                     l4442:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;inc\CANlib.h: 815: }
  5225                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5226  0004EC  0E05               	movlw	5
  5227  0004EE  0100               	movlb	0	; () banked
  5228  0004F0  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5229  0004F2  A4D8               	btfss	status,2,c
  5230  0004F4  D058               	goto	l4460
  5231                           
  5232                           ; BSR set to: 0
  5233  0004F6  0100               	movlb	0	; () banked
  5234  0004F8  29CF               	incf	CANSetFilter@type& (0+255),w,b
  5235  0004FA  A4D8               	btfss	status,2,c
  5236  0004FC  D054               	goto	l4460
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;inc\CANlib.h: 818: {
  5240                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5241  0004FE  010F               	movlb	15	; () banked
  5242  000500  9715               	bcf	21,3,b	;volatile
  5243                           
  5244                           ; BSR set to: 15
  5245                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5246  000502  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5247  000506  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5248  00050A  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5249  00050E  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5250  000512  0E04               	movlw	4
  5251  000514  D006               	goto	u5340
  5252  000516                     u5345:
  5253  000516  0100               	movlb	0	; () banked
  5254  000518  90D8               	bcf	status,0,c
  5255  00051A  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5256  00051C  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5257  00051E  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5258  000520  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5259  000522                     u5340:
  5260  000522  2EE8               	decfsz	wreg,f,c
  5261  000524  D7F8               	goto	u5345
  5262  000526  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5263  00052A  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5264  00052E  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5265  000532  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5269  000536  0100               	movlb	0	; () banked
  5270  000538  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5271  00053A  0100               	movlb	0	; () banked
  5272  00053C  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5273  00053E  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5274  000540  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5275  000542  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5279  000544  C0D5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5283  000548  0E07               	movlw	7
  5284  00054A  0100               	movlb	0	; () banked
  5285  00054C  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5286  00054E  0100               	movlb	0	; () banked
  5287  000550  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5288  000552  0E00               	movlw	0
  5289  000554  0100               	movlb	0	; () banked
  5290  000556  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5291  000558  0100               	movlb	0	; () banked
  5292  00055A  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5293  00055C  0E00               	movlw	0
  5294  00055E  0100               	movlb	0	; () banked
  5295  000560  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5296  000562  0100               	movlb	0	; () banked
  5297  000564  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5298  000566  0E00               	movlw	0
  5299  000568  0100               	movlb	0	; () banked
  5300  00056A  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5301  00056C  0100               	movlb	0	; () banked
  5302  00056E  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5306  000570  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5307  000574  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5308  000578  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5309  00057C  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5310  000580  0E05               	movlw	5
  5311  000582                     u5355:
  5312  000582  90D8               	bcf	status,0,c
  5313  000584  0100               	movlb	0	; () banked
  5314  000586  37D0               	rlcf	??_CANSetFilter& (0+255),f,b
  5315  000588  37D1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5316  00058A  37D2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5317  00058C  37D3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5318  00058E  2EE8               	decfsz	wreg,f,c
  5319  000590  D7F8               	goto	u5355
  5320  000592  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5321  000596  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5322  00059A  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5323  00059E  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5327  0005A2  C0D5  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5328  0005A6                     l4460:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;inc\CANlib.h: 828: }
  5332                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5333  0005A6  0100               	movlb	0	; () banked
  5334  0005A8  51D4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5335  0005AA  0100               	movlb	0	; () banked
  5336  0005AC  A4D8               	btfss	status,2,c
  5337  0005AE  D089               	goto	l4494
  5338                           
  5339                           ; BSR set to: 0
  5340  0005B0  0EF7               	movlw	247
  5341  0005B2  0100               	movlb	0	; () banked
  5342  0005B4  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5343  0005B6  A4D8               	btfss	status,2,c
  5344  0005B8  D084               	goto	l4494
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;inc\CANlib.h: 832: {
  5348                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5349  0005BA  010F               	movlb	15	; () banked
  5350  0005BC  8701               	bsf	1,3,b	;volatile
  5351                           
  5352                           ; BSR set to: 15
  5353                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5354  0005BE  0100               	movlb	0	; () banked
  5355  0005C0  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  5356  0005C2  0100               	movlb	0	; () banked
  5357  0005C4  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5358  0005C6  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5359  0005C8  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5360  0005CA  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5364  0005CC  C0D5  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5368  0005D0  0E00               	movlw	0
  5369  0005D2  0100               	movlb	0	; () banked
  5370  0005D4  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5371  0005D6  0100               	movlb	0	; () banked
  5372  0005D8  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5373  0005DA  0EFF               	movlw	255
  5374  0005DC  0100               	movlb	0	; () banked
  5375  0005DE  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5376  0005E0  0100               	movlb	0	; () banked
  5377  0005E2  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5378  0005E4  0E00               	movlw	0
  5379  0005E6  0100               	movlb	0	; () banked
  5380  0005E8  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5381  0005EA  0100               	movlb	0	; () banked
  5382  0005EC  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5383  0005EE  0E00               	movlw	0
  5384  0005F0  0100               	movlb	0	; () banked
  5385  0005F2  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5386  0005F4  0100               	movlb	0	; () banked
  5387  0005F6  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5391  0005F8  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5392  0005FC  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5393  000600  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5394  000604  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5395  000608  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  5396  00060C  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5397  000610  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5398  000614  0100               	movlb	0	; () banked
  5399  000616  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  5400  000618  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5401  00061C  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5402  000620  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5403  000624  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5407  000628  C0D5  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5411  00062C  0100               	movlb	0	; () banked
  5412  00062E  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5413  000630  D003               	goto	l481
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5417  000632  010F               	movlb	15	; () banked
  5418  000634  8101               	bsf	1,0,b	;volatile
  5419  000636  D002               	goto	l482
  5420  000638                     l481:
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;inc\CANlib.h: 844: else
  5424                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5425  000638  010F               	movlb	15	; () banked
  5426  00063A  9101               	bcf	1,0,b	;volatile
  5427  00063C                     l482:
  5428                           
  5429                           ; BSR set to: 15
  5430                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5431  00063C  0100               	movlb	0	; () banked
  5432  00063E  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5433  000640  D003               	goto	l483
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5437  000642  010F               	movlb	15	; () banked
  5438  000644  8301               	bsf	1,1,b	;volatile
  5439  000646  D002               	goto	l484
  5440  000648                     l483:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;inc\CANlib.h: 849: else
  5444                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5445  000648  010F               	movlb	15	; () banked
  5446  00064A  9301               	bcf	1,1,b	;volatile
  5447  00064C                     l484:
  5448                           
  5449                           ; BSR set to: 15
  5450                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5451  00064C  0100               	movlb	0	; () banked
  5452  00064E  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5453  000650  D003               	goto	l485
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5457  000652  010F               	movlb	15	; () banked
  5458  000654  8B01               	bsf	1,5,b	;volatile
  5459  000656  D002               	goto	l486
  5460  000658                     l485:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;inc\CANlib.h: 854: else
  5464                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5465  000658  010F               	movlb	15	; () banked
  5466  00065A  9B01               	bcf	1,5,b	;volatile
  5467  00065C                     l486:
  5468                           
  5469                           ; BSR set to: 15
  5470                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5471  00065C  0100               	movlb	0	; () banked
  5472  00065E  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5473  000660  D003               	goto	l487
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5477  000662  010F               	movlb	15	; () banked
  5478  000664  8D01               	bsf	1,6,b	;volatile
  5479  000666  D002               	goto	l488
  5480  000668                     l487:
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;inc\CANlib.h: 859: else
  5484                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5485  000668  010F               	movlb	15	; () banked
  5486  00066A  9D01               	bcf	1,6,b	;volatile
  5487  00066C                     l488:
  5488                           
  5489                           ; BSR set to: 15
  5490                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5491  00066C  0100               	movlb	0	; () banked
  5492  00066E  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5493  000670  D003               	goto	l489
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5497  000672  010F               	movlb	15	; () banked
  5498  000674  8F01               	bsf	1,7,b	;volatile
  5499  000676  D002               	goto	l4488
  5500  000678                     l489:
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;inc\CANlib.h: 864: else
  5504                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5505  000678  010F               	movlb	15	; () banked
  5506  00067A  9F01               	bcf	1,7,b	;volatile
  5507  00067C                     l4488:
  5508                           
  5509                           ; BSR set to: 15
  5510                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5511  00067C  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5512  000680  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5513  000684  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5514  000688  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5515  00068C  0E16               	movlw	22
  5516  00068E  D006               	goto	u5430
  5517  000690                     u5435:
  5518  000690  0100               	movlb	0	; () banked
  5519  000692  90D8               	bcf	status,0,c
  5520  000694  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5521  000696  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5522  000698  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5523  00069A  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5524  00069C                     u5430:
  5525  00069C  2EE8               	decfsz	wreg,f,c
  5526  00069E  D7F8               	goto	u5435
  5527  0006A0  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5528  0006A4  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5529  0006A8  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5530  0006AC  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5534  0006B0  0100               	movlb	0	; () banked
  5535  0006B2  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5536  0006B4  0100               	movlb	0	; () banked
  5537  0006B6  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5538  0006B8  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5539  0006BA  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5540  0006BC  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5544  0006BE  C0D5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5545  0006C2                     l4494:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;inc\CANlib.h: 870: }
  5549                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5550  0006C2  0100               	movlb	0	; () banked
  5551  0006C4  05D4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5552  0006C6  A4D8               	btfss	status,2,c
  5553  0006C8  D089               	goto	l4528
  5554                           
  5555                           ; BSR set to: 0
  5556  0006CA  0EF7               	movlw	247
  5557  0006CC  0100               	movlb	0	; () banked
  5558  0006CE  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5559  0006D0  A4D8               	btfss	status,2,c
  5560  0006D2  D084               	goto	l4528
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;inc\CANlib.h: 873: {
  5564                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5565  0006D4  010F               	movlb	15	; () banked
  5566  0006D6  8705               	bsf	5,3,b	;volatile
  5567                           
  5568                           ; BSR set to: 15
  5569                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5570  0006D8  0100               	movlb	0	; () banked
  5571  0006DA  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  5572  0006DC  0100               	movlb	0	; () banked
  5573  0006DE  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5574  0006E0  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5575  0006E2  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5576  0006E4  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5580  0006E6  C0D5  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5584  0006EA  0E00               	movlw	0
  5585  0006EC  0100               	movlb	0	; () banked
  5586  0006EE  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5587  0006F0  0100               	movlb	0	; () banked
  5588  0006F2  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5589  0006F4  0EFF               	movlw	255
  5590  0006F6  0100               	movlb	0	; () banked
  5591  0006F8  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5592  0006FA  0100               	movlb	0	; () banked
  5593  0006FC  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5594  0006FE  0E00               	movlw	0
  5595  000700  0100               	movlb	0	; () banked
  5596  000702  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5597  000704  0100               	movlb	0	; () banked
  5598  000706  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5599  000708  0E00               	movlw	0
  5600  00070A  0100               	movlb	0	; () banked
  5601  00070C  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5602  00070E  0100               	movlb	0	; () banked
  5603  000710  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5607  000712  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5608  000716  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5609  00071A  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5610  00071E  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5611  000722  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  5612  000726  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5613  00072A  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5614  00072E  0100               	movlb	0	; () banked
  5615  000730  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  5616  000732  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5617  000736  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5618  00073A  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5619  00073E  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5623  000742  C0D5  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5627  000746  0100               	movlb	0	; () banked
  5628  000748  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5629  00074A  D003               	goto	l492
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5633  00074C  010F               	movlb	15	; () banked
  5634  00074E  8105               	bsf	5,0,b	;volatile
  5635  000750  D002               	goto	l493
  5636  000752                     l492:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;inc\CANlib.h: 885: else
  5640                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5641  000752  010F               	movlb	15	; () banked
  5642  000754  9105               	bcf	5,0,b	;volatile
  5643  000756                     l493:
  5644                           
  5645                           ; BSR set to: 15
  5646                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5647  000756  0100               	movlb	0	; () banked
  5648  000758  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5649  00075A  D003               	goto	l494
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5653  00075C  010F               	movlb	15	; () banked
  5654  00075E  8305               	bsf	5,1,b	;volatile
  5655  000760  D002               	goto	l495
  5656  000762                     l494:
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;inc\CANlib.h: 890: else
  5660                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5661  000762  010F               	movlb	15	; () banked
  5662  000764  9305               	bcf	5,1,b	;volatile
  5663  000766                     l495:
  5664                           
  5665                           ; BSR set to: 15
  5666                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5667  000766  0100               	movlb	0	; () banked
  5668  000768  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5669  00076A  D003               	goto	l496
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5673  00076C  010F               	movlb	15	; () banked
  5674  00076E  8B05               	bsf	5,5,b	;volatile
  5675  000770  D002               	goto	l497
  5676  000772                     l496:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;inc\CANlib.h: 895: else
  5680                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5681  000772  010F               	movlb	15	; () banked
  5682  000774  9B05               	bcf	5,5,b	;volatile
  5683  000776                     l497:
  5684                           
  5685                           ; BSR set to: 15
  5686                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5687  000776  0100               	movlb	0	; () banked
  5688  000778  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5689  00077A  D003               	goto	l498
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5693  00077C  010F               	movlb	15	; () banked
  5694  00077E  8D05               	bsf	5,6,b	;volatile
  5695  000780  D002               	goto	l499
  5696  000782                     l498:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;inc\CANlib.h: 900: else
  5700                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5701  000782  010F               	movlb	15	; () banked
  5702  000784  9D05               	bcf	5,6,b	;volatile
  5703  000786                     l499:
  5704                           
  5705                           ; BSR set to: 15
  5706                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5707  000786  0100               	movlb	0	; () banked
  5708  000788  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5709  00078A  D003               	goto	l500
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5713  00078C  010F               	movlb	15	; () banked
  5714  00078E  8F05               	bsf	5,7,b	;volatile
  5715  000790  D002               	goto	l4522
  5716  000792                     l500:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;inc\CANlib.h: 905: else
  5720                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5721  000792  010F               	movlb	15	; () banked
  5722  000794  9F05               	bcf	5,7,b	;volatile
  5723  000796                     l4522:
  5724                           
  5725                           ; BSR set to: 15
  5726                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5727  000796  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5728  00079A  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5729  00079E  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5730  0007A2  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5731  0007A6  0E16               	movlw	22
  5732  0007A8  D006               	goto	u5510
  5733  0007AA                     u5515:
  5734  0007AA  0100               	movlb	0	; () banked
  5735  0007AC  90D8               	bcf	status,0,c
  5736  0007AE  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5737  0007B0  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5738  0007B2  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5739  0007B4  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5740  0007B6                     u5510:
  5741  0007B6  2EE8               	decfsz	wreg,f,c
  5742  0007B8  D7F8               	goto	u5515
  5743  0007BA  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5744  0007BE  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5745  0007C2  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5746  0007C6  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5750  0007CA  0100               	movlb	0	; () banked
  5751  0007CC  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5752  0007CE  0100               	movlb	0	; () banked
  5753  0007D0  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5754  0007D2  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5755  0007D4  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5756  0007D6  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5760  0007D8  C0D5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5761  0007DC                     l4528:
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 911: }
  5765                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5766  0007DC  0E02               	movlw	2
  5767  0007DE  0100               	movlb	0	; () banked
  5768  0007E0  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5769  0007E2  A4D8               	btfss	status,2,c
  5770  0007E4  D089               	goto	l4562
  5771                           
  5772                           ; BSR set to: 0
  5773  0007E6  0EF7               	movlw	247
  5774  0007E8  0100               	movlb	0	; () banked
  5775  0007EA  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5776  0007EC  A4D8               	btfss	status,2,c
  5777  0007EE  D084               	goto	l4562
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;inc\CANlib.h: 915: {
  5781                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5782  0007F0  010F               	movlb	15	; () banked
  5783  0007F2  8709               	bsf	9,3,b	;volatile
  5784                           
  5785                           ; BSR set to: 15
  5786                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5787  0007F4  0100               	movlb	0	; () banked
  5788  0007F6  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  5789  0007F8  0100               	movlb	0	; () banked
  5790  0007FA  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5791  0007FC  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5792  0007FE  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5793  000800  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5797  000802  C0D5  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5801  000806  0E00               	movlw	0
  5802  000808  0100               	movlb	0	; () banked
  5803  00080A  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  5804  00080C  0100               	movlb	0	; () banked
  5805  00080E  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5806  000810  0EFF               	movlw	255
  5807  000812  0100               	movlb	0	; () banked
  5808  000814  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5809  000816  0100               	movlb	0	; () banked
  5810  000818  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5811  00081A  0E00               	movlw	0
  5812  00081C  0100               	movlb	0	; () banked
  5813  00081E  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5814  000820  0100               	movlb	0	; () banked
  5815  000822  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5816  000824  0E00               	movlw	0
  5817  000826  0100               	movlb	0	; () banked
  5818  000828  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5819  00082A  0100               	movlb	0	; () banked
  5820  00082C  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5824  00082E  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  5825  000832  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5826  000836  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5827  00083A  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5828  00083E  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  5829  000842  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5830  000846  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5831  00084A  0100               	movlb	0	; () banked
  5832  00084C  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  5833  00084E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5834  000852  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5835  000856  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5836  00085A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5840  00085E  C0D5  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5844  000862  0100               	movlb	0	; () banked
  5845  000864  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5846  000866  D003               	goto	l503
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5850  000868  010F               	movlb	15	; () banked
  5851  00086A  8109               	bsf	9,0,b	;volatile
  5852  00086C  D002               	goto	l504
  5853  00086E                     l503:
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;inc\CANlib.h: 927: else
  5857                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5858  00086E  010F               	movlb	15	; () banked
  5859  000870  9109               	bcf	9,0,b	;volatile
  5860  000872                     l504:
  5861                           
  5862                           ; BSR set to: 15
  5863                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5864  000872  0100               	movlb	0	; () banked
  5865  000874  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5866  000876  D003               	goto	l505
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5870  000878  010F               	movlb	15	; () banked
  5871  00087A  8309               	bsf	9,1,b	;volatile
  5872  00087C  D002               	goto	l506
  5873  00087E                     l505:
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;inc\CANlib.h: 932: else
  5877                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5878  00087E  010F               	movlb	15	; () banked
  5879  000880  9309               	bcf	9,1,b	;volatile
  5880  000882                     l506:
  5881                           
  5882                           ; BSR set to: 15
  5883                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5884  000882  0100               	movlb	0	; () banked
  5885  000884  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5886  000886  D003               	goto	l507
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5890  000888  010F               	movlb	15	; () banked
  5891  00088A  8B09               	bsf	9,5,b	;volatile
  5892  00088C  D002               	goto	l508
  5893  00088E                     l507:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;inc\CANlib.h: 937: else
  5897                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5898  00088E  010F               	movlb	15	; () banked
  5899  000890  9B09               	bcf	9,5,b	;volatile
  5900  000892                     l508:
  5901                           
  5902                           ; BSR set to: 15
  5903                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5904  000892  0100               	movlb	0	; () banked
  5905  000894  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5906  000896  D003               	goto	l509
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5910  000898  010F               	movlb	15	; () banked
  5911  00089A  8D09               	bsf	9,6,b	;volatile
  5912  00089C  D002               	goto	l510
  5913  00089E                     l509:
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;inc\CANlib.h: 942: else
  5917                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5918  00089E  010F               	movlb	15	; () banked
  5919  0008A0  9D09               	bcf	9,6,b	;volatile
  5920  0008A2                     l510:
  5921                           
  5922                           ; BSR set to: 15
  5923                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5924  0008A2  0100               	movlb	0	; () banked
  5925  0008A4  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5926  0008A6  D003               	goto	l511
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5930  0008A8  010F               	movlb	15	; () banked
  5931  0008AA  8F09               	bsf	9,7,b	;volatile
  5932  0008AC  D002               	goto	l4556
  5933  0008AE                     l511:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;inc\CANlib.h: 947: else
  5937                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5938  0008AE  010F               	movlb	15	; () banked
  5939  0008B0  9F09               	bcf	9,7,b	;volatile
  5940  0008B2                     l4556:
  5941                           
  5942                           ; BSR set to: 15
  5943                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5944  0008B2  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  5945  0008B6  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5946  0008BA  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5947  0008BE  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5948  0008C2  0E16               	movlw	22
  5949  0008C4  D006               	goto	u5590
  5950  0008C6                     u5595:
  5951  0008C6  0100               	movlb	0	; () banked
  5952  0008C8  90D8               	bcf	status,0,c
  5953  0008CA  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5954  0008CC  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5955  0008CE  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5956  0008D0  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  5957  0008D2                     u5590:
  5958  0008D2  2EE8               	decfsz	wreg,f,c
  5959  0008D4  D7F8               	goto	u5595
  5960  0008D6  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  5961  0008DA  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5962  0008DE  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5963  0008E2  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5967  0008E6  0100               	movlb	0	; () banked
  5968  0008E8  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  5969  0008EA  0100               	movlb	0	; () banked
  5970  0008EC  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  5971  0008EE  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5972  0008F0  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5973  0008F2  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5977  0008F4  C0D5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5978  0008F8                     l4562:
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;inc\CANlib.h: 953: }
  5982                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5983  0008F8  0E03               	movlw	3
  5984  0008FA  0100               	movlb	0	; () banked
  5985  0008FC  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5986  0008FE  A4D8               	btfss	status,2,c
  5987  000900  D089               	goto	l4596
  5988                           
  5989                           ; BSR set to: 0
  5990  000902  0EF7               	movlw	247
  5991  000904  0100               	movlb	0	; () banked
  5992  000906  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  5993  000908  A4D8               	btfss	status,2,c
  5994  00090A  D084               	goto	l4596
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;inc\CANlib.h: 956: {
  5998                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5999  00090C  010F               	movlb	15	; () banked
  6000  00090E  870D               	bsf	13,3,b	;volatile
  6001                           
  6002                           ; BSR set to: 15
  6003                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6004  000910  0100               	movlb	0	; () banked
  6005  000912  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  6006  000914  0100               	movlb	0	; () banked
  6007  000916  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6008  000918  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6009  00091A  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6010  00091C  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6014  00091E  C0D5  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6018  000922  0E00               	movlw	0
  6019  000924  0100               	movlb	0	; () banked
  6020  000926  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  6021  000928  0100               	movlb	0	; () banked
  6022  00092A  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6023  00092C  0EFF               	movlw	255
  6024  00092E  0100               	movlb	0	; () banked
  6025  000930  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6026  000932  0100               	movlb	0	; () banked
  6027  000934  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6028  000936  0E00               	movlw	0
  6029  000938  0100               	movlb	0	; () banked
  6030  00093A  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6031  00093C  0100               	movlb	0	; () banked
  6032  00093E  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6033  000940  0E00               	movlw	0
  6034  000942  0100               	movlb	0	; () banked
  6035  000944  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6036  000946  0100               	movlb	0	; () banked
  6037  000948  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6041  00094A  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  6042  00094E  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6043  000952  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6044  000956  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6045  00095A  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  6046  00095E  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6047  000962  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6048  000966  0100               	movlb	0	; () banked
  6049  000968  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  6050  00096A  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6051  00096E  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6052  000972  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6053  000976  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6057  00097A  C0D5  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6061  00097E  0100               	movlb	0	; () banked
  6062  000980  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6063  000982  D003               	goto	l514
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6067  000984  010F               	movlb	15	; () banked
  6068  000986  810D               	bsf	13,0,b	;volatile
  6069  000988  D002               	goto	l515
  6070  00098A                     l514:
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;inc\CANlib.h: 968: else
  6074                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6075  00098A  010F               	movlb	15	; () banked
  6076  00098C  910D               	bcf	13,0,b	;volatile
  6077  00098E                     l515:
  6078                           
  6079                           ; BSR set to: 15
  6080                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6081  00098E  0100               	movlb	0	; () banked
  6082  000990  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6083  000992  D003               	goto	l516
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6087  000994  010F               	movlb	15	; () banked
  6088  000996  830D               	bsf	13,1,b	;volatile
  6089  000998  D002               	goto	l517
  6090  00099A                     l516:
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;inc\CANlib.h: 973: else
  6094                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6095  00099A  010F               	movlb	15	; () banked
  6096  00099C  930D               	bcf	13,1,b	;volatile
  6097  00099E                     l517:
  6098                           
  6099                           ; BSR set to: 15
  6100                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6101  00099E  0100               	movlb	0	; () banked
  6102  0009A0  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6103  0009A2  D003               	goto	l518
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6107  0009A4  010F               	movlb	15	; () banked
  6108  0009A6  8B0D               	bsf	13,5,b	;volatile
  6109  0009A8  D002               	goto	l519
  6110  0009AA                     l518:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;inc\CANlib.h: 978: else
  6114                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6115  0009AA  010F               	movlb	15	; () banked
  6116  0009AC  9B0D               	bcf	13,5,b	;volatile
  6117  0009AE                     l519:
  6118                           
  6119                           ; BSR set to: 15
  6120                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6121  0009AE  0100               	movlb	0	; () banked
  6122  0009B0  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6123  0009B2  D003               	goto	l520
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6127  0009B4  010F               	movlb	15	; () banked
  6128  0009B6  8D0D               	bsf	13,6,b	;volatile
  6129  0009B8  D002               	goto	l521
  6130  0009BA                     l520:
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;inc\CANlib.h: 983: else
  6134                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6135  0009BA  010F               	movlb	15	; () banked
  6136  0009BC  9D0D               	bcf	13,6,b	;volatile
  6137  0009BE                     l521:
  6138                           
  6139                           ; BSR set to: 15
  6140                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6141  0009BE  0100               	movlb	0	; () banked
  6142  0009C0  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6143  0009C2  D003               	goto	l522
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6147  0009C4  010F               	movlb	15	; () banked
  6148  0009C6  8F0D               	bsf	13,7,b	;volatile
  6149  0009C8  D002               	goto	l4590
  6150  0009CA                     l522:
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;inc\CANlib.h: 988: else
  6154                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6155  0009CA  010F               	movlb	15	; () banked
  6156  0009CC  9F0D               	bcf	13,7,b	;volatile
  6157  0009CE                     l4590:
  6158                           
  6159                           ; BSR set to: 15
  6160                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6161  0009CE  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  6162  0009D2  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6163  0009D6  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6164  0009DA  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6165  0009DE  0E16               	movlw	22
  6166  0009E0  D006               	goto	u5670
  6167  0009E2                     u5675:
  6168  0009E2  0100               	movlb	0	; () banked
  6169  0009E4  90D8               	bcf	status,0,c
  6170  0009E6  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6171  0009E8  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6172  0009EA  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6173  0009EC  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  6174  0009EE                     u5670:
  6175  0009EE  2EE8               	decfsz	wreg,f,c
  6176  0009F0  D7F8               	goto	u5675
  6177  0009F2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6178  0009F6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6179  0009FA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6180  0009FE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6184  000A02  0100               	movlb	0	; () banked
  6185  000A04  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  6186  000A06  0100               	movlb	0	; () banked
  6187  000A08  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6188  000A0A  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6189  000A0C  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6190  000A0E  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6194  000A10  C0D5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6195  000A14                     l4596:
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;inc\CANlib.h: 994: }
  6199                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6200  000A14  0E04               	movlw	4
  6201  000A16  0100               	movlb	0	; () banked
  6202  000A18  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6203  000A1A  A4D8               	btfss	status,2,c
  6204  000A1C  D089               	goto	l4630
  6205                           
  6206                           ; BSR set to: 0
  6207  000A1E  0EF7               	movlw	247
  6208  000A20  0100               	movlb	0	; () banked
  6209  000A22  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  6210  000A24  A4D8               	btfss	status,2,c
  6211  000A26  D084               	goto	l4630
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;inc\CANlib.h: 997: {
  6215                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6216  000A28  010F               	movlb	15	; () banked
  6217  000A2A  8711               	bsf	17,3,b	;volatile
  6218                           
  6219                           ; BSR set to: 15
  6220                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6221  000A2C  0100               	movlb	0	; () banked
  6222  000A2E  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  6223  000A30  0100               	movlb	0	; () banked
  6224  000A32  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6225  000A34  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6226  000A36  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6227  000A38  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6231  000A3A  C0D5  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6235  000A3E  0E00               	movlw	0
  6236  000A40  0100               	movlb	0	; () banked
  6237  000A42  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  6238  000A44  0100               	movlb	0	; () banked
  6239  000A46  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6240  000A48  0EFF               	movlw	255
  6241  000A4A  0100               	movlb	0	; () banked
  6242  000A4C  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6243  000A4E  0100               	movlb	0	; () banked
  6244  000A50  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6245  000A52  0E00               	movlw	0
  6246  000A54  0100               	movlb	0	; () banked
  6247  000A56  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6248  000A58  0100               	movlb	0	; () banked
  6249  000A5A  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6250  000A5C  0E00               	movlw	0
  6251  000A5E  0100               	movlb	0	; () banked
  6252  000A60  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6253  000A62  0100               	movlb	0	; () banked
  6254  000A64  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6258  000A66  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  6259  000A6A  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6260  000A6E  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6261  000A72  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6262  000A76  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  6263  000A7A  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6264  000A7E  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6265  000A82  0100               	movlb	0	; () banked
  6266  000A84  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  6267  000A86  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6268  000A8A  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6269  000A8E  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6270  000A92  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6274  000A96  C0D5  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6278  000A9A  0100               	movlb	0	; () banked
  6279  000A9C  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6280  000A9E  D003               	goto	l525
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6284  000AA0  010F               	movlb	15	; () banked
  6285  000AA2  8111               	bsf	17,0,b	;volatile
  6286  000AA4  D002               	goto	l526
  6287  000AA6                     l525:
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;inc\CANlib.h: 1009: else
  6291                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6292  000AA6  010F               	movlb	15	; () banked
  6293  000AA8  9111               	bcf	17,0,b	;volatile
  6294  000AAA                     l526:
  6295                           
  6296                           ; BSR set to: 15
  6297                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6298  000AAA  0100               	movlb	0	; () banked
  6299  000AAC  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6300  000AAE  D003               	goto	l527
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6304  000AB0  010F               	movlb	15	; () banked
  6305  000AB2  8311               	bsf	17,1,b	;volatile
  6306  000AB4  D002               	goto	l528
  6307  000AB6                     l527:
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;inc\CANlib.h: 1014: else
  6311                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6312  000AB6  010F               	movlb	15	; () banked
  6313  000AB8  9311               	bcf	17,1,b	;volatile
  6314  000ABA                     l528:
  6315                           
  6316                           ; BSR set to: 15
  6317                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6318  000ABA  0100               	movlb	0	; () banked
  6319  000ABC  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6320  000ABE  D003               	goto	l529
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6324  000AC0  010F               	movlb	15	; () banked
  6325  000AC2  8B11               	bsf	17,5,b	;volatile
  6326  000AC4  D002               	goto	l530
  6327  000AC6                     l529:
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;inc\CANlib.h: 1019: else
  6331                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6332  000AC6  010F               	movlb	15	; () banked
  6333  000AC8  9B11               	bcf	17,5,b	;volatile
  6334  000ACA                     l530:
  6335                           
  6336                           ; BSR set to: 15
  6337                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6338  000ACA  0100               	movlb	0	; () banked
  6339  000ACC  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6340  000ACE  D003               	goto	l531
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6344  000AD0  010F               	movlb	15	; () banked
  6345  000AD2  8D11               	bsf	17,6,b	;volatile
  6346  000AD4  D002               	goto	l532
  6347  000AD6                     l531:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;inc\CANlib.h: 1024: else
  6351                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6352  000AD6  010F               	movlb	15	; () banked
  6353  000AD8  9D11               	bcf	17,6,b	;volatile
  6354  000ADA                     l532:
  6355                           
  6356                           ; BSR set to: 15
  6357                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6358  000ADA  0100               	movlb	0	; () banked
  6359  000ADC  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6360  000ADE  D003               	goto	l533
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6364  000AE0  010F               	movlb	15	; () banked
  6365  000AE2  8F11               	bsf	17,7,b	;volatile
  6366  000AE4  D002               	goto	l4624
  6367  000AE6                     l533:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;inc\CANlib.h: 1029: else
  6371                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6372  000AE6  010F               	movlb	15	; () banked
  6373  000AE8  9F11               	bcf	17,7,b	;volatile
  6374  000AEA                     l4624:
  6375                           
  6376                           ; BSR set to: 15
  6377                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6378  000AEA  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  6379  000AEE  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6380  000AF2  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6381  000AF6  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6382  000AFA  0E16               	movlw	22
  6383  000AFC  D006               	goto	u5750
  6384  000AFE                     u5755:
  6385  000AFE  0100               	movlb	0	; () banked
  6386  000B00  90D8               	bcf	status,0,c
  6387  000B02  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6388  000B04  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6389  000B06  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6390  000B08  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  6391  000B0A                     u5750:
  6392  000B0A  2EE8               	decfsz	wreg,f,c
  6393  000B0C  D7F8               	goto	u5755
  6394  000B0E  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6395  000B12  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6396  000B16  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6397  000B1A  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6401  000B1E  0100               	movlb	0	; () banked
  6402  000B20  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  6403  000B22  0100               	movlb	0	; () banked
  6404  000B24  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6405  000B26  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6406  000B28  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6407  000B2A  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6411  000B2C  C0D5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6412  000B30                     l4630:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;inc\CANlib.h: 1035: }
  6416                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6417  000B30  0E05               	movlw	5
  6418  000B32  0100               	movlb	0	; () banked
  6419  000B34  19D4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6420  000B36  A4D8               	btfss	status,2,c
  6421  000B38  0012               	return	
  6422                           
  6423                           ; BSR set to: 0
  6424  000B3A  0EF7               	movlw	247
  6425  000B3C  0100               	movlb	0	; () banked
  6426  000B3E  19CF               	xorwf	CANSetFilter@type& (0+255),w,b
  6427  000B40  A4D8               	btfss	status,2,c
  6428  000B42  0012               	return	
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;inc\CANlib.h: 1038: {
  6432                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6433  000B44  010F               	movlb	15	; () banked
  6434  000B46  8715               	bsf	21,3,b	;volatile
  6435                           
  6436                           ; BSR set to: 15
  6437                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6438  000B48  0100               	movlb	0	; () banked
  6439  000B4A  51CB               	movf	CANSetFilter@filter& (0+255),w,b
  6440  000B4C  0100               	movlb	0	; () banked
  6441  000B4E  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6442  000B50  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6443  000B52  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6444  000B54  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6448  000B56  C0D5  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6452  000B5A  0E00               	movlw	0
  6453  000B5C  0100               	movlb	0	; () banked
  6454  000B5E  15CB               	andwf	CANSetFilter@filter& (0+255),w,b
  6455  000B60  0100               	movlb	0	; () banked
  6456  000B62  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6457  000B64  0EFF               	movlw	255
  6458  000B66  0100               	movlb	0	; () banked
  6459  000B68  15CC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6460  000B6A  0100               	movlb	0	; () banked
  6461  000B6C  6FD6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6462  000B6E  0E00               	movlw	0
  6463  000B70  0100               	movlb	0	; () banked
  6464  000B72  15CD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6465  000B74  0100               	movlb	0	; () banked
  6466  000B76  6FD7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6467  000B78  0E00               	movlw	0
  6468  000B7A  0100               	movlb	0	; () banked
  6469  000B7C  15CE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6470  000B7E  0100               	movlb	0	; () banked
  6471  000B80  6FD8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6475  000B82  C0D5  F0D0         	movff	CANSetFilter@tamp,??_CANSetFilter
  6476  000B86  C0D6  F0D1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6477  000B8A  C0D7  F0D2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6478  000B8E  C0D8  F0D3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6479  000B92  C0D1  F0D0         	movff	??_CANSetFilter+1,??_CANSetFilter
  6480  000B96  C0D2  F0D1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6481  000B9A  C0D3  F0D2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6482  000B9E  0100               	movlb	0	; () banked
  6483  000BA0  6BD3               	clrf	(??_CANSetFilter+3)& (0+255),b
  6484  000BA2  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6485  000BA6  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6486  000BAA  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6487  000BAE  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6491  000BB2  C0D5  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6495  000BB6  0100               	movlb	0	; () banked
  6496  000BB8  A1CD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6497  000BBA  D003               	goto	l536
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6501  000BBC  010F               	movlb	15	; () banked
  6502  000BBE  8115               	bsf	21,0,b	;volatile
  6503  000BC0  D002               	goto	l537
  6504  000BC2                     l536:
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;inc\CANlib.h: 1050: else
  6508                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6509  000BC2  010F               	movlb	15	; () banked
  6510  000BC4  9115               	bcf	21,0,b	;volatile
  6511  000BC6                     l537:
  6512                           
  6513                           ; BSR set to: 15
  6514                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6515  000BC6  0100               	movlb	0	; () banked
  6516  000BC8  A3CD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6517  000BCA  D003               	goto	l538
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6521  000BCC  010F               	movlb	15	; () banked
  6522  000BCE  8315               	bsf	21,1,b	;volatile
  6523  000BD0  D002               	goto	l539
  6524  000BD2                     l538:
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;inc\CANlib.h: 1055: else
  6528                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6529  000BD2  010F               	movlb	15	; () banked
  6530  000BD4  9315               	bcf	21,1,b	;volatile
  6531  000BD6                     l539:
  6532                           
  6533                           ; BSR set to: 15
  6534                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6535  000BD6  0100               	movlb	0	; () banked
  6536  000BD8  A5CD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6537  000BDA  D003               	goto	l540
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6541  000BDC  010F               	movlb	15	; () banked
  6542  000BDE  8B15               	bsf	21,5,b	;volatile
  6543  000BE0  D002               	goto	l541
  6544  000BE2                     l540:
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;inc\CANlib.h: 1060: else
  6548                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6549  000BE2  010F               	movlb	15	; () banked
  6550  000BE4  9B15               	bcf	21,5,b	;volatile
  6551  000BE6                     l541:
  6552                           
  6553                           ; BSR set to: 15
  6554                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6555  000BE6  0100               	movlb	0	; () banked
  6556  000BE8  A7CD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6557  000BEA  D003               	goto	l542
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6561  000BEC  010F               	movlb	15	; () banked
  6562  000BEE  8D15               	bsf	21,6,b	;volatile
  6563  000BF0  D002               	goto	l543
  6564  000BF2                     l542:
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;inc\CANlib.h: 1065: else
  6568                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6569  000BF2  010F               	movlb	15	; () banked
  6570  000BF4  9D15               	bcf	21,6,b	;volatile
  6571  000BF6                     l543:
  6572                           
  6573                           ; BSR set to: 15
  6574                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6575  000BF6  0100               	movlb	0	; () banked
  6576  000BF8  A9CD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6577  000BFA  D003               	goto	l544
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6581  000BFC  010F               	movlb	15	; () banked
  6582  000BFE  8F15               	bsf	21,7,b	;volatile
  6583  000C00  D002               	goto	l4658
  6584  000C02                     l544:
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;inc\CANlib.h: 1070: else
  6588                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6589  000C02  010F               	movlb	15	; () banked
  6590  000C04  9F15               	bcf	21,7,b	;volatile
  6591  000C06                     l4658:
  6592                           
  6593                           ; BSR set to: 15
  6594                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6595  000C06  C0CB  F0D0         	movff	CANSetFilter@filter,??_CANSetFilter
  6596  000C0A  C0CC  F0D1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6597  000C0E  C0CD  F0D2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6598  000C12  C0CE  F0D3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6599  000C16  0E16               	movlw	22
  6600  000C18  D006               	goto	u5830
  6601  000C1A                     u5835:
  6602  000C1A  0100               	movlb	0	; () banked
  6603  000C1C  90D8               	bcf	status,0,c
  6604  000C1E  33D3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6605  000C20  33D2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6606  000C22  33D1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6607  000C24  33D0               	rrcf	??_CANSetFilter& (0+255),f,b
  6608  000C26                     u5830:
  6609  000C26  2EE8               	decfsz	wreg,f,c
  6610  000C28  D7F8               	goto	u5835
  6611  000C2A  C0D0  F0D5         	movff	??_CANSetFilter,CANSetFilter@tamp
  6612  000C2E  C0D1  F0D6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6613  000C32  C0D2  F0D7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6614  000C36  C0D3  F0D8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6618  000C3A  0100               	movlb	0	; () banked
  6619  000C3C  51D5               	movf	CANSetFilter@tamp& (0+255),w,b
  6620  000C3E  0100               	movlb	0	; () banked
  6621  000C40  6FD5               	movwf	CANSetFilter@tamp& (0+255),b
  6622  000C42  6BD6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6623  000C44  6BD7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6624  000C46  6BD8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6628  000C48  C0D5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6629  000C4C  0012               	return	
  6630  000C4E                     __end_of_CANSetFilter:
  6631                           	opt stack 0
  6632                           tblptru	equ	0xFF8
  6633                           tblptrh	equ	0xFF7
  6634                           tblptrl	equ	0xFF6
  6635                           tablat	equ	0xFF5
  6636                           prodh	equ	0xFF4
  6637                           prodl	equ	0xFF3
  6638                           intcon	equ	0xFF2
  6639                           intcon2	equ	0xFF1
  6640                           intcon3	equ	0xFF0
  6641                           postinc0	equ	0xFEE
  6642                           wreg	equ	0xFE8
  6643                           postdec1	equ	0xFE5
  6644                           fsr1l	equ	0xFE1
  6645                           indf2	equ	0xFDF
  6646                           fsr2h	equ	0xFDA
  6647                           fsr2l	equ	0xFD9
  6648                           status	equ	0xFD8
  6649                           
  6650 ;; *************** function _CANOperationMode *****************
  6651 ;; Defined at:
  6652 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  mode            1    wreg     enum E16838
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  mode            1   26[BANK0 ] enum E16838
  6657 ;; Return value:  Size  Location     Type
  6658 ;;		None               void
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6666 ;;      Params:         0       0       0       0
  6667 ;;      Locals:         0       1       0       0
  6668 ;;      Temps:          0       0       0       0
  6669 ;;      Totals:         0       1       0       0
  6670 ;;Total ram usage:        1 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    4
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_CANInitialize
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text10
  6681  002A6A                     __ptext10:
  6682                           	opt stack 0
  6683  002A6A                     _CANOperationMode:
  6684                           	opt stack 24
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;incstack = 0
  6688                           ;CANOperationMode@mode stored from wreg
  6689  002A6A  0100               	movlb	0	; () banked
  6690  002A6C  6FCB               	movwf	CANOperationMode@mode& (0+255),b
  6691                           
  6692                           ;inc\CANlib.h: 208: CANCON = mode;
  6693  002A6E  C0CB  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6694  002A72                     l4254:
  6695  002A72  506E               	movf	3950,w,c	;volatile
  6696  002A74  0BE0               	andlw	224
  6697  002A76  0100               	movlb	0	; () banked
  6698  002A78  19CB               	xorwf	CANOperationMode@mode& (0+255),w,b
  6699  002A7A  B4D8               	btfsc	status,2,c
  6700  002A7C  0012               	return	
  6701  002A7E  D7F9               	goto	l4254
  6702  002A80                     __end_of_CANOperationMode:
  6703                           	opt stack 0
  6704                           tblptru	equ	0xFF8
  6705                           tblptrh	equ	0xFF7
  6706                           tblptrl	equ	0xFF6
  6707                           tablat	equ	0xFF5
  6708                           prodh	equ	0xFF4
  6709                           prodl	equ	0xFF3
  6710                           intcon	equ	0xFF2
  6711                           intcon2	equ	0xFF1
  6712                           intcon3	equ	0xFF0
  6713                           postinc0	equ	0xFEE
  6714                           wreg	equ	0xFE8
  6715                           postdec1	equ	0xFE5
  6716                           fsr1l	equ	0xFE1
  6717                           indf2	equ	0xFDF
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function ___lmul *****************
  6723 ;; Defined at:
  6724 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  multiplier      4   26[BANK0 ] unsigned long 
  6727 ;;  multiplicand    4   30[BANK0 ] unsigned long 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  product         4   34[BANK0 ] unsigned long 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  4   26[BANK0 ] unsigned long 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6739 ;;      Params:         0       8       0       0
  6740 ;;      Locals:         0       4       0       0
  6741 ;;      Temps:          0       0       0       0
  6742 ;;      Totals:         0      12       0       0
  6743 ;;Total ram usage:       12 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    4
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_main
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text11
  6754  00289E                     __ptext11:
  6755                           	opt stack 0
  6756  00289E                     ___lmul:
  6757                           	opt stack 26
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;incstack = 0
  6761  00289E  0E00               	movlw	0
  6762  0028A0  0100               	movlb	0	; () banked
  6763  0028A2  6FD3               	movwf	___lmul@product& (0+255),b
  6764  0028A4  0E00               	movlw	0
  6765  0028A6  6FD4               	movwf	(___lmul@product+1)& (0+255),b
  6766  0028A8  0E00               	movlw	0
  6767  0028AA  6FD5               	movwf	(___lmul@product+2)& (0+255),b
  6768  0028AC  0E00               	movlw	0
  6769  0028AE  6FD6               	movwf	(___lmul@product+3)& (0+255),b
  6770  0028B0                     l3854:
  6771                           
  6772                           ; BSR set to: 0
  6773  0028B0  0100               	movlb	0	; () banked
  6774  0028B2  A1CB               	btfss	___lmul@multiplier& (0+255),0,b
  6775  0028B4  D010               	goto	l3858
  6776                           
  6777                           ; BSR set to: 0
  6778  0028B6  0100               	movlb	0	; () banked
  6779  0028B8  51CF               	movf	___lmul@multiplicand& (0+255),w,b
  6780  0028BA  0100               	movlb	0	; () banked
  6781  0028BC  27D3               	addwf	___lmul@product& (0+255),f,b
  6782  0028BE  0100               	movlb	0	; () banked
  6783  0028C0  51D0               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6784  0028C2  0100               	movlb	0	; () banked
  6785  0028C4  23D4               	addwfc	(___lmul@product+1)& (0+255),f,b
  6786  0028C6  0100               	movlb	0	; () banked
  6787  0028C8  51D1               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6788  0028CA  0100               	movlb	0	; () banked
  6789  0028CC  23D5               	addwfc	(___lmul@product+2)& (0+255),f,b
  6790  0028CE  0100               	movlb	0	; () banked
  6791  0028D0  51D2               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6792  0028D2  0100               	movlb	0	; () banked
  6793  0028D4  23D6               	addwfc	(___lmul@product+3)& (0+255),f,b
  6794  0028D6                     l3858:
  6795                           
  6796                           ; BSR set to: 0
  6797  0028D6  0100               	movlb	0	; () banked
  6798  0028D8  90D8               	bcf	status,0,c
  6799  0028DA  37CF               	rlcf	___lmul@multiplicand& (0+255),f,b
  6800  0028DC  37D0               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6801  0028DE  37D1               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6802  0028E0  37D2               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6803                           
  6804                           ; BSR set to: 0
  6805  0028E2  0100               	movlb	0	; () banked
  6806  0028E4  90D8               	bcf	status,0,c
  6807  0028E6  33CE               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6808  0028E8  33CD               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6809  0028EA  33CC               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6810  0028EC  33CB               	rrcf	___lmul@multiplier& (0+255),f,b
  6811  0028EE  0100               	movlb	0	; () banked
  6812  0028F0  51CB               	movf	___lmul@multiplier& (0+255),w,b
  6813  0028F2  0100               	movlb	0	; () banked
  6814  0028F4  11CC               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6815  0028F6  0100               	movlb	0	; () banked
  6816  0028F8  11CD               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6817  0028FA  0100               	movlb	0	; () banked
  6818  0028FC  11CE               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6819  0028FE  A4D8               	btfss	status,2,c
  6820  002900  D7D7               	goto	l3854
  6821                           
  6822                           ; BSR set to: 0
  6823  002902  C0D3  F0CB         	movff	___lmul@product,?___lmul
  6824  002906  C0D4  F0CC         	movff	___lmul@product+1,?___lmul+1
  6825  00290A  C0D5  F0CD         	movff	___lmul@product+2,?___lmul+2
  6826  00290E  C0D6  F0CE         	movff	___lmul@product+3,?___lmul+3
  6827                           
  6828                           ; BSR set to: 0
  6829  002912  0012               	return		;funcret
  6830  002914                     __end_of___lmul:
  6831                           	opt stack 0
  6832                           tblptru	equ	0xFF8
  6833                           tblptrh	equ	0xFF7
  6834                           tblptrl	equ	0xFF6
  6835                           tablat	equ	0xFF5
  6836                           prodh	equ	0xFF4
  6837                           prodl	equ	0xFF3
  6838                           intcon	equ	0xFF2
  6839                           intcon2	equ	0xFF1
  6840                           intcon3	equ	0xFF0
  6841                           postinc0	equ	0xFEE
  6842                           wreg	equ	0xFE8
  6843                           postdec1	equ	0xFE5
  6844                           fsr1l	equ	0xFE1
  6845                           indf2	equ	0xFDF
  6846                           fsr2h	equ	0xFDA
  6847                           fsr2l	equ	0xFD9
  6848                           status	equ	0xFD8
  6849                           
  6850 ;; *************** function ___awdiv *****************
  6851 ;; Defined at:
  6852 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  dividend        2   26[BANK0 ] int 
  6855 ;;  divisor         2   28[BANK0 ] int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  quotient        2   32[BANK0 ] int 
  6858 ;;  sign            1   31[BANK0 ] unsigned char 
  6859 ;;  counter         1   30[BANK0 ] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  2   26[BANK0 ] int 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, status,0
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6869 ;;      Params:         0       4       0       0
  6870 ;;      Locals:         0       4       0       0
  6871 ;;      Temps:          0       0       0       0
  6872 ;;      Totals:         0       8       0       0
  6873 ;;Total ram usage:        8 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    4
  6876 ;; This function calls:
  6877 ;;		Nothing
  6878 ;; This function is called by:
  6879 ;;		_main
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text12
  6884  00268C                     __ptext12:
  6885                           	opt stack 0
  6886  00268C                     ___awdiv:
  6887                           	opt stack 26
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;incstack = 0
  6891  00268C  0E00               	movlw	0
  6892  00268E  0100               	movlb	0	; () banked
  6893  002690  6FD0               	movwf	___awdiv@sign& (0+255),b
  6894                           
  6895                           ; BSR set to: 0
  6896  002692  0100               	movlb	0	; () banked
  6897  002694  AFCE               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6898  002696  D008               	goto	l3914
  6899                           
  6900                           ; BSR set to: 0
  6901  002698  0100               	movlb	0	; () banked
  6902  00269A  6DCD               	negf	___awdiv@divisor& (0+255),b
  6903  00269C  1FCE               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6904  00269E  B0D8               	btfsc	status,0,c
  6905  0026A0  2BCE               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6906                           
  6907                           ; BSR set to: 0
  6908  0026A2  0E01               	movlw	1
  6909  0026A4  0100               	movlb	0	; () banked
  6910  0026A6  6FD0               	movwf	___awdiv@sign& (0+255),b
  6911  0026A8                     l3914:
  6912                           
  6913                           ; BSR set to: 0
  6914  0026A8  0100               	movlb	0	; () banked
  6915  0026AA  AFCC               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6916  0026AC  D008               	goto	l3920
  6917                           
  6918                           ; BSR set to: 0
  6919  0026AE  0100               	movlb	0	; () banked
  6920  0026B0  6DCB               	negf	___awdiv@dividend& (0+255),b
  6921  0026B2  1FCC               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6922  0026B4  B0D8               	btfsc	status,0,c
  6923  0026B6  2BCC               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6924                           
  6925                           ; BSR set to: 0
  6926  0026B8  0E01               	movlw	1
  6927  0026BA  0100               	movlb	0	; () banked
  6928  0026BC  1BD0               	xorwf	___awdiv@sign& (0+255),f,b
  6929  0026BE                     l3920:
  6930                           
  6931                           ; BSR set to: 0
  6932  0026BE  0E00               	movlw	0
  6933  0026C0  0100               	movlb	0	; () banked
  6934  0026C2  6FD2               	movwf	(___awdiv@quotient+1)& (0+255),b
  6935  0026C4  0E00               	movlw	0
  6936  0026C6  6FD1               	movwf	___awdiv@quotient& (0+255),b
  6937                           
  6938                           ; BSR set to: 0
  6939  0026C8  0100               	movlb	0	; () banked
  6940  0026CA  51CD               	movf	___awdiv@divisor& (0+255),w,b
  6941  0026CC  0100               	movlb	0	; () banked
  6942  0026CE  11CE               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6943  0026D0  B4D8               	btfsc	status,2,c
  6944  0026D2  D02C               	goto	l3942
  6945                           
  6946                           ; BSR set to: 0
  6947  0026D4  0E01               	movlw	1
  6948  0026D6  0100               	movlb	0	; () banked
  6949  0026D8  6FCF               	movwf	___awdiv@counter& (0+255),b
  6950  0026DA  D006               	goto	l3928
  6951  0026DC                     l3926:
  6952                           
  6953                           ; BSR set to: 0
  6954  0026DC  0100               	movlb	0	; () banked
  6955  0026DE  90D8               	bcf	status,0,c
  6956  0026E0  37CD               	rlcf	___awdiv@divisor& (0+255),f,b
  6957  0026E2  37CE               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6958  0026E4  0100               	movlb	0	; () banked
  6959  0026E6  2BCF               	incf	___awdiv@counter& (0+255),f,b
  6960  0026E8                     l3928:
  6961                           
  6962                           ; BSR set to: 0
  6963  0026E8  0100               	movlb	0	; () banked
  6964  0026EA  AFCE               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6965  0026EC  D7F7               	goto	l3926
  6966  0026EE                     l3930:
  6967                           
  6968                           ; BSR set to: 0
  6969  0026EE  0100               	movlb	0	; () banked
  6970  0026F0  90D8               	bcf	status,0,c
  6971  0026F2  37D1               	rlcf	___awdiv@quotient& (0+255),f,b
  6972  0026F4  37D2               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6973                           
  6974                           ; BSR set to: 0
  6975  0026F6  0100               	movlb	0	; () banked
  6976  0026F8  51CD               	movf	___awdiv@divisor& (0+255),w,b
  6977  0026FA  0100               	movlb	0	; () banked
  6978  0026FC  5DCB               	subwf	___awdiv@dividend& (0+255),w,b
  6979  0026FE  0100               	movlb	0	; () banked
  6980  002700  51CE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6981  002702  0100               	movlb	0	; () banked
  6982  002704  59CC               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6983  002706  A0D8               	btfss	status,0,c
  6984  002708  D00A               	goto	l3938
  6985                           
  6986                           ; BSR set to: 0
  6987  00270A  0100               	movlb	0	; () banked
  6988  00270C  51CD               	movf	___awdiv@divisor& (0+255),w,b
  6989  00270E  0100               	movlb	0	; () banked
  6990  002710  5FCB               	subwf	___awdiv@dividend& (0+255),f,b
  6991  002712  0100               	movlb	0	; () banked
  6992  002714  51CE               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6993  002716  0100               	movlb	0	; () banked
  6994  002718  5BCC               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6995                           
  6996                           ; BSR set to: 0
  6997  00271A  0100               	movlb	0	; () banked
  6998  00271C  81D1               	bsf	___awdiv@quotient& (0+255),0,b
  6999  00271E                     l3938:
  7000                           
  7001                           ; BSR set to: 0
  7002  00271E  0100               	movlb	0	; () banked
  7003  002720  90D8               	bcf	status,0,c
  7004  002722  33CE               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7005  002724  33CD               	rrcf	___awdiv@divisor& (0+255),f,b
  7006                           
  7007                           ; BSR set to: 0
  7008  002726  0100               	movlb	0	; () banked
  7009  002728  2FCF               	decfsz	___awdiv@counter& (0+255),f,b
  7010  00272A  D7E1               	goto	l3930
  7011  00272C                     l3942:
  7012                           
  7013                           ; BSR set to: 0
  7014  00272C  0100               	movlb	0	; () banked
  7015  00272E  51D0               	movf	___awdiv@sign& (0+255),w,b
  7016  002730  0100               	movlb	0	; () banked
  7017  002732  B4D8               	btfsc	status,2,c
  7018  002734  D005               	goto	l3946
  7019                           
  7020                           ; BSR set to: 0
  7021  002736  0100               	movlb	0	; () banked
  7022  002738  6DD1               	negf	___awdiv@quotient& (0+255),b
  7023  00273A  1FD2               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7024  00273C  B0D8               	btfsc	status,0,c
  7025  00273E  2BD2               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7026  002740                     l3946:
  7027                           
  7028                           ; BSR set to: 0
  7029  002740  C0D1  F0CB         	movff	___awdiv@quotient,?___awdiv
  7030  002744  C0D2  F0CC         	movff	___awdiv@quotient+1,?___awdiv+1
  7031  002748  0012               	return	
  7032  00274A                     __end_of___awdiv:
  7033                           	opt stack 0
  7034                           tblptru	equ	0xFF8
  7035                           tblptrh	equ	0xFF7
  7036                           tblptrl	equ	0xFF6
  7037                           tablat	equ	0xFF5
  7038                           prodh	equ	0xFF4
  7039                           prodl	equ	0xFF3
  7040                           intcon	equ	0xFF2
  7041                           intcon2	equ	0xFF1
  7042                           intcon3	equ	0xFF0
  7043                           postinc0	equ	0xFEE
  7044                           wreg	equ	0xFE8
  7045                           postdec1	equ	0xFE5
  7046                           fsr1l	equ	0xFE1
  7047                           indf2	equ	0xFDF
  7048                           fsr2h	equ	0xFDA
  7049                           fsr2l	equ	0xFD9
  7050                           status	equ	0xFD8
  7051                           
  7052 ;; *************** function ___aldiv *****************
  7053 ;; Defined at:
  7054 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;  dividend        4    0[BANK1 ] long 
  7057 ;;  divisor         4    4[BANK1 ] long 
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;  quotient        4   40[BANK0 ] long 
  7060 ;;  sign            1   39[BANK0 ] unsigned char 
  7061 ;;  counter         1   38[BANK0 ] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  4    0[BANK1 ] long 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7071 ;;      Params:         0       0       8       0
  7072 ;;      Locals:         0       6       0       0
  7073 ;;      Temps:          0       0       0       0
  7074 ;;      Totals:         0       6       8       0
  7075 ;;Total ram usage:       14 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    4
  7078 ;; This function calls:
  7079 ;;		Nothing
  7080 ;; This function is called by:
  7081 ;;		_main
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text13
  7086  002572                     __ptext13:
  7087                           	opt stack 0
  7088  002572                     ___aldiv:
  7089                           	opt stack 26
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;incstack = 0
  7093  002572  0E00               	movlw	0
  7094  002574  0100               	movlb	0	; () banked
  7095  002576  6FD8               	movwf	___aldiv@sign& (0+255),b
  7096                           
  7097                           ; BSR set to: 0
  7098  002578  0101               	movlb	1	; () banked
  7099  00257A  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7100  00257C  D00C               	goto	l4832
  7101                           
  7102                           ; BSR set to: 1
  7103  00257E  0101               	movlb	1	; () banked
  7104  002580  1F07               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7105  002582  1F06               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7106  002584  1F05               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7107  002586  6D04               	negf	___aldiv@divisor& (0+255),b
  7108  002588  0E00               	movlw	0
  7109  00258A  2305               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7110  00258C  2306               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7111  00258E  2307               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7112                           
  7113                           ; BSR set to: 1
  7114  002590  0E01               	movlw	1
  7115  002592  0100               	movlb	0	; () banked
  7116  002594  6FD8               	movwf	___aldiv@sign& (0+255),b
  7117  002596                     l4832:
  7118  002596  0101               	movlb	1	; () banked
  7119  002598  AF03               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7120  00259A  D00C               	goto	l4838
  7121                           
  7122                           ; BSR set to: 1
  7123  00259C  0101               	movlb	1	; () banked
  7124  00259E  1F03               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7125  0025A0  1F02               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7126  0025A2  1F01               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7127  0025A4  6D00               	negf	___aldiv@dividend& (0+255),b
  7128  0025A6  0E00               	movlw	0
  7129  0025A8  2301               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7130  0025AA  2302               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7131  0025AC  2303               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7132                           
  7133                           ; BSR set to: 1
  7134  0025AE  0E01               	movlw	1
  7135  0025B0  0100               	movlb	0	; () banked
  7136  0025B2  1BD8               	xorwf	___aldiv@sign& (0+255),f,b
  7137  0025B4                     l4838:
  7138  0025B4  0E00               	movlw	0
  7139  0025B6  0100               	movlb	0	; () banked
  7140  0025B8  6FD9               	movwf	___aldiv@quotient& (0+255),b
  7141  0025BA  0E00               	movlw	0
  7142  0025BC  6FDA               	movwf	(___aldiv@quotient+1)& (0+255),b
  7143  0025BE  0E00               	movlw	0
  7144  0025C0  6FDB               	movwf	(___aldiv@quotient+2)& (0+255),b
  7145  0025C2  0E00               	movlw	0
  7146  0025C4  6FDC               	movwf	(___aldiv@quotient+3)& (0+255),b
  7147                           
  7148                           ; BSR set to: 0
  7149  0025C6  0101               	movlb	1	; () banked
  7150  0025C8  5104               	movf	___aldiv@divisor& (0+255),w,b
  7151  0025CA  0101               	movlb	1	; () banked
  7152  0025CC  1105               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7153  0025CE  0101               	movlb	1	; () banked
  7154  0025D0  1106               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7155  0025D2  0101               	movlb	1	; () banked
  7156  0025D4  1107               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7157  0025D6  B4D8               	btfsc	status,2,c
  7158  0025D8  D042               	goto	l4860
  7159                           
  7160                           ; BSR set to: 1
  7161  0025DA  0E01               	movlw	1
  7162  0025DC  0100               	movlb	0	; () banked
  7163  0025DE  6FD7               	movwf	___aldiv@counter& (0+255),b
  7164  0025E0  D008               	goto	l4846
  7165  0025E2                     l4844:
  7166  0025E2  0101               	movlb	1	; () banked
  7167  0025E4  90D8               	bcf	status,0,c
  7168  0025E6  3704               	rlcf	___aldiv@divisor& (0+255),f,b
  7169  0025E8  3705               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7170  0025EA  3706               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7171  0025EC  3707               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7172  0025EE  0100               	movlb	0	; () banked
  7173  0025F0  2BD7               	incf	___aldiv@counter& (0+255),f,b
  7174  0025F2                     l4846:
  7175                           
  7176                           ; BSR set to: 0
  7177  0025F2  0101               	movlb	1	; () banked
  7178  0025F4  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7179  0025F6  D7F5               	goto	l4844
  7180  0025F8                     l4848:
  7181  0025F8  0100               	movlb	0	; () banked
  7182  0025FA  90D8               	bcf	status,0,c
  7183  0025FC  37D9               	rlcf	___aldiv@quotient& (0+255),f,b
  7184  0025FE  37DA               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7185  002600  37DB               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7186  002602  37DC               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7187                           
  7188                           ; BSR set to: 0
  7189  002604  0101               	movlb	1	; () banked
  7190  002606  5104               	movf	___aldiv@divisor& (0+255),w,b
  7191  002608  0101               	movlb	1	; () banked
  7192  00260A  5D00               	subwf	___aldiv@dividend& (0+255),w,b
  7193  00260C  0101               	movlb	1	; () banked
  7194  00260E  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7195  002610  0101               	movlb	1	; () banked
  7196  002612  5901               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7197  002614  0101               	movlb	1	; () banked
  7198  002616  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7199  002618  0101               	movlb	1	; () banked
  7200  00261A  5902               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7201  00261C  0101               	movlb	1	; () banked
  7202  00261E  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7203  002620  0101               	movlb	1	; () banked
  7204  002622  5903               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7205  002624  A0D8               	btfss	status,0,c
  7206  002626  D012               	goto	l4856
  7207                           
  7208                           ; BSR set to: 1
  7209  002628  0101               	movlb	1	; () banked
  7210  00262A  5104               	movf	___aldiv@divisor& (0+255),w,b
  7211  00262C  0101               	movlb	1	; () banked
  7212  00262E  5F00               	subwf	___aldiv@dividend& (0+255),f,b
  7213  002630  0101               	movlb	1	; () banked
  7214  002632  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7215  002634  0101               	movlb	1	; () banked
  7216  002636  5B01               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7217  002638  0101               	movlb	1	; () banked
  7218  00263A  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7219  00263C  0101               	movlb	1	; () banked
  7220  00263E  5B02               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7221  002640  0101               	movlb	1	; () banked
  7222  002642  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7223  002644  0101               	movlb	1	; () banked
  7224  002646  5B03               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7225                           
  7226                           ; BSR set to: 1
  7227  002648  0100               	movlb	0	; () banked
  7228  00264A  81D9               	bsf	___aldiv@quotient& (0+255),0,b
  7229  00264C                     l4856:
  7230  00264C  0101               	movlb	1	; () banked
  7231  00264E  90D8               	bcf	status,0,c
  7232  002650  3307               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7233  002652  3306               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7234  002654  3305               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7235  002656  3304               	rrcf	___aldiv@divisor& (0+255),f,b
  7236                           
  7237                           ; BSR set to: 1
  7238  002658  0100               	movlb	0	; () banked
  7239  00265A  2FD7               	decfsz	___aldiv@counter& (0+255),f,b
  7240  00265C  D7CD               	goto	l4848
  7241  00265E                     l4860:
  7242  00265E  0100               	movlb	0	; () banked
  7243  002660  51D8               	movf	___aldiv@sign& (0+255),w,b
  7244  002662  0100               	movlb	0	; () banked
  7245  002664  B4D8               	btfsc	status,2,c
  7246  002666  D009               	goto	l4864
  7247                           
  7248                           ; BSR set to: 0
  7249  002668  0100               	movlb	0	; () banked
  7250  00266A  1FDC               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7251  00266C  1FDB               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7252  00266E  1FDA               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7253  002670  6DD9               	negf	___aldiv@quotient& (0+255),b
  7254  002672  0E00               	movlw	0
  7255  002674  23DA               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7256  002676  23DB               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7257  002678  23DC               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7258  00267A                     l4864:
  7259                           
  7260                           ; BSR set to: 0
  7261  00267A  C0D9  F100         	movff	___aldiv@quotient,?___aldiv
  7262  00267E  C0DA  F101         	movff	___aldiv@quotient+1,?___aldiv+1
  7263  002682  C0DB  F102         	movff	___aldiv@quotient+2,?___aldiv+2
  7264  002686  C0DC  F103         	movff	___aldiv@quotient+3,?___aldiv+3
  7265  00268A  0012               	return	
  7266  00268C                     __end_of___aldiv:
  7267                           	opt stack 0
  7268                           tblptru	equ	0xFF8
  7269                           tblptrh	equ	0xFF7
  7270                           tblptrl	equ	0xFF6
  7271                           tablat	equ	0xFF5
  7272                           prodh	equ	0xFF4
  7273                           prodl	equ	0xFF3
  7274                           intcon	equ	0xFF2
  7275                           intcon2	equ	0xFF1
  7276                           intcon3	equ	0xFF0
  7277                           postinc0	equ	0xFEE
  7278                           wreg	equ	0xFE8
  7279                           postdec1	equ	0xFE5
  7280                           fsr1l	equ	0xFE1
  7281                           indf2	equ	0xFDF
  7282                           fsr2h	equ	0xFDA
  7283                           fsr2l	equ	0xFD9
  7284                           status	equ	0xFD8
  7285                           
  7286 ;; *************** function _CANisTXwarningON *****************
  7287 ;; Defined at:
  7288 ;;		line 1119 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;		None
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      unsigned char 
  7295 ;; Registers used:
  7296 ;;		wreg
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7302 ;;      Params:         0       0       0       0
  7303 ;;      Locals:         0       0       0       0
  7304 ;;      Temps:          0       0       0       0
  7305 ;;      Totals:         0       0       0       0
  7306 ;;Total ram usage:        0 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    4
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		_main
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           	psect	text14
  7317  002AA8                     __ptext14:
  7318                           	opt stack 0
  7319  002AA8                     _CANisTXwarningON:
  7320                           	opt stack 26
  7321                           
  7322                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;incstack = 0
  7326  002AA8  A474               	btfss	3956,2,c	;volatile
  7327  002AAA  D002               	goto	u4110
  7328  002AAC  0E01               	movlw	1
  7329  002AAE  0012               	return	
  7330  002AB0                     u4110:
  7331  002AB0  0E00               	movlw	0
  7332  002AB2  0012               	return	
  7333  002AB4                     __end_of_CANisTXwarningON:
  7334                           	opt stack 0
  7335                           tblptru	equ	0xFF8
  7336                           tblptrh	equ	0xFF7
  7337                           tblptrl	equ	0xFF6
  7338                           tablat	equ	0xFF5
  7339                           prodh	equ	0xFF4
  7340                           prodl	equ	0xFF3
  7341                           intcon	equ	0xFF2
  7342                           intcon2	equ	0xFF1
  7343                           intcon3	equ	0xFF0
  7344                           postinc0	equ	0xFEE
  7345                           wreg	equ	0xFE8
  7346                           postdec1	equ	0xFE5
  7347                           fsr1l	equ	0xFE1
  7348                           indf2	equ	0xFDF
  7349                           fsr2h	equ	0xFDA
  7350                           fsr2l	equ	0xFD9
  7351                           status	equ	0xFD8
  7352                           
  7353 ;; *************** function _CANisRXwarningON *****************
  7354 ;; Defined at:
  7355 ;;		line 1127 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      unsigned char 
  7362 ;; Registers used:
  7363 ;;		wreg
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7369 ;;      Params:         0       0       0       0
  7370 ;;      Locals:         0       0       0       0
  7371 ;;      Temps:          0       0       0       0
  7372 ;;      Totals:         0       0       0       0
  7373 ;;Total ram usage:        0 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    4
  7376 ;; This function calls:
  7377 ;;		Nothing
  7378 ;; This function is called by:
  7379 ;;		_main
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text15
  7384  002AB4                     __ptext15:
  7385                           	opt stack 0
  7386  002AB4                     _CANisRXwarningON:
  7387                           	opt stack 26
  7388                           
  7389                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7390                           
  7391                           ;incstack = 0
  7392  002AB4  A274               	btfss	3956,1,c	;volatile
  7393  002AB6  D002               	goto	u4120
  7394  002AB8  0E01               	movlw	1
  7395  002ABA  0012               	return	
  7396  002ABC                     u4120:
  7397  002ABC  0E00               	movlw	0
  7398  002ABE  0012               	return	
  7399  002AC0                     __end_of_CANisRXwarningON:
  7400                           	opt stack 0
  7401                           tblptru	equ	0xFF8
  7402                           tblptrh	equ	0xFF7
  7403                           tblptrl	equ	0xFF6
  7404                           tablat	equ	0xFF5
  7405                           prodh	equ	0xFF4
  7406                           prodl	equ	0xFF3
  7407                           intcon	equ	0xFF2
  7408                           intcon2	equ	0xFF1
  7409                           intcon3	equ	0xFF0
  7410                           postinc0	equ	0xFEE
  7411                           wreg	equ	0xFE8
  7412                           postdec1	equ	0xFE5
  7413                           fsr1l	equ	0xFE1
  7414                           indf2	equ	0xFDF
  7415                           fsr2h	equ	0xFDA
  7416                           fsr2l	equ	0xFD9
  7417                           status	equ	0xFD8
  7418                           
  7419 ;; *************** function _ISR_Bassa *****************
  7420 ;; Defined at:
  7421 ;;		line 213 in file "ABS_Code.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;		None
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;		None               void
  7428 ;; Registers used:
  7429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7435 ;;      Params:         0       0       0       0
  7436 ;;      Locals:         0       0       0       0
  7437 ;;      Temps:         17       0       0       0
  7438 ;;      Totals:        17       0       0       0
  7439 ;;Total ram usage:       17 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:    3
  7442 ;; This function calls:
  7443 ;;		_CANisRxReady
  7444 ;;		_CANreceiveMessage
  7445 ;; This function is called by:
  7446 ;;		Interrupt level 1
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           	psect	intcodelo
  7451  000018                     __pintcodelo:
  7452                           	opt stack 0
  7453  000018                     _ISR_Bassa:
  7454                           	opt stack 24
  7455                           
  7456                           ;incstack = 0
  7457  000018  803F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7458  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7459  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7460  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7461  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7462  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7463  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7464  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7465  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7466  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7467  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7468  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7469  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7470  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7471  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7472  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7473  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7474  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7475                           
  7476                           ;ABS_Code.c: 215: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7477  00005E  A0A4               	btfss	4004,0,c	;volatile
  7478  000060  B2A4               	btfsc	4004,1,c	;volatile
  7479  000062  D001               	goto	i1l4110
  7480  000064  D043               	goto	i1l4134
  7481  000066                     i1l4110:
  7482                           
  7483                           ;ABS_Code.c: 216: if (CANisRxReady()) {
  7484  000066  EC40  F015         	call	_CANisRxReady	;wreg free
  7485  00006A  0900               	iorlw	0
  7486  00006C  B4D8               	btfsc	status,2,c
  7487  00006E  D03C               	goto	i1l4130
  7488                           
  7489                           ;ABS_Code.c: 217: CANreceiveMessage(&msg);
  7490  000070  0E89               	movlw	low _msg
  7491  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7492  000074  0E00               	movlw	high _msg
  7493  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7494  000078  ECED  F009         	call	_CANreceiveMessage	;wreg free
  7495                           
  7496                           ;ABS_Code.c: 218: if (msg.RTR == 1) {
  7497  00007C  0100               	movlb	0	; () banked
  7498  00007E  0597               	decf	(_msg+14)& (0+255),w,b
  7499  000080  A4D8               	btfss	status,2,c
  7500  000082  D009               	goto	i1l4118
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;ABS_Code.c: 219: remote_frame_id = msg.identifier;
  7504  000084  C089  F06C         	movff	_msg,_remote_frame_id	;volatile
  7505  000088  C08A  F06D         	movff	_msg+1,_remote_frame_id+1	;volatile
  7506  00008C  C08B  F06E         	movff	_msg+2,_remote_frame_id+2	;volatile
  7507  000090  C08C  F06F         	movff	_msg+3,_remote_frame_id+3	;volatile
  7508                           
  7509                           ;ABS_Code.c: 220: remote_frame = 1;
  7510  000094  803E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7511  000096                     i1l4118:
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;ABS_Code.c: 221: }
  7515                           ;ABS_Code.c: 222: if (msg.identifier == 0b00000000100) {
  7516  000096  0E04               	movlw	4
  7517  000098  0100               	movlb	0	; () banked
  7518  00009A  1989               	xorwf	_msg& (0+255),w,b
  7519  00009C  0100               	movlb	0	; () banked
  7520  00009E  118A               	iorwf	(_msg+1)& (0+255),w,b
  7521  0000A0  0100               	movlb	0	; () banked
  7522  0000A2  118B               	iorwf	(_msg+2)& (0+255),w,b
  7523  0000A4  0100               	movlb	0	; () banked
  7524  0000A6  118C               	iorwf	(_msg+3)& (0+255),w,b
  7525  0000A8  A4D8               	btfss	status,2,c
  7526  0000AA  D004               	goto	i1l4122
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;ABS_Code.c: 223: brake_signal_CAN = msg.data[0];
  7530  0000AC  C08D  F085         	movff	_msg+4,_brake_signal_CAN	;volatile
  7531                           
  7532                           ;ABS_Code.c: 224: Analogic_Mode = msg.data[1];
  7533  0000B0  C08E  F084         	movff	_msg+5,_Analogic_Mode	;volatile
  7534  0000B4                     i1l4122:
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;ABS_Code.c: 225: }
  7538                           ;ABS_Code.c: 226: if (msg.identifier == 0b00000001101) {
  7539  0000B4  0E0D               	movlw	13
  7540  0000B6  0100               	movlb	0	; () banked
  7541  0000B8  1989               	xorwf	_msg& (0+255),w,b
  7542  0000BA  0100               	movlb	0	; () banked
  7543  0000BC  118A               	iorwf	(_msg+1)& (0+255),w,b
  7544  0000BE  0100               	movlb	0	; () banked
  7545  0000C0  118B               	iorwf	(_msg+2)& (0+255),w,b
  7546  0000C2  0100               	movlb	0	; () banked
  7547  0000C4  118C               	iorwf	(_msg+3)& (0+255),w,b
  7548  0000C6  A4D8               	btfss	status,2,c
  7549  0000C8  D00F               	goto	i1l4130
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;ABS_Code.c: 227: distance_set_value = msg.data[0];
  7553  0000CA  C08D  F082         	movff	_msg+4,_distance_set_value	;volatile
  7554  0000CE  0100               	movlb	0	; () banked
  7555  0000D0  6B83               	clrf	(_distance_set_value+1)& (0+255),b	;volatile
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;ABS_Code.c: 228: distance_set_counter_1 = 0;
  7559  0000D2  0E00               	movlw	0
  7560  0000D4  0100               	movlb	0	; () banked
  7561  0000D6  6F7F               	movwf	(_distance_set_counter_1+1)& (0+255),b	;volatile
  7562  0000D8  0E00               	movlw	0
  7563  0000DA  6F7E               	movwf	_distance_set_counter_1& (0+255),b	;volatile
  7564                           
  7565                           ;ABS_Code.c: 229: distance_set_counter_2 = 0;
  7566  0000DC  0E00               	movlw	0
  7567  0000DE  0100               	movlb	0	; () banked
  7568  0000E0  6F81               	movwf	(_distance_set_counter_2+1)& (0+255),b	;volatile
  7569  0000E2  0E00               	movlw	0
  7570  0000E4  6F80               	movwf	_distance_set_counter_2& (0+255),b	;volatile
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;ABS_Code.c: 230: distance_set_flag = 1;
  7574  0000E6  8E3D               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  7575  0000E8                     i1l4130:
  7576                           
  7577                           ;ABS_Code.c: 231: }
  7578                           ;ABS_Code.c: 232: }
  7579                           ;ABS_Code.c: 233: PIR3bits.RXB0IF = 0;
  7580  0000E8  90A4               	bcf	4004,0,c	;volatile
  7581                           
  7582                           ;ABS_Code.c: 234: PIR3bits.RXB1IF = 0;
  7583  0000EA  92A4               	bcf	4004,1,c	;volatile
  7584  0000EC                     i1l4134:
  7585                           
  7586                           ;ABS_Code.c: 235: }
  7587                           ;ABS_Code.c: 238: if (PIR1bits.TMR1IF == 1) {
  7588  0000EC  A09E               	btfss	3998,0,c	;volatile
  7589  0000EE  D002               	goto	i1l703
  7590                           
  7591                           ;ABS_Code.c: 239: TMR1_overflow = 1;
  7592  0000F0  843D               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7593                           
  7594                           ;ABS_Code.c: 240: PIR1bits.TMR1IF = 0;
  7595  0000F2  909E               	bcf	3998,0,c	;volatile
  7596  0000F4                     i1l703:
  7597                           
  7598                           ;ABS_Code.c: 241: }
  7599                           ;ABS_Code.c: 244: if (PIR2bits.TMR3IF == 1) {
  7600  0000F4  A2A1               	btfss	4001,1,c	;volatile
  7601  0000F6  D002               	goto	i1l705
  7602                           
  7603                           ;ABS_Code.c: 245: TMR3_overflow = 1;
  7604  0000F8  863D               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7605                           
  7606                           ;ABS_Code.c: 246: PIR2bits.TMR3IF = 0;
  7607  0000FA  92A1               	bcf	4001,1,c	;volatile
  7608  0000FC                     i1l705:
  7609  0000FC  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7610  000100  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7611  000104  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7612  000108  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7613  00010C  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7614  000110  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7615  000114  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7616  000118  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7617  00011C  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7618  000120  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7619  000124  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7620  000128  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7621  00012C  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7622  000130  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7623  000134  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7624  000138  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7625  00013C  C00D  FFD8         	movff	??_ISR_Bassa,status
  7626  000140  903F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7627  000142  0010               	retfie	
  7628  000144                     __end_of_ISR_Bassa:
  7629                           	opt stack 0
  7630                           pclatu	equ	0xFFB
  7631                           pclath	equ	0xFFA
  7632                           tblptru	equ	0xFF8
  7633                           tblptrh	equ	0xFF7
  7634                           tblptrl	equ	0xFF6
  7635                           tablat	equ	0xFF5
  7636                           prodh	equ	0xFF4
  7637                           prodl	equ	0xFF3
  7638                           intcon	equ	0xFF2
  7639                           intcon2	equ	0xFF1
  7640                           intcon3	equ	0xFF0
  7641                           postinc0	equ	0xFEE
  7642                           fsr0h	equ	0xFEA
  7643                           fsr0l	equ	0xFE9
  7644                           wreg	equ	0xFE8
  7645                           postdec1	equ	0xFE5
  7646                           fsr1h	equ	0xFE2
  7647                           fsr1l	equ	0xFE1
  7648                           bsr	equ	0xFE0
  7649                           indf2	equ	0xFDF
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function _CANreceiveMessage *****************
  7655 ;; Defined at:
  7656 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  msg             2    0[COMRAM] PTR struct .
  7659 ;;		 -> msg(15), 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  tamp            1   11[COMRAM] unsigned char 
  7662 ;;  error           1   10[COMRAM] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7672 ;;      Params:         2       0       0       0
  7673 ;;      Locals:         2       0       0       0
  7674 ;;      Temps:          8       0       0       0
  7675 ;;      Totals:        12       0       0       0
  7676 ;;Total ram usage:       12 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    2
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_ISR_Bassa
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text17
  7687  0013DA                     __ptext17:
  7688                           	opt stack 0
  7689  0013DA                     _CANreceiveMessage:
  7690                           	opt stack 24
  7691                           
  7692                           ;inc\CANlib.h: 530: BYTE tamp;
  7693                           ;inc\CANlib.h: 531: BYTE error = 0;
  7694                           
  7695                           ;incstack = 0
  7696  0013DA  0E00               	movlw	0
  7697  0013DC  6E0B               	movwf	CANreceiveMessage@error,c
  7698                           
  7699                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7700  0013DE  BE74               	btfsc	3956,7,c	;volatile
  7701                           
  7702                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7703  0013E0  800B               	bsf	CANreceiveMessage@error,0,c
  7704                           
  7705                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7706  0013E2  BC74               	btfsc	3956,6,c	;volatile
  7707                           
  7708                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7709  0013E4  820B               	bsf	CANreceiveMessage@error,1,c
  7710                           
  7711                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7712  0013E6  010F               	movlb	15	; () banked
  7713  0013E8  AF50               	btfss	80,7,b	;volatile
  7714  0013EA  D143               	goto	i1l428
  7715                           
  7716                           ; BSR set to: 15
  7717                           ;inc\CANlib.h: 541: {
  7718                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7719  0013EC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7720  0013F0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7721  0013F4  6ADE               	clrf	postinc2,c
  7722  0013F6  6ADE               	clrf	postinc2,c
  7723  0013F8  6ADE               	clrf	postinc2,c
  7724  0013FA  6ADD               	clrf	postdec2,c
  7725                           
  7726                           ; BSR set to: 15
  7727                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7728  0013FC  EE20 F004          	lfsr	2,4
  7729  001400  5001               	movf	CANreceiveMessage@msg,w,c
  7730  001402  26D9               	addwf	fsr2l,f,c
  7731  001404  5002               	movf	CANreceiveMessage@msg+1,w,c
  7732  001406  22DA               	addwfc	fsr2h,f,c
  7733  001408  CF56 FFDF          	movff	3926,indf2	;volatile
  7734                           
  7735                           ; BSR set to: 15
  7736                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7737  00140C  EE20 F005          	lfsr	2,5
  7738  001410  5001               	movf	CANreceiveMessage@msg,w,c
  7739  001412  26D9               	addwf	fsr2l,f,c
  7740  001414  5002               	movf	CANreceiveMessage@msg+1,w,c
  7741  001416  22DA               	addwfc	fsr2h,f,c
  7742  001418  CF57 FFDF          	movff	3927,indf2	;volatile
  7743                           
  7744                           ; BSR set to: 15
  7745                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7746  00141C  EE20 F006          	lfsr	2,6
  7747  001420  5001               	movf	CANreceiveMessage@msg,w,c
  7748  001422  26D9               	addwf	fsr2l,f,c
  7749  001424  5002               	movf	CANreceiveMessage@msg+1,w,c
  7750  001426  22DA               	addwfc	fsr2h,f,c
  7751  001428  CF58 FFDF          	movff	3928,indf2	;volatile
  7752                           
  7753                           ; BSR set to: 15
  7754                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7755  00142C  EE20 F007          	lfsr	2,7
  7756  001430  5001               	movf	CANreceiveMessage@msg,w,c
  7757  001432  26D9               	addwf	fsr2l,f,c
  7758  001434  5002               	movf	CANreceiveMessage@msg+1,w,c
  7759  001436  22DA               	addwfc	fsr2h,f,c
  7760  001438  CF59 FFDF          	movff	3929,indf2	;volatile
  7761                           
  7762                           ; BSR set to: 15
  7763                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7764  00143C  EE20 F008          	lfsr	2,8
  7765  001440  5001               	movf	CANreceiveMessage@msg,w,c
  7766  001442  26D9               	addwf	fsr2l,f,c
  7767  001444  5002               	movf	CANreceiveMessage@msg+1,w,c
  7768  001446  22DA               	addwfc	fsr2h,f,c
  7769  001448  CF5A FFDF          	movff	3930,indf2	;volatile
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7773  00144C  EE20 F009          	lfsr	2,9
  7774  001450  5001               	movf	CANreceiveMessage@msg,w,c
  7775  001452  26D9               	addwf	fsr2l,f,c
  7776  001454  5002               	movf	CANreceiveMessage@msg+1,w,c
  7777  001456  22DA               	addwfc	fsr2h,f,c
  7778  001458  CF5B FFDF          	movff	3931,indf2	;volatile
  7779                           
  7780                           ; BSR set to: 15
  7781                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7782  00145C  EE20 F00A          	lfsr	2,10
  7783  001460  5001               	movf	CANreceiveMessage@msg,w,c
  7784  001462  26D9               	addwf	fsr2l,f,c
  7785  001464  5002               	movf	CANreceiveMessage@msg+1,w,c
  7786  001466  22DA               	addwfc	fsr2h,f,c
  7787  001468  CF5C FFDF          	movff	3932,indf2	;volatile
  7788                           
  7789                           ; BSR set to: 15
  7790                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7791  00146C  EE20 F00B          	lfsr	2,11
  7792  001470  5001               	movf	CANreceiveMessage@msg,w,c
  7793  001472  26D9               	addwf	fsr2l,f,c
  7794  001474  5002               	movf	CANreceiveMessage@msg+1,w,c
  7795  001476  22DA               	addwfc	fsr2h,f,c
  7796  001478  CF5D FFDF          	movff	3933,indf2	;volatile
  7797                           
  7798                           ; BSR set to: 15
  7799                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7800  00147C  EE20 F00E          	lfsr	2,14
  7801  001480  5001               	movf	CANreceiveMessage@msg,w,c
  7802  001482  26D9               	addwf	fsr2l,f,c
  7803  001484  5002               	movf	CANreceiveMessage@msg+1,w,c
  7804  001486  22DA               	addwfc	fsr2h,f,c
  7805  001488  010F               	movlb	15	; () banked
  7806  00148A  AD55               	btfss	85,6,b	;volatile
  7807  00148C  D002               	goto	i1u390_20
  7808  00148E  0E01               	movlw	1
  7809  001490  D001               	goto	i1u390_26
  7810  001492                     i1u390_20:
  7811  001492  0E00               	movlw	0
  7812  001494                     i1u390_26:
  7813  001494  6EDF               	movwf	indf2,c
  7814                           
  7815                           ; BSR set to: 15
  7816                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7817  001496  EE20 F00D          	lfsr	2,13
  7818  00149A  5001               	movf	CANreceiveMessage@msg,w,c
  7819  00149C  26D9               	addwf	fsr2l,f,c
  7820  00149E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7821  0014A0  22DA               	addwfc	fsr2h,f,c
  7822  0014A2  010F               	movlb	15	; () banked
  7823  0014A4  5155               	movf	85,w,b	;volatile
  7824  0014A6  0B0F               	andlw	15
  7825  0014A8  6EDF               	movwf	indf2,c
  7826                           
  7827                           ; BSR set to: 15
  7828                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7829  0014AA  EE20 F00C          	lfsr	2,12
  7830  0014AE  5001               	movf	CANreceiveMessage@msg,w,c
  7831  0014B0  26D9               	addwf	fsr2l,f,c
  7832  0014B2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7833  0014B4  22DA               	addwfc	fsr2h,f,c
  7834  0014B6  010F               	movlb	15	; () banked
  7835  0014B8  A752               	btfss	82,3,b	;volatile
  7836  0014BA  D002               	goto	i1u391_20
  7837  0014BC  0E01               	movlw	1
  7838  0014BE  D001               	goto	i1u391_26
  7839  0014C0                     i1u391_20:
  7840  0014C0  0E00               	movlw	0
  7841  0014C2                     i1u391_26:
  7842  0014C2  6EDF               	movwf	indf2,c
  7843                           
  7844                           ; BSR set to: 15
  7845                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7846  0014C4  010F               	movlb	15	; () banked
  7847  0014C6  B752               	btfsc	82,3,b	;volatile
  7848  0014C8  D044               	goto	i1l3584
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;inc\CANlib.h: 559: {
  7852                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7853  0014CA  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7854  0014CE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7855  0014D0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7856  0014D2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7857  0014D4  0E03               	movlw	3
  7858  0014D6                     i1u393_25:
  7859  0014D6  90D8               	bcf	status,0,c
  7860  0014D8  3603               	rlcf	??_CANreceiveMessage,f,c
  7861  0014DA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7862  0014DC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7863  0014DE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7864  0014E0  2EE8               	decfsz	wreg,f,c
  7865  0014E2  D7F9               	goto	i1u393_25
  7866  0014E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7867  0014E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7868  0014EC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7869  0014F0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7870  0014F4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7871  0014F8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7872                           
  7873                           ; BSR set to: 15
  7874                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7875  0014FC  010F               	movlb	15	; () banked
  7876  0014FE  3952               	swapf	82,w,b	;volatile
  7877  001500  42E8               	rrncf	wreg,f,c
  7878  001502  0B07               	andlw	7
  7879  001504  0B07               	andlw	7
  7880  001506  6E0C               	movwf	CANreceiveMessage@tamp,c
  7881                           
  7882                           ; BSR set to: 15
  7883                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7884  001508  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7885  00150C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7886  001510  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7887  001514  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7888  001518  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7889  00151C  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7890  001520  500C               	movf	CANreceiveMessage@tamp,w,c
  7891  001522  2403               	addwf	??_CANreceiveMessage,w,c
  7892  001524  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7893  001526  0E00               	movlw	0
  7894  001528  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7895  00152A  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7896  00152C  0E00               	movlw	0
  7897  00152E  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7898  001530  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7899  001532  0E00               	movlw	0
  7900  001534  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7901  001536  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7902  001538  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7903  00153C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7904  001540  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7905  001544  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7906  001548  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7907  00154C  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7908                           
  7909                           ;inc\CANlib.h: 563: }
  7910  001550  D08D               	goto	i1l3610
  7911  001552                     i1l3584:
  7912                           
  7913                           ; BSR set to: 15
  7914                           ;inc\CANlib.h: 564: else
  7915                           ;inc\CANlib.h: 565: {
  7916                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7917  001552  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7918  001556  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7919  001558  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7920  00155A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7921  00155C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7922  001560  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7923  001564  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7924  001568  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7925  00156C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7926  001570  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7927                           
  7928                           ; BSR set to: 15
  7929                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7930  001574  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7931  001578  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7932  00157A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7933  00157C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7934  00157E  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7935  001582  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7936  001586  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7937  00158A  6A03               	clrf	??_CANreceiveMessage,c
  7938  00158C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7939  001590  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7940  001594  5003               	movf	??_CANreceiveMessage,w,c
  7941  001596  26DE               	addwf	postinc2,f,c
  7942  001598  5004               	movf	??_CANreceiveMessage+1,w,c
  7943  00159A  22DE               	addwfc	postinc2,f,c
  7944  00159C  5005               	movf	??_CANreceiveMessage+2,w,c
  7945  00159E  22DE               	addwfc	postinc2,f,c
  7946  0015A0  5006               	movf	??_CANreceiveMessage+3,w,c
  7947  0015A2  22DE               	addwfc	postinc2,f,c
  7948                           
  7949                           ; BSR set to: 15
  7950                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7951  0015A4  010F               	movlb	15	; () banked
  7952  0015A6  A152               	btfss	82,0,b	;volatile
  7953  0015A8  D00C               	goto	i1l3592
  7954                           
  7955                           ; BSR set to: 15
  7956                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7957  0015AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7958  0015AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7959  0015B2  0E00               	movlw	0
  7960  0015B4  12DE               	iorwf	postinc2,f,c
  7961  0015B6  0E00               	movlw	0
  7962  0015B8  12DE               	iorwf	postinc2,f,c
  7963  0015BA  0E01               	movlw	1
  7964  0015BC  12DE               	iorwf	postinc2,f,c
  7965  0015BE  0E00               	movlw	0
  7966  0015C0  12DE               	iorwf	postinc2,f,c
  7967  0015C2                     i1l3592:
  7968                           
  7969                           ; BSR set to: 15
  7970                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7971  0015C2  010F               	movlb	15	; () banked
  7972  0015C4  A352               	btfss	82,1,b	;volatile
  7973  0015C6  D00C               	goto	i1l3596
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7977  0015C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7978  0015CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7979  0015D0  0E00               	movlw	0
  7980  0015D2  12DE               	iorwf	postinc2,f,c
  7981  0015D4  0E00               	movlw	0
  7982  0015D6  12DE               	iorwf	postinc2,f,c
  7983  0015D8  0E02               	movlw	2
  7984  0015DA  12DE               	iorwf	postinc2,f,c
  7985  0015DC  0E00               	movlw	0
  7986  0015DE  12DE               	iorwf	postinc2,f,c
  7987  0015E0                     i1l3596:
  7988                           
  7989                           ; BSR set to: 15
  7990                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7991  0015E0  010F               	movlb	15	; () banked
  7992  0015E2  AB52               	btfss	82,5,b	;volatile
  7993  0015E4  D00C               	goto	i1l3600
  7994                           
  7995                           ; BSR set to: 15
  7996                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7997  0015E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7998  0015EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7999  0015EE  0E00               	movlw	0
  8000  0015F0  12DE               	iorwf	postinc2,f,c
  8001  0015F2  0E00               	movlw	0
  8002  0015F4  12DE               	iorwf	postinc2,f,c
  8003  0015F6  0E04               	movlw	4
  8004  0015F8  12DE               	iorwf	postinc2,f,c
  8005  0015FA  0E00               	movlw	0
  8006  0015FC  12DE               	iorwf	postinc2,f,c
  8007  0015FE                     i1l3600:
  8008                           
  8009                           ; BSR set to: 15
  8010                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8011  0015FE  010F               	movlb	15	; () banked
  8012  001600  AD52               	btfss	82,6,b	;volatile
  8013  001602  D00C               	goto	i1l3604
  8014                           
  8015                           ; BSR set to: 15
  8016                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8017  001604  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8018  001608  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8019  00160C  0E00               	movlw	0
  8020  00160E  12DE               	iorwf	postinc2,f,c
  8021  001610  0E00               	movlw	0
  8022  001612  12DE               	iorwf	postinc2,f,c
  8023  001614  0E08               	movlw	8
  8024  001616  12DE               	iorwf	postinc2,f,c
  8025  001618  0E00               	movlw	0
  8026  00161A  12DE               	iorwf	postinc2,f,c
  8027  00161C                     i1l3604:
  8028                           
  8029                           ; BSR set to: 15
  8030                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8031  00161C  010F               	movlb	15	; () banked
  8032  00161E  AF52               	btfss	82,7,b	;volatile
  8033  001620  D00C               	goto	i1l3608
  8034                           
  8035                           ; BSR set to: 15
  8036                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8037  001622  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8038  001626  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8039  00162A  0E00               	movlw	0
  8040  00162C  12DE               	iorwf	postinc2,f,c
  8041  00162E  0E00               	movlw	0
  8042  001630  12DE               	iorwf	postinc2,f,c
  8043  001632  0E10               	movlw	16
  8044  001634  12DE               	iorwf	postinc2,f,c
  8045  001636  0E00               	movlw	0
  8046  001638  12DE               	iorwf	postinc2,f,c
  8047  00163A                     i1l3608:
  8048                           
  8049                           ; BSR set to: 15
  8050                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8051  00163A  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8052  00163E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8053  001640  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8054  001642  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8055  001644  0E15               	movlw	21
  8056  001646                     i1u399_25:
  8057  001646  90D8               	bcf	status,0,c
  8058  001648  3603               	rlcf	??_CANreceiveMessage,f,c
  8059  00164A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8060  00164C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8061  00164E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8062  001650  2EE8               	decfsz	wreg,f,c
  8063  001652  D7F9               	goto	i1u399_25
  8064  001654  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8065  001658  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8066  00165C  5003               	movf	??_CANreceiveMessage,w,c
  8067  00165E  12DE               	iorwf	postinc2,f,c
  8068  001660  5004               	movf	??_CANreceiveMessage+1,w,c
  8069  001662  12DE               	iorwf	postinc2,f,c
  8070  001664  5005               	movf	??_CANreceiveMessage+2,w,c
  8071  001666  12DE               	iorwf	postinc2,f,c
  8072  001668  5006               	movf	??_CANreceiveMessage+3,w,c
  8073  00166A  12DE               	iorwf	postinc2,f,c
  8074  00166C                     i1l3610:
  8075                           
  8076                           ; BSR set to: 15
  8077                           ;inc\CANlib.h: 581: }
  8078                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8079  00166C  010F               	movlb	15	; () banked
  8080  00166E  9F50               	bcf	80,7,b	;volatile
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;inc\CANlib.h: 584: return (error);
  8084                           ;	Return value of _CANreceiveMessage is never used
  8085  001670  0012               	return	
  8086  001672                     i1l428:
  8087                           
  8088                           ; BSR set to: 15
  8089                           ;inc\CANlib.h: 585: }
  8090                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8091  001672  AE60               	btfss	3936,7,c	;volatile
  8092  001674  0012               	return	
  8093                           
  8094                           ; BSR set to: 15
  8095                           ;inc\CANlib.h: 588: {
  8096                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8097  001676  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8098  00167A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8099  00167E  6ADE               	clrf	postinc2,c
  8100  001680  6ADE               	clrf	postinc2,c
  8101  001682  6ADE               	clrf	postinc2,c
  8102  001684  6ADD               	clrf	postdec2,c
  8103                           
  8104                           ; BSR set to: 15
  8105                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8106  001686  EE20 F004          	lfsr	2,4
  8107  00168A  5001               	movf	CANreceiveMessage@msg,w,c
  8108  00168C  26D9               	addwf	fsr2l,f,c
  8109  00168E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8110  001690  22DA               	addwfc	fsr2h,f,c
  8111  001692  CF66 FFDF          	movff	3942,indf2	;volatile
  8112                           
  8113                           ; BSR set to: 15
  8114                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8115  001696  EE20 F005          	lfsr	2,5
  8116  00169A  5001               	movf	CANreceiveMessage@msg,w,c
  8117  00169C  26D9               	addwf	fsr2l,f,c
  8118  00169E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8119  0016A0  22DA               	addwfc	fsr2h,f,c
  8120  0016A2  CF67 FFDF          	movff	3943,indf2	;volatile
  8121                           
  8122                           ; BSR set to: 15
  8123                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8124  0016A6  EE20 F006          	lfsr	2,6
  8125  0016AA  5001               	movf	CANreceiveMessage@msg,w,c
  8126  0016AC  26D9               	addwf	fsr2l,f,c
  8127  0016AE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8128  0016B0  22DA               	addwfc	fsr2h,f,c
  8129  0016B2  CF68 FFDF          	movff	3944,indf2	;volatile
  8130                           
  8131                           ; BSR set to: 15
  8132                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8133  0016B6  EE20 F007          	lfsr	2,7
  8134  0016BA  5001               	movf	CANreceiveMessage@msg,w,c
  8135  0016BC  26D9               	addwf	fsr2l,f,c
  8136  0016BE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8137  0016C0  22DA               	addwfc	fsr2h,f,c
  8138  0016C2  CF69 FFDF          	movff	3945,indf2	;volatile
  8139                           
  8140                           ; BSR set to: 15
  8141                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8142  0016C6  EE20 F008          	lfsr	2,8
  8143  0016CA  5001               	movf	CANreceiveMessage@msg,w,c
  8144  0016CC  26D9               	addwf	fsr2l,f,c
  8145  0016CE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8146  0016D0  22DA               	addwfc	fsr2h,f,c
  8147  0016D2  CF6A FFDF          	movff	3946,indf2	;volatile
  8148                           
  8149                           ; BSR set to: 15
  8150                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8151  0016D6  EE20 F009          	lfsr	2,9
  8152  0016DA  5001               	movf	CANreceiveMessage@msg,w,c
  8153  0016DC  26D9               	addwf	fsr2l,f,c
  8154  0016DE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8155  0016E0  22DA               	addwfc	fsr2h,f,c
  8156  0016E2  CF6B FFDF          	movff	3947,indf2	;volatile
  8157                           
  8158                           ; BSR set to: 15
  8159                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8160  0016E6  EE20 F00A          	lfsr	2,10
  8161  0016EA  5001               	movf	CANreceiveMessage@msg,w,c
  8162  0016EC  26D9               	addwf	fsr2l,f,c
  8163  0016EE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8164  0016F0  22DA               	addwfc	fsr2h,f,c
  8165  0016F2  CF6C FFDF          	movff	3948,indf2	;volatile
  8166                           
  8167                           ; BSR set to: 15
  8168                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8169  0016F6  EE20 F00B          	lfsr	2,11
  8170  0016FA  5001               	movf	CANreceiveMessage@msg,w,c
  8171  0016FC  26D9               	addwf	fsr2l,f,c
  8172  0016FE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8173  001700  22DA               	addwfc	fsr2h,f,c
  8174  001702  CF6D FFDF          	movff	3949,indf2	;volatile
  8175                           
  8176                           ; BSR set to: 15
  8177                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8178  001706  EE20 F00E          	lfsr	2,14
  8179  00170A  5001               	movf	CANreceiveMessage@msg,w,c
  8180  00170C  26D9               	addwf	fsr2l,f,c
  8181  00170E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8182  001710  22DA               	addwfc	fsr2h,f,c
  8183  001712  AC65               	btfss	3941,6,c	;volatile
  8184  001714  D002               	goto	i1u401_20
  8185  001716  0E01               	movlw	1
  8186  001718  D001               	goto	i1u401_26
  8187  00171A                     i1u401_20:
  8188  00171A  0E00               	movlw	0
  8189  00171C                     i1u401_26:
  8190  00171C  6EDF               	movwf	indf2,c
  8191                           
  8192                           ; BSR set to: 15
  8193                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8194  00171E  EE20 F00D          	lfsr	2,13
  8195  001722  5001               	movf	CANreceiveMessage@msg,w,c
  8196  001724  26D9               	addwf	fsr2l,f,c
  8197  001726  5002               	movf	CANreceiveMessage@msg+1,w,c
  8198  001728  22DA               	addwfc	fsr2h,f,c
  8199  00172A  5065               	movf	3941,w,c	;volatile
  8200  00172C  0B0F               	andlw	15
  8201  00172E  6EDF               	movwf	indf2,c
  8202                           
  8203                           ; BSR set to: 15
  8204                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8205  001730  EE20 F00C          	lfsr	2,12
  8206  001734  5001               	movf	CANreceiveMessage@msg,w,c
  8207  001736  26D9               	addwf	fsr2l,f,c
  8208  001738  5002               	movf	CANreceiveMessage@msg+1,w,c
  8209  00173A  22DA               	addwfc	fsr2h,f,c
  8210  00173C  A662               	btfss	3938,3,c	;volatile
  8211  00173E  D002               	goto	i1u402_20
  8212  001740  0E01               	movlw	1
  8213  001742  D001               	goto	i1u402_26
  8214  001744                     i1u402_20:
  8215  001744  0E00               	movlw	0
  8216  001746                     i1u402_26:
  8217  001746  6EDF               	movwf	indf2,c
  8218                           
  8219                           ; BSR set to: 15
  8220                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8221  001748  B662               	btfsc	3938,3,c	;volatile
  8222  00174A  D043               	goto	i1l3646
  8223                           
  8224                           ; BSR set to: 15
  8225                           ;inc\CANlib.h: 606: {
  8226                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8227  00174C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8228  001750  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8229  001752  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8230  001754  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8231  001756  0E03               	movlw	3
  8232  001758                     i1u404_25:
  8233  001758  90D8               	bcf	status,0,c
  8234  00175A  3603               	rlcf	??_CANreceiveMessage,f,c
  8235  00175C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8236  00175E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8237  001760  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8238  001762  2EE8               	decfsz	wreg,f,c
  8239  001764  D7F9               	goto	i1u404_25
  8240  001766  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8241  00176A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8242  00176E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8243  001772  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8244  001776  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8245  00177A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8246                           
  8247                           ; BSR set to: 15
  8248                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8249  00177E  3862               	swapf	3938,w,c	;volatile
  8250  001780  42E8               	rrncf	wreg,f,c
  8251  001782  0B07               	andlw	7
  8252  001784  0B07               	andlw	7
  8253  001786  6E0C               	movwf	CANreceiveMessage@tamp,c
  8254                           
  8255                           ; BSR set to: 15
  8256                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8257  001788  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8258  00178C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8259  001790  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8260  001794  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8261  001798  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8262  00179C  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8263  0017A0  500C               	movf	CANreceiveMessage@tamp,w,c
  8264  0017A2  2403               	addwf	??_CANreceiveMessage,w,c
  8265  0017A4  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8266  0017A6  0E00               	movlw	0
  8267  0017A8  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8268  0017AA  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8269  0017AC  0E00               	movlw	0
  8270  0017AE  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8271  0017B0  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8272  0017B2  0E00               	movlw	0
  8273  0017B4  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8274  0017B6  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8275  0017B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8276  0017BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8277  0017C0  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8278  0017C4  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8279  0017C8  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8280  0017CC  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8281                           
  8282                           ;inc\CANlib.h: 610: }
  8283  0017D0  D088               	goto	i1l3672
  8284  0017D2                     i1l3646:
  8285                           
  8286                           ; BSR set to: 15
  8287                           ;inc\CANlib.h: 611: else
  8288                           ;inc\CANlib.h: 612: {
  8289                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8290  0017D2  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8291  0017D6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8292  0017D8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8293  0017DA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8294  0017DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8295  0017E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8296  0017E4  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8297  0017E8  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8298  0017EC  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8299  0017F0  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8300                           
  8301                           ; BSR set to: 15
  8302                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8303  0017F4  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8304  0017F8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8305  0017FA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8306  0017FC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8307  0017FE  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8308  001802  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8309  001806  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8310  00180A  6A03               	clrf	??_CANreceiveMessage,c
  8311  00180C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8312  001810  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8313  001814  5003               	movf	??_CANreceiveMessage,w,c
  8314  001816  26DE               	addwf	postinc2,f,c
  8315  001818  5004               	movf	??_CANreceiveMessage+1,w,c
  8316  00181A  22DE               	addwfc	postinc2,f,c
  8317  00181C  5005               	movf	??_CANreceiveMessage+2,w,c
  8318  00181E  22DE               	addwfc	postinc2,f,c
  8319  001820  5006               	movf	??_CANreceiveMessage+3,w,c
  8320  001822  22DE               	addwfc	postinc2,f,c
  8321                           
  8322                           ; BSR set to: 15
  8323                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8324  001824  A062               	btfss	3938,0,c	;volatile
  8325  001826  D00C               	goto	i1l3654
  8326                           
  8327                           ; BSR set to: 15
  8328                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8329  001828  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8330  00182C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8331  001830  0E00               	movlw	0
  8332  001832  12DE               	iorwf	postinc2,f,c
  8333  001834  0E00               	movlw	0
  8334  001836  12DE               	iorwf	postinc2,f,c
  8335  001838  0E01               	movlw	1
  8336  00183A  12DE               	iorwf	postinc2,f,c
  8337  00183C  0E00               	movlw	0
  8338  00183E  12DE               	iorwf	postinc2,f,c
  8339  001840                     i1l3654:
  8340                           
  8341                           ; BSR set to: 15
  8342                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8343  001840  A262               	btfss	3938,1,c	;volatile
  8344  001842  D00C               	goto	i1l3658
  8345                           
  8346                           ; BSR set to: 15
  8347                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8348  001844  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8349  001848  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8350  00184C  0E00               	movlw	0
  8351  00184E  12DE               	iorwf	postinc2,f,c
  8352  001850  0E00               	movlw	0
  8353  001852  12DE               	iorwf	postinc2,f,c
  8354  001854  0E02               	movlw	2
  8355  001856  12DE               	iorwf	postinc2,f,c
  8356  001858  0E00               	movlw	0
  8357  00185A  12DE               	iorwf	postinc2,f,c
  8358  00185C                     i1l3658:
  8359                           
  8360                           ; BSR set to: 15
  8361                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8362  00185C  AA62               	btfss	3938,5,c	;volatile
  8363  00185E  D00C               	goto	i1l3662
  8364                           
  8365                           ; BSR set to: 15
  8366                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8367  001860  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8368  001864  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8369  001868  0E00               	movlw	0
  8370  00186A  12DE               	iorwf	postinc2,f,c
  8371  00186C  0E00               	movlw	0
  8372  00186E  12DE               	iorwf	postinc2,f,c
  8373  001870  0E04               	movlw	4
  8374  001872  12DE               	iorwf	postinc2,f,c
  8375  001874  0E00               	movlw	0
  8376  001876  12DE               	iorwf	postinc2,f,c
  8377  001878                     i1l3662:
  8378                           
  8379                           ; BSR set to: 15
  8380                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8381  001878  AC62               	btfss	3938,6,c	;volatile
  8382  00187A  D00C               	goto	i1l3666
  8383                           
  8384                           ; BSR set to: 15
  8385                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8386  00187C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8387  001880  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8388  001884  0E00               	movlw	0
  8389  001886  12DE               	iorwf	postinc2,f,c
  8390  001888  0E00               	movlw	0
  8391  00188A  12DE               	iorwf	postinc2,f,c
  8392  00188C  0E08               	movlw	8
  8393  00188E  12DE               	iorwf	postinc2,f,c
  8394  001890  0E00               	movlw	0
  8395  001892  12DE               	iorwf	postinc2,f,c
  8396  001894                     i1l3666:
  8397                           
  8398                           ; BSR set to: 15
  8399                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8400  001894  AE62               	btfss	3938,7,c	;volatile
  8401  001896  D00C               	goto	i1l3670
  8402                           
  8403                           ; BSR set to: 15
  8404                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8405  001898  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8406  00189C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8407  0018A0  0E00               	movlw	0
  8408  0018A2  12DE               	iorwf	postinc2,f,c
  8409  0018A4  0E00               	movlw	0
  8410  0018A6  12DE               	iorwf	postinc2,f,c
  8411  0018A8  0E10               	movlw	16
  8412  0018AA  12DE               	iorwf	postinc2,f,c
  8413  0018AC  0E00               	movlw	0
  8414  0018AE  12DE               	iorwf	postinc2,f,c
  8415  0018B0                     i1l3670:
  8416                           
  8417                           ; BSR set to: 15
  8418                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8419  0018B0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8420  0018B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8421  0018B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8422  0018B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8423  0018BA  0E15               	movlw	21
  8424  0018BC                     i1u410_25:
  8425  0018BC  90D8               	bcf	status,0,c
  8426  0018BE  3603               	rlcf	??_CANreceiveMessage,f,c
  8427  0018C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8428  0018C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8429  0018C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8430  0018C6  2EE8               	decfsz	wreg,f,c
  8431  0018C8  D7F9               	goto	i1u410_25
  8432  0018CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8433  0018CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8434  0018D2  5003               	movf	??_CANreceiveMessage,w,c
  8435  0018D4  12DE               	iorwf	postinc2,f,c
  8436  0018D6  5004               	movf	??_CANreceiveMessage+1,w,c
  8437  0018D8  12DE               	iorwf	postinc2,f,c
  8438  0018DA  5005               	movf	??_CANreceiveMessage+2,w,c
  8439  0018DC  12DE               	iorwf	postinc2,f,c
  8440  0018DE  5006               	movf	??_CANreceiveMessage+3,w,c
  8441  0018E0  12DE               	iorwf	postinc2,f,c
  8442  0018E2                     i1l3672:
  8443                           
  8444                           ; BSR set to: 15
  8445                           ;inc\CANlib.h: 629: }
  8446                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8447  0018E2  9E60               	bcf	3936,7,c	;volatile
  8448                           
  8449                           ; BSR set to: 15
  8450                           ;inc\CANlib.h: 632: return (error);
  8451                           ;	Return value of _CANreceiveMessage is never used
  8452  0018E4  0012               	return	
  8453  0018E6                     __end_of_CANreceiveMessage:
  8454                           	opt stack 0
  8455                           pclatu	equ	0xFFB
  8456                           pclath	equ	0xFFA
  8457                           tblptru	equ	0xFF8
  8458                           tblptrh	equ	0xFF7
  8459                           tblptrl	equ	0xFF6
  8460                           tablat	equ	0xFF5
  8461                           prodh	equ	0xFF4
  8462                           prodl	equ	0xFF3
  8463                           intcon	equ	0xFF2
  8464                           intcon2	equ	0xFF1
  8465                           intcon3	equ	0xFF0
  8466                           postinc0	equ	0xFEE
  8467                           fsr0h	equ	0xFEA
  8468                           fsr0l	equ	0xFE9
  8469                           wreg	equ	0xFE8
  8470                           postdec1	equ	0xFE5
  8471                           fsr1h	equ	0xFE2
  8472                           fsr1l	equ	0xFE1
  8473                           bsr	equ	0xFE0
  8474                           indf2	equ	0xFDF
  8475                           postinc2	equ	0xFDE
  8476                           postdec2	equ	0xFDD
  8477                           fsr2h	equ	0xFDA
  8478                           fsr2l	equ	0xFD9
  8479                           status	equ	0xFD8
  8480                           
  8481 ;; *************** function _CANisRxReady *****************
  8482 ;; Defined at:
  8483 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      unsigned char 
  8490 ;; Registers used:
  8491 ;;		wreg, status,2
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8497 ;;      Params:         0       0       0       0
  8498 ;;      Locals:         1       0       0       0
  8499 ;;      Temps:          0       0       0       0
  8500 ;;      Totals:         1       0       0       0
  8501 ;;Total ram usage:        1 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    2
  8504 ;; This function calls:
  8505 ;;		Nothing
  8506 ;; This function is called by:
  8507 ;;		_ISR_Bassa
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text18
  8512  002A80                     __ptext18:
  8513                           	opt stack 0
  8514  002A80                     _CANisRxReady:
  8515                           	opt stack 24
  8516                           
  8517                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8518                           
  8519                           ; BSR set to: 15
  8520                           ;incstack = 0
  8521  002A80  0E01               	movlw	1
  8522  002A82  6E01               	movwf	_CANisRxReady$3280,c
  8523  002A84  BE60               	btfsc	3936,7,c	;volatile
  8524  002A86  D005               	goto	i1l579
  8525  002A88  010F               	movlb	15	; () banked
  8526  002A8A  BF50               	btfsc	80,7,b	;volatile
  8527  002A8C  D002               	goto	i1l579
  8528                           
  8529                           ; BSR set to: 15
  8530  002A8E  0E00               	movlw	0
  8531  002A90  6E01               	movwf	_CANisRxReady$3280,c
  8532  002A92                     i1l579:
  8533  002A92  5001               	movf	_CANisRxReady$3280,w,c
  8534  002A94  0012               	return	
  8535  002A96                     __end_of_CANisRxReady:
  8536                           	opt stack 0
  8537                           pclatu	equ	0xFFB
  8538                           pclath	equ	0xFFA
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           prodh	equ	0xFF4
  8544                           prodl	equ	0xFF3
  8545                           intcon	equ	0xFF2
  8546                           intcon2	equ	0xFF1
  8547                           intcon3	equ	0xFF0
  8548                           postinc0	equ	0xFEE
  8549                           fsr0h	equ	0xFEA
  8550                           fsr0l	equ	0xFE9
  8551                           wreg	equ	0xFE8
  8552                           postdec1	equ	0xFE5
  8553                           fsr1h	equ	0xFE2
  8554                           fsr1l	equ	0xFE1
  8555                           bsr	equ	0xFE0
  8556                           indf2	equ	0xFDF
  8557                           postinc2	equ	0xFDE
  8558                           postdec2	equ	0xFDD
  8559                           fsr2h	equ	0xFDA
  8560                           fsr2l	equ	0xFD9
  8561                           status	equ	0xFD8
  8562                           
  8563 ;; *************** function _ISR_Alta *****************
  8564 ;; Defined at:
  8565 ;;		line 147 in file "ABS_Code.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;		None
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;		None               void
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8579 ;;      Params:         0       0       0       0
  8580 ;;      Locals:         0       0       0       0
  8581 ;;      Temps:          0      22       0       0
  8582 ;;      Totals:         0      22       0       0
  8583 ;;Total ram usage:       22 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:    1
  8586 ;; This function calls:
  8587 ;;		_WriteTimer0
  8588 ;;		___lwdiv
  8589 ;;		i2___awdiv
  8590 ;;		i2___wmul
  8591 ;; This function is called by:
  8592 ;;		Interrupt level 2
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	intcode
  8597  000008                     __pintcode:
  8598                           	opt stack 0
  8599  000008                     _ISR_Alta:
  8600                           	opt stack 24
  8601                           
  8602                           ;incstack = 0
  8603  000008  823F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8604  00000A  CFFA F0BD          	movff	pclath,??_ISR_Alta+8
  8605  00000E  CFFB F0BE          	movff	pclatu,??_ISR_Alta+9
  8606  000012  ED99  F00F         	call	int_func,f	;refresh shadow registers
  8607                           pclatu	equ	0xFFB
  8608                           pclath	equ	0xFFA
  8609                           tblptru	equ	0xFF8
  8610                           tblptrh	equ	0xFF7
  8611                           tblptrl	equ	0xFF6
  8612                           tablat	equ	0xFF5
  8613                           prodh	equ	0xFF4
  8614                           prodl	equ	0xFF3
  8615                           intcon	equ	0xFF2
  8616                           intcon2	equ	0xFF1
  8617                           intcon3	equ	0xFF0
  8618                           postinc0	equ	0xFEE
  8619                           fsr0h	equ	0xFEA
  8620                           fsr0l	equ	0xFE9
  8621                           wreg	equ	0xFE8
  8622                           postdec1	equ	0xFE5
  8623                           fsr1h	equ	0xFE2
  8624                           fsr1l	equ	0xFE1
  8625                           bsr	equ	0xFE0
  8626                           indf2	equ	0xFDF
  8627                           postinc2	equ	0xFDE
  8628                           postdec2	equ	0xFDD
  8629                           fsr2h	equ	0xFDA
  8630                           fsr2l	equ	0xFD9
  8631                           status	equ	0xFD8
  8632                           
  8633                           	psect	intcode_body
  8634  001F32                     __pintcode_body:
  8635                           	opt stack 24
  8636  001F32                     int_func:
  8637                           	opt stack 24
  8638  001F32  0006               	pop		; remove dummy address from shadow register refresh
  8639  001F34  CFE9 F0BF          	movff	fsr0l,??_ISR_Alta+10
  8640  001F38  CFEA F0C0          	movff	fsr0h,??_ISR_Alta+11
  8641  001F3C  CFE1 F0C1          	movff	fsr1l,??_ISR_Alta+12
  8642  001F40  CFE2 F0C2          	movff	fsr1h,??_ISR_Alta+13
  8643  001F44  CFD9 F0C3          	movff	fsr2l,??_ISR_Alta+14
  8644  001F48  CFDA F0C4          	movff	fsr2h,??_ISR_Alta+15
  8645  001F4C  CFF3 F0C5          	movff	prodl,??_ISR_Alta+16
  8646  001F50  CFF4 F0C6          	movff	prodh,??_ISR_Alta+17
  8647  001F54  CFF6 F0C7          	movff	tblptrl,??_ISR_Alta+18
  8648  001F58  CFF7 F0C8          	movff	tblptrh,??_ISR_Alta+19
  8649  001F5C  CFF8 F0C9          	movff	tblptru,??_ISR_Alta+20
  8650  001F60  CFF5 F0CA          	movff	tablat,??_ISR_Alta+21
  8651                           
  8652                           ;ABS_Code.c: 149: if (INTCONbits.TMR0IF == 1) {
  8653  001F64  A4F2               	btfss	intcon,2,c	;volatile
  8654  001F66  D0AB               	goto	i2l4930
  8655                           
  8656                           ;ABS_Code.c: 150: PORTCbits.RC0 = ~PORTCbits.RC0;
  8657  001F68  A082               	btfss	3970,0,c	;volatile
  8658  001F6A  D002               	goto	i2u601_40
  8659  001F6C  0E01               	movlw	1
  8660  001F6E  D001               	goto	i2u601_46
  8661  001F70                     i2u601_40:
  8662  001F70  0E00               	movlw	0
  8663  001F72                     i2u601_46:
  8664  001F72  0AFF               	xorlw	255
  8665  001F74  0100               	movlb	0	; () banked
  8666  001F76  6FB5               	movwf	??_ISR_Alta& (0+255),b
  8667  001F78  5082               	movf	3970,w,c	;volatile
  8668  001F7A  0100               	movlb	0	; () banked
  8669  001F7C  19B5               	xorwf	??_ISR_Alta& (0+255),w,b
  8670  001F7E  0BFE               	andlw	-2
  8671  001F80  19B5               	xorwf	??_ISR_Alta& (0+255),w,b
  8672  001F82  6E82               	movwf	3970,c	;volatile
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;ABS_Code.c: 151: if (PORTCbits.RC0 == 1) {
  8676  001F84  A082               	btfss	3970,0,c	;volatile
  8677  001F86  D094               	goto	i2l4926
  8678                           
  8679                           ; BSR set to: 0
  8680                           ;ABS_Code.c: 152: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8681  001F88  0E40               	movlw	64
  8682  001F8A  0100               	movlb	0	; () banked
  8683  001F8C  6FB5               	movwf	??_ISR_Alta& (0+255),b
  8684  001F8E  0E06               	movlw	6
  8685  001F90  0100               	movlb	0	; () banked
  8686  001F92  6FB6               	movwf	(??_ISR_Alta+1)& (0+255),b
  8687  001F94  C03C  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8688  001F98  6A1F               	clrf	i2___wmul@multiplier+1,c
  8689  001F9A  0E05               	movlw	5
  8690  001F9C  6E21               	movwf	i2___wmul@multiplicand+1,c
  8691  001F9E  0E78               	movlw	120
  8692  001FA0  6E20               	movwf	i2___wmul@multiplicand,c
  8693  001FA2  EC10  F015         	call	i2___wmul	;wreg free
  8694  001FA6  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8695  001FAA  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8696  001FAE  0E00               	movlw	0
  8697  001FB0  6E27               	movwf	i2___awdiv@divisor+1,c
  8698  001FB2  0EB4               	movlw	180
  8699  001FB4  6E26               	movwf	i2___awdiv@divisor,c
  8700  001FB6  EC01  F014         	call	i2___awdiv	;wreg free
  8701  001FBA  90D8               	bcf	status,0,c
  8702  001FBC  3624               	rlcf	?i2___awdiv,f,c
  8703  001FBE  3625               	rlcf	?i2___awdiv+1,f,c
  8704  001FC0  0100               	movlb	0	; () banked
  8705  001FC2  51B5               	movf	??_ISR_Alta& (0+255),w,b
  8706  001FC4  2624               	addwf	?i2___awdiv,f,c
  8707  001FC6  0100               	movlb	0	; () banked
  8708  001FC8  51B6               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8709  001FCA  2225               	addwfc	?i2___awdiv+1,f,c
  8710  001FCC  C024  F034         	movff	?i2___awdiv,_timer_on	;volatile
  8711  001FD0  C025  F035         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8712  001FD4  0E00               	movlw	0
  8713  001FD6  BE35               	btfsc	_timer_on+1,7,c	;volatile
  8714  001FD8  0EFF               	movlw	-1
  8715  001FDA  6E36               	movwf	_timer_on+2,c	;volatile
  8716  001FDC  6E37               	movwf	_timer_on+3,c	;volatile
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;ABS_Code.c: 153: timer_off = 65536 - (40000 - timer_on);
  8720  001FDE  C034  F0B5         	movff	_timer_on,??_ISR_Alta	;volatile
  8721  001FE2  C035  F0B6         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8722  001FE6  C036  F0B7         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8723  001FEA  C037  F0B8         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8724  001FEE  0100               	movlb	0	; () banked
  8725  001FF0  1FB5               	comf	??_ISR_Alta& (0+255),f,b
  8726  001FF2  1FB6               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8727  001FF4  1FB7               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8728  001FF6  1FB8               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8729  001FF8  2BB5               	incf	??_ISR_Alta& (0+255),f,b
  8730  001FFA  0E00               	movlw	0
  8731  001FFC  23B6               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8732  001FFE  23B7               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8733  002000  23B8               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8734  002002  0E40               	movlw	64
  8735  002004  0100               	movlb	0	; () banked
  8736  002006  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8737  002008  0100               	movlb	0	; () banked
  8738  00200A  6FB9               	movwf	(??_ISR_Alta+4)& (0+255),b
  8739  00200C  0E9C               	movlw	156
  8740  00200E  0100               	movlb	0	; () banked
  8741  002010  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8742  002012  0100               	movlb	0	; () banked
  8743  002014  6FBA               	movwf	(??_ISR_Alta+5)& (0+255),b
  8744  002016  0E00               	movlw	0
  8745  002018  0100               	movlb	0	; () banked
  8746  00201A  21B7               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8747  00201C  0100               	movlb	0	; () banked
  8748  00201E  6FBB               	movwf	(??_ISR_Alta+6)& (0+255),b
  8749  002020  0E00               	movlw	0
  8750  002022  0100               	movlb	0	; () banked
  8751  002024  21B8               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8752  002026  0100               	movlb	0	; () banked
  8753  002028  6FBC               	movwf	(??_ISR_Alta+7)& (0+255),b
  8754  00202A  0100               	movlb	0	; () banked
  8755  00202C  1FB9               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8756  00202E  1FBA               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8757  002030  1FBB               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8758  002032  1FBC               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8759  002034  2BB9               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8760  002036  0E00               	movlw	0
  8761  002038  23BA               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8762  00203A  23BB               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8763  00203C  23BC               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8764  00203E  0E00               	movlw	0
  8765  002040  0100               	movlb	0	; () banked
  8766  002042  25B9               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8767  002044  6E30               	movwf	_timer_off,c	;volatile
  8768  002046  0E00               	movlw	0
  8769  002048  0100               	movlb	0	; () banked
  8770  00204A  21BA               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8771  00204C  6E31               	movwf	_timer_off+1,c	;volatile
  8772  00204E  0E01               	movlw	1
  8773  002050  0100               	movlb	0	; () banked
  8774  002052  21BB               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8775  002054  6E32               	movwf	_timer_off+2,c	;volatile
  8776  002056  0E00               	movlw	0
  8777  002058  0100               	movlb	0	; () banked
  8778  00205A  21BC               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8779  00205C  6E33               	movwf	_timer_off+3,c	;volatile
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;ABS_Code.c: 154: timer_on = 65536 - timer_on;
  8783  00205E  C034  F0B5         	movff	_timer_on,??_ISR_Alta	;volatile
  8784  002062  C035  F0B6         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8785  002066  C036  F0B7         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8786  00206A  C037  F0B8         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8787  00206E  0100               	movlb	0	; () banked
  8788  002070  1FB5               	comf	??_ISR_Alta& (0+255),f,b
  8789  002072  1FB6               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8790  002074  1FB7               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8791  002076  1FB8               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8792  002078  2BB5               	incf	??_ISR_Alta& (0+255),f,b
  8793  00207A  0E00               	movlw	0
  8794  00207C  23B6               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8795  00207E  23B7               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8796  002080  23B8               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8797  002082  0E00               	movlw	0
  8798  002084  0100               	movlb	0	; () banked
  8799  002086  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8800  002088  6E34               	movwf	_timer_on,c	;volatile
  8801  00208A  0E00               	movlw	0
  8802  00208C  0100               	movlb	0	; () banked
  8803  00208E  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8804  002090  6E35               	movwf	_timer_on+1,c	;volatile
  8805  002092  0E01               	movlw	1
  8806  002094  0100               	movlb	0	; () banked
  8807  002096  21B7               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8808  002098  6E36               	movwf	_timer_on+2,c	;volatile
  8809  00209A  0E00               	movlw	0
  8810  00209C  0100               	movlb	0	; () banked
  8811  00209E  21B8               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8812  0020A0  6E37               	movwf	_timer_on+3,c	;volatile
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;ABS_Code.c: 155: WriteTimer0(timer_on);
  8816  0020A2  C034  F01E         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8817  0020A6  C035  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8818  0020AA  EC4B  F015         	call	_WriteTimer0	;wreg free
  8819                           
  8820                           ;ABS_Code.c: 156: } else {
  8821  0020AE  D006               	goto	i2l4928
  8822  0020B0                     i2l4926:
  8823                           
  8824                           ;ABS_Code.c: 157: WriteTimer0(timer_off);
  8825  0020B0  C030  F01E         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8826  0020B4  C031  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8827  0020B8  EC4B  F015         	call	_WriteTimer0	;wreg free
  8828  0020BC                     i2l4928:
  8829                           
  8830                           ;ABS_Code.c: 158: }
  8831                           ;ABS_Code.c: 159: INTCONbits.TMR0IF = 0;
  8832  0020BC  94F2               	bcf	intcon,2,c	;volatile
  8833  0020BE                     i2l4930:
  8834                           
  8835                           ;ABS_Code.c: 160: }
  8836                           ;ABS_Code.c: 163: if (INTCONbits.INT0IF == 1) {
  8837  0020BE  A2F2               	btfss	intcon,1,c	;volatile
  8838  0020C0  D036               	goto	i2l4958
  8839                           
  8840                           ;ABS_Code.c: 164: if (x == 0) {
  8841  0020C2  B23E               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8842  0020C4  D006               	goto	i2l4938
  8843                           
  8844                           ;ABS_Code.c: 165: TMR1H = 0x00;
  8845  0020C6  0E00               	movlw	0
  8846  0020C8  6ECF               	movwf	4047,c	;volatile
  8847                           
  8848                           ;ABS_Code.c: 166: TMR1L = 0x00;
  8849  0020CA  0E00               	movlw	0
  8850  0020CC  6ECE               	movwf	4046,c	;volatile
  8851                           
  8852                           ;ABS_Code.c: 167: x = 1;
  8853  0020CE  823E               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8854                           
  8855                           ;ABS_Code.c: 168: } else {
  8856  0020D0  D02D               	goto	i2l4956
  8857  0020D2                     i2l4938:
  8858                           
  8859                           ;ABS_Code.c: 169: gap_time_1 = (TMR1H << 8) + TMR1L;
  8860  0020D2  50CF               	movf	4047,w,c	;volatile
  8861  0020D4  0100               	movlb	0	; () banked
  8862  0020D6  6FB6               	movwf	(??_ISR_Alta+1)& (0+255),b
  8863  0020D8  6BB5               	clrf	??_ISR_Alta& (0+255),b
  8864  0020DA  50CE               	movf	4046,w,c	;volatile
  8865  0020DC  0100               	movlb	0	; () banked
  8866  0020DE  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8867  0020E0  6E38               	movwf	_gap_time_1,c	;volatile
  8868  0020E2  0E00               	movlw	0
  8869  0020E4  0100               	movlb	0	; () banked
  8870  0020E6  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8871  0020E8  6E39               	movwf	_gap_time_1+1,c	;volatile
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;ABS_Code.c: 170: gap_time_1 = gap_time_1 / 500;
  8875  0020EA  C038  F01E         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8876  0020EE  C039  F01F         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8877  0020F2  0E01               	movlw	1
  8878  0020F4  6E21               	movwf	___lwdiv@divisor+1,c
  8879  0020F6  0EF4               	movlw	244
  8880  0020F8  6E20               	movwf	___lwdiv@divisor,c
  8881  0020FA  EC8A  F014         	call	___lwdiv	;wreg free
  8882  0020FE  C01E  F038         	movff	?___lwdiv,_gap_time_1	;volatile
  8883  002102  C01F  F039         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8884                           
  8885                           ;ABS_Code.c: 171: ENC1_measure = 1;
  8886  002106  803D               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8887                           
  8888                           ;ABS_Code.c: 172: TMR1H = 0x00;
  8889  002108  0E00               	movlw	0
  8890  00210A  6ECF               	movwf	4047,c	;volatile
  8891                           
  8892                           ;ABS_Code.c: 173: TMR1H = 0x00;
  8893  00210C  0E00               	movlw	0
  8894  00210E  6ECF               	movwf	4047,c	;volatile
  8895                           
  8896                           ;ABS_Code.c: 174: if (count_flag == 1) {
  8897  002110  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8898  002112  D007               	goto	i2l4952
  8899                           
  8900                           ;ABS_Code.c: 175: int_counter_1++;
  8901  002114  0E01               	movlw	1
  8902  002116  0100               	movlb	0	; () banked
  8903  002118  2764               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8904  00211A  0E00               	movlw	0
  8905  00211C  2365               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8906  00211E  2366               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8907  002120  2367               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8908  002122                     i2l4952:
  8909                           
  8910                           ;ABS_Code.c: 176: }
  8911                           ;ABS_Code.c: 177: if (distance_set_flag == 1) {
  8912  002122  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  8913  002124  D003               	goto	i2l4956
  8914                           
  8915                           ;ABS_Code.c: 178: distance_set_counter_1++;
  8916  002126  0100               	movlb	0	; () banked
  8917  002128  4B7E               	infsnz	_distance_set_counter_1& (0+255),f,b	;volatile
  8918  00212A  2B7F               	incf	(_distance_set_counter_1+1)& (0+255),f,b	;volatile
  8919  00212C                     i2l4956:
  8920                           
  8921                           ;ABS_Code.c: 179: }
  8922                           ;ABS_Code.c: 180: }
  8923                           ;ABS_Code.c: 181: INTCONbits.INT0IF = 0;
  8924  00212C  92F2               	bcf	intcon,1,c	;volatile
  8925  00212E                     i2l4958:
  8926                           
  8927                           ;ABS_Code.c: 182: }
  8928                           ;ABS_Code.c: 185: if (INTCON3bits.INT1IF == 1) {
  8929  00212E  A0F0               	btfss	intcon3,0,c	;volatile
  8930  002130  D036               	goto	i2l693
  8931                           
  8932                           ;ABS_Code.c: 186: if (y == 0) {
  8933  002132  B43E               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  8934  002134  D006               	goto	i2l4966
  8935                           
  8936                           ;ABS_Code.c: 187: TMR3H = 0x00;
  8937  002136  0E00               	movlw	0
  8938  002138  6EB3               	movwf	4019,c	;volatile
  8939                           
  8940                           ;ABS_Code.c: 188: TMR3L = 0x00;
  8941  00213A  0E00               	movlw	0
  8942  00213C  6EB2               	movwf	4018,c	;volatile
  8943                           
  8944                           ;ABS_Code.c: 189: y = 1;
  8945  00213E  843E               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  8946                           
  8947                           ;ABS_Code.c: 190: } else {
  8948  002140  D02D               	goto	i2l4984
  8949  002142                     i2l4966:
  8950                           
  8951                           ;ABS_Code.c: 191: gap_time_2 = (TMR3H << 8) + TMR3L;
  8952  002142  50B3               	movf	4019,w,c	;volatile
  8953  002144  0100               	movlb	0	; () banked
  8954  002146  6FB6               	movwf	(??_ISR_Alta+1)& (0+255),b
  8955  002148  6BB5               	clrf	??_ISR_Alta& (0+255),b
  8956  00214A  50B2               	movf	4018,w,c	;volatile
  8957  00214C  0100               	movlb	0	; () banked
  8958  00214E  25B5               	addwf	??_ISR_Alta& (0+255),w,b
  8959  002150  6E3A               	movwf	_gap_time_2,c	;volatile
  8960  002152  0E00               	movlw	0
  8961  002154  0100               	movlb	0	; () banked
  8962  002156  21B6               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8963  002158  6E3B               	movwf	_gap_time_2+1,c	;volatile
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;ABS_Code.c: 192: gap_time_2 = gap_time_2 / 500;
  8967  00215A  C03A  F01E         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  8968  00215E  C03B  F01F         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  8969  002162  0E01               	movlw	1
  8970  002164  6E21               	movwf	___lwdiv@divisor+1,c
  8971  002166  0EF4               	movlw	244
  8972  002168  6E20               	movwf	___lwdiv@divisor,c
  8973  00216A  EC8A  F014         	call	___lwdiv	;wreg free
  8974  00216E  C01E  F03A         	movff	?___lwdiv,_gap_time_2	;volatile
  8975  002172  C01F  F03B         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  8976                           
  8977                           ;ABS_Code.c: 193: ENC2_measure = 1;
  8978  002176  823D               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  8979                           
  8980                           ;ABS_Code.c: 194: TMR3H = 0x00;
  8981  002178  0E00               	movlw	0
  8982  00217A  6EB3               	movwf	4019,c	;volatile
  8983                           
  8984                           ;ABS_Code.c: 195: TMR3H = 0x00;
  8985  00217C  0E00               	movlw	0
  8986  00217E  6EB3               	movwf	4019,c	;volatile
  8987                           
  8988                           ;ABS_Code.c: 196: if (count_flag == 1) {
  8989  002180  AA3D               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8990  002182  D007               	goto	i2l4980
  8991                           
  8992                           ;ABS_Code.c: 197: int_counter_2++;
  8993  002184  0E01               	movlw	1
  8994  002186  0100               	movlb	0	; () banked
  8995  002188  2768               	addwf	_int_counter_2& (0+255),f,b	;volatile
  8996  00218A  0E00               	movlw	0
  8997  00218C  2369               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  8998  00218E  236A               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  8999  002190  236B               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9000  002192                     i2l4980:
  9001                           
  9002                           ;ABS_Code.c: 198: }
  9003                           ;ABS_Code.c: 199: if (distance_set_flag == 1) {
  9004  002192  AE3D               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c
  9005  002194  D003               	goto	i2l4984
  9006                           
  9007                           ;ABS_Code.c: 200: distance_set_counter_2++;
  9008  002196  0100               	movlb	0	; () banked
  9009  002198  4B80               	infsnz	_distance_set_counter_2& (0+255),f,b	;volatile
  9010  00219A  2B81               	incf	(_distance_set_counter_2+1)& (0+255),f,b	;volatile
  9011  00219C                     i2l4984:
  9012                           
  9013                           ;ABS_Code.c: 201: }
  9014                           ;ABS_Code.c: 202: }
  9015                           ;ABS_Code.c: 203: INTCON3bits.INT1IF = 0;
  9016  00219C  90F0               	bcf	intcon3,0,c	;volatile
  9017  00219E                     i2l693:
  9018  00219E  C0CA  FFF5         	movff	??_ISR_Alta+21,tablat
  9019  0021A2  C0C9  FFF8         	movff	??_ISR_Alta+20,tblptru
  9020  0021A6  C0C8  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9021  0021AA  C0C7  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9022  0021AE  C0C6  FFF4         	movff	??_ISR_Alta+17,prodh
  9023  0021B2  C0C5  FFF3         	movff	??_ISR_Alta+16,prodl
  9024  0021B6  C0C4  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9025  0021BA  C0C3  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9026  0021BE  C0C2  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9027  0021C2  C0C1  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9028  0021C6  C0C0  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9029  0021CA  C0BF  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9030  0021CE  C0BE  FFFB         	movff	??_ISR_Alta+9,pclatu
  9031  0021D2  C0BD  FFFA         	movff	??_ISR_Alta+8,pclath
  9032  0021D6  923F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9033  0021D8  0011               	retfie		f
  9034  0021DA                     __end_of_ISR_Alta:
  9035                           	opt stack 0
  9036                           pclatu	equ	0xFFB
  9037                           pclath	equ	0xFFA
  9038                           tblptru	equ	0xFF8
  9039                           tblptrh	equ	0xFF7
  9040                           tblptrl	equ	0xFF6
  9041                           tablat	equ	0xFF5
  9042                           prodh	equ	0xFF4
  9043                           prodl	equ	0xFF3
  9044                           intcon	equ	0xFF2
  9045                           intcon2	equ	0xFF1
  9046                           intcon3	equ	0xFF0
  9047                           postinc0	equ	0xFEE
  9048                           fsr0h	equ	0xFEA
  9049                           fsr0l	equ	0xFE9
  9050                           wreg	equ	0xFE8
  9051                           postdec1	equ	0xFE5
  9052                           fsr1h	equ	0xFE2
  9053                           fsr1l	equ	0xFE1
  9054                           bsr	equ	0xFE0
  9055                           indf2	equ	0xFDF
  9056                           postinc2	equ	0xFDE
  9057                           postdec2	equ	0xFDD
  9058                           fsr2h	equ	0xFDA
  9059                           fsr2l	equ	0xFD9
  9060                           status	equ	0xFD8
  9061                           
  9062 ;; *************** function i2___wmul *****************
  9063 ;; Defined at:
  9064 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  multiplier      2   29[COMRAM] unsigned int 
  9067 ;;  multiplicand    2   31[COMRAM] unsigned int 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  __wmul          2   33[COMRAM] unsigned int 
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  2   29[COMRAM] unsigned int 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0, prodl, prodh
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9079 ;;      Params:         4       0       0       0
  9080 ;;      Locals:         2       0       0       0
  9081 ;;      Temps:          0       0       0       0
  9082 ;;      Totals:         6       0       0       0
  9083 ;;Total ram usage:        6 bytes
  9084 ;; Hardware stack levels used:    1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_ISR_Alta
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text20
  9093  002A20                     __ptext20:
  9094                           	opt stack 0
  9095  002A20                     i2___wmul:
  9096                           	opt stack 24
  9097                           
  9098                           ;incstack = 0
  9099  002A20  501E               	movf	i2___wmul@multiplier,w,c
  9100  002A22  0220               	mulwf	i2___wmul@multiplicand,c
  9101  002A24  CFF3 F022          	movff	prodl,i2___wmul@product
  9102  002A28  CFF4 F023          	movff	prodh,i2___wmul@product+1
  9103  002A2C  501E               	movf	i2___wmul@multiplier,w,c
  9104  002A2E  0221               	mulwf	i2___wmul@multiplicand+1,c
  9105  002A30  50F3               	movf	prodl,w,c
  9106  002A32  2623               	addwf	i2___wmul@product+1,f,c
  9107  002A34  501F               	movf	i2___wmul@multiplier+1,w,c
  9108  002A36  0220               	mulwf	i2___wmul@multiplicand,c
  9109  002A38  50F3               	movf	prodl,w,c
  9110  002A3A  2623               	addwf	i2___wmul@product+1,f,c
  9111  002A3C  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  9112  002A40  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  9113  002A44  0012               	return	
  9114  002A46                     __end_ofi2___wmul:
  9115                           	opt stack 0
  9116                           pclatu	equ	0xFFB
  9117                           pclath	equ	0xFFA
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           intcon	equ	0xFF2
  9125                           intcon2	equ	0xFF1
  9126                           intcon3	equ	0xFF0
  9127                           postinc0	equ	0xFEE
  9128                           fsr0h	equ	0xFEA
  9129                           fsr0l	equ	0xFE9
  9130                           wreg	equ	0xFE8
  9131                           postdec1	equ	0xFE5
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           bsr	equ	0xFE0
  9135                           indf2	equ	0xFDF
  9136                           postinc2	equ	0xFDE
  9137                           postdec2	equ	0xFDD
  9138                           fsr2h	equ	0xFDA
  9139                           fsr2l	equ	0xFD9
  9140                           status	equ	0xFD8
  9141                           
  9142 ;; *************** function i2___awdiv *****************
  9143 ;; Defined at:
  9144 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  dividend        2   35[COMRAM] int 
  9147 ;;  divisor         2   37[COMRAM] int 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  __awdiv         2    2[BANK0 ] int 
  9150 ;;  __awdiv         1    1[BANK0 ] unsigned char 
  9151 ;;  __awdiv         1    0[BANK0 ] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  2   35[COMRAM] int 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9161 ;;      Params:         4       0       0       0
  9162 ;;      Locals:         0       4       0       0
  9163 ;;      Temps:          0       0       0       0
  9164 ;;      Totals:         4       4       0       0
  9165 ;;Total ram usage:        8 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_ISR_Alta
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text21
  9175  002802                     __ptext21:
  9176                           	opt stack 0
  9177  002802                     i2___awdiv:
  9178                           	opt stack 24
  9179                           
  9180                           ;incstack = 0
  9181  002802  0E00               	movlw	0
  9182  002804  0100               	movlb	0	; () banked
  9183  002806  6FB2               	movwf	i2___awdiv@sign& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186  002808  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9187  00280A  D007               	goto	i2l4876
  9188                           
  9189                           ; BSR set to: 0
  9190  00280C  6C26               	negf	i2___awdiv@divisor,c
  9191  00280E  1E27               	comf	i2___awdiv@divisor+1,f,c
  9192  002810  B0D8               	btfsc	status,0,c
  9193  002812  2A27               	incf	i2___awdiv@divisor+1,f,c
  9194                           
  9195                           ; BSR set to: 0
  9196  002814  0E01               	movlw	1
  9197  002816  0100               	movlb	0	; () banked
  9198  002818  6FB2               	movwf	i2___awdiv@sign& (0+255),b
  9199  00281A                     i2l4876:
  9200                           
  9201                           ; BSR set to: 0
  9202  00281A  AE25               	btfss	i2___awdiv@dividend+1,7,c
  9203  00281C  D007               	goto	i2l4882
  9204                           
  9205                           ; BSR set to: 0
  9206  00281E  6C24               	negf	i2___awdiv@dividend,c
  9207  002820  1E25               	comf	i2___awdiv@dividend+1,f,c
  9208  002822  B0D8               	btfsc	status,0,c
  9209  002824  2A25               	incf	i2___awdiv@dividend+1,f,c
  9210                           
  9211                           ; BSR set to: 0
  9212  002826  0E01               	movlw	1
  9213  002828  0100               	movlb	0	; () banked
  9214  00282A  1BB2               	xorwf	i2___awdiv@sign& (0+255),f,b
  9215  00282C                     i2l4882:
  9216                           
  9217                           ; BSR set to: 0
  9218  00282C  0E00               	movlw	0
  9219  00282E  0100               	movlb	0	; () banked
  9220  002830  6FB4               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9221  002832  0E00               	movlw	0
  9222  002834  6FB3               	movwf	i2___awdiv@quotient& (0+255),b
  9223                           
  9224                           ; BSR set to: 0
  9225  002836  5026               	movf	i2___awdiv@divisor,w,c
  9226  002838  1027               	iorwf	i2___awdiv@divisor+1,w,c
  9227  00283A  B4D8               	btfsc	status,2,c
  9228  00283C  D021               	goto	i2l4904
  9229                           
  9230                           ; BSR set to: 0
  9231  00283E  0E01               	movlw	1
  9232  002840  0100               	movlb	0	; () banked
  9233  002842  6FB1               	movwf	i2___awdiv@counter& (0+255),b
  9234  002844  D005               	goto	i2l4890
  9235  002846                     i2l4888:
  9236                           
  9237                           ; BSR set to: 0
  9238  002846  90D8               	bcf	status,0,c
  9239  002848  3626               	rlcf	i2___awdiv@divisor,f,c
  9240  00284A  3627               	rlcf	i2___awdiv@divisor+1,f,c
  9241  00284C  0100               	movlb	0	; () banked
  9242  00284E  2BB1               	incf	i2___awdiv@counter& (0+255),f,b
  9243  002850                     i2l4890:
  9244                           
  9245                           ; BSR set to: 0
  9246  002850  AE27               	btfss	i2___awdiv@divisor+1,7,c
  9247  002852  D7F9               	goto	i2l4888
  9248  002854                     i2l4892:
  9249                           
  9250                           ; BSR set to: 0
  9251  002854  0100               	movlb	0	; () banked
  9252  002856  90D8               	bcf	status,0,c
  9253  002858  37B3               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9254  00285A  37B4               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9255                           
  9256                           ; BSR set to: 0
  9257  00285C  5026               	movf	i2___awdiv@divisor,w,c
  9258  00285E  5C24               	subwf	i2___awdiv@dividend,w,c
  9259  002860  5027               	movf	i2___awdiv@divisor+1,w,c
  9260  002862  5825               	subwfb	i2___awdiv@dividend+1,w,c
  9261  002864  A0D8               	btfss	status,0,c
  9262  002866  D006               	goto	i2l4900
  9263                           
  9264                           ; BSR set to: 0
  9265  002868  5026               	movf	i2___awdiv@divisor,w,c
  9266  00286A  5E24               	subwf	i2___awdiv@dividend,f,c
  9267  00286C  5027               	movf	i2___awdiv@divisor+1,w,c
  9268  00286E  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  9269                           
  9270                           ; BSR set to: 0
  9271  002870  0100               	movlb	0	; () banked
  9272  002872  81B3               	bsf	i2___awdiv@quotient& (0+255),0,b
  9273  002874                     i2l4900:
  9274                           
  9275                           ; BSR set to: 0
  9276  002874  90D8               	bcf	status,0,c
  9277  002876  3227               	rrcf	i2___awdiv@divisor+1,f,c
  9278  002878  3226               	rrcf	i2___awdiv@divisor,f,c
  9279                           
  9280                           ; BSR set to: 0
  9281  00287A  0100               	movlb	0	; () banked
  9282  00287C  2FB1               	decfsz	i2___awdiv@counter& (0+255),f,b
  9283  00287E  D7EA               	goto	i2l4892
  9284  002880                     i2l4904:
  9285                           
  9286                           ; BSR set to: 0
  9287  002880  0100               	movlb	0	; () banked
  9288  002882  51B2               	movf	i2___awdiv@sign& (0+255),w,b
  9289  002884  0100               	movlb	0	; () banked
  9290  002886  B4D8               	btfsc	status,2,c
  9291  002888  D005               	goto	i2l4908
  9292                           
  9293                           ; BSR set to: 0
  9294  00288A  0100               	movlb	0	; () banked
  9295  00288C  6DB3               	negf	i2___awdiv@quotient& (0+255),b
  9296  00288E  1FB4               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9297  002890  B0D8               	btfsc	status,0,c
  9298  002892  2BB4               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9299  002894                     i2l4908:
  9300                           
  9301                           ; BSR set to: 0
  9302  002894  C0B3  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  9303  002898  C0B4  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9304  00289C  0012               	return	
  9305  00289E                     __end_ofi2___awdiv:
  9306                           	opt stack 0
  9307                           pclatu	equ	0xFFB
  9308                           pclath	equ	0xFFA
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           prodh	equ	0xFF4
  9314                           prodl	equ	0xFF3
  9315                           intcon	equ	0xFF2
  9316                           intcon2	equ	0xFF1
  9317                           intcon3	equ	0xFF0
  9318                           postinc0	equ	0xFEE
  9319                           fsr0h	equ	0xFEA
  9320                           fsr0l	equ	0xFE9
  9321                           wreg	equ	0xFE8
  9322                           postdec1	equ	0xFE5
  9323                           fsr1h	equ	0xFE2
  9324                           fsr1l	equ	0xFE1
  9325                           bsr	equ	0xFE0
  9326                           indf2	equ	0xFDF
  9327                           postinc2	equ	0xFDE
  9328                           postdec2	equ	0xFDD
  9329                           fsr2h	equ	0xFDA
  9330                           fsr2l	equ	0xFD9
  9331                           status	equ	0xFD8
  9332                           
  9333 ;; *************** function ___lwdiv *****************
  9334 ;; Defined at:
  9335 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  dividend        2   29[COMRAM] unsigned int 
  9338 ;;  divisor         2   31[COMRAM] unsigned int 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  quotient        2   33[COMRAM] unsigned int 
  9341 ;;  counter         1   35[COMRAM] unsigned char 
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  2   29[COMRAM] unsigned int 
  9344 ;; Registers used:
  9345 ;;		wreg, status,2, status,0
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9351 ;;      Params:         4       0       0       0
  9352 ;;      Locals:         3       0       0       0
  9353 ;;      Temps:          0       0       0       0
  9354 ;;      Totals:         7       0       0       0
  9355 ;;Total ram usage:        7 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; This function calls:
  9358 ;;		Nothing
  9359 ;; This function is called by:
  9360 ;;		_ISR_Alta
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           	psect	text22
  9365  002914                     __ptext22:
  9366                           	opt stack 0
  9367  002914                     ___lwdiv:
  9368                           	opt stack 24
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;incstack = 0
  9372  002914  0E00               	movlw	0
  9373  002916  6E23               	movwf	___lwdiv@quotient+1,c
  9374  002918  0E00               	movlw	0
  9375  00291A  6E22               	movwf	___lwdiv@quotient,c
  9376  00291C  5020               	movf	___lwdiv@divisor,w,c
  9377  00291E  1021               	iorwf	___lwdiv@divisor+1,w,c
  9378  002920  B4D8               	btfsc	status,2,c
  9379  002922  D01C               	goto	i2l1171
  9380  002924  0E01               	movlw	1
  9381  002926  6E24               	movwf	___lwdiv@counter,c
  9382  002928  D004               	goto	i2l3958
  9383  00292A                     i2l3956:
  9384  00292A  90D8               	bcf	status,0,c
  9385  00292C  3620               	rlcf	___lwdiv@divisor,f,c
  9386  00292E  3621               	rlcf	___lwdiv@divisor+1,f,c
  9387  002930  2A24               	incf	___lwdiv@counter,f,c
  9388  002932                     i2l3958:
  9389  002932  AE21               	btfss	___lwdiv@divisor+1,7,c
  9390  002934  D7FA               	goto	i2l3956
  9391  002936                     i2l3960:
  9392  002936  90D8               	bcf	status,0,c
  9393  002938  3622               	rlcf	___lwdiv@quotient,f,c
  9394  00293A  3623               	rlcf	___lwdiv@quotient+1,f,c
  9395  00293C  5020               	movf	___lwdiv@divisor,w,c
  9396  00293E  5C1E               	subwf	___lwdiv@dividend,w,c
  9397  002940  5021               	movf	___lwdiv@divisor+1,w,c
  9398  002942  581F               	subwfb	___lwdiv@dividend+1,w,c
  9399  002944  A0D8               	btfss	status,0,c
  9400  002946  D005               	goto	i2l3968
  9401  002948  5020               	movf	___lwdiv@divisor,w,c
  9402  00294A  5E1E               	subwf	___lwdiv@dividend,f,c
  9403  00294C  5021               	movf	___lwdiv@divisor+1,w,c
  9404  00294E  5A1F               	subwfb	___lwdiv@dividend+1,f,c
  9405  002950  8022               	bsf	___lwdiv@quotient,0,c
  9406  002952                     i2l3968:
  9407  002952  90D8               	bcf	status,0,c
  9408  002954  3221               	rrcf	___lwdiv@divisor+1,f,c
  9409  002956  3220               	rrcf	___lwdiv@divisor,f,c
  9410  002958  2E24               	decfsz	___lwdiv@counter,f,c
  9411  00295A  D7ED               	goto	i2l3960
  9412  00295C                     i2l1171:
  9413  00295C  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  9414  002960  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9415  002964  0012               	return		;funcret
  9416  002966                     __end_of___lwdiv:
  9417                           	opt stack 0
  9418                           pclatu	equ	0xFFB
  9419                           pclath	equ	0xFFA
  9420                           tblptru	equ	0xFF8
  9421                           tblptrh	equ	0xFF7
  9422                           tblptrl	equ	0xFF6
  9423                           tablat	equ	0xFF5
  9424                           prodh	equ	0xFF4
  9425                           prodl	equ	0xFF3
  9426                           intcon	equ	0xFF2
  9427                           intcon2	equ	0xFF1
  9428                           intcon3	equ	0xFF0
  9429                           postinc0	equ	0xFEE
  9430                           fsr0h	equ	0xFEA
  9431                           fsr0l	equ	0xFE9
  9432                           wreg	equ	0xFE8
  9433                           postdec1	equ	0xFE5
  9434                           fsr1h	equ	0xFE2
  9435                           fsr1l	equ	0xFE1
  9436                           bsr	equ	0xFE0
  9437                           indf2	equ	0xFDF
  9438                           postinc2	equ	0xFDE
  9439                           postdec2	equ	0xFDD
  9440                           fsr2h	equ	0xFDA
  9441                           fsr2l	equ	0xFD9
  9442                           status	equ	0xFD8
  9443                           
  9444 ;; *************** function _WriteTimer0 *****************
  9445 ;; Defined at:
  9446 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  timer0          2   29[COMRAM] unsigned int 
  9449 ;; Auto vars:     Size  Location     Type
  9450 ;;  timer           2   31[COMRAM] struct Timers
  9451 ;; Return value:  Size  Location     Type
  9452 ;;		None               void
  9453 ;; Registers used:
  9454 ;;		None
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9460 ;;      Params:         2       0       0       0
  9461 ;;      Locals:         2       0       0       0
  9462 ;;      Temps:          0       0       0       0
  9463 ;;      Totals:         4       0       0       0
  9464 ;;Total ram usage:        4 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_ISR_Alta
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text23
  9474  002A96                     __ptext23:
  9475                           	opt stack 0
  9476  002A96                     _WriteTimer0:
  9477                           	opt stack 24
  9478                           
  9479                           ;incstack = 0
  9480  002A96  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9481  002A9A  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9482  002A9E  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9483  002AA2  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9484  002AA6  0012               	return		;funcret
  9485  002AA8                     __end_of_WriteTimer0:
  9486                           	opt stack 0
  9487  0000                     pclatu	equ	0xFFB
  9488                           pclath	equ	0xFFA
  9489                           tblptru	equ	0xFF8
  9490                           tblptrh	equ	0xFF7
  9491                           tblptrl	equ	0xFF6
  9492                           tablat	equ	0xFF5
  9493                           prodh	equ	0xFF4
  9494                           prodl	equ	0xFF3
  9495                           intcon	equ	0xFF2
  9496                           intcon2	equ	0xFF1
  9497                           intcon3	equ	0xFF0
  9498                           postinc0	equ	0xFEE
  9499                           fsr0h	equ	0xFEA
  9500                           fsr0l	equ	0xFE9
  9501                           wreg	equ	0xFE8
  9502                           postdec1	equ	0xFE5
  9503                           fsr1h	equ	0xFE2
  9504                           fsr1l	equ	0xFE1
  9505                           bsr	equ	0xFE0
  9506                           indf2	equ	0xFDF
  9507                           postinc2	equ	0xFDE
  9508                           postdec2	equ	0xFDD
  9509                           fsr2h	equ	0xFDA
  9510                           fsr2l	equ	0xFD9
  9511                           status	equ	0xFD8
  9512                           pclatu	equ	0xFFB
  9513                           pclath	equ	0xFFA
  9514                           tblptru	equ	0xFF8
  9515                           tblptrh	equ	0xFF7
  9516                           tblptrl	equ	0xFF6
  9517                           tablat	equ	0xFF5
  9518                           prodh	equ	0xFF4
  9519                           prodl	equ	0xFF3
  9520                           intcon	equ	0xFF2
  9521                           intcon2	equ	0xFF1
  9522                           intcon3	equ	0xFF0
  9523                           postinc0	equ	0xFEE
  9524                           fsr0h	equ	0xFEA
  9525                           fsr0l	equ	0xFE9
  9526                           wreg	equ	0xFE8
  9527                           postdec1	equ	0xFE5
  9528                           fsr1h	equ	0xFE2
  9529                           fsr1l	equ	0xFE1
  9530                           bsr	equ	0xFE0
  9531                           indf2	equ	0xFDF
  9532                           postinc2	equ	0xFDE
  9533                           postdec2	equ	0xFDD
  9534                           fsr2h	equ	0xFDA
  9535                           fsr2l	equ	0xFD9
  9536                           status	equ	0xFD8
  9537                           
  9538                           	psect	rparam
  9539  0000                     pclatu	equ	0xFFB
  9540                           pclath	equ	0xFFA
  9541                           tblptru	equ	0xFF8
  9542                           tblptrh	equ	0xFF7
  9543                           tblptrl	equ	0xFF6
  9544                           tablat	equ	0xFF5
  9545                           prodh	equ	0xFF4
  9546                           prodl	equ	0xFF3
  9547                           intcon	equ	0xFF2
  9548                           intcon2	equ	0xFF1
  9549                           intcon3	equ	0xFF0
  9550                           postinc0	equ	0xFEE
  9551                           fsr0h	equ	0xFEA
  9552                           fsr0l	equ	0xFE9
  9553                           wreg	equ	0xFE8
  9554                           postdec1	equ	0xFE5
  9555                           fsr1h	equ	0xFE2
  9556                           fsr1l	equ	0xFE1
  9557                           bsr	equ	0xFE0
  9558                           indf2	equ	0xFDF
  9559                           postinc2	equ	0xFDE
  9560                           postdec2	equ	0xFDD
  9561                           fsr2h	equ	0xFDA
  9562                           fsr2l	equ	0xFD9
  9563                           status	equ	0xFD8
  9564                           
  9565                           	psect	temp
  9566  00003F                     btemp:
  9567                           	opt stack 0
  9568  00003F                     	ds	1
  9569  0000                     int$flags	set	btemp
  9570                           pclatu	equ	0xFFB
  9571                           pclath	equ	0xFFA
  9572                           tblptru	equ	0xFF8
  9573                           tblptrh	equ	0xFF7
  9574                           tblptrl	equ	0xFF6
  9575                           tablat	equ	0xFF5
  9576                           prodh	equ	0xFF4
  9577                           prodl	equ	0xFF3
  9578                           intcon	equ	0xFF2
  9579                           intcon2	equ	0xFF1
  9580                           intcon3	equ	0xFF0
  9581                           postinc0	equ	0xFEE
  9582                           fsr0h	equ	0xFEA
  9583                           fsr0l	equ	0xFE9
  9584                           wreg	equ	0xFE8
  9585                           postdec1	equ	0xFE5
  9586                           fsr1h	equ	0xFE2
  9587                           fsr1l	equ	0xFE1
  9588                           bsr	equ	0xFE0
  9589                           indf2	equ	0xFDF
  9590                           postinc2	equ	0xFDE
  9591                           postdec2	equ	0xFDD
  9592                           fsr2h	equ	0xFDA
  9593                           fsr2l	equ	0xFD9
  9594                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      62
    BANK0           160     44     134
    BANK1           256     12      12
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> remote_frame_array(BANK0[8]), distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->___aldiv
    _remote_frame_handler->_CANsendMessage
    _delay_ms->___wmul
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _board_initialization->_CANInitialize

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15823
                                              8 BANK1      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___aldiv
                            ___awdiv
                             ___lmul
                             ___wmul
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    3936
                                             42 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3163
                                             26 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     963
                                             32 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     749
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             40 BANK0      4     4      0
                                              0 BANK1      8     3      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             26 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     450
                                             26 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             26 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                             38 BANK0      6     6      0
                                              0 BANK1      8     0      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1338
                                              4 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                             35 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      C       C       6        4.7%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2C      86       4       83.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      3E       1       66.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D0       9        0.0%
DATA                 0      0      D0      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Apr 28 22:12:48 2016

           ??_CANisTXwarningON 00CB                              _x 01F1                              _y 01F2  
         __end_of_CANSetFilter 0C4E                   ___awdiv@sign 00D0                             bsr 000FE0  
          ___wmul@multiplicand 00CD                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 0F74  
                          l401 0F7E                            l402 0F88                            l411 116C  
                          l403 0F92                            l500 0792                            l420 1326  
                          l412 1170                            l421 132A                            l413 1268  
                          l510 08A2                            l422 1336                            l414 11F8  
                          l406 10A2                            l511 08AE                            l503 086E  
                          l415 1202                            l407 10A6                            l520 09BA  
                          l504 0872                            l416 120C                            l408 10B2  
                          l521 09BE                            l505 087E                            l417 1216  
                          l530 0ACA                            l522 09CA                            l514 098A  
                          l506 0882                            l450 1AE0                            l531 0AD6  
                          l515 098E                            l507 088E                            l451 1AE4  
                          l540 0BE2                            l532 0ADA                            l516 099A  
                          l508 0892                            l452 1AF0                            l541 0BE6  
                          l533 0AE6                            l525 0AA6                            l517 099E  
                          l509 089E                            l461 1BF8                            l453 1AF4  
                          l381 0ED2                            l542 0BF2                            l526 0AAA  
                          l518 09AA                            l462 1BFC                            l454 1B00  
                          l382 0C64                            l543 0BF6                            l527 0AB6  
                          l519 09AE                            l463 1C08                            l455 1B04  
                          l391 0E1E                            l383 0C68                            l711 1CC6  
                          l544 0C02                            l536 0BC2                            l528 0ABA  
                          l464 1C0C                            l456 1B10                            l376 2468  
                          l392 0E22                            l384 0D60                            l712 1CD0  
                          l537 0BC6                            l529 0AC6                            l481 0638  
                          l465 1C18                            l457 1B14                            l377 2472  
                          l393 0E2E                            l385 0CF0                            l713 1D5A  
                          l538 0BD2                            l482 063C                            l466 1C1C  
                          l458 1B20                            l386 0CFA                            l539 0BD6  
                          l483 0648                            l467 1C28                            l387 0D04  
                          l492 0752                            l484 064C                            l468 1C2C  
                          l396 1156                            l388 0D0E                            l493 0756  
                          l485 0658                            l469 1C38                            l397 0EE8  
                          l741 23A8                            l733 1EB6                            l717 1D62  
                          l709 1CCE                            l494 0762                            l486 065C  
                          l574 2A64                            l398 0EEC                            l718 1DAC  
                          l495 0766                            l487 0668                            l399 0FE4  
                          l496 0772                            l488 066C                            l728 1E34  
                          l497 0776                            l489 0678                            l498 0782  
                          l499 0786                            l587 29DC                            l747 23A2  
                          l749 239E                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
         __size_of_WriteTimer0 0012                            _msg 0089                            wreg 000FE8  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l3400 0F9C  
                         l5002 1CB2                           l3420 1096                           l3324 0D18  
                         l3502 133A                           l3350 0E32                           l5030 1D9C  
                         l5022 1D7E                           l4320 1B6A                           l3344 0E12  
                         l5040 1DEA                           l5016 1D68                           l4314 1B24  
                         l3426 10B6                           l5034 1DB0                           l5026 1D8C  
                         l5052 1E4E                           l5060 1EAE                           l4254 2A72  
                         l4406 0378                           l5070 1F26                           l5054 1EA4  
                         l4424 0432                           l4272 199E                           l4522 0796  
                         l4442 04EC                           l4370 0206                           l4346 1C3C  
                         l4460 05A6                           l3476 1220                           l5068 1ED0  
                         l4630 0B30                           l4710 24C2                           l4702 2460  
                         l3822 2290                           l3920 26BE                           l4624 0AEA  
                         l4528 07DC                           l4288 1A54                           l4704 2476  
                         l3496 131A                           l3930 26EE                           l3914 26A8  
                         l4562 08F8                           l3818 224E                           l4556 08B2  
                         l4388 02BE                           l4708 247E                           l3844 2360  
                         l3828 22CC                           l3926 26DC                           l3942 272C  
                         l3854 28B0                           l4590 09CE                           l4494 06C2  
                         l4832 2596                           l3928 26E8                           l4488 067C  
                         l3696 29CE                           l3848 2392                           l3946 2740  
                         l3938 271E                           l3858 28D6                           l4658 0C06  
                         l4844 25E2                           l4860 265E                           l4596 0A14  
                         l4846 25F2                           l4838 25B4                           l4864 267A  
                         l4856 264C                           l4848 25F8                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u4110 2AB0                           u4120 2ABC  
                         u5110 1C5C                           u5030 1B44                           u3530 0D38  
                         u5115 1C50                           u5035 1B38                           u5300 0468  
                         u5220 02F4                           u5140 0182                           u3540 0D84  
                         u4180 2236                           u3535 0D2C                           u3800 128C  
                         u5305 045C                           u5225 02E8                           u5145 0176  
                         u3545 0D78                           u4186 2238                           u5315 04C8  
                         u5235 0354                           u5155 01E2                           u3555 0DE4  
                         u5340 0522                           u5260 03AE                           u5180 023A  
                         u3660 0FBC                           u3805 1280                           u5510 07B6  
                         u5430 069C                           u3670 1008                           u3815 12EC  
                         u5345 0516                           u5265 03A2                           u5185 022E  
                         u3665 0FB0                           u5515 07AA                           u5435 0690  
                         u5355 0582                           u5275 040E                           u5195 029A  
                         u3675 0FFC                           u4900 191A                           u3685 1068  
                         u3790 1240                           u4905 190E                           u4915 197A  
                         u3795 1234                           u4940 19D0                           u5830 0C26  
                         u5750 0B0A                           u5670 09EE                           u5590 08D2  
                         u4945 19C4                           u6297 29D0                           u5835 0C1A  
                         u5755 0AFE                           u5675 09E2                           u5595 08C6  
                         u4955 1A30            __size_of_CANSetMask 039E                           _main 1C84  
                         fsr0h 000FEA                           fsr1h 000FE2                           fsr0l 000FE9  
                         fsr2h 000FDA                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           _step 0088                           btemp 003F  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0144                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 2A6A                   _status_array 00A8  
              _brake_value_inc 0086           _remote_frame_handler 21DA     __size_of_CANreceiveMessage 050C  
              __end_of___aldiv 268C                          ?_main 0001                __end_of___awdiv 274A  
                        _T0CON 000FD5                ___awdiv@divisor 00CD                          _T1CON 000FCD  
                        _T3CON 000FB1             __size_of_ISR_Bassa 012C                __end_of___lwdiv 2966  
                        i1l428 1672                          i1l703 00F4                          i1l705 00FC  
                        i1l579 2A92                          i2l693 219E                ___awdiv@counter 00CF  
                        _TMR0H 000FD7                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR3H 000FB3                          _TMR1L 000FCE                          _TMR3L 000FB2  
            _CANisRxReady$3280 0001                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 21DA                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000            ___lmul@multiplicand 00CF                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 0104  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 01E8           __end_of_CANisRxReady 2A96  
                        tablat 000FF5         _distance_set_counter_1 007E         _distance_set_counter_2 0080  
         __end_of_CANisTxReady 2A6A               __end_ofi2___wmul 2A46                          status 000FD8  
           __size_ofi2___awdiv 009C                 __CFG_PBADEN$ON 000000                __initialization 2966  
                 __end_of_main 1F32  __size_of_board_initialization 00B8               _brake_signal_CAN 0085  
        ?_remote_frame_handler 0001                         ??_main 0108                  __activetblptr 000002  
            _CANisTxReady$3278 00CB                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 00CB                __CFG_BBSIZ$1024 000000  
                       i1l4110 0066                         i1l4122 00B4                         i1l4130 00E8  
                       i1l4118 0096                         i1l4134 00EC                         i1l3600 15FE  
                       i1l3610 166C                         i1l3604 161C                         i1l3608 163A  
                       i2l1171 295C                         i1l3670 18B0                         i1l3662 1878  
                       i1l3654 1840                         i1l3646 17D2                         i1l3672 18E2  
                       i1l3592 15C2                         i1l3584 1552                         i1l3666 1894  
                       i1l3658 185C                         i1l3596 15E0                         i2l4900 2874  
                       i2l3960 2936                         i2l4904 2880                         i2l4930 20BE  
                       i2l3956 292A                         i2l4908 2894                         i2l3958 2932  
                       i2l4926 20B0                         i2l3968 2952                         i2l4952 2122  
                       i2l4928 20BC                         i2l4890 2850                         i2l4882 282C  
                       i2l4938 20D2                         i2l4892 2854                         i2l4876 281A  
                       i2l4980 2192                         i2l4956 212C                         i2l4966 2142  
                       i2l4958 212E                         i2l4888 2846                         i2l4984 219C  
                       _RXB0D0 000F66                         _RXB0D1 000F67                         _RXB0D2 000F68  
                       _RXB0D3 000F69                         _RXB0D4 000F6A                         _RXB1D0 000F56  
                       _RXB0D5 000F6B                         _RXB1D1 000F57                         _RXB0D6 000F6C  
                       _RXB1D2 000F58                         _RXB0D7 000F6D                         _RXB1D3 000F59  
                       _RXB1D4 000F5A                         _RXB1D5 000F5B                         _RXB1D6 000F5C  
                       _RXB1D7 000F5D                         _TXB0D0 000F46                         _TXB0D1 000F47  
                       _TXB0D2 000F48                         _TXB0D3 000F49                         _TXB1D0 000F36  
                       _TXB0D4 000F4A                         _TXB1D1 000F37                         _TXB0D5 000F4B  
                       _TXB1D2 000F38                         _TXB0D6 000F4C                         _TXB1D3 000F39  
                       _TXB0D7 000F4D                         _TXB2D0 000F26                         _TXB1D4 000F3A  
                       _TXB2D1 000F27                         _TXB1D5 000F3B                         _TXB2D2 000F28  
                       _TXB1D6 000F3C                         _TXB2D3 000F29                         _TXB1D7 000F3D  
                       _TXB2D4 000F2A                         _TXB2D5 000F2B                         _TXB2D6 000F2C  
                       _TXB2D7 000F2D             CANsendMessage@data 00CF             CANsendMessage@tamp 00D7  
            __end_of_ISR_Bassa 0144               __end_of_delay_ms 29EA          __size_of_CANSetFilter 0B06  
           _distance_set_value 0082                 __CFG_XINST$OFF 000000                         ___lmul 289E  
                    ??___aldiv 00D7                         ___wmul 29EA                      ??___awdiv 00CF  
               __CFG_STVREN$ON 000000                      ??___lwdiv 0022                   ??_CANSetMask 00D0  
                       clear_0 296C                         clear_1 297C               ___awdiv@quotient 00D1  
               i2___awdiv@sign 00B2                __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 289E  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                _home_position 0087                   _CANSetFilter 0148                     __accesstop 0060  
      __end_of__initialization 29A2             __end_of_CANSetMask 1C84                  ___rparam_used 000001  
    __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001                      ?_ISR_Alta 0001  
                 __pidataBANK0 2AC0         ??_remote_frame_handler 00DB                   _ENC1_measure 01E8  
        CANSetFilter@numBuffer 00D4                      ?i2___wmul 001E      __size_of_CANisTXwarningON 000C  
                 _ENC2_measure 01E9          __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024  
     __end_of_CANOperationMode 2A80                     __pbssBANK0 0060        __size_of_CANsendMessage 078C  
                   ??_ISR_Alta 00B5                        ?___lmul 00CB                        ?___wmul 00CB  
                   _gap_time_1 0038                     _gap_time_2 003A               WriteTimer0@timer 0020  
                ??_WriteTimer0 0020                 ___lmul@product 00D3                   _CANisRxReady 2A80  
                      _CANSTAT 000F6E                   _CANisTxReady 2A46                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72                     ??i2___wmul 0022  
                _int_counter_1 0064                  _int_counter_2 0068         __size_of_CANInitialize 01C6  
        _distance_reached_flag 01EE                      ?_delay_ms 00D1                        _RXB0DLC 000F65  
                      _RXB1DLC 000F55                        _RXB0CON 000F60                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
                   _distance_1 007A                     _distance_2 007C            CANsendMessage@flags 00D2  
                   _count_flag 01ED                        __Hparam 0000                        __Lparam 0000  
             delay_ms@value_ms 00D1                        ___aldiv 2572                        ___awdiv 268C  
              __size_of___lmul 0076                __size_of___wmul 0036                        ___lwdiv 2914  
         CANInitialize@propSeg 0105                        __pcinit 2966                        __ramtop 0300  
                      __ptext0 1C84                        __ptext1 21DA                        __ptext2 0C4E  
                      __ptext3 2A46                        __ptext4 29B0                        __ptext5 29EA  
                      __ptext6 274A                        __ptext7 23AC                        __ptext8 18E6  
                      __ptext9 0148                      _T0CONbits 000FD5                      _T1CONbits 000FCD  
                    _T3CONbits 000FB1               ___aldiv@dividend 0100            __end_of_WriteTimer0 2AA8  
                   ??_delay_ms 00D3         CANreceiveMessage@error 000B   __end_of_board_initialization 2802  
               __pintcode_body 1F32           end_of_initialization 29A2                  _Analogic_Mode 0084  
                __Lmediumconst 0000                        int_func 1F32            i2___wmul@multiplier 001E  
             _CANisRXwarningON 2AB4                  _CANInitialize 23AC               ___aldiv@quotient 00D9  
                    _ISR_Bassa 0018                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                      _PORTAbits 000F80  
               CANSetMask@mask 00CB                      _PORTCbits 000F82                 CANSetMask@tamp 00D5  
               CANSetMask@type 00CF               _CANisTXwarningON 2AA8                      i2___awdiv 2802  
      _clock_counter_reference 0078                 _CANsendMessage 0C4E             _remote_frame_array 00DE  
             CANInitialize@BRP 0103               CANInitialize@SJW 0102                 ?_CANInitialize 0100  
           i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001                 __end_of___lmul 2914  
            __size_of_ISR_Alta 21D2                 __end_of___wmul 2A20                    _WriteTimer0 2A96  
             i2___wmul@product 0022            start_initialization 2966             i2___awdiv@quotient 00B3  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 00D4                     ?i2___awdiv 0024  
       __end_of_CANsendMessage 13DA              ?_CANOperationMode 0001             ??_CANOperationMode 00CB  
   CANInitialize@FilterConfig1 0106     CANInitialize@FilterConfig2 0107              _distance_set_flag 01EF  
                     ??___lmul 00D3           _board_initialization 274A                       ??___wmul 00CF  
                  __pdataBANK0 00DD               __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 01D2  
           _brake_value_degree 003C         CANInitialize@phaseSeg1 0100         CANInitialize@phaseSeg2 0101  
                  __pbssCOMRAM 0028                  __pcstackBANK0 00B1                  __pcstackBANK1 0100  
                  _data_debug1 0028                    _BRGCON2bits 000F71                    _BRGCON3bits 000F72  
            __size_of_delay_ms 003A                ?_CANsendMessage 00CB                ??_CANInitialize 00D9  
           CANSetFilter@filter 00CB               ___lwdiv@dividend 001E          ?_board_initialization 0001  
                  ??_ISR_Bassa 000D                      __pintcode 0008                       ?___aldiv 0100  
                     ?___awdiv 00CB                       ?___lwdiv 001E                    __pintcodelo 0018  
            WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2AC0                    _brake_value 00B0  
                  _COMSTATbits 000F74               ___lwdiv@quotient 0022                    ??i2___awdiv 0028  
              ___aldiv@divisor 0104          CANreceiveMessage@tamp 000C                ___aldiv@counter 00D7  
               ___wmul@product 00CF                       _IPR1bits 000F9F                       _IPR2bits 000FA2  
 _delay_quartz_frequency_value 00DD                       _PIE1bits 000F9D                       _IPR3bits 000FA5  
                     _PIE2bits 000FA0                       _PIE3bits 000FA3       __end_of_CANisTXwarningON 2AB4  
                     i1u401_20 171A                       i1u401_26 171C                       i1u402_20 1744  
                     i1u410_25 18BC                       i1u402_26 1746                       i1u404_25 1758  
                     i1u390_20 1492                       i1u390_26 1494                       i1u391_20 14C0  
                     i1u391_26 14C2                       i1u393_25 14D6                       i1u399_25 1646  
                     i2u601_40 1F70                       _PIR1bits 000F9E                       i2u601_46 1F72  
                     _PIR2bits 000FA1                       _PIR3bits 000FA4                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                      _timer_off 0030  
                     _RXM0SIDH 000F18                       _RXM0SIDL 000F19                       _RXM1SIDH 000F1C  
                     _RXM1SIDL 000F1D                       _RXERRCNT 000F75                       _TXERRCNT 000F76  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0              ___wmul@multiplier 00CB  
                     i2___wmul 2A20              i2___awdiv@divisor 0026              i2___awdiv@counter 00B1  
                ?_CANSetFilter 00CB              ___lmul@multiplier 00CB                    _INTCON2bits 000FF1  
                  _INTCON3bits 000FF0                      copy_data0 2996                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00DD  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52               __size_of___aldiv 011A  
                   _CANSetMask 18E6               __size_of___awdiv 00BE          i2___wmul@multiplicand 0020  
             __size_of___lwdiv 0052                _remote_frame_id 006C                       _Tx_retry 01EC  
                 ?_WriteTimer0 001E                   _RXF0SIDLbits 000F01                       _delay_ms 29B0  
              ___lwdiv@divisor 0020                   _RXF1SIDLbits 000F05                  _TMR1_overflow 01EA  
              ___lwdiv@counter 0024                 ??_CANSetFilter 00D0                       __ptext10 2A6A  
                     __ptext11 289E                       __ptext20 2A20                       __ptext12 268C  
                     __ptext21 2802                       __ptext13 2572                       __ptext22 2914  
                     __ptext14 2AA8                       __ptext23 2A96                       __ptext15 2AB4  
                     __ptext17 13DA                       __ptext18 2A80                   _RXF2SIDLbits 000F09  
                 _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15  
     CANsendMessage@dataLength 00D1                   _remote_frame 01F0                  _TMR3_overflow 01EB  
                __size_of_main 02AE           CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42  
                 _TXB1SIDLbits 000F32                       _timer_on 0034                   _TXB2SIDLbits 000F22  
                     int$flags 003F      __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001  
                ?_CANisTxReady 0001                    _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55  
                 _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60                    _RXB1CONbits 000F50  
            _CANreceiveMessage 13DA                   _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2  
             ??_CANsendMessage 00D3                  _wheel_speed_1 0070                  _wheel_speed_2 0074  
           ?_CANreceiveMessage 0001       CANsendMessage@identifier 00CB   __end_of_remote_frame_handler 23AC  
                     intlevel1 0000                       intlevel2 0000               CANSetFilter@tamp 00D5  
             CANSetFilter@type 00CF            ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45  
                  _TXB1DLCbits 000F35                    _TXB0CONbits 000F40                    _TXB2DLCbits 000F25  
                  _TXB1CONbits 000F30                    _TXB2CONbits 000F20           CANOperationMode@mode 00CB  
               ??_CANisRxReady 0001                    ?_CANSetMask 00CB                 ??_CANisTxReady 00CB  
               _distance_array 0098      __end_of_CANreceiveMessage 18E6              ?_CANisRXwarningON 0001  
                  _speed_array 00A0                   ___aldiv@sign 00D8             ??_CANisRXwarningON 00CB  
        _distance_actual_value 0060          __end_of_CANInitialize 2572              ?_CANisTXwarningON 0001  
