

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Feb 01 12:49:19 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  002B78                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _delay_quartz_frequency_value
    46  002B78  10                 	db	16
    47                           
    48                           ;initializer for _status_array
    49  002B79  00                 	db	0
    50  002B7A  00                 	db	0
    51  002B7B  00                 	db	0
    52  002B7C  00                 	db	0
    53  002B7D  00                 	db	0
    54  002B7E  00                 	db	0
    55  002B7F  00                 	db	0
    56  002B80  01                 	db	1
    57  0000                     _ADCON0bits	set	4034
    58  0000                     _ADCON1	set	4033
    59  0000                     _ADCON2bits	set	4032
    60  0000                     _ADRESH	set	4036
    61  0000                     _BRGCON1	set	3952
    62  0000                     _BRGCON2	set	3953
    63  0000                     _BRGCON2bits	set	3953
    64  0000                     _BRGCON3	set	3954
    65  0000                     _BRGCON3bits	set	3954
    66  0000                     _CANCON	set	3951
    67  0000                     _CANCONbits	set	3951
    68  0000                     _CANSTAT	set	3950
    69  0000                     _COMSTATbits	set	3956
    70  0000                     _INTCON2bits	set	4081
    71  0000                     _INTCON3bits	set	4080
    72  0000                     _INTCONbits	set	4082
    73  0000                     _IPR1bits	set	3999
    74  0000                     _IPR2bits	set	4002
    75  0000                     _IPR3bits	set	4005
    76  0000                     _LATA	set	3977
    77  0000                     _LATB	set	3978
    78  0000                     _LATC	set	3979
    79  0000                     _LATD	set	3980
    80  0000                     _LATE	set	3981
    81  0000                     _PIE1bits	set	3997
    82  0000                     _PIE2bits	set	4000
    83  0000                     _PIE3bits	set	4003
    84  0000                     _PIR1bits	set	3998
    85  0000                     _PIR2bits	set	4001
    86  0000                     _PIR3bits	set	4004
    87  0000                     _PORTAbits	set	3968
    88  0000                     _PORTCbits	set	3970
    89  0000                     _RCONbits	set	4048
    90  0000                     _RXB0CON	set	3936
    91  0000                     _RXB0CONbits	set	3936
    92  0000                     _RXB0D0	set	3942
    93  0000                     _RXB0D1	set	3943
    94  0000                     _RXB0D2	set	3944
    95  0000                     _RXB0D3	set	3945
    96  0000                     _RXB0D4	set	3946
    97  0000                     _RXB0D5	set	3947
    98  0000                     _RXB0D6	set	3948
    99  0000                     _RXB0D7	set	3949
   100  0000                     _RXB0DLC	set	3941
   101  0000                     _RXB0DLCbits	set	3941
   102  0000                     _RXB0EIDH	set	3939
   103  0000                     _RXB0EIDL	set	3940
   104  0000                     _RXB0SIDH	set	3937
   105  0000                     _RXB0SIDL	set	3938
   106  0000                     _RXB0SIDLbits	set	3938
   107  0000                     _RXB1CON	set	3920
   108  0000                     _RXB1CONbits	set	3920
   109  0000                     _RXB1D0	set	3926
   110  0000                     _RXB1D1	set	3927
   111  0000                     _RXB1D2	set	3928
   112  0000                     _RXB1D3	set	3929
   113  0000                     _RXB1D4	set	3930
   114  0000                     _RXB1D5	set	3931
   115  0000                     _RXB1D6	set	3932
   116  0000                     _RXB1D7	set	3933
   117  0000                     _RXB1DLC	set	3925
   118  0000                     _RXB1DLCbits	set	3925
   119  0000                     _RXB1EIDH	set	3923
   120  0000                     _RXB1EIDL	set	3924
   121  0000                     _RXB1SIDH	set	3921
   122  0000                     _RXB1SIDL	set	3922
   123  0000                     _RXB1SIDLbits	set	3922
   124  0000                     _RXERRCNT	set	3957
   125  0000                     _RXF0EIDH	set	3842
   126  0000                     _RXF0EIDL	set	3843
   127  0000                     _RXF0SIDH	set	3840
   128  0000                     _RXF0SIDL	set	3841
   129  0000                     _RXF0SIDLbits	set	3841
   130  0000                     _RXF1EIDH	set	3846
   131  0000                     _RXF1EIDL	set	3847
   132  0000                     _RXF1SIDH	set	3844
   133  0000                     _RXF1SIDL	set	3845
   134  0000                     _RXF1SIDLbits	set	3845
   135  0000                     _RXF2EIDH	set	3850
   136  0000                     _RXF2EIDL	set	3851
   137  0000                     _RXF2SIDH	set	3848
   138  0000                     _RXF2SIDL	set	3849
   139  0000                     _RXF2SIDLbits	set	3849
   140  0000                     _RXF3EIDH	set	3854
   141  0000                     _RXF3EIDL	set	3855
   142  0000                     _RXF3SIDH	set	3852
   143  0000                     _RXF3SIDL	set	3853
   144  0000                     _RXF3SIDLbits	set	3853
   145  0000                     _RXF4EIDH	set	3858
   146  0000                     _RXF4EIDL	set	3859
   147  0000                     _RXF4SIDH	set	3856
   148  0000                     _RXF4SIDL	set	3857
   149  0000                     _RXF4SIDLbits	set	3857
   150  0000                     _RXF5EIDH	set	3862
   151  0000                     _RXF5EIDL	set	3863
   152  0000                     _RXF5SIDH	set	3860
   153  0000                     _RXF5SIDL	set	3861
   154  0000                     _RXF5SIDLbits	set	3861
   155  0000                     _RXM0EIDH	set	3866
   156  0000                     _RXM0EIDL	set	3867
   157  0000                     _RXM0SIDH	set	3864
   158  0000                     _RXM0SIDL	set	3865
   159  0000                     _RXM0SIDLbits	set	3865
   160  0000                     _RXM1EIDH	set	3870
   161  0000                     _RXM1EIDL	set	3871
   162  0000                     _RXM1SIDH	set	3868
   163  0000                     _RXM1SIDL	set	3869
   164  0000                     _RXM1SIDLbits	set	3869
   165  0000                     _T0CON	set	4053
   166  0000                     _T0CONbits	set	4053
   167  0000                     _T1CON	set	4045
   168  0000                     _T1CONbits	set	4045
   169  0000                     _T3CON	set	4017
   170  0000                     _T3CONbits	set	4017
   171  0000                     _TMR0H	set	4055
   172  0000                     _TMR0L	set	4054
   173  0000                     _TMR1H	set	4047
   174  0000                     _TMR1L	set	4046
   175  0000                     _TMR3H	set	4019
   176  0000                     _TMR3L	set	4018
   177  0000                     _TRISA	set	3986
   178  0000                     _TRISB	set	3987
   179  0000                     _TRISC	set	3988
   180  0000                     _TRISD	set	3989
   181  0000                     _TRISE	set	3990
   182  0000                     _TXB0CONbits	set	3904
   183  0000                     _TXB0D0	set	3910
   184  0000                     _TXB0D1	set	3911
   185  0000                     _TXB0D2	set	3912
   186  0000                     _TXB0D3	set	3913
   187  0000                     _TXB0D4	set	3914
   188  0000                     _TXB0D5	set	3915
   189  0000                     _TXB0D6	set	3916
   190  0000                     _TXB0D7	set	3917
   191  0000                     _TXB0DLC	set	3909
   192  0000                     _TXB0DLCbits	set	3909
   193  0000                     _TXB0EIDH	set	3907
   194  0000                     _TXB0EIDL	set	3908
   195  0000                     _TXB0SIDH	set	3905
   196  0000                     _TXB0SIDL	set	3906
   197  0000                     _TXB0SIDLbits	set	3906
   198  0000                     _TXB1CONbits	set	3888
   199  0000                     _TXB1D0	set	3894
   200  0000                     _TXB1D1	set	3895
   201  0000                     _TXB1D2	set	3896
   202  0000                     _TXB1D3	set	3897
   203  0000                     _TXB1D4	set	3898
   204  0000                     _TXB1D5	set	3899
   205  0000                     _TXB1D6	set	3900
   206  0000                     _TXB1D7	set	3901
   207  0000                     _TXB1DLC	set	3893
   208  0000                     _TXB1DLCbits	set	3893
   209  0000                     _TXB1EIDH	set	3891
   210  0000                     _TXB1EIDL	set	3892
   211  0000                     _TXB1SIDH	set	3889
   212  0000                     _TXB1SIDL	set	3890
   213  0000                     _TXB1SIDLbits	set	3890
   214  0000                     _TXB2CONbits	set	3872
   215  0000                     _TXB2D0	set	3878
   216  0000                     _TXB2D1	set	3879
   217  0000                     _TXB2D2	set	3880
   218  0000                     _TXB2D3	set	3881
   219  0000                     _TXB2D4	set	3882
   220  0000                     _TXB2D5	set	3883
   221  0000                     _TXB2D6	set	3884
   222  0000                     _TXB2D7	set	3885
   223  0000                     _TXB2DLC	set	3877
   224  0000                     _TXB2DLCbits	set	3877
   225  0000                     _TXB2EIDH	set	3875
   226  0000                     _TXB2EIDL	set	3876
   227  0000                     _TXB2SIDH	set	3873
   228  0000                     _TXB2SIDL	set	3874
   229  0000                     _TXB2SIDLbits	set	3874
   230  0000                     _TXERRCNT	set	3958
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  0029DE                     __pcinit:
   236                           	opt stack 0
   237  0029DE                     start_initialization:
   238                           	opt stack 0
   239  0029DE                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Clear objects allocated to BANK0 (51 bytes)
   243  0029DE  EE00  F099         	lfsr	0,__pbssBANK0
   244  0029E2  0E33               	movlw	51
   245  0029E4                     clear_0:
   246  0029E4  6AEE               	clrf	postinc0,c
   247  0029E6  06E8               	decf	wreg,f,c
   248  0029E8  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   251  0029EA  6A42               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   252  0029EC  6A41               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   253                           
   254                           ; Clear objects allocated to COMRAM (28 bytes)
   255  0029EE  EE00  F025         	lfsr	0,__pbssCOMRAM
   256  0029F2  0E1C               	movlw	28
   257  0029F4                     clear_1:
   258  0029F4  6AEE               	clrf	postinc0,c
   259  0029F6  06E8               	decf	wreg,f,c
   260  0029F8  E1FD               	bnz	clear_1
   261                           
   262                           ; Initialize objects allocated to BANK0 (9 bytes)
   263                           ; load TBLPTR registers with __pidataBANK0
   264  0029FA  0E78               	movlw	low __pidataBANK0
   265  0029FC  6EF6               	movwf	tblptrl,c
   266  0029FE  0E2B               	movlw	high __pidataBANK0
   267  002A00  6EF7               	movwf	tblptrh,c
   268  002A02  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   269  002A04  6EF8               	movwf	tblptru,c
   270  002A06  EE00  F0CC         	lfsr	0,__pdataBANK0
   271  002A0A  EE10 F009          	lfsr	1,9
   272  002A0E                     copy_data0:
   273  002A0E  0009               	tblrd		*+
   274  002A10  CFF5 FFEE          	movff	tablat,postinc0
   275  002A14  50E5               	movf	postdec1,w,c
   276  002A16  50E1               	movf	fsr1l,w,c
   277  002A18  E1FA               	bnz	copy_data0
   278  002A1A                     end_of_initialization:
   279                           	opt stack 0
   280  002A1A                     __end_of__initialization:
   281                           	opt stack 0
   282  002A1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  002A1C  6EF8               	movwf	tblptru,c
   284  002A1E  0100               	movlb	0
   285  002A20  EF8E  F011         	goto	_main	;jump to C main() function
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bitbssCOMRAM
   296  000208                     __pbitbssCOMRAM:
   297                           	opt stack 0
   298  000208                     _ENC1_measure:
   299                           	opt stack 0
   300  000208                     	ds	1
   301  000209                     _ENC2_measure:
   302                           	opt stack 0
   303  000209                     	ds	1
   304  00020A                     _TMR1_overflow:
   305                           	opt stack 0
   306  00020A                     	ds	1
   307  00020B                     _TMR3_overflow:
   308                           	opt stack 0
   309  00020B                     	ds	1
   310  00020C                     _Tx_retry:
   311                           	opt stack 0
   312  00020C                     	ds	1
   313  00020D                     _count_flag:
   314                           	opt stack 0
   315  00020D                     	ds	1
   316  00020E                     _remote_frame:
   317                           	opt stack 0
   318  00020E                     	ds	1
   319  00020F                     _x:
   320                           	opt stack 0
   321  00020F                     	ds	1
   322  000210                     _y:
   323                           	opt stack 0
   324  000210                     	ds	1
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	bssCOMRAM
   335  000025                     __pbssCOMRAM:
   336                           	opt stack 0
   337  000025                     _timer_off:
   338                           	opt stack 0
   339  000025                     	ds	4
   340  000029                     _timer_on:
   341                           	opt stack 0
   342  000029                     	ds	4
   343  00002D                     _gap_time_1:
   344                           	opt stack 0
   345  00002D                     	ds	2
   346  00002F                     _gap_time_2:
   347                           	opt stack 0
   348  00002F                     	ds	2
   349  000031                     _msg:
   350                           	opt stack 0
   351  000031                     	ds	15
   352  000040                     _brake_value_degree:
   353                           	opt stack 0
   354  000040                     	ds	1
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           
   364                           	psect	bssBANK0
   365  000099                     __pbssBANK0:
   366                           	opt stack 0
   367  000099                     _int_counter_1:
   368                           	opt stack 0
   369  000099                     	ds	4
   370  00009D                     _int_counter_2:
   371                           	opt stack 0
   372  00009D                     	ds	4
   373  0000A1                     _remote_frame_id:
   374                           	opt stack 0
   375  0000A1                     	ds	4
   376  0000A5                     _wheel_speed_1:
   377                           	opt stack 0
   378  0000A5                     	ds	4
   379  0000A9                     _wheel_speed_2:
   380                           	opt stack 0
   381  0000A9                     	ds	4
   382  0000AD                     _clock_counter_reference:
   383                           	opt stack 0
   384  0000AD                     	ds	2
   385  0000AF                     _correction_factor:
   386                           	opt stack 0
   387  0000AF                     	ds	2
   388  0000B1                     _distance_1:
   389                           	opt stack 0
   390  0000B1                     	ds	2
   391  0000B3                     _distance_2:
   392                           	opt stack 0
   393  0000B3                     	ds	2
   394  0000B5                     _Analogic_Mode:
   395                           	opt stack 0
   396  0000B5                     	ds	1
   397  0000B6                     _brake_signal_CAN:
   398                           	opt stack 0
   399  0000B6                     	ds	1
   400  0000B7                     _brake_value_inc:
   401                           	opt stack 0
   402  0000B7                     	ds	1
   403  0000B8                     _home_position:
   404                           	opt stack 0
   405  0000B8                     	ds	1
   406  0000B9                     _read:
   407                           	opt stack 0
   408  0000B9                     	ds	1
   409  0000BA                     _step:
   410                           	opt stack 0
   411  0000BA                     	ds	1
   412  0000BB                     _distance_array:
   413                           	opt stack 0
   414  0000BB                     	ds	8
   415  0000C3                     _speed_array:
   416                           	opt stack 0
   417  0000C3                     	ds	8
   418  0000CB                     _brake_value:
   419                           	opt stack 0
   420  0000CB                     	ds	1
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           postdec1	equ	0xFE5
   428                           fsr1l	equ	0xFE1
   429                           
   430                           	psect	dataBANK0
   431  0000CC                     __pdataBANK0:
   432                           	opt stack 0
   433  0000CC                     _delay_quartz_frequency_value:
   434                           	opt stack 0
   435  0000CC                     	ds	1
   436  0000CD                     _status_array:
   437                           	opt stack 0
   438  0000CD                     	ds	8
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	cstackBANK0
   449  000060                     __pcstackBANK0:
   450                           	opt stack 0
   451  000060                     ?i2___awdiv:
   452                           	opt stack 0
   453  000060                     i2___awdiv@dividend:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x0
   457  000060                     	ds	2
   458  000062                     i2___awdiv@divisor:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x2
   462  000062                     	ds	2
   463  000064                     i2___awdiv@counter:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x4
   467  000064                     	ds	1
   468  000065                     i2___awdiv@sign:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x5
   472  000065                     	ds	1
   473  000066                     i2___awdiv@quotient:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x6
   477  000066                     	ds	2
   478  000068                     ??_ISR_Alta:
   479                           
   480                           ; 0 bytes @ 0x8
   481  000068                     	ds	22
   482  00007E                     ?___wmul:
   483                           	opt stack 0
   484  00007E                     ?___awdiv:
   485                           	opt stack 0
   486  00007E                     ?___lwdiv:
   487                           	opt stack 0
   488  00007E                     CANOperationMode@mode:
   489                           	opt stack 0
   490  00007E                     _CANisTxReady$3282:
   491                           	opt stack 0
   492  00007E                     ___wmul@multiplier:
   493                           	opt stack 0
   494  00007E                     ___awdiv@dividend:
   495                           	opt stack 0
   496  00007E                     ___lwdiv@dividend:
   497                           	opt stack 0
   498  00007E                     CANsendMessage@identifier:
   499                           	opt stack 0
   500  00007E                     CANSetMask@mask:
   501                           	opt stack 0
   502  00007E                     CANSetFilter@filter:
   503                           	opt stack 0
   504                           
   505                           ; 4 bytes @ 0x1E
   506  00007E                     	ds	2
   507  000080                     ___wmul@multiplicand:
   508                           	opt stack 0
   509  000080                     ___awdiv@divisor:
   510                           	opt stack 0
   511  000080                     ___lwdiv@divisor:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x20
   515  000080                     	ds	2
   516  000082                     CANSetMask@type:
   517                           	opt stack 0
   518  000082                     CANSetFilter@type:
   519                           	opt stack 0
   520  000082                     ___awdiv@counter:
   521                           	opt stack 0
   522  000082                     CANsendMessage@data:
   523                           	opt stack 0
   524  000082                     ___wmul@product:
   525                           	opt stack 0
   526  000082                     ___lwdiv@quotient:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x22
   530  000082                     	ds	1
   531  000083                     ??_CANSetMask:
   532  000083                     ??_CANSetFilter:
   533  000083                     ___awdiv@sign:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x23
   537  000083                     	ds	1
   538  000084                     CANsendMessage@dataLength:
   539                           	opt stack 0
   540  000084                     ___lwdiv@counter:
   541                           	opt stack 0
   542  000084                     delay_ms@value_ms:
   543                           	opt stack 0
   544  000084                     ___awdiv@quotient:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x24
   548  000084                     	ds	1
   549  000085                     CANsendMessage@flags:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x25
   553  000085                     	ds	1
   554  000086                     ??_CANsendMessage:
   555  000086                     
   556                           ; 0 bytes @ 0x26
   557  000086                     	ds	1
   558  000087                     CANSetMask@numBuffer:
   559                           	opt stack 0
   560  000087                     CANSetFilter@numBuffer:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x27
   564  000087                     	ds	1
   565  000088                     CANSetMask@tamp:
   566                           	opt stack 0
   567  000088                     CANSetFilter@tamp:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x28
   571  000088                     	ds	2
   572  00008A                     CANsendMessage@tamp:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x2A
   576  00008A                     	ds	2
   577  00008C                     CANInitialize@phaseSeg1:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x2C
   581  00008C                     	ds	1
   582  00008D                     CANInitialize@phaseSeg2:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x2D
   586  00008D                     	ds	1
   587  00008E                     ??_remote_frame_handler:
   588  00008E                     CANInitialize@SJW:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x2E
   592  00008E                     	ds	1
   593  00008F                     CANInitialize@BRP:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x2F
   597  00008F                     	ds	1
   598  000090                     CANInitialize@flags:
   599                           	opt stack 0
   600                           
   601                           ; 1 bytes @ 0x30
   602  000090                     	ds	1
   603  000091                     ??_CANInitialize:
   604                           
   605                           ; 0 bytes @ 0x31
   606  000091                     	ds	4
   607  000095                     CANInitialize@propSeg:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x35
   611  000095                     	ds	1
   612  000096                     CANInitialize@FilterConfig1:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x36
   616  000096                     	ds	1
   617  000097                     CANInitialize@FilterConfig2:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x37
   621  000097                     	ds	1
   622  000098                     ??_main:
   623                           
   624                           ; 0 bytes @ 0x38
   625  000098                     	ds	1
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	cstackCOMRAM
   636  000001                     __pcstackCOMRAM:
   637                           	opt stack 0
   638  000001                     _CANisRxReady$3284:
   639                           	opt stack 0
   640  000001                     CANreceiveMessage@msg:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x0
   644  000001                     	ds	2
   645  000003                     ??_CANreceiveMessage:
   646                           
   647                           ; 0 bytes @ 0x2
   648  000003                     	ds	8
   649  00000B                     CANreceiveMessage@error:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0xA
   653  00000B                     	ds	1
   654  00000C                     CANreceiveMessage@tamp:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0xB
   658  00000C                     	ds	1
   659  00000D                     ??_ISR_Bassa:
   660                           
   661                           ; 0 bytes @ 0xC
   662  00000D                     	ds	17
   663  00001E                     ?i2___wmul:
   664                           	opt stack 0
   665  00001E                     ?i2___lwdiv:
   666                           	opt stack 0
   667  00001E                     WriteTimer0@timer0:
   668                           	opt stack 0
   669  00001E                     i2___wmul@multiplier:
   670                           	opt stack 0
   671  00001E                     i2___lwdiv@dividend:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x1D
   675  00001E                     	ds	2
   676  000020                     WriteTimer0@timer:
   677                           	opt stack 0
   678  000020                     i2___wmul@multiplicand:
   679                           	opt stack 0
   680  000020                     i2___lwdiv@divisor:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x1F
   684  000020                     	ds	2
   685  000022                     i2___wmul@product:
   686                           	opt stack 0
   687  000022                     i2___lwdiv@quotient:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x21
   691  000022                     	ds	2
   692  000024                     i2___lwdiv@counter:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x23
   696  000024                     	ds	1
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           postdec1	equ	0xFE5
   704                           fsr1l	equ	0xFE1
   705                           
   706 ;;
   707 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   708 ;;
   709 ;; *************** function _main *****************
   710 ;; Defined at:
   711 ;;		line 226 in file "ABS_Code.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  2  694[COMRAM] int 
   718 ;; Registers used:
   719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   725 ;;      Params:         0       0       0       0
   726 ;;      Locals:         0       0       0       0
   727 ;;      Temps:          0       1       0       0
   728 ;;      Totals:         0       1       0       0
   729 ;;Total ram usage:        1 bytes
   730 ;; Hardware stack levels required when called:    7
   731 ;; This function calls:
   732 ;;		_ADC_Read
   733 ;;		_CANisRXwarningON
   734 ;;		_CANisTXwarningON
   735 ;;		___awdiv
   736 ;;		___lwdiv
   737 ;;		_board_initialization
   738 ;;		_delay_ms
   739 ;;		_remote_frame_handler
   740 ;; This function is called by:
   741 ;;		Startup code after reset
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text0
   746  00231C                     __ptext0:
   747                           	opt stack 0
   748  00231C                     _main:
   749                           	opt stack 24
   750                           
   751                           ;ABS_Code.c: 227: board_initialization();
   752                           
   753                           ;incstack = 0
   754  00231C  EC27  F014         	call	_board_initialization	;wreg free
   755                           
   756                           ;ABS_Code.c: 228: step = (11 * (3,1415)) / 16;
   757  002320  0ECC               	movlw	204
   758  002322  0100               	movlb	0	; () banked
   759  002324  6FBA               	movwf	_step& (0+255),b
   760                           
   761                           ; BSR set to: 0
   762                           ;ABS_Code.c: 229: PORTAbits.RA1 = 1;
   763  002326  8280               	bsf	3968,1,c	;volatile
   764                           
   765                           ; BSR set to: 0
   766                           ;ABS_Code.c: 230: PORTCbits.RC1 = 1;
   767  002328  8282               	bsf	3970,1,c	;volatile
   768                           
   769                           ; BSR set to: 0
   770                           ;ABS_Code.c: 231: delay_ms(500);
   771  00232A  0E01               	movlw	1
   772  00232C  0100               	movlb	0	; () banked
   773  00232E  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
   774  002330  0EF4               	movlw	244
   775  002332  0100               	movlb	0	; () banked
   776  002334  6F84               	movwf	delay_ms@value_ms& (0+255),b
   777  002336  EC32  F015         	call	_delay_ms	;wreg free
   778                           
   779                           ;ABS_Code.c: 232: PORTAbits.RA1 = 0;
   780  00233A  9280               	bcf	3968,1,c	;volatile
   781                           
   782                           ;ABS_Code.c: 233: PORTCbits.RC1 = 0;
   783  00233C  9282               	bcf	3970,1,c	;volatile
   784                           
   785                           ;ABS_Code.c: 234: delay_ms(100);
   786  00233E  0E00               	movlw	0
   787  002340  0100               	movlb	0	; () banked
   788  002342  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
   789  002344  0E64               	movlw	100
   790  002346  0100               	movlb	0	; () banked
   791  002348  6F84               	movwf	delay_ms@value_ms& (0+255),b
   792  00234A  EC32  F015         	call	_delay_ms	;wreg free
   793  00234E                     l3984:
   794                           
   795                           ;ABS_Code.c: 236: ADC_Read();
   796  00234E  EC12  F015         	call	_ADC_Read	;wreg free
   797                           
   798                           ;ABS_Code.c: 237: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   799  002352  ECB0  F015         	call	_CANisTXwarningON	;wreg free
   800  002356  0100               	movlb	0	; () banked
   801  002358  6F98               	movwf	??_main& (0+255),b
   802  00235A  0100               	movlb	0	; () banked
   803  00235C  0598               	decf	??_main& (0+255),w,b
   804  00235E  B4D8               	btfsc	status,2,c
   805  002360  D008               	goto	l698
   806                           
   807                           ; BSR set to: 0
   808  002362  ECB6  F015         	call	_CANisRXwarningON	;wreg free
   809  002366  0100               	movlb	0	; () banked
   810  002368  6F98               	movwf	??_main& (0+255),b
   811  00236A  0100               	movlb	0	; () banked
   812  00236C  0598               	decf	??_main& (0+255),w,b
   813  00236E  A4D8               	btfss	status,2,c
   814  002370  D002               	goto	l696
   815  002372                     l698:
   816                           
   817                           ; BSR set to: 0
   818                           ;ABS_Code.c: 238: PORTAbits.RA1 = 1;
   819  002372  8280               	bsf	3968,1,c	;volatile
   820                           
   821                           ;ABS_Code.c: 239: } else {
   822  002374  D001               	goto	l699
   823  002376                     l696:
   824                           
   825                           ; BSR set to: 0
   826                           ;ABS_Code.c: 240: PORTAbits.RA1 = 0;
   827  002376  9280               	bcf	3968,1,c	;volatile
   828  002378                     l699:
   829                           
   830                           ; BSR set to: 0
   831                           ;ABS_Code.c: 241: }
   832                           ;ABS_Code.c: 243: if ((remote_frame == 1) || (Tx_retry == 1)) {
   833  002378  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
   834  00237A  BC41               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
   835  00237C  D003               	goto	l702
   836  00237E  0100               	movlb	(_Tx_retry/(0+8)) shr (0+8)
   837  002380  A841               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   838  002382  D004               	goto	l3994
   839  002384                     l702:
   840                           
   841                           ;ABS_Code.c: 244: remote_frame = 0;
   842  002384  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
   843  002386  9C41               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   844                           
   845                           ;ABS_Code.c: 245: remote_frame_handler();
   846  002388  EC73  F012         	call	_remote_frame_handler	;wreg free
   847  00238C                     l3994:
   848                           
   849                           ;ABS_Code.c: 246: }
   850                           ;ABS_Code.c: 248: if (Analogic_Mode == 0) {
   851  00238C  0100               	movlb	0	; () banked
   852  00238E  67B5               	tstfsz	_Analogic_Mode& (0+255),b
   853  002390  D01D               	goto	l703
   854                           
   855                           ; BSR set to: 0
   856                           ;ABS_Code.c: 249: if (brake_signal_CAN == 00) {
   857  002392  0100               	movlb	0	; () banked
   858  002394  67B6               	tstfsz	_brake_signal_CAN& (0+255),b
   859  002396  D003               	goto	l4000
   860                           
   861                           ; BSR set to: 0
   862                           ;ABS_Code.c: 250: brake_value_inc = 0;
   863  002398  0E00               	movlw	0
   864  00239A  0100               	movlb	0	; () banked
   865  00239C  6FB7               	movwf	_brake_value_inc& (0+255),b
   866  00239E                     l4000:
   867                           
   868                           ; BSR set to: 0
   869                           ;ABS_Code.c: 251: }
   870                           ;ABS_Code.c: 252: if (brake_signal_CAN == 01) {
   871  00239E  0100               	movlb	0	; () banked
   872  0023A0  05B6               	decf	_brake_signal_CAN& (0+255),w,b
   873  0023A2  A4D8               	btfss	status,2,c
   874  0023A4  D003               	goto	l4004
   875                           
   876                           ; BSR set to: 0
   877                           ;ABS_Code.c: 253: brake_value_inc = 150;
   878  0023A6  0E96               	movlw	150
   879  0023A8  0100               	movlb	0	; () banked
   880  0023AA  6FB7               	movwf	_brake_value_inc& (0+255),b
   881  0023AC                     l4004:
   882                           
   883                           ; BSR set to: 0
   884                           ;ABS_Code.c: 254: }
   885                           ;ABS_Code.c: 255: if (brake_signal_CAN == 10) {
   886  0023AC  0100               	movlb	0	; () banked
   887  0023AE  51B6               	movf	_brake_signal_CAN& (0+255),w,b
   888  0023B0  0A0A               	xorlw	10
   889  0023B2  A4D8               	btfss	status,2,c
   890  0023B4  D003               	goto	l4008
   891                           
   892                           ; BSR set to: 0
   893                           ;ABS_Code.c: 256: brake_value_inc = 200;
   894  0023B6  0EC8               	movlw	200
   895  0023B8  0100               	movlb	0	; () banked
   896  0023BA  6FB7               	movwf	_brake_value_inc& (0+255),b
   897  0023BC                     l4008:
   898                           
   899                           ; BSR set to: 0
   900                           ;ABS_Code.c: 257: }
   901                           ;ABS_Code.c: 258: if (brake_signal_CAN == 11) {
   902  0023BC  0100               	movlb	0	; () banked
   903  0023BE  51B6               	movf	_brake_signal_CAN& (0+255),w,b
   904  0023C0  0A0B               	xorlw	11
   905  0023C2  A4D8               	btfss	status,2,c
   906  0023C4  D005               	goto	l4012
   907                           
   908                           ; BSR set to: 0
   909                           ;ABS_Code.c: 259: brake_value_inc = 255;
   910  0023C6  0100               	movlb	0	; () banked
   911  0023C8  69B7               	setf	_brake_value_inc& (0+255),b
   912  0023CA  D002               	goto	l4012
   913  0023CC                     l703:
   914                           
   915                           ; BSR set to: 0
   916                           ;ABS_Code.c: 262: brake_value_inc = brake_signal_CAN;
   917  0023CC  C0B6  F0B7         	movff	_brake_signal_CAN,_brake_value_inc
   918  0023D0                     l4012:
   919                           
   920                           ; BSR set to: 0
   921                           ;ABS_Code.c: 263: }
   922                           ;ABS_Code.c: 265: brake_value = (brake_value_inc / 17) + home_position;
   923  0023D0  0100               	movlb	0	; () banked
   924  0023D2  C0B7  F07E         	movff	_brake_value_inc,___awdiv@dividend
   925  0023D6  0100               	movlb	0	; () banked
   926  0023D8  6B7F               	clrf	(___awdiv@dividend+1)& (0+255),b
   927  0023DA  0E00               	movlw	0
   928  0023DC  0100               	movlb	0	; () banked
   929  0023DE  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
   930  0023E0  0E11               	movlw	17
   931  0023E2  0100               	movlb	0	; () banked
   932  0023E4  6F80               	movwf	___awdiv@divisor& (0+255),b
   933  0023E6  EC45  F013         	call	___awdiv	;wreg free
   934  0023EA  0100               	movlb	0	; () banked
   935  0023EC  517E               	movf	?___awdiv& (0+255),w,b
   936  0023EE  0100               	movlb	0	; () banked
   937  0023F0  25B8               	addwf	_home_position& (0+255),w,b
   938  0023F2  0100               	movlb	0	; () banked
   939  0023F4  6FCB               	movwf	_brake_value& (0+255),b
   940                           
   941                           ; BSR set to: 0
   942                           ;ABS_Code.c: 266: brake_value_degree = (180 * brake_value) / 255;
   943  0023F6  0100               	movlb	0	; () banked
   944  0023F8  51CB               	movf	_brake_value& (0+255),w,b
   945  0023FA  0DB4               	mullw	180
   946  0023FC  CFF3 F07E          	movff	prodl,___awdiv@dividend
   947  002400  CFF4 F07F          	movff	prodh,___awdiv@dividend+1
   948  002404  0E00               	movlw	0
   949  002406  0100               	movlb	0	; () banked
   950  002408  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
   951  00240A  0100               	movlb	0	; () banked
   952  00240C  6980               	setf	___awdiv@divisor& (0+255),b
   953  00240E  EC45  F013         	call	___awdiv	;wreg free
   954  002412  0100               	movlb	0	; () banked
   955  002414  517E               	movf	?___awdiv& (0+255),w,b
   956  002416  6E40               	movwf	_brake_value_degree,c
   957                           
   958                           ; BSR set to: 0
   959                           ;ABS_Code.c: 268: if ((ENC1_measure == 1)||(TMR1_overflow == 1)) {
   960  002418  0100               	movlb	(_ENC1_measure/(0+8)) shr (0+8)
   961  00241A  B041               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   962  00241C  D003               	goto	l711
   963  00241E  0100               	movlb	(_TMR1_overflow/(0+8)) shr (0+8)
   964  002420  A441               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   965  002422  D02D               	goto	l4030
   966  002424                     l711:
   967                           
   968                           ;ABS_Code.c: 269: if (TMR1_overflow == 1){
   969  002424  0100               	movlb	(_TMR1_overflow/(0+8)) shr (0+8)
   970  002426  A441               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   971  002428  D00F               	goto	l4024
   972                           
   973                           ;ABS_Code.c: 270: wheel_speed_1 = 0;
   974  00242A  0E00               	movlw	0
   975  00242C  0100               	movlb	0	; () banked
   976  00242E  6FA5               	movwf	_wheel_speed_1& (0+255),b
   977  002430  0E00               	movlw	0
   978  002432  0100               	movlb	0	; () banked
   979  002434  6FA6               	movwf	(_wheel_speed_1+1)& (0+255),b
   980  002436  0E00               	movlw	0
   981  002438  0100               	movlb	0	; () banked
   982  00243A  6FA7               	movwf	(_wheel_speed_1+2)& (0+255),b
   983  00243C  0E00               	movlw	0
   984  00243E  0100               	movlb	0	; () banked
   985  002440  6FA8               	movwf	(_wheel_speed_1+3)& (0+255),b
   986                           
   987                           ; BSR set to: 0
   988                           ;ABS_Code.c: 271: TMR1_overflow = 0;
   989  002442  0100               	movlb	(_TMR1_overflow/(0+8)) shr (0+8)
   990  002444  9441               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   991                           
   992                           ;ABS_Code.c: 272: } else {
   993  002446  D017               	goto	l4026
   994  002448                     l4024:
   995                           
   996                           ;ABS_Code.c: 273: wheel_speed_1 = (step * 10) / gap_time_1;
   997  002448  0100               	movlb	0	; () banked
   998  00244A  51BA               	movf	_step& (0+255),w,b
   999  00244C  0D0A               	mullw	10
  1000  00244E  CFF3 F07E          	movff	prodl,___lwdiv@dividend
  1001  002452  CFF4 F07F          	movff	prodh,___lwdiv@dividend+1
  1002  002456  C02D  F080         	movff	_gap_time_1,___lwdiv@divisor
  1003  00245A  C02E  F081         	movff	_gap_time_1+1,___lwdiv@divisor+1
  1004  00245E  EC8A  F014         	call	___lwdiv	;wreg free
  1005  002462  0100               	movlb	0	; () banked
  1006  002464  C07E  F0A5         	movff	?___lwdiv,_wheel_speed_1
  1007  002468  0100               	movlb	0	; () banked
  1008  00246A  C07F  F0A6         	movff	?___lwdiv+1,_wheel_speed_1+1
  1009  00246E  0100               	movlb	0	; () banked
  1010  002470  6BA7               	clrf	(_wheel_speed_1+2)& (0+255),b
  1011  002472  0100               	movlb	0	; () banked
  1012  002474  6BA8               	clrf	(_wheel_speed_1+3)& (0+255),b
  1013  002476                     l4026:
  1014                           
  1015                           ;ABS_Code.c: 274: }
  1016                           ;ABS_Code.c: 275: speed_array[1] = wheel_speed_1;
  1017  002476  C0A5  F0C4         	movff	_wheel_speed_1,_speed_array+1
  1018                           
  1019                           ;ABS_Code.c: 276: ENC1_measure = 0;
  1020  00247A  0100               	movlb	(_ENC1_measure/(0+8)) shr (0+8)
  1021  00247C  9041               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  1022  00247E                     l4030:
  1023                           
  1024                           ;ABS_Code.c: 277: }
  1025                           ;ABS_Code.c: 279: if ((ENC2_measure == 1)||(TMR3_overflow == 1)) {
  1026  00247E  0100               	movlb	(_ENC2_measure/(0+8)) shr (0+8)
  1027  002480  B241               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1028  002482  D003               	goto	l716
  1029  002484  0100               	movlb	(_TMR3_overflow/(0+8)) shr (0+8)
  1030  002486  A641               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1031  002488  D762               	goto	l3984
  1032  00248A                     l716:
  1033                           
  1034                           ;ABS_Code.c: 280: if (TMR3_overflow == 1){
  1035  00248A  0100               	movlb	(_TMR3_overflow/(0+8)) shr (0+8)
  1036  00248C  A641               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1037  00248E  D00F               	goto	l4038
  1038                           
  1039                           ;ABS_Code.c: 281: wheel_speed_2 = 0;
  1040  002490  0E00               	movlw	0
  1041  002492  0100               	movlb	0	; () banked
  1042  002494  6FA9               	movwf	_wheel_speed_2& (0+255),b
  1043  002496  0E00               	movlw	0
  1044  002498  0100               	movlb	0	; () banked
  1045  00249A  6FAA               	movwf	(_wheel_speed_2+1)& (0+255),b
  1046  00249C  0E00               	movlw	0
  1047  00249E  0100               	movlb	0	; () banked
  1048  0024A0  6FAB               	movwf	(_wheel_speed_2+2)& (0+255),b
  1049  0024A2  0E00               	movlw	0
  1050  0024A4  0100               	movlb	0	; () banked
  1051  0024A6  6FAC               	movwf	(_wheel_speed_2+3)& (0+255),b
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;ABS_Code.c: 282: TMR3_overflow = 0;
  1055  0024A8  0100               	movlb	(_TMR3_overflow/(0+8)) shr (0+8)
  1056  0024AA  9641               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1057                           
  1058                           ;ABS_Code.c: 283: } else {
  1059  0024AC  D017               	goto	l4040
  1060  0024AE                     l4038:
  1061                           
  1062                           ;ABS_Code.c: 284: wheel_speed_2 = (step * 10) / gap_time_2;
  1063  0024AE  0100               	movlb	0	; () banked
  1064  0024B0  51BA               	movf	_step& (0+255),w,b
  1065  0024B2  0D0A               	mullw	10
  1066  0024B4  CFF3 F07E          	movff	prodl,___lwdiv@dividend
  1067  0024B8  CFF4 F07F          	movff	prodh,___lwdiv@dividend+1
  1068  0024BC  C02F  F080         	movff	_gap_time_2,___lwdiv@divisor
  1069  0024C0  C030  F081         	movff	_gap_time_2+1,___lwdiv@divisor+1
  1070  0024C4  EC8A  F014         	call	___lwdiv	;wreg free
  1071  0024C8  0100               	movlb	0	; () banked
  1072  0024CA  C07E  F0A9         	movff	?___lwdiv,_wheel_speed_2
  1073  0024CE  0100               	movlb	0	; () banked
  1074  0024D0  C07F  F0AA         	movff	?___lwdiv+1,_wheel_speed_2+1
  1075  0024D4  0100               	movlb	0	; () banked
  1076  0024D6  6BAB               	clrf	(_wheel_speed_2+2)& (0+255),b
  1077  0024D8  0100               	movlb	0	; () banked
  1078  0024DA  6BAC               	clrf	(_wheel_speed_2+3)& (0+255),b
  1079  0024DC                     l4040:
  1080                           
  1081                           ;ABS_Code.c: 285: }
  1082                           ;ABS_Code.c: 286: speed_array[0] = wheel_speed_2;
  1083  0024DC  C0A9  F0C3         	movff	_wheel_speed_2,_speed_array
  1084                           
  1085                           ;ABS_Code.c: 287: ENC2_measure = 0;
  1086  0024E0  0100               	movlb	(_ENC2_measure/(0+8)) shr (0+8)
  1087  0024E2  9241               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1088  0024E4  D734               	goto	l3984
  1089  0024E6                     __end_of_main:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           prodh	equ	0xFF4
  1096                           prodl	equ	0xFF3
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postdec1	equ	0xFE5
  1100                           fsr1l	equ	0xFE1
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _remote_frame_handler *****************
  1104 ;; Defined at:
  1105 ;;		line 297 in file "ABS_Code.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;		None               void
  1112 ;; Registers used:
  1113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1119 ;;      Params:         0       0       0       0
  1120 ;;      Locals:         0       0       0       0
  1121 ;;      Temps:          0       3       0       0
  1122 ;;      Totals:         0       3       0       0
  1123 ;;Total ram usage:        3 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    5
  1126 ;; This function calls:
  1127 ;;		_CANisTxReady
  1128 ;;		_CANsendMessage
  1129 ;;		___wmul
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text1
  1136  0024E6                     __ptext1:
  1137                           	opt stack 0
  1138  0024E6                     _remote_frame_handler:
  1139                           	opt stack 25
  1140                           
  1141                           ;ABS_Code.c: 298: if (CANisTxReady()) {
  1142                           
  1143                           ;incstack = 0
  1144  0024E6  EC7F  F015         	call	_CANisTxReady	;wreg free
  1145  0024EA  0900               	iorlw	0
  1146  0024EC  B4D8               	btfsc	status,2,c
  1147  0024EE  D0CA               	goto	l724
  1148                           
  1149                           ;ABS_Code.c: 299: if (remote_frame_id == 0b00000000000000000000000000010) {
  1150  0024F0  0100               	movlb	0	; () banked
  1151  0024F2  51A1               	movf	_remote_frame_id& (0+255),w,b
  1152  0024F4  0A02               	xorlw	2
  1153  0024F6  11A2               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1154  0024F8  11A3               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1155  0024FA  11A4               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1156  0024FC  A4D8               	btfss	status,2,c
  1157  0024FE  D018               	goto	l3746
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;ABS_Code.c: 300: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1161  002500  C0A1  F07E         	movff	_remote_frame_id,CANsendMessage@identifier
  1162  002504  C0A2  F07F         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1163  002508  C0A3  F080         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1164  00250C  C0A4  F081         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1165  002510  0100               	movlb	0	; () banked
  1166  002512  0E00               	movlw	high _status_array
  1167  002514  0100               	movlb	0	; () banked
  1168  002516  6F83               	movwf	(CANsendMessage@data+1)& (0+255),b
  1169  002518  0100               	movlb	0	; () banked
  1170  00251A  0ECD               	movlw	low _status_array
  1171  00251C  0100               	movlb	0	; () banked
  1172  00251E  6F82               	movwf	CANsendMessage@data& (0+255),b
  1173  002520  0E08               	movlw	8
  1174  002522  0100               	movlb	0	; () banked
  1175  002524  6F84               	movwf	CANsendMessage@dataLength& (0+255),b
  1176  002526  0EBC               	movlw	188
  1177  002528  0100               	movlb	0	; () banked
  1178  00252A  6F85               	movwf	CANsendMessage@flags& (0+255),b
  1179  00252C  EC9B  F006         	call	_CANsendMessage	;wreg free
  1180  002530                     l3746:
  1181                           
  1182                           ;ABS_Code.c: 301: }
  1183                           ;ABS_Code.c: 302: if (remote_frame_id == 0b00000000000000000000000000110) {
  1184  002530  0100               	movlb	0	; () banked
  1185  002532  51A1               	movf	_remote_frame_id& (0+255),w,b
  1186  002534  0A06               	xorlw	6
  1187  002536  11A2               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1188  002538  11A3               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1189  00253A  11A4               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1190  00253C  A4D8               	btfss	status,2,c
  1191  00253E  D019               	goto	l3752
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;ABS_Code.c: 303: PORTCbits.RC0 = ~PORTCbits.RC0;
  1195  002540  7082               	btg	3970,0,c	;volatile
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;ABS_Code.c: 304: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1199  002542  C0A1  F07E         	movff	_remote_frame_id,CANsendMessage@identifier
  1200  002546  C0A2  F07F         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1201  00254A  C0A3  F080         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1202  00254E  C0A4  F081         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1203  002552  0100               	movlb	0	; () banked
  1204  002554  0E00               	movlw	high _speed_array
  1205  002556  0100               	movlb	0	; () banked
  1206  002558  6F83               	movwf	(CANsendMessage@data+1)& (0+255),b
  1207  00255A  0100               	movlb	0	; () banked
  1208  00255C  0EC3               	movlw	low _speed_array
  1209  00255E  0100               	movlb	0	; () banked
  1210  002560  6F82               	movwf	CANsendMessage@data& (0+255),b
  1211  002562  0E08               	movlw	8
  1212  002564  0100               	movlb	0	; () banked
  1213  002566  6F84               	movwf	CANsendMessage@dataLength& (0+255),b
  1214  002568  0EBC               	movlw	188
  1215  00256A  0100               	movlb	0	; () banked
  1216  00256C  6F85               	movwf	CANsendMessage@flags& (0+255),b
  1217  00256E  EC9B  F006         	call	_CANsendMessage	;wreg free
  1218  002572                     l3752:
  1219                           
  1220                           ;ABS_Code.c: 305: }
  1221                           ;ABS_Code.c: 306: if (remote_frame_id == 0b00000000000000000000000001000) {
  1222  002572  0100               	movlb	0	; () banked
  1223  002574  51A1               	movf	_remote_frame_id& (0+255),w,b
  1224  002576  0A08               	xorlw	8
  1225  002578  11A2               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1226  00257A  11A3               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1227  00257C  11A4               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1228  00257E  A4D8               	btfss	status,2,c
  1229  002580  D01A               	goto	l3758
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;ABS_Code.c: 307: int_counter_1 = 0;
  1233  002582  0E00               	movlw	0
  1234  002584  0100               	movlb	0	; () banked
  1235  002586  6F99               	movwf	_int_counter_1& (0+255),b
  1236  002588  0E00               	movlw	0
  1237  00258A  0100               	movlb	0	; () banked
  1238  00258C  6F9A               	movwf	(_int_counter_1+1)& (0+255),b
  1239  00258E  0E00               	movlw	0
  1240  002590  0100               	movlb	0	; () banked
  1241  002592  6F9B               	movwf	(_int_counter_1+2)& (0+255),b
  1242  002594  0E00               	movlw	0
  1243  002596  0100               	movlb	0	; () banked
  1244  002598  6F9C               	movwf	(_int_counter_1+3)& (0+255),b
  1245                           
  1246                           ;ABS_Code.c: 308: int_counter_2 = 0;
  1247  00259A  0E00               	movlw	0
  1248  00259C  0100               	movlb	0	; () banked
  1249  00259E  6F9D               	movwf	_int_counter_2& (0+255),b
  1250  0025A0  0E00               	movlw	0
  1251  0025A2  0100               	movlb	0	; () banked
  1252  0025A4  6F9E               	movwf	(_int_counter_2+1)& (0+255),b
  1253  0025A6  0E00               	movlw	0
  1254  0025A8  0100               	movlb	0	; () banked
  1255  0025AA  6F9F               	movwf	(_int_counter_2+2)& (0+255),b
  1256  0025AC  0E00               	movlw	0
  1257  0025AE  0100               	movlb	0	; () banked
  1258  0025B0  6FA0               	movwf	(_int_counter_2+3)& (0+255),b
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;ABS_Code.c: 309: count_flag = 1;
  1262  0025B2  0100               	movlb	(_count_flag/(0+8)) shr (0+8)
  1263  0025B4  8A41               	bsf	_count_flag/(0+8),_count_flag& (0+7),c
  1264  0025B6                     l3758:
  1265                           
  1266                           ;ABS_Code.c: 310: }
  1267                           ;ABS_Code.c: 311: if (remote_frame_id == 0b00000000000000000000000000111) {
  1268  0025B6  0100               	movlb	0	; () banked
  1269  0025B8  51A1               	movf	_remote_frame_id& (0+255),w,b
  1270  0025BA  0A07               	xorlw	7
  1271  0025BC  11A2               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1272  0025BE  11A3               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1273  0025C0  11A4               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1274  0025C2  A4D8               	btfss	status,2,c
  1275  0025C4  D056               	goto	l3774
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;ABS_Code.c: 312: distance_1 = step * (int_counter_1);
  1279  0025C6  0100               	movlb	0	; () banked
  1280  0025C8  C0BA  F07E         	movff	_step,___wmul@multiplier
  1281  0025CC  0100               	movlb	0	; () banked
  1282  0025CE  6B7F               	clrf	(___wmul@multiplier+1)& (0+255),b
  1283  0025D0  C099  F080         	movff	_int_counter_1,___wmul@multiplicand
  1284  0025D4  C09A  F081         	movff	_int_counter_1+1,___wmul@multiplicand+1
  1285  0025D8  EC51  F015         	call	___wmul	;wreg free
  1286  0025DC  0100               	movlb	0	; () banked
  1287  0025DE  C07E  F0B1         	movff	?___wmul,_distance_1
  1288  0025E2  0100               	movlb	0	; () banked
  1289  0025E4  C07F  F0B2         	movff	?___wmul+1,_distance_1+1
  1290                           
  1291                           ;ABS_Code.c: 313: distance_2 = step * (int_counter_2);
  1292  0025E8  0100               	movlb	0	; () banked
  1293  0025EA  C0BA  F07E         	movff	_step,___wmul@multiplier
  1294  0025EE  0100               	movlb	0	; () banked
  1295  0025F0  6B7F               	clrf	(___wmul@multiplier+1)& (0+255),b
  1296  0025F2  C09D  F080         	movff	_int_counter_2,___wmul@multiplicand
  1297  0025F6  C09E  F081         	movff	_int_counter_2+1,___wmul@multiplicand+1
  1298  0025FA  EC51  F015         	call	___wmul	;wreg free
  1299  0025FE  0100               	movlb	0	; () banked
  1300  002600  C07E  F0B3         	movff	?___wmul,_distance_2
  1301  002604  0100               	movlb	0	; () banked
  1302  002606  C07F  F0B4         	movff	?___wmul+1,_distance_2+1
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;ABS_Code.c: 314: count_flag = 0;
  1306  00260A  0100               	movlb	(_count_flag/(0+8)) shr (0+8)
  1307  00260C  9A41               	bcf	_count_flag/(0+8),_count_flag& (0+7),c
  1308                           
  1309                           ;ABS_Code.c: 315: distance_array[0] = distance_1;
  1310  00260E  C0B1  F0BB         	movff	_distance_1,_distance_array
  1311                           
  1312                           ;ABS_Code.c: 316: distance_array[1] = distance_1 >> 8;
  1313  002612  0100               	movlb	0	; () banked
  1314  002614  C0B2  F08E         	movff	_distance_1+1,??_remote_frame_handler
  1315  002618  C08E  F08F         	movff	??_remote_frame_handler,??_remote_frame_handler+1
  1316  00261C  0100               	movlb	0	; () banked
  1317  00261E  6B90               	clrf	(??_remote_frame_handler+2)& (0+255),b
  1318  002620  0100               	movlb	0	; () banked
  1319  002622  518F               	movf	(??_remote_frame_handler+1)& (0+255),w,b
  1320  002624  0100               	movlb	0	; () banked
  1321  002626  6FBC               	movwf	(_distance_array+1)& (0+255),b
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;ABS_Code.c: 317: distance_array[2] = distance_2;
  1325  002628  C0B3  F0BD         	movff	_distance_2,_distance_array+2
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;ABS_Code.c: 318: distance_array[3] = distance_2 >> 8;
  1329  00262C  0100               	movlb	0	; () banked
  1330  00262E  C0B4  F08E         	movff	_distance_2+1,??_remote_frame_handler
  1331  002632  C08E  F08F         	movff	??_remote_frame_handler,??_remote_frame_handler+1
  1332  002636  0100               	movlb	0	; () banked
  1333  002638  6B90               	clrf	(??_remote_frame_handler+2)& (0+255),b
  1334  00263A  0100               	movlb	0	; () banked
  1335  00263C  518F               	movf	(??_remote_frame_handler+1)& (0+255),w,b
  1336  00263E  0100               	movlb	0	; () banked
  1337  002640  6FBE               	movwf	(_distance_array+3)& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;ABS_Code.c: 319: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1341  002642  C0A1  F07E         	movff	_remote_frame_id,CANsendMessage@identifier
  1342  002646  C0A2  F07F         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1343  00264A  C0A3  F080         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1344  00264E  C0A4  F081         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1345  002652  0100               	movlb	0	; () banked
  1346  002654  0E00               	movlw	high _distance_array
  1347  002656  0100               	movlb	0	; () banked
  1348  002658  6F83               	movwf	(CANsendMessage@data+1)& (0+255),b
  1349  00265A  0100               	movlb	0	; () banked
  1350  00265C  0EBB               	movlw	low _distance_array
  1351  00265E  0100               	movlb	0	; () banked
  1352  002660  6F82               	movwf	CANsendMessage@data& (0+255),b
  1353  002662  0E08               	movlw	8
  1354  002664  0100               	movlb	0	; () banked
  1355  002666  6F84               	movwf	CANsendMessage@dataLength& (0+255),b
  1356  002668  0EBC               	movlw	188
  1357  00266A  0100               	movlb	0	; () banked
  1358  00266C  6F85               	movwf	CANsendMessage@flags& (0+255),b
  1359  00266E  EC9B  F006         	call	_CANsendMessage	;wreg free
  1360  002672                     l3774:
  1361                           
  1362                           ;ABS_Code.c: 320: }
  1363                           ;ABS_Code.c: 321: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1364  002672  010F               	movlb	15	; () banked
  1365  002674  BD40               	btfsc	64,6,b	;volatile
  1366  002676  D006               	goto	l724
  1367                           
  1368                           ; BSR set to: 15
  1369  002678  010F               	movlb	15	; () banked
  1370  00267A  BD30               	btfsc	48,6,b	;volatile
  1371  00267C  D003               	goto	l724
  1372                           
  1373                           ; BSR set to: 15
  1374                           ;ABS_Code.c: 324: Tx_retry = 0;
  1375                           
  1376                           ;ABS_Code.c: 323: } else {
  1377                           
  1378                           ; BSR set to: 15
  1379                           ;ABS_Code.c: 322: Tx_retry = 1;
  1380  00267E  0100               	movlb	(_Tx_retry/(0+8)) shr (0+8)
  1381  002680  9841               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1382  002682  D002               	goto	l734
  1383  002684                     l724:
  1384                           
  1385                           ;ABS_Code.c: 327: Tx_retry = 1;
  1386  002684  0100               	movlb	(_Tx_retry/(0+8)) shr (0+8)
  1387  002686  8841               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1388  002688                     l734:
  1389  002688  0012               	return	
  1390  00268A                     __end_of_remote_frame_handler:
  1391                           	opt stack 0
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           postdec1	equ	0xFE5
  1401                           fsr1l	equ	0xFE1
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _CANsendMessage *****************
  1405 ;; Defined at:
  1406 ;;		line 294 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  identifier      4   30[BANK0 ] unsigned long 
  1409 ;;  data            2   34[BANK0 ] PTR unsigned char 
  1410 ;;		 -> distance_array(8), status_array(8), speed_array(8), 
  1411 ;;  dataLength      1   36[BANK0 ] unsigned char 
  1412 ;;  flags           1   37[BANK0 ] enum E16907
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  tamp            4   42[BANK0 ] unsigned long 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;		None               void
  1417 ;; Registers used:
  1418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1424 ;;      Params:         0       8       0       0
  1425 ;;      Locals:         0       4       0       0
  1426 ;;      Temps:          0       4       0       0
  1427 ;;      Totals:         0      16       0       0
  1428 ;;Total ram usage:       16 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    4
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_remote_frame_handler
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text2
  1439  000D36                     __ptext2:
  1440                           	opt stack 0
  1441  000D36                     _CANsendMessage:
  1442                           	opt stack 25
  1443                           
  1444                           ;inc\CANlib.h: 296: unsigned long tamp;
  1445                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1446                           
  1447                           ;incstack = 0
  1448  000D36  010F               	movlb	15	; () banked
  1449  000D38  B740               	btfsc	64,3,b	;volatile
  1450  000D3A  D166               	goto	l383
  1451                           
  1452                           ; BSR set to: 15
  1453                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1454  000D3C  C084  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1455                           
  1456                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1457  000D40  0100               	movlb	0	; () banked
  1458  000D42  AD85               	btfss	CANsendMessage@flags& (0+255),6,b
  1459  000D44  D003               	goto	l384
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1463  000D46  010F               	movlb	15	; () banked
  1464  000D48  8D45               	bsf	69,6,b	;volatile
  1465  000D4A  D002               	goto	l385
  1466  000D4C                     l384:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;inc\CANlib.h: 302: else
  1470                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1471  000D4C  010F               	movlb	15	; () banked
  1472  000D4E  9D45               	bcf	69,6,b	;volatile
  1473  000D50                     l385:
  1474                           
  1475                           ; BSR set to: 15
  1476                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1477  000D50  0100               	movlb	0	; () banked
  1478  000D52  A785               	btfss	CANsendMessage@flags& (0+255),3,b
  1479  000D54  D087               	goto	l386
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;inc\CANlib.h: 306: {
  1483                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1484  000D56  0100               	movlb	0	; () banked
  1485  000D58  517E               	movf	CANsendMessage@identifier& (0+255),w,b
  1486  000D5A  0100               	movlb	0	; () banked
  1487  000D5C  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  1488  000D5E  0100               	movlb	0	; () banked
  1489  000D60  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1490  000D62  0100               	movlb	0	; () banked
  1491  000D64  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1492  000D66  0100               	movlb	0	; () banked
  1493  000D68  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1497  000D6A  C08A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1501  000D6E  0E00               	movlw	0
  1502  000D70  0100               	movlb	0	; () banked
  1503  000D72  157E               	andwf	CANsendMessage@identifier& (0+255),w,b
  1504  000D74  0100               	movlb	0	; () banked
  1505  000D76  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  1506  000D78  0EFF               	movlw	255
  1507  000D7A  0100               	movlb	0	; () banked
  1508  000D7C  157F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1509  000D7E  0100               	movlb	0	; () banked
  1510  000D80  6F8B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1511  000D82  0E00               	movlw	0
  1512  000D84  0100               	movlb	0	; () banked
  1513  000D86  1580               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1514  000D88  0100               	movlb	0	; () banked
  1515  000D8A  6F8C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1516  000D8C  0E00               	movlw	0
  1517  000D8E  0100               	movlb	0	; () banked
  1518  000D90  1581               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1519  000D92  0100               	movlb	0	; () banked
  1520  000D94  6F8D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1524  000D96  0100               	movlb	0	; () banked
  1525  000D98  C08A  F086         	movff	CANsendMessage@tamp,??_CANsendMessage
  1526  000D9C  0100               	movlb	0	; () banked
  1527  000D9E  C08B  F087         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1528  000DA2  0100               	movlb	0	; () banked
  1529  000DA4  C08C  F088         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1530  000DA8  0100               	movlb	0	; () banked
  1531  000DAA  C08D  F089         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1532  000DAE  C087  F086         	movff	??_CANsendMessage+1,??_CANsendMessage
  1533  000DB2  C088  F087         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1534  000DB6  C089  F088         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1535  000DBA  0100               	movlb	0	; () banked
  1536  000DBC  6B89               	clrf	(??_CANsendMessage+3)& (0+255),b
  1537  000DBE  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  1538  000DC2  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1539  000DC6  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1540  000DCA  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1544  000DCE  C08A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1548  000DD2  0E00               	movlw	0
  1549  000DD4  010F               	movlb	15	; () banked
  1550  000DD6  6F42               	movwf	66,b	;volatile
  1551                           
  1552                           ; BSR set to: 15
  1553                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1554  000DD8  010F               	movlb	15	; () banked
  1555  000DDA  8742               	bsf	66,3,b	;volatile
  1556                           
  1557                           ; BSR set to: 15
  1558                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1559  000DDC  0100               	movlb	0	; () banked
  1560  000DDE  A180               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1561  000DE0  D002               	goto	l387
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1565  000DE2  010F               	movlb	15	; () banked
  1566  000DE4  8142               	bsf	66,0,b	;volatile
  1567  000DE6                     l387:
  1568                           
  1569                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1570  000DE6  0100               	movlb	0	; () banked
  1571  000DE8  A380               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1572  000DEA  D002               	goto	l388
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1576  000DEC  010F               	movlb	15	; () banked
  1577  000DEE  8342               	bsf	66,1,b	;volatile
  1578  000DF0                     l388:
  1579                           
  1580                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1581  000DF0  0100               	movlb	0	; () banked
  1582  000DF2  A580               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1583  000DF4  D002               	goto	l389
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1587  000DF6  010F               	movlb	15	; () banked
  1588  000DF8  8B42               	bsf	66,5,b	;volatile
  1589  000DFA                     l389:
  1590                           
  1591                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1592  000DFA  0100               	movlb	0	; () banked
  1593  000DFC  A780               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1594  000DFE  D002               	goto	l390
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1598  000E00  010F               	movlb	15	; () banked
  1599  000E02  8D42               	bsf	66,6,b	;volatile
  1600  000E04                     l390:
  1601                           
  1602                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1603  000E04  0100               	movlb	0	; () banked
  1604  000E06  A980               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1605  000E08  D002               	goto	l3216
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1609  000E0A  010F               	movlb	15	; () banked
  1610  000E0C  8F42               	bsf	66,7,b	;volatile
  1611  000E0E                     l3216:
  1612                           
  1613                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1614  000E0E  0100               	movlb	0	; () banked
  1615  000E10  C07E  F086         	movff	CANsendMessage@identifier,??_CANsendMessage
  1616  000E14  0100               	movlb	0	; () banked
  1617  000E16  C07F  F087         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1618  000E1A  0100               	movlb	0	; () banked
  1619  000E1C  C080  F088         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1620  000E20  0100               	movlb	0	; () banked
  1621  000E22  C081  F089         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1622  000E26  0E16               	movlw	22
  1623  000E28  D006               	goto	u3390
  1624  000E2A                     u3395:
  1625  000E2A  0100               	movlb	0	; () banked
  1626  000E2C  90D8               	bcf	status,0,c
  1627  000E2E  3389               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1628  000E30  3388               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1629  000E32  3387               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1630  000E34  3386               	rrcf	??_CANsendMessage& (0+255),f,b
  1631  000E36                     u3390:
  1632  000E36  2EE8               	decfsz	wreg,f,c
  1633  000E38  D7F8               	goto	u3395
  1634  000E3A  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  1635  000E3E  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1636  000E42  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1637  000E46  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1641  000E4A  0100               	movlb	0	; () banked
  1642  000E4C  518A               	movf	CANsendMessage@tamp& (0+255),w,b
  1643  000E4E  0100               	movlb	0	; () banked
  1644  000E50  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  1645  000E52  0100               	movlb	0	; () banked
  1646  000E54  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1647  000E56  0100               	movlb	0	; () banked
  1648  000E58  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1649  000E5A  0100               	movlb	0	; () banked
  1650  000E5C  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1654  000E5E  C08A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1655                           
  1656                           ;inc\CANlib.h: 332: }
  1657  000E62  D064               	goto	l3236
  1658  000E64                     l386:
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;inc\CANlib.h: 334: else
  1662                           ;inc\CANlib.h: 336: {
  1663                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1664  000E64  010F               	movlb	15	; () banked
  1665  000E66  9742               	bcf	66,3,b	;volatile
  1666                           
  1667                           ; BSR set to: 15
  1668                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1669  000E68  0100               	movlb	0	; () banked
  1670  000E6A  C07E  F086         	movff	CANsendMessage@identifier,??_CANsendMessage
  1671  000E6E  0100               	movlb	0	; () banked
  1672  000E70  C07F  F087         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1673  000E74  0100               	movlb	0	; () banked
  1674  000E76  C080  F088         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1675  000E7A  0100               	movlb	0	; () banked
  1676  000E7C  C081  F089         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1677  000E80  0E04               	movlw	4
  1678  000E82  D006               	goto	u3400
  1679  000E84                     u3405:
  1680  000E84  0100               	movlb	0	; () banked
  1681  000E86  90D8               	bcf	status,0,c
  1682  000E88  3389               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1683  000E8A  3388               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1684  000E8C  3387               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1685  000E8E  3386               	rrcf	??_CANsendMessage& (0+255),f,b
  1686  000E90                     u3400:
  1687  000E90  2EE8               	decfsz	wreg,f,c
  1688  000E92  D7F8               	goto	u3405
  1689  000E94  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  1690  000E98  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1691  000E9C  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1692  000EA0  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1696  000EA4  0100               	movlb	0	; () banked
  1697  000EA6  518A               	movf	CANsendMessage@tamp& (0+255),w,b
  1698  000EA8  0100               	movlb	0	; () banked
  1699  000EAA  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  1700  000EAC  0100               	movlb	0	; () banked
  1701  000EAE  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1702  000EB0  0100               	movlb	0	; () banked
  1703  000EB2  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1704  000EB4  0100               	movlb	0	; () banked
  1705  000EB6  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1709  000EB8  C08A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1713  000EBC  0E07               	movlw	7
  1714  000EBE  0100               	movlb	0	; () banked
  1715  000EC0  157E               	andwf	CANsendMessage@identifier& (0+255),w,b
  1716  000EC2  0100               	movlb	0	; () banked
  1717  000EC4  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  1718  000EC6  0E00               	movlw	0
  1719  000EC8  0100               	movlb	0	; () banked
  1720  000ECA  157F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1721  000ECC  0100               	movlb	0	; () banked
  1722  000ECE  6F8B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1723  000ED0  0E00               	movlw	0
  1724  000ED2  0100               	movlb	0	; () banked
  1725  000ED4  1580               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1726  000ED6  0100               	movlb	0	; () banked
  1727  000ED8  6F8C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1728  000EDA  0E00               	movlw	0
  1729  000EDC  0100               	movlb	0	; () banked
  1730  000EDE  1581               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1731  000EE0  0100               	movlb	0	; () banked
  1732  000EE2  6F8D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1736  000EE4  0100               	movlb	0	; () banked
  1737  000EE6  C08A  F086         	movff	CANsendMessage@tamp,??_CANsendMessage
  1738  000EEA  0100               	movlb	0	; () banked
  1739  000EEC  C08B  F087         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1740  000EF0  0100               	movlb	0	; () banked
  1741  000EF2  C08C  F088         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1742  000EF6  0100               	movlb	0	; () banked
  1743  000EF8  C08D  F089         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1744  000EFC  0E05               	movlw	5
  1745  000EFE                     u3415:
  1746  000EFE  90D8               	bcf	status,0,c
  1747  000F00  0100               	movlb	0	; () banked
  1748  000F02  3786               	rlcf	??_CANsendMessage& (0+255),f,b
  1749  000F04  3787               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1750  000F06  3788               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1751  000F08  3789               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1752  000F0A  2EE8               	decfsz	wreg,f,c
  1753  000F0C  D7F8               	goto	u3415
  1754  000F0E  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  1755  000F12  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1756  000F16  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1757  000F1A  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1761  000F1E  010F               	movlb	15	; () banked
  1762  000F20  5142               	movf	66,w,b	;volatile
  1763  000F22  0B1F               	andlw	31
  1764  000F24  010F               	movlb	15	; () banked
  1765  000F26  6F42               	movwf	66,b	;volatile
  1766                           
  1767                           ; BSR set to: 15
  1768                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1769  000F28  C08A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1770  000F2C                     l3236:
  1771                           
  1772                           ;inc\CANlib.h: 347: }
  1773                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1774  000F2C  0100               	movlb	0	; () banked
  1775  000F2E  A185               	btfss	CANsendMessage@flags& (0+255),0,b
  1776  000F30  D003               	goto	l393
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1780  000F32  010F               	movlb	15	; () banked
  1781  000F34  8140               	bsf	64,0,b	;volatile
  1782  000F36  D002               	goto	l394
  1783  000F38                     l393:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;inc\CANlib.h: 351: else
  1787                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1788  000F38  010F               	movlb	15	; () banked
  1789  000F3A  9140               	bcf	64,0,b	;volatile
  1790  000F3C                     l394:
  1791                           
  1792                           ; BSR set to: 15
  1793                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1794  000F3C  0100               	movlb	0	; () banked
  1795  000F3E  A385               	btfss	CANsendMessage@flags& (0+255),1,b
  1796  000F40  D003               	goto	l395
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1800  000F42  010F               	movlb	15	; () banked
  1801  000F44  8340               	bsf	64,1,b	;volatile
  1802  000F46  D002               	goto	l3242
  1803  000F48                     l395:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;inc\CANlib.h: 355: else
  1807                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1808  000F48  010F               	movlb	15	; () banked
  1809  000F4A  9340               	bcf	64,1,b	;volatile
  1810  000F4C                     l3242:
  1811                           
  1812                           ; BSR set to: 15
  1813                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1814  000F4C  C082  FFD9         	movff	CANsendMessage@data,fsr2l
  1815  000F50  C083  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1816  000F54  50DF               	movf	indf2,w,c
  1817  000F56  010F               	movlb	15	; () banked
  1818  000F58  6F46               	movwf	70,b	;volatile
  1819                           
  1820                           ; BSR set to: 15
  1821                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1822  000F5A  0100               	movlb	0	; () banked
  1823  000F5C  EE20 F001          	lfsr	2,1
  1824  000F60  0100               	movlb	0	; () banked
  1825  000F62  5182               	movf	CANsendMessage@data& (0+255),w,b
  1826  000F64  26D9               	addwf	fsr2l,f,c
  1827  000F66  0100               	movlb	0	; () banked
  1828  000F68  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1829  000F6A  22DA               	addwfc	fsr2h,f,c
  1830  000F6C  50DF               	movf	indf2,w,c
  1831  000F6E  010F               	movlb	15	; () banked
  1832  000F70  6F47               	movwf	71,b	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1836  000F72  0100               	movlb	0	; () banked
  1837  000F74  EE20 F002          	lfsr	2,2
  1838  000F78  0100               	movlb	0	; () banked
  1839  000F7A  5182               	movf	CANsendMessage@data& (0+255),w,b
  1840  000F7C  26D9               	addwf	fsr2l,f,c
  1841  000F7E  0100               	movlb	0	; () banked
  1842  000F80  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1843  000F82  22DA               	addwfc	fsr2h,f,c
  1844  000F84  50DF               	movf	indf2,w,c
  1845  000F86  010F               	movlb	15	; () banked
  1846  000F88  6F48               	movwf	72,b	;volatile
  1847                           
  1848                           ; BSR set to: 15
  1849                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1850  000F8A  0100               	movlb	0	; () banked
  1851  000F8C  EE20 F003          	lfsr	2,3
  1852  000F90  0100               	movlb	0	; () banked
  1853  000F92  5182               	movf	CANsendMessage@data& (0+255),w,b
  1854  000F94  26D9               	addwf	fsr2l,f,c
  1855  000F96  0100               	movlb	0	; () banked
  1856  000F98  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1857  000F9A  22DA               	addwfc	fsr2h,f,c
  1858  000F9C  50DF               	movf	indf2,w,c
  1859  000F9E  010F               	movlb	15	; () banked
  1860  000FA0  6F49               	movwf	73,b	;volatile
  1861                           
  1862                           ; BSR set to: 15
  1863                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1864  000FA2  0100               	movlb	0	; () banked
  1865  000FA4  EE20 F004          	lfsr	2,4
  1866  000FA8  0100               	movlb	0	; () banked
  1867  000FAA  5182               	movf	CANsendMessage@data& (0+255),w,b
  1868  000FAC  26D9               	addwf	fsr2l,f,c
  1869  000FAE  0100               	movlb	0	; () banked
  1870  000FB0  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1871  000FB2  22DA               	addwfc	fsr2h,f,c
  1872  000FB4  50DF               	movf	indf2,w,c
  1873  000FB6  010F               	movlb	15	; () banked
  1874  000FB8  6F4A               	movwf	74,b	;volatile
  1875                           
  1876                           ; BSR set to: 15
  1877                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1878  000FBA  0100               	movlb	0	; () banked
  1879  000FBC  EE20 F005          	lfsr	2,5
  1880  000FC0  0100               	movlb	0	; () banked
  1881  000FC2  5182               	movf	CANsendMessage@data& (0+255),w,b
  1882  000FC4  26D9               	addwf	fsr2l,f,c
  1883  000FC6  0100               	movlb	0	; () banked
  1884  000FC8  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1885  000FCA  22DA               	addwfc	fsr2h,f,c
  1886  000FCC  50DF               	movf	indf2,w,c
  1887  000FCE  010F               	movlb	15	; () banked
  1888  000FD0  6F4B               	movwf	75,b	;volatile
  1889                           
  1890                           ; BSR set to: 15
  1891                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1892  000FD2  0100               	movlb	0	; () banked
  1893  000FD4  EE20 F006          	lfsr	2,6
  1894  000FD8  0100               	movlb	0	; () banked
  1895  000FDA  5182               	movf	CANsendMessage@data& (0+255),w,b
  1896  000FDC  26D9               	addwf	fsr2l,f,c
  1897  000FDE  0100               	movlb	0	; () banked
  1898  000FE0  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1899  000FE2  22DA               	addwfc	fsr2h,f,c
  1900  000FE4  50DF               	movf	indf2,w,c
  1901  000FE6  010F               	movlb	15	; () banked
  1902  000FE8  6F4C               	movwf	76,b	;volatile
  1903                           
  1904                           ; BSR set to: 15
  1905                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1906  000FEA  0100               	movlb	0	; () banked
  1907  000FEC  EE20 F007          	lfsr	2,7
  1908  000FF0  0100               	movlb	0	; () banked
  1909  000FF2  5182               	movf	CANsendMessage@data& (0+255),w,b
  1910  000FF4  26D9               	addwf	fsr2l,f,c
  1911  000FF6  0100               	movlb	0	; () banked
  1912  000FF8  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1913  000FFA  22DA               	addwfc	fsr2h,f,c
  1914  000FFC  50DF               	movf	indf2,w,c
  1915  000FFE  010F               	movlb	15	; () banked
  1916  001000  6F4D               	movwf	77,b	;volatile
  1917                           
  1918                           ; BSR set to: 15
  1919                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1920  001002  010F               	movlb	15	; () banked
  1921  001004  8740               	bsf	64,3,b	;volatile
  1922  001006  D2D1               	goto	l397
  1923  001008                     l383:
  1924                           
  1925                           ; BSR set to: 15
  1926                           ;inc\CANlib.h: 369: }
  1927                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1928  001008  010F               	movlb	15	; () banked
  1929  00100A  B730               	btfsc	48,3,b	;volatile
  1930  00100C  D166               	goto	l398
  1931                           
  1932                           ; BSR set to: 15
  1933                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1934  00100E  C084  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1935                           
  1936                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1937  001012  0100               	movlb	0	; () banked
  1938  001014  AD85               	btfss	CANsendMessage@flags& (0+255),6,b
  1939  001016  D003               	goto	l399
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1943  001018  010F               	movlb	15	; () banked
  1944  00101A  8D35               	bsf	53,6,b	;volatile
  1945  00101C  D002               	goto	l400
  1946  00101E                     l399:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;inc\CANlib.h: 378: else
  1950                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1951  00101E  010F               	movlb	15	; () banked
  1952  001020  9D35               	bcf	53,6,b	;volatile
  1953  001022                     l400:
  1954                           
  1955                           ; BSR set to: 15
  1956                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1957  001022  0100               	movlb	0	; () banked
  1958  001024  A785               	btfss	CANsendMessage@flags& (0+255),3,b
  1959  001026  D087               	goto	l401
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;inc\CANlib.h: 382: {
  1963                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1964  001028  0100               	movlb	0	; () banked
  1965  00102A  517E               	movf	CANsendMessage@identifier& (0+255),w,b
  1966  00102C  0100               	movlb	0	; () banked
  1967  00102E  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  1968  001030  0100               	movlb	0	; () banked
  1969  001032  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1970  001034  0100               	movlb	0	; () banked
  1971  001036  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1972  001038  0100               	movlb	0	; () banked
  1973  00103A  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1977  00103C  C08A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1981  001040  0E00               	movlw	0
  1982  001042  0100               	movlb	0	; () banked
  1983  001044  157E               	andwf	CANsendMessage@identifier& (0+255),w,b
  1984  001046  0100               	movlb	0	; () banked
  1985  001048  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  1986  00104A  0EFF               	movlw	255
  1987  00104C  0100               	movlb	0	; () banked
  1988  00104E  157F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1989  001050  0100               	movlb	0	; () banked
  1990  001052  6F8B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1991  001054  0E00               	movlw	0
  1992  001056  0100               	movlb	0	; () banked
  1993  001058  1580               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1994  00105A  0100               	movlb	0	; () banked
  1995  00105C  6F8C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1996  00105E  0E00               	movlw	0
  1997  001060  0100               	movlb	0	; () banked
  1998  001062  1581               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1999  001064  0100               	movlb	0	; () banked
  2000  001066  6F8D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2004  001068  0100               	movlb	0	; () banked
  2005  00106A  C08A  F086         	movff	CANsendMessage@tamp,??_CANsendMessage
  2006  00106E  0100               	movlb	0	; () banked
  2007  001070  C08B  F087         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2008  001074  0100               	movlb	0	; () banked
  2009  001076  C08C  F088         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2010  00107A  0100               	movlb	0	; () banked
  2011  00107C  C08D  F089         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2012  001080  C087  F086         	movff	??_CANsendMessage+1,??_CANsendMessage
  2013  001084  C088  F087         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2014  001088  C089  F088         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2015  00108C  0100               	movlb	0	; () banked
  2016  00108E  6B89               	clrf	(??_CANsendMessage+3)& (0+255),b
  2017  001090  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2018  001094  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2019  001098  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2020  00109C  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2024  0010A0  C08A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2028  0010A4  0E00               	movlw	0
  2029  0010A6  010F               	movlb	15	; () banked
  2030  0010A8  6F32               	movwf	50,b	;volatile
  2031                           
  2032                           ; BSR set to: 15
  2033                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2034  0010AA  010F               	movlb	15	; () banked
  2035  0010AC  8732               	bsf	50,3,b	;volatile
  2036                           
  2037                           ; BSR set to: 15
  2038                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2039  0010AE  0100               	movlb	0	; () banked
  2040  0010B0  A180               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2041  0010B2  D002               	goto	l402
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2045  0010B4  010F               	movlb	15	; () banked
  2046  0010B6  8132               	bsf	50,0,b	;volatile
  2047  0010B8                     l402:
  2048                           
  2049                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2050  0010B8  0100               	movlb	0	; () banked
  2051  0010BA  A380               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2052  0010BC  D002               	goto	l403
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2056  0010BE  010F               	movlb	15	; () banked
  2057  0010C0  8332               	bsf	50,1,b	;volatile
  2058  0010C2                     l403:
  2059                           
  2060                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2061  0010C2  0100               	movlb	0	; () banked
  2062  0010C4  A580               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2063  0010C6  D002               	goto	l404
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2067  0010C8  010F               	movlb	15	; () banked
  2068  0010CA  8B32               	bsf	50,5,b	;volatile
  2069  0010CC                     l404:
  2070                           
  2071                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2072  0010CC  0100               	movlb	0	; () banked
  2073  0010CE  A780               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2074  0010D0  D002               	goto	l405
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2078  0010D2  010F               	movlb	15	; () banked
  2079  0010D4  8D32               	bsf	50,6,b	;volatile
  2080  0010D6                     l405:
  2081                           
  2082                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2083  0010D6  0100               	movlb	0	; () banked
  2084  0010D8  A980               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2085  0010DA  D002               	goto	l3292
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2089  0010DC  010F               	movlb	15	; () banked
  2090  0010DE  8F32               	bsf	50,7,b	;volatile
  2091  0010E0                     l3292:
  2092                           
  2093                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2094  0010E0  0100               	movlb	0	; () banked
  2095  0010E2  C07E  F086         	movff	CANsendMessage@identifier,??_CANsendMessage
  2096  0010E6  0100               	movlb	0	; () banked
  2097  0010E8  C07F  F087         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2098  0010EC  0100               	movlb	0	; () banked
  2099  0010EE  C080  F088         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2100  0010F2  0100               	movlb	0	; () banked
  2101  0010F4  C081  F089         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2102  0010F8  0E16               	movlw	22
  2103  0010FA  D006               	goto	u3520
  2104  0010FC                     u3525:
  2105  0010FC  0100               	movlb	0	; () banked
  2106  0010FE  90D8               	bcf	status,0,c
  2107  001100  3389               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2108  001102  3388               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2109  001104  3387               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2110  001106  3386               	rrcf	??_CANsendMessage& (0+255),f,b
  2111  001108                     u3520:
  2112  001108  2EE8               	decfsz	wreg,f,c
  2113  00110A  D7F8               	goto	u3525
  2114  00110C  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2115  001110  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2116  001114  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2117  001118  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2121  00111C  0100               	movlb	0	; () banked
  2122  00111E  518A               	movf	CANsendMessage@tamp& (0+255),w,b
  2123  001120  0100               	movlb	0	; () banked
  2124  001122  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2125  001124  0100               	movlb	0	; () banked
  2126  001126  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2127  001128  0100               	movlb	0	; () banked
  2128  00112A  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2129  00112C  0100               	movlb	0	; () banked
  2130  00112E  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2134  001130  C08A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2135                           
  2136                           ;inc\CANlib.h: 407: }
  2137  001134  D064               	goto	l3312
  2138  001136                     l401:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;inc\CANlib.h: 409: else
  2142                           ;inc\CANlib.h: 411: {
  2143                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2144  001136  010F               	movlb	15	; () banked
  2145  001138  9732               	bcf	50,3,b	;volatile
  2146                           
  2147                           ; BSR set to: 15
  2148                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2149  00113A  0100               	movlb	0	; () banked
  2150  00113C  C07E  F086         	movff	CANsendMessage@identifier,??_CANsendMessage
  2151  001140  0100               	movlb	0	; () banked
  2152  001142  C07F  F087         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2153  001146  0100               	movlb	0	; () banked
  2154  001148  C080  F088         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2155  00114C  0100               	movlb	0	; () banked
  2156  00114E  C081  F089         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2157  001152  0E04               	movlw	4
  2158  001154  D006               	goto	u3530
  2159  001156                     u3535:
  2160  001156  0100               	movlb	0	; () banked
  2161  001158  90D8               	bcf	status,0,c
  2162  00115A  3389               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2163  00115C  3388               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2164  00115E  3387               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2165  001160  3386               	rrcf	??_CANsendMessage& (0+255),f,b
  2166  001162                     u3530:
  2167  001162  2EE8               	decfsz	wreg,f,c
  2168  001164  D7F8               	goto	u3535
  2169  001166  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2170  00116A  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2171  00116E  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2172  001172  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2176  001176  0100               	movlb	0	; () banked
  2177  001178  518A               	movf	CANsendMessage@tamp& (0+255),w,b
  2178  00117A  0100               	movlb	0	; () banked
  2179  00117C  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2180  00117E  0100               	movlb	0	; () banked
  2181  001180  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2182  001182  0100               	movlb	0	; () banked
  2183  001184  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2184  001186  0100               	movlb	0	; () banked
  2185  001188  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2189  00118A  C08A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2193  00118E  0E07               	movlw	7
  2194  001190  0100               	movlb	0	; () banked
  2195  001192  157E               	andwf	CANsendMessage@identifier& (0+255),w,b
  2196  001194  0100               	movlb	0	; () banked
  2197  001196  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2198  001198  0E00               	movlw	0
  2199  00119A  0100               	movlb	0	; () banked
  2200  00119C  157F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2201  00119E  0100               	movlb	0	; () banked
  2202  0011A0  6F8B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2203  0011A2  0E00               	movlw	0
  2204  0011A4  0100               	movlb	0	; () banked
  2205  0011A6  1580               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2206  0011A8  0100               	movlb	0	; () banked
  2207  0011AA  6F8C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2208  0011AC  0E00               	movlw	0
  2209  0011AE  0100               	movlb	0	; () banked
  2210  0011B0  1581               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2211  0011B2  0100               	movlb	0	; () banked
  2212  0011B4  6F8D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2216  0011B6  0100               	movlb	0	; () banked
  2217  0011B8  C08A  F086         	movff	CANsendMessage@tamp,??_CANsendMessage
  2218  0011BC  0100               	movlb	0	; () banked
  2219  0011BE  C08B  F087         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2220  0011C2  0100               	movlb	0	; () banked
  2221  0011C4  C08C  F088         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2222  0011C8  0100               	movlb	0	; () banked
  2223  0011CA  C08D  F089         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2224  0011CE  0E05               	movlw	5
  2225  0011D0                     u3545:
  2226  0011D0  90D8               	bcf	status,0,c
  2227  0011D2  0100               	movlb	0	; () banked
  2228  0011D4  3786               	rlcf	??_CANsendMessage& (0+255),f,b
  2229  0011D6  3787               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2230  0011D8  3788               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2231  0011DA  3789               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2232  0011DC  2EE8               	decfsz	wreg,f,c
  2233  0011DE  D7F8               	goto	u3545
  2234  0011E0  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2235  0011E4  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2236  0011E8  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2237  0011EC  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2241  0011F0  010F               	movlb	15	; () banked
  2242  0011F2  5132               	movf	50,w,b	;volatile
  2243  0011F4  0B1F               	andlw	31
  2244  0011F6  010F               	movlb	15	; () banked
  2245  0011F8  6F32               	movwf	50,b	;volatile
  2246                           
  2247                           ; BSR set to: 15
  2248                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2249  0011FA  C08A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2250  0011FE                     l3312:
  2251                           
  2252                           ;inc\CANlib.h: 422: }
  2253                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2254  0011FE  0100               	movlb	0	; () banked
  2255  001200  A185               	btfss	CANsendMessage@flags& (0+255),0,b
  2256  001202  D003               	goto	l408
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2260  001204  010F               	movlb	15	; () banked
  2261  001206  8130               	bsf	48,0,b	;volatile
  2262  001208  D002               	goto	l409
  2263  00120A                     l408:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;inc\CANlib.h: 426: else
  2267                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2268  00120A  010F               	movlb	15	; () banked
  2269  00120C  9130               	bcf	48,0,b	;volatile
  2270  00120E                     l409:
  2271                           
  2272                           ; BSR set to: 15
  2273                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2274  00120E  0100               	movlb	0	; () banked
  2275  001210  A385               	btfss	CANsendMessage@flags& (0+255),1,b
  2276  001212  D003               	goto	l410
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2280  001214  010F               	movlb	15	; () banked
  2281  001216  8330               	bsf	48,1,b	;volatile
  2282  001218  D002               	goto	l3318
  2283  00121A                     l410:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;inc\CANlib.h: 430: else
  2287                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2288  00121A  010F               	movlb	15	; () banked
  2289  00121C  9330               	bcf	48,1,b	;volatile
  2290  00121E                     l3318:
  2291                           
  2292                           ; BSR set to: 15
  2293                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2294  00121E  C082  FFD9         	movff	CANsendMessage@data,fsr2l
  2295  001222  C083  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2296  001226  50DF               	movf	indf2,w,c
  2297  001228  010F               	movlb	15	; () banked
  2298  00122A  6F36               	movwf	54,b	;volatile
  2299                           
  2300                           ; BSR set to: 15
  2301                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2302  00122C  0100               	movlb	0	; () banked
  2303  00122E  EE20 F001          	lfsr	2,1
  2304  001232  0100               	movlb	0	; () banked
  2305  001234  5182               	movf	CANsendMessage@data& (0+255),w,b
  2306  001236  26D9               	addwf	fsr2l,f,c
  2307  001238  0100               	movlb	0	; () banked
  2308  00123A  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2309  00123C  22DA               	addwfc	fsr2h,f,c
  2310  00123E  50DF               	movf	indf2,w,c
  2311  001240  010F               	movlb	15	; () banked
  2312  001242  6F37               	movwf	55,b	;volatile
  2313                           
  2314                           ; BSR set to: 15
  2315                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2316  001244  0100               	movlb	0	; () banked
  2317  001246  EE20 F002          	lfsr	2,2
  2318  00124A  0100               	movlb	0	; () banked
  2319  00124C  5182               	movf	CANsendMessage@data& (0+255),w,b
  2320  00124E  26D9               	addwf	fsr2l,f,c
  2321  001250  0100               	movlb	0	; () banked
  2322  001252  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2323  001254  22DA               	addwfc	fsr2h,f,c
  2324  001256  50DF               	movf	indf2,w,c
  2325  001258  010F               	movlb	15	; () banked
  2326  00125A  6F38               	movwf	56,b	;volatile
  2327                           
  2328                           ; BSR set to: 15
  2329                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2330  00125C  0100               	movlb	0	; () banked
  2331  00125E  EE20 F003          	lfsr	2,3
  2332  001262  0100               	movlb	0	; () banked
  2333  001264  5182               	movf	CANsendMessage@data& (0+255),w,b
  2334  001266  26D9               	addwf	fsr2l,f,c
  2335  001268  0100               	movlb	0	; () banked
  2336  00126A  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2337  00126C  22DA               	addwfc	fsr2h,f,c
  2338  00126E  50DF               	movf	indf2,w,c
  2339  001270  010F               	movlb	15	; () banked
  2340  001272  6F39               	movwf	57,b	;volatile
  2341                           
  2342                           ; BSR set to: 15
  2343                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2344  001274  0100               	movlb	0	; () banked
  2345  001276  EE20 F004          	lfsr	2,4
  2346  00127A  0100               	movlb	0	; () banked
  2347  00127C  5182               	movf	CANsendMessage@data& (0+255),w,b
  2348  00127E  26D9               	addwf	fsr2l,f,c
  2349  001280  0100               	movlb	0	; () banked
  2350  001282  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2351  001284  22DA               	addwfc	fsr2h,f,c
  2352  001286  50DF               	movf	indf2,w,c
  2353  001288  010F               	movlb	15	; () banked
  2354  00128A  6F3A               	movwf	58,b	;volatile
  2355                           
  2356                           ; BSR set to: 15
  2357                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2358  00128C  0100               	movlb	0	; () banked
  2359  00128E  EE20 F005          	lfsr	2,5
  2360  001292  0100               	movlb	0	; () banked
  2361  001294  5182               	movf	CANsendMessage@data& (0+255),w,b
  2362  001296  26D9               	addwf	fsr2l,f,c
  2363  001298  0100               	movlb	0	; () banked
  2364  00129A  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2365  00129C  22DA               	addwfc	fsr2h,f,c
  2366  00129E  50DF               	movf	indf2,w,c
  2367  0012A0  010F               	movlb	15	; () banked
  2368  0012A2  6F3B               	movwf	59,b	;volatile
  2369                           
  2370                           ; BSR set to: 15
  2371                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2372  0012A4  0100               	movlb	0	; () banked
  2373  0012A6  EE20 F006          	lfsr	2,6
  2374  0012AA  0100               	movlb	0	; () banked
  2375  0012AC  5182               	movf	CANsendMessage@data& (0+255),w,b
  2376  0012AE  26D9               	addwf	fsr2l,f,c
  2377  0012B0  0100               	movlb	0	; () banked
  2378  0012B2  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2379  0012B4  22DA               	addwfc	fsr2h,f,c
  2380  0012B6  50DF               	movf	indf2,w,c
  2381  0012B8  010F               	movlb	15	; () banked
  2382  0012BA  6F3C               	movwf	60,b	;volatile
  2383                           
  2384                           ; BSR set to: 15
  2385                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2386  0012BC  0100               	movlb	0	; () banked
  2387  0012BE  EE20 F007          	lfsr	2,7
  2388  0012C2  0100               	movlb	0	; () banked
  2389  0012C4  5182               	movf	CANsendMessage@data& (0+255),w,b
  2390  0012C6  26D9               	addwf	fsr2l,f,c
  2391  0012C8  0100               	movlb	0	; () banked
  2392  0012CA  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2393  0012CC  22DA               	addwfc	fsr2h,f,c
  2394  0012CE  50DF               	movf	indf2,w,c
  2395  0012D0  010F               	movlb	15	; () banked
  2396  0012D2  6F3D               	movwf	61,b	;volatile
  2397                           
  2398                           ; BSR set to: 15
  2399                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2400  0012D4  010F               	movlb	15	; () banked
  2401  0012D6  8730               	bsf	48,3,b	;volatile
  2402  0012D8  D168               	goto	l397
  2403  0012DA                     l398:
  2404                           
  2405                           ; BSR set to: 15
  2406                           ;inc\CANlib.h: 445: }
  2407                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2408  0012DA  010F               	movlb	15	; () banked
  2409  0012DC  B720               	btfsc	32,3,b	;volatile
  2410  0012DE  D165               	goto	l397
  2411                           
  2412                           ; BSR set to: 15
  2413                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2414  0012E0  C084  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2415                           
  2416                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2417  0012E4  0100               	movlb	0	; () banked
  2418  0012E6  AD85               	btfss	CANsendMessage@flags& (0+255),6,b
  2419  0012E8  D003               	goto	l413
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2423  0012EA  010F               	movlb	15	; () banked
  2424  0012EC  8D25               	bsf	37,6,b	;volatile
  2425  0012EE  D002               	goto	l414
  2426  0012F0                     l413:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;inc\CANlib.h: 454: else
  2430                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2431  0012F0  010F               	movlb	15	; () banked
  2432  0012F2  9D25               	bcf	37,6,b	;volatile
  2433  0012F4                     l414:
  2434                           
  2435                           ; BSR set to: 15
  2436                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2437  0012F4  0100               	movlb	0	; () banked
  2438  0012F6  A785               	btfss	CANsendMessage@flags& (0+255),3,b
  2439  0012F8  D087               	goto	l415
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;inc\CANlib.h: 458: {
  2443                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2444  0012FA  0100               	movlb	0	; () banked
  2445  0012FC  517E               	movf	CANsendMessage@identifier& (0+255),w,b
  2446  0012FE  0100               	movlb	0	; () banked
  2447  001300  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2448  001302  0100               	movlb	0	; () banked
  2449  001304  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2450  001306  0100               	movlb	0	; () banked
  2451  001308  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2452  00130A  0100               	movlb	0	; () banked
  2453  00130C  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2457  00130E  C08A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2461  001312  0E00               	movlw	0
  2462  001314  0100               	movlb	0	; () banked
  2463  001316  157E               	andwf	CANsendMessage@identifier& (0+255),w,b
  2464  001318  0100               	movlb	0	; () banked
  2465  00131A  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2466  00131C  0EFF               	movlw	255
  2467  00131E  0100               	movlb	0	; () banked
  2468  001320  157F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2469  001322  0100               	movlb	0	; () banked
  2470  001324  6F8B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2471  001326  0E00               	movlw	0
  2472  001328  0100               	movlb	0	; () banked
  2473  00132A  1580               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2474  00132C  0100               	movlb	0	; () banked
  2475  00132E  6F8C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2476  001330  0E00               	movlw	0
  2477  001332  0100               	movlb	0	; () banked
  2478  001334  1581               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2479  001336  0100               	movlb	0	; () banked
  2480  001338  6F8D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2484  00133A  0100               	movlb	0	; () banked
  2485  00133C  C08A  F086         	movff	CANsendMessage@tamp,??_CANsendMessage
  2486  001340  0100               	movlb	0	; () banked
  2487  001342  C08B  F087         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2488  001346  0100               	movlb	0	; () banked
  2489  001348  C08C  F088         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2490  00134C  0100               	movlb	0	; () banked
  2491  00134E  C08D  F089         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2492  001352  C087  F086         	movff	??_CANsendMessage+1,??_CANsendMessage
  2493  001356  C088  F087         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2494  00135A  C089  F088         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2495  00135E  0100               	movlb	0	; () banked
  2496  001360  6B89               	clrf	(??_CANsendMessage+3)& (0+255),b
  2497  001362  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2498  001366  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2499  00136A  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2500  00136E  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2504  001372  C08A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2508  001376  0E00               	movlw	0
  2509  001378  010F               	movlb	15	; () banked
  2510  00137A  6F22               	movwf	34,b	;volatile
  2511                           
  2512                           ; BSR set to: 15
  2513                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2514  00137C  010F               	movlb	15	; () banked
  2515  00137E  8722               	bsf	34,3,b	;volatile
  2516                           
  2517                           ; BSR set to: 15
  2518                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2519  001380  0100               	movlb	0	; () banked
  2520  001382  A180               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2521  001384  D002               	goto	l416
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2525  001386  010F               	movlb	15	; () banked
  2526  001388  8122               	bsf	34,0,b	;volatile
  2527  00138A                     l416:
  2528                           
  2529                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2530  00138A  0100               	movlb	0	; () banked
  2531  00138C  A380               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2532  00138E  D002               	goto	l417
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2536  001390  010F               	movlb	15	; () banked
  2537  001392  8322               	bsf	34,1,b	;volatile
  2538  001394                     l417:
  2539                           
  2540                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2541  001394  0100               	movlb	0	; () banked
  2542  001396  A580               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2543  001398  D002               	goto	l418
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2547  00139A  010F               	movlb	15	; () banked
  2548  00139C  8B22               	bsf	34,5,b	;volatile
  2549  00139E                     l418:
  2550                           
  2551                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2552  00139E  0100               	movlb	0	; () banked
  2553  0013A0  A780               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2554  0013A2  D002               	goto	l419
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2558  0013A4  010F               	movlb	15	; () banked
  2559  0013A6  8D22               	bsf	34,6,b	;volatile
  2560  0013A8                     l419:
  2561                           
  2562                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2563  0013A8  0100               	movlb	0	; () banked
  2564  0013AA  A980               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2565  0013AC  D002               	goto	l3368
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2569  0013AE  010F               	movlb	15	; () banked
  2570  0013B0  8F22               	bsf	34,7,b	;volatile
  2571  0013B2                     l3368:
  2572                           
  2573                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2574  0013B2  0100               	movlb	0	; () banked
  2575  0013B4  C07E  F086         	movff	CANsendMessage@identifier,??_CANsendMessage
  2576  0013B8  0100               	movlb	0	; () banked
  2577  0013BA  C07F  F087         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2578  0013BE  0100               	movlb	0	; () banked
  2579  0013C0  C080  F088         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2580  0013C4  0100               	movlb	0	; () banked
  2581  0013C6  C081  F089         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2582  0013CA  0E16               	movlw	22
  2583  0013CC  D006               	goto	u3650
  2584  0013CE                     u3655:
  2585  0013CE  0100               	movlb	0	; () banked
  2586  0013D0  90D8               	bcf	status,0,c
  2587  0013D2  3389               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2588  0013D4  3388               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2589  0013D6  3387               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2590  0013D8  3386               	rrcf	??_CANsendMessage& (0+255),f,b
  2591  0013DA                     u3650:
  2592  0013DA  2EE8               	decfsz	wreg,f,c
  2593  0013DC  D7F8               	goto	u3655
  2594  0013DE  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2595  0013E2  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2596  0013E6  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2597  0013EA  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2601  0013EE  0100               	movlb	0	; () banked
  2602  0013F0  518A               	movf	CANsendMessage@tamp& (0+255),w,b
  2603  0013F2  0100               	movlb	0	; () banked
  2604  0013F4  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2605  0013F6  0100               	movlb	0	; () banked
  2606  0013F8  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2607  0013FA  0100               	movlb	0	; () banked
  2608  0013FC  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2609  0013FE  0100               	movlb	0	; () banked
  2610  001400  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2614  001402  C08A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2615                           
  2616                           ;inc\CANlib.h: 483: }
  2617  001406  D064               	goto	l3388
  2618  001408                     l415:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;inc\CANlib.h: 485: else
  2622                           ;inc\CANlib.h: 487: {
  2623                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2624  001408  010F               	movlb	15	; () banked
  2625  00140A  9722               	bcf	34,3,b	;volatile
  2626                           
  2627                           ; BSR set to: 15
  2628                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2629  00140C  0100               	movlb	0	; () banked
  2630  00140E  C07E  F086         	movff	CANsendMessage@identifier,??_CANsendMessage
  2631  001412  0100               	movlb	0	; () banked
  2632  001414  C07F  F087         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2633  001418  0100               	movlb	0	; () banked
  2634  00141A  C080  F088         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2635  00141E  0100               	movlb	0	; () banked
  2636  001420  C081  F089         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2637  001424  0E04               	movlw	4
  2638  001426  D006               	goto	u3660
  2639  001428                     u3665:
  2640  001428  0100               	movlb	0	; () banked
  2641  00142A  90D8               	bcf	status,0,c
  2642  00142C  3389               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2643  00142E  3388               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2644  001430  3387               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2645  001432  3386               	rrcf	??_CANsendMessage& (0+255),f,b
  2646  001434                     u3660:
  2647  001434  2EE8               	decfsz	wreg,f,c
  2648  001436  D7F8               	goto	u3665
  2649  001438  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2650  00143C  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2651  001440  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2652  001444  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2656  001448  0100               	movlb	0	; () banked
  2657  00144A  518A               	movf	CANsendMessage@tamp& (0+255),w,b
  2658  00144C  0100               	movlb	0	; () banked
  2659  00144E  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2660  001450  0100               	movlb	0	; () banked
  2661  001452  6B8B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2662  001454  0100               	movlb	0	; () banked
  2663  001456  6B8C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2664  001458  0100               	movlb	0	; () banked
  2665  00145A  6B8D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2669  00145C  C08A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2673  001460  0E07               	movlw	7
  2674  001462  0100               	movlb	0	; () banked
  2675  001464  157E               	andwf	CANsendMessage@identifier& (0+255),w,b
  2676  001466  0100               	movlb	0	; () banked
  2677  001468  6F8A               	movwf	CANsendMessage@tamp& (0+255),b
  2678  00146A  0E00               	movlw	0
  2679  00146C  0100               	movlb	0	; () banked
  2680  00146E  157F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2681  001470  0100               	movlb	0	; () banked
  2682  001472  6F8B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2683  001474  0E00               	movlw	0
  2684  001476  0100               	movlb	0	; () banked
  2685  001478  1580               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2686  00147A  0100               	movlb	0	; () banked
  2687  00147C  6F8C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2688  00147E  0E00               	movlw	0
  2689  001480  0100               	movlb	0	; () banked
  2690  001482  1581               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2691  001484  0100               	movlb	0	; () banked
  2692  001486  6F8D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2696  001488  0100               	movlb	0	; () banked
  2697  00148A  C08A  F086         	movff	CANsendMessage@tamp,??_CANsendMessage
  2698  00148E  0100               	movlb	0	; () banked
  2699  001490  C08B  F087         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2700  001494  0100               	movlb	0	; () banked
  2701  001496  C08C  F088         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2702  00149A  0100               	movlb	0	; () banked
  2703  00149C  C08D  F089         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2704  0014A0  0E05               	movlw	5
  2705  0014A2                     u3675:
  2706  0014A2  90D8               	bcf	status,0,c
  2707  0014A4  0100               	movlb	0	; () banked
  2708  0014A6  3786               	rlcf	??_CANsendMessage& (0+255),f,b
  2709  0014A8  3787               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2710  0014AA  3788               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2711  0014AC  3789               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2712  0014AE  2EE8               	decfsz	wreg,f,c
  2713  0014B0  D7F8               	goto	u3675
  2714  0014B2  C086  F08A         	movff	??_CANsendMessage,CANsendMessage@tamp
  2715  0014B6  C087  F08B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2716  0014BA  C088  F08C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2717  0014BE  C089  F08D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2721  0014C2  010F               	movlb	15	; () banked
  2722  0014C4  5122               	movf	34,w,b	;volatile
  2723  0014C6  0B1F               	andlw	31
  2724  0014C8  010F               	movlb	15	; () banked
  2725  0014CA  6F22               	movwf	34,b	;volatile
  2726                           
  2727                           ; BSR set to: 15
  2728                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2729  0014CC  C08A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2730  0014D0                     l3388:
  2731                           
  2732                           ;inc\CANlib.h: 498: }
  2733                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2734  0014D0  0100               	movlb	0	; () banked
  2735  0014D2  A185               	btfss	CANsendMessage@flags& (0+255),0,b
  2736  0014D4  D003               	goto	l422
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2740  0014D6  010F               	movlb	15	; () banked
  2741  0014D8  8120               	bsf	32,0,b	;volatile
  2742  0014DA  D002               	goto	l423
  2743  0014DC                     l422:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;inc\CANlib.h: 502: else
  2747                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2748  0014DC  010F               	movlb	15	; () banked
  2749  0014DE  9120               	bcf	32,0,b	;volatile
  2750  0014E0                     l423:
  2751                           
  2752                           ; BSR set to: 15
  2753                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2754  0014E0  0100               	movlb	0	; () banked
  2755  0014E2  A385               	btfss	CANsendMessage@flags& (0+255),1,b
  2756  0014E4  D003               	goto	l424
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2760  0014E6  010F               	movlb	15	; () banked
  2761  0014E8  8320               	bsf	32,1,b	;volatile
  2762  0014EA  D002               	goto	l3394
  2763  0014EC                     l424:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;inc\CANlib.h: 506: else
  2767                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2768  0014EC  010F               	movlb	15	; () banked
  2769  0014EE  9320               	bcf	32,1,b	;volatile
  2770  0014F0                     l3394:
  2771                           
  2772                           ; BSR set to: 15
  2773                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2774  0014F0  C082  FFD9         	movff	CANsendMessage@data,fsr2l
  2775  0014F4  C083  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2776  0014F8  50DF               	movf	indf2,w,c
  2777  0014FA  010F               	movlb	15	; () banked
  2778  0014FC  6F26               	movwf	38,b	;volatile
  2779                           
  2780                           ; BSR set to: 15
  2781                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2782  0014FE  0100               	movlb	0	; () banked
  2783  001500  EE20 F001          	lfsr	2,1
  2784  001504  0100               	movlb	0	; () banked
  2785  001506  5182               	movf	CANsendMessage@data& (0+255),w,b
  2786  001508  26D9               	addwf	fsr2l,f,c
  2787  00150A  0100               	movlb	0	; () banked
  2788  00150C  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2789  00150E  22DA               	addwfc	fsr2h,f,c
  2790  001510  50DF               	movf	indf2,w,c
  2791  001512  010F               	movlb	15	; () banked
  2792  001514  6F27               	movwf	39,b	;volatile
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2796  001516  0100               	movlb	0	; () banked
  2797  001518  EE20 F002          	lfsr	2,2
  2798  00151C  0100               	movlb	0	; () banked
  2799  00151E  5182               	movf	CANsendMessage@data& (0+255),w,b
  2800  001520  26D9               	addwf	fsr2l,f,c
  2801  001522  0100               	movlb	0	; () banked
  2802  001524  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2803  001526  22DA               	addwfc	fsr2h,f,c
  2804  001528  50DF               	movf	indf2,w,c
  2805  00152A  010F               	movlb	15	; () banked
  2806  00152C  6F28               	movwf	40,b	;volatile
  2807                           
  2808                           ; BSR set to: 15
  2809                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2810  00152E  0100               	movlb	0	; () banked
  2811  001530  EE20 F003          	lfsr	2,3
  2812  001534  0100               	movlb	0	; () banked
  2813  001536  5182               	movf	CANsendMessage@data& (0+255),w,b
  2814  001538  26D9               	addwf	fsr2l,f,c
  2815  00153A  0100               	movlb	0	; () banked
  2816  00153C  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2817  00153E  22DA               	addwfc	fsr2h,f,c
  2818  001540  50DF               	movf	indf2,w,c
  2819  001542  010F               	movlb	15	; () banked
  2820  001544  6F29               	movwf	41,b	;volatile
  2821                           
  2822                           ; BSR set to: 15
  2823                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2824  001546  0100               	movlb	0	; () banked
  2825  001548  EE20 F004          	lfsr	2,4
  2826  00154C  0100               	movlb	0	; () banked
  2827  00154E  5182               	movf	CANsendMessage@data& (0+255),w,b
  2828  001550  26D9               	addwf	fsr2l,f,c
  2829  001552  0100               	movlb	0	; () banked
  2830  001554  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2831  001556  22DA               	addwfc	fsr2h,f,c
  2832  001558  50DF               	movf	indf2,w,c
  2833  00155A  010F               	movlb	15	; () banked
  2834  00155C  6F2A               	movwf	42,b	;volatile
  2835                           
  2836                           ; BSR set to: 15
  2837                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2838  00155E  0100               	movlb	0	; () banked
  2839  001560  EE20 F005          	lfsr	2,5
  2840  001564  0100               	movlb	0	; () banked
  2841  001566  5182               	movf	CANsendMessage@data& (0+255),w,b
  2842  001568  26D9               	addwf	fsr2l,f,c
  2843  00156A  0100               	movlb	0	; () banked
  2844  00156C  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2845  00156E  22DA               	addwfc	fsr2h,f,c
  2846  001570  50DF               	movf	indf2,w,c
  2847  001572  010F               	movlb	15	; () banked
  2848  001574  6F2B               	movwf	43,b	;volatile
  2849                           
  2850                           ; BSR set to: 15
  2851                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2852  001576  0100               	movlb	0	; () banked
  2853  001578  EE20 F006          	lfsr	2,6
  2854  00157C  0100               	movlb	0	; () banked
  2855  00157E  5182               	movf	CANsendMessage@data& (0+255),w,b
  2856  001580  26D9               	addwf	fsr2l,f,c
  2857  001582  0100               	movlb	0	; () banked
  2858  001584  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2859  001586  22DA               	addwfc	fsr2h,f,c
  2860  001588  50DF               	movf	indf2,w,c
  2861  00158A  010F               	movlb	15	; () banked
  2862  00158C  6F2C               	movwf	44,b	;volatile
  2863                           
  2864                           ; BSR set to: 15
  2865                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2866  00158E  0100               	movlb	0	; () banked
  2867  001590  EE20 F007          	lfsr	2,7
  2868  001594  0100               	movlb	0	; () banked
  2869  001596  5182               	movf	CANsendMessage@data& (0+255),w,b
  2870  001598  26D9               	addwf	fsr2l,f,c
  2871  00159A  0100               	movlb	0	; () banked
  2872  00159C  5183               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2873  00159E  22DA               	addwfc	fsr2h,f,c
  2874  0015A0  50DF               	movf	indf2,w,c
  2875  0015A2  010F               	movlb	15	; () banked
  2876  0015A4  6F2D               	movwf	45,b	;volatile
  2877                           
  2878                           ; BSR set to: 15
  2879                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2880  0015A6  010F               	movlb	15	; () banked
  2881  0015A8  8720               	bsf	32,3,b	;volatile
  2882  0015AA                     l397:
  2883                           
  2884                           ; BSR set to: 15
  2885  0015AA  0012               	return	
  2886  0015AC                     __end_of_CANsendMessage:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           postinc0	equ	0xFEE
  2895                           wreg	equ	0xFE8
  2896                           postdec1	equ	0xFE5
  2897                           fsr1l	equ	0xFE1
  2898                           indf2	equ	0xFDF
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _CANisTxReady *****************
  2904 ;; Defined at:
  2905 ;;		line 1154 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      unsigned char 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2919 ;;      Params:         0       0       0       0
  2920 ;;      Locals:         0       1       0       0
  2921 ;;      Temps:          0       0       0       0
  2922 ;;      Totals:         0       1       0       0
  2923 ;;Total ram usage:        1 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    4
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_remote_frame_handler
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text3
  2934  002AFE                     __ptext3:
  2935                           	opt stack 0
  2936  002AFE                     _CANisTxReady:
  2937                           	opt stack 25
  2938                           
  2939                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2940                           
  2941                           ; BSR set to: 15
  2942                           ;incstack = 0
  2943  002AFE  0E01               	movlw	1
  2944  002B00  0100               	movlb	0	; () banked
  2945  002B02  6F7E               	movwf	_CANisTxReady$3282& (0+255),b
  2946                           
  2947                           ; BSR set to: 0
  2948  002B04  010F               	movlb	15	; () banked
  2949  002B06  A740               	btfss	64,3,b	;volatile
  2950  002B08  D009               	goto	l576
  2951                           
  2952                           ; BSR set to: 15
  2953  002B0A  010F               	movlb	15	; () banked
  2954  002B0C  A730               	btfss	48,3,b	;volatile
  2955  002B0E  D006               	goto	l576
  2956                           
  2957                           ; BSR set to: 15
  2958  002B10  010F               	movlb	15	; () banked
  2959  002B12  A720               	btfss	32,3,b	;volatile
  2960  002B14  D003               	goto	l576
  2961                           
  2962                           ; BSR set to: 15
  2963  002B16  0E00               	movlw	0
  2964  002B18  0100               	movlb	0	; () banked
  2965  002B1A  6F7E               	movwf	_CANisTxReady$3282& (0+255),b
  2966  002B1C                     l576:
  2967  002B1C  0100               	movlb	0	; () banked
  2968  002B1E  517E               	movf	_CANisTxReady$3282& (0+255),w,b
  2969                           
  2970                           ; BSR set to: 0
  2971                           
  2972                           ; BSR set to: 0
  2973  002B20  0012               	return	
  2974  002B22                     __end_of_CANisTxReady:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           postinc0	equ	0xFEE
  2983                           wreg	equ	0xFE8
  2984                           postdec1	equ	0xFE5
  2985                           fsr1l	equ	0xFE1
  2986                           indf2	equ	0xFDF
  2987                           fsr2h	equ	0xFDA
  2988                           fsr2l	equ	0xFD9
  2989                           status	equ	0xFD8
  2990                           
  2991 ;; *************** function _board_initialization *****************
  2992 ;; Defined at:
  2993 ;;		line 339 in file "ABS_Code.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;		None               void
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3007 ;;      Params:         0       0       0       0
  3008 ;;      Locals:         0       0       0       0
  3009 ;;      Temps:          0       0       0       0
  3010 ;;      Totals:         0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    6
  3014 ;; This function calls:
  3015 ;;		_CANInitialize
  3016 ;;		_delay_ms
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text4
  3023  00284E                     __ptext4:
  3024                           	opt stack 0
  3025  00284E                     _board_initialization:
  3026                           	opt stack 24
  3027                           
  3028                           ;ABS_Code.c: 341: LATA = 0x00;
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;incstack = 0
  3032  00284E  0E00               	movlw	0
  3033  002850  6E89               	movwf	3977,c	;volatile
  3034                           
  3035                           ;ABS_Code.c: 342: TRISA = 0b11111101;
  3036  002852  0EFD               	movlw	253
  3037  002854  6E92               	movwf	3986,c	;volatile
  3038                           
  3039                           ;ABS_Code.c: 343: LATB = 0x00;
  3040  002856  0E00               	movlw	0
  3041  002858  6E8A               	movwf	3978,c	;volatile
  3042                           
  3043                           ;ABS_Code.c: 344: TRISB = 0b11111111;
  3044  00285A  6893               	setf	3987,c	;volatile
  3045                           
  3046                           ;ABS_Code.c: 345: LATC = 0x00;
  3047  00285C  0E00               	movlw	0
  3048  00285E  6E8B               	movwf	3979,c	;volatile
  3049                           
  3050                           ;ABS_Code.c: 346: TRISC = 0b11111100;
  3051  002860  0EFC               	movlw	252
  3052  002862  6E94               	movwf	3988,c	;volatile
  3053                           
  3054                           ;ABS_Code.c: 347: LATD = 0x00;
  3055  002864  0E00               	movlw	0
  3056  002866  6E8C               	movwf	3980,c	;volatile
  3057                           
  3058                           ;ABS_Code.c: 348: TRISD = 0xFF;
  3059  002868  6895               	setf	3989,c	;volatile
  3060                           
  3061                           ;ABS_Code.c: 349: LATE = 0x00;
  3062  00286A  0E00               	movlw	0
  3063  00286C  6E8D               	movwf	3981,c	;volatile
  3064                           
  3065                           ;ABS_Code.c: 350: TRISE = 0xFF;
  3066  00286E  6896               	setf	3990,c	;volatile
  3067                           
  3068                           ;ABS_Code.c: 352: ADCON1 = 0x11111110;
  3069  002870  0E10               	movlw	16
  3070  002872  6EC1               	movwf	4033,c	;volatile
  3071                           
  3072                           ;ABS_Code.c: 355: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3073  002874  0E06               	movlw	6
  3074  002876  0100               	movlb	0	; () banked
  3075  002878  6F8C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3076  00287A  0E05               	movlw	5
  3077  00287C  0100               	movlb	0	; () banked
  3078  00287E  6F8D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3079  002880  0E01               	movlw	1
  3080  002882  0100               	movlb	0	; () banked
  3081  002884  6F8E               	movwf	CANInitialize@SJW& (0+255),b
  3082  002886  0E03               	movlw	3
  3083  002888  0100               	movlb	0	; () banked
  3084  00288A  6F8F               	movwf	CANInitialize@BRP& (0+255),b
  3085  00288C  0E9D               	movlw	157
  3086  00288E  0100               	movlb	0	; () banked
  3087  002890  6F90               	movwf	CANInitialize@flags& (0+255),b
  3088  002892  0E04               	movlw	4
  3089  002894  EC90  F010         	call	_CANInitialize
  3090                           
  3091                           ;ABS_Code.c: 358: PIR3bits.RXB1IF = 0;
  3092  002898  92A4               	bcf	4004,1,c	;volatile
  3093                           
  3094                           ;ABS_Code.c: 359: PIR3bits.RXB0IF = 0;
  3095  00289A  90A4               	bcf	4004,0,c	;volatile
  3096                           
  3097                           ;ABS_Code.c: 360: INTCONbits.TMR0IF = 0;
  3098  00289C  94F2               	bcf	intcon,2,c	;volatile
  3099                           
  3100                           ;ABS_Code.c: 361: PIR1bits.TMR1IF = 0;
  3101  00289E  909E               	bcf	3998,0,c	;volatile
  3102                           
  3103                           ;ABS_Code.c: 362: PIR2bits.TMR3IF = 0;
  3104  0028A0  92A1               	bcf	4001,1,c	;volatile
  3105                           
  3106                           ;ABS_Code.c: 363: INTCONbits.INT0IF = 0;
  3107  0028A2  92F2               	bcf	intcon,1,c	;volatile
  3108                           
  3109                           ;ABS_Code.c: 364: INTCON3bits.INT1IF = 0;
  3110  0028A4  90F0               	bcf	intcon3,0,c	;volatile
  3111                           
  3112                           ;ABS_Code.c: 368: RCONbits.IPEN = 1;
  3113  0028A6  8ED0               	bsf	4048,7,c	;volatile
  3114                           
  3115                           ;ABS_Code.c: 369: IPR3bits.RXB1IP = 0;
  3116  0028A8  92A5               	bcf	4005,1,c	;volatile
  3117                           
  3118                           ;ABS_Code.c: 370: IPR3bits.RXB0IP = 0;
  3119  0028AA  90A5               	bcf	4005,0,c	;volatile
  3120                           
  3121                           ;ABS_Code.c: 371: INTCON2bits.TMR0IP = 1;
  3122  0028AC  84F1               	bsf	intcon2,2,c	;volatile
  3123                           
  3124                           ;ABS_Code.c: 372: INTCON3bits.INT1IP = 1;
  3125  0028AE  8CF0               	bsf	intcon3,6,c	;volatile
  3126                           
  3127                           ;ABS_Code.c: 373: IPR1bits.TMR1IP = 0;
  3128  0028B0  909F               	bcf	3999,0,c	;volatile
  3129                           
  3130                           ;ABS_Code.c: 374: IPR2bits.TMR3IP = 0;
  3131  0028B2  92A2               	bcf	4002,1,c	;volatile
  3132                           
  3133                           ;ABS_Code.c: 377: T0CON = 0x80;
  3134  0028B4  0E80               	movlw	128
  3135  0028B6  6ED5               	movwf	4053,c	;volatile
  3136                           
  3137                           ;ABS_Code.c: 384: TMR0H = 0xFF;
  3138  0028B8  68D7               	setf	4055,c	;volatile
  3139                           
  3140                           ;ABS_Code.c: 385: TMR0L = 0xFE;
  3141  0028BA  0EFE               	movlw	254
  3142  0028BC  6ED6               	movwf	4054,c	;volatile
  3143                           
  3144                           ;ABS_Code.c: 386: PORTCbits.RC0 = 0;
  3145  0028BE  9082               	bcf	3970,0,c	;volatile
  3146                           
  3147                           ;ABS_Code.c: 387: brake_value_degree = 90;
  3148  0028C0  0E5A               	movlw	90
  3149  0028C2  6E40               	movwf	_brake_value_degree,c
  3150                           
  3151                           ;ABS_Code.c: 388: T1CON = 00010000;
  3152  0028C4  0E00               	movlw	0
  3153  0028C6  6ECD               	movwf	4045,c	;volatile
  3154                           
  3155                           ;ABS_Code.c: 389: T3CON = 01010000;
  3156  0028C8  0E00               	movlw	0
  3157  0028CA  6EB1               	movwf	4017,c	;volatile
  3158                           
  3159                           ;ABS_Code.c: 390: INTCON2bits.INTEDG0 = 1;
  3160  0028CC  8CF1               	bsf	intcon2,6,c	;volatile
  3161                           
  3162                           ;ABS_Code.c: 391: INTCON2bits.INTEDG1 = 1;
  3163  0028CE  8AF1               	bsf	intcon2,5,c	;volatile
  3164                           
  3165                           ;ABS_Code.c: 394: ADCON1 = 0b01110111;
  3166  0028D0  0E77               	movlw	119
  3167  0028D2  6EC1               	movwf	4033,c	;volatile
  3168                           
  3169                           ;ABS_Code.c: 395: ADCON0bits.CHS2 = 0;
  3170  0028D4  98C2               	bcf	4034,4,c	;volatile
  3171                           
  3172                           ;ABS_Code.c: 396: ADCON0bits.CHS1 = 0;
  3173  0028D6  96C2               	bcf	4034,3,c	;volatile
  3174                           
  3175                           ;ABS_Code.c: 397: ADCON0bits.CHS0 = 0;
  3176  0028D8  94C2               	bcf	4034,2,c	;volatile
  3177                           
  3178                           ;ABS_Code.c: 398: ADCON2bits.ACQT2 = 1;
  3179  0028DA  8AC0               	bsf	4032,5,c	;volatile
  3180                           
  3181                           ;ABS_Code.c: 399: ADCON2bits.ACQT1 = 1;
  3182  0028DC  88C0               	bsf	4032,4,c	;volatile
  3183                           
  3184                           ;ABS_Code.c: 400: ADCON2bits.ACQT0 = 0;
  3185  0028DE  96C0               	bcf	4032,3,c	;volatile
  3186                           
  3187                           ;ABS_Code.c: 401: ADCON2bits.ADCS2 = 1;
  3188  0028E0  84C0               	bsf	4032,2,c	;volatile
  3189                           
  3190                           ;ABS_Code.c: 402: ADCON2bits.ADCS1 = 0;
  3191  0028E2  92C0               	bcf	4032,1,c	;volatile
  3192                           
  3193                           ;ABS_Code.c: 403: ADCON2bits.ADCS0 = 1;
  3194  0028E4  80C0               	bsf	4032,0,c	;volatile
  3195                           
  3196                           ;ABS_Code.c: 404: ADCON2bits.ADFM = 0;
  3197  0028E6  9EC0               	bcf	4032,7,c	;volatile
  3198                           
  3199                           ;ABS_Code.c: 405: ADCON0bits.ADON = 1;
  3200  0028E8  80C2               	bsf	4034,0,c	;volatile
  3201                           
  3202                           ;ABS_Code.c: 408: PIE3bits.RXB1IE = 1;
  3203  0028EA  82A3               	bsf	4003,1,c	;volatile
  3204                           
  3205                           ;ABS_Code.c: 409: PIE3bits.RXB0IE = 1;
  3206  0028EC  80A3               	bsf	4003,0,c	;volatile
  3207                           
  3208                           ;ABS_Code.c: 410: INTCONbits.TMR0IE = 1;
  3209  0028EE  8AF2               	bsf	intcon,5,c	;volatile
  3210                           
  3211                           ;ABS_Code.c: 411: PIE1bits.TMR1IE = 1;
  3212  0028F0  809D               	bsf	3997,0,c	;volatile
  3213                           
  3214                           ;ABS_Code.c: 412: PIE2bits.TMR3IE = 1;
  3215  0028F2  82A0               	bsf	4000,1,c	;volatile
  3216                           
  3217                           ;ABS_Code.c: 413: INTCONbits.INT0IE = 1;
  3218  0028F4  88F2               	bsf	intcon,4,c	;volatile
  3219                           
  3220                           ;ABS_Code.c: 414: INTCON3bits.INT1IE = 1;
  3221  0028F6  86F0               	bsf	intcon3,3,c	;volatile
  3222                           
  3223                           ;ABS_Code.c: 415: INTCONbits.GIEH = 1;
  3224  0028F8  8EF2               	bsf	intcon,7,c	;volatile
  3225                           
  3226                           ;ABS_Code.c: 416: INTCONbits.GIEL = 1;
  3227  0028FA  8CF2               	bsf	intcon,6,c	;volatile
  3228                           
  3229                           ;ABS_Code.c: 419: T1CONbits.TMR1ON = 1;
  3230  0028FC  80CD               	bsf	4045,0,c	;volatile
  3231                           
  3232                           ;ABS_Code.c: 420: T3CONbits.TMR3ON = 1;
  3233  0028FE  80B1               	bsf	4017,0,c	;volatile
  3234                           
  3235                           ;ABS_Code.c: 421: T0CONbits.TMR0ON = 1;
  3236  002900  8ED5               	bsf	4053,7,c	;volatile
  3237                           
  3238                           ;ABS_Code.c: 422: delay_ms(2);
  3239  002902  0E00               	movlw	0
  3240  002904  0100               	movlb	0	; () banked
  3241  002906  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3242  002908  0E02               	movlw	2
  3243  00290A  0100               	movlb	0	; () banked
  3244  00290C  6F84               	movwf	delay_ms@value_ms& (0+255),b
  3245  00290E  EC32  F015         	call	_delay_ms	;wreg free
  3246  002912  0012               	return	
  3247  002914                     __end_of_board_initialization:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           prodh	equ	0xFF4
  3254                           prodl	equ	0xFF3
  3255                           intcon	equ	0xFF2
  3256                           intcon2	equ	0xFF1
  3257                           intcon3	equ	0xFF0
  3258                           postinc0	equ	0xFEE
  3259                           wreg	equ	0xFE8
  3260                           postdec1	equ	0xFE5
  3261                           fsr1l	equ	0xFE1
  3262                           indf2	equ	0xFDF
  3263                           fsr2h	equ	0xFDA
  3264                           fsr2l	equ	0xFD9
  3265                           status	equ	0xFD8
  3266                           
  3267 ;; *************** function _delay_ms *****************
  3268 ;; Defined at:
  3269 ;;		line 61 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  value_ms        2   36[BANK0 ] unsigned int 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3283 ;;      Params:         0       2       0       0
  3284 ;;      Locals:         0       0       0       0
  3285 ;;      Temps:          0       0       0       0
  3286 ;;      Totals:         0       2       0       0
  3287 ;;Total ram usage:        2 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    5
  3290 ;; This function calls:
  3291 ;;		___wmul
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;;		_board_initialization
  3295 ;;		_delay_s
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text5
  3300  002A64                     __ptext5:
  3301                           	opt stack 0
  3302  002A64                     _delay_ms:
  3303                           	opt stack 25
  3304                           
  3305                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3306                           
  3307                           ;incstack = 0
  3308  002A64  0100               	movlb	0	; () banked
  3309  002A66  C0CC  F07E         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3310  002A6A  0100               	movlb	0	; () banked
  3311  002A6C  6B7F               	clrf	(___wmul@multiplier+1)& (0+255),b
  3312  002A6E  C084  F080         	movff	delay_ms@value_ms,___wmul@multiplicand
  3313  002A72  C085  F081         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3314  002A76  EC51  F015         	call	___wmul	;wreg free
  3315  002A7A  0100               	movlb	0	; () banked
  3316  002A7C  C07E  F0AD         	movff	?___wmul,_clock_counter_reference	;volatile
  3317  002A80  0100               	movlb	0	; () banked
  3318  002A82  C07F  F0AE         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3319                           
  3320                           ;src\delay.c: 75: while (clock_counter_reference) {
  3321  002A86  D007               	goto	l589
  3322  002A88                     l3428:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;src\delay.c: 85: _delay(240);
  3326  002A88  0E50               	movlw	80
  3327  002A8A                     u4737:
  3328  002A8A  2EE8               	decfsz	wreg,f,c
  3329  002A8C  D7FE               	goto	u4737
  3330                           
  3331                           ;src\delay.c: 88: clock_counter_reference--;
  3332  002A8E  0100               	movlb	0	; () banked
  3333  002A90  07AD               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3334  002A92  A0D8               	btfss	status,0,c
  3335  002A94  07AE               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3336  002A96                     l589:
  3337                           
  3338                           ; BSR set to: 0
  3339  002A96  0100               	movlb	0	; () banked
  3340  002A98  51AE               	movf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3341  002A9A  11AD               	iorwf	_clock_counter_reference& (0+255),w,b	;volatile
  3342  002A9C  B4D8               	btfsc	status,2,c
  3343                           
  3344                           ; BSR set to: 0
  3345                           
  3346                           ; BSR set to: 0
  3347  002A9E  0012               	return	
  3348  002AA0  D7F3               	goto	l3428
  3349  002AA2                     __end_of_delay_ms:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           intcon2	equ	0xFF1
  3359                           intcon3	equ	0xFF0
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postdec1	equ	0xFE5
  3363                           fsr1l	equ	0xFE1
  3364                           indf2	equ	0xFDF
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function ___wmul *****************
  3370 ;; Defined at:
  3371 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  multiplier      2   30[BANK0 ] unsigned int 
  3374 ;;  multiplicand    2   32[BANK0 ] unsigned int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  product         2   34[BANK0 ] unsigned int 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  2   30[BANK0 ] unsigned int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, prodl, prodh
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3386 ;;      Params:         0       4       0       0
  3387 ;;      Locals:         0       2       0       0
  3388 ;;      Temps:          0       0       0       0
  3389 ;;      Totals:         0       6       0       0
  3390 ;;Total ram usage:        6 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    4
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_delay_ms
  3397 ;;		_remote_frame_handler
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text6
  3402  002AA2                     __ptext6:
  3403                           	opt stack 0
  3404  002AA2                     ___wmul:
  3405                           	opt stack 25
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;incstack = 0
  3409  002AA2  0100               	movlb	0	; () banked
  3410  002AA4  517E               	movf	___wmul@multiplier& (0+255),w,b
  3411  002AA6  0100               	movlb	0	; () banked
  3412  002AA8  0380               	mulwf	___wmul@multiplicand& (0+255),b
  3413  002AAA  CFF3 F082          	movff	prodl,___wmul@product
  3414  002AAE  CFF4 F083          	movff	prodh,___wmul@product+1
  3415  002AB2  0100               	movlb	0	; () banked
  3416  002AB4  517E               	movf	___wmul@multiplier& (0+255),w,b
  3417  002AB6  0100               	movlb	0	; () banked
  3418  002AB8  0381               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3419  002ABA  50F3               	movf	prodl,w,c
  3420  002ABC  0100               	movlb	0	; () banked
  3421  002ABE  2783               	addwf	(___wmul@product+1)& (0+255),f,b
  3422  002AC0  0100               	movlb	0	; () banked
  3423  002AC2  517F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3424  002AC4  0100               	movlb	0	; () banked
  3425  002AC6  0380               	mulwf	___wmul@multiplicand& (0+255),b
  3426  002AC8  50F3               	movf	prodl,w,c
  3427  002ACA  0100               	movlb	0	; () banked
  3428  002ACC  2783               	addwf	(___wmul@product+1)& (0+255),f,b
  3429                           
  3430                           ; BSR set to: 0
  3431  002ACE  C082  F07E         	movff	___wmul@product,?___wmul
  3432  002AD2  C083  F07F         	movff	___wmul@product+1,?___wmul+1
  3433                           
  3434                           ; BSR set to: 0
  3435                           
  3436                           ; BSR set to: 0
  3437  002AD6  0012               	return	
  3438  002AD8                     __end_of___wmul:
  3439                           	opt stack 0
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           prodh	equ	0xFF4
  3445                           prodl	equ	0xFF3
  3446                           intcon	equ	0xFF2
  3447                           intcon2	equ	0xFF1
  3448                           intcon3	equ	0xFF0
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           postdec1	equ	0xFE5
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           fsr2h	equ	0xFDA
  3455                           fsr2l	equ	0xFD9
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function _CANInitialize *****************
  3459 ;; Defined at:
  3460 ;;		line 218 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  propSeg         1    wreg     unsigned char 
  3463 ;;  phaseSeg1       1   44[BANK0 ] unsigned char 
  3464 ;;  phaseSeg2       1   45[BANK0 ] unsigned char 
  3465 ;;  SJW             1   46[BANK0 ] unsigned char 
  3466 ;;  BRP             1   47[BANK0 ] unsigned char 
  3467 ;;  flags           1   48[BANK0 ] enum E16885
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  propSeg         1   53[BANK0 ] unsigned char 
  3470 ;;  FilterConfig    1   55[BANK0 ] unsigned char 
  3471 ;;  FilterConfig    1   54[BANK0 ] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;		None               void
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3481 ;;      Params:         0       5       0       0
  3482 ;;      Locals:         0       3       0       0
  3483 ;;      Temps:          0       4       0       0
  3484 ;;      Totals:         0      12       0       0
  3485 ;;Total ram usage:       12 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    5
  3488 ;; This function calls:
  3489 ;;		_CANOperationMode
  3490 ;;		_CANSetFilter
  3491 ;;		_CANSetMask
  3492 ;; This function is called by:
  3493 ;;		_board_initialization
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text7
  3498  002120                     __ptext7:
  3499                           	opt stack 0
  3500  002120                     _CANInitialize:
  3501                           	opt stack 24
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;incstack = 0
  3505                           ;CANInitialize@propSeg stored from wreg
  3506  002120  0100               	movlb	0	; () banked
  3507  002122  6F95               	movwf	CANInitialize@propSeg& (0+255),b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3511                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3512                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3513  002124  0E80               	movlw	128
  3514  002126  EC91  F015         	call	_CANOperationMode
  3515                           
  3516                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3517  00212A  0E00               	movlw	0
  3518  00212C  6E70               	movwf	3952,c	;volatile
  3519                           
  3520                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3521  00212E  0E00               	movlw	0
  3522  002130  6E71               	movwf	3953,c	;volatile
  3523                           
  3524                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3525  002132  0E00               	movlw	0
  3526  002134  6E72               	movwf	3954,c	;volatile
  3527                           
  3528                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3529  002136  0100               	movlb	0	; () banked
  3530  002138  418E               	rrncf	CANInitialize@SJW& (0+255),w,b
  3531  00213A  42E8               	rrncf	wreg,f,c
  3532  00213C  0BC0               	andlw	192
  3533  00213E  0100               	movlb	0	; () banked
  3534  002140  6F8E               	movwf	CANInitialize@SJW& (0+255),b
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3538  002142  0100               	movlb	0	; () banked
  3539  002144  518E               	movf	CANInitialize@SJW& (0+255),w,b
  3540  002146  1270               	iorwf	3952,f,c	;volatile
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3544  002148  0100               	movlb	0	; () banked
  3545  00214A  518F               	movf	CANInitialize@BRP& (0+255),w,b
  3546  00214C  1270               	iorwf	3952,f,c	;volatile
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3550  00214E  0100               	movlb	0	; () banked
  3551  002150  5195               	movf	CANInitialize@propSeg& (0+255),w,b
  3552  002152  1271               	iorwf	3953,f,c	;volatile
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3556  002154  0100               	movlb	0	; () banked
  3557  002156  398C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3558  002158  42E8               	rrncf	wreg,f,c
  3559  00215A  0BF8               	andlw	248
  3560  00215C  0100               	movlb	0	; () banked
  3561  00215E  6F8C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3565  002160  0100               	movlb	0	; () banked
  3566  002162  518C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3567  002164  1271               	iorwf	3953,f,c	;volatile
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3571  002166  0100               	movlb	0	; () banked
  3572  002168  A590               	btfss	CANInitialize@flags& (0+255),2,b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3576  00216A  8C71               	bsf	3953,6,c	;volatile
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3580  00216C  0100               	movlb	0	; () banked
  3581  00216E  B190               	btfsc	CANInitialize@flags& (0+255),0,b
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3585  002170  8E71               	bsf	3953,7,c	;volatile
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3589                           
  3590                           ; BSR set to: 0
  3591  002172  0100               	movlb	0	; () banked
  3592  002174  518D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3593  002176  1272               	iorwf	3954,f,c	;volatile
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3597  002178  0100               	movlb	0	; () banked
  3598  00217A  B390               	btfsc	CANInitialize@flags& (0+255),1,b
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3602  00217C  8C72               	bsf	3954,6,c	;volatile
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3606                           
  3607                           ; BSR set to: 0
  3608  00217E  0100               	movlb	0	; () banked
  3609  002180  5190               	movf	CANInitialize@flags& (0+255),w,b
  3610  002182  0B60               	andlw	96
  3611  002184  6E60               	movwf	3936,c	;volatile
  3612                           
  3613                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3614  002186  C090  F091         	movff	CANInitialize@flags,??_CANInitialize
  3615  00218A  0E10               	movlw	16
  3616  00218C  0100               	movlb	0	; () banked
  3617  00218E  1791               	andwf	??_CANInitialize& (0+255),f,b
  3618  002190  0100               	movlb	0	; () banked
  3619  002192  5191               	movf	??_CANInitialize& (0+255),w,b
  3620  002194  0AFF               	xorlw	255
  3621  002196  B4D8               	btfsc	status,2,c
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3625  002198  8460               	bsf	3936,2,c	;volatile
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3629  00219A  CF60 FF50          	movff	3936,3920	;volatile
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3633  00219E  0E00               	movlw	0
  3634  0021A0  0100               	movlb	0	; () banked
  3635  0021A2  6F7E               	movwf	CANSetMask@mask& (0+255),b
  3636  0021A4  0E00               	movlw	0
  3637  0021A6  0100               	movlb	0	; () banked
  3638  0021A8  6F7F               	movwf	(CANSetMask@mask+1)& (0+255),b
  3639  0021AA  0E00               	movlw	0
  3640  0021AC  0100               	movlb	0	; () banked
  3641  0021AE  6F80               	movwf	(CANSetMask@mask+2)& (0+255),b
  3642  0021B0  0E00               	movlw	0
  3643  0021B2  0100               	movlb	0	; () banked
  3644  0021B4  6F81               	movwf	(CANSetMask@mask+3)& (0+255),b
  3645  0021B6  0EF7               	movlw	247
  3646  0021B8  0100               	movlb	0	; () banked
  3647  0021BA  6F82               	movwf	CANSetMask@type& (0+255),b
  3648  0021BC  0E01               	movlw	1
  3649  0021BE  EC40  F00D         	call	_CANSetMask
  3650                           
  3651                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3652  0021C2  0E00               	movlw	0
  3653  0021C4  0100               	movlb	0	; () banked
  3654  0021C6  6F7E               	movwf	CANSetMask@mask& (0+255),b
  3655  0021C8  0E00               	movlw	0
  3656  0021CA  0100               	movlb	0	; () banked
  3657  0021CC  6F7F               	movwf	(CANSetMask@mask+1)& (0+255),b
  3658  0021CE  0E00               	movlw	0
  3659  0021D0  0100               	movlb	0	; () banked
  3660  0021D2  6F80               	movwf	(CANSetMask@mask+2)& (0+255),b
  3661  0021D4  0E00               	movlw	0
  3662  0021D6  0100               	movlb	0	; () banked
  3663  0021D8  6F81               	movwf	(CANSetMask@mask+3)& (0+255),b
  3664  0021DA  0EF7               	movlw	247
  3665  0021DC  0100               	movlb	0	; () banked
  3666  0021DE  6F82               	movwf	CANSetMask@type& (0+255),b
  3667  0021E0  0E02               	movlw	2
  3668  0021E2  EC40  F00D         	call	_CANSetMask
  3669                           
  3670                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3671  0021E6  D00F               	goto	l3176
  3672  0021E8                     l3170:
  3673                           
  3674                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3675  0021E8  0EF7               	movlw	247
  3676  0021EA  0100               	movlb	0	; () banked
  3677  0021EC  6F96               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3678  0021EE  D007               	goto	L1
  3679  0021F0                     l378:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3683  0021F0  0100               	movlb	0	; () banked
  3684  0021F2  6996               	setf	CANInitialize@FilterConfig1& (0+255),b
  3685                           
  3686                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3687  0021F4  0100               	movlb	0	; () banked
  3688  0021F6  6997               	setf	CANInitialize@FilterConfig2& (0+255),b
  3689                           
  3690                           ;inc\CANlib.h: 273: break;
  3691  0021F8  D027               	goto	l3178
  3692  0021FA                     l379:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3696  0021FA  0100               	movlb	0	; () banked
  3697  0021FC  6996               	setf	CANInitialize@FilterConfig1& (0+255),b
  3698  0021FE                     L1:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3702  0021FE  0EF7               	movlw	247
  3703  002200  0100               	movlb	0	; () banked
  3704  002202  6F97               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3705                           
  3706                           ;inc\CANlib.h: 277: break;
  3707  002204  D021               	goto	l3178
  3708  002206                     l3176:
  3709  002206  0E9F               	movlw	159
  3710  002208  0100               	movlb	0	; () banked
  3711  00220A  6F91               	movwf	??_CANInitialize& (0+255),b
  3712  00220C  0EFF               	movlw	255
  3713  00220E  6F92               	movwf	(??_CANInitialize+1)& (0+255),b
  3714  002210  0100               	movlb	0	; () banked
  3715  002212  5190               	movf	CANInitialize@flags& (0+255),w,b
  3716  002214  0B60               	andlw	96
  3717  002216  0100               	movlb	0	; () banked
  3718  002218  6F93               	movwf	(??_CANInitialize+2)& (0+255),b
  3719  00221A  6B94               	clrf	(??_CANInitialize+3)& (0+255),b
  3720  00221C  0100               	movlb	0	; () banked
  3721  00221E  5191               	movf	??_CANInitialize& (0+255),w,b
  3722  002220  0100               	movlb	0	; () banked
  3723  002222  1393               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3724  002224  0100               	movlb	0	; () banked
  3725  002226  5192               	movf	(??_CANInitialize+1)& (0+255),w,b
  3726  002228  0100               	movlb	0	; () banked
  3727  00222A  1394               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3728                           
  3729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3730                           ; Switch size 1, requested type "space"
  3731                           ; Number of cases is 1, Range of values is 0 to 0
  3732                           ; switch strategies available:
  3733                           ; Name         Instructions Cycles
  3734                           ; simple_byte            4     3 (average)
  3735                           ;	Chosen strategy is simple_byte
  3736  00222C  0100               	movlb	0	; () banked
  3737  00222E  5194               	movf	(??_CANInitialize+3)& (0+255),w,b
  3738  002230  0A00               	xorlw	0	; case 0
  3739  002232  A4D8               	btfss	status,2,c
  3740  002234  D7E2               	goto	l379
  3741                           
  3742                           ; BSR set to: 0
  3743                           ; Switch size 1, requested type "space"
  3744                           ; Number of cases is 2, Range of values is 191 to 223
  3745                           ; switch strategies available:
  3746                           ; Name         Instructions Cycles
  3747                           ; simple_byte            7     4 (average)
  3748                           ;	Chosen strategy is simple_byte
  3749  002236  0100               	movlb	0	; () banked
  3750  002238  5193               	movf	(??_CANInitialize+2)& (0+255),w,b
  3751  00223A  0ABF               	xorlw	191	; case 191
  3752  00223C  B4D8               	btfsc	status,2,c
  3753  00223E  D7D8               	goto	l378
  3754  002240  0A60               	xorlw	96	; case 223
  3755  002242  B4D8               	btfsc	status,2,c
  3756  002244  D7D1               	goto	l3170
  3757  002246  D7D9               	goto	l379
  3758  002248                     l3178:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3762  002248  0E00               	movlw	0
  3763  00224A  0100               	movlb	0	; () banked
  3764  00224C  6F7E               	movwf	CANSetFilter@filter& (0+255),b
  3765  00224E  0E00               	movlw	0
  3766  002250  0100               	movlb	0	; () banked
  3767  002252  6F7F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3768  002254  0E00               	movlw	0
  3769  002256  0100               	movlb	0	; () banked
  3770  002258  6F80               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3771  00225A  0E00               	movlw	0
  3772  00225C  0100               	movlb	0	; () banked
  3773  00225E  6F81               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3774  002260  C096  F082         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3775  002264  0E00               	movlw	0
  3776  002266  EC86  F000         	call	_CANSetFilter
  3777                           
  3778                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3779  00226A  0E00               	movlw	0
  3780  00226C  0100               	movlb	0	; () banked
  3781  00226E  6F7E               	movwf	CANSetFilter@filter& (0+255),b
  3782  002270  0E00               	movlw	0
  3783  002272  0100               	movlb	0	; () banked
  3784  002274  6F7F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3785  002276  0E00               	movlw	0
  3786  002278  0100               	movlb	0	; () banked
  3787  00227A  6F80               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3788  00227C  0E00               	movlw	0
  3789  00227E  0100               	movlb	0	; () banked
  3790  002280  6F81               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3791  002282  C096  F082         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3792  002286  0E01               	movlw	1
  3793  002288  EC86  F000         	call	_CANSetFilter
  3794                           
  3795                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3796  00228C  0E00               	movlw	0
  3797  00228E  0100               	movlb	0	; () banked
  3798  002290  6F7E               	movwf	CANSetFilter@filter& (0+255),b
  3799  002292  0E00               	movlw	0
  3800  002294  0100               	movlb	0	; () banked
  3801  002296  6F7F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3802  002298  0E00               	movlw	0
  3803  00229A  0100               	movlb	0	; () banked
  3804  00229C  6F80               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3805  00229E  0E00               	movlw	0
  3806  0022A0  0100               	movlb	0	; () banked
  3807  0022A2  6F81               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3808  0022A4  C097  F082         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3809  0022A8  0E02               	movlw	2
  3810  0022AA  EC86  F000         	call	_CANSetFilter
  3811                           
  3812                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3813  0022AE  0E00               	movlw	0
  3814  0022B0  0100               	movlb	0	; () banked
  3815  0022B2  6F7E               	movwf	CANSetFilter@filter& (0+255),b
  3816  0022B4  0E00               	movlw	0
  3817  0022B6  0100               	movlb	0	; () banked
  3818  0022B8  6F7F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3819  0022BA  0E00               	movlw	0
  3820  0022BC  0100               	movlb	0	; () banked
  3821  0022BE  6F80               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3822  0022C0  0E00               	movlw	0
  3823  0022C2  0100               	movlb	0	; () banked
  3824  0022C4  6F81               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3825  0022C6  C097  F082         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3826  0022CA  0E03               	movlw	3
  3827  0022CC  EC86  F000         	call	_CANSetFilter
  3828                           
  3829                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3830  0022D0  0E00               	movlw	0
  3831  0022D2  0100               	movlb	0	; () banked
  3832  0022D4  6F7E               	movwf	CANSetFilter@filter& (0+255),b
  3833  0022D6  0E00               	movlw	0
  3834  0022D8  0100               	movlb	0	; () banked
  3835  0022DA  6F7F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3836  0022DC  0E00               	movlw	0
  3837  0022DE  0100               	movlb	0	; () banked
  3838  0022E0  6F80               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3839  0022E2  0E00               	movlw	0
  3840  0022E4  0100               	movlb	0	; () banked
  3841  0022E6  6F81               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3842  0022E8  C097  F082         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3843  0022EC  0E04               	movlw	4
  3844  0022EE  EC86  F000         	call	_CANSetFilter
  3845                           
  3846                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3847  0022F2  0E00               	movlw	0
  3848  0022F4  0100               	movlb	0	; () banked
  3849  0022F6  6F7E               	movwf	CANSetFilter@filter& (0+255),b
  3850  0022F8  0E00               	movlw	0
  3851  0022FA  0100               	movlb	0	; () banked
  3852  0022FC  6F7F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3853  0022FE  0E00               	movlw	0
  3854  002300  0100               	movlb	0	; () banked
  3855  002302  6F80               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3856  002304  0E00               	movlw	0
  3857  002306  0100               	movlb	0	; () banked
  3858  002308  6F81               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3859  00230A  C097  F082         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3860  00230E  0E05               	movlw	5
  3861  002310  EC86  F000         	call	_CANSetFilter
  3862                           
  3863                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3864  002314  0E00               	movlw	0
  3865  002316  EC91  F015         	call	_CANOperationMode
  3866  00231A  0012               	return	
  3867  00231C                     __end_of_CANInitialize:
  3868                           	opt stack 0
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           prodh	equ	0xFF4
  3874                           prodl	equ	0xFF3
  3875                           intcon	equ	0xFF2
  3876                           intcon2	equ	0xFF1
  3877                           intcon3	equ	0xFF0
  3878                           postinc0	equ	0xFEE
  3879                           wreg	equ	0xFE8
  3880                           postdec1	equ	0xFE5
  3881                           fsr1l	equ	0xFE1
  3882                           indf2	equ	0xFDF
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function _CANSetMask *****************
  3888 ;; Defined at:
  3889 ;;		line 640 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  numBuffer       1    wreg     enum E16919
  3892 ;;  mask            4   30[BANK0 ] unsigned long 
  3893 ;;  type            1   34[BANK0 ] enum E16885
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  numBuffer       1   39[BANK0 ] enum E16919
  3896 ;;  tamp            4   40[BANK0 ] unsigned long 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;		None               void
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3906 ;;      Params:         0       5       0       0
  3907 ;;      Locals:         0       5       0       0
  3908 ;;      Temps:          0       4       0       0
  3909 ;;      Totals:         0      14       0       0
  3910 ;;Total ram usage:       14 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    4
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_CANInitialize
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text8
  3921  001A80                     __ptext8:
  3922                           	opt stack 0
  3923  001A80                     _CANSetMask:
  3924                           	opt stack 24
  3925                           
  3926                           ;incstack = 0
  3927                           ;CANSetMask@numBuffer stored from wreg
  3928  001A80  0100               	movlb	0	; () banked
  3929  001A82  6F87               	movwf	CANSetMask@numBuffer& (0+255),b
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3933  001A84  0100               	movlb	0	; () banked
  3934  001A86  0587               	decf	CANSetMask@numBuffer& (0+255),w,b
  3935  001A88  A4D8               	btfss	status,2,c
  3936  001A8A  D061               	goto	l2734
  3937                           
  3938                           ; BSR set to: 0
  3939  001A8C  0100               	movlb	0	; () banked
  3940  001A8E  2982               	incf	CANSetMask@type& (0+255),w,b
  3941  001A90  A4D8               	btfss	status,2,c
  3942  001A92  D05D               	goto	l2734
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;inc\CANlib.h: 644: {
  3946                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3947  001A94  0100               	movlb	0	; () banked
  3948  001A96  C07E  F083         	movff	CANSetMask@mask,??_CANSetMask
  3949  001A9A  0100               	movlb	0	; () banked
  3950  001A9C  C07F  F084         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3951  001AA0  0100               	movlb	0	; () banked
  3952  001AA2  C080  F085         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3953  001AA6  0100               	movlb	0	; () banked
  3954  001AA8  C081  F086         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3955  001AAC  0E04               	movlw	4
  3956  001AAE  D006               	goto	u2330
  3957  001AB0                     u2335:
  3958  001AB0  0100               	movlb	0	; () banked
  3959  001AB2  90D8               	bcf	status,0,c
  3960  001AB4  3386               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3961  001AB6  3385               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3962  001AB8  3384               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3963  001ABA  3383               	rrcf	??_CANSetMask& (0+255),f,b
  3964  001ABC                     u2330:
  3965  001ABC  2EE8               	decfsz	wreg,f,c
  3966  001ABE  D7F8               	goto	u2335
  3967  001AC0  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  3968  001AC4  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3969  001AC8  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3970  001ACC  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3974  001AD0  0100               	movlb	0	; () banked
  3975  001AD2  5188               	movf	CANSetMask@tamp& (0+255),w,b
  3976  001AD4  0100               	movlb	0	; () banked
  3977  001AD6  6F88               	movwf	CANSetMask@tamp& (0+255),b
  3978  001AD8  0100               	movlb	0	; () banked
  3979  001ADA  6B89               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3980  001ADC  0100               	movlb	0	; () banked
  3981  001ADE  6B8A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3982  001AE0  0100               	movlb	0	; () banked
  3983  001AE2  6B8B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3987  001AE4  C088  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3991  001AE8  0E07               	movlw	7
  3992  001AEA  0100               	movlb	0	; () banked
  3993  001AEC  157E               	andwf	CANSetMask@mask& (0+255),w,b
  3994  001AEE  0100               	movlb	0	; () banked
  3995  001AF0  6F88               	movwf	CANSetMask@tamp& (0+255),b
  3996  001AF2  0E00               	movlw	0
  3997  001AF4  0100               	movlb	0	; () banked
  3998  001AF6  157F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3999  001AF8  0100               	movlb	0	; () banked
  4000  001AFA  6F89               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4001  001AFC  0E00               	movlw	0
  4002  001AFE  0100               	movlb	0	; () banked
  4003  001B00  1580               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4004  001B02  0100               	movlb	0	; () banked
  4005  001B04  6F8A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4006  001B06  0E00               	movlw	0
  4007  001B08  0100               	movlb	0	; () banked
  4008  001B0A  1581               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4009  001B0C  0100               	movlb	0	; () banked
  4010  001B0E  6F8B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4014  001B10  0100               	movlb	0	; () banked
  4015  001B12  C088  F083         	movff	CANSetMask@tamp,??_CANSetMask
  4016  001B16  0100               	movlb	0	; () banked
  4017  001B18  C089  F084         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4018  001B1C  0100               	movlb	0	; () banked
  4019  001B1E  C08A  F085         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4020  001B22  0100               	movlb	0	; () banked
  4021  001B24  C08B  F086         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4022  001B28  0E05               	movlw	5
  4023  001B2A                     u2345:
  4024  001B2A  90D8               	bcf	status,0,c
  4025  001B2C  0100               	movlb	0	; () banked
  4026  001B2E  3783               	rlcf	??_CANSetMask& (0+255),f,b
  4027  001B30  3784               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4028  001B32  3785               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4029  001B34  3786               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4030  001B36  2EE8               	decfsz	wreg,f,c
  4031  001B38  D7F8               	goto	u2345
  4032  001B3A  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  4033  001B3E  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4034  001B42  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4035  001B46  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4039  001B4A  C088  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4040  001B4E                     l2734:
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;inc\CANlib.h: 652: }
  4044                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4045  001B4E  0100               	movlb	0	; () banked
  4046  001B50  5187               	movf	CANSetMask@numBuffer& (0+255),w,b
  4047  001B52  0A02               	xorlw	2
  4048  001B54  A4D8               	btfss	status,2,c
  4049  001B56  D061               	goto	l2750
  4050                           
  4051                           ; BSR set to: 0
  4052  001B58  0100               	movlb	0	; () banked
  4053  001B5A  2982               	incf	CANSetMask@type& (0+255),w,b
  4054  001B5C  A4D8               	btfss	status,2,c
  4055  001B5E  D05D               	goto	l2750
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 655: {
  4059                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4060  001B60  0100               	movlb	0	; () banked
  4061  001B62  C07E  F083         	movff	CANSetMask@mask,??_CANSetMask
  4062  001B66  0100               	movlb	0	; () banked
  4063  001B68  C07F  F084         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4064  001B6C  0100               	movlb	0	; () banked
  4065  001B6E  C080  F085         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4066  001B72  0100               	movlb	0	; () banked
  4067  001B74  C081  F086         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4068  001B78  0E04               	movlw	4
  4069  001B7A  D006               	goto	u2370
  4070  001B7C                     u2375:
  4071  001B7C  0100               	movlb	0	; () banked
  4072  001B7E  90D8               	bcf	status,0,c
  4073  001B80  3386               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4074  001B82  3385               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4075  001B84  3384               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4076  001B86  3383               	rrcf	??_CANSetMask& (0+255),f,b
  4077  001B88                     u2370:
  4078  001B88  2EE8               	decfsz	wreg,f,c
  4079  001B8A  D7F8               	goto	u2375
  4080  001B8C  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  4081  001B90  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4082  001B94  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4083  001B98  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4087  001B9C  0100               	movlb	0	; () banked
  4088  001B9E  5188               	movf	CANSetMask@tamp& (0+255),w,b
  4089  001BA0  0100               	movlb	0	; () banked
  4090  001BA2  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4091  001BA4  0100               	movlb	0	; () banked
  4092  001BA6  6B89               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4093  001BA8  0100               	movlb	0	; () banked
  4094  001BAA  6B8A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4095  001BAC  0100               	movlb	0	; () banked
  4096  001BAE  6B8B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4100  001BB0  C088  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4104  001BB4  0E07               	movlw	7
  4105  001BB6  0100               	movlb	0	; () banked
  4106  001BB8  157E               	andwf	CANSetMask@mask& (0+255),w,b
  4107  001BBA  0100               	movlb	0	; () banked
  4108  001BBC  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4109  001BBE  0E00               	movlw	0
  4110  001BC0  0100               	movlb	0	; () banked
  4111  001BC2  157F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4112  001BC4  0100               	movlb	0	; () banked
  4113  001BC6  6F89               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4114  001BC8  0E00               	movlw	0
  4115  001BCA  0100               	movlb	0	; () banked
  4116  001BCC  1580               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4117  001BCE  0100               	movlb	0	; () banked
  4118  001BD0  6F8A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4119  001BD2  0E00               	movlw	0
  4120  001BD4  0100               	movlb	0	; () banked
  4121  001BD6  1581               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4122  001BD8  0100               	movlb	0	; () banked
  4123  001BDA  6F8B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4127  001BDC  0100               	movlb	0	; () banked
  4128  001BDE  C088  F083         	movff	CANSetMask@tamp,??_CANSetMask
  4129  001BE2  0100               	movlb	0	; () banked
  4130  001BE4  C089  F084         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4131  001BE8  0100               	movlb	0	; () banked
  4132  001BEA  C08A  F085         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4133  001BEE  0100               	movlb	0	; () banked
  4134  001BF0  C08B  F086         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4135  001BF4  0E05               	movlw	5
  4136  001BF6                     u2385:
  4137  001BF6  90D8               	bcf	status,0,c
  4138  001BF8  0100               	movlb	0	; () banked
  4139  001BFA  3783               	rlcf	??_CANSetMask& (0+255),f,b
  4140  001BFC  3784               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4141  001BFE  3785               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4142  001C00  3786               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4143  001C02  2EE8               	decfsz	wreg,f,c
  4144  001C04  D7F8               	goto	u2385
  4145  001C06  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  4146  001C0A  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4147  001C0E  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4148  001C12  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4152  001C16  C088  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4153  001C1A                     l2750:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 663: }
  4157                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4158  001C1A  0100               	movlb	0	; () banked
  4159  001C1C  0587               	decf	CANSetMask@numBuffer& (0+255),w,b
  4160  001C1E  A4D8               	btfss	status,2,c
  4161  001C20  D095               	goto	l2782
  4162                           
  4163                           ; BSR set to: 0
  4164  001C22  0100               	movlb	0	; () banked
  4165  001C24  5182               	movf	CANSetMask@type& (0+255),w,b
  4166  001C26  0AF7               	xorlw	247
  4167  001C28  A4D8               	btfss	status,2,c
  4168  001C2A  D090               	goto	l2782
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;inc\CANlib.h: 666: {
  4172                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4173  001C2C  0100               	movlb	0	; () banked
  4174  001C2E  517E               	movf	CANSetMask@mask& (0+255),w,b
  4175  001C30  0100               	movlb	0	; () banked
  4176  001C32  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4177  001C34  0100               	movlb	0	; () banked
  4178  001C36  6B89               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4179  001C38  0100               	movlb	0	; () banked
  4180  001C3A  6B8A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4181  001C3C  0100               	movlb	0	; () banked
  4182  001C3E  6B8B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4186  001C40  C088  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4190  001C44  0E00               	movlw	0
  4191  001C46  0100               	movlb	0	; () banked
  4192  001C48  157E               	andwf	CANSetMask@mask& (0+255),w,b
  4193  001C4A  0100               	movlb	0	; () banked
  4194  001C4C  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4195  001C4E  0EFF               	movlw	255
  4196  001C50  0100               	movlb	0	; () banked
  4197  001C52  157F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4198  001C54  0100               	movlb	0	; () banked
  4199  001C56  6F89               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4200  001C58  0E00               	movlw	0
  4201  001C5A  0100               	movlb	0	; () banked
  4202  001C5C  1580               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4203  001C5E  0100               	movlb	0	; () banked
  4204  001C60  6F8A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4205  001C62  0E00               	movlw	0
  4206  001C64  0100               	movlb	0	; () banked
  4207  001C66  1581               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4208  001C68  0100               	movlb	0	; () banked
  4209  001C6A  6F8B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4213  001C6C  0100               	movlb	0	; () banked
  4214  001C6E  C088  F083         	movff	CANSetMask@tamp,??_CANSetMask
  4215  001C72  0100               	movlb	0	; () banked
  4216  001C74  C089  F084         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4217  001C78  0100               	movlb	0	; () banked
  4218  001C7A  C08A  F085         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4219  001C7E  0100               	movlb	0	; () banked
  4220  001C80  C08B  F086         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4221  001C84  C084  F083         	movff	??_CANSetMask+1,??_CANSetMask
  4222  001C88  C085  F084         	movff	??_CANSetMask+2,??_CANSetMask+1
  4223  001C8C  C086  F085         	movff	??_CANSetMask+3,??_CANSetMask+2
  4224  001C90  0100               	movlb	0	; () banked
  4225  001C92  6B86               	clrf	(??_CANSetMask+3)& (0+255),b
  4226  001C94  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  4227  001C98  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4228  001C9C  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4229  001CA0  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4233  001CA4  C088  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4237  001CA8  0100               	movlb	0	; () banked
  4238  001CAA  A180               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4239  001CAC  D003               	goto	l452
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4243  001CAE  010F               	movlb	15	; () banked
  4244  001CB0  8119               	bsf	25,0,b	;volatile
  4245  001CB2  D002               	goto	l453
  4246  001CB4                     l452:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;inc\CANlib.h: 676: else
  4250                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4251  001CB4  010F               	movlb	15	; () banked
  4252  001CB6  9119               	bcf	25,0,b	;volatile
  4253  001CB8                     l453:
  4254                           
  4255                           ; BSR set to: 15
  4256                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4257  001CB8  0100               	movlb	0	; () banked
  4258  001CBA  A380               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4259  001CBC  D003               	goto	l454
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4263  001CBE  010F               	movlb	15	; () banked
  4264  001CC0  8319               	bsf	25,1,b	;volatile
  4265  001CC2  D002               	goto	l455
  4266  001CC4                     l454:
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 681: else
  4270                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4271  001CC4  010F               	movlb	15	; () banked
  4272  001CC6  9319               	bcf	25,1,b	;volatile
  4273  001CC8                     l455:
  4274                           
  4275                           ; BSR set to: 15
  4276                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4277  001CC8  0100               	movlb	0	; () banked
  4278  001CCA  A580               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4279  001CCC  D003               	goto	l456
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4283  001CCE  010F               	movlb	15	; () banked
  4284  001CD0  8B19               	bsf	25,5,b	;volatile
  4285  001CD2  D002               	goto	l457
  4286  001CD4                     l456:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 686: else
  4290                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4291  001CD4  010F               	movlb	15	; () banked
  4292  001CD6  9B19               	bcf	25,5,b	;volatile
  4293  001CD8                     l457:
  4294                           
  4295                           ; BSR set to: 15
  4296                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4297  001CD8  0100               	movlb	0	; () banked
  4298  001CDA  A780               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4299  001CDC  D003               	goto	l458
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4303  001CDE  010F               	movlb	15	; () banked
  4304  001CE0  8D19               	bsf	25,6,b	;volatile
  4305  001CE2  D002               	goto	l459
  4306  001CE4                     l458:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;inc\CANlib.h: 691: else
  4310                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4311  001CE4  010F               	movlb	15	; () banked
  4312  001CE6  9D19               	bcf	25,6,b	;volatile
  4313  001CE8                     l459:
  4314                           
  4315                           ; BSR set to: 15
  4316                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4317  001CE8  0100               	movlb	0	; () banked
  4318  001CEA  A980               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4319  001CEC  D003               	goto	l460
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4323  001CEE  010F               	movlb	15	; () banked
  4324  001CF0  8F19               	bsf	25,7,b	;volatile
  4325  001CF2  D002               	goto	l2776
  4326  001CF4                     l460:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 696: else
  4330                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4331  001CF4  010F               	movlb	15	; () banked
  4332  001CF6  9F19               	bcf	25,7,b	;volatile
  4333  001CF8                     l2776:
  4334                           
  4335                           ; BSR set to: 15
  4336                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4337  001CF8  0100               	movlb	0	; () banked
  4338  001CFA  C07E  F083         	movff	CANSetMask@mask,??_CANSetMask
  4339  001CFE  0100               	movlb	0	; () banked
  4340  001D00  C07F  F084         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4341  001D04  0100               	movlb	0	; () banked
  4342  001D06  C080  F085         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4343  001D0A  0100               	movlb	0	; () banked
  4344  001D0C  C081  F086         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4345  001D10  0E16               	movlw	22
  4346  001D12  D006               	goto	u2460
  4347  001D14                     u2465:
  4348  001D14  0100               	movlb	0	; () banked
  4349  001D16  90D8               	bcf	status,0,c
  4350  001D18  3386               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4351  001D1A  3385               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4352  001D1C  3384               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4353  001D1E  3383               	rrcf	??_CANSetMask& (0+255),f,b
  4354  001D20                     u2460:
  4355  001D20  2EE8               	decfsz	wreg,f,c
  4356  001D22  D7F8               	goto	u2465
  4357  001D24  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  4358  001D28  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4359  001D2C  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4360  001D30  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4364  001D34  0100               	movlb	0	; () banked
  4365  001D36  5188               	movf	CANSetMask@tamp& (0+255),w,b
  4366  001D38  0100               	movlb	0	; () banked
  4367  001D3A  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4368  001D3C  0100               	movlb	0	; () banked
  4369  001D3E  6B89               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4370  001D40  0100               	movlb	0	; () banked
  4371  001D42  6B8A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4372  001D44  0100               	movlb	0	; () banked
  4373  001D46  6B8B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4377  001D48  C088  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4378  001D4C                     l2782:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;inc\CANlib.h: 702: }
  4382                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4383  001D4C  0100               	movlb	0	; () banked
  4384  001D4E  5187               	movf	CANSetMask@numBuffer& (0+255),w,b
  4385  001D50  0A02               	xorlw	2
  4386  001D52  A4D8               	btfss	status,2,c
  4387  001D54  D095               	goto	l473
  4388                           
  4389                           ; BSR set to: 0
  4390  001D56  0100               	movlb	0	; () banked
  4391  001D58  5182               	movf	CANSetMask@type& (0+255),w,b
  4392  001D5A  0AF7               	xorlw	247
  4393  001D5C  A4D8               	btfss	status,2,c
  4394  001D5E  D090               	goto	l473
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;inc\CANlib.h: 705: {
  4398                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4399  001D60  0100               	movlb	0	; () banked
  4400  001D62  517E               	movf	CANSetMask@mask& (0+255),w,b
  4401  001D64  0100               	movlb	0	; () banked
  4402  001D66  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4403  001D68  0100               	movlb	0	; () banked
  4404  001D6A  6B89               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4405  001D6C  0100               	movlb	0	; () banked
  4406  001D6E  6B8A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4407  001D70  0100               	movlb	0	; () banked
  4408  001D72  6B8B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4412  001D74  C088  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4416  001D78  0E00               	movlw	0
  4417  001D7A  0100               	movlb	0	; () banked
  4418  001D7C  157E               	andwf	CANSetMask@mask& (0+255),w,b
  4419  001D7E  0100               	movlb	0	; () banked
  4420  001D80  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4421  001D82  0EFF               	movlw	255
  4422  001D84  0100               	movlb	0	; () banked
  4423  001D86  157F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4424  001D88  0100               	movlb	0	; () banked
  4425  001D8A  6F89               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4426  001D8C  0E00               	movlw	0
  4427  001D8E  0100               	movlb	0	; () banked
  4428  001D90  1580               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4429  001D92  0100               	movlb	0	; () banked
  4430  001D94  6F8A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4431  001D96  0E00               	movlw	0
  4432  001D98  0100               	movlb	0	; () banked
  4433  001D9A  1581               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4434  001D9C  0100               	movlb	0	; () banked
  4435  001D9E  6F8B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4439  001DA0  0100               	movlb	0	; () banked
  4440  001DA2  C088  F083         	movff	CANSetMask@tamp,??_CANSetMask
  4441  001DA6  0100               	movlb	0	; () banked
  4442  001DA8  C089  F084         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4443  001DAC  0100               	movlb	0	; () banked
  4444  001DAE  C08A  F085         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4445  001DB2  0100               	movlb	0	; () banked
  4446  001DB4  C08B  F086         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4447  001DB8  C084  F083         	movff	??_CANSetMask+1,??_CANSetMask
  4448  001DBC  C085  F084         	movff	??_CANSetMask+2,??_CANSetMask+1
  4449  001DC0  C086  F085         	movff	??_CANSetMask+3,??_CANSetMask+2
  4450  001DC4  0100               	movlb	0	; () banked
  4451  001DC6  6B86               	clrf	(??_CANSetMask+3)& (0+255),b
  4452  001DC8  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  4453  001DCC  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4454  001DD0  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4455  001DD4  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4459  001DD8  C088  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4463  001DDC  0100               	movlb	0	; () banked
  4464  001DDE  A180               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4465  001DE0  D003               	goto	l463
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4469  001DE2  010F               	movlb	15	; () banked
  4470  001DE4  811D               	bsf	29,0,b	;volatile
  4471  001DE6  D002               	goto	l464
  4472  001DE8                     l463:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;inc\CANlib.h: 715: else
  4476                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4477  001DE8  010F               	movlb	15	; () banked
  4478  001DEA  911D               	bcf	29,0,b	;volatile
  4479  001DEC                     l464:
  4480                           
  4481                           ; BSR set to: 15
  4482                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4483  001DEC  0100               	movlb	0	; () banked
  4484  001DEE  A380               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4485  001DF0  D003               	goto	l465
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4489  001DF2  010F               	movlb	15	; () banked
  4490  001DF4  831D               	bsf	29,1,b	;volatile
  4491  001DF6  D002               	goto	l466
  4492  001DF8                     l465:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;inc\CANlib.h: 720: else
  4496                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4497  001DF8  010F               	movlb	15	; () banked
  4498  001DFA  931D               	bcf	29,1,b	;volatile
  4499  001DFC                     l466:
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4503  001DFC  0100               	movlb	0	; () banked
  4504  001DFE  A580               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4505  001E00  D003               	goto	l467
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4509  001E02  010F               	movlb	15	; () banked
  4510  001E04  8B1D               	bsf	29,5,b	;volatile
  4511  001E06  D002               	goto	l468
  4512  001E08                     l467:
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;inc\CANlib.h: 725: else
  4516                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4517  001E08  010F               	movlb	15	; () banked
  4518  001E0A  9B1D               	bcf	29,5,b	;volatile
  4519  001E0C                     l468:
  4520                           
  4521                           ; BSR set to: 15
  4522                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4523  001E0C  0100               	movlb	0	; () banked
  4524  001E0E  A780               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4525  001E10  D003               	goto	l469
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4529  001E12  010F               	movlb	15	; () banked
  4530  001E14  8D1D               	bsf	29,6,b	;volatile
  4531  001E16  D002               	goto	l470
  4532  001E18                     l469:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;inc\CANlib.h: 730: else
  4536                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4537  001E18  010F               	movlb	15	; () banked
  4538  001E1A  9D1D               	bcf	29,6,b	;volatile
  4539  001E1C                     l470:
  4540                           
  4541                           ; BSR set to: 15
  4542                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4543  001E1C  0100               	movlb	0	; () banked
  4544  001E1E  A980               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4545  001E20  D003               	goto	l471
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4549  001E22  010F               	movlb	15	; () banked
  4550  001E24  8F1D               	bsf	29,7,b	;volatile
  4551  001E26  D002               	goto	l2808
  4552  001E28                     l471:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;inc\CANlib.h: 735: else
  4556                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4557  001E28  010F               	movlb	15	; () banked
  4558  001E2A  9F1D               	bcf	29,7,b	;volatile
  4559  001E2C                     l2808:
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4563  001E2C  0100               	movlb	0	; () banked
  4564  001E2E  C07E  F083         	movff	CANSetMask@mask,??_CANSetMask
  4565  001E32  0100               	movlb	0	; () banked
  4566  001E34  C07F  F084         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4567  001E38  0100               	movlb	0	; () banked
  4568  001E3A  C080  F085         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4569  001E3E  0100               	movlb	0	; () banked
  4570  001E40  C081  F086         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4571  001E44  0E16               	movlw	22
  4572  001E46  D006               	goto	u2540
  4573  001E48                     u2545:
  4574  001E48  0100               	movlb	0	; () banked
  4575  001E4A  90D8               	bcf	status,0,c
  4576  001E4C  3386               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4577  001E4E  3385               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4578  001E50  3384               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4579  001E52  3383               	rrcf	??_CANSetMask& (0+255),f,b
  4580  001E54                     u2540:
  4581  001E54  2EE8               	decfsz	wreg,f,c
  4582  001E56  D7F8               	goto	u2545
  4583  001E58  C083  F088         	movff	??_CANSetMask,CANSetMask@tamp
  4584  001E5C  C084  F089         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4585  001E60  C085  F08A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4586  001E64  C086  F08B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4590  001E68  0100               	movlb	0	; () banked
  4591  001E6A  5188               	movf	CANSetMask@tamp& (0+255),w,b
  4592  001E6C  0100               	movlb	0	; () banked
  4593  001E6E  6F88               	movwf	CANSetMask@tamp& (0+255),b
  4594  001E70  0100               	movlb	0	; () banked
  4595  001E72  6B89               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4596  001E74  0100               	movlb	0	; () banked
  4597  001E76  6B8A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4598  001E78  0100               	movlb	0	; () banked
  4599  001E7A  6B8B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4603  001E7C  C088  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4604  001E80                     l473:
  4605                           
  4606                           ; BSR set to: 0
  4607  001E80  0012               	return	
  4608  001E82                     __end_of_CANSetMask:
  4609                           	opt stack 0
  4610                           tblptru	equ	0xFF8
  4611                           tblptrh	equ	0xFF7
  4612                           tblptrl	equ	0xFF6
  4613                           tablat	equ	0xFF5
  4614                           prodh	equ	0xFF4
  4615                           prodl	equ	0xFF3
  4616                           intcon	equ	0xFF2
  4617                           intcon2	equ	0xFF1
  4618                           intcon3	equ	0xFF0
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           postdec1	equ	0xFE5
  4622                           fsr1l	equ	0xFE1
  4623                           indf2	equ	0xFDF
  4624                           fsr2h	equ	0xFDA
  4625                           fsr2l	equ	0xFD9
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function _CANSetFilter *****************
  4629 ;; Defined at:
  4630 ;;		line 748 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  numBuffer       1    wreg     enum E16922
  4633 ;;  filter          4   30[BANK0 ] unsigned long 
  4634 ;;  type            1   34[BANK0 ] enum E16885
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  numBuffer       1   39[BANK0 ] enum E16922
  4637 ;;  tamp            4   40[BANK0 ] unsigned long 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;		None               void
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4647 ;;      Params:         0       5       0       0
  4648 ;;      Locals:         0       5       0       0
  4649 ;;      Temps:          0       4       0       0
  4650 ;;      Totals:         0      14       0       0
  4651 ;;Total ram usage:       14 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    4
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_CANInitialize
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text9
  4662  00010C                     __ptext9:
  4663                           	opt stack 0
  4664  00010C                     _CANSetFilter:
  4665                           	opt stack 24
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;incstack = 0
  4669                           ;CANSetFilter@numBuffer stored from wreg
  4670  00010C  0100               	movlb	0	; () banked
  4671  00010E  6F87               	movwf	CANSetFilter@numBuffer& (0+255),b
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 750: unsigned long tamp;
  4675                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4676  000110  0100               	movlb	0	; () banked
  4677  000112  6787               	tstfsz	CANSetFilter@numBuffer& (0+255),b
  4678  000114  D063               	goto	l2832
  4679                           
  4680                           ; BSR set to: 0
  4681  000116  0100               	movlb	0	; () banked
  4682  000118  2982               	incf	CANSetFilter@type& (0+255),w,b
  4683  00011A  A4D8               	btfss	status,2,c
  4684  00011C  D05F               	goto	l2832
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 753: {
  4688                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4689  00011E  010F               	movlb	15	; () banked
  4690  000120  9701               	bcf	1,3,b	;volatile
  4691                           
  4692                           ; BSR set to: 15
  4693                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4694  000122  0100               	movlb	0	; () banked
  4695  000124  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  4696  000128  0100               	movlb	0	; () banked
  4697  00012A  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4698  00012E  0100               	movlb	0	; () banked
  4699  000130  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4700  000134  0100               	movlb	0	; () banked
  4701  000136  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4702  00013A  0E04               	movlw	4
  4703  00013C  D006               	goto	u2570
  4704  00013E                     u2575:
  4705  00013E  0100               	movlb	0	; () banked
  4706  000140  90D8               	bcf	status,0,c
  4707  000142  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4708  000144  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4709  000146  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4710  000148  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  4711  00014A                     u2570:
  4712  00014A  2EE8               	decfsz	wreg,f,c
  4713  00014C  D7F8               	goto	u2575
  4714  00014E  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  4715  000152  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4716  000156  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4717  00015A  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4721  00015E  0100               	movlb	0	; () banked
  4722  000160  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  4723  000162  0100               	movlb	0	; () banked
  4724  000164  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  4725  000166  0100               	movlb	0	; () banked
  4726  000168  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4727  00016A  0100               	movlb	0	; () banked
  4728  00016C  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4729  00016E  0100               	movlb	0	; () banked
  4730  000170  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4734  000172  C088  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4738  000176  0E07               	movlw	7
  4739  000178  0100               	movlb	0	; () banked
  4740  00017A  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  4741  00017C  0100               	movlb	0	; () banked
  4742  00017E  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  4743  000180  0E00               	movlw	0
  4744  000182  0100               	movlb	0	; () banked
  4745  000184  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4746  000186  0100               	movlb	0	; () banked
  4747  000188  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4748  00018A  0E00               	movlw	0
  4749  00018C  0100               	movlb	0	; () banked
  4750  00018E  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4751  000190  0100               	movlb	0	; () banked
  4752  000192  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4753  000194  0E00               	movlw	0
  4754  000196  0100               	movlb	0	; () banked
  4755  000198  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4756  00019A  0100               	movlb	0	; () banked
  4757  00019C  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4761  00019E  0100               	movlb	0	; () banked
  4762  0001A0  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  4763  0001A4  0100               	movlb	0	; () banked
  4764  0001A6  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4765  0001AA  0100               	movlb	0	; () banked
  4766  0001AC  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4767  0001B0  0100               	movlb	0	; () banked
  4768  0001B2  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4769  0001B6  0E05               	movlw	5
  4770  0001B8                     u2585:
  4771  0001B8  90D8               	bcf	status,0,c
  4772  0001BA  0100               	movlb	0	; () banked
  4773  0001BC  3783               	rlcf	??_CANSetFilter& (0+255),f,b
  4774  0001BE  3784               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4775  0001C0  3785               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4776  0001C2  3786               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4777  0001C4  2EE8               	decfsz	wreg,f,c
  4778  0001C6  D7F8               	goto	u2585
  4779  0001C8  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  4780  0001CC  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4781  0001D0  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4782  0001D4  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4786  0001D8  C088  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4787  0001DC                     l2832:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;inc\CANlib.h: 763: }
  4791                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4792  0001DC  0100               	movlb	0	; () banked
  4793  0001DE  0587               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4794  0001E0  A4D8               	btfss	status,2,c
  4795  0001E2  D063               	goto	l2850
  4796                           
  4797                           ; BSR set to: 0
  4798  0001E4  0100               	movlb	0	; () banked
  4799  0001E6  2982               	incf	CANSetFilter@type& (0+255),w,b
  4800  0001E8  A4D8               	btfss	status,2,c
  4801  0001EA  D05F               	goto	l2850
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;inc\CANlib.h: 766: {
  4805                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4806  0001EC  010F               	movlb	15	; () banked
  4807  0001EE  9705               	bcf	5,3,b	;volatile
  4808                           
  4809                           ; BSR set to: 15
  4810                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4811  0001F0  0100               	movlb	0	; () banked
  4812  0001F2  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  4813  0001F6  0100               	movlb	0	; () banked
  4814  0001F8  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4815  0001FC  0100               	movlb	0	; () banked
  4816  0001FE  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4817  000202  0100               	movlb	0	; () banked
  4818  000204  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4819  000208  0E04               	movlw	4
  4820  00020A  D006               	goto	u2610
  4821  00020C                     u2615:
  4822  00020C  0100               	movlb	0	; () banked
  4823  00020E  90D8               	bcf	status,0,c
  4824  000210  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4825  000212  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4826  000214  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4827  000216  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  4828  000218                     u2610:
  4829  000218  2EE8               	decfsz	wreg,f,c
  4830  00021A  D7F8               	goto	u2615
  4831  00021C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  4832  000220  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4833  000224  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4834  000228  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4838  00022C  0100               	movlb	0	; () banked
  4839  00022E  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  4840  000230  0100               	movlb	0	; () banked
  4841  000232  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  4842  000234  0100               	movlb	0	; () banked
  4843  000236  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4844  000238  0100               	movlb	0	; () banked
  4845  00023A  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4846  00023C  0100               	movlb	0	; () banked
  4847  00023E  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4851  000240  C088  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4855  000244  0E07               	movlw	7
  4856  000246  0100               	movlb	0	; () banked
  4857  000248  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  4858  00024A  0100               	movlb	0	; () banked
  4859  00024C  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  4860  00024E  0E00               	movlw	0
  4861  000250  0100               	movlb	0	; () banked
  4862  000252  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4863  000254  0100               	movlb	0	; () banked
  4864  000256  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4865  000258  0E00               	movlw	0
  4866  00025A  0100               	movlb	0	; () banked
  4867  00025C  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4868  00025E  0100               	movlb	0	; () banked
  4869  000260  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4870  000262  0E00               	movlw	0
  4871  000264  0100               	movlb	0	; () banked
  4872  000266  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4873  000268  0100               	movlb	0	; () banked
  4874  00026A  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4878  00026C  0100               	movlb	0	; () banked
  4879  00026E  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  4880  000272  0100               	movlb	0	; () banked
  4881  000274  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4882  000278  0100               	movlb	0	; () banked
  4883  00027A  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4884  00027E  0100               	movlb	0	; () banked
  4885  000280  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4886  000284  0E05               	movlw	5
  4887  000286                     u2625:
  4888  000286  90D8               	bcf	status,0,c
  4889  000288  0100               	movlb	0	; () banked
  4890  00028A  3783               	rlcf	??_CANSetFilter& (0+255),f,b
  4891  00028C  3784               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4892  00028E  3785               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4893  000290  3786               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4894  000292  2EE8               	decfsz	wreg,f,c
  4895  000294  D7F8               	goto	u2625
  4896  000296  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  4897  00029A  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4898  00029E  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4899  0002A2  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4903  0002A6  C088  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4904  0002AA                     l2850:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;inc\CANlib.h: 776: }
  4908                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4909  0002AA  0100               	movlb	0	; () banked
  4910  0002AC  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4911  0002AE  0A02               	xorlw	2
  4912  0002B0  A4D8               	btfss	status,2,c
  4913  0002B2  D063               	goto	l2868
  4914                           
  4915                           ; BSR set to: 0
  4916  0002B4  0100               	movlb	0	; () banked
  4917  0002B6  2982               	incf	CANSetFilter@type& (0+255),w,b
  4918  0002B8  A4D8               	btfss	status,2,c
  4919  0002BA  D05F               	goto	l2868
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;inc\CANlib.h: 779: {
  4923                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4924  0002BC  010F               	movlb	15	; () banked
  4925  0002BE  9709               	bcf	9,3,b	;volatile
  4926                           
  4927                           ; BSR set to: 15
  4928                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4929  0002C0  0100               	movlb	0	; () banked
  4930  0002C2  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  4931  0002C6  0100               	movlb	0	; () banked
  4932  0002C8  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4933  0002CC  0100               	movlb	0	; () banked
  4934  0002CE  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4935  0002D2  0100               	movlb	0	; () banked
  4936  0002D4  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4937  0002D8  0E04               	movlw	4
  4938  0002DA  D006               	goto	u2650
  4939  0002DC                     u2655:
  4940  0002DC  0100               	movlb	0	; () banked
  4941  0002DE  90D8               	bcf	status,0,c
  4942  0002E0  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4943  0002E2  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4944  0002E4  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4945  0002E6  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  4946  0002E8                     u2650:
  4947  0002E8  2EE8               	decfsz	wreg,f,c
  4948  0002EA  D7F8               	goto	u2655
  4949  0002EC  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  4950  0002F0  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4951  0002F4  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4952  0002F8  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4956  0002FC  0100               	movlb	0	; () banked
  4957  0002FE  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  4958  000300  0100               	movlb	0	; () banked
  4959  000302  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  4960  000304  0100               	movlb	0	; () banked
  4961  000306  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4962  000308  0100               	movlb	0	; () banked
  4963  00030A  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4964  00030C  0100               	movlb	0	; () banked
  4965  00030E  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4969  000310  C088  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4973  000314  0E07               	movlw	7
  4974  000316  0100               	movlb	0	; () banked
  4975  000318  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  4976  00031A  0100               	movlb	0	; () banked
  4977  00031C  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  4978  00031E  0E00               	movlw	0
  4979  000320  0100               	movlb	0	; () banked
  4980  000322  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4981  000324  0100               	movlb	0	; () banked
  4982  000326  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4983  000328  0E00               	movlw	0
  4984  00032A  0100               	movlb	0	; () banked
  4985  00032C  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4986  00032E  0100               	movlb	0	; () banked
  4987  000330  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4988  000332  0E00               	movlw	0
  4989  000334  0100               	movlb	0	; () banked
  4990  000336  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4991  000338  0100               	movlb	0	; () banked
  4992  00033A  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4996  00033C  0100               	movlb	0	; () banked
  4997  00033E  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  4998  000342  0100               	movlb	0	; () banked
  4999  000344  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5000  000348  0100               	movlb	0	; () banked
  5001  00034A  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5002  00034E  0100               	movlb	0	; () banked
  5003  000350  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5004  000354  0E05               	movlw	5
  5005  000356                     u2665:
  5006  000356  90D8               	bcf	status,0,c
  5007  000358  0100               	movlb	0	; () banked
  5008  00035A  3783               	rlcf	??_CANSetFilter& (0+255),f,b
  5009  00035C  3784               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5010  00035E  3785               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5011  000360  3786               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5012  000362  2EE8               	decfsz	wreg,f,c
  5013  000364  D7F8               	goto	u2665
  5014  000366  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5015  00036A  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5016  00036E  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5017  000372  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5021  000376  C088  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5022  00037A                     l2868:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;inc\CANlib.h: 789: }
  5026                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5027  00037A  0100               	movlb	0	; () banked
  5028  00037C  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5029  00037E  0A03               	xorlw	3
  5030  000380  A4D8               	btfss	status,2,c
  5031  000382  D063               	goto	l2886
  5032                           
  5033                           ; BSR set to: 0
  5034  000384  0100               	movlb	0	; () banked
  5035  000386  2982               	incf	CANSetFilter@type& (0+255),w,b
  5036  000388  A4D8               	btfss	status,2,c
  5037  00038A  D05F               	goto	l2886
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;inc\CANlib.h: 792: {
  5041                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5042  00038C  010F               	movlb	15	; () banked
  5043  00038E  970D               	bcf	13,3,b	;volatile
  5044                           
  5045                           ; BSR set to: 15
  5046                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5047  000390  0100               	movlb	0	; () banked
  5048  000392  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  5049  000396  0100               	movlb	0	; () banked
  5050  000398  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5051  00039C  0100               	movlb	0	; () banked
  5052  00039E  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5053  0003A2  0100               	movlb	0	; () banked
  5054  0003A4  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5055  0003A8  0E04               	movlw	4
  5056  0003AA  D006               	goto	u2690
  5057  0003AC                     u2695:
  5058  0003AC  0100               	movlb	0	; () banked
  5059  0003AE  90D8               	bcf	status,0,c
  5060  0003B0  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5061  0003B2  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5062  0003B4  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5063  0003B6  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  5064  0003B8                     u2690:
  5065  0003B8  2EE8               	decfsz	wreg,f,c
  5066  0003BA  D7F8               	goto	u2695
  5067  0003BC  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5068  0003C0  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5069  0003C4  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5070  0003C8  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5074  0003CC  0100               	movlb	0	; () banked
  5075  0003CE  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  5076  0003D0  0100               	movlb	0	; () banked
  5077  0003D2  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5078  0003D4  0100               	movlb	0	; () banked
  5079  0003D6  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5080  0003D8  0100               	movlb	0	; () banked
  5081  0003DA  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5082  0003DC  0100               	movlb	0	; () banked
  5083  0003DE  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5087  0003E0  C088  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5091  0003E4  0E07               	movlw	7
  5092  0003E6  0100               	movlb	0	; () banked
  5093  0003E8  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  5094  0003EA  0100               	movlb	0	; () banked
  5095  0003EC  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5096  0003EE  0E00               	movlw	0
  5097  0003F0  0100               	movlb	0	; () banked
  5098  0003F2  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5099  0003F4  0100               	movlb	0	; () banked
  5100  0003F6  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5101  0003F8  0E00               	movlw	0
  5102  0003FA  0100               	movlb	0	; () banked
  5103  0003FC  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5104  0003FE  0100               	movlb	0	; () banked
  5105  000400  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5106  000402  0E00               	movlw	0
  5107  000404  0100               	movlb	0	; () banked
  5108  000406  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5109  000408  0100               	movlb	0	; () banked
  5110  00040A  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5114  00040C  0100               	movlb	0	; () banked
  5115  00040E  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  5116  000412  0100               	movlb	0	; () banked
  5117  000414  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5118  000418  0100               	movlb	0	; () banked
  5119  00041A  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5120  00041E  0100               	movlb	0	; () banked
  5121  000420  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5122  000424  0E05               	movlw	5
  5123  000426                     u2705:
  5124  000426  90D8               	bcf	status,0,c
  5125  000428  0100               	movlb	0	; () banked
  5126  00042A  3783               	rlcf	??_CANSetFilter& (0+255),f,b
  5127  00042C  3784               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5128  00042E  3785               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5129  000430  3786               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5130  000432  2EE8               	decfsz	wreg,f,c
  5131  000434  D7F8               	goto	u2705
  5132  000436  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5133  00043A  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5134  00043E  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5135  000442  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5139  000446  C088  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5140  00044A                     l2886:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;inc\CANlib.h: 802: }
  5144                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5145  00044A  0100               	movlb	0	; () banked
  5146  00044C  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5147  00044E  0A04               	xorlw	4
  5148  000450  A4D8               	btfss	status,2,c
  5149  000452  D063               	goto	l2904
  5150                           
  5151                           ; BSR set to: 0
  5152  000454  0100               	movlb	0	; () banked
  5153  000456  2982               	incf	CANSetFilter@type& (0+255),w,b
  5154  000458  A4D8               	btfss	status,2,c
  5155  00045A  D05F               	goto	l2904
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;inc\CANlib.h: 805: {
  5159                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5160  00045C  010F               	movlb	15	; () banked
  5161  00045E  9711               	bcf	17,3,b	;volatile
  5162                           
  5163                           ; BSR set to: 15
  5164                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5165  000460  0100               	movlb	0	; () banked
  5166  000462  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  5167  000466  0100               	movlb	0	; () banked
  5168  000468  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5169  00046C  0100               	movlb	0	; () banked
  5170  00046E  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5171  000472  0100               	movlb	0	; () banked
  5172  000474  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5173  000478  0E04               	movlw	4
  5174  00047A  D006               	goto	u2730
  5175  00047C                     u2735:
  5176  00047C  0100               	movlb	0	; () banked
  5177  00047E  90D8               	bcf	status,0,c
  5178  000480  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5179  000482  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5180  000484  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5181  000486  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  5182  000488                     u2730:
  5183  000488  2EE8               	decfsz	wreg,f,c
  5184  00048A  D7F8               	goto	u2735
  5185  00048C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5186  000490  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5187  000494  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5188  000498  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5192  00049C  0100               	movlb	0	; () banked
  5193  00049E  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  5194  0004A0  0100               	movlb	0	; () banked
  5195  0004A2  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5196  0004A4  0100               	movlb	0	; () banked
  5197  0004A6  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5198  0004A8  0100               	movlb	0	; () banked
  5199  0004AA  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5200  0004AC  0100               	movlb	0	; () banked
  5201  0004AE  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5205  0004B0  C088  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5209  0004B4  0E07               	movlw	7
  5210  0004B6  0100               	movlb	0	; () banked
  5211  0004B8  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  5212  0004BA  0100               	movlb	0	; () banked
  5213  0004BC  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5214  0004BE  0E00               	movlw	0
  5215  0004C0  0100               	movlb	0	; () banked
  5216  0004C2  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5217  0004C4  0100               	movlb	0	; () banked
  5218  0004C6  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5219  0004C8  0E00               	movlw	0
  5220  0004CA  0100               	movlb	0	; () banked
  5221  0004CC  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5222  0004CE  0100               	movlb	0	; () banked
  5223  0004D0  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5224  0004D2  0E00               	movlw	0
  5225  0004D4  0100               	movlb	0	; () banked
  5226  0004D6  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5227  0004D8  0100               	movlb	0	; () banked
  5228  0004DA  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5232  0004DC  0100               	movlb	0	; () banked
  5233  0004DE  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  5234  0004E2  0100               	movlb	0	; () banked
  5235  0004E4  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5236  0004E8  0100               	movlb	0	; () banked
  5237  0004EA  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5238  0004EE  0100               	movlb	0	; () banked
  5239  0004F0  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5240  0004F4  0E05               	movlw	5
  5241  0004F6                     u2745:
  5242  0004F6  90D8               	bcf	status,0,c
  5243  0004F8  0100               	movlb	0	; () banked
  5244  0004FA  3783               	rlcf	??_CANSetFilter& (0+255),f,b
  5245  0004FC  3784               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5246  0004FE  3785               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5247  000500  3786               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5248  000502  2EE8               	decfsz	wreg,f,c
  5249  000504  D7F8               	goto	u2745
  5250  000506  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5251  00050A  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5252  00050E  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5253  000512  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5257  000516  C088  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5258  00051A                     l2904:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 815: }
  5262                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5263  00051A  0100               	movlb	0	; () banked
  5264  00051C  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5265  00051E  0A05               	xorlw	5
  5266  000520  A4D8               	btfss	status,2,c
  5267  000522  D063               	goto	l2922
  5268                           
  5269                           ; BSR set to: 0
  5270  000524  0100               	movlb	0	; () banked
  5271  000526  2982               	incf	CANSetFilter@type& (0+255),w,b
  5272  000528  A4D8               	btfss	status,2,c
  5273  00052A  D05F               	goto	l2922
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 818: {
  5277                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5278  00052C  010F               	movlb	15	; () banked
  5279  00052E  9715               	bcf	21,3,b	;volatile
  5280                           
  5281                           ; BSR set to: 15
  5282                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5283  000530  0100               	movlb	0	; () banked
  5284  000532  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  5285  000536  0100               	movlb	0	; () banked
  5286  000538  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5287  00053C  0100               	movlb	0	; () banked
  5288  00053E  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5289  000542  0100               	movlb	0	; () banked
  5290  000544  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5291  000548  0E04               	movlw	4
  5292  00054A  D006               	goto	u2770
  5293  00054C                     u2775:
  5294  00054C  0100               	movlb	0	; () banked
  5295  00054E  90D8               	bcf	status,0,c
  5296  000550  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5297  000552  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5298  000554  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5299  000556  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  5300  000558                     u2770:
  5301  000558  2EE8               	decfsz	wreg,f,c
  5302  00055A  D7F8               	goto	u2775
  5303  00055C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5304  000560  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5305  000564  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5306  000568  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5310  00056C  0100               	movlb	0	; () banked
  5311  00056E  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  5312  000570  0100               	movlb	0	; () banked
  5313  000572  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5314  000574  0100               	movlb	0	; () banked
  5315  000576  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5316  000578  0100               	movlb	0	; () banked
  5317  00057A  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5318  00057C  0100               	movlb	0	; () banked
  5319  00057E  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5323  000580  C088  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5327  000584  0E07               	movlw	7
  5328  000586  0100               	movlb	0	; () banked
  5329  000588  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  5330  00058A  0100               	movlb	0	; () banked
  5331  00058C  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5332  00058E  0E00               	movlw	0
  5333  000590  0100               	movlb	0	; () banked
  5334  000592  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5335  000594  0100               	movlb	0	; () banked
  5336  000596  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5337  000598  0E00               	movlw	0
  5338  00059A  0100               	movlb	0	; () banked
  5339  00059C  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5340  00059E  0100               	movlb	0	; () banked
  5341  0005A0  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5342  0005A2  0E00               	movlw	0
  5343  0005A4  0100               	movlb	0	; () banked
  5344  0005A6  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5345  0005A8  0100               	movlb	0	; () banked
  5346  0005AA  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5350  0005AC  0100               	movlb	0	; () banked
  5351  0005AE  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  5352  0005B2  0100               	movlb	0	; () banked
  5353  0005B4  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5354  0005B8  0100               	movlb	0	; () banked
  5355  0005BA  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5356  0005BE  0100               	movlb	0	; () banked
  5357  0005C0  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5358  0005C4  0E05               	movlw	5
  5359  0005C6                     u2785:
  5360  0005C6  90D8               	bcf	status,0,c
  5361  0005C8  0100               	movlb	0	; () banked
  5362  0005CA  3783               	rlcf	??_CANSetFilter& (0+255),f,b
  5363  0005CC  3784               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5364  0005CE  3785               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5365  0005D0  3786               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5366  0005D2  2EE8               	decfsz	wreg,f,c
  5367  0005D4  D7F8               	goto	u2785
  5368  0005D6  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5369  0005DA  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5370  0005DE  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5371  0005E2  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5375  0005E6  C088  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5376  0005EA                     l2922:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;inc\CANlib.h: 828: }
  5380                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5381  0005EA  0100               	movlb	0	; () banked
  5382  0005EC  6787               	tstfsz	CANSetFilter@numBuffer& (0+255),b
  5383  0005EE  D097               	goto	l2956
  5384                           
  5385                           ; BSR set to: 0
  5386  0005F0  0100               	movlb	0	; () banked
  5387  0005F2  5182               	movf	CANSetFilter@type& (0+255),w,b
  5388  0005F4  0AF7               	xorlw	247
  5389  0005F6  A4D8               	btfss	status,2,c
  5390  0005F8  D092               	goto	l2956
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 832: {
  5394                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5395  0005FA  010F               	movlb	15	; () banked
  5396  0005FC  8701               	bsf	1,3,b	;volatile
  5397                           
  5398                           ; BSR set to: 15
  5399                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5400  0005FE  0100               	movlb	0	; () banked
  5401  000600  517E               	movf	CANSetFilter@filter& (0+255),w,b
  5402  000602  0100               	movlb	0	; () banked
  5403  000604  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5404  000606  0100               	movlb	0	; () banked
  5405  000608  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5406  00060A  0100               	movlb	0	; () banked
  5407  00060C  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5408  00060E  0100               	movlb	0	; () banked
  5409  000610  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5413  000612  C088  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5417  000616  0E00               	movlw	0
  5418  000618  0100               	movlb	0	; () banked
  5419  00061A  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  5420  00061C  0100               	movlb	0	; () banked
  5421  00061E  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5422  000620  0EFF               	movlw	255
  5423  000622  0100               	movlb	0	; () banked
  5424  000624  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5425  000626  0100               	movlb	0	; () banked
  5426  000628  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5427  00062A  0E00               	movlw	0
  5428  00062C  0100               	movlb	0	; () banked
  5429  00062E  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5430  000630  0100               	movlb	0	; () banked
  5431  000632  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5432  000634  0E00               	movlw	0
  5433  000636  0100               	movlb	0	; () banked
  5434  000638  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5435  00063A  0100               	movlb	0	; () banked
  5436  00063C  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5440  00063E  0100               	movlb	0	; () banked
  5441  000640  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  5442  000644  0100               	movlb	0	; () banked
  5443  000646  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5444  00064A  0100               	movlb	0	; () banked
  5445  00064C  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5446  000650  0100               	movlb	0	; () banked
  5447  000652  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5448  000656  C084  F083         	movff	??_CANSetFilter+1,??_CANSetFilter
  5449  00065A  C085  F084         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5450  00065E  C086  F085         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5451  000662  0100               	movlb	0	; () banked
  5452  000664  6B86               	clrf	(??_CANSetFilter+3)& (0+255),b
  5453  000666  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5454  00066A  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5455  00066E  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5456  000672  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5460  000676  C088  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5464  00067A  0100               	movlb	0	; () banked
  5465  00067C  A180               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5466  00067E  D003               	goto	l483
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5470  000680  010F               	movlb	15	; () banked
  5471  000682  8101               	bsf	1,0,b	;volatile
  5472  000684  D002               	goto	l484
  5473  000686                     l483:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;inc\CANlib.h: 844: else
  5477                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5478  000686  010F               	movlb	15	; () banked
  5479  000688  9101               	bcf	1,0,b	;volatile
  5480  00068A                     l484:
  5481                           
  5482                           ; BSR set to: 15
  5483                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5484  00068A  0100               	movlb	0	; () banked
  5485  00068C  A380               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5486  00068E  D003               	goto	l485
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5490  000690  010F               	movlb	15	; () banked
  5491  000692  8301               	bsf	1,1,b	;volatile
  5492  000694  D002               	goto	l486
  5493  000696                     l485:
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;inc\CANlib.h: 849: else
  5497                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5498  000696  010F               	movlb	15	; () banked
  5499  000698  9301               	bcf	1,1,b	;volatile
  5500  00069A                     l486:
  5501                           
  5502                           ; BSR set to: 15
  5503                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5504  00069A  0100               	movlb	0	; () banked
  5505  00069C  A580               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5506  00069E  D003               	goto	l487
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5510  0006A0  010F               	movlb	15	; () banked
  5511  0006A2  8B01               	bsf	1,5,b	;volatile
  5512  0006A4  D002               	goto	l488
  5513  0006A6                     l487:
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;inc\CANlib.h: 854: else
  5517                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5518  0006A6  010F               	movlb	15	; () banked
  5519  0006A8  9B01               	bcf	1,5,b	;volatile
  5520  0006AA                     l488:
  5521                           
  5522                           ; BSR set to: 15
  5523                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5524  0006AA  0100               	movlb	0	; () banked
  5525  0006AC  A780               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5526  0006AE  D003               	goto	l489
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5530  0006B0  010F               	movlb	15	; () banked
  5531  0006B2  8D01               	bsf	1,6,b	;volatile
  5532  0006B4  D002               	goto	l490
  5533  0006B6                     l489:
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 859: else
  5537                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5538  0006B6  010F               	movlb	15	; () banked
  5539  0006B8  9D01               	bcf	1,6,b	;volatile
  5540  0006BA                     l490:
  5541                           
  5542                           ; BSR set to: 15
  5543                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5544  0006BA  0100               	movlb	0	; () banked
  5545  0006BC  A980               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5546  0006BE  D003               	goto	l491
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5550  0006C0  010F               	movlb	15	; () banked
  5551  0006C2  8F01               	bsf	1,7,b	;volatile
  5552  0006C4  D002               	goto	l2950
  5553  0006C6                     l491:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;inc\CANlib.h: 864: else
  5557                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5558  0006C6  010F               	movlb	15	; () banked
  5559  0006C8  9F01               	bcf	1,7,b	;volatile
  5560  0006CA                     l2950:
  5561                           
  5562                           ; BSR set to: 15
  5563                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5564  0006CA  0100               	movlb	0	; () banked
  5565  0006CC  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  5566  0006D0  0100               	movlb	0	; () banked
  5567  0006D2  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5568  0006D6  0100               	movlb	0	; () banked
  5569  0006D8  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5570  0006DC  0100               	movlb	0	; () banked
  5571  0006DE  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5572  0006E2  0E16               	movlw	22
  5573  0006E4  D006               	goto	u2860
  5574  0006E6                     u2865:
  5575  0006E6  0100               	movlb	0	; () banked
  5576  0006E8  90D8               	bcf	status,0,c
  5577  0006EA  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5578  0006EC  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5579  0006EE  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5580  0006F0  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  5581  0006F2                     u2860:
  5582  0006F2  2EE8               	decfsz	wreg,f,c
  5583  0006F4  D7F8               	goto	u2865
  5584  0006F6  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5585  0006FA  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5586  0006FE  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5587  000702  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5591  000706  0100               	movlb	0	; () banked
  5592  000708  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  5593  00070A  0100               	movlb	0	; () banked
  5594  00070C  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5595  00070E  0100               	movlb	0	; () banked
  5596  000710  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5597  000712  0100               	movlb	0	; () banked
  5598  000714  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5599  000716  0100               	movlb	0	; () banked
  5600  000718  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5604  00071A  C088  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5605  00071E                     l2956:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 870: }
  5609                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5610  00071E  0100               	movlb	0	; () banked
  5611  000720  0587               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5612  000722  A4D8               	btfss	status,2,c
  5613  000724  D097               	goto	l2990
  5614                           
  5615                           ; BSR set to: 0
  5616  000726  0100               	movlb	0	; () banked
  5617  000728  5182               	movf	CANSetFilter@type& (0+255),w,b
  5618  00072A  0AF7               	xorlw	247
  5619  00072C  A4D8               	btfss	status,2,c
  5620  00072E  D092               	goto	l2990
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;inc\CANlib.h: 873: {
  5624                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5625  000730  010F               	movlb	15	; () banked
  5626  000732  8705               	bsf	5,3,b	;volatile
  5627                           
  5628                           ; BSR set to: 15
  5629                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5630  000734  0100               	movlb	0	; () banked
  5631  000736  517E               	movf	CANSetFilter@filter& (0+255),w,b
  5632  000738  0100               	movlb	0	; () banked
  5633  00073A  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5634  00073C  0100               	movlb	0	; () banked
  5635  00073E  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5636  000740  0100               	movlb	0	; () banked
  5637  000742  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5638  000744  0100               	movlb	0	; () banked
  5639  000746  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5643  000748  C088  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5647  00074C  0E00               	movlw	0
  5648  00074E  0100               	movlb	0	; () banked
  5649  000750  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  5650  000752  0100               	movlb	0	; () banked
  5651  000754  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5652  000756  0EFF               	movlw	255
  5653  000758  0100               	movlb	0	; () banked
  5654  00075A  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5655  00075C  0100               	movlb	0	; () banked
  5656  00075E  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5657  000760  0E00               	movlw	0
  5658  000762  0100               	movlb	0	; () banked
  5659  000764  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5660  000766  0100               	movlb	0	; () banked
  5661  000768  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5662  00076A  0E00               	movlw	0
  5663  00076C  0100               	movlb	0	; () banked
  5664  00076E  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5665  000770  0100               	movlb	0	; () banked
  5666  000772  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5670  000774  0100               	movlb	0	; () banked
  5671  000776  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  5672  00077A  0100               	movlb	0	; () banked
  5673  00077C  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5674  000780  0100               	movlb	0	; () banked
  5675  000782  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5676  000786  0100               	movlb	0	; () banked
  5677  000788  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5678  00078C  C084  F083         	movff	??_CANSetFilter+1,??_CANSetFilter
  5679  000790  C085  F084         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5680  000794  C086  F085         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5681  000798  0100               	movlb	0	; () banked
  5682  00079A  6B86               	clrf	(??_CANSetFilter+3)& (0+255),b
  5683  00079C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5684  0007A0  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5685  0007A4  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5686  0007A8  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5690  0007AC  C088  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5694  0007B0  0100               	movlb	0	; () banked
  5695  0007B2  A180               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5696  0007B4  D003               	goto	l494
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5700  0007B6  010F               	movlb	15	; () banked
  5701  0007B8  8105               	bsf	5,0,b	;volatile
  5702  0007BA  D002               	goto	l495
  5703  0007BC                     l494:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;inc\CANlib.h: 885: else
  5707                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5708  0007BC  010F               	movlb	15	; () banked
  5709  0007BE  9105               	bcf	5,0,b	;volatile
  5710  0007C0                     l495:
  5711                           
  5712                           ; BSR set to: 15
  5713                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5714  0007C0  0100               	movlb	0	; () banked
  5715  0007C2  A380               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5716  0007C4  D003               	goto	l496
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5720  0007C6  010F               	movlb	15	; () banked
  5721  0007C8  8305               	bsf	5,1,b	;volatile
  5722  0007CA  D002               	goto	l497
  5723  0007CC                     l496:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;inc\CANlib.h: 890: else
  5727                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5728  0007CC  010F               	movlb	15	; () banked
  5729  0007CE  9305               	bcf	5,1,b	;volatile
  5730  0007D0                     l497:
  5731                           
  5732                           ; BSR set to: 15
  5733                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5734  0007D0  0100               	movlb	0	; () banked
  5735  0007D2  A580               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5736  0007D4  D003               	goto	l498
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5740  0007D6  010F               	movlb	15	; () banked
  5741  0007D8  8B05               	bsf	5,5,b	;volatile
  5742  0007DA  D002               	goto	l499
  5743  0007DC                     l498:
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;inc\CANlib.h: 895: else
  5747                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5748  0007DC  010F               	movlb	15	; () banked
  5749  0007DE  9B05               	bcf	5,5,b	;volatile
  5750  0007E0                     l499:
  5751                           
  5752                           ; BSR set to: 15
  5753                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5754  0007E0  0100               	movlb	0	; () banked
  5755  0007E2  A780               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5756  0007E4  D003               	goto	l500
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5760  0007E6  010F               	movlb	15	; () banked
  5761  0007E8  8D05               	bsf	5,6,b	;volatile
  5762  0007EA  D002               	goto	l501
  5763  0007EC                     l500:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;inc\CANlib.h: 900: else
  5767                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5768  0007EC  010F               	movlb	15	; () banked
  5769  0007EE  9D05               	bcf	5,6,b	;volatile
  5770  0007F0                     l501:
  5771                           
  5772                           ; BSR set to: 15
  5773                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5774  0007F0  0100               	movlb	0	; () banked
  5775  0007F2  A980               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5776  0007F4  D003               	goto	l502
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5780  0007F6  010F               	movlb	15	; () banked
  5781  0007F8  8F05               	bsf	5,7,b	;volatile
  5782  0007FA  D002               	goto	l2984
  5783  0007FC                     l502:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 905: else
  5787                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5788  0007FC  010F               	movlb	15	; () banked
  5789  0007FE  9F05               	bcf	5,7,b	;volatile
  5790  000800                     l2984:
  5791                           
  5792                           ; BSR set to: 15
  5793                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5794  000800  0100               	movlb	0	; () banked
  5795  000802  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  5796  000806  0100               	movlb	0	; () banked
  5797  000808  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5798  00080C  0100               	movlb	0	; () banked
  5799  00080E  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5800  000812  0100               	movlb	0	; () banked
  5801  000814  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5802  000818  0E16               	movlw	22
  5803  00081A  D006               	goto	u2940
  5804  00081C                     u2945:
  5805  00081C  0100               	movlb	0	; () banked
  5806  00081E  90D8               	bcf	status,0,c
  5807  000820  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5808  000822  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5809  000824  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5810  000826  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  5811  000828                     u2940:
  5812  000828  2EE8               	decfsz	wreg,f,c
  5813  00082A  D7F8               	goto	u2945
  5814  00082C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5815  000830  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5816  000834  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5817  000838  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5821  00083C  0100               	movlb	0	; () banked
  5822  00083E  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  5823  000840  0100               	movlb	0	; () banked
  5824  000842  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5825  000844  0100               	movlb	0	; () banked
  5826  000846  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5827  000848  0100               	movlb	0	; () banked
  5828  00084A  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5829  00084C  0100               	movlb	0	; () banked
  5830  00084E  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5834  000850  C088  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5835  000854                     l2990:
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;inc\CANlib.h: 911: }
  5839                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5840  000854  0100               	movlb	0	; () banked
  5841  000856  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5842  000858  0A02               	xorlw	2
  5843  00085A  A4D8               	btfss	status,2,c
  5844  00085C  D097               	goto	l3024
  5845                           
  5846                           ; BSR set to: 0
  5847  00085E  0100               	movlb	0	; () banked
  5848  000860  5182               	movf	CANSetFilter@type& (0+255),w,b
  5849  000862  0AF7               	xorlw	247
  5850  000864  A4D8               	btfss	status,2,c
  5851  000866  D092               	goto	l3024
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;inc\CANlib.h: 915: {
  5855                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5856  000868  010F               	movlb	15	; () banked
  5857  00086A  8709               	bsf	9,3,b	;volatile
  5858                           
  5859                           ; BSR set to: 15
  5860                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5861  00086C  0100               	movlb	0	; () banked
  5862  00086E  517E               	movf	CANSetFilter@filter& (0+255),w,b
  5863  000870  0100               	movlb	0	; () banked
  5864  000872  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5865  000874  0100               	movlb	0	; () banked
  5866  000876  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5867  000878  0100               	movlb	0	; () banked
  5868  00087A  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5869  00087C  0100               	movlb	0	; () banked
  5870  00087E  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5874  000880  C088  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5878  000884  0E00               	movlw	0
  5879  000886  0100               	movlb	0	; () banked
  5880  000888  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  5881  00088A  0100               	movlb	0	; () banked
  5882  00088C  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  5883  00088E  0EFF               	movlw	255
  5884  000890  0100               	movlb	0	; () banked
  5885  000892  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5886  000894  0100               	movlb	0	; () banked
  5887  000896  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5888  000898  0E00               	movlw	0
  5889  00089A  0100               	movlb	0	; () banked
  5890  00089C  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5891  00089E  0100               	movlb	0	; () banked
  5892  0008A0  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5893  0008A2  0E00               	movlw	0
  5894  0008A4  0100               	movlb	0	; () banked
  5895  0008A6  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5896  0008A8  0100               	movlb	0	; () banked
  5897  0008AA  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5901  0008AC  0100               	movlb	0	; () banked
  5902  0008AE  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  5903  0008B2  0100               	movlb	0	; () banked
  5904  0008B4  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5905  0008B8  0100               	movlb	0	; () banked
  5906  0008BA  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5907  0008BE  0100               	movlb	0	; () banked
  5908  0008C0  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5909  0008C4  C084  F083         	movff	??_CANSetFilter+1,??_CANSetFilter
  5910  0008C8  C085  F084         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5911  0008CC  C086  F085         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5912  0008D0  0100               	movlb	0	; () banked
  5913  0008D2  6B86               	clrf	(??_CANSetFilter+3)& (0+255),b
  5914  0008D4  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  5915  0008D8  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5916  0008DC  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5917  0008E0  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5921  0008E4  C088  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5925  0008E8  0100               	movlb	0	; () banked
  5926  0008EA  A180               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5927  0008EC  D003               	goto	l505
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5931  0008EE  010F               	movlb	15	; () banked
  5932  0008F0  8109               	bsf	9,0,b	;volatile
  5933  0008F2  D002               	goto	l506
  5934  0008F4                     l505:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;inc\CANlib.h: 927: else
  5938                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5939  0008F4  010F               	movlb	15	; () banked
  5940  0008F6  9109               	bcf	9,0,b	;volatile
  5941  0008F8                     l506:
  5942                           
  5943                           ; BSR set to: 15
  5944                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5945  0008F8  0100               	movlb	0	; () banked
  5946  0008FA  A380               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5947  0008FC  D003               	goto	l507
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5951  0008FE  010F               	movlb	15	; () banked
  5952  000900  8309               	bsf	9,1,b	;volatile
  5953  000902  D002               	goto	l508
  5954  000904                     l507:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;inc\CANlib.h: 932: else
  5958                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5959  000904  010F               	movlb	15	; () banked
  5960  000906  9309               	bcf	9,1,b	;volatile
  5961  000908                     l508:
  5962                           
  5963                           ; BSR set to: 15
  5964                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5965  000908  0100               	movlb	0	; () banked
  5966  00090A  A580               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5967  00090C  D003               	goto	l509
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5971  00090E  010F               	movlb	15	; () banked
  5972  000910  8B09               	bsf	9,5,b	;volatile
  5973  000912  D002               	goto	l510
  5974  000914                     l509:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;inc\CANlib.h: 937: else
  5978                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5979  000914  010F               	movlb	15	; () banked
  5980  000916  9B09               	bcf	9,5,b	;volatile
  5981  000918                     l510:
  5982                           
  5983                           ; BSR set to: 15
  5984                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5985  000918  0100               	movlb	0	; () banked
  5986  00091A  A780               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5987  00091C  D003               	goto	l511
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5991  00091E  010F               	movlb	15	; () banked
  5992  000920  8D09               	bsf	9,6,b	;volatile
  5993  000922  D002               	goto	l512
  5994  000924                     l511:
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;inc\CANlib.h: 942: else
  5998                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5999  000924  010F               	movlb	15	; () banked
  6000  000926  9D09               	bcf	9,6,b	;volatile
  6001  000928                     l512:
  6002                           
  6003                           ; BSR set to: 15
  6004                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  6005  000928  0100               	movlb	0	; () banked
  6006  00092A  A980               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6007  00092C  D003               	goto	l513
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6011  00092E  010F               	movlb	15	; () banked
  6012  000930  8F09               	bsf	9,7,b	;volatile
  6013  000932  D002               	goto	l3018
  6014  000934                     l513:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;inc\CANlib.h: 947: else
  6018                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6019  000934  010F               	movlb	15	; () banked
  6020  000936  9F09               	bcf	9,7,b	;volatile
  6021  000938                     l3018:
  6022                           
  6023                           ; BSR set to: 15
  6024                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  6025  000938  0100               	movlb	0	; () banked
  6026  00093A  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  6027  00093E  0100               	movlb	0	; () banked
  6028  000940  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6029  000944  0100               	movlb	0	; () banked
  6030  000946  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6031  00094A  0100               	movlb	0	; () banked
  6032  00094C  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6033  000950  0E16               	movlw	22
  6034  000952  D006               	goto	u3020
  6035  000954                     u3025:
  6036  000954  0100               	movlb	0	; () banked
  6037  000956  90D8               	bcf	status,0,c
  6038  000958  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6039  00095A  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6040  00095C  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6041  00095E  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  6042  000960                     u3020:
  6043  000960  2EE8               	decfsz	wreg,f,c
  6044  000962  D7F8               	goto	u3025
  6045  000964  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  6046  000968  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6047  00096C  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6048  000970  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  6052  000974  0100               	movlb	0	; () banked
  6053  000976  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  6054  000978  0100               	movlb	0	; () banked
  6055  00097A  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6056  00097C  0100               	movlb	0	; () banked
  6057  00097E  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6058  000980  0100               	movlb	0	; () banked
  6059  000982  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6060  000984  0100               	movlb	0	; () banked
  6061  000986  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6065  000988  C088  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6066  00098C                     l3024:
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;inc\CANlib.h: 953: }
  6070                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6071  00098C  0100               	movlb	0	; () banked
  6072  00098E  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  6073  000990  0A03               	xorlw	3
  6074  000992  A4D8               	btfss	status,2,c
  6075  000994  D097               	goto	l3058
  6076                           
  6077                           ; BSR set to: 0
  6078  000996  0100               	movlb	0	; () banked
  6079  000998  5182               	movf	CANSetFilter@type& (0+255),w,b
  6080  00099A  0AF7               	xorlw	247
  6081  00099C  A4D8               	btfss	status,2,c
  6082  00099E  D092               	goto	l3058
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;inc\CANlib.h: 956: {
  6086                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6087  0009A0  010F               	movlb	15	; () banked
  6088  0009A2  870D               	bsf	13,3,b	;volatile
  6089                           
  6090                           ; BSR set to: 15
  6091                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6092  0009A4  0100               	movlb	0	; () banked
  6093  0009A6  517E               	movf	CANSetFilter@filter& (0+255),w,b
  6094  0009A8  0100               	movlb	0	; () banked
  6095  0009AA  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6096  0009AC  0100               	movlb	0	; () banked
  6097  0009AE  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6098  0009B0  0100               	movlb	0	; () banked
  6099  0009B2  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6100  0009B4  0100               	movlb	0	; () banked
  6101  0009B6  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6105  0009B8  C088  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6109  0009BC  0E00               	movlw	0
  6110  0009BE  0100               	movlb	0	; () banked
  6111  0009C0  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  6112  0009C2  0100               	movlb	0	; () banked
  6113  0009C4  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6114  0009C6  0EFF               	movlw	255
  6115  0009C8  0100               	movlb	0	; () banked
  6116  0009CA  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6117  0009CC  0100               	movlb	0	; () banked
  6118  0009CE  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6119  0009D0  0E00               	movlw	0
  6120  0009D2  0100               	movlb	0	; () banked
  6121  0009D4  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6122  0009D6  0100               	movlb	0	; () banked
  6123  0009D8  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6124  0009DA  0E00               	movlw	0
  6125  0009DC  0100               	movlb	0	; () banked
  6126  0009DE  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6127  0009E0  0100               	movlb	0	; () banked
  6128  0009E2  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6132  0009E4  0100               	movlb	0	; () banked
  6133  0009E6  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  6134  0009EA  0100               	movlb	0	; () banked
  6135  0009EC  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6136  0009F0  0100               	movlb	0	; () banked
  6137  0009F2  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6138  0009F6  0100               	movlb	0	; () banked
  6139  0009F8  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6140  0009FC  C084  F083         	movff	??_CANSetFilter+1,??_CANSetFilter
  6141  000A00  C085  F084         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6142  000A04  C086  F085         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6143  000A08  0100               	movlb	0	; () banked
  6144  000A0A  6B86               	clrf	(??_CANSetFilter+3)& (0+255),b
  6145  000A0C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  6146  000A10  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6147  000A14  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6148  000A18  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6152  000A1C  C088  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6156  000A20  0100               	movlb	0	; () banked
  6157  000A22  A180               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6158  000A24  D003               	goto	l516
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6162  000A26  010F               	movlb	15	; () banked
  6163  000A28  810D               	bsf	13,0,b	;volatile
  6164  000A2A  D002               	goto	l517
  6165  000A2C                     l516:
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;inc\CANlib.h: 968: else
  6169                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6170  000A2C  010F               	movlb	15	; () banked
  6171  000A2E  910D               	bcf	13,0,b	;volatile
  6172  000A30                     l517:
  6173                           
  6174                           ; BSR set to: 15
  6175                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6176  000A30  0100               	movlb	0	; () banked
  6177  000A32  A380               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6178  000A34  D003               	goto	l518
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6182  000A36  010F               	movlb	15	; () banked
  6183  000A38  830D               	bsf	13,1,b	;volatile
  6184  000A3A  D002               	goto	l519
  6185  000A3C                     l518:
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;inc\CANlib.h: 973: else
  6189                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6190  000A3C  010F               	movlb	15	; () banked
  6191  000A3E  930D               	bcf	13,1,b	;volatile
  6192  000A40                     l519:
  6193                           
  6194                           ; BSR set to: 15
  6195                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6196  000A40  0100               	movlb	0	; () banked
  6197  000A42  A580               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6198  000A44  D003               	goto	l520
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6202  000A46  010F               	movlb	15	; () banked
  6203  000A48  8B0D               	bsf	13,5,b	;volatile
  6204  000A4A  D002               	goto	l521
  6205  000A4C                     l520:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;inc\CANlib.h: 978: else
  6209                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6210  000A4C  010F               	movlb	15	; () banked
  6211  000A4E  9B0D               	bcf	13,5,b	;volatile
  6212  000A50                     l521:
  6213                           
  6214                           ; BSR set to: 15
  6215                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6216  000A50  0100               	movlb	0	; () banked
  6217  000A52  A780               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6218  000A54  D003               	goto	l522
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6222  000A56  010F               	movlb	15	; () banked
  6223  000A58  8D0D               	bsf	13,6,b	;volatile
  6224  000A5A  D002               	goto	l523
  6225  000A5C                     l522:
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;inc\CANlib.h: 983: else
  6229                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6230  000A5C  010F               	movlb	15	; () banked
  6231  000A5E  9D0D               	bcf	13,6,b	;volatile
  6232  000A60                     l523:
  6233                           
  6234                           ; BSR set to: 15
  6235                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6236  000A60  0100               	movlb	0	; () banked
  6237  000A62  A980               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6238  000A64  D003               	goto	l524
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6242  000A66  010F               	movlb	15	; () banked
  6243  000A68  8F0D               	bsf	13,7,b	;volatile
  6244  000A6A  D002               	goto	l3052
  6245  000A6C                     l524:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;inc\CANlib.h: 988: else
  6249                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6250  000A6C  010F               	movlb	15	; () banked
  6251  000A6E  9F0D               	bcf	13,7,b	;volatile
  6252  000A70                     l3052:
  6253                           
  6254                           ; BSR set to: 15
  6255                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6256  000A70  0100               	movlb	0	; () banked
  6257  000A72  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  6258  000A76  0100               	movlb	0	; () banked
  6259  000A78  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6260  000A7C  0100               	movlb	0	; () banked
  6261  000A7E  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6262  000A82  0100               	movlb	0	; () banked
  6263  000A84  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6264  000A88  0E16               	movlw	22
  6265  000A8A  D006               	goto	u3100
  6266  000A8C                     u3105:
  6267  000A8C  0100               	movlb	0	; () banked
  6268  000A8E  90D8               	bcf	status,0,c
  6269  000A90  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6270  000A92  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6271  000A94  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6272  000A96  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  6273  000A98                     u3100:
  6274  000A98  2EE8               	decfsz	wreg,f,c
  6275  000A9A  D7F8               	goto	u3105
  6276  000A9C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  6277  000AA0  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6278  000AA4  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6279  000AA8  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6283  000AAC  0100               	movlb	0	; () banked
  6284  000AAE  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  6285  000AB0  0100               	movlb	0	; () banked
  6286  000AB2  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6287  000AB4  0100               	movlb	0	; () banked
  6288  000AB6  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6289  000AB8  0100               	movlb	0	; () banked
  6290  000ABA  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6291  000ABC  0100               	movlb	0	; () banked
  6292  000ABE  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6296  000AC0  C088  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6297  000AC4                     l3058:
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;inc\CANlib.h: 994: }
  6301                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6302  000AC4  0100               	movlb	0	; () banked
  6303  000AC6  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  6304  000AC8  0A04               	xorlw	4
  6305  000ACA  A4D8               	btfss	status,2,c
  6306  000ACC  D097               	goto	l3092
  6307                           
  6308                           ; BSR set to: 0
  6309  000ACE  0100               	movlb	0	; () banked
  6310  000AD0  5182               	movf	CANSetFilter@type& (0+255),w,b
  6311  000AD2  0AF7               	xorlw	247
  6312  000AD4  A4D8               	btfss	status,2,c
  6313  000AD6  D092               	goto	l3092
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;inc\CANlib.h: 997: {
  6317                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6318  000AD8  010F               	movlb	15	; () banked
  6319  000ADA  8711               	bsf	17,3,b	;volatile
  6320                           
  6321                           ; BSR set to: 15
  6322                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6323  000ADC  0100               	movlb	0	; () banked
  6324  000ADE  517E               	movf	CANSetFilter@filter& (0+255),w,b
  6325  000AE0  0100               	movlb	0	; () banked
  6326  000AE2  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6327  000AE4  0100               	movlb	0	; () banked
  6328  000AE6  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6329  000AE8  0100               	movlb	0	; () banked
  6330  000AEA  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6331  000AEC  0100               	movlb	0	; () banked
  6332  000AEE  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6336  000AF0  C088  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6340  000AF4  0E00               	movlw	0
  6341  000AF6  0100               	movlb	0	; () banked
  6342  000AF8  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  6343  000AFA  0100               	movlb	0	; () banked
  6344  000AFC  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6345  000AFE  0EFF               	movlw	255
  6346  000B00  0100               	movlb	0	; () banked
  6347  000B02  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6348  000B04  0100               	movlb	0	; () banked
  6349  000B06  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6350  000B08  0E00               	movlw	0
  6351  000B0A  0100               	movlb	0	; () banked
  6352  000B0C  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6353  000B0E  0100               	movlb	0	; () banked
  6354  000B10  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6355  000B12  0E00               	movlw	0
  6356  000B14  0100               	movlb	0	; () banked
  6357  000B16  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6358  000B18  0100               	movlb	0	; () banked
  6359  000B1A  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6363  000B1C  0100               	movlb	0	; () banked
  6364  000B1E  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  6365  000B22  0100               	movlb	0	; () banked
  6366  000B24  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6367  000B28  0100               	movlb	0	; () banked
  6368  000B2A  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6369  000B2E  0100               	movlb	0	; () banked
  6370  000B30  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6371  000B34  C084  F083         	movff	??_CANSetFilter+1,??_CANSetFilter
  6372  000B38  C085  F084         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6373  000B3C  C086  F085         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6374  000B40  0100               	movlb	0	; () banked
  6375  000B42  6B86               	clrf	(??_CANSetFilter+3)& (0+255),b
  6376  000B44  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  6377  000B48  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6378  000B4C  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6379  000B50  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6383  000B54  C088  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6387  000B58  0100               	movlb	0	; () banked
  6388  000B5A  A180               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6389  000B5C  D003               	goto	l527
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6393  000B5E  010F               	movlb	15	; () banked
  6394  000B60  8111               	bsf	17,0,b	;volatile
  6395  000B62  D002               	goto	l528
  6396  000B64                     l527:
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;inc\CANlib.h: 1009: else
  6400                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6401  000B64  010F               	movlb	15	; () banked
  6402  000B66  9111               	bcf	17,0,b	;volatile
  6403  000B68                     l528:
  6404                           
  6405                           ; BSR set to: 15
  6406                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6407  000B68  0100               	movlb	0	; () banked
  6408  000B6A  A380               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6409  000B6C  D003               	goto	l529
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6413  000B6E  010F               	movlb	15	; () banked
  6414  000B70  8311               	bsf	17,1,b	;volatile
  6415  000B72  D002               	goto	l530
  6416  000B74                     l529:
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;inc\CANlib.h: 1014: else
  6420                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6421  000B74  010F               	movlb	15	; () banked
  6422  000B76  9311               	bcf	17,1,b	;volatile
  6423  000B78                     l530:
  6424                           
  6425                           ; BSR set to: 15
  6426                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6427  000B78  0100               	movlb	0	; () banked
  6428  000B7A  A580               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6429  000B7C  D003               	goto	l531
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6433  000B7E  010F               	movlb	15	; () banked
  6434  000B80  8B11               	bsf	17,5,b	;volatile
  6435  000B82  D002               	goto	l532
  6436  000B84                     l531:
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;inc\CANlib.h: 1019: else
  6440                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6441  000B84  010F               	movlb	15	; () banked
  6442  000B86  9B11               	bcf	17,5,b	;volatile
  6443  000B88                     l532:
  6444                           
  6445                           ; BSR set to: 15
  6446                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6447  000B88  0100               	movlb	0	; () banked
  6448  000B8A  A780               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6449  000B8C  D003               	goto	l533
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6453  000B8E  010F               	movlb	15	; () banked
  6454  000B90  8D11               	bsf	17,6,b	;volatile
  6455  000B92  D002               	goto	l534
  6456  000B94                     l533:
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;inc\CANlib.h: 1024: else
  6460                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6461  000B94  010F               	movlb	15	; () banked
  6462  000B96  9D11               	bcf	17,6,b	;volatile
  6463  000B98                     l534:
  6464                           
  6465                           ; BSR set to: 15
  6466                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6467  000B98  0100               	movlb	0	; () banked
  6468  000B9A  A980               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6469  000B9C  D003               	goto	l535
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6473  000B9E  010F               	movlb	15	; () banked
  6474  000BA0  8F11               	bsf	17,7,b	;volatile
  6475  000BA2  D002               	goto	l3086
  6476  000BA4                     l535:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;inc\CANlib.h: 1029: else
  6480                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6481  000BA4  010F               	movlb	15	; () banked
  6482  000BA6  9F11               	bcf	17,7,b	;volatile
  6483  000BA8                     l3086:
  6484                           
  6485                           ; BSR set to: 15
  6486                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6487  000BA8  0100               	movlb	0	; () banked
  6488  000BAA  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  6489  000BAE  0100               	movlb	0	; () banked
  6490  000BB0  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6491  000BB4  0100               	movlb	0	; () banked
  6492  000BB6  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6493  000BBA  0100               	movlb	0	; () banked
  6494  000BBC  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6495  000BC0  0E16               	movlw	22
  6496  000BC2  D006               	goto	u3180
  6497  000BC4                     u3185:
  6498  000BC4  0100               	movlb	0	; () banked
  6499  000BC6  90D8               	bcf	status,0,c
  6500  000BC8  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6501  000BCA  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6502  000BCC  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6503  000BCE  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  6504  000BD0                     u3180:
  6505  000BD0  2EE8               	decfsz	wreg,f,c
  6506  000BD2  D7F8               	goto	u3185
  6507  000BD4  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  6508  000BD8  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6509  000BDC  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6510  000BE0  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6514  000BE4  0100               	movlb	0	; () banked
  6515  000BE6  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  6516  000BE8  0100               	movlb	0	; () banked
  6517  000BEA  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6518  000BEC  0100               	movlb	0	; () banked
  6519  000BEE  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6520  000BF0  0100               	movlb	0	; () banked
  6521  000BF2  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6522  000BF4  0100               	movlb	0	; () banked
  6523  000BF6  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6527  000BF8  C088  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6528  000BFC                     l3092:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;inc\CANlib.h: 1035: }
  6532                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6533  000BFC  0100               	movlb	0	; () banked
  6534  000BFE  5187               	movf	CANSetFilter@numBuffer& (0+255),w,b
  6535  000C00  0A05               	xorlw	5
  6536  000C02  A4D8               	btfss	status,2,c
  6537  000C04  D097               	goto	l548
  6538                           
  6539                           ; BSR set to: 0
  6540  000C06  0100               	movlb	0	; () banked
  6541  000C08  5182               	movf	CANSetFilter@type& (0+255),w,b
  6542  000C0A  0AF7               	xorlw	247
  6543  000C0C  A4D8               	btfss	status,2,c
  6544  000C0E  D092               	goto	l548
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;inc\CANlib.h: 1038: {
  6548                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6549  000C10  010F               	movlb	15	; () banked
  6550  000C12  8715               	bsf	21,3,b	;volatile
  6551                           
  6552                           ; BSR set to: 15
  6553                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6554  000C14  0100               	movlb	0	; () banked
  6555  000C16  517E               	movf	CANSetFilter@filter& (0+255),w,b
  6556  000C18  0100               	movlb	0	; () banked
  6557  000C1A  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6558  000C1C  0100               	movlb	0	; () banked
  6559  000C1E  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6560  000C20  0100               	movlb	0	; () banked
  6561  000C22  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6562  000C24  0100               	movlb	0	; () banked
  6563  000C26  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6567  000C28  C088  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6571  000C2C  0E00               	movlw	0
  6572  000C2E  0100               	movlb	0	; () banked
  6573  000C30  157E               	andwf	CANSetFilter@filter& (0+255),w,b
  6574  000C32  0100               	movlb	0	; () banked
  6575  000C34  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6576  000C36  0EFF               	movlw	255
  6577  000C38  0100               	movlb	0	; () banked
  6578  000C3A  157F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6579  000C3C  0100               	movlb	0	; () banked
  6580  000C3E  6F89               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6581  000C40  0E00               	movlw	0
  6582  000C42  0100               	movlb	0	; () banked
  6583  000C44  1580               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6584  000C46  0100               	movlb	0	; () banked
  6585  000C48  6F8A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6586  000C4A  0E00               	movlw	0
  6587  000C4C  0100               	movlb	0	; () banked
  6588  000C4E  1581               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6589  000C50  0100               	movlb	0	; () banked
  6590  000C52  6F8B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6594  000C54  0100               	movlb	0	; () banked
  6595  000C56  C088  F083         	movff	CANSetFilter@tamp,??_CANSetFilter
  6596  000C5A  0100               	movlb	0	; () banked
  6597  000C5C  C089  F084         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6598  000C60  0100               	movlb	0	; () banked
  6599  000C62  C08A  F085         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6600  000C66  0100               	movlb	0	; () banked
  6601  000C68  C08B  F086         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6602  000C6C  C084  F083         	movff	??_CANSetFilter+1,??_CANSetFilter
  6603  000C70  C085  F084         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6604  000C74  C086  F085         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6605  000C78  0100               	movlb	0	; () banked
  6606  000C7A  6B86               	clrf	(??_CANSetFilter+3)& (0+255),b
  6607  000C7C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  6608  000C80  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6609  000C84  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6610  000C88  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6614  000C8C  C088  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6618  000C90  0100               	movlb	0	; () banked
  6619  000C92  A180               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6620  000C94  D003               	goto	l538
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6624  000C96  010F               	movlb	15	; () banked
  6625  000C98  8115               	bsf	21,0,b	;volatile
  6626  000C9A  D002               	goto	l539
  6627  000C9C                     l538:
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;inc\CANlib.h: 1050: else
  6631                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6632  000C9C  010F               	movlb	15	; () banked
  6633  000C9E  9115               	bcf	21,0,b	;volatile
  6634  000CA0                     l539:
  6635                           
  6636                           ; BSR set to: 15
  6637                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6638  000CA0  0100               	movlb	0	; () banked
  6639  000CA2  A380               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6640  000CA4  D003               	goto	l540
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6644  000CA6  010F               	movlb	15	; () banked
  6645  000CA8  8315               	bsf	21,1,b	;volatile
  6646  000CAA  D002               	goto	l541
  6647  000CAC                     l540:
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;inc\CANlib.h: 1055: else
  6651                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6652  000CAC  010F               	movlb	15	; () banked
  6653  000CAE  9315               	bcf	21,1,b	;volatile
  6654  000CB0                     l541:
  6655                           
  6656                           ; BSR set to: 15
  6657                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6658  000CB0  0100               	movlb	0	; () banked
  6659  000CB2  A580               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6660  000CB4  D003               	goto	l542
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6664  000CB6  010F               	movlb	15	; () banked
  6665  000CB8  8B15               	bsf	21,5,b	;volatile
  6666  000CBA  D002               	goto	l543
  6667  000CBC                     l542:
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;inc\CANlib.h: 1060: else
  6671                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6672  000CBC  010F               	movlb	15	; () banked
  6673  000CBE  9B15               	bcf	21,5,b	;volatile
  6674  000CC0                     l543:
  6675                           
  6676                           ; BSR set to: 15
  6677                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6678  000CC0  0100               	movlb	0	; () banked
  6679  000CC2  A780               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6680  000CC4  D003               	goto	l544
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6684  000CC6  010F               	movlb	15	; () banked
  6685  000CC8  8D15               	bsf	21,6,b	;volatile
  6686  000CCA  D002               	goto	l545
  6687  000CCC                     l544:
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;inc\CANlib.h: 1065: else
  6691                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6692  000CCC  010F               	movlb	15	; () banked
  6693  000CCE  9D15               	bcf	21,6,b	;volatile
  6694  000CD0                     l545:
  6695                           
  6696                           ; BSR set to: 15
  6697                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6698  000CD0  0100               	movlb	0	; () banked
  6699  000CD2  A980               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6700  000CD4  D003               	goto	l546
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6704  000CD6  010F               	movlb	15	; () banked
  6705  000CD8  8F15               	bsf	21,7,b	;volatile
  6706  000CDA  D002               	goto	l3120
  6707  000CDC                     l546:
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;inc\CANlib.h: 1070: else
  6711                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6712  000CDC  010F               	movlb	15	; () banked
  6713  000CDE  9F15               	bcf	21,7,b	;volatile
  6714  000CE0                     l3120:
  6715                           
  6716                           ; BSR set to: 15
  6717                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6718  000CE0  0100               	movlb	0	; () banked
  6719  000CE2  C07E  F083         	movff	CANSetFilter@filter,??_CANSetFilter
  6720  000CE6  0100               	movlb	0	; () banked
  6721  000CE8  C07F  F084         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6722  000CEC  0100               	movlb	0	; () banked
  6723  000CEE  C080  F085         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6724  000CF2  0100               	movlb	0	; () banked
  6725  000CF4  C081  F086         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6726  000CF8  0E16               	movlw	22
  6727  000CFA  D006               	goto	u3260
  6728  000CFC                     u3265:
  6729  000CFC  0100               	movlb	0	; () banked
  6730  000CFE  90D8               	bcf	status,0,c
  6731  000D00  3386               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6732  000D02  3385               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6733  000D04  3384               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6734  000D06  3383               	rrcf	??_CANSetFilter& (0+255),f,b
  6735  000D08                     u3260:
  6736  000D08  2EE8               	decfsz	wreg,f,c
  6737  000D0A  D7F8               	goto	u3265
  6738  000D0C  C083  F088         	movff	??_CANSetFilter,CANSetFilter@tamp
  6739  000D10  C084  F089         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6740  000D14  C085  F08A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6741  000D18  C086  F08B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6745  000D1C  0100               	movlb	0	; () banked
  6746  000D1E  5188               	movf	CANSetFilter@tamp& (0+255),w,b
  6747  000D20  0100               	movlb	0	; () banked
  6748  000D22  6F88               	movwf	CANSetFilter@tamp& (0+255),b
  6749  000D24  0100               	movlb	0	; () banked
  6750  000D26  6B89               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6751  000D28  0100               	movlb	0	; () banked
  6752  000D2A  6B8A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6753  000D2C  0100               	movlb	0	; () banked
  6754  000D2E  6B8B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6758  000D30  C088  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6759  000D34                     l548:
  6760                           
  6761                           ; BSR set to: 0
  6762  000D34  0012               	return	
  6763  000D36                     __end_of_CANSetFilter:
  6764                           	opt stack 0
  6765                           tblptru	equ	0xFF8
  6766                           tblptrh	equ	0xFF7
  6767                           tblptrl	equ	0xFF6
  6768                           tablat	equ	0xFF5
  6769                           prodh	equ	0xFF4
  6770                           prodl	equ	0xFF3
  6771                           intcon	equ	0xFF2
  6772                           intcon2	equ	0xFF1
  6773                           intcon3	equ	0xFF0
  6774                           postinc0	equ	0xFEE
  6775                           wreg	equ	0xFE8
  6776                           postdec1	equ	0xFE5
  6777                           fsr1l	equ	0xFE1
  6778                           indf2	equ	0xFDF
  6779                           fsr2h	equ	0xFDA
  6780                           fsr2l	equ	0xFD9
  6781                           status	equ	0xFD8
  6782                           
  6783 ;; *************** function _CANOperationMode *****************
  6784 ;; Defined at:
  6785 ;;		line 206 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  mode            1    wreg     enum E16879
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  mode            1   30[BANK0 ] enum E16879
  6790 ;; Return value:  Size  Location     Type
  6791 ;;		None               void
  6792 ;; Registers used:
  6793 ;;		wreg, status,2, status,0
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6799 ;;      Params:         0       0       0       0
  6800 ;;      Locals:         0       1       0       0
  6801 ;;      Temps:          0       0       0       0
  6802 ;;      Totals:         0       1       0       0
  6803 ;;Total ram usage:        1 bytes
  6804 ;; Hardware stack levels used:    1
  6805 ;; Hardware stack levels required when called:    4
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_CANInitialize
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text10
  6814  002B22                     __ptext10:
  6815                           	opt stack 0
  6816  002B22                     _CANOperationMode:
  6817                           	opt stack 24
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;incstack = 0
  6821                           ;CANOperationMode@mode stored from wreg
  6822  002B22  0100               	movlb	0	; () banked
  6823  002B24  6F7E               	movwf	CANOperationMode@mode& (0+255),b
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;inc\CANlib.h: 208: CANCON = mode;
  6827  002B26  C07E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6828  002B2A                     l2716:
  6829                           
  6830                           ; BSR set to: 0
  6831  002B2A  506E               	movf	3950,w,c	;volatile
  6832  002B2C  0BE0               	andlw	224
  6833  002B2E  0100               	movlb	0	; () banked
  6834  002B30  197E               	xorwf	CANOperationMode@mode& (0+255),w,b
  6835  002B32  B4D8               	btfsc	status,2,c
  6836                           
  6837                           ; BSR set to: 0
  6838                           
  6839                           ; BSR set to: 0
  6840  002B34  0012               	return	
  6841  002B36  D7F9               	goto	l2716
  6842  002B38                     __end_of_CANOperationMode:
  6843                           	opt stack 0
  6844                           tblptru	equ	0xFF8
  6845                           tblptrh	equ	0xFF7
  6846                           tblptrl	equ	0xFF6
  6847                           tablat	equ	0xFF5
  6848                           prodh	equ	0xFF4
  6849                           prodl	equ	0xFF3
  6850                           intcon	equ	0xFF2
  6851                           intcon2	equ	0xFF1
  6852                           intcon3	equ	0xFF0
  6853                           postinc0	equ	0xFEE
  6854                           wreg	equ	0xFE8
  6855                           postdec1	equ	0xFE5
  6856                           fsr1l	equ	0xFE1
  6857                           indf2	equ	0xFDF
  6858                           fsr2h	equ	0xFDA
  6859                           fsr2l	equ	0xFD9
  6860                           status	equ	0xFD8
  6861                           
  6862 ;; *************** function ___lwdiv *****************
  6863 ;; Defined at:
  6864 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  dividend        2   30[BANK0 ] unsigned int 
  6867 ;;  divisor         2   32[BANK0 ] unsigned int 
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  quotient        2   34[BANK0 ] unsigned int 
  6870 ;;  counter         1   36[BANK0 ] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  2   30[BANK0 ] unsigned int 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6880 ;;      Params:         0       4       0       0
  6881 ;;      Locals:         0       3       0       0
  6882 ;;      Temps:          0       0       0       0
  6883 ;;      Totals:         0       7       0       0
  6884 ;;Total ram usage:        7 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    4
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_main
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text11
  6895  002914                     __ptext11:
  6896                           	opt stack 0
  6897  002914                     ___lwdiv:
  6898                           	opt stack 26
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;incstack = 0
  6902  002914  0E00               	movlw	0
  6903  002916  0100               	movlb	0	; () banked
  6904  002918  6F83               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6905  00291A  0E00               	movlw	0
  6906  00291C  0100               	movlb	0	; () banked
  6907  00291E  6F82               	movwf	___lwdiv@quotient& (0+255),b
  6908                           
  6909                           ; BSR set to: 0
  6910  002920  0100               	movlb	0	; () banked
  6911  002922  5181               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6912  002924  1180               	iorwf	___lwdiv@divisor& (0+255),w,b
  6913  002926  B4D8               	btfsc	status,2,c
  6914  002928  D02C               	goto	l1265
  6915                           
  6916                           ; BSR set to: 0
  6917  00292A  0E01               	movlw	1
  6918  00292C  0100               	movlb	0	; () banked
  6919  00292E  6F84               	movwf	___lwdiv@counter& (0+255),b
  6920  002930  D006               	goto	l3786
  6921  002932                     l3784:
  6922                           
  6923                           ; BSR set to: 0
  6924  002932  0100               	movlb	0	; () banked
  6925  002934  90D8               	bcf	status,0,c
  6926  002936  3780               	rlcf	___lwdiv@divisor& (0+255),f,b
  6927  002938  3781               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6928  00293A  0100               	movlb	0	; () banked
  6929  00293C  2B84               	incf	___lwdiv@counter& (0+255),f,b
  6930  00293E                     l3786:
  6931                           
  6932                           ; BSR set to: 0
  6933  00293E  0100               	movlb	0	; () banked
  6934  002940  AF81               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6935  002942  D7F7               	goto	l3784
  6936  002944                     l3788:
  6937                           
  6938                           ; BSR set to: 0
  6939  002944  0100               	movlb	0	; () banked
  6940  002946  90D8               	bcf	status,0,c
  6941  002948  3782               	rlcf	___lwdiv@quotient& (0+255),f,b
  6942  00294A  3783               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6943                           
  6944                           ; BSR set to: 0
  6945  00294C  0100               	movlb	0	; () banked
  6946  00294E  5180               	movf	___lwdiv@divisor& (0+255),w,b
  6947  002950  0100               	movlb	0	; () banked
  6948  002952  5D7E               	subwf	___lwdiv@dividend& (0+255),w,b
  6949  002954  0100               	movlb	0	; () banked
  6950  002956  5181               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6951  002958  0100               	movlb	0	; () banked
  6952  00295A  597F               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6953  00295C  A0D8               	btfss	status,0,c
  6954  00295E  D00A               	goto	l3796
  6955                           
  6956                           ; BSR set to: 0
  6957  002960  0100               	movlb	0	; () banked
  6958  002962  5180               	movf	___lwdiv@divisor& (0+255),w,b
  6959  002964  0100               	movlb	0	; () banked
  6960  002966  5F7E               	subwf	___lwdiv@dividend& (0+255),f,b
  6961  002968  0100               	movlb	0	; () banked
  6962  00296A  5181               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6963  00296C  0100               	movlb	0	; () banked
  6964  00296E  5B7F               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6965                           
  6966                           ; BSR set to: 0
  6967  002970  0100               	movlb	0	; () banked
  6968  002972  8182               	bsf	___lwdiv@quotient& (0+255),0,b
  6969  002974                     l3796:
  6970                           
  6971                           ; BSR set to: 0
  6972  002974  0100               	movlb	0	; () banked
  6973  002976  90D8               	bcf	status,0,c
  6974  002978  3381               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6975  00297A  3380               	rrcf	___lwdiv@divisor& (0+255),f,b
  6976                           
  6977                           ; BSR set to: 0
  6978  00297C  0100               	movlb	0	; () banked
  6979  00297E  2F84               	decfsz	___lwdiv@counter& (0+255),f,b
  6980  002980  D7E1               	goto	l3788
  6981  002982                     l1265:
  6982                           
  6983                           ; BSR set to: 0
  6984  002982  C082  F07E         	movff	___lwdiv@quotient,?___lwdiv
  6985  002986  C083  F07F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6986                           
  6987                           ; BSR set to: 0
  6988  00298A  0012               	return	
  6989  00298C                     __end_of___lwdiv:
  6990                           	opt stack 0
  6991                           tblptru	equ	0xFF8
  6992                           tblptrh	equ	0xFF7
  6993                           tblptrl	equ	0xFF6
  6994                           tablat	equ	0xFF5
  6995                           prodh	equ	0xFF4
  6996                           prodl	equ	0xFF3
  6997                           intcon	equ	0xFF2
  6998                           intcon2	equ	0xFF1
  6999                           intcon3	equ	0xFF0
  7000                           postinc0	equ	0xFEE
  7001                           wreg	equ	0xFE8
  7002                           postdec1	equ	0xFE5
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009 ;; *************** function _CANisTXwarningON *****************
  7010 ;; Defined at:
  7011 ;;		line 1119 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;		None
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      unsigned char 
  7018 ;; Registers used:
  7019 ;;		wreg
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7025 ;;      Params:         0       0       0       0
  7026 ;;      Locals:         0       0       0       0
  7027 ;;      Temps:          0       0       0       0
  7028 ;;      Totals:         0       0       0       0
  7029 ;;Total ram usage:        0 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    4
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_main
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text12
  7040  002B60                     __ptext12:
  7041                           	opt stack 0
  7042  002B60                     _CANisTXwarningON:
  7043                           	opt stack 26
  7044                           
  7045                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;incstack = 0
  7049  002B60  A474               	btfss	3956,2,c	;volatile
  7050  002B62  D002               	goto	u4040
  7051  002B64  0E01               	movlw	1
  7052  002B66  D001               	goto	l563
  7053  002B68                     u4040:
  7054  002B68  0E00               	movlw	0
  7055  002B6A                     l563:
  7056  002B6A  0012               	return	
  7057  002B6C                     __end_of_CANisTXwarningON:
  7058                           	opt stack 0
  7059                           tblptru	equ	0xFF8
  7060                           tblptrh	equ	0xFF7
  7061                           tblptrl	equ	0xFF6
  7062                           tablat	equ	0xFF5
  7063                           prodh	equ	0xFF4
  7064                           prodl	equ	0xFF3
  7065                           intcon	equ	0xFF2
  7066                           intcon2	equ	0xFF1
  7067                           intcon3	equ	0xFF0
  7068                           postinc0	equ	0xFEE
  7069                           wreg	equ	0xFE8
  7070                           postdec1	equ	0xFE5
  7071                           fsr1l	equ	0xFE1
  7072                           indf2	equ	0xFDF
  7073                           fsr2h	equ	0xFDA
  7074                           fsr2l	equ	0xFD9
  7075                           status	equ	0xFD8
  7076                           
  7077 ;; *************** function _CANisRXwarningON *****************
  7078 ;; Defined at:
  7079 ;;		line 1127 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;		None
  7082 ;; Auto vars:     Size  Location     Type
  7083 ;;		None
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1    wreg      unsigned char 
  7086 ;; Registers used:
  7087 ;;		wreg
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7093 ;;      Params:         0       0       0       0
  7094 ;;      Locals:         0       0       0       0
  7095 ;;      Temps:          0       0       0       0
  7096 ;;      Totals:         0       0       0       0
  7097 ;;Total ram usage:        0 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    4
  7100 ;; This function calls:
  7101 ;;		Nothing
  7102 ;; This function is called by:
  7103 ;;		_main
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           	psect	text13
  7108  002B6C                     __ptext13:
  7109                           	opt stack 0
  7110  002B6C                     _CANisRXwarningON:
  7111                           	opt stack 26
  7112                           
  7113                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7114                           
  7115                           ;incstack = 0
  7116  002B6C  A274               	btfss	3956,1,c	;volatile
  7117  002B6E  D002               	goto	u4050
  7118  002B70  0E01               	movlw	1
  7119  002B72  D001               	goto	l566
  7120  002B74                     u4050:
  7121  002B74  0E00               	movlw	0
  7122  002B76                     l566:
  7123  002B76  0012               	return	
  7124  002B78                     __end_of_CANisRXwarningON:
  7125                           	opt stack 0
  7126                           tblptru	equ	0xFF8
  7127                           tblptrh	equ	0xFF7
  7128                           tblptrl	equ	0xFF6
  7129                           tablat	equ	0xFF5
  7130                           prodh	equ	0xFF4
  7131                           prodl	equ	0xFF3
  7132                           intcon	equ	0xFF2
  7133                           intcon2	equ	0xFF1
  7134                           intcon3	equ	0xFF0
  7135                           postinc0	equ	0xFEE
  7136                           wreg	equ	0xFE8
  7137                           postdec1	equ	0xFE5
  7138                           fsr1l	equ	0xFE1
  7139                           indf2	equ	0xFDF
  7140                           fsr2h	equ	0xFDA
  7141                           fsr2l	equ	0xFD9
  7142                           status	equ	0xFD8
  7143                           
  7144 ;; *************** function _ADC_Read *****************
  7145 ;; Defined at:
  7146 ;;		line 331 in file "ABS_Code.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;		None
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;		None
  7151 ;; Return value:  Size  Location     Type
  7152 ;;		None               void
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0, prodl, cstack
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7160 ;;      Params:         0       0       0       0
  7161 ;;      Locals:         0       0       0       0
  7162 ;;      Temps:          0       0       0       0
  7163 ;;      Totals:         0       0       0       0
  7164 ;;Total ram usage:        0 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    5
  7167 ;; This function calls:
  7168 ;;		___awdiv
  7169 ;; This function is called by:
  7170 ;;		_main
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text14
  7175  002A24                     __ptext14:
  7176                           	opt stack 0
  7177  002A24                     _ADC_Read:
  7178                           	opt stack 25
  7179                           
  7180                           ;ABS_Code.c: 332: ADCON0bits.GO = 1;
  7181                           
  7182                           ;incstack = 0
  7183  002A24  82C2               	bsf	4034,1,c	;volatile
  7184  002A26                     l737:
  7185  002A26  B2C2               	btfsc	4034,1,c	;volatile
  7186  002A28  D7FE               	goto	l737
  7187                           
  7188                           ;ABS_Code.c: 334: read = ADRESH;
  7189  002A2A  CFC4 F0B9          	movff	4036,_read	;volatile
  7190                           
  7191                           ;ABS_Code.c: 335: correction_factor = read - 127;
  7192  002A2E  0E81               	movlw	129
  7193  002A30  0100               	movlb	0	; () banked
  7194  002A32  25B9               	addwf	_read& (0+255),w,b
  7195  002A34  0100               	movlb	0	; () banked
  7196  002A36  6FAF               	movwf	_correction_factor& (0+255),b
  7197  002A38  0100               	movlb	0	; () banked
  7198  002A3A  6BB0               	clrf	(_correction_factor+1)& (0+255),b
  7199  002A3C  0EFF               	movlw	255
  7200  002A3E  23B0               	addwfc	(_correction_factor+1)& (0+255),f,b
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;ABS_Code.c: 336: home_position = correction_factor / 4 + 127;
  7204  002A40  C0AF  F07E         	movff	_correction_factor,___awdiv@dividend
  7205  002A44  C0B0  F07F         	movff	_correction_factor+1,___awdiv@dividend+1
  7206  002A48  0E00               	movlw	0
  7207  002A4A  0100               	movlb	0	; () banked
  7208  002A4C  6F81               	movwf	(___awdiv@divisor+1)& (0+255),b
  7209  002A4E  0E04               	movlw	4
  7210  002A50  0100               	movlb	0	; () banked
  7211  002A52  6F80               	movwf	___awdiv@divisor& (0+255),b
  7212  002A54  EC45  F013         	call	___awdiv	;wreg free
  7213  002A58  0100               	movlb	0	; () banked
  7214  002A5A  517E               	movf	?___awdiv& (0+255),w,b
  7215  002A5C  0F7F               	addlw	127
  7216  002A5E  0100               	movlb	0	; () banked
  7217  002A60  6FB8               	movwf	_home_position& (0+255),b
  7218                           
  7219                           ; BSR set to: 0
  7220  002A62  0012               	return	
  7221  002A64                     __end_of_ADC_Read:
  7222                           	opt stack 0
  7223                           tblptru	equ	0xFF8
  7224                           tblptrh	equ	0xFF7
  7225                           tblptrl	equ	0xFF6
  7226                           tablat	equ	0xFF5
  7227                           prodh	equ	0xFF4
  7228                           prodl	equ	0xFF3
  7229                           intcon	equ	0xFF2
  7230                           intcon2	equ	0xFF1
  7231                           intcon3	equ	0xFF0
  7232                           postinc0	equ	0xFEE
  7233                           wreg	equ	0xFE8
  7234                           postdec1	equ	0xFE5
  7235                           fsr1l	equ	0xFE1
  7236                           indf2	equ	0xFDF
  7237                           fsr2h	equ	0xFDA
  7238                           fsr2l	equ	0xFD9
  7239                           status	equ	0xFD8
  7240                           
  7241 ;; *************** function ___awdiv *****************
  7242 ;; Defined at:
  7243 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awdiv.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  dividend        2   30[BANK0 ] int 
  7246 ;;  divisor         2   32[BANK0 ] int 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  quotient        2   36[BANK0 ] int 
  7249 ;;  sign            1   35[BANK0 ] unsigned char 
  7250 ;;  counter         1   34[BANK0 ] unsigned char 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  2   30[BANK0 ] int 
  7253 ;; Registers used:
  7254 ;;		wreg, status,2, status,0, prodl
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7260 ;;      Params:         0       4       0       0
  7261 ;;      Locals:         0       4       0       0
  7262 ;;      Temps:          0       0       0       0
  7263 ;;      Totals:         0       8       0       0
  7264 ;;Total ram usage:        8 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    4
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		_main
  7271 ;;		_ADC_Read
  7272 ;; This function uses a non-reentrant model
  7273 ;;
  7274                           
  7275                           	psect	text15
  7276  00268A                     __ptext15:
  7277                           	opt stack 0
  7278  00268A                     ___awdiv:
  7279                           	opt stack 26
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;incstack = 0
  7283  00268A  0E00               	movlw	0
  7284  00268C  0100               	movlb	0	; () banked
  7285  00268E  6F83               	movwf	___awdiv@sign& (0+255),b
  7286                           
  7287                           ; BSR set to: 0
  7288  002690  0100               	movlb	0	; () banked
  7289  002692  5181               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7290  002694  0A80               	xorlw	128
  7291  002696  6EF3               	movwf	prodl,c
  7292  002698  0E80               	movlw	128
  7293  00269A  5CF3               	subwf	prodl,w,c
  7294  00269C  0E00               	movlw	0
  7295  00269E  B4D8               	btfsc	status,2,c
  7296  0026A0  5D80               	subwf	___awdiv@divisor& (0+255),w,b
  7297  0026A2  B0D8               	btfsc	status,0,c
  7298  0026A4  D009               	goto	l3440
  7299                           
  7300                           ; BSR set to: 0
  7301  0026A6  0100               	movlb	0	; () banked
  7302  0026A8  6D80               	negf	___awdiv@divisor& (0+255),b
  7303  0026AA  0100               	movlb	0	; () banked
  7304  0026AC  1F81               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7305  0026AE  B0D8               	btfsc	status,0,c
  7306  0026B0  2B81               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7307                           
  7308                           ; BSR set to: 0
  7309  0026B2  0E01               	movlw	1
  7310  0026B4  0100               	movlb	0	; () banked
  7311  0026B6  6F83               	movwf	___awdiv@sign& (0+255),b
  7312  0026B8                     l3440:
  7313                           
  7314                           ; BSR set to: 0
  7315  0026B8  0100               	movlb	0	; () banked
  7316  0026BA  517F               	movf	(___awdiv@dividend+1)& (0+255),w,b
  7317  0026BC  0A80               	xorlw	128
  7318  0026BE  6EF3               	movwf	prodl,c
  7319  0026C0  0E80               	movlw	128
  7320  0026C2  5CF3               	subwf	prodl,w,c
  7321  0026C4  0E00               	movlw	0
  7322  0026C6  B4D8               	btfsc	status,2,c
  7323  0026C8  5D7E               	subwf	___awdiv@dividend& (0+255),w,b
  7324  0026CA  B0D8               	btfsc	status,0,c
  7325  0026CC  D009               	goto	l3446
  7326                           
  7327                           ; BSR set to: 0
  7328  0026CE  0100               	movlb	0	; () banked
  7329  0026D0  6D7E               	negf	___awdiv@dividend& (0+255),b
  7330  0026D2  0100               	movlb	0	; () banked
  7331  0026D4  1F7F               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7332  0026D6  B0D8               	btfsc	status,0,c
  7333  0026D8  2B7F               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7334                           
  7335                           ; BSR set to: 0
  7336  0026DA  0E01               	movlw	1
  7337  0026DC  0100               	movlb	0	; () banked
  7338  0026DE  1B83               	xorwf	___awdiv@sign& (0+255),f,b
  7339  0026E0                     l3446:
  7340                           
  7341                           ; BSR set to: 0
  7342  0026E0  0E00               	movlw	0
  7343  0026E2  0100               	movlb	0	; () banked
  7344  0026E4  6F85               	movwf	(___awdiv@quotient+1)& (0+255),b
  7345  0026E6  0E00               	movlw	0
  7346  0026E8  0100               	movlb	0	; () banked
  7347  0026EA  6F84               	movwf	___awdiv@quotient& (0+255),b
  7348                           
  7349                           ; BSR set to: 0
  7350  0026EC  0100               	movlb	0	; () banked
  7351  0026EE  5181               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7352  0026F0  1180               	iorwf	___awdiv@divisor& (0+255),w,b
  7353  0026F2  B4D8               	btfsc	status,2,c
  7354  0026F4  D02C               	goto	l3468
  7355                           
  7356                           ; BSR set to: 0
  7357  0026F6  0E01               	movlw	1
  7358  0026F8  0100               	movlb	0	; () banked
  7359  0026FA  6F82               	movwf	___awdiv@counter& (0+255),b
  7360  0026FC  D006               	goto	l3454
  7361  0026FE                     l3452:
  7362                           
  7363                           ; BSR set to: 0
  7364  0026FE  0100               	movlb	0	; () banked
  7365  002700  90D8               	bcf	status,0,c
  7366  002702  3780               	rlcf	___awdiv@divisor& (0+255),f,b
  7367  002704  3781               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7368  002706  0100               	movlb	0	; () banked
  7369  002708  2B82               	incf	___awdiv@counter& (0+255),f,b
  7370  00270A                     l3454:
  7371                           
  7372                           ; BSR set to: 0
  7373  00270A  0100               	movlb	0	; () banked
  7374  00270C  AF81               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7375  00270E  D7F7               	goto	l3452
  7376  002710                     l3456:
  7377                           
  7378                           ; BSR set to: 0
  7379  002710  0100               	movlb	0	; () banked
  7380  002712  90D8               	bcf	status,0,c
  7381  002714  3784               	rlcf	___awdiv@quotient& (0+255),f,b
  7382  002716  3785               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7383                           
  7384                           ; BSR set to: 0
  7385  002718  0100               	movlb	0	; () banked
  7386  00271A  5180               	movf	___awdiv@divisor& (0+255),w,b
  7387  00271C  0100               	movlb	0	; () banked
  7388  00271E  5D7E               	subwf	___awdiv@dividend& (0+255),w,b
  7389  002720  0100               	movlb	0	; () banked
  7390  002722  5181               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7391  002724  0100               	movlb	0	; () banked
  7392  002726  597F               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7393  002728  A0D8               	btfss	status,0,c
  7394  00272A  D00A               	goto	l3464
  7395                           
  7396                           ; BSR set to: 0
  7397  00272C  0100               	movlb	0	; () banked
  7398  00272E  5180               	movf	___awdiv@divisor& (0+255),w,b
  7399  002730  0100               	movlb	0	; () banked
  7400  002732  5F7E               	subwf	___awdiv@dividend& (0+255),f,b
  7401  002734  0100               	movlb	0	; () banked
  7402  002736  5181               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7403  002738  0100               	movlb	0	; () banked
  7404  00273A  5B7F               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7405                           
  7406                           ; BSR set to: 0
  7407  00273C  0100               	movlb	0	; () banked
  7408  00273E  8184               	bsf	___awdiv@quotient& (0+255),0,b
  7409  002740                     l3464:
  7410                           
  7411                           ; BSR set to: 0
  7412  002740  0100               	movlb	0	; () banked
  7413  002742  90D8               	bcf	status,0,c
  7414  002744  3381               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7415  002746  3380               	rrcf	___awdiv@divisor& (0+255),f,b
  7416                           
  7417                           ; BSR set to: 0
  7418  002748  0100               	movlb	0	; () banked
  7419  00274A  2F82               	decfsz	___awdiv@counter& (0+255),f,b
  7420  00274C  D7E1               	goto	l3456
  7421  00274E                     l3468:
  7422                           
  7423                           ; BSR set to: 0
  7424  00274E  0100               	movlb	0	; () banked
  7425  002750  5183               	movf	___awdiv@sign& (0+255),w,b
  7426  002752  B4D8               	btfsc	status,2,c
  7427  002754  D006               	goto	l3472
  7428                           
  7429                           ; BSR set to: 0
  7430  002756  0100               	movlb	0	; () banked
  7431  002758  6D84               	negf	___awdiv@quotient& (0+255),b
  7432  00275A  0100               	movlb	0	; () banked
  7433  00275C  1F85               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7434  00275E  B0D8               	btfsc	status,0,c
  7435  002760  2B85               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7436  002762                     l3472:
  7437                           
  7438                           ; BSR set to: 0
  7439  002762  C084  F07E         	movff	___awdiv@quotient,?___awdiv
  7440  002766  C085  F07F         	movff	___awdiv@quotient+1,?___awdiv+1
  7441                           
  7442                           ; BSR set to: 0
  7443                           
  7444                           ; BSR set to: 0
  7445  00276A  0012               	return	
  7446  00276C                     __end_of___awdiv:
  7447                           	opt stack 0
  7448                           tblptru	equ	0xFF8
  7449                           tblptrh	equ	0xFF7
  7450                           tblptrl	equ	0xFF6
  7451                           tablat	equ	0xFF5
  7452                           prodh	equ	0xFF4
  7453                           prodl	equ	0xFF3
  7454                           intcon	equ	0xFF2
  7455                           intcon2	equ	0xFF1
  7456                           intcon3	equ	0xFF0
  7457                           postinc0	equ	0xFEE
  7458                           wreg	equ	0xFE8
  7459                           postdec1	equ	0xFE5
  7460                           fsr1l	equ	0xFE1
  7461                           indf2	equ	0xFDF
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function _ISR_Bassa *****************
  7467 ;; Defined at:
  7468 ;;		line 191 in file "ABS_Code.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;		None
  7473 ;; Return value:  Size  Location     Type
  7474 ;;		None               void
  7475 ;; Registers used:
  7476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7482 ;;      Params:         0       0       0       0
  7483 ;;      Locals:         0       0       0       0
  7484 ;;      Temps:         17       0       0       0
  7485 ;;      Totals:        17       0       0       0
  7486 ;;Total ram usage:       17 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    3
  7489 ;; This function calls:
  7490 ;;		_CANisRxReady
  7491 ;;		_CANreceiveMessage
  7492 ;; This function is called by:
  7493 ;;		Interrupt level 1
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	intcodelo
  7498  000018                     __pintcodelo:
  7499                           	opt stack 0
  7500  000018                     _ISR_Bassa:
  7501                           	opt stack 24
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;incstack = 0
  7505  000018  CFD8 F00D          	movff	status,??_ISR_Bassa
  7506  00001C  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7507  000020  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7508  000024  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7509  000028  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7510  00002C  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7511  000030  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7512  000034  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7513  000038  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7514  00003C  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7515  000040  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7516  000044  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7517  000048  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7518  00004C  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7519  000050  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7520  000054  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7521  000058  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7522                           
  7523                           ;ABS_Code.c: 193: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7524  00005C  B0A4               	btfsc	4004,0,c	;volatile
  7525  00005E  D002               	goto	i1l3952
  7526  000060  A2A4               	btfss	4004,1,c	;volatile
  7527  000062  D025               	goto	i1l684
  7528  000064                     i1l3952:
  7529                           
  7530                           ;ABS_Code.c: 194: if (CANisRxReady()) {
  7531  000064  EC9C  F015         	call	_CANisRxReady	;wreg free
  7532  000068  0900               	iorlw	0
  7533  00006A  B4D8               	btfsc	status,2,c
  7534  00006C  D01E               	goto	i1l687
  7535                           
  7536                           ;ABS_Code.c: 195: CANreceiveMessage(&msg);
  7537  00006E  0E00               	movlw	high _msg
  7538  000070  6E02               	movwf	CANreceiveMessage@msg+1,c
  7539  000072  0E31               	movlw	low _msg
  7540  000074  6E01               	movwf	CANreceiveMessage@msg,c
  7541  000076  ECD6  F00A         	call	_CANreceiveMessage	;wreg free
  7542                           
  7543                           ;ABS_Code.c: 196: if (msg.RTR == 1) {
  7544  00007A  043F               	decf	_msg+14,w,c
  7545  00007C  A4D8               	btfss	status,2,c
  7546  00007E  D00A               	goto	i1l3960
  7547                           
  7548                           ;ABS_Code.c: 197: remote_frame_id = msg.identifier;
  7549  000080  C031  F0A1         	movff	_msg,_remote_frame_id
  7550  000084  C032  F0A2         	movff	_msg+1,_remote_frame_id+1
  7551  000088  C033  F0A3         	movff	_msg+2,_remote_frame_id+2
  7552  00008C  C034  F0A4         	movff	_msg+3,_remote_frame_id+3
  7553                           
  7554                           ;ABS_Code.c: 198: remote_frame = 1;
  7555  000090  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  7556  000092  8C41               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7557  000094                     i1l3960:
  7558                           
  7559                           ;ABS_Code.c: 199: }
  7560                           ;ABS_Code.c: 200: if (msg.identifier == 0b00000000000000000000000000100) {
  7561  000094  5031               	movf	_msg,w,c
  7562  000096  0A04               	xorlw	4
  7563  000098  1032               	iorwf	_msg+1,w,c
  7564  00009A  1033               	iorwf	_msg+2,w,c
  7565  00009C  1034               	iorwf	_msg+3,w,c
  7566  00009E  A4D8               	btfss	status,2,c
  7567  0000A0  D004               	goto	i1l687
  7568                           
  7569                           ;ABS_Code.c: 201: brake_signal_CAN = msg.data[0];
  7570  0000A2  C035  F0B6         	movff	_msg+4,_brake_signal_CAN
  7571                           
  7572                           ;ABS_Code.c: 202: Analogic_Mode = msg.data[1];
  7573  0000A6  C036  F0B5         	movff	_msg+5,_Analogic_Mode
  7574  0000AA                     i1l687:
  7575                           
  7576                           ;ABS_Code.c: 203: }
  7577                           ;ABS_Code.c: 204: }
  7578                           ;ABS_Code.c: 205: PIR3bits.RXB0IF = 0;
  7579  0000AA  90A4               	bcf	4004,0,c	;volatile
  7580                           
  7581                           ;ABS_Code.c: 206: PIR3bits.RXB1IF = 0;
  7582  0000AC  92A4               	bcf	4004,1,c	;volatile
  7583  0000AE                     i1l684:
  7584                           
  7585                           ;ABS_Code.c: 207: }
  7586                           ;ABS_Code.c: 210: if(PIR1bits.TMR1IF == 1) {
  7587  0000AE  A09E               	btfss	3998,0,c	;volatile
  7588  0000B0  D003               	goto	i1l690
  7589                           
  7590                           ;ABS_Code.c: 211: TMR1_overflow = 1;
  7591  0000B2  0100               	movlb	(_TMR1_overflow/(0+8)) shr (0+8)
  7592  0000B4  8441               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
  7593                           
  7594                           ;ABS_Code.c: 212: PIR1bits.TMR1IF = 0;
  7595  0000B6  909E               	bcf	3998,0,c	;volatile
  7596  0000B8                     i1l690:
  7597                           
  7598                           ;ABS_Code.c: 213: }
  7599                           ;ABS_Code.c: 216: if(PIR2bits.TMR3IF == 1){
  7600  0000B8  A2A1               	btfss	4001,1,c	;volatile
  7601  0000BA  D003               	goto	i1l692
  7602                           
  7603                           ;ABS_Code.c: 217: TMR3_overflow = 1;
  7604  0000BC  0100               	movlb	(_TMR3_overflow/(0+8)) shr (0+8)
  7605  0000BE  8641               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  7606                           
  7607                           ;ABS_Code.c: 218: PIR2bits.TMR3IF = 0;
  7608  0000C0  92A1               	bcf	4001,1,c	;volatile
  7609  0000C2                     i1l692:
  7610  0000C2  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7611  0000C6  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7612  0000CA  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7613  0000CE  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7614  0000D2  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7615  0000D6  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7616  0000DA  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7617  0000DE  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7618  0000E2  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7619  0000E6  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7620  0000EA  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7621  0000EE  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7622  0000F2  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7623  0000F6  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7624  0000FA  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7625  0000FE  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7626  000102  C00D  FFD8         	movff	??_ISR_Bassa,status
  7627  000106  0010               	retfie	
  7628  000108                     __end_of_ISR_Bassa:
  7629                           	opt stack 0
  7630                           pclatu	equ	0xFFB
  7631                           pclath	equ	0xFFA
  7632                           tblptru	equ	0xFF8
  7633                           tblptrh	equ	0xFF7
  7634                           tblptrl	equ	0xFF6
  7635                           tablat	equ	0xFF5
  7636                           prodh	equ	0xFF4
  7637                           prodl	equ	0xFF3
  7638                           intcon	equ	0xFF2
  7639                           intcon2	equ	0xFF1
  7640                           intcon3	equ	0xFF0
  7641                           postinc0	equ	0xFEE
  7642                           fsr0h	equ	0xFEA
  7643                           fsr0l	equ	0xFE9
  7644                           wreg	equ	0xFE8
  7645                           postdec1	equ	0xFE5
  7646                           fsr1h	equ	0xFE2
  7647                           fsr1l	equ	0xFE1
  7648                           bsr	equ	0xFE0
  7649                           indf2	equ	0xFDF
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function _CANreceiveMessage *****************
  7655 ;; Defined at:
  7656 ;;		line 528 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  msg             2    0[COMRAM] PTR struct .
  7659 ;;		 -> msg(15), 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  tamp            1   11[COMRAM] unsigned char 
  7662 ;;  error           1   10[COMRAM] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7672 ;;      Params:         2       0       0       0
  7673 ;;      Locals:         2       0       0       0
  7674 ;;      Temps:          8       0       0       0
  7675 ;;      Totals:        12       0       0       0
  7676 ;;Total ram usage:       12 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    2
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_ISR_Bassa
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text17
  7687  0015AC                     __ptext17:
  7688                           	opt stack 0
  7689  0015AC                     _CANreceiveMessage:
  7690                           	opt stack 24
  7691                           
  7692                           ;inc\CANlib.h: 530: BYTE tamp;
  7693                           ;inc\CANlib.h: 531: BYTE error = 0;
  7694                           
  7695                           ;incstack = 0
  7696  0015AC  0E00               	movlw	0
  7697  0015AE  6E0B               	movwf	CANreceiveMessage@error,c
  7698                           
  7699                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7700  0015B0  BE74               	btfsc	3956,7,c	;volatile
  7701                           
  7702                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7703  0015B2  800B               	bsf	CANreceiveMessage@error,0,c
  7704                           
  7705                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7706  0015B4  BC74               	btfsc	3956,6,c	;volatile
  7707                           
  7708                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7709  0015B6  820B               	bsf	CANreceiveMessage@error,1,c
  7710                           
  7711                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7712  0015B8  010F               	movlb	15	; () banked
  7713  0015BA  AF50               	btfss	80,7,b	;volatile
  7714  0015BC  D13B               	goto	i1l430
  7715                           
  7716                           ; BSR set to: 15
  7717                           ;inc\CANlib.h: 541: {
  7718                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7719  0015BE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7720  0015C2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7721  0015C6  6ADE               	clrf	postinc2,c
  7722  0015C8  6ADE               	clrf	postinc2,c
  7723  0015CA  6ADE               	clrf	postinc2,c
  7724  0015CC  6ADD               	clrf	postdec2,c
  7725                           
  7726                           ; BSR set to: 15
  7727                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7728  0015CE  EE20 F004          	lfsr	2,4
  7729  0015D2  5001               	movf	CANreceiveMessage@msg,w,c
  7730  0015D4  26D9               	addwf	fsr2l,f,c
  7731  0015D6  5002               	movf	CANreceiveMessage@msg+1,w,c
  7732  0015D8  22DA               	addwfc	fsr2h,f,c
  7733  0015DA  010F               	movlb	15	; () banked
  7734  0015DC  CF56 FFDF          	movff	3926,indf2	;volatile
  7735                           
  7736                           ; BSR set to: 15
  7737                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7738  0015E0  EE20 F005          	lfsr	2,5
  7739  0015E4  5001               	movf	CANreceiveMessage@msg,w,c
  7740  0015E6  26D9               	addwf	fsr2l,f,c
  7741  0015E8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7742  0015EA  22DA               	addwfc	fsr2h,f,c
  7743  0015EC  010F               	movlb	15	; () banked
  7744  0015EE  CF57 FFDF          	movff	3927,indf2	;volatile
  7745                           
  7746                           ; BSR set to: 15
  7747                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7748  0015F2  EE20 F006          	lfsr	2,6
  7749  0015F6  5001               	movf	CANreceiveMessage@msg,w,c
  7750  0015F8  26D9               	addwf	fsr2l,f,c
  7751  0015FA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7752  0015FC  22DA               	addwfc	fsr2h,f,c
  7753  0015FE  010F               	movlb	15	; () banked
  7754  001600  CF58 FFDF          	movff	3928,indf2	;volatile
  7755                           
  7756                           ; BSR set to: 15
  7757                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7758  001604  EE20 F007          	lfsr	2,7
  7759  001608  5001               	movf	CANreceiveMessage@msg,w,c
  7760  00160A  26D9               	addwf	fsr2l,f,c
  7761  00160C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7762  00160E  22DA               	addwfc	fsr2h,f,c
  7763  001610  010F               	movlb	15	; () banked
  7764  001612  CF59 FFDF          	movff	3929,indf2	;volatile
  7765                           
  7766                           ; BSR set to: 15
  7767                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7768  001616  EE20 F008          	lfsr	2,8
  7769  00161A  5001               	movf	CANreceiveMessage@msg,w,c
  7770  00161C  26D9               	addwf	fsr2l,f,c
  7771  00161E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7772  001620  22DA               	addwfc	fsr2h,f,c
  7773  001622  010F               	movlb	15	; () banked
  7774  001624  CF5A FFDF          	movff	3930,indf2	;volatile
  7775                           
  7776                           ; BSR set to: 15
  7777                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7778  001628  EE20 F009          	lfsr	2,9
  7779  00162C  5001               	movf	CANreceiveMessage@msg,w,c
  7780  00162E  26D9               	addwf	fsr2l,f,c
  7781  001630  5002               	movf	CANreceiveMessage@msg+1,w,c
  7782  001632  22DA               	addwfc	fsr2h,f,c
  7783  001634  010F               	movlb	15	; () banked
  7784  001636  CF5B FFDF          	movff	3931,indf2	;volatile
  7785                           
  7786                           ; BSR set to: 15
  7787                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7788  00163A  EE20 F00A          	lfsr	2,10
  7789  00163E  5001               	movf	CANreceiveMessage@msg,w,c
  7790  001640  26D9               	addwf	fsr2l,f,c
  7791  001642  5002               	movf	CANreceiveMessage@msg+1,w,c
  7792  001644  22DA               	addwfc	fsr2h,f,c
  7793  001646  010F               	movlb	15	; () banked
  7794  001648  CF5C FFDF          	movff	3932,indf2	;volatile
  7795                           
  7796                           ; BSR set to: 15
  7797                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7798  00164C  EE20 F00B          	lfsr	2,11
  7799  001650  5001               	movf	CANreceiveMessage@msg,w,c
  7800  001652  26D9               	addwf	fsr2l,f,c
  7801  001654  5002               	movf	CANreceiveMessage@msg+1,w,c
  7802  001656  22DA               	addwfc	fsr2h,f,c
  7803  001658  010F               	movlb	15	; () banked
  7804  00165A  CF5D FFDF          	movff	3933,indf2	;volatile
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7808  00165E  EE20 F00E          	lfsr	2,14
  7809  001662  5001               	movf	CANreceiveMessage@msg,w,c
  7810  001664  26D9               	addwf	fsr2l,f,c
  7811  001666  5002               	movf	CANreceiveMessage@msg+1,w,c
  7812  001668  22DA               	addwfc	fsr2h,f,c
  7813  00166A  010F               	movlb	15	; () banked
  7814  00166C  AD55               	btfss	85,6,b	;volatile
  7815  00166E  D002               	goto	i1u383_20
  7816  001670  0E01               	movlw	1
  7817  001672  D001               	goto	i1u383_26
  7818  001674                     i1u383_20:
  7819  001674  0E00               	movlw	0
  7820  001676                     i1u383_26:
  7821  001676  6EDF               	movwf	indf2,c
  7822                           
  7823                           ; BSR set to: 15
  7824                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7825  001678  EE20 F00D          	lfsr	2,13
  7826  00167C  5001               	movf	CANreceiveMessage@msg,w,c
  7827  00167E  26D9               	addwf	fsr2l,f,c
  7828  001680  5002               	movf	CANreceiveMessage@msg+1,w,c
  7829  001682  22DA               	addwfc	fsr2h,f,c
  7830  001684  010F               	movlb	15	; () banked
  7831  001686  5155               	movf	85,w,b	;volatile
  7832  001688  0B0F               	andlw	15
  7833  00168A  6EDF               	movwf	indf2,c
  7834                           
  7835                           ; BSR set to: 15
  7836                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7837  00168C  EE20 F00C          	lfsr	2,12
  7838  001690  5001               	movf	CANreceiveMessage@msg,w,c
  7839  001692  26D9               	addwf	fsr2l,f,c
  7840  001694  5002               	movf	CANreceiveMessage@msg+1,w,c
  7841  001696  22DA               	addwfc	fsr2h,f,c
  7842  001698  010F               	movlb	15	; () banked
  7843  00169A  A752               	btfss	82,3,b	;volatile
  7844  00169C  D002               	goto	i1u384_20
  7845  00169E  0E01               	movlw	1
  7846  0016A0  D001               	goto	i1u384_26
  7847  0016A2                     i1u384_20:
  7848  0016A2  0E00               	movlw	0
  7849  0016A4                     i1u384_26:
  7850  0016A4  6EDF               	movwf	indf2,c
  7851                           
  7852                           ; BSR set to: 15
  7853                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7854  0016A6  010F               	movlb	15	; () banked
  7855  0016A8  B752               	btfsc	82,3,b	;volatile
  7856  0016AA  D049               	goto	i1l3520
  7857                           
  7858                           ; BSR set to: 15
  7859                           ;inc\CANlib.h: 559: {
  7860                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7861  0016AC  010F               	movlb	15	; () banked
  7862  0016AE  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7863  0016B2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7864  0016B4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7865  0016B6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7866  0016B8  0E03               	movlw	3
  7867  0016BA                     i1u386_25:
  7868  0016BA  90D8               	bcf	status,0,c
  7869  0016BC  3603               	rlcf	??_CANreceiveMessage,f,c
  7870  0016BE  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7871  0016C0  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7872  0016C2  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7873  0016C4  2EE8               	decfsz	wreg,f,c
  7874  0016C6  D7F9               	goto	i1u386_25
  7875  0016C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7876  0016CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7877  0016D0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7878  0016D4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7879  0016D8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7880  0016DC  C006  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  7881  0016E0  06D9               	decf	fsr2l,f,c
  7882  0016E2  06D9               	decf	fsr2l,f,c
  7883                           
  7884                           ; BSR set to: 15
  7885                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7886  0016E4  010F               	movlb	15	; () banked
  7887  0016E6  3952               	swapf	82,w,b	;volatile
  7888  0016E8  42E8               	rrncf	wreg,f,c
  7889  0016EA  0B07               	andlw	7
  7890  0016EC  0B07               	andlw	7
  7891  0016EE  6E0C               	movwf	CANreceiveMessage@tamp,c
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7895  0016F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7896  0016F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7897  0016F8  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7898  0016FC  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7899  001700  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7900  001704  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7901  001708  500C               	movf	CANreceiveMessage@tamp,w,c
  7902  00170A  2403               	addwf	??_CANreceiveMessage,w,c
  7903  00170C  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7904  00170E  0E00               	movlw	0
  7905  001710  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7906  001712  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7907  001714  0E00               	movlw	0
  7908  001716  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7909  001718  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7910  00171A  0E00               	movlw	0
  7911  00171C  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7912  00171E  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7913  001720  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7914  001724  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7915  001728  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7916  00172C  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7917  001730  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7918  001734  C00A  FFDD         	movff	??_CANreceiveMessage+7,postdec2
  7919  001738  06D9               	decf	fsr2l,f,c
  7920  00173A  06D9               	decf	fsr2l,f,c
  7921                           
  7922                           ;inc\CANlib.h: 563: }
  7923  00173C  D078               	goto	i1l3544
  7924  00173E                     i1l3520:
  7925                           
  7926                           ; BSR set to: 15
  7927                           ;inc\CANlib.h: 564: else
  7928                           ;inc\CANlib.h: 565: {
  7929                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7930  00173E  010F               	movlb	15	; () banked
  7931  001740  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7932  001744  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7933  001746  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7934  001748  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7935  00174A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7936  00174E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7937  001752  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7938  001756  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7939  00175A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7940  00175E  C006  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  7941  001762  06D9               	decf	fsr2l,f,c
  7942  001764  06D9               	decf	fsr2l,f,c
  7943                           
  7944                           ; BSR set to: 15
  7945                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7946  001766  010F               	movlb	15	; () banked
  7947  001768  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7948  00176C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7949  00176E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7950  001770  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7951  001772  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7952  001776  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7953  00177A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7954  00177E  6A03               	clrf	??_CANreceiveMessage,c
  7955  001780  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7956  001784  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7957  001788  5003               	movf	??_CANreceiveMessage,w,c
  7958  00178A  26DE               	addwf	postinc2,f,c
  7959  00178C  5004               	movf	??_CANreceiveMessage+1,w,c
  7960  00178E  22DE               	addwfc	postinc2,f,c
  7961  001790  5005               	movf	??_CANreceiveMessage+2,w,c
  7962  001792  22DE               	addwfc	postinc2,f,c
  7963  001794  5006               	movf	??_CANreceiveMessage+3,w,c
  7964  001796  22DD               	addwfc	postdec2,f,c
  7965  001798  52DD               	movf	postdec2,f,c
  7966  00179A  52DD               	movf	postdec2,f,c
  7967                           
  7968                           ; BSR set to: 15
  7969                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7970  00179C  010F               	movlb	15	; () banked
  7971  00179E  A152               	btfss	82,0,b	;volatile
  7972  0017A0  D006               	goto	i1l3528
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7976  0017A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7977  0017A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7978  0017AA  0E02               	movlw	2
  7979  0017AC  80DB               	bsf	plusw2,0,c
  7980  0017AE                     i1l3528:
  7981                           
  7982                           ; BSR set to: 15
  7983                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7984  0017AE  010F               	movlb	15	; () banked
  7985  0017B0  A352               	btfss	82,1,b	;volatile
  7986  0017B2  D006               	goto	i1l3532
  7987                           
  7988                           ; BSR set to: 15
  7989                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7990  0017B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7991  0017B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7992  0017BC  0E02               	movlw	2
  7993  0017BE  82DB               	bsf	plusw2,1,c
  7994  0017C0                     i1l3532:
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7998  0017C0  010F               	movlb	15	; () banked
  7999  0017C2  AB52               	btfss	82,5,b	;volatile
  8000  0017C4  D006               	goto	i1l3536
  8001                           
  8002                           ; BSR set to: 15
  8003                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8004  0017C6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8005  0017CA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8006  0017CE  0E02               	movlw	2
  8007  0017D0  84DB               	bsf	plusw2,2,c
  8008  0017D2                     i1l3536:
  8009                           
  8010                           ; BSR set to: 15
  8011                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8012  0017D2  010F               	movlb	15	; () banked
  8013  0017D4  AD52               	btfss	82,6,b	;volatile
  8014  0017D6  D006               	goto	i1l3540
  8015                           
  8016                           ; BSR set to: 15
  8017                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8018  0017D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8019  0017DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8020  0017E0  0E02               	movlw	2
  8021  0017E2  86DB               	bsf	plusw2,3,c
  8022  0017E4                     i1l3540:
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8026  0017E4  010F               	movlb	15	; () banked
  8027  0017E6  AF52               	btfss	82,7,b	;volatile
  8028  0017E8  D006               	goto	i1l437
  8029                           
  8030                           ; BSR set to: 15
  8031                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8032  0017EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8033  0017EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8034  0017F2  0E02               	movlw	2
  8035  0017F4  88DB               	bsf	plusw2,4,c
  8036  0017F6                     i1l437:
  8037                           
  8038                           ; BSR set to: 15
  8039                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8040  0017F6  010F               	movlb	15	; () banked
  8041  0017F8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8042  0017FC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8043  0017FE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8044  001800  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8045  001802  0E15               	movlw	21
  8046  001804                     i1u392_25:
  8047  001804  90D8               	bcf	status,0,c
  8048  001806  3603               	rlcf	??_CANreceiveMessage,f,c
  8049  001808  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8050  00180A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8051  00180C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8052  00180E  2EE8               	decfsz	wreg,f,c
  8053  001810  D7F9               	goto	i1u392_25
  8054  001812  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8055  001816  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8056  00181A  5003               	movf	??_CANreceiveMessage,w,c
  8057  00181C  12DE               	iorwf	postinc2,f,c
  8058  00181E  5004               	movf	??_CANreceiveMessage+1,w,c
  8059  001820  12DE               	iorwf	postinc2,f,c
  8060  001822  5005               	movf	??_CANreceiveMessage+2,w,c
  8061  001824  12DE               	iorwf	postinc2,f,c
  8062  001826  5006               	movf	??_CANreceiveMessage+3,w,c
  8063  001828  12DD               	iorwf	postdec2,f,c
  8064  00182A  52DD               	movf	postdec2,f,c
  8065  00182C  52DD               	movf	postdec2,f,c
  8066  00182E                     i1l3544:
  8067                           
  8068                           ; BSR set to: 15
  8069                           ;inc\CANlib.h: 581: }
  8070                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8071  00182E  010F               	movlb	15	; () banked
  8072  001830  9F50               	bcf	80,7,b	;volatile
  8073  001832  D125               	goto	i1l438
  8074  001834                     i1l430:
  8075                           
  8076                           ; BSR set to: 15
  8077                           ;inc\CANlib.h: 585: }
  8078                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8079  001834  AE60               	btfss	3936,7,c	;volatile
  8080  001836  D123               	goto	i1l438
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;inc\CANlib.h: 588: {
  8084                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8085  001838  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8086  00183C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8087  001840  6ADE               	clrf	postinc2,c
  8088  001842  6ADE               	clrf	postinc2,c
  8089  001844  6ADE               	clrf	postinc2,c
  8090  001846  6ADD               	clrf	postdec2,c
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8094  001848  EE20 F004          	lfsr	2,4
  8095  00184C  5001               	movf	CANreceiveMessage@msg,w,c
  8096  00184E  26D9               	addwf	fsr2l,f,c
  8097  001850  5002               	movf	CANreceiveMessage@msg+1,w,c
  8098  001852  22DA               	addwfc	fsr2h,f,c
  8099  001854  CF66 FFDF          	movff	3942,indf2	;volatile
  8100                           
  8101                           ; BSR set to: 15
  8102                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8103  001858  EE20 F005          	lfsr	2,5
  8104  00185C  5001               	movf	CANreceiveMessage@msg,w,c
  8105  00185E  26D9               	addwf	fsr2l,f,c
  8106  001860  5002               	movf	CANreceiveMessage@msg+1,w,c
  8107  001862  22DA               	addwfc	fsr2h,f,c
  8108  001864  CF67 FFDF          	movff	3943,indf2	;volatile
  8109                           
  8110                           ; BSR set to: 15
  8111                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8112  001868  EE20 F006          	lfsr	2,6
  8113  00186C  5001               	movf	CANreceiveMessage@msg,w,c
  8114  00186E  26D9               	addwf	fsr2l,f,c
  8115  001870  5002               	movf	CANreceiveMessage@msg+1,w,c
  8116  001872  22DA               	addwfc	fsr2h,f,c
  8117  001874  CF68 FFDF          	movff	3944,indf2	;volatile
  8118                           
  8119                           ; BSR set to: 15
  8120                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8121  001878  EE20 F007          	lfsr	2,7
  8122  00187C  5001               	movf	CANreceiveMessage@msg,w,c
  8123  00187E  26D9               	addwf	fsr2l,f,c
  8124  001880  5002               	movf	CANreceiveMessage@msg+1,w,c
  8125  001882  22DA               	addwfc	fsr2h,f,c
  8126  001884  CF69 FFDF          	movff	3945,indf2	;volatile
  8127                           
  8128                           ; BSR set to: 15
  8129                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8130  001888  EE20 F008          	lfsr	2,8
  8131  00188C  5001               	movf	CANreceiveMessage@msg,w,c
  8132  00188E  26D9               	addwf	fsr2l,f,c
  8133  001890  5002               	movf	CANreceiveMessage@msg+1,w,c
  8134  001892  22DA               	addwfc	fsr2h,f,c
  8135  001894  CF6A FFDF          	movff	3946,indf2	;volatile
  8136                           
  8137                           ; BSR set to: 15
  8138                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8139  001898  EE20 F009          	lfsr	2,9
  8140  00189C  5001               	movf	CANreceiveMessage@msg,w,c
  8141  00189E  26D9               	addwf	fsr2l,f,c
  8142  0018A0  5002               	movf	CANreceiveMessage@msg+1,w,c
  8143  0018A2  22DA               	addwfc	fsr2h,f,c
  8144  0018A4  CF6B FFDF          	movff	3947,indf2	;volatile
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8148  0018A8  EE20 F00A          	lfsr	2,10
  8149  0018AC  5001               	movf	CANreceiveMessage@msg,w,c
  8150  0018AE  26D9               	addwf	fsr2l,f,c
  8151  0018B0  5002               	movf	CANreceiveMessage@msg+1,w,c
  8152  0018B2  22DA               	addwfc	fsr2h,f,c
  8153  0018B4  CF6C FFDF          	movff	3948,indf2	;volatile
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8157  0018B8  EE20 F00B          	lfsr	2,11
  8158  0018BC  5001               	movf	CANreceiveMessage@msg,w,c
  8159  0018BE  26D9               	addwf	fsr2l,f,c
  8160  0018C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  8161  0018C2  22DA               	addwfc	fsr2h,f,c
  8162  0018C4  CF6D FFDF          	movff	3949,indf2	;volatile
  8163                           
  8164                           ; BSR set to: 15
  8165                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8166  0018C8  EE20 F00E          	lfsr	2,14
  8167  0018CC  5001               	movf	CANreceiveMessage@msg,w,c
  8168  0018CE  26D9               	addwf	fsr2l,f,c
  8169  0018D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  8170  0018D2  22DA               	addwfc	fsr2h,f,c
  8171  0018D4  AC65               	btfss	3941,6,c	;volatile
  8172  0018D6  D002               	goto	i1u394_20
  8173  0018D8  0E01               	movlw	1
  8174  0018DA  D001               	goto	i1u394_26
  8175  0018DC                     i1u394_20:
  8176  0018DC  0E00               	movlw	0
  8177  0018DE                     i1u394_26:
  8178  0018DE  6EDF               	movwf	indf2,c
  8179                           
  8180                           ; BSR set to: 15
  8181                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8182  0018E0  EE20 F00D          	lfsr	2,13
  8183  0018E4  5001               	movf	CANreceiveMessage@msg,w,c
  8184  0018E6  26D9               	addwf	fsr2l,f,c
  8185  0018E8  5002               	movf	CANreceiveMessage@msg+1,w,c
  8186  0018EA  22DA               	addwfc	fsr2h,f,c
  8187  0018EC  5065               	movf	3941,w,c	;volatile
  8188  0018EE  0B0F               	andlw	15
  8189  0018F0  6EDF               	movwf	indf2,c
  8190                           
  8191                           ; BSR set to: 15
  8192                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8193  0018F2  EE20 F00C          	lfsr	2,12
  8194  0018F6  5001               	movf	CANreceiveMessage@msg,w,c
  8195  0018F8  26D9               	addwf	fsr2l,f,c
  8196  0018FA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8197  0018FC  22DA               	addwfc	fsr2h,f,c
  8198  0018FE  A662               	btfss	3938,3,c	;volatile
  8199  001900  D002               	goto	i1u395_20
  8200  001902  0E01               	movlw	1
  8201  001904  D001               	goto	i1u395_26
  8202  001906                     i1u395_20:
  8203  001906  0E00               	movlw	0
  8204  001908                     i1u395_26:
  8205  001908  6EDF               	movwf	indf2,c
  8206                           
  8207                           ; BSR set to: 15
  8208                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8209  00190A  B662               	btfsc	3938,3,c	;volatile
  8210  00190C  D047               	goto	i1l3580
  8211                           
  8212                           ; BSR set to: 15
  8213                           ;inc\CANlib.h: 606: {
  8214                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8215  00190E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8216  001912  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8217  001914  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8218  001916  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8219  001918  0E03               	movlw	3
  8220  00191A                     i1u397_25:
  8221  00191A  90D8               	bcf	status,0,c
  8222  00191C  3603               	rlcf	??_CANreceiveMessage,f,c
  8223  00191E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8224  001920  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8225  001922  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8226  001924  2EE8               	decfsz	wreg,f,c
  8227  001926  D7F9               	goto	i1u397_25
  8228  001928  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8229  00192C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8230  001930  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8231  001934  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8232  001938  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8233  00193C  C006  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  8234  001940  06D9               	decf	fsr2l,f,c
  8235  001942  06D9               	decf	fsr2l,f,c
  8236                           
  8237                           ; BSR set to: 15
  8238                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8239  001944  3862               	swapf	3938,w,c	;volatile
  8240  001946  42E8               	rrncf	wreg,f,c
  8241  001948  0B07               	andlw	7
  8242  00194A  0B07               	andlw	7
  8243  00194C  6E0C               	movwf	CANreceiveMessage@tamp,c
  8244                           
  8245                           ; BSR set to: 15
  8246                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8247  00194E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8248  001952  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8249  001956  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8250  00195A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8251  00195E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8252  001962  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8253  001966  500C               	movf	CANreceiveMessage@tamp,w,c
  8254  001968  2403               	addwf	??_CANreceiveMessage,w,c
  8255  00196A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8256  00196C  0E00               	movlw	0
  8257  00196E  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8258  001970  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8259  001972  0E00               	movlw	0
  8260  001974  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8261  001976  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8262  001978  0E00               	movlw	0
  8263  00197A  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8264  00197C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8265  00197E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8266  001982  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8267  001986  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8268  00198A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8269  00198E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8270  001992  C00A  FFDD         	movff	??_CANreceiveMessage+7,postdec2
  8271  001996  06D9               	decf	fsr2l,f,c
  8272  001998  06D9               	decf	fsr2l,f,c
  8273                           
  8274                           ;inc\CANlib.h: 610: }
  8275  00199A  D070               	goto	i1l3604
  8276  00199C                     i1l3580:
  8277                           
  8278                           ; BSR set to: 15
  8279                           ;inc\CANlib.h: 611: else
  8280                           ;inc\CANlib.h: 612: {
  8281                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8282  00199C  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8283  0019A0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8284  0019A2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8285  0019A4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8286  0019A6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8287  0019AA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8288  0019AE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8289  0019B2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8290  0019B6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8291  0019BA  C006  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  8292  0019BE  06D9               	decf	fsr2l,f,c
  8293  0019C0  06D9               	decf	fsr2l,f,c
  8294                           
  8295                           ; BSR set to: 15
  8296                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8297  0019C2  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8298  0019C6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8299  0019C8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8300  0019CA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8301  0019CC  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8302  0019D0  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8303  0019D4  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8304  0019D8  6A03               	clrf	??_CANreceiveMessage,c
  8305  0019DA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8306  0019DE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8307  0019E2  5003               	movf	??_CANreceiveMessage,w,c
  8308  0019E4  26DE               	addwf	postinc2,f,c
  8309  0019E6  5004               	movf	??_CANreceiveMessage+1,w,c
  8310  0019E8  22DE               	addwfc	postinc2,f,c
  8311  0019EA  5005               	movf	??_CANreceiveMessage+2,w,c
  8312  0019EC  22DE               	addwfc	postinc2,f,c
  8313  0019EE  5006               	movf	??_CANreceiveMessage+3,w,c
  8314  0019F0  22DD               	addwfc	postdec2,f,c
  8315  0019F2  52DD               	movf	postdec2,f,c
  8316  0019F4  52DD               	movf	postdec2,f,c
  8317                           
  8318                           ; BSR set to: 15
  8319                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8320  0019F6  A062               	btfss	3938,0,c	;volatile
  8321  0019F8  D006               	goto	i1l3588
  8322                           
  8323                           ; BSR set to: 15
  8324                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8325  0019FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8326  0019FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8327  001A02  0E02               	movlw	2
  8328  001A04  80DB               	bsf	plusw2,0,c
  8329  001A06                     i1l3588:
  8330                           
  8331                           ; BSR set to: 15
  8332                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8333  001A06  A262               	btfss	3938,1,c	;volatile
  8334  001A08  D006               	goto	i1l3592
  8335                           
  8336                           ; BSR set to: 15
  8337                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8338  001A0A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8339  001A0E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8340  001A12  0E02               	movlw	2
  8341  001A14  82DB               	bsf	plusw2,1,c
  8342  001A16                     i1l3592:
  8343                           
  8344                           ; BSR set to: 15
  8345                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8346  001A16  AA62               	btfss	3938,5,c	;volatile
  8347  001A18  D006               	goto	i1l3596
  8348                           
  8349                           ; BSR set to: 15
  8350                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8351  001A1A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8352  001A1E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8353  001A22  0E02               	movlw	2
  8354  001A24  84DB               	bsf	plusw2,2,c
  8355  001A26                     i1l3596:
  8356                           
  8357                           ; BSR set to: 15
  8358                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8359  001A26  AC62               	btfss	3938,6,c	;volatile
  8360  001A28  D006               	goto	i1l3600
  8361                           
  8362                           ; BSR set to: 15
  8363                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8364  001A2A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8365  001A2E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8366  001A32  0E02               	movlw	2
  8367  001A34  86DB               	bsf	plusw2,3,c
  8368  001A36                     i1l3600:
  8369                           
  8370                           ; BSR set to: 15
  8371                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8372  001A36  AE62               	btfss	3938,7,c	;volatile
  8373  001A38  D006               	goto	i1l446
  8374                           
  8375                           ; BSR set to: 15
  8376                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8377  001A3A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8378  001A3E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8379  001A42  0E02               	movlw	2
  8380  001A44  88DB               	bsf	plusw2,4,c
  8381  001A46                     i1l446:
  8382                           
  8383                           ; BSR set to: 15
  8384                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8385  001A46  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8386  001A4A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8387  001A4C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8388  001A4E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8389  001A50  0E15               	movlw	21
  8390  001A52                     i1u403_25:
  8391  001A52  90D8               	bcf	status,0,c
  8392  001A54  3603               	rlcf	??_CANreceiveMessage,f,c
  8393  001A56  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8394  001A58  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8395  001A5A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8396  001A5C  2EE8               	decfsz	wreg,f,c
  8397  001A5E  D7F9               	goto	i1u403_25
  8398  001A60  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8399  001A64  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8400  001A68  5003               	movf	??_CANreceiveMessage,w,c
  8401  001A6A  12DE               	iorwf	postinc2,f,c
  8402  001A6C  5004               	movf	??_CANreceiveMessage+1,w,c
  8403  001A6E  12DE               	iorwf	postinc2,f,c
  8404  001A70  5005               	movf	??_CANreceiveMessage+2,w,c
  8405  001A72  12DE               	iorwf	postinc2,f,c
  8406  001A74  5006               	movf	??_CANreceiveMessage+3,w,c
  8407  001A76  12DD               	iorwf	postdec2,f,c
  8408  001A78  52DD               	movf	postdec2,f,c
  8409  001A7A  52DD               	movf	postdec2,f,c
  8410  001A7C                     i1l3604:
  8411                           
  8412                           ; BSR set to: 15
  8413                           ;inc\CANlib.h: 629: }
  8414                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8415  001A7C  9E60               	bcf	3936,7,c	;volatile
  8416  001A7E                     i1l438:
  8417                           
  8418                           ; BSR set to: 15
  8419  001A7E  0012               	return	
  8420  001A80                     __end_of_CANreceiveMessage:
  8421                           	opt stack 0
  8422                           pclatu	equ	0xFFB
  8423                           pclath	equ	0xFFA
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           prodh	equ	0xFF4
  8429                           prodl	equ	0xFF3
  8430                           intcon	equ	0xFF2
  8431                           intcon2	equ	0xFF1
  8432                           intcon3	equ	0xFF0
  8433                           postinc0	equ	0xFEE
  8434                           fsr0h	equ	0xFEA
  8435                           fsr0l	equ	0xFE9
  8436                           wreg	equ	0xFE8
  8437                           postdec1	equ	0xFE5
  8438                           fsr1h	equ	0xFE2
  8439                           fsr1l	equ	0xFE1
  8440                           bsr	equ	0xFE0
  8441                           indf2	equ	0xFDF
  8442                           postinc2	equ	0xFDE
  8443                           postdec2	equ	0xFDD
  8444                           plusw2	equ	0xFDB
  8445                           fsr2h	equ	0xFDA
  8446                           fsr2l	equ	0xFD9
  8447                           status	equ	0xFD8
  8448                           
  8449 ;; *************** function _CANisRxReady *****************
  8450 ;; Defined at:
  8451 ;;		line 1163 in file "E:/Centraline/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;		None
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      unsigned char 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8465 ;;      Params:         0       0       0       0
  8466 ;;      Locals:         1       0       0       0
  8467 ;;      Temps:          0       0       0       0
  8468 ;;      Totals:         1       0       0       0
  8469 ;;Total ram usage:        1 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    2
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_ISR_Bassa
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text18
  8480  002B38                     __ptext18:
  8481                           	opt stack 0
  8482  002B38                     _CANisRxReady:
  8483                           	opt stack 24
  8484                           
  8485                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8486                           
  8487                           ; BSR set to: 15
  8488                           ;incstack = 0
  8489  002B38  0E01               	movlw	1
  8490  002B3A  6E01               	movwf	_CANisRxReady$3284,c
  8491  002B3C  BE60               	btfsc	3936,7,c	;volatile
  8492  002B3E  D005               	goto	i1l581
  8493  002B40  010F               	movlb	15	; () banked
  8494  002B42  BF50               	btfsc	80,7,b	;volatile
  8495  002B44  D002               	goto	i1l581
  8496                           
  8497                           ; BSR set to: 15
  8498  002B46  0E00               	movlw	0
  8499  002B48  6E01               	movwf	_CANisRxReady$3284,c
  8500  002B4A                     i1l581:
  8501  002B4A  5001               	movf	_CANisRxReady$3284,w,c
  8502  002B4C  0012               	return	
  8503  002B4E                     __end_of_CANisRxReady:
  8504                           	opt stack 0
  8505                           pclatu	equ	0xFFB
  8506                           pclath	equ	0xFFA
  8507                           tblptru	equ	0xFF8
  8508                           tblptrh	equ	0xFF7
  8509                           tblptrl	equ	0xFF6
  8510                           tablat	equ	0xFF5
  8511                           prodh	equ	0xFF4
  8512                           prodl	equ	0xFF3
  8513                           intcon	equ	0xFF2
  8514                           intcon2	equ	0xFF1
  8515                           intcon3	equ	0xFF0
  8516                           postinc0	equ	0xFEE
  8517                           fsr0h	equ	0xFEA
  8518                           fsr0l	equ	0xFE9
  8519                           wreg	equ	0xFE8
  8520                           postdec1	equ	0xFE5
  8521                           fsr1h	equ	0xFE2
  8522                           fsr1l	equ	0xFE1
  8523                           bsr	equ	0xFE0
  8524                           indf2	equ	0xFDF
  8525                           postinc2	equ	0xFDE
  8526                           postdec2	equ	0xFDD
  8527                           plusw2	equ	0xFDB
  8528                           fsr2h	equ	0xFDA
  8529                           fsr2l	equ	0xFD9
  8530                           status	equ	0xFD8
  8531                           
  8532 ;; *************** function _ISR_Alta *****************
  8533 ;; Defined at:
  8534 ;;		line 129 in file "ABS_Code.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;		None               void
  8541 ;; Registers used:
  8542 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8548 ;;      Params:         0       0       0       0
  8549 ;;      Locals:         0       0       0       0
  8550 ;;      Temps:          0      22       0       0
  8551 ;;      Totals:         0      22       0       0
  8552 ;;Total ram usage:       22 bytes
  8553 ;; Hardware stack levels used:    1
  8554 ;; Hardware stack levels required when called:    1
  8555 ;; This function calls:
  8556 ;;		_WriteTimer0
  8557 ;;		i2___awdiv
  8558 ;;		i2___lwdiv
  8559 ;;		i2___wmul
  8560 ;; This function is called by:
  8561 ;;		Interrupt level 2
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	intcode
  8566  000008                     __pintcode:
  8567                           	opt stack 0
  8568  000008                     _ISR_Alta:
  8569                           	opt stack 24
  8570                           
  8571                           ;incstack = 0
  8572  000008  CFFA F070          	movff	pclath,??_ISR_Alta+8
  8573  00000C  CFFB F071          	movff	pclatu,??_ISR_Alta+9
  8574  000010  CFE9 F072          	movff	fsr0l,??_ISR_Alta+10
  8575  000014  ED41  F00F         	call	int_func,f	;refresh shadow registers
  8576                           pclatu	equ	0xFFB
  8577                           pclath	equ	0xFFA
  8578                           tblptru	equ	0xFF8
  8579                           tblptrh	equ	0xFF7
  8580                           tblptrl	equ	0xFF6
  8581                           tablat	equ	0xFF5
  8582                           prodh	equ	0xFF4
  8583                           prodl	equ	0xFF3
  8584                           intcon	equ	0xFF2
  8585                           intcon2	equ	0xFF1
  8586                           intcon3	equ	0xFF0
  8587                           postinc0	equ	0xFEE
  8588                           fsr0h	equ	0xFEA
  8589                           fsr0l	equ	0xFE9
  8590                           wreg	equ	0xFE8
  8591                           postdec1	equ	0xFE5
  8592                           fsr1h	equ	0xFE2
  8593                           fsr1l	equ	0xFE1
  8594                           bsr	equ	0xFE0
  8595                           indf2	equ	0xFDF
  8596                           postinc2	equ	0xFDE
  8597                           postdec2	equ	0xFDD
  8598                           plusw2	equ	0xFDB
  8599                           fsr2h	equ	0xFDA
  8600                           fsr2l	equ	0xFD9
  8601                           status	equ	0xFD8
  8602                           
  8603                           	psect	intcode_body
  8604  001E82                     __pintcode_body:
  8605                           	opt stack 24
  8606  001E82                     int_func:
  8607                           	opt stack 24
  8608  001E82  0006               	pop		; remove dummy address from shadow register refresh
  8609  001E84  CFEA F073          	movff	fsr0h,??_ISR_Alta+11
  8610  001E88  CFE1 F074          	movff	fsr1l,??_ISR_Alta+12
  8611  001E8C  CFE2 F075          	movff	fsr1h,??_ISR_Alta+13
  8612  001E90  CFD9 F076          	movff	fsr2l,??_ISR_Alta+14
  8613  001E94  CFDA F077          	movff	fsr2h,??_ISR_Alta+15
  8614  001E98  CFF3 F078          	movff	prodl,??_ISR_Alta+16
  8615  001E9C  CFF4 F079          	movff	prodh,??_ISR_Alta+17
  8616  001EA0  CFF6 F07A          	movff	tblptrl,??_ISR_Alta+18
  8617  001EA4  CFF7 F07B          	movff	tblptrh,??_ISR_Alta+19
  8618  001EA8  CFF8 F07C          	movff	tblptru,??_ISR_Alta+20
  8619  001EAC  CFF5 F07D          	movff	tablat,??_ISR_Alta+21
  8620                           
  8621                           ;ABS_Code.c: 131: if (INTCONbits.TMR0IF == 1) {
  8622  001EB0  A4F2               	btfss	intcon,2,c	;volatile
  8623  001EB2  D0A4               	goto	i2l4124
  8624                           
  8625                           ;ABS_Code.c: 133: if (PORTCbits.RC0 == 1) {
  8626  001EB4  A082               	btfss	3970,0,c	;volatile
  8627  001EB6  D09B               	goto	i2l4120
  8628                           
  8629                           ;ABS_Code.c: 134: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8630  001EB8  0E40               	movlw	64
  8631  001EBA  0100               	movlb	0	; () banked
  8632  001EBC  6F68               	movwf	??_ISR_Alta& (0+255),b
  8633  001EBE  0E06               	movlw	6
  8634  001EC0  6F69               	movwf	(??_ISR_Alta+1)& (0+255),b
  8635  001EC2  C040  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8636  001EC6  6A1F               	clrf	i2___wmul@multiplier+1,c
  8637  001EC8  0E05               	movlw	5
  8638  001ECA  6E21               	movwf	i2___wmul@multiplicand+1,c
  8639  001ECC  0E78               	movlw	120
  8640  001ECE  6E20               	movwf	i2___wmul@multiplicand,c
  8641  001ED0  EC6C  F015         	call	i2___wmul	;wreg free
  8642  001ED4  C01E  F060         	movff	?i2___wmul,i2___awdiv@dividend
  8643  001ED8  C01F  F061         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8644  001EDC  0E00               	movlw	0
  8645  001EDE  0100               	movlb	0	; () banked
  8646  001EE0  6F63               	movwf	(i2___awdiv@divisor+1)& (0+255),b
  8647  001EE2  0EB4               	movlw	180
  8648  001EE4  0100               	movlb	0	; () banked
  8649  001EE6  6F62               	movwf	i2___awdiv@divisor& (0+255),b
  8650  001EE8  ECB6  F013         	call	i2___awdiv	;wreg free
  8651  001EEC  90D8               	bcf	status,0,c
  8652  001EEE  0100               	movlb	0	; () banked
  8653  001EF0  3760               	rlcf	?i2___awdiv& (0+255),f,b
  8654  001EF2  0100               	movlb	0	; () banked
  8655  001EF4  3761               	rlcf	(?i2___awdiv+1)& (0+255),f,b
  8656  001EF6  0100               	movlb	0	; () banked
  8657  001EF8  5168               	movf	??_ISR_Alta& (0+255),w,b
  8658  001EFA  0100               	movlb	0	; () banked
  8659  001EFC  2760               	addwf	?i2___awdiv& (0+255),f,b
  8660  001EFE  0100               	movlb	0	; () banked
  8661  001F00  5169               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8662  001F02  0100               	movlb	0	; () banked
  8663  001F04  2361               	addwfc	(?i2___awdiv+1)& (0+255),f,b
  8664  001F06  0100               	movlb	0	; () banked
  8665  001F08  C060  F029         	movff	?i2___awdiv,_timer_on
  8666  001F0C  0100               	movlb	0	; () banked
  8667  001F0E  C061  F02A         	movff	?i2___awdiv+1,_timer_on+1
  8668  001F12  0E00               	movlw	0
  8669  001F14  BE2A               	btfsc	_timer_on+1,7,c
  8670  001F16  0EFF               	movlw	-1
  8671  001F18  6E2B               	movwf	_timer_on+2,c
  8672  001F1A  6E2C               	movwf	_timer_on+3,c
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;ABS_Code.c: 135: timer_off = 65536 - (40000 - timer_on);
  8676  001F1C  C029  F068         	movff	_timer_on,??_ISR_Alta
  8677  001F20  C02A  F069         	movff	_timer_on+1,??_ISR_Alta+1
  8678  001F24  C02B  F06A         	movff	_timer_on+2,??_ISR_Alta+2
  8679  001F28  C02C  F06B         	movff	_timer_on+3,??_ISR_Alta+3
  8680  001F2C  0100               	movlb	0	; () banked
  8681  001F2E  1F68               	comf	??_ISR_Alta& (0+255),f,b
  8682  001F30  1F69               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8683  001F32  1F6A               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8684  001F34  1F6B               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8685  001F36  2B68               	incf	??_ISR_Alta& (0+255),f,b
  8686  001F38  0E00               	movlw	0
  8687  001F3A  2369               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8688  001F3C  236A               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8689  001F3E  236B               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8690  001F40  0E40               	movlw	64
  8691  001F42  0100               	movlb	0	; () banked
  8692  001F44  2568               	addwf	??_ISR_Alta& (0+255),w,b
  8693  001F46  0100               	movlb	0	; () banked
  8694  001F48  6F6C               	movwf	(??_ISR_Alta+4)& (0+255),b
  8695  001F4A  0E9C               	movlw	156
  8696  001F4C  0100               	movlb	0	; () banked
  8697  001F4E  2169               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8698  001F50  0100               	movlb	0	; () banked
  8699  001F52  6F6D               	movwf	(??_ISR_Alta+5)& (0+255),b
  8700  001F54  0E00               	movlw	0
  8701  001F56  0100               	movlb	0	; () banked
  8702  001F58  216A               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8703  001F5A  0100               	movlb	0	; () banked
  8704  001F5C  6F6E               	movwf	(??_ISR_Alta+6)& (0+255),b
  8705  001F5E  0E00               	movlw	0
  8706  001F60  0100               	movlb	0	; () banked
  8707  001F62  216B               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8708  001F64  0100               	movlb	0	; () banked
  8709  001F66  6F6F               	movwf	(??_ISR_Alta+7)& (0+255),b
  8710  001F68  0100               	movlb	0	; () banked
  8711  001F6A  1F6C               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8712  001F6C  1F6D               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8713  001F6E  1F6E               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8714  001F70  1F6F               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8715  001F72  2B6C               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8716  001F74  0E00               	movlw	0
  8717  001F76  236D               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8718  001F78  236E               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8719  001F7A  236F               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8720  001F7C  0E00               	movlw	0
  8721  001F7E  0100               	movlb	0	; () banked
  8722  001F80  256C               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8723  001F82  6E25               	movwf	_timer_off,c
  8724  001F84  0E00               	movlw	0
  8725  001F86  0100               	movlb	0	; () banked
  8726  001F88  216D               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8727  001F8A  6E26               	movwf	_timer_off+1,c
  8728  001F8C  0E01               	movlw	1
  8729  001F8E  0100               	movlb	0	; () banked
  8730  001F90  216E               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8731  001F92  6E27               	movwf	_timer_off+2,c
  8732  001F94  0E00               	movlw	0
  8733  001F96  0100               	movlb	0	; () banked
  8734  001F98  216F               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8735  001F9A  6E28               	movwf	_timer_off+3,c
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;ABS_Code.c: 136: timer_on = 65536 - timer_on;
  8739  001F9C  C029  F068         	movff	_timer_on,??_ISR_Alta
  8740  001FA0  C02A  F069         	movff	_timer_on+1,??_ISR_Alta+1
  8741  001FA4  C02B  F06A         	movff	_timer_on+2,??_ISR_Alta+2
  8742  001FA8  C02C  F06B         	movff	_timer_on+3,??_ISR_Alta+3
  8743  001FAC  0100               	movlb	0	; () banked
  8744  001FAE  1F68               	comf	??_ISR_Alta& (0+255),f,b
  8745  001FB0  1F69               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8746  001FB2  1F6A               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8747  001FB4  1F6B               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8748  001FB6  2B68               	incf	??_ISR_Alta& (0+255),f,b
  8749  001FB8  0E00               	movlw	0
  8750  001FBA  2369               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8751  001FBC  236A               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8752  001FBE  236B               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8753  001FC0  0E00               	movlw	0
  8754  001FC2  0100               	movlb	0	; () banked
  8755  001FC4  2568               	addwf	??_ISR_Alta& (0+255),w,b
  8756  001FC6  6E29               	movwf	_timer_on,c
  8757  001FC8  0E00               	movlw	0
  8758  001FCA  0100               	movlb	0	; () banked
  8759  001FCC  2169               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8760  001FCE  6E2A               	movwf	_timer_on+1,c
  8761  001FD0  0E01               	movlw	1
  8762  001FD2  0100               	movlb	0	; () banked
  8763  001FD4  216A               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8764  001FD6  6E2B               	movwf	_timer_on+2,c
  8765  001FD8  0E00               	movlw	0
  8766  001FDA  0100               	movlb	0	; () banked
  8767  001FDC  216B               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8768  001FDE  6E2C               	movwf	_timer_on+3,c
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;ABS_Code.c: 137: WriteTimer0(timer_on);
  8772  001FE0  C029  F01E         	movff	_timer_on,WriteTimer0@timer0
  8773  001FE4  C02A  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1
  8774  001FE8  ECA7  F015         	call	_WriteTimer0	;wreg free
  8775                           
  8776                           ;ABS_Code.c: 138: } else {
  8777  001FEC  D006               	goto	i2l4122
  8778  001FEE                     i2l4120:
  8779                           
  8780                           ;ABS_Code.c: 139: WriteTimer0(timer_off);
  8781  001FEE  C025  F01E         	movff	_timer_off,WriteTimer0@timer0
  8782  001FF2  C026  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1
  8783  001FF6  ECA7  F015         	call	_WriteTimer0	;wreg free
  8784  001FFA                     i2l4122:
  8785                           
  8786                           ;ABS_Code.c: 140: }
  8787                           ;ABS_Code.c: 141: INTCONbits.TMR0IF = 0;
  8788  001FFA  94F2               	bcf	intcon,2,c	;volatile
  8789  001FFC                     i2l4124:
  8790                           
  8791                           ;ABS_Code.c: 142: }
  8792                           ;ABS_Code.c: 145: if (INTCONbits.INT0IF == 1) {
  8793  001FFC  A2F2               	btfss	intcon,1,c	;volatile
  8794  001FFE  D039               	goto	i2l4150
  8795                           
  8796                           ;ABS_Code.c: 146: if (x == 0) {
  8797  002000  0100               	movlb	(_x/(0+8)) shr (0+8)
  8798  002002  BE41               	btfsc	_x/(0+8),_x& (0+7),c
  8799  002004  D007               	goto	i2l4132
  8800                           
  8801                           ;ABS_Code.c: 147: TMR1H = 0x00;
  8802  002006  0E00               	movlw	0
  8803  002008  6ECF               	movwf	4047,c	;volatile
  8804                           
  8805                           ;ABS_Code.c: 148: TMR1L = 0x00;
  8806  00200A  0E00               	movlw	0
  8807  00200C  6ECE               	movwf	4046,c	;volatile
  8808                           
  8809                           ;ABS_Code.c: 149: x = 1;
  8810  00200E  0100               	movlb	(_x/(0+8)) shr (0+8)
  8811  002010  8E41               	bsf	_x/(0+8),_x& (0+7),c
  8812                           
  8813                           ;ABS_Code.c: 150: } else {
  8814  002012  D02D               	goto	i2l4146
  8815  002014                     i2l4132:
  8816                           
  8817                           ;ABS_Code.c: 151: gap_time_1 = (TMR1H <<8) + TMR1L;
  8818  002014  50CF               	movf	4047,w,c	;volatile
  8819  002016  0100               	movlb	0	; () banked
  8820  002018  6F69               	movwf	(??_ISR_Alta+1)& (0+255),b
  8821  00201A  6B68               	clrf	??_ISR_Alta& (0+255),b
  8822  00201C  50CE               	movf	4046,w,c	;volatile
  8823  00201E  0100               	movlb	0	; () banked
  8824  002020  2568               	addwf	??_ISR_Alta& (0+255),w,b
  8825  002022  6E2D               	movwf	_gap_time_1,c
  8826  002024  0E00               	movlw	0
  8827  002026  0100               	movlb	0	; () banked
  8828  002028  2169               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8829  00202A  6E2E               	movwf	_gap_time_1+1,c
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;ABS_Code.c: 152: gap_time_1 = gap_time_1 / 500;
  8833  00202C  C02D  F01E         	movff	_gap_time_1,i2___lwdiv@dividend
  8834  002030  C02E  F01F         	movff	_gap_time_1+1,i2___lwdiv@dividend+1
  8835  002034  0E01               	movlw	1
  8836  002036  6E21               	movwf	i2___lwdiv@divisor+1,c
  8837  002038  0EF4               	movlw	244
  8838  00203A  6E20               	movwf	i2___lwdiv@divisor,c
  8839  00203C  ECC6  F014         	call	i2___lwdiv	;wreg free
  8840  002040  C01E  F02D         	movff	?i2___lwdiv,_gap_time_1
  8841  002044  C01F  F02E         	movff	?i2___lwdiv+1,_gap_time_1+1
  8842                           
  8843                           ;ABS_Code.c: 153: ENC1_measure = 1;
  8844  002048  0100               	movlb	(_ENC1_measure/(0+8)) shr (0+8)
  8845  00204A  8041               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  8846                           
  8847                           ;ABS_Code.c: 154: TMR1H = 0x00;
  8848  00204C  0E00               	movlw	0
  8849  00204E  6ECF               	movwf	4047,c	;volatile
  8850                           
  8851                           ;ABS_Code.c: 155: TMR1H = 0x00;
  8852  002050  0E00               	movlw	0
  8853  002052  6ECF               	movwf	4047,c	;volatile
  8854                           
  8855                           ;ABS_Code.c: 156: if (count_flag == 1) {
  8856  002054  0100               	movlb	(_count_flag/(0+8)) shr (0+8)
  8857  002056  AA41               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8858  002058  D00A               	goto	i2l4146
  8859                           
  8860                           ;ABS_Code.c: 157: int_counter_1++;
  8861  00205A  0E01               	movlw	1
  8862  00205C  0100               	movlb	0	; () banked
  8863  00205E  2799               	addwf	_int_counter_1& (0+255),f,b
  8864  002060  0E00               	movlw	0
  8865  002062  0100               	movlb	0	; () banked
  8866  002064  239A               	addwfc	(_int_counter_1+1)& (0+255),f,b
  8867  002066  0100               	movlb	0	; () banked
  8868  002068  239B               	addwfc	(_int_counter_1+2)& (0+255),f,b
  8869  00206A  0100               	movlb	0	; () banked
  8870  00206C  239C               	addwfc	(_int_counter_1+3)& (0+255),f,b
  8871  00206E                     i2l4146:
  8872                           
  8873                           ;ABS_Code.c: 158: }
  8874                           ;ABS_Code.c: 159: }
  8875                           ;ABS_Code.c: 160: INTCONbits.INT0IF = 0;
  8876  00206E  92F2               	bcf	intcon,1,c	;volatile
  8877                           
  8878                           ;ABS_Code.c: 161: PORTCbits.RC1 = ~PORTCbits.RC1;
  8879  002070  7282               	btg	3970,1,c	;volatile
  8880  002072                     i2l4150:
  8881                           
  8882                           ;ABS_Code.c: 162: }
  8883                           ;ABS_Code.c: 165: if (INTCON3bits.INT1IF == 1) {
  8884  002072  A0F0               	btfss	intcon3,0,c	;volatile
  8885  002074  D038               	goto	i2l681
  8886                           
  8887                           ;ABS_Code.c: 166: if (y == 0) {
  8888  002076  0100               	movlb	(_y/(0+8)) shr (0+8)
  8889  002078  B042               	btfsc	_y/(0+8),_y& (0+7),c
  8890  00207A  D007               	goto	i2l4158
  8891                           
  8892                           ;ABS_Code.c: 167: TMR3H = 0x00;
  8893  00207C  0E00               	movlw	0
  8894  00207E  6EB3               	movwf	4019,c	;volatile
  8895                           
  8896                           ;ABS_Code.c: 168: TMR3L = 0x00;
  8897  002080  0E00               	movlw	0
  8898  002082  6EB2               	movwf	4018,c	;volatile
  8899                           
  8900                           ;ABS_Code.c: 169: y = 1;
  8901  002084  0100               	movlb	(_y/(0+8)) shr (0+8)
  8902  002086  8042               	bsf	_y/(0+8),_y& (0+7),c
  8903                           
  8904                           ;ABS_Code.c: 170: } else {
  8905  002088  D02D               	goto	i2l4172
  8906  00208A                     i2l4158:
  8907                           
  8908                           ;ABS_Code.c: 171: gap_time_2 = (TMR3H <<8) + TMR3L;
  8909  00208A  50B3               	movf	4019,w,c	;volatile
  8910  00208C  0100               	movlb	0	; () banked
  8911  00208E  6F69               	movwf	(??_ISR_Alta+1)& (0+255),b
  8912  002090  6B68               	clrf	??_ISR_Alta& (0+255),b
  8913  002092  50B2               	movf	4018,w,c	;volatile
  8914  002094  0100               	movlb	0	; () banked
  8915  002096  2568               	addwf	??_ISR_Alta& (0+255),w,b
  8916  002098  6E2F               	movwf	_gap_time_2,c
  8917  00209A  0E00               	movlw	0
  8918  00209C  0100               	movlb	0	; () banked
  8919  00209E  2169               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8920  0020A0  6E30               	movwf	_gap_time_2+1,c
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;ABS_Code.c: 172: gap_time_2 = gap_time_2 / 500;
  8924  0020A2  C02F  F01E         	movff	_gap_time_2,i2___lwdiv@dividend
  8925  0020A6  C030  F01F         	movff	_gap_time_2+1,i2___lwdiv@dividend+1
  8926  0020AA  0E01               	movlw	1
  8927  0020AC  6E21               	movwf	i2___lwdiv@divisor+1,c
  8928  0020AE  0EF4               	movlw	244
  8929  0020B0  6E20               	movwf	i2___lwdiv@divisor,c
  8930  0020B2  ECC6  F014         	call	i2___lwdiv	;wreg free
  8931  0020B6  C01E  F02F         	movff	?i2___lwdiv,_gap_time_2
  8932  0020BA  C01F  F030         	movff	?i2___lwdiv+1,_gap_time_2+1
  8933                           
  8934                           ;ABS_Code.c: 173: ENC2_measure = 1;
  8935  0020BE  0100               	movlb	(_ENC2_measure/(0+8)) shr (0+8)
  8936  0020C0  8241               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  8937                           
  8938                           ;ABS_Code.c: 174: TMR3H = 0x00;
  8939  0020C2  0E00               	movlw	0
  8940  0020C4  6EB3               	movwf	4019,c	;volatile
  8941                           
  8942                           ;ABS_Code.c: 175: TMR3H = 0x00;
  8943  0020C6  0E00               	movlw	0
  8944  0020C8  6EB3               	movwf	4019,c	;volatile
  8945                           
  8946                           ;ABS_Code.c: 176: if (count_flag == 1) {
  8947  0020CA  0100               	movlb	(_count_flag/(0+8)) shr (0+8)
  8948  0020CC  AA41               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8949  0020CE  D00A               	goto	i2l4172
  8950                           
  8951                           ;ABS_Code.c: 177: int_counter_2++;
  8952  0020D0  0E01               	movlw	1
  8953  0020D2  0100               	movlb	0	; () banked
  8954  0020D4  279D               	addwf	_int_counter_2& (0+255),f,b
  8955  0020D6  0E00               	movlw	0
  8956  0020D8  0100               	movlb	0	; () banked
  8957  0020DA  239E               	addwfc	(_int_counter_2+1)& (0+255),f,b
  8958  0020DC  0100               	movlb	0	; () banked
  8959  0020DE  239F               	addwfc	(_int_counter_2+2)& (0+255),f,b
  8960  0020E0  0100               	movlb	0	; () banked
  8961  0020E2  23A0               	addwfc	(_int_counter_2+3)& (0+255),f,b
  8962  0020E4                     i2l4172:
  8963                           
  8964                           ;ABS_Code.c: 178: }
  8965                           ;ABS_Code.c: 179: }
  8966                           ;ABS_Code.c: 180: INTCON3bits.INT1IF = 0;
  8967  0020E4  90F0               	bcf	intcon3,0,c	;volatile
  8968  0020E6                     i2l681:
  8969  0020E6  C07D  FFF5         	movff	??_ISR_Alta+21,tablat
  8970  0020EA  C07C  FFF8         	movff	??_ISR_Alta+20,tblptru
  8971  0020EE  C07B  FFF7         	movff	??_ISR_Alta+19,tblptrh
  8972  0020F2  C07A  FFF6         	movff	??_ISR_Alta+18,tblptrl
  8973  0020F6  C079  FFF4         	movff	??_ISR_Alta+17,prodh
  8974  0020FA  C078  FFF3         	movff	??_ISR_Alta+16,prodl
  8975  0020FE  C077  FFDA         	movff	??_ISR_Alta+15,fsr2h
  8976  002102  C076  FFD9         	movff	??_ISR_Alta+14,fsr2l
  8977  002106  C075  FFE2         	movff	??_ISR_Alta+13,fsr1h
  8978  00210A  C074  FFE1         	movff	??_ISR_Alta+12,fsr1l
  8979  00210E  C073  FFEA         	movff	??_ISR_Alta+11,fsr0h
  8980  002112  C072  FFE9         	movff	??_ISR_Alta+10,fsr0l
  8981  002116  C071  FFFB         	movff	??_ISR_Alta+9,pclatu
  8982  00211A  C070  FFFA         	movff	??_ISR_Alta+8,pclath
  8983  00211E  0011               	retfie		f
  8984  002120                     __end_of_ISR_Alta:
  8985                           	opt stack 0
  8986                           pclatu	equ	0xFFB
  8987                           pclath	equ	0xFFA
  8988                           tblptru	equ	0xFF8
  8989                           tblptrh	equ	0xFF7
  8990                           tblptrl	equ	0xFF6
  8991                           tablat	equ	0xFF5
  8992                           prodh	equ	0xFF4
  8993                           prodl	equ	0xFF3
  8994                           intcon	equ	0xFF2
  8995                           intcon2	equ	0xFF1
  8996                           intcon3	equ	0xFF0
  8997                           postinc0	equ	0xFEE
  8998                           fsr0h	equ	0xFEA
  8999                           fsr0l	equ	0xFE9
  9000                           wreg	equ	0xFE8
  9001                           postdec1	equ	0xFE5
  9002                           fsr1h	equ	0xFE2
  9003                           fsr1l	equ	0xFE1
  9004                           bsr	equ	0xFE0
  9005                           indf2	equ	0xFDF
  9006                           postinc2	equ	0xFDE
  9007                           postdec2	equ	0xFDD
  9008                           plusw2	equ	0xFDB
  9009                           fsr2h	equ	0xFDA
  9010                           fsr2l	equ	0xFD9
  9011                           status	equ	0xFD8
  9012                           
  9013 ;; *************** function i2___wmul *****************
  9014 ;; Defined at:
  9015 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;  multiplier      2   29[COMRAM] unsigned int 
  9018 ;;  multiplicand    2   31[COMRAM] unsigned int 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  __wmul          2   33[COMRAM] unsigned int 
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  2   29[COMRAM] unsigned int 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0, prodl, prodh
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9030 ;;      Params:         4       0       0       0
  9031 ;;      Locals:         2       0       0       0
  9032 ;;      Temps:          0       0       0       0
  9033 ;;      Totals:         6       0       0       0
  9034 ;;Total ram usage:        6 bytes
  9035 ;; Hardware stack levels used:    1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_ISR_Alta
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text20
  9044  002AD8                     __ptext20:
  9045                           	opt stack 0
  9046  002AD8                     i2___wmul:
  9047                           	opt stack 24
  9048                           
  9049                           ;incstack = 0
  9050  002AD8  501E               	movf	i2___wmul@multiplier,w,c
  9051  002ADA  0220               	mulwf	i2___wmul@multiplicand,c
  9052  002ADC  CFF3 F022          	movff	prodl,i2___wmul@product
  9053  002AE0  CFF4 F023          	movff	prodh,i2___wmul@product+1
  9054  002AE4  501E               	movf	i2___wmul@multiplier,w,c
  9055  002AE6  0221               	mulwf	i2___wmul@multiplicand+1,c
  9056  002AE8  50F3               	movf	prodl,w,c
  9057  002AEA  2623               	addwf	i2___wmul@product+1,f,c
  9058  002AEC  501F               	movf	i2___wmul@multiplier+1,w,c
  9059  002AEE  0220               	mulwf	i2___wmul@multiplicand,c
  9060  002AF0  50F3               	movf	prodl,w,c
  9061  002AF2  2623               	addwf	i2___wmul@product+1,f,c
  9062  002AF4  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  9063  002AF8  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  9064  002AFC  0012               	return	
  9065  002AFE                     __end_ofi2___wmul:
  9066                           	opt stack 0
  9067                           pclatu	equ	0xFFB
  9068                           pclath	equ	0xFFA
  9069                           tblptru	equ	0xFF8
  9070                           tblptrh	equ	0xFF7
  9071                           tblptrl	equ	0xFF6
  9072                           tablat	equ	0xFF5
  9073                           prodh	equ	0xFF4
  9074                           prodl	equ	0xFF3
  9075                           intcon	equ	0xFF2
  9076                           intcon2	equ	0xFF1
  9077                           intcon3	equ	0xFF0
  9078                           postinc0	equ	0xFEE
  9079                           fsr0h	equ	0xFEA
  9080                           fsr0l	equ	0xFE9
  9081                           wreg	equ	0xFE8
  9082                           postdec1	equ	0xFE5
  9083                           fsr1h	equ	0xFE2
  9084                           fsr1l	equ	0xFE1
  9085                           bsr	equ	0xFE0
  9086                           indf2	equ	0xFDF
  9087                           postinc2	equ	0xFDE
  9088                           postdec2	equ	0xFDD
  9089                           plusw2	equ	0xFDB
  9090                           fsr2h	equ	0xFDA
  9091                           fsr2l	equ	0xFD9
  9092                           status	equ	0xFD8
  9093                           
  9094 ;; *************** function i2___lwdiv *****************
  9095 ;; Defined at:
  9096 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  dividend        2   29[COMRAM] unsigned int 
  9099 ;;  divisor         2   31[COMRAM] unsigned int 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;  __lwdiv         2   33[COMRAM] unsigned int 
  9102 ;;  __lwdiv         1   35[COMRAM] unsigned char 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  2   29[COMRAM] unsigned int 
  9105 ;; Registers used:
  9106 ;;		wreg, status,2, status,0
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9112 ;;      Params:         4       0       0       0
  9113 ;;      Locals:         3       0       0       0
  9114 ;;      Temps:          0       0       0       0
  9115 ;;      Totals:         7       0       0       0
  9116 ;;Total ram usage:        7 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_ISR_Alta
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text21
  9126  00298C                     __ptext21:
  9127                           	opt stack 0
  9128  00298C                     i2___lwdiv:
  9129                           	opt stack 24
  9130                           
  9131                           ;incstack = 0
  9132  00298C  0E00               	movlw	0
  9133  00298E  6E23               	movwf	i2___lwdiv@quotient+1,c
  9134  002990  0E00               	movlw	0
  9135  002992  6E22               	movwf	i2___lwdiv@quotient,c
  9136  002994  5021               	movf	i2___lwdiv@divisor+1,w,c
  9137  002996  1020               	iorwf	i2___lwdiv@divisor,w,c
  9138  002998  B4D8               	btfsc	status,2,c
  9139  00299A  D01C               	goto	i2l1265
  9140  00299C  0E01               	movlw	1
  9141  00299E  6E24               	movwf	i2___lwdiv@counter,c
  9142  0029A0  D004               	goto	i2l3858
  9143  0029A2                     i2l3856:
  9144  0029A2  90D8               	bcf	status,0,c
  9145  0029A4  3620               	rlcf	i2___lwdiv@divisor,f,c
  9146  0029A6  3621               	rlcf	i2___lwdiv@divisor+1,f,c
  9147  0029A8  2A24               	incf	i2___lwdiv@counter,f,c
  9148  0029AA                     i2l3858:
  9149  0029AA  AE21               	btfss	i2___lwdiv@divisor+1,7,c
  9150  0029AC  D7FA               	goto	i2l3856
  9151  0029AE                     i2l3860:
  9152  0029AE  90D8               	bcf	status,0,c
  9153  0029B0  3622               	rlcf	i2___lwdiv@quotient,f,c
  9154  0029B2  3623               	rlcf	i2___lwdiv@quotient+1,f,c
  9155  0029B4  5020               	movf	i2___lwdiv@divisor,w,c
  9156  0029B6  5C1E               	subwf	i2___lwdiv@dividend,w,c
  9157  0029B8  5021               	movf	i2___lwdiv@divisor+1,w,c
  9158  0029BA  581F               	subwfb	i2___lwdiv@dividend+1,w,c
  9159  0029BC  A0D8               	btfss	status,0,c
  9160  0029BE  D005               	goto	i2l3868
  9161  0029C0  5020               	movf	i2___lwdiv@divisor,w,c
  9162  0029C2  5E1E               	subwf	i2___lwdiv@dividend,f,c
  9163  0029C4  5021               	movf	i2___lwdiv@divisor+1,w,c
  9164  0029C6  5A1F               	subwfb	i2___lwdiv@dividend+1,f,c
  9165  0029C8  8022               	bsf	i2___lwdiv@quotient,0,c
  9166  0029CA                     i2l3868:
  9167  0029CA  90D8               	bcf	status,0,c
  9168  0029CC  3221               	rrcf	i2___lwdiv@divisor+1,f,c
  9169  0029CE  3220               	rrcf	i2___lwdiv@divisor,f,c
  9170  0029D0  2E24               	decfsz	i2___lwdiv@counter,f,c
  9171  0029D2  D7ED               	goto	i2l3860
  9172  0029D4                     i2l1265:
  9173  0029D4  C022  F01E         	movff	i2___lwdiv@quotient,?i2___lwdiv
  9174  0029D8  C023  F01F         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  9175  0029DC  0012               	return	
  9176  0029DE                     __end_ofi2___lwdiv:
  9177                           	opt stack 0
  9178                           pclatu	equ	0xFFB
  9179                           pclath	equ	0xFFA
  9180                           tblptru	equ	0xFF8
  9181                           tblptrh	equ	0xFF7
  9182                           tblptrl	equ	0xFF6
  9183                           tablat	equ	0xFF5
  9184                           prodh	equ	0xFF4
  9185                           prodl	equ	0xFF3
  9186                           intcon	equ	0xFF2
  9187                           intcon2	equ	0xFF1
  9188                           intcon3	equ	0xFF0
  9189                           postinc0	equ	0xFEE
  9190                           fsr0h	equ	0xFEA
  9191                           fsr0l	equ	0xFE9
  9192                           wreg	equ	0xFE8
  9193                           postdec1	equ	0xFE5
  9194                           fsr1h	equ	0xFE2
  9195                           fsr1l	equ	0xFE1
  9196                           bsr	equ	0xFE0
  9197                           indf2	equ	0xFDF
  9198                           postinc2	equ	0xFDE
  9199                           postdec2	equ	0xFDD
  9200                           plusw2	equ	0xFDB
  9201                           fsr2h	equ	0xFDA
  9202                           fsr2l	equ	0xFD9
  9203                           status	equ	0xFD8
  9204                           
  9205 ;; *************** function i2___awdiv *****************
  9206 ;; Defined at:
  9207 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awdiv.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  dividend        2    0[BANK0 ] int 
  9210 ;;  divisor         2    2[BANK0 ] int 
  9211 ;; Auto vars:     Size  Location     Type
  9212 ;;  __awdiv         2    6[BANK0 ] int 
  9213 ;;  __awdiv         1    5[BANK0 ] unsigned char 
  9214 ;;  __awdiv         1    4[BANK0 ] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  2    0[BANK0 ] int 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, prodl
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9224 ;;      Params:         0       4       0       0
  9225 ;;      Locals:         0       4       0       0
  9226 ;;      Temps:          0       0       0       0
  9227 ;;      Totals:         0       8       0       0
  9228 ;;Total ram usage:        8 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; This function calls:
  9231 ;;		Nothing
  9232 ;; This function is called by:
  9233 ;;		_ISR_Alta
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text22
  9238  00276C                     __ptext22:
  9239                           	opt stack 0
  9240  00276C                     i2___awdiv:
  9241                           	opt stack 24
  9242                           
  9243                           ;incstack = 0
  9244  00276C  0E00               	movlw	0
  9245  00276E  0100               	movlb	0	; () banked
  9246  002770  6F65               	movwf	i2___awdiv@sign& (0+255),b
  9247                           
  9248                           ; BSR set to: 0
  9249  002772  0100               	movlb	0	; () banked
  9250  002774  5163               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9251  002776  0A80               	xorlw	128
  9252  002778  6EF3               	movwf	prodl,c
  9253  00277A  0E80               	movlw	128
  9254  00277C  5CF3               	subwf	prodl,w,c
  9255  00277E  0E00               	movlw	0
  9256  002780  B4D8               	btfsc	status,2,c
  9257  002782  5D62               	subwf	i2___awdiv@divisor& (0+255),w,b
  9258  002784  B0D8               	btfsc	status,0,c
  9259  002786  D009               	goto	i2l4072
  9260                           
  9261                           ; BSR set to: 0
  9262  002788  0100               	movlb	0	; () banked
  9263  00278A  6D62               	negf	i2___awdiv@divisor& (0+255),b
  9264  00278C  0100               	movlb	0	; () banked
  9265  00278E  1F63               	comf	(i2___awdiv@divisor+1)& (0+255),f,b
  9266  002790  B0D8               	btfsc	status,0,c
  9267  002792  2B63               	incf	(i2___awdiv@divisor+1)& (0+255),f,b
  9268                           
  9269                           ; BSR set to: 0
  9270  002794  0E01               	movlw	1
  9271  002796  0100               	movlb	0	; () banked
  9272  002798  6F65               	movwf	i2___awdiv@sign& (0+255),b
  9273  00279A                     i2l4072:
  9274                           
  9275                           ; BSR set to: 0
  9276  00279A  0100               	movlb	0	; () banked
  9277  00279C  5161               	movf	(i2___awdiv@dividend+1)& (0+255),w,b
  9278  00279E  0A80               	xorlw	128
  9279  0027A0  6EF3               	movwf	prodl,c
  9280  0027A2  0E80               	movlw	128
  9281  0027A4  5CF3               	subwf	prodl,w,c
  9282  0027A6  0E00               	movlw	0
  9283  0027A8  B4D8               	btfsc	status,2,c
  9284  0027AA  5D60               	subwf	i2___awdiv@dividend& (0+255),w,b
  9285  0027AC  B0D8               	btfsc	status,0,c
  9286  0027AE  D009               	goto	i2l4078
  9287                           
  9288                           ; BSR set to: 0
  9289  0027B0  0100               	movlb	0	; () banked
  9290  0027B2  6D60               	negf	i2___awdiv@dividend& (0+255),b
  9291  0027B4  0100               	movlb	0	; () banked
  9292  0027B6  1F61               	comf	(i2___awdiv@dividend+1)& (0+255),f,b
  9293  0027B8  B0D8               	btfsc	status,0,c
  9294  0027BA  2B61               	incf	(i2___awdiv@dividend+1)& (0+255),f,b
  9295                           
  9296                           ; BSR set to: 0
  9297  0027BC  0E01               	movlw	1
  9298  0027BE  0100               	movlb	0	; () banked
  9299  0027C0  1B65               	xorwf	i2___awdiv@sign& (0+255),f,b
  9300  0027C2                     i2l4078:
  9301                           
  9302                           ; BSR set to: 0
  9303  0027C2  0E00               	movlw	0
  9304  0027C4  0100               	movlb	0	; () banked
  9305  0027C6  6F67               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9306  0027C8  0E00               	movlw	0
  9307  0027CA  0100               	movlb	0	; () banked
  9308  0027CC  6F66               	movwf	i2___awdiv@quotient& (0+255),b
  9309                           
  9310                           ; BSR set to: 0
  9311  0027CE  0100               	movlb	0	; () banked
  9312  0027D0  5163               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9313  0027D2  1162               	iorwf	i2___awdiv@divisor& (0+255),w,b
  9314  0027D4  B4D8               	btfsc	status,2,c
  9315  0027D6  D02C               	goto	i2l4100
  9316                           
  9317                           ; BSR set to: 0
  9318  0027D8  0E01               	movlw	1
  9319  0027DA  0100               	movlb	0	; () banked
  9320  0027DC  6F64               	movwf	i2___awdiv@counter& (0+255),b
  9321  0027DE  D006               	goto	i2l4086
  9322  0027E0                     i2l4084:
  9323                           
  9324                           ; BSR set to: 0
  9325  0027E0  0100               	movlb	0	; () banked
  9326  0027E2  90D8               	bcf	status,0,c
  9327  0027E4  3762               	rlcf	i2___awdiv@divisor& (0+255),f,b
  9328  0027E6  3763               	rlcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9329  0027E8  0100               	movlb	0	; () banked
  9330  0027EA  2B64               	incf	i2___awdiv@counter& (0+255),f,b
  9331  0027EC                     i2l4086:
  9332                           
  9333                           ; BSR set to: 0
  9334  0027EC  0100               	movlb	0	; () banked
  9335  0027EE  AF63               	btfss	(i2___awdiv@divisor+1)& (0+255),7,b
  9336  0027F0  D7F7               	goto	i2l4084
  9337  0027F2                     i2l4088:
  9338                           
  9339                           ; BSR set to: 0
  9340  0027F2  0100               	movlb	0	; () banked
  9341  0027F4  90D8               	bcf	status,0,c
  9342  0027F6  3766               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9343  0027F8  3767               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9344                           
  9345                           ; BSR set to: 0
  9346  0027FA  0100               	movlb	0	; () banked
  9347  0027FC  5162               	movf	i2___awdiv@divisor& (0+255),w,b
  9348  0027FE  0100               	movlb	0	; () banked
  9349  002800  5D60               	subwf	i2___awdiv@dividend& (0+255),w,b
  9350  002802  0100               	movlb	0	; () banked
  9351  002804  5163               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9352  002806  0100               	movlb	0	; () banked
  9353  002808  5961               	subwfb	(i2___awdiv@dividend+1)& (0+255),w,b
  9354  00280A  A0D8               	btfss	status,0,c
  9355  00280C  D00A               	goto	i2l4096
  9356                           
  9357                           ; BSR set to: 0
  9358  00280E  0100               	movlb	0	; () banked
  9359  002810  5162               	movf	i2___awdiv@divisor& (0+255),w,b
  9360  002812  0100               	movlb	0	; () banked
  9361  002814  5F60               	subwf	i2___awdiv@dividend& (0+255),f,b
  9362  002816  0100               	movlb	0	; () banked
  9363  002818  5163               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9364  00281A  0100               	movlb	0	; () banked
  9365  00281C  5B61               	subwfb	(i2___awdiv@dividend+1)& (0+255),f,b
  9366                           
  9367                           ; BSR set to: 0
  9368  00281E  0100               	movlb	0	; () banked
  9369  002820  8166               	bsf	i2___awdiv@quotient& (0+255),0,b
  9370  002822                     i2l4096:
  9371                           
  9372                           ; BSR set to: 0
  9373  002822  0100               	movlb	0	; () banked
  9374  002824  90D8               	bcf	status,0,c
  9375  002826  3363               	rrcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9376  002828  3362               	rrcf	i2___awdiv@divisor& (0+255),f,b
  9377                           
  9378                           ; BSR set to: 0
  9379  00282A  0100               	movlb	0	; () banked
  9380  00282C  2F64               	decfsz	i2___awdiv@counter& (0+255),f,b
  9381  00282E  D7E1               	goto	i2l4088
  9382  002830                     i2l4100:
  9383                           
  9384                           ; BSR set to: 0
  9385  002830  0100               	movlb	0	; () banked
  9386  002832  5165               	movf	i2___awdiv@sign& (0+255),w,b
  9387  002834  B4D8               	btfsc	status,2,c
  9388  002836  D006               	goto	i2l4104
  9389                           
  9390                           ; BSR set to: 0
  9391  002838  0100               	movlb	0	; () banked
  9392  00283A  6D66               	negf	i2___awdiv@quotient& (0+255),b
  9393  00283C  0100               	movlb	0	; () banked
  9394  00283E  1F67               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9395  002840  B0D8               	btfsc	status,0,c
  9396  002842  2B67               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9397  002844                     i2l4104:
  9398                           
  9399                           ; BSR set to: 0
  9400  002844  C066  F060         	movff	i2___awdiv@quotient,?i2___awdiv
  9401  002848  C067  F061         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9402                           
  9403                           ; BSR set to: 0
  9404                           
  9405                           ; BSR set to: 0
  9406  00284C  0012               	return	
  9407  00284E                     __end_ofi2___awdiv:
  9408                           	opt stack 0
  9409                           pclatu	equ	0xFFB
  9410                           pclath	equ	0xFFA
  9411                           tblptru	equ	0xFF8
  9412                           tblptrh	equ	0xFF7
  9413                           tblptrl	equ	0xFF6
  9414                           tablat	equ	0xFF5
  9415                           prodh	equ	0xFF4
  9416                           prodl	equ	0xFF3
  9417                           intcon	equ	0xFF2
  9418                           intcon2	equ	0xFF1
  9419                           intcon3	equ	0xFF0
  9420                           postinc0	equ	0xFEE
  9421                           fsr0h	equ	0xFEA
  9422                           fsr0l	equ	0xFE9
  9423                           wreg	equ	0xFE8
  9424                           postdec1	equ	0xFE5
  9425                           fsr1h	equ	0xFE2
  9426                           fsr1l	equ	0xFE1
  9427                           bsr	equ	0xFE0
  9428                           indf2	equ	0xFDF
  9429                           postinc2	equ	0xFDE
  9430                           postdec2	equ	0xFDD
  9431                           plusw2	equ	0xFDB
  9432                           fsr2h	equ	0xFDA
  9433                           fsr2l	equ	0xFD9
  9434                           status	equ	0xFD8
  9435                           
  9436 ;; *************** function _WriteTimer0 *****************
  9437 ;; Defined at:
  9438 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0write.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  timer0          2   29[COMRAM] unsigned int 
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  timer           2   31[COMRAM] struct Timers
  9443 ;; Return value:  Size  Location     Type
  9444 ;;		None               void
  9445 ;; Registers used:
  9446 ;;		None
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9452 ;;      Params:         2       0       0       0
  9453 ;;      Locals:         2       0       0       0
  9454 ;;      Temps:          0       0       0       0
  9455 ;;      Totals:         4       0       0       0
  9456 ;;Total ram usage:        4 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_ISR_Alta
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text23
  9466  002B4E                     __ptext23:
  9467                           	opt stack 0
  9468  002B4E                     _WriteTimer0:
  9469                           	opt stack 24
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;incstack = 0
  9473  002B4E  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9474  002B52  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9475  002B56  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9476  002B5A  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9477  002B5E  0012               	return	
  9478  002B60                     __end_of_WriteTimer0:
  9479                           	opt stack 0
  9480  0000                     pclatu	equ	0xFFB
  9481                           pclath	equ	0xFFA
  9482                           tblptru	equ	0xFF8
  9483                           tblptrh	equ	0xFF7
  9484                           tblptrl	equ	0xFF6
  9485                           tablat	equ	0xFF5
  9486                           prodh	equ	0xFF4
  9487                           prodl	equ	0xFF3
  9488                           intcon	equ	0xFF2
  9489                           intcon2	equ	0xFF1
  9490                           intcon3	equ	0xFF0
  9491                           postinc0	equ	0xFEE
  9492                           fsr0h	equ	0xFEA
  9493                           fsr0l	equ	0xFE9
  9494                           wreg	equ	0xFE8
  9495                           postdec1	equ	0xFE5
  9496                           fsr1h	equ	0xFE2
  9497                           fsr1l	equ	0xFE1
  9498                           bsr	equ	0xFE0
  9499                           indf2	equ	0xFDF
  9500                           postinc2	equ	0xFDE
  9501                           postdec2	equ	0xFDD
  9502                           plusw2	equ	0xFDB
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8
  9506                           pclatu	equ	0xFFB
  9507                           pclath	equ	0xFFA
  9508                           tblptru	equ	0xFF8
  9509                           tblptrh	equ	0xFF7
  9510                           tblptrl	equ	0xFF6
  9511                           tablat	equ	0xFF5
  9512                           prodh	equ	0xFF4
  9513                           prodl	equ	0xFF3
  9514                           intcon	equ	0xFF2
  9515                           intcon2	equ	0xFF1
  9516                           intcon3	equ	0xFF0
  9517                           postinc0	equ	0xFEE
  9518                           fsr0h	equ	0xFEA
  9519                           fsr0l	equ	0xFE9
  9520                           wreg	equ	0xFE8
  9521                           postdec1	equ	0xFE5
  9522                           fsr1h	equ	0xFE2
  9523                           fsr1l	equ	0xFE1
  9524                           bsr	equ	0xFE0
  9525                           indf2	equ	0xFDF
  9526                           postinc2	equ	0xFDE
  9527                           postdec2	equ	0xFDD
  9528                           plusw2	equ	0xFDB
  9529                           fsr2h	equ	0xFDA
  9530                           fsr2l	equ	0xFD9
  9531                           status	equ	0xFD8
  9532                           
  9533                           	psect	rparam
  9534  0000                     pclatu	equ	0xFFB
  9535                           pclath	equ	0xFFA
  9536                           tblptru	equ	0xFF8
  9537                           tblptrh	equ	0xFF7
  9538                           tblptrl	equ	0xFF6
  9539                           tablat	equ	0xFF5
  9540                           prodh	equ	0xFF4
  9541                           prodl	equ	0xFF3
  9542                           intcon	equ	0xFF2
  9543                           intcon2	equ	0xFF1
  9544                           intcon3	equ	0xFF0
  9545                           postinc0	equ	0xFEE
  9546                           fsr0h	equ	0xFEA
  9547                           fsr0l	equ	0xFE9
  9548                           wreg	equ	0xFE8
  9549                           postdec1	equ	0xFE5
  9550                           fsr1h	equ	0xFE2
  9551                           fsr1l	equ	0xFE1
  9552                           bsr	equ	0xFE0
  9553                           indf2	equ	0xFDF
  9554                           postinc2	equ	0xFDE
  9555                           postdec2	equ	0xFDD
  9556                           plusw2	equ	0xFDB
  9557                           fsr2h	equ	0xFDA
  9558                           fsr2l	equ	0xFD9
  9559                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      66
    BANK0           160     57     117
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___lwdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13374
                                             56 BANK0      1     1      0
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___lwdiv
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 3     3      0    3552
                                             46 BANK0      3     3      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             30 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6833
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     899
                                             36 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     621
                                             30 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             44 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             30 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             30 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     570
                                             30 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             30 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1186
                                              8 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                          i2___lwdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     266
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                              0 BANK0      8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___lwdiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___lwdiv
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     39      75       4       73.1%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     24      42       1       69.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B7       9        0.0%
DATA                 0      0      B7      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Feb 01 12:49:19 2016

           ??_CANisTXwarningON 007E                              _x 020F                              _y 0210  
         __end_of_CANSetFilter 0D36                   ___awdiv@sign 0083                             bsr 000FE0  
          ___wmul@multiplicand 0080             i2___lwdiv@dividend 001E                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000  
                  __CFG_LVP$ON 000000                            l400 1022                            l401 1136  
                          l410 121A                            l402 10B8                            l403 10C2  
                          l500 07EC                            l404 10CC                            l501 07F0  
                          l413 12F0                            l405 10D6                            l510 0918  
                          l502 07FC                            l422 14DC                            l414 12F4  
                          l511 0924                            l423 14E0                            l415 1408  
                          l520 0A4C                            l512 0928                            l424 14EC  
                          l416 138A                            l408 120A                            l521 0A50  
                          l513 0934                            l505 08F4                            l417 1394  
                          l409 120E                            l530 0B78                            l522 0A5C  
                          l506 08F8                            l418 139E                            l531 0B84  
                          l523 0A60                            l507 0904                            l419 13A8  
                          l540 0CAC                            l532 0B88                            l524 0A6C  
                          l516 0A2C                            l508 0908                            l460 1CF4  
                          l452 1CB4                            l541 0CB0                            l533 0B94  
                          l517 0A30                            l509 0914                            l453 1CB8  
                          l542 0CBC                            l534 0B98                            l518 0A3C  
                          l470 1E1C                            l454 1CC4                            l390 0E04  
                          l702 2384                            l543 0CC0                            l535 0BA4  
                          l527 0B64                            l519 0A40                            l471 1E28  
                          l463 1DE8                            l455 1CC8                            l383 1008  
                          l711 2424                            l703 23CC                            l544 0CCC  
                          l528 0B68                            l464 1DEC                            l456 1CD4  
                          l384 0D4C                            l545 0CD0                            l529 0B74  
                          l465 1DF8                            l473 1E80                            l457 1CD8  
                          l393 0F38                            l385 0D50                            l546 0CDC  
                          l538 0C9C                            l490 06BA                            l466 1DFC  
                          l458 1CE4                            l378 21F0                            l394 0F3C  
                          l386 0E64                            l563 2B6A                            l539 0CA0  
                          l491 06C6                            l483 0686                            l467 1E08  
                          l459 1CE8                            l379 21FA                            l395 0F48  
                          l387 0DE6                            l548 0D34                            l484 068A  
                          l468 1E0C                            l388 0DF0                            l724 2684  
                          l716 248A                            l485 0696                            l469 1E18  
                          l397 15AA                            l389 0DFA                            l566 2B76  
                          l494 07BC                            l486 069A                            l398 12DA  
                          l734 2688                            l495 07C0                            l487 06A6  
                          l399 101E                            l496 07CC                            l488 06AA  
                          l576 2B1C                            l737 2A26                            l497 07D0  
                          l489 06B6                            l498 07DC                            l499 07E0  
                          l589 2A96                            l696 2376                            l698 2372  
                          l699 2378                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
         __size_of_WriteTimer0 0012                            _msg 0031                            fsr2 000FD9  
                          wreg 000FE8                   __CFG_WDT$OFF 000000                           l3120 0CE0  
                         l3024 098C                           l4000 239E                           l1265 2982  
                         l3018 0938                           l3052 0A70                           l4012 23D0  
                         l4004 23AC                           l4030 247E                           l3312 11FE  
                         l3216 0E0E                           l4040 24DC                           l4024 2448  
                         l4008 23BC                           l3058 0AC4                           l3170 21E8  
                         l3242 0F4C                           l4026 2476                           l3092 0BFC  
                         l3236 0F2C                           l3086 0BA8                           l3318 121E  
                         l4038 24AE                           l3440 26B8                           l3176 2206  
                         l3178 2248                           l3452 26FE                           l2716 2B2A  
                         l3428 2A88                           l3292 10E0                           l3454 270A  
                         l3446 26E0                           l2750 1C1A                           l2734 1B4E  
                         l3472 2762                           l3464 2740                           l3456 2710  
                         l2904 051A                           l2832 01DC                           l2808 1E2C  
                         l3368 13B2                           l2922 05EA                           l2850 02AA  
                         l3394 14F0                           l3468 274E                           l3388 14D0  
                         l2950 06CA                           l2782 1D4C                           l2776 1CF8  
                         l3752 2572                           l3746 2530                           l2956 071E  
                         l2868 037A                           l2990 0854                           l2886 044A  
                         l3774 2672                           l3758 25B6                           l3784 2932  
                         l2984 0800                           l3786 293E                           l3796 2974  
                         l3788 2944                           l3984 234E                           l3994 238C  
                         u3100 0A98                           u3020 0960                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         u3105 0A8C                           u3025 0954                           _LATE 000F8D  
                         u2330 1ABC                           u2335 1AB0                           u4040 2B68  
                         u3400 0E90                           u2345 1B2A                           u4050 2B74  
                         u2610 0218                           u2370 1B88                           u3260 0D08  
                         u3180 0BD0                           u2540 1E54                           u2460 1D20  
                         u3405 0E84                           u2615 020C                           u2375 1B7C  
                         u3415 0EFE                           u3520 1108                           u3265 0CFC  
                         u3185 0BC4                           u2705 0426                           u2625 0286  
                         u2545 1E48                           u2465 1D14                           u2385 1BF6  
                         u2730 0488                           u2650 02E8                           u2570 014A  
                         u3530 1162                           u3525 10FC                           u3390 0E36  
                         u2735 047C                           u2655 02DC                           u2575 013E  
                         u3535 1156                           u2745 04F6                           u2665 0356  
                         u2585 01B8                           u3545 11D0                           u2770 0558  
                         u2690 03B8                           u3650 13DA                           u3395 0E2A  
                         u2940 0828                           u2860 06F2                           u3660 1434  
                         u2775 054C                           u2695 03AC                           u3655 13CE  
                         u2945 081C                           u2865 06E6                           u2785 05C6  
                         u3665 1428                           u3675 14A2                           u4737 2A8A  
          __size_of_CANSetMask 0402                           _main 231C                           _read 00B9  
                         fsr0h 000FEA                           fsr1h 000FE2             i2___lwdiv@quotient 0022  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _step 00BA  
             __end_of_ADC_Read 2A64                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 0108                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000               _CANOperationMode 2B22                   _status_array 00CD  
              _brake_value_inc 00B7           _remote_frame_handler 24E6     __size_of_CANreceiveMessage 04D4  
                        ?_main 0001                __end_of___awdiv 276C                          _T0CON 000FD5  
              ___awdiv@divisor 0080                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 00F0                __end_of___lwdiv 298C                          i1l430 1834  
                        i1l437 17F6                          i1l446 1A46                          i1l438 1A7E  
                        i1l581 2B4A                          i1l690 00B8                          i1l692 00C2  
                        i1l684 00AE                          i1l687 00AA                          i2l681 20E6  
              ___awdiv@counter 0082                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2              _CANisRxReady$3284 0001                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 2120  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 0090  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0208           __end_of_CANisRxReady 2B4E  
                        tablat 000FF5           __end_of_CANisTxReady 2B22               __end_ofi2___wmul 2AFE  
                        plusw2 000FDB                          status 000FD8             __size_ofi2___awdiv 00E2  
               __CFG_PBADEN$ON 000000             __size_ofi2___lwdiv 0052                __initialization 29DE  
                 __end_of_main 24E6  __size_of_board_initialization 00C6               _brake_signal_CAN 00B6  
        ?_remote_frame_handler 0001                         ??_main 0098                  __activetblptr 000002  
            _CANisTxReady$3282 007E                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 007E                __CFG_BBSIZ$1024 000000  
                       i1l3600 1A36                         i1l3520 173E                         i1l3604 1A7C  
                       i1l3540 17E4                         i1l3532 17C0                         i1l3536 17D2  
                       i1l3528 17AE                         i1l3544 182E                         i1l3580 199C  
                       i1l3592 1A16                         i2l1265 29D4                         i2l4100 2830  
                       i1l3596 1A26                         i1l3588 1A06                         i2l4104 2844  
                       i2l4120 1FEE                         i1l3960 0094                         i1l3952 0064  
                       i2l4122 1FFA                         i2l4132 2014                         i2l4124 1FFC  
                       i2l4150 2072                         i2l4072 279A                         i2l4146 206E  
                       i2l4084 27E0                         i2l4172 20E4                         i2l4086 27EC  
                       i2l4078 27C2                         i2l4158 208A                         i2l4096 2822  
                       i2l4088 27F2                         i2l3860 29AE                         i2l3856 29A2  
                       i2l3858 29AA                         i2l3868 29CA                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB1D0 000F56                         _RXB0D4 000F6A                         _RXB1D1 000F57  
                       _RXB0D5 000F6B                         _RXB1D2 000F58                         _RXB0D6 000F6C  
                       _RXB1D3 000F59                         _RXB0D7 000F6D                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 0082             CANsendMessage@tamp 008A              __end_of_ISR_Bassa 0108  
             __end_of_delay_ms 2AA2          __size_of_CANSetFilter 0C2A                 __CFG_XINST$OFF 000000  
                       ___wmul 2AA2                      ??___awdiv 0082                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 0082                   ??_CANSetMask 0083                         clear_0 29E4  
                       clear_1 29F4               ___awdiv@quotient 0084                 i2___awdiv@sign 0065  
              __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 284E                      ?_ADC_Read 0001  
            __end_ofi2___lwdiv 29DE                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                  _home_position 00B8                   _CANSetFilter 010C  
                   __accesstop 0060        __end_of__initialization 2A1A             __end_of_CANSetMask 1E82  
    __size_of_CANisRXwarningON 000C                 __pcstackCOMRAM 0001                      ?_ISR_Alta 0001  
                 __pidataBANK0 2B78         ??_remote_frame_handler 008E                   _ENC1_measure 0208  
        CANSetFilter@numBuffer 0087                      ?i2___wmul 001E      __size_of_CANisTXwarningON 000C  
                 _ENC2_measure 0209                     ??_ADC_Read 0086          __size_of_CANisRxReady 0016  
        __size_of_CANisTxReady 0024       __end_of_CANOperationMode 2B38                     __pbssBANK0 0099  
      __size_of_CANsendMessage 0876                     ??_ISR_Alta 0068                        ?___wmul 007E  
                   _gap_time_1 002D                     _gap_time_2 002F               WriteTimer0@timer 0020  
                ??_WriteTimer0 0020                   _CANisRxReady 2B38                        _CANSTAT 000F6E  
                 _CANisTxReady 2AFE                        _BRGCON1 000F70                        _BRGCON2 000F71  
                      _BRGCON3 000F72                     ??i2___wmul 0022                  _int_counter_1 0099  
                _int_counter_2 009D         __size_of_CANInitialize 01FC                      ?_delay_ms 0084  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25                     _distance_1 00B1                     _distance_2 00B3  
          CANsendMessage@flags 0085                     _count_flag 020D                        __Hparam 0000  
                      __Lparam 0000               delay_ms@value_ms 0084                        ___awdiv 268A  
              __size_of___wmul 0036                        ___lwdiv 2914           CANInitialize@propSeg 0095  
                      __pcinit 29DE                        __ramtop 0300                        __ptext0 231C  
                      __ptext1 24E6                        __ptext2 0D36                        __ptext3 2AFE  
                      __ptext4 284E                        __ptext5 2A64                        __ptext6 2AA2  
                      __ptext7 2120                        __ptext8 1A80                        __ptext9 010C  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T3CONbits 000FB1  
          __end_of_WriteTimer0 2B60                     ??_delay_ms 0086         CANreceiveMessage@error 000B  
 __end_of_board_initialization 2914                 __pintcode_body 1E82           end_of_initialization 2A1A  
                _Analogic_Mode 00B5                  __Lmediumconst 0000                        int_func 1E82  
          i2___wmul@multiplier 001E               _CANisRXwarningON 2B6C                  _CANInitialize 2120  
                    _ISR_Bassa 0018                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc2 000FDE                      _PORTAbits 000F80  
               CANSetMask@mask 007E                      _PORTCbits 000F82              _correction_factor 00AF  
               CANSetMask@tamp 0088                 CANSetMask@type 0082               _CANisTXwarningON 2B60  
            __size_of_ADC_Read 0040                      i2___awdiv 276C              i2___lwdiv@divisor 0020  
                    i2___lwdiv 298C              i2___lwdiv@counter 0024        _clock_counter_reference 00AD  
               _CANsendMessage 0D36               CANInitialize@BRP 008F               CANInitialize@SJW 008E  
               ?_CANInitialize 008C             i2___awdiv@dividend 0060                     ?_ISR_Bassa 0001  
            __size_of_ISR_Alta 2118                 __end_of___wmul 2AD8                    _WriteTimer0 2B4E  
             i2___wmul@product 0022            start_initialization 29DE             i2___awdiv@quotient 0066  
            __size_ofi2___wmul 0026            CANSetMask@numBuffer 0087                     ?i2___awdiv 0060  
       __end_of_CANsendMessage 15AC                     ?i2___lwdiv 001E              ?_CANOperationMode 0001  
           ??_CANOperationMode 007E     CANInitialize@FilterConfig1 0096     CANInitialize@FilterConfig2 0097  
         _board_initialization 284E                       ??___wmul 0082                    __pdataBANK0 00CC  
             __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 01A4             _brake_value_degree 0040  
       CANInitialize@phaseSeg1 008C         CANInitialize@phaseSeg2 008D                    __pbssCOMRAM 0025  
                __pcstackBANK0 0060                    _BRGCON2bits 000F71                    _BRGCON3bits 000F72  
            __size_of_delay_ms 003E                ?_CANsendMessage 007E                ??_CANInitialize 0091  
           CANSetFilter@filter 007E               ___lwdiv@dividend 007E          ?_board_initialization 0001  
                  ??_ISR_Bassa 000D                      __pintcode 0008                       ?___awdiv 007E  
                     ?___lwdiv 007E                    __pintcodelo 0018              WriteTimer0@timer0 001E  
     __end_of_CANisRXwarningON 2B78                    _brake_value 00CB                    _COMSTATbits 000F74  
                     _ADC_Read 2A24               ___lwdiv@quotient 0082                    ??i2___awdiv 0024  
                  ??i2___lwdiv 0022          CANreceiveMessage@tamp 000C                 ___wmul@product 0082  
                     _IPR1bits 000F9F                       _IPR2bits 000FA2   _delay_quartz_frequency_value 00CC  
                     _PIE1bits 000F9D                       _IPR3bits 000FA5                       _PIE2bits 000FA0  
                     _PIE3bits 000FA3       __end_of_CANisTXwarningON 2B6C                       i1u403_25 1A52  
                     i1u383_20 1674                       i1u383_26 1676                       i1u384_20 16A2  
                     i1u392_25 1804                       i1u384_26 16A4                       i1u394_20 18DC  
                     i1u386_25 16BA                       i1u394_26 18DE                       i1u395_20 1906  
                     i1u395_26 1908                       i1u397_25 191A                       _PIR1bits 000F9E  
                     _PIR2bits 000FA1                       _PIR3bits 000FA4                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                      _timer_off 0025  
                     _RXM0SIDH 000F18                       _RXM0SIDL 000F19                       _RXM1SIDH 000F1C  
                     _RXM1SIDL 000F1D                       _RXERRCNT 000F75                       _TXERRCNT 000F76  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0              ___wmul@multiplier 007E  
                     i2___wmul 2AD8              i2___awdiv@divisor 0062              i2___awdiv@counter 0064  
                ?_CANSetFilter 007E                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 2A0E                     _CANCONbits 000F6F                       __Hrparam 0000  
                 _RXB0SIDLbits 000F62         ??_board_initialization 0098                       __Lrparam 0000  
                 _RXB1SIDLbits 000F52                     _CANSetMask 1A80               __size_of___awdiv 00E2  
        i2___wmul@multiplicand 0020               __size_of___lwdiv 0078                _remote_frame_id 00A1  
                     _Tx_retry 020C                   ?_WriteTimer0 001E                   _RXF0SIDLbits 000F01  
                     _delay_ms 2A64                ___lwdiv@divisor 0080                   _RXF1SIDLbits 000F05  
                _TMR1_overflow 020A                ___lwdiv@counter 0084                 ??_CANSetFilter 0083  
                     __ptext10 2B22                       __ptext11 2914                       __ptext20 2AD8  
                     __ptext12 2B60                       __ptext21 298C                       __ptext13 2B6C  
                     __ptext22 276C                       __ptext14 2A24                       __ptext23 2B4E  
                     __ptext15 268A                       __ptext17 15AC                       __ptext18 2B38  
                 _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11  
                 _RXF5SIDLbits 000F15       CANsendMessage@dataLength 0084                   _remote_frame 020E  
                _TMR3_overflow 020B                  __size_of_main 01CA           CANreceiveMessage@msg 0001  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 0029  
                 _TXB2SIDLbits 000F22      __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001  
                ?_CANisTxReady 0001                    _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55  
                 _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60                    _RXB1CONbits 000F50  
            _CANreceiveMessage 15AC                   _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2  
             ??_CANsendMessage 0086                  _wheel_speed_1 00A5                  _wheel_speed_2 00A9  
           ?_CANreceiveMessage 0001       CANsendMessage@identifier 007E   __end_of_remote_frame_handler 268A  
                     intlevel1 0000                       intlevel2 0000               CANSetFilter@tamp 0088  
             CANSetFilter@type 0082            ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45  
                  _TXB1DLCbits 000F35                    _TXB0CONbits 000F40                    _TXB2DLCbits 000F25  
                  _TXB1CONbits 000F30                    _TXB2CONbits 000F20           CANOperationMode@mode 007E  
               ??_CANisRxReady 0001                    ?_CANSetMask 007E                 ??_CANisTxReady 007E  
               _distance_array 00BB      __end_of_CANreceiveMessage 1A80              ?_CANisRXwarningON 0001  
                  _speed_array 00C3             ??_CANisRXwarningON 007E          __end_of_CANInitialize 231C  
            ?_CANisTXwarningON 0001  
