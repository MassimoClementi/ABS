

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jun 15 15:03:08 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	param0,global,class=BANK0,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  002C12                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _delay_quartz_frequency_value
    49  002C12  10                 	db	16
    50                           
    51                           	psect	idataBANK0
    52  002C0A                     __pidataBANK0:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _remote_frame_array
    56  002C0A  01                 	db	1
    57  002C0B  00                 	db	0
    58  002C0C  00                 	db	0
    59  002C0D  00                 	db	0
    60  002C0E  00                 	db	0
    61  002C0F  00                 	db	0
    62  002C10  00                 	db	0
    63  002C11  00                 	db	0
    64  0000                     _RXB1CON	set	3920
    65  0000                     _RXB1CONbits	set	3920
    66  0000                     _RXB1D0	set	3926
    67  0000                     _RXB1D1	set	3927
    68  0000                     _RXB1D2	set	3928
    69  0000                     _RXB1D3	set	3929
    70  0000                     _RXB1D4	set	3930
    71  0000                     _RXB1D5	set	3931
    72  0000                     _RXB1D6	set	3932
    73  0000                     _RXB1D7	set	3933
    74  0000                     _RXB1DLC	set	3925
    75  0000                     _RXB1DLCbits	set	3925
    76  0000                     _RXB1EIDH	set	3923
    77  0000                     _RXB1EIDL	set	3924
    78  0000                     _RXB1SIDH	set	3921
    79  0000                     _RXB1SIDL	set	3922
    80  0000                     _RXB1SIDLbits	set	3922
    81  0000                     _RXF0EIDH	set	3842
    82  0000                     _RXF0EIDL	set	3843
    83  0000                     _RXF0SIDH	set	3840
    84  0000                     _RXF0SIDL	set	3841
    85  0000                     _RXF0SIDLbits	set	3841
    86  0000                     _RXF1EIDH	set	3846
    87  0000                     _RXF1EIDL	set	3847
    88  0000                     _RXF1SIDH	set	3844
    89  0000                     _RXF1SIDL	set	3845
    90  0000                     _RXF1SIDLbits	set	3845
    91  0000                     _RXF2EIDH	set	3850
    92  0000                     _RXF2EIDL	set	3851
    93  0000                     _RXF2SIDH	set	3848
    94  0000                     _RXF2SIDL	set	3849
    95  0000                     _RXF2SIDLbits	set	3849
    96  0000                     _RXF3EIDH	set	3854
    97  0000                     _RXF3EIDL	set	3855
    98  0000                     _RXF3SIDH	set	3852
    99  0000                     _RXF3SIDL	set	3853
   100  0000                     _RXF3SIDLbits	set	3853
   101  0000                     _RXF4EIDH	set	3858
   102  0000                     _RXF4EIDL	set	3859
   103  0000                     _RXF4SIDH	set	3856
   104  0000                     _RXF4SIDL	set	3857
   105  0000                     _RXF4SIDLbits	set	3857
   106  0000                     _RXF5EIDH	set	3862
   107  0000                     _RXF5EIDL	set	3863
   108  0000                     _RXF5SIDH	set	3860
   109  0000                     _RXF5SIDL	set	3861
   110  0000                     _RXF5SIDLbits	set	3861
   111  0000                     _RXM0EIDH	set	3866
   112  0000                     _RXM0EIDL	set	3867
   113  0000                     _RXM0SIDH	set	3864
   114  0000                     _RXM0SIDL	set	3865
   115  0000                     _RXM0SIDLbits	set	3865
   116  0000                     _RXM1EIDH	set	3870
   117  0000                     _RXM1EIDL	set	3871
   118  0000                     _RXM1SIDH	set	3868
   119  0000                     _RXM1SIDL	set	3869
   120  0000                     _RXM1SIDLbits	set	3869
   121  0000                     _TXB0CONbits	set	3904
   122  0000                     _TXB0D0	set	3910
   123  0000                     _TXB0D1	set	3911
   124  0000                     _TXB0D2	set	3912
   125  0000                     _TXB0D3	set	3913
   126  0000                     _TXB0D4	set	3914
   127  0000                     _TXB0D5	set	3915
   128  0000                     _TXB0D6	set	3916
   129  0000                     _TXB0D7	set	3917
   130  0000                     _TXB0DLC	set	3909
   131  0000                     _TXB0DLCbits	set	3909
   132  0000                     _TXB0EIDH	set	3907
   133  0000                     _TXB0EIDL	set	3908
   134  0000                     _TXB0SIDH	set	3905
   135  0000                     _TXB0SIDL	set	3906
   136  0000                     _TXB0SIDLbits	set	3906
   137  0000                     _TXB1CONbits	set	3888
   138  0000                     _TXB1D0	set	3894
   139  0000                     _TXB1D1	set	3895
   140  0000                     _TXB1D2	set	3896
   141  0000                     _TXB1D3	set	3897
   142  0000                     _TXB1D4	set	3898
   143  0000                     _TXB1D5	set	3899
   144  0000                     _TXB1D6	set	3900
   145  0000                     _TXB1D7	set	3901
   146  0000                     _TXB1DLC	set	3893
   147  0000                     _TXB1DLCbits	set	3893
   148  0000                     _TXB1EIDH	set	3891
   149  0000                     _TXB1EIDL	set	3892
   150  0000                     _TXB1SIDH	set	3889
   151  0000                     _TXB1SIDL	set	3890
   152  0000                     _TXB1SIDLbits	set	3890
   153  0000                     _TXB2CONbits	set	3872
   154  0000                     _TXB2D0	set	3878
   155  0000                     _TXB2D1	set	3879
   156  0000                     _TXB2D2	set	3880
   157  0000                     _TXB2D3	set	3881
   158  0000                     _TXB2D4	set	3882
   159  0000                     _TXB2D5	set	3883
   160  0000                     _TXB2D6	set	3884
   161  0000                     _TXB2D7	set	3885
   162  0000                     _TXB2DLC	set	3877
   163  0000                     _TXB2DLCbits	set	3877
   164  0000                     _TXB2EIDH	set	3875
   165  0000                     _TXB2EIDL	set	3876
   166  0000                     _TXB2SIDH	set	3873
   167  0000                     _TXB2SIDL	set	3874
   168  0000                     _TXB2SIDLbits	set	3874
   169  0000                     _BRGCON1	set	3952
   170  0000                     _BRGCON2	set	3953
   171  0000                     _BRGCON2bits	set	3953
   172  0000                     _BRGCON3	set	3954
   173  0000                     _BRGCON3bits	set	3954
   174  0000                     _CANCON	set	3951
   175  0000                     _CANCONbits	set	3951
   176  0000                     _CANSTAT	set	3950
   177  0000                     _COMSTATbits	set	3956
   178  0000                     _INTCON2bits	set	4081
   179  0000                     _INTCON3bits	set	4080
   180  0000                     _INTCONbits	set	4082
   181  0000                     _IPR1bits	set	3999
   182  0000                     _IPR2bits	set	4002
   183  0000                     _IPR3bits	set	4005
   184  0000                     _LATA	set	3977
   185  0000                     _LATB	set	3978
   186  0000                     _LATC	set	3979
   187  0000                     _LATD	set	3980
   188  0000                     _LATE	set	3981
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIE2bits	set	4000
   191  0000                     _PIE3bits	set	4003
   192  0000                     _PIR1bits	set	3998
   193  0000                     _PIR2bits	set	4001
   194  0000                     _PIR3bits	set	4004
   195  0000                     _PORTAbits	set	3968
   196  0000                     _PORTCbits	set	3970
   197  0000                     _RCONbits	set	4048
   198  0000                     _RXB0CON	set	3936
   199  0000                     _RXB0CONbits	set	3936
   200  0000                     _RXB0D0	set	3942
   201  0000                     _RXB0D1	set	3943
   202  0000                     _RXB0D2	set	3944
   203  0000                     _RXB0D3	set	3945
   204  0000                     _RXB0D4	set	3946
   205  0000                     _RXB0D5	set	3947
   206  0000                     _RXB0D6	set	3948
   207  0000                     _RXB0D7	set	3949
   208  0000                     _RXB0DLC	set	3941
   209  0000                     _RXB0DLCbits	set	3941
   210  0000                     _RXB0EIDH	set	3939
   211  0000                     _RXB0EIDL	set	3940
   212  0000                     _RXB0SIDH	set	3937
   213  0000                     _RXB0SIDL	set	3938
   214  0000                     _RXB0SIDLbits	set	3938
   215  0000                     _RXERRCNT	set	3957
   216  0000                     _T0CON	set	4053
   217  0000                     _T0CONbits	set	4053
   218  0000                     _T1CON	set	4045
   219  0000                     _T1CONbits	set	4045
   220  0000                     _T3CON	set	4017
   221  0000                     _T3CONbits	set	4017
   222  0000                     _TMR0H	set	4055
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR1H	set	4047
   225  0000                     _TMR1L	set	4046
   226  0000                     _TMR3H	set	4019
   227  0000                     _TMR3L	set	4018
   228  0000                     _TRISA	set	3986
   229  0000                     _TRISB	set	3987
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISD	set	3989
   232  0000                     _TRISE	set	3990
   233  0000                     _TXERRCNT	set	3958
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  002A78                     __pcinit:
   239                           	opt stack 0
   240  002A78                     start_initialization:
   241                           	opt stack 0
   242  002A78                     __initialization:
   243                           	opt stack 0
   244                           
   245                           ; Clear objects allocated to BANK0 (73 bytes)
   246  002A78  EE00  F060         	lfsr	0,__pbssBANK0
   247  002A7C  0E49               	movlw	73
   248  002A7E                     clear_0:
   249  002A7E  6AEE               	clrf	postinc0,c
   250  002A80  06E8               	decf	wreg,f,c
   251  002A82  E1FD               	bnz	clear_0
   252                           
   253                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   254  002A84  6A49               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   255  002A86  6A48               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   256                           
   257                           ; Clear objects allocated to COMRAM (41 bytes)
   258  002A88  EE00  F001         	lfsr	0,__pbssCOMRAM
   259  002A8C  0E29               	movlw	41
   260  002A8E                     clear_1:
   261  002A8E  6AEE               	clrf	postinc0,c
   262  002A90  06E8               	decf	wreg,f,c
   263  002A92  E1FD               	bnz	clear_1
   264                           
   265                           ; Initialize objects allocated to BANK0 (8 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  002A94  0E0A               	movlw	low __pidataBANK0
   268  002A96  6EF6               	movwf	tblptrl,c
   269  002A98  0E2C               	movlw	high __pidataBANK0
   270  002A9A  6EF7               	movwf	tblptrh,c
   271  002A9C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  002A9E  6EF8               	movwf	tblptru,c
   273  002AA0  EE00  F0D3         	lfsr	0,__pdataBANK0
   274  002AA4  EE10 F008          	lfsr	1,8
   275  002AA8                     copy_data0:
   276  002AA8  0009               	tblrd		*+
   277  002AAA  CFF5 FFEE          	movff	tablat,postinc0
   278  002AAE  50E5               	movf	postdec1,w,c
   279  002AB0  50E1               	movf	fsr1l,w,c
   280  002AB2  E1FA               	bnz	copy_data0
   281                           
   282                           ; Initialize objects allocated to COMRAM (1 bytes)
   283                           ; load TBLPTR registers with __pidataCOMRAM
   284  002AB4  0E12               	movlw	low __pidataCOMRAM
   285  002AB6  6EF6               	movwf	tblptrl,c
   286  002AB8  0E2C               	movlw	high __pidataCOMRAM
   287  002ABA  6EF7               	movwf	tblptrh,c
   288  002ABC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   289  002ABE  6EF8               	movwf	tblptru,c
   290  002AC0  0009               	tblrd		*+	;fetch initializer
   291  002AC2  CFF5 F04A          	movff	tablat,__pdataCOMRAM
   292  002AC6                     end_of_initialization:
   293                           	opt stack 0
   294  002AC6                     __end_of__initialization:
   295                           	opt stack 0
   296  002AC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   297  002AC8  6EF8               	movwf	tblptru,c
   298  002ACA  0100               	movlb	0
   299  002ACC  EF1A  F010         	goto	_main	;jump to C main() function
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1l	equ	0xFE1
   308                           
   309                           	psect	bitbssCOMRAM
   310  000240                     __pbitbssCOMRAM:
   311                           	opt stack 0
   312  000240                     _ENC1_measure:
   313                           	opt stack 0
   314  000240                     	ds	1
   315  000241                     _ENC2_measure:
   316                           	opt stack 0
   317  000241                     	ds	1
   318  000242                     _TMR1_overflow:
   319                           	opt stack 0
   320  000242                     	ds	1
   321  000243                     _TMR3_overflow:
   322                           	opt stack 0
   323  000243                     	ds	1
   324  000244                     _Tx_retry:
   325                           	opt stack 0
   326  000244                     	ds	1
   327  000245                     _count_flag:
   328                           	opt stack 0
   329  000245                     	ds	1
   330  000246                     _distance_reached_flag:
   331                           	opt stack 0
   332  000246                     	ds	1
   333  000247                     _distance_set_flag:
   334                           	opt stack 0
   335  000247                     	ds	1
   336  000248                     _remote_frame:
   337                           	opt stack 0
   338  000248                     	ds	1
   339  000249                     _steering_dir:
   340                           	opt stack 0
   341  000249                     	ds	1
   342  00024A                     _x:
   343                           	opt stack 0
   344  00024A                     	ds	1
   345  00024B                     _y:
   346                           	opt stack 0
   347  00024B                     	ds	1
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           postdec1	equ	0xFE5
   355                           fsr1l	equ	0xFE1
   356                           
   357                           	psect	bssCOMRAM
   358  000001                     __pbssCOMRAM:
   359                           	opt stack 0
   360  000001                     _remote_frame_id:
   361                           	opt stack 0
   362  000001                     	ds	4
   363  000005                     _timer_on:
   364                           	opt stack 0
   365  000005                     	ds	4
   366  000009                     _wheel_speed_1:
   367                           	opt stack 0
   368  000009                     	ds	4
   369  00000D                     _wheel_speed_2:
   370                           	opt stack 0
   371  00000D                     	ds	4
   372  000011                     _wheel_speed_average_1:
   373                           	opt stack 0
   374  000011                     	ds	4
   375  000015                     _distance_1:
   376                           	opt stack 0
   377  000015                     	ds	2
   378  000017                     _distance_2:
   379                           	opt stack 0
   380  000017                     	ds	2
   381  000019                     _distance_set_counter_1:
   382                           	opt stack 0
   383  000019                     	ds	2
   384  00001B                     _distance_set_counter_2:
   385                           	opt stack 0
   386  00001B                     	ds	2
   387  00001D                     _distance_set_value:
   388                           	opt stack 0
   389  00001D                     	ds	2
   390  00001F                     _gap_time_1:
   391                           	opt stack 0
   392  00001F                     	ds	2
   393  000021                     _gap_time_2:
   394                           	opt stack 0
   395  000021                     	ds	2
   396  000023                     _Analogic_Mode:
   397                           	opt stack 0
   398  000023                     	ds	1
   399  000024                     _brake_signal_CAN:
   400                           	opt stack 0
   401  000024                     	ds	1
   402  000025                     _brake_value_inc:
   403                           	opt stack 0
   404  000025                     	ds	1
   405  000026                     _home_position:
   406                           	opt stack 0
   407  000026                     	ds	1
   408  000027                     _brake_value:
   409                           	opt stack 0
   410  000027                     	ds	1
   411  000028                     _brake_value_degree:
   412                           	opt stack 0
   413  000028                     	ds	1
   414  000029                     _step:
   415                           	opt stack 0
   416  000029                     	ds	1
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           	psect	dataCOMRAM
   427  00004A                     __pdataCOMRAM:
   428                           	opt stack 0
   429  00004A                     _delay_quartz_frequency_value:
   430                           	opt stack 0
   431  00004A                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	bssBANK0
   442  000060                     __pbssBANK0:
   443                           	opt stack 0
   444  000060                     _data_debug1:
   445                           	opt stack 0
   446  000060                     	ds	8
   447  000068                     _distance_actual_value:
   448                           	opt stack 0
   449  000068                     	ds	4
   450  00006C                     _int_counter_1:
   451                           	opt stack 0
   452  00006C                     	ds	4
   453  000070                     _int_counter_2:
   454                           	opt stack 0
   455  000070                     	ds	4
   456  000074                     _timer_off:
   457                           	opt stack 0
   458  000074                     	ds	4
   459  000078                     _wheel_speed_average_2:
   460                           	opt stack 0
   461  000078                     	ds	4
   462  00007C                     _clock_counter_reference:
   463                           	opt stack 0
   464  00007C                     	ds	2
   465  00007E                     _int_counter_1_count:
   466                           	opt stack 0
   467  00007E                     	ds	2
   468  000080                     _int_counter_2_count:
   469                           	opt stack 0
   470  000080                     	ds	2
   471  000082                     _msg:
   472                           	opt stack 0
   473  000082                     	ds	15
   474  000091                     _distance_array:
   475                           	opt stack 0
   476  000091                     	ds	8
   477  000099                     _speed_array:
   478                           	opt stack 0
   479  000099                     	ds	8
   480  0000A1                     _status_array:
   481                           	opt stack 0
   482  0000A1                     	ds	8
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	dataBANK0
   493  0000D3                     __pdataBANK0:
   494                           	opt stack 0
   495  0000D3                     _remote_frame_array:
   496                           	opt stack 0
   497  0000D3                     	ds	8
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           
   507                           	psect	cstackBANK1
   508  000100                     __pcstackBANK1:
   509                           	opt stack 0
   510  000100                     ??_CANSetMask:
   511  000100                     ??_CANSetFilter:
   512  000100                     ?___lwdiv:
   513                           	opt stack 0
   514  000100                     ?___lldiv:
   515                           	opt stack 0
   516  000100                     ___awdiv@counter:
   517                           	opt stack 0
   518  000100                     ___lwdiv@dividend:
   519                           	opt stack 0
   520  000100                     CANsendMessage@identifier:
   521                           	opt stack 0
   522  000100                     ___lldiv@dividend:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x0
   526  000100                     	ds	1
   527  000101                     ___awdiv@sign:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x1
   531  000101                     	ds	1
   532  000102                     ___awdiv@quotient:
   533                           	opt stack 0
   534  000102                     ___lwdiv@divisor:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x2
   538  000102                     	ds	2
   539  000104                     CANSetMask@numBuffer:
   540                           	opt stack 0
   541  000104                     CANSetFilter@numBuffer:
   542                           	opt stack 0
   543  000104                     ___lwdiv@counter:
   544                           	opt stack 0
   545  000104                     CANsendMessage@data:
   546                           	opt stack 0
   547  000104                     ___lldiv@divisor:
   548                           	opt stack 0
   549                           
   550                           ; 4 bytes @ 0x4
   551  000104                     	ds	1
   552  000105                     ___lwdiv@quotient:
   553                           	opt stack 0
   554  000105                     CANSetMask@tamp:
   555                           	opt stack 0
   556  000105                     CANSetFilter@tamp:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x5
   560  000105                     	ds	1
   561  000106                     CANsendMessage@dataLength:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x6
   565  000106                     	ds	1
   566  000107                     CANsendMessage@flags:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x7
   570  000107                     	ds	1
   571  000108                     CANsendMessage@tamp:
   572                           	opt stack 0
   573                           
   574                           ; 4 bytes @ 0x8
   575  000108                     	ds	1
   576  000109                     CANInitialize@phaseSeg1:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x9
   580  000109                     	ds	1
   581  00010A                     CANInitialize@phaseSeg2:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0xA
   585  00010A                     	ds	1
   586  00010B                     CANInitialize@SJW:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0xB
   590  00010B                     	ds	1
   591  00010C                     CANInitialize@BRP:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0xC
   595  00010C                     	ds	1
   596  00010D                     CANInitialize@flags:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0xD
   600  00010D                     	ds	1
   601  00010E                     ??_CANInitialize:
   602                           
   603                           ; 0 bytes @ 0xE
   604  00010E                     	ds	4
   605  000112                     CANInitialize@propSeg:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x12
   609  000112                     	ds	1
   610  000113                     CANInitialize@FilterConfig1:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x13
   614  000113                     	ds	1
   615  000114                     CANInitialize@FilterConfig2:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x14
   619  000114                     	ds	1
   620  000115                     ??_main:
   621                           
   622                           ; 0 bytes @ 0x15
   623  000115                     	ds	2
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           postdec1	equ	0xFE5
   631                           fsr1l	equ	0xFE1
   632                           
   633                           	psect	cstackBANK0
   634  0000A9                     __pcstackBANK0:
   635                           	opt stack 0
   636  0000A9                     ?i2___wmul:
   637                           	opt stack 0
   638  0000A9                     ?i2___lwdiv:
   639                           	opt stack 0
   640  0000A9                     WriteTimer0@timer0:
   641                           	opt stack 0
   642  0000A9                     i2___wmul@multiplier:
   643                           	opt stack 0
   644  0000A9                     i2___lwdiv@dividend:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x0
   648  0000A9                     	ds	2
   649  0000AB                     WriteTimer0@timer:
   650                           	opt stack 0
   651  0000AB                     i2___wmul@multiplicand:
   652                           	opt stack 0
   653  0000AB                     i2___lwdiv@divisor:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  0000AB                     	ds	2
   658  0000AD                     i2___lwdiv@counter:
   659                           	opt stack 0
   660  0000AD                     i2___wmul@product:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x4
   664  0000AD                     	ds	1
   665  0000AE                     i2___lwdiv@quotient:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x5
   669  0000AE                     	ds	1
   670  0000AF                     ?i2___awdiv:
   671                           	opt stack 0
   672  0000AF                     i2___awdiv@dividend:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x6
   676  0000AF                     	ds	2
   677  0000B1                     i2___awdiv@divisor:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x8
   681  0000B1                     	ds	2
   682  0000B3                     i2___awdiv@counter:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0xA
   686  0000B3                     	ds	1
   687  0000B4                     i2___awdiv@sign:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0xB
   691  0000B4                     	ds	1
   692  0000B5                     i2___awdiv@quotient:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0xC
   696  0000B5                     	ds	2
   697  0000B7                     ??_ISR_Alta:
   698                           
   699                           ; 0 bytes @ 0xE
   700  0000B7                     	ds	22
   701  0000CD                     ??_CANsendMessage:
   702  0000CD                     ?___wmul:
   703                           	opt stack 0
   704  0000CD                     ?___awdiv:
   705                           	opt stack 0
   706  0000CD                     CANOperationMode@mode:
   707                           	opt stack 0
   708  0000CD                     _CANisTxReady$3173:
   709                           	opt stack 0
   710  0000CD                     ___wmul@multiplier:
   711                           	opt stack 0
   712  0000CD                     ___awdiv@dividend:
   713                           	opt stack 0
   714  0000CD                     CANSetMask@mask:
   715                           	opt stack 0
   716  0000CD                     CANSetFilter@filter:
   717                           	opt stack 0
   718  0000CD                     ___lldiv@quotient:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x24
   722  0000CD                     	ds	2
   723  0000CF                     ___wmul@multiplicand:
   724                           	opt stack 0
   725  0000CF                     ___awdiv@divisor:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x26
   729  0000CF                     	ds	2
   730  0000D1                     CANSetMask@type:
   731                           	opt stack 0
   732  0000D1                     CANSetFilter@type:
   733                           	opt stack 0
   734  0000D1                     ___lldiv@counter:
   735                           	opt stack 0
   736  0000D1                     ___wmul@product:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x28
   740  0000D1                     	ds	1
   741  0000D2                     
   742                           ; 0 bytes @ 0x29
   743  0000D2                     	ds	1
   744  0000D3                     tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           postinc0	equ	0xFEE
   749                           wreg	equ	0xFE8
   750                           postdec1	equ	0xFE5
   751                           fsr1l	equ	0xFE1
   752                           
   753                           ; 0 bytes @ 0x2A
   754                           
   755                           	psect	cstackCOMRAM
   756  00002A                     __pcstackCOMRAM:
   757                           	opt stack 0
   758  00002A                     _CANisRxReady$3175:
   759                           	opt stack 0
   760  00002A                     ___lbdiv@divisor:
   761                           	opt stack 0
   762  00002A                     CANreceiveMessage@msg:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x0
   766  00002A                     	ds	1
   767  00002B                     ___lbdiv@dividend:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x1
   771  00002B                     	ds	1
   772  00002C                     ??_CANreceiveMessage:
   773  00002C                     ___lbdiv@counter:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x2
   777  00002C                     	ds	1
   778  00002D                     ___lbdiv@quotient:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x3
   782  00002D                     	ds	7
   783  000034                     CANreceiveMessage@error:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0xA
   787  000034                     	ds	1
   788  000035                     CANreceiveMessage@tamp:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0xB
   792  000035                     	ds	1
   793  000036                     ??_ISR_Bassa:
   794                           
   795                           ; 0 bytes @ 0xC
   796  000036                     	ds	18
   797                           tblptru	equ	0xFF8
   798                           tblptrh	equ	0xFF7
   799                           tblptrl	equ	0xFF6
   800                           tablat	equ	0xFF5
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           postdec1	equ	0xFE5
   804                           fsr1l	equ	0xFE1
   805                           
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 290 in file "ABS_Code.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  2  716[None  ] int 
   818 ;; Registers used:
   819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   825 ;;      Params:         0       0       0       0
   826 ;;      Locals:         0       0       0       0
   827 ;;      Temps:          0       0       2       0
   828 ;;      Totals:         0       0       2       0
   829 ;;Total ram usage:        2 bytes
   830 ;; Hardware stack levels required when called:    7
   831 ;; This function calls:
   832 ;;		_CANisRXwarningON
   833 ;;		_CANisTXwarningON
   834 ;;		_CANsendMessage
   835 ;;		___awdiv
   836 ;;		___lldiv
   837 ;;		___lwdiv
   838 ;;		___wmul
   839 ;;		_board_initialization
   840 ;;		_remote_frame_handler
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  002034                     __ptext0:
   848                           	opt stack 0
   849  002034                     _main:
   850                           	opt stack 24
   851                           
   852                           ;ABS_Code.c: 291: board_initialization();
   853                           
   854                           ;incstack = 0
   855  002034  EC6E  F014         	call	_board_initialization	;wreg free
   856                           
   857                           ;ABS_Code.c: 292: step = 2;
   858  002038  0E02               	movlw	2
   859  00203A  6E29               	movwf	_step,c	;volatile
   860                           
   861                           ;ABS_Code.c: 293: home_position = 28;
   862  00203C  0E1C               	movlw	28
   863  00203E  6E26               	movwf	_home_position,c	;volatile
   864  002040  D000               	goto	l5429
   865  002042                     l5429:
   866                           
   867                           ;ABS_Code.c: 304: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   868  002042  ECF7  F015         	call	_CANisTXwarningON	;wreg free
   869  002046  06E8               	decf	wreg,f,c
   870  002048  B4D8               	btfsc	status,2,c
   871  00204A  D005               	goto	l720
   872  00204C  ECFE  F015         	call	_CANisRXwarningON	;wreg free
   873  002050  06E8               	decf	wreg,f,c
   874  002052  A4D8               	btfss	status,2,c
   875  002054  D004               	goto	l721
   876  002056                     l720:
   877                           
   878                           ;ABS_Code.c: 305: PORTAbits.RA1 = 1;
   879  002056  8280               	bsf	3968,1,c	;volatile
   880                           
   881                           ;ABS_Code.c: 306: COMSTATbits.TXWARN = 0;
   882  002058  9474               	bcf	3956,2,c	;volatile
   883                           
   884                           ;ABS_Code.c: 307: COMSTATbits.RXWARN = 0;
   885  00205A  9274               	bcf	3956,1,c	;volatile
   886                           
   887                           ;ABS_Code.c: 308: } else {
   888  00205C  D000               	goto	l721
   889  00205E                     l721:
   890                           
   891                           ;ABS_Code.c: 310: }
   892                           ;ABS_Code.c: 313: if (distance_reached_flag == 1) {
   893  00205E  AC48               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
   894  002060  D019               	goto	l5437
   895                           
   896                           ;ABS_Code.c: 314: CANsendMessage(0b00000001111, remote_frame_array, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   897  002062  0E0F               	movlw	15
   898  002064  0101               	movlb	1	; () banked
   899  002066  6F00               	movwf	CANsendMessage@identifier& (0+255),b
   900  002068  0E00               	movlw	0
   901  00206A  6F01               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   902  00206C  0E00               	movlw	0
   903  00206E  6F02               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   904  002070  0E00               	movlw	0
   905  002072  6F03               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   906  002074  0ED3               	movlw	low _remote_frame_array
   907  002076  0101               	movlb	1	; () banked
   908  002078  6F04               	movwf	CANsendMessage@data& (0+255),b
   909  00207A  0E00               	movlw	high _remote_frame_array
   910  00207C  0101               	movlb	1	; () banked
   911  00207E  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
   912  002080  0E08               	movlw	8
   913  002082  0101               	movlb	1	; () banked
   914  002084  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
   915  002086  0EFC               	movlw	252
   916  002088  0101               	movlb	1	; () banked
   917  00208A  6F07               	movwf	CANsendMessage@flags& (0+255),b
   918  00208C  EC5E  F006         	call	_CANsendMessage	;wreg free
   919                           
   920                           ;ABS_Code.c: 315: distance_reached_flag = 0;
   921  002090  9C48               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
   922  002092  D000               	goto	l5437
   923  002094                     l5437:
   924                           
   925                           ;ABS_Code.c: 316: }
   926                           ;ABS_Code.c: 319: if ((remote_frame == 1) || (Tx_retry == 1)) {
   927  002094  B049               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   928  002096  D002               	goto	l725
   929  002098  A848               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   930  00209A  D004               	goto	l5443
   931  00209C                     l725:
   932                           
   933                           ;ABS_Code.c: 320: remote_frame = 0;
   934  00209C  9049               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   935                           
   936                           ;ABS_Code.c: 321: remote_frame_handler();
   937  00209E  EC6D  F012         	call	_remote_frame_handler	;wreg free
   938  0020A2  D000               	goto	l5443
   939  0020A4                     l5443:
   940                           
   941                           ;ABS_Code.c: 322: }
   942                           ;ABS_Code.c: 325: if (Analogic_Mode == 0b00000000) {
   943  0020A4  5023               	movf	_Analogic_Mode,w,c	;volatile
   944  0020A6  A4D8               	btfss	status,2,c
   945  0020A8  D019               	goto	l726
   946                           
   947                           ;ABS_Code.c: 326: if (brake_signal_CAN == 0b00000000) {
   948  0020AA  5024               	movf	_brake_signal_CAN,w,c	;volatile
   949  0020AC  A4D8               	btfss	status,2,c
   950  0020AE  D003               	goto	l5449
   951                           
   952                           ;ABS_Code.c: 327: brake_value_inc = 0;
   953  0020B0  0E00               	movlw	0
   954  0020B2  6E25               	movwf	_brake_value_inc,c	;volatile
   955  0020B4  D000               	goto	l5449
   956  0020B6                     l5449:
   957                           
   958                           ;ABS_Code.c: 328: }
   959                           ;ABS_Code.c: 329: if (brake_signal_CAN == 0b00000001) {
   960  0020B6  0424               	decf	_brake_signal_CAN,w,c	;volatile
   961  0020B8  A4D8               	btfss	status,2,c
   962  0020BA  D003               	goto	l5453
   963                           
   964                           ;ABS_Code.c: 330: brake_value_inc = 150;
   965  0020BC  0E96               	movlw	150
   966  0020BE  6E25               	movwf	_brake_value_inc,c	;volatile
   967  0020C0  D000               	goto	l5453
   968  0020C2                     l5453:
   969                           
   970                           ;ABS_Code.c: 331: }
   971                           ;ABS_Code.c: 332: if (brake_signal_CAN == 0b00000010) {
   972  0020C2  0E02               	movlw	2
   973  0020C4  1824               	xorwf	_brake_signal_CAN,w,c	;volatile
   974  0020C6  A4D8               	btfss	status,2,c
   975  0020C8  D003               	goto	l5457
   976                           
   977                           ;ABS_Code.c: 333: brake_value_inc = 200;
   978  0020CA  0EC8               	movlw	200
   979  0020CC  6E25               	movwf	_brake_value_inc,c	;volatile
   980  0020CE  D000               	goto	l5457
   981  0020D0                     l5457:
   982                           
   983                           ;ABS_Code.c: 334: }
   984                           ;ABS_Code.c: 335: if (brake_signal_CAN == 0b00000011) {
   985  0020D0  0E03               	movlw	3
   986  0020D2  1824               	xorwf	_brake_signal_CAN,w,c	;volatile
   987  0020D4  A4D8               	btfss	status,2,c
   988  0020D6  D005               	goto	l5461
   989                           
   990                           ;ABS_Code.c: 336: brake_value_inc = 255;
   991  0020D8  6825               	setf	_brake_value_inc,c	;volatile
   992                           
   993                           ;ABS_Code.c: 337: }
   994                           ;ABS_Code.c: 338: } else {
   995  0020DA  D003               	goto	l5461
   996  0020DC                     l726:
   997                           
   998                           ;ABS_Code.c: 339: brake_value_inc = brake_signal_CAN;
   999  0020DC  C024  F025         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
  1000  0020E0  D000               	goto	l5461
  1001  0020E2                     l5461:
  1002                           
  1003                           ;ABS_Code.c: 340: }
  1004                           ;ABS_Code.c: 343: if (((brake_value_inc / 1) + home_position) > 255) {
  1005  0020E2  5026               	movf	_home_position,w,c	;volatile
  1006  0020E4  C025  F115         	movff	_brake_value_inc,??_main	;volatile
  1007  0020E8  0101               	movlb	1	; () banked
  1008  0020EA  6B16               	clrf	(??_main+1)& (0+255),b
  1009  0020EC  0101               	movlb	1	; () banked
  1010  0020EE  2715               	addwf	??_main& (0+255),f,b
  1011  0020F0  0E00               	movlw	0
  1012  0020F2  2316               	addwfc	(??_main+1)& (0+255),f,b
  1013  0020F4  0101               	movlb	1	; () banked
  1014  0020F6  BF16               	btfsc	(??_main+1)& (0+255),7,b
  1015  0020F8  D007               	goto	l5467
  1016  0020FA  0101               	movlb	1	; () banked
  1017  0020FC  0516               	decf	(??_main+1)& (0+255),w,b
  1018  0020FE  A0D8               	btfss	status,0,c
  1019  002100  D003               	goto	l5467
  1020                           
  1021                           ; BSR set to: 1
  1022                           ;ABS_Code.c: 344: brake_value = 255;
  1023  002102  6827               	setf	_brake_value,c	;volatile
  1024                           
  1025                           ; BSR set to: 1
  1026                           ;ABS_Code.c: 345: brake_value_degree = 180;
  1027  002104  0EB4               	movlw	180
  1028  002106  D011               	goto	L1
  1029  002108                     l5467:
  1030                           
  1031                           ; BSR set to: 1
  1032                           ;ABS_Code.c: 347: brake_value = (brake_value_inc / 1) + home_position;
  1033  002108  5025               	movf	_brake_value_inc,w,c	;volatile
  1034  00210A  2426               	addwf	_home_position,w,c	;volatile
  1035  00210C  6E27               	movwf	_brake_value,c	;volatile
  1036                           
  1037                           ; BSR set to: 1
  1038                           ;ABS_Code.c: 348: brake_value_degree = (180 * brake_value) / 255;
  1039  00210E  5027               	movf	_brake_value,w,c	;volatile
  1040  002110  0DB4               	mullw	180
  1041  002112  CFF3 F0CD          	movff	prodl,___awdiv@dividend
  1042  002116  CFF4 F0CE          	movff	prodh,___awdiv@dividend+1
  1043  00211A  0E00               	movlw	0
  1044  00211C  0100               	movlb	0	; () banked
  1045  00211E  6FD0               	movwf	(___awdiv@divisor+1)& (0+255),b
  1046  002120  69CF               	setf	___awdiv@divisor& (0+255),b
  1047  002122  EC3B  F013         	call	___awdiv	;wreg free
  1048  002126  0100               	movlb	0	; () banked
  1049  002128  51CD               	movf	?___awdiv& (0+255),w,b
  1050  00212A                     L1:
  1051  00212A  6E28               	movwf	_brake_value_degree,c	;volatile
  1052  00212C  D000               	goto	l5471
  1053  00212E                     l5471:
  1054                           
  1055                           ;ABS_Code.c: 349: }
  1056                           ;ABS_Code.c: 352: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1057  00212E  B048               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1058  002130  D002               	goto	l736
  1059  002132  A448               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1060  002134  D06E               	goto	l5499
  1061  002136                     l736:
  1062                           
  1063                           ;ABS_Code.c: 353: if (TMR1_overflow == 1) {
  1064  002136  A448               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1065  002138  D00A               	goto	l5479
  1066                           
  1067                           ;ABS_Code.c: 354: wheel_speed_1 = 0;
  1068  00213A  0E00               	movlw	0
  1069  00213C  6E09               	movwf	_wheel_speed_1,c	;volatile
  1070  00213E  0E00               	movlw	0
  1071  002140  6E0A               	movwf	_wheel_speed_1+1,c	;volatile
  1072  002142  0E00               	movlw	0
  1073  002144  6E0B               	movwf	_wheel_speed_1+2,c	;volatile
  1074  002146  0E00               	movlw	0
  1075  002148  6E0C               	movwf	_wheel_speed_1+3,c	;volatile
  1076                           
  1077                           ;ABS_Code.c: 355: TMR1_overflow = 0;
  1078  00214A  9448               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1079                           
  1080                           ;ABS_Code.c: 356: } else {
  1081  00214C  D01E               	goto	l5481
  1082  00214E                     l5479:
  1083                           
  1084                           ;ABS_Code.c: 357: wheel_speed_1 = (step * 10000) / gap_time_1;
  1085  00214E  C029  F0CD         	movff	_step,___wmul@multiplier	;volatile
  1086  002152  0100               	movlb	0	; () banked
  1087  002154  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1088  002156  0E27               	movlw	39
  1089  002158  0100               	movlb	0	; () banked
  1090  00215A  6FD0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1091  00215C  0E10               	movlw	16
  1092  00215E  6FCF               	movwf	___wmul@multiplicand& (0+255),b
  1093  002160  EC8B  F015         	call	___wmul	;wreg free
  1094  002164  C0CD  F100         	movff	?___wmul,___lwdiv@dividend
  1095  002168  C0CE  F101         	movff	?___wmul+1,___lwdiv@dividend+1
  1096  00216C  C01F  F102         	movff	_gap_time_1,___lwdiv@divisor	;volatile
  1097  002170  C020  F103         	movff	_gap_time_1+1,___lwdiv@divisor+1	;volatile
  1098  002174  ECBA  F014         	call	___lwdiv	;wreg free
  1099  002178  0101               	movlb	1	; () banked
  1100  00217A  C100  F009         	movff	?___lwdiv,_wheel_speed_1	;volatile
  1101  00217E  0101               	movlb	1	; () banked
  1102  002180  C101  F00A         	movff	?___lwdiv+1,_wheel_speed_1+1	;volatile
  1103  002184  6A0B               	clrf	_wheel_speed_1+2,c	;volatile
  1104  002186  6A0C               	clrf	_wheel_speed_1+3,c	;volatile
  1105  002188  D000               	goto	l5481
  1106  00218A                     l5481:
  1107                           
  1108                           ;ABS_Code.c: 358: }
  1109                           ;ABS_Code.c: 360: wheel_speed_average_1 = wheel_speed_average_1 + wheel_speed_1;
  1110  00218A  5009               	movf	_wheel_speed_1,w,c	;volatile
  1111  00218C  2411               	addwf	_wheel_speed_average_1,w,c	;volatile
  1112  00218E  6E11               	movwf	_wheel_speed_average_1,c	;volatile
  1113  002190  500A               	movf	_wheel_speed_1+1,w,c	;volatile
  1114  002192  2012               	addwfc	_wheel_speed_average_1+1,w,c	;volatile
  1115  002194  6E12               	movwf	_wheel_speed_average_1+1,c	;volatile
  1116  002196  500B               	movf	_wheel_speed_1+2,w,c	;volatile
  1117  002198  2013               	addwfc	_wheel_speed_average_1+2,w,c	;volatile
  1118  00219A  6E13               	movwf	_wheel_speed_average_1+2,c	;volatile
  1119  00219C  500C               	movf	_wheel_speed_1+3,w,c	;volatile
  1120  00219E  2014               	addwfc	_wheel_speed_average_1+3,w,c	;volatile
  1121  0021A0  6E14               	movwf	_wheel_speed_average_1+3,c	;volatile
  1122                           
  1123                           ;ABS_Code.c: 361: int_counter_1_count++;
  1124  0021A2  0100               	movlb	0	; () banked
  1125  0021A4  4B7E               	infsnz	_int_counter_1_count& (0+255),f,b	;volatile
  1126  0021A6  2B7F               	incf	(_int_counter_1_count+1)& (0+255),f,b	;volatile
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;ABS_Code.c: 362: if (int_counter_1_count == 7) {
  1130  0021A8  0E07               	movlw	7
  1131  0021AA  0100               	movlb	0	; () banked
  1132  0021AC  197E               	xorwf	_int_counter_1_count& (0+255),w,b	;volatile
  1133  0021AE  0100               	movlb	0	; () banked
  1134  0021B0  117F               	iorwf	(_int_counter_1_count+1)& (0+255),w,b	;volatile
  1135  0021B2  A4D8               	btfss	status,2,c
  1136  0021B4  D02E               	goto	l5499
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;ABS_Code.c: 363: wheel_speed_1 = wheel_speed_average_1 / 7;
  1140  0021B6  C011  F100         	movff	_wheel_speed_average_1,___lldiv@dividend	;volatile
  1141  0021BA  C012  F101         	movff	_wheel_speed_average_1+1,___lldiv@dividend+1	;volatile
  1142  0021BE  C013  F102         	movff	_wheel_speed_average_1+2,___lldiv@dividend+2	;volatile
  1143  0021C2  C014  F103         	movff	_wheel_speed_average_1+3,___lldiv@dividend+3	;volatile
  1144  0021C6  0E07               	movlw	7
  1145  0021C8  0101               	movlb	1	; () banked
  1146  0021CA  6F04               	movwf	___lldiv@divisor& (0+255),b
  1147  0021CC  0E00               	movlw	0
  1148  0021CE  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  1149  0021D0  0E00               	movlw	0
  1150  0021D2  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  1151  0021D4  0E00               	movlw	0
  1152  0021D6  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  1153  0021D8  EC0B  F014         	call	___lldiv	;wreg free
  1154  0021DC  C100  F009         	movff	?___lldiv,_wheel_speed_1	;volatile
  1155  0021E0  C101  F00A         	movff	?___lldiv+1,_wheel_speed_1+1	;volatile
  1156  0021E4  C102  F00B         	movff	?___lldiv+2,_wheel_speed_1+2	;volatile
  1157  0021E8  C103  F00C         	movff	?___lldiv+3,_wheel_speed_1+3	;volatile
  1158                           
  1159                           ;ABS_Code.c: 364: speed_array[3] = wheel_speed_1 >> 8;
  1160  0021EC  C00A  F09C         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1161                           
  1162                           ;ABS_Code.c: 365: speed_array[2] = wheel_speed_1;
  1163  0021F0  C009  F09B         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1164                           
  1165                           ;ABS_Code.c: 366: wheel_speed_average_1 = 0;
  1166  0021F4  0E00               	movlw	0
  1167  0021F6  6E11               	movwf	_wheel_speed_average_1,c	;volatile
  1168  0021F8  0E00               	movlw	0
  1169  0021FA  6E12               	movwf	_wheel_speed_average_1+1,c	;volatile
  1170  0021FC  0E00               	movlw	0
  1171  0021FE  6E13               	movwf	_wheel_speed_average_1+2,c	;volatile
  1172  002200  0E00               	movlw	0
  1173  002202  6E14               	movwf	_wheel_speed_average_1+3,c	;volatile
  1174                           
  1175                           ;ABS_Code.c: 367: int_counter_1_count = 0;
  1176  002204  0E00               	movlw	0
  1177  002206  0100               	movlb	0	; () banked
  1178  002208  6F7F               	movwf	(_int_counter_1_count+1)& (0+255),b	;volatile
  1179  00220A  0E00               	movlw	0
  1180  00220C  6F7E               	movwf	_int_counter_1_count& (0+255),b	;volatile
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;ABS_Code.c: 368: ENC1_measure = 0;
  1184  00220E  9048               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1185                           
  1186                           ; BSR set to: 0
  1187  002210  D000               	goto	l5499
  1188  002212                     l5499:
  1189                           
  1190                           ;ABS_Code.c: 369: }
  1191                           ;ABS_Code.c: 370: }
  1192                           ;ABS_Code.c: 373: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1193  002212  B248               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1194  002214  D002               	goto	l742
  1195  002216  A648               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1196  002218  D714               	goto	l5429
  1197  00221A                     l742:
  1198                           
  1199                           ;ABS_Code.c: 374: if (TMR3_overflow == 1) {
  1200  00221A  A648               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1201  00221C  D00A               	goto	l5507
  1202                           
  1203                           ;ABS_Code.c: 375: wheel_speed_2 = 0;
  1204  00221E  0E00               	movlw	0
  1205  002220  6E0D               	movwf	_wheel_speed_2,c	;volatile
  1206  002222  0E00               	movlw	0
  1207  002224  6E0E               	movwf	_wheel_speed_2+1,c	;volatile
  1208  002226  0E00               	movlw	0
  1209  002228  6E0F               	movwf	_wheel_speed_2+2,c	;volatile
  1210  00222A  0E00               	movlw	0
  1211  00222C  6E10               	movwf	_wheel_speed_2+3,c	;volatile
  1212                           
  1213                           ;ABS_Code.c: 376: TMR3_overflow = 0;
  1214  00222E  9648               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1215                           
  1216                           ;ABS_Code.c: 377: } else {
  1217  002230  D01E               	goto	l5509
  1218  002232                     l5507:
  1219                           
  1220                           ;ABS_Code.c: 378: wheel_speed_2 = (step * 10000) / gap_time_2;
  1221  002232  C029  F0CD         	movff	_step,___wmul@multiplier	;volatile
  1222  002236  0100               	movlb	0	; () banked
  1223  002238  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1224  00223A  0E27               	movlw	39
  1225  00223C  0100               	movlb	0	; () banked
  1226  00223E  6FD0               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1227  002240  0E10               	movlw	16
  1228  002242  6FCF               	movwf	___wmul@multiplicand& (0+255),b
  1229  002244  EC8B  F015         	call	___wmul	;wreg free
  1230  002248  C0CD  F100         	movff	?___wmul,___lwdiv@dividend
  1231  00224C  C0CE  F101         	movff	?___wmul+1,___lwdiv@dividend+1
  1232  002250  C021  F102         	movff	_gap_time_2,___lwdiv@divisor	;volatile
  1233  002254  C022  F103         	movff	_gap_time_2+1,___lwdiv@divisor+1	;volatile
  1234  002258  ECBA  F014         	call	___lwdiv	;wreg free
  1235  00225C  0101               	movlb	1	; () banked
  1236  00225E  C100  F00D         	movff	?___lwdiv,_wheel_speed_2	;volatile
  1237  002262  0101               	movlb	1	; () banked
  1238  002264  C101  F00E         	movff	?___lwdiv+1,_wheel_speed_2+1	;volatile
  1239  002268  6A0F               	clrf	_wheel_speed_2+2,c	;volatile
  1240  00226A  6A10               	clrf	_wheel_speed_2+3,c	;volatile
  1241  00226C  D000               	goto	l5509
  1242  00226E                     l5509:
  1243                           
  1244                           ;ABS_Code.c: 379: }
  1245                           ;ABS_Code.c: 381: wheel_speed_average_2 = wheel_speed_average_2 + wheel_speed_2;
  1246  00226E  500D               	movf	_wheel_speed_2,w,c	;volatile
  1247  002270  0100               	movlb	0	; () banked
  1248  002272  2578               	addwf	_wheel_speed_average_2& (0+255),w,b	;volatile
  1249  002274  0100               	movlb	0	; () banked
  1250  002276  6F78               	movwf	_wheel_speed_average_2& (0+255),b	;volatile
  1251  002278  500E               	movf	_wheel_speed_2+1,w,c	;volatile
  1252  00227A  0100               	movlb	0	; () banked
  1253  00227C  2179               	addwfc	(_wheel_speed_average_2+1)& (0+255),w,b	;volatile
  1254  00227E  0100               	movlb	0	; () banked
  1255  002280  6F79               	movwf	(_wheel_speed_average_2+1)& (0+255),b	;volatile
  1256  002282  500F               	movf	_wheel_speed_2+2,w,c	;volatile
  1257  002284  0100               	movlb	0	; () banked
  1258  002286  217A               	addwfc	(_wheel_speed_average_2+2)& (0+255),w,b	;volatile
  1259  002288  0100               	movlb	0	; () banked
  1260  00228A  6F7A               	movwf	(_wheel_speed_average_2+2)& (0+255),b	;volatile
  1261  00228C  5010               	movf	_wheel_speed_2+3,w,c	;volatile
  1262  00228E  0100               	movlb	0	; () banked
  1263  002290  217B               	addwfc	(_wheel_speed_average_2+3)& (0+255),w,b	;volatile
  1264  002292  0100               	movlb	0	; () banked
  1265  002294  6F7B               	movwf	(_wheel_speed_average_2+3)& (0+255),b	;volatile
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;ABS_Code.c: 382: int_counter_2_count++;
  1269  002296  0100               	movlb	0	; () banked
  1270  002298  4B80               	infsnz	_int_counter_2_count& (0+255),f,b	;volatile
  1271  00229A  2B81               	incf	(_int_counter_2_count+1)& (0+255),f,b	;volatile
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;ABS_Code.c: 383: if (int_counter_2_count == 7) {
  1275  00229C  0E07               	movlw	7
  1276  00229E  0100               	movlb	0	; () banked
  1277  0022A0  1980               	xorwf	_int_counter_2_count& (0+255),w,b	;volatile
  1278  0022A2  0100               	movlb	0	; () banked
  1279  0022A4  1181               	iorwf	(_int_counter_2_count+1)& (0+255),w,b	;volatile
  1280  0022A6  A4D8               	btfss	status,2,c
  1281  0022A8  D6CC               	goto	l5429
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;ABS_Code.c: 384: wheel_speed_2 = wheel_speed_average_2 / 7;
  1285  0022AA  C078  F100         	movff	_wheel_speed_average_2,___lldiv@dividend	;volatile
  1286  0022AE  C079  F101         	movff	_wheel_speed_average_2+1,___lldiv@dividend+1	;volatile
  1287  0022B2  C07A  F102         	movff	_wheel_speed_average_2+2,___lldiv@dividend+2	;volatile
  1288  0022B6  C07B  F103         	movff	_wheel_speed_average_2+3,___lldiv@dividend+3	;volatile
  1289  0022BA  0E07               	movlw	7
  1290  0022BC  0101               	movlb	1	; () banked
  1291  0022BE  6F04               	movwf	___lldiv@divisor& (0+255),b
  1292  0022C0  0E00               	movlw	0
  1293  0022C2  6F05               	movwf	(___lldiv@divisor+1)& (0+255),b
  1294  0022C4  0E00               	movlw	0
  1295  0022C6  6F06               	movwf	(___lldiv@divisor+2)& (0+255),b
  1296  0022C8  0E00               	movlw	0
  1297  0022CA  6F07               	movwf	(___lldiv@divisor+3)& (0+255),b
  1298  0022CC  EC0B  F014         	call	___lldiv	;wreg free
  1299  0022D0  C100  F00D         	movff	?___lldiv,_wheel_speed_2	;volatile
  1300  0022D4  C101  F00E         	movff	?___lldiv+1,_wheel_speed_2+1	;volatile
  1301  0022D8  C102  F00F         	movff	?___lldiv+2,_wheel_speed_2+2	;volatile
  1302  0022DC  C103  F010         	movff	?___lldiv+3,_wheel_speed_2+3	;volatile
  1303                           
  1304                           ;ABS_Code.c: 385: speed_array[1] = wheel_speed_2 >> 8;
  1305  0022E0  C00E  F09A         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1306                           
  1307                           ;ABS_Code.c: 386: speed_array[0] = wheel_speed_2;
  1308  0022E4  C00D  F099         	movff	_wheel_speed_2,_speed_array	;volatile
  1309                           
  1310                           ;ABS_Code.c: 387: wheel_speed_average_2 = 0;
  1311  0022E8  0E00               	movlw	0
  1312  0022EA  0100               	movlb	0	; () banked
  1313  0022EC  6F78               	movwf	_wheel_speed_average_2& (0+255),b	;volatile
  1314  0022EE  0E00               	movlw	0
  1315  0022F0  6F79               	movwf	(_wheel_speed_average_2+1)& (0+255),b	;volatile
  1316  0022F2  0E00               	movlw	0
  1317  0022F4  6F7A               	movwf	(_wheel_speed_average_2+2)& (0+255),b	;volatile
  1318  0022F6  0E00               	movlw	0
  1319  0022F8  6F7B               	movwf	(_wheel_speed_average_2+3)& (0+255),b	;volatile
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;ABS_Code.c: 388: int_counter_2_count = 0;
  1323  0022FA  0E00               	movlw	0
  1324  0022FC  0100               	movlb	0	; () banked
  1325  0022FE  6F81               	movwf	(_int_counter_2_count+1)& (0+255),b	;volatile
  1326  002300  0E00               	movlw	0
  1327  002302  6F80               	movwf	_int_counter_2_count& (0+255),b	;volatile
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;ABS_Code.c: 389: ENC2_measure = 0;
  1331  002304  9248               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1332                           
  1333                           ; BSR set to: 0
  1334                           
  1335                           ; BSR set to: 0
  1336                           
  1337                           ; BSR set to: 0
  1338  002306  D69D               	goto	l5429
  1339                           
  1340                           ; BSR set to: 0
  1341                           
  1342                           ; BSR set to: 0
  1343  002308  EFC7  F000         	goto	start
  1344  00230C                     __end_of_main:
  1345                           	opt stack 0
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           prodh	equ	0xFF4
  1351                           prodl	equ	0xFF3
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           postdec1	equ	0xFE5
  1355                           fsr1l	equ	0xFE1
  1356                           status	equ	0xFD8
  1357                           
  1358 ;; *************** function _remote_frame_handler *****************
  1359 ;; Defined at:
  1360 ;;		line 400 in file "ABS_Code.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;		None               void
  1367 ;; Registers used:
  1368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1374 ;;      Params:         0       0       0       0
  1375 ;;      Locals:         0       0       0       0
  1376 ;;      Temps:          0       0       0       0
  1377 ;;      Totals:         0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    5
  1381 ;; This function calls:
  1382 ;;		_CANisTxReady
  1383 ;;		_CANsendMessage
  1384 ;;		___wmul
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text1
  1391  0024DA                     __ptext1:
  1392                           	opt stack 0
  1393  0024DA                     _remote_frame_handler:
  1394                           	opt stack 25
  1395                           
  1396                           ;ABS_Code.c: 401: if (CANisTxReady() == 1) {
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;incstack = 0
  1400  0024DA  ECC3  F015         	call	_CANisTxReady	;wreg free
  1401  0024DE  06E8               	decf	wreg,f,c
  1402  0024E0  A4D8               	btfss	status,2,c
  1403  0024E2  D0C6               	goto	l751
  1404                           
  1405                           ;ABS_Code.c: 402: if (remote_frame_id == 0b00000000010) {
  1406  0024E4  0E02               	movlw	2
  1407  0024E6  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1408  0024E8  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1409  0024EA  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1410  0024EC  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1411  0024EE  A4D8               	btfss	status,2,c
  1412  0024F0  D01C               	goto	l5135
  1413                           
  1414                           ;ABS_Code.c: 403: status_array[0] = 0x01;
  1415  0024F2  0E01               	movlw	1
  1416  0024F4  0100               	movlb	0	; () banked
  1417  0024F6  6FA1               	movwf	_status_array& (0+255),b	;volatile
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;ABS_Code.c: 404: CANsendMessage(0b00000000010, status_array, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1421  0024F8  0E02               	movlw	2
  1422  0024FA  0101               	movlb	1	; () banked
  1423  0024FC  6F00               	movwf	CANsendMessage@identifier& (0+255),b
  1424  0024FE  0E00               	movlw	0
  1425  002500  6F01               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1426  002502  0E00               	movlw	0
  1427  002504  6F02               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1428  002506  0E00               	movlw	0
  1429  002508  6F03               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1430  00250A  0EA1               	movlw	low _status_array
  1431  00250C  0101               	movlb	1	; () banked
  1432  00250E  6F04               	movwf	CANsendMessage@data& (0+255),b
  1433  002510  0E00               	movlw	high _status_array
  1434  002512  0101               	movlb	1	; () banked
  1435  002514  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1436  002516  0E08               	movlw	8
  1437  002518  0101               	movlb	1	; () banked
  1438  00251A  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1439  00251C  0EBC               	movlw	188
  1440  00251E  0101               	movlb	1	; () banked
  1441  002520  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1442  002522  EC5E  F006         	call	_CANsendMessage	;wreg free
  1443                           
  1444                           ;ABS_Code.c: 405: PORTCbits.RC1 = ~PORTCbits.RC1;
  1445  002526  7282               	btg	3970,1,c	;volatile
  1446  002528  D000               	goto	l5135
  1447  00252A                     l5135:
  1448                           
  1449                           ;ABS_Code.c: 406: }
  1450                           ;ABS_Code.c: 408: if (remote_frame_id == 0b00000001000) {
  1451  00252A  0E08               	movlw	8
  1452  00252C  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1453  00252E  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1454  002530  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1455  002532  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1456  002534  A4D8               	btfss	status,2,c
  1457  002536  D034               	goto	l5143
  1458                           
  1459                           ;ABS_Code.c: 409: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1460  002538  C001  F100         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1461  00253C  C002  F101         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1462  002540  C003  F102         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1463  002544  C004  F103         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1464  002548  0E99               	movlw	low _speed_array
  1465  00254A  0101               	movlb	1	; () banked
  1466  00254C  6F04               	movwf	CANsendMessage@data& (0+255),b
  1467  00254E  0E00               	movlw	high _speed_array
  1468  002550  0101               	movlb	1	; () banked
  1469  002552  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1470  002554  0E08               	movlw	8
  1471  002556  0101               	movlb	1	; () banked
  1472  002558  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1473  00255A  0EBC               	movlw	188
  1474  00255C  0101               	movlb	1	; () banked
  1475  00255E  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1476  002560  EC5E  F006         	call	_CANsendMessage	;wreg free
  1477                           
  1478                           ;ABS_Code.c: 410: while (CANisTxReady() != 1);
  1479  002564  D000               	goto	l5139
  1480  002566                     l5139:
  1481  002566  ECC3  F015         	call	_CANisTxReady	;wreg free
  1482  00256A  06E8               	decf	wreg,f,c
  1483  00256C  A4D8               	btfss	status,2,c
  1484  00256E  D7FB               	goto	l5139
  1485                           
  1486                           ;ABS_Code.c: 411: CANsendMessage(0xAA, speed_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_T
      +                          X_FRAME & CAN_TX_PRIORITY_0);
  1487  002570  0EAA               	movlw	170
  1488  002572  0101               	movlb	1	; () banked
  1489  002574  6F00               	movwf	CANsendMessage@identifier& (0+255),b
  1490  002576  0E00               	movlw	0
  1491  002578  6F01               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1492  00257A  0E00               	movlw	0
  1493  00257C  6F02               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1494  00257E  0E00               	movlw	0
  1495  002580  6F03               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1496  002582  0E99               	movlw	low _speed_array
  1497  002584  0101               	movlb	1	; () banked
  1498  002586  6F04               	movwf	CANsendMessage@data& (0+255),b
  1499  002588  0E00               	movlw	high _speed_array
  1500  00258A  0101               	movlb	1	; () banked
  1501  00258C  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1502  00258E  0E08               	movlw	8
  1503  002590  0101               	movlb	1	; () banked
  1504  002592  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1505  002594  0EBC               	movlw	188
  1506  002596  0101               	movlb	1	; () banked
  1507  002598  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1508  00259A  EC5E  F006         	call	_CANsendMessage	;wreg free
  1509  00259E  D000               	goto	l5143
  1510  0025A0                     l5143:
  1511                           
  1512                           ;ABS_Code.c: 412: }
  1513                           ;ABS_Code.c: 413: if (remote_frame_id == 0b00000001010) {
  1514  0025A0  0E0A               	movlw	10
  1515  0025A2  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1516  0025A4  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1517  0025A6  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1518  0025A8  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1519  0025AA  A4D8               	btfss	status,2,c
  1520  0025AC  D014               	goto	l5149
  1521                           
  1522                           ;ABS_Code.c: 414: int_counter_1 = 0;
  1523  0025AE  0E00               	movlw	0
  1524  0025B0  0100               	movlb	0	; () banked
  1525  0025B2  6F6C               	movwf	_int_counter_1& (0+255),b	;volatile
  1526  0025B4  0E00               	movlw	0
  1527  0025B6  6F6D               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1528  0025B8  0E00               	movlw	0
  1529  0025BA  6F6E               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1530  0025BC  0E00               	movlw	0
  1531  0025BE  6F6F               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1532                           
  1533                           ;ABS_Code.c: 415: int_counter_2 = 0;
  1534  0025C0  0E00               	movlw	0
  1535  0025C2  0100               	movlb	0	; () banked
  1536  0025C4  6F70               	movwf	_int_counter_2& (0+255),b	;volatile
  1537  0025C6  0E00               	movlw	0
  1538  0025C8  6F71               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1539  0025CA  0E00               	movlw	0
  1540  0025CC  6F72               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1541  0025CE  0E00               	movlw	0
  1542  0025D0  6F73               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;ABS_Code.c: 416: count_flag = 1;
  1546  0025D2  8A48               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1547  0025D4  D000               	goto	l5149
  1548  0025D6                     l5149:
  1549                           
  1550                           ;ABS_Code.c: 417: }
  1551                           ;ABS_Code.c: 418: if (remote_frame_id == 0b00000001001) {
  1552  0025D6  0E09               	movlw	9
  1553  0025D8  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1554  0025DA  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1555  0025DC  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1556  0025DE  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1557  0025E0  A4D8               	btfss	status,2,c
  1558  0025E2  D03E               	goto	l5165
  1559                           
  1560                           ;ABS_Code.c: 419: distance_1 = step * (int_counter_1);
  1561  0025E4  C029  F0CD         	movff	_step,___wmul@multiplier	;volatile
  1562  0025E8  0100               	movlb	0	; () banked
  1563  0025EA  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1564  0025EC  C06C  F0CF         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1565  0025F0  C06D  F0D0         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1566  0025F4  EC8B  F015         	call	___wmul	;wreg free
  1567  0025F8  C0CD  F015         	movff	?___wmul,_distance_1	;volatile
  1568  0025FC  C0CE  F016         	movff	?___wmul+1,_distance_1+1	;volatile
  1569                           
  1570                           ;ABS_Code.c: 420: distance_2 = step * (int_counter_2);
  1571  002600  C029  F0CD         	movff	_step,___wmul@multiplier	;volatile
  1572  002604  0100               	movlb	0	; () banked
  1573  002606  6BCE               	clrf	(___wmul@multiplier+1)& (0+255),b
  1574  002608  C070  F0CF         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1575  00260C  C071  F0D0         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1576  002610  EC8B  F015         	call	___wmul	;wreg free
  1577  002614  C0CD  F017         	movff	?___wmul,_distance_2	;volatile
  1578  002618  C0CE  F018         	movff	?___wmul+1,_distance_2+1	;volatile
  1579                           
  1580                           ;ABS_Code.c: 421: count_flag = 0;
  1581  00261C  9A48               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1582                           
  1583                           ;ABS_Code.c: 422: distance_array[0] = distance_1;
  1584  00261E  C015  F091         	movff	_distance_1,_distance_array	;volatile
  1585                           
  1586                           ;ABS_Code.c: 423: distance_array[1] = distance_1 >> 8;
  1587  002622  5016               	movf	_distance_1+1,w,c	;volatile
  1588  002624  0100               	movlb	0	; () banked
  1589  002626  6F92               	movwf	(_distance_array+1)& (0+255),b	;volatile
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;ABS_Code.c: 424: distance_array[2] = distance_2;
  1593  002628  C017  F093         	movff	_distance_2,_distance_array+2	;volatile
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;ABS_Code.c: 425: distance_array[3] = distance_2 >> 8;
  1597  00262C  5018               	movf	_distance_2+1,w,c	;volatile
  1598  00262E  0100               	movlb	0	; () banked
  1599  002630  6F94               	movwf	(_distance_array+3)& (0+255),b	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;ABS_Code.c: 426: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1603  002632  C001  F100         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1604  002636  C002  F101         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1605  00263A  C003  F102         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1606  00263E  C004  F103         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1607  002642  0E91               	movlw	low _distance_array
  1608  002644  0101               	movlb	1	; () banked
  1609  002646  6F04               	movwf	CANsendMessage@data& (0+255),b
  1610  002648  0E00               	movlw	high _distance_array
  1611  00264A  0101               	movlb	1	; () banked
  1612  00264C  6F05               	movwf	(CANsendMessage@data+1)& (0+255),b
  1613  00264E  0E08               	movlw	8
  1614  002650  0101               	movlb	1	; () banked
  1615  002652  6F06               	movwf	CANsendMessage@dataLength& (0+255),b
  1616  002654  0EBC               	movlw	188
  1617  002656  0101               	movlb	1	; () banked
  1618  002658  6F07               	movwf	CANsendMessage@flags& (0+255),b
  1619  00265A  EC5E  F006         	call	_CANsendMessage	;wreg free
  1620  00265E  D000               	goto	l5165
  1621  002660                     l5165:
  1622                           
  1623                           ;ABS_Code.c: 427: }
  1624                           ;ABS_Code.c: 429: if (TXB0CONbits.TXABT == 1 || TXB1CONbits.TXABT == 1) {
  1625  002660  010F               	movlb	15	; () banked
  1626  002662  BD40               	btfsc	64,6,b	;volatile
  1627  002664  D005               	goto	l751
  1628                           
  1629                           ; BSR set to: 15
  1630  002666  010F               	movlb	15	; () banked
  1631  002668  BD30               	btfsc	48,6,b	;volatile
  1632  00266A  D002               	goto	l751
  1633                           
  1634                           ; BSR set to: 15
  1635                           ;ABS_Code.c: 432: Tx_retry = 0;
  1636                           
  1637                           ;ABS_Code.c: 431: } else {
  1638                           
  1639                           ; BSR set to: 15
  1640                           ;ABS_Code.c: 430: Tx_retry = 1;
  1641  00266C  9848               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1642                           
  1643                           ; BSR set to: 15
  1644                           ;ABS_Code.c: 433: }
  1645                           ;ABS_Code.c: 434: } else {
  1646  00266E  D002               	goto	l764
  1647  002670                     l751:
  1648                           
  1649                           ;ABS_Code.c: 435: Tx_retry = 1;
  1650  002670  8848               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1651  002672  D000               	goto	l764
  1652  002674                     l764:
  1653  002674  0012               	return		;funcret
  1654  002676                     __end_of_remote_frame_handler:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postdec1	equ	0xFE5
  1665                           fsr1l	equ	0xFE1
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function ___wmul *****************
  1669 ;; Defined at:
  1670 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  multiplier      2   36[BANK0 ] unsigned int 
  1673 ;;  multiplicand    2   38[BANK0 ] unsigned int 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  product         2   40[BANK0 ] unsigned int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2   36[BANK0 ] unsigned int 
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, prodl, prodh
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1685 ;;      Params:         0       4       0       0
  1686 ;;      Locals:         0       2       0       0
  1687 ;;      Temps:          0       0       0       0
  1688 ;;      Totals:         0       6       0       0
  1689 ;;Total ram usage:        6 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    4
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;;		_remote_frame_handler
  1697 ;;		_delay_ms
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text2
  1702  002B16                     __ptext2:
  1703                           	opt stack 0
  1704  002B16                     ___wmul:
  1705                           	opt stack 25
  1706                           
  1707                           ;incstack = 0
  1708  002B16  0100               	movlb	0	; () banked
  1709  002B18  51CD               	movf	___wmul@multiplier& (0+255),w,b
  1710  002B1A  0100               	movlb	0	; () banked
  1711  002B1C  03CF               	mulwf	___wmul@multiplicand& (0+255),b
  1712  002B1E  CFF3 F0D1          	movff	prodl,___wmul@product
  1713  002B22  CFF4 F0D2          	movff	prodh,___wmul@product+1
  1714  002B26  0100               	movlb	0	; () banked
  1715  002B28  51CD               	movf	___wmul@multiplier& (0+255),w,b
  1716  002B2A  0100               	movlb	0	; () banked
  1717  002B2C  03D0               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1718  002B2E  50F3               	movf	prodl,w,c
  1719  002B30  0100               	movlb	0	; () banked
  1720  002B32  27D2               	addwf	(___wmul@product+1)& (0+255),f,b
  1721  002B34  0100               	movlb	0	; () banked
  1722  002B36  51CE               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1723  002B38  0100               	movlb	0	; () banked
  1724  002B3A  03CF               	mulwf	___wmul@multiplicand& (0+255),b
  1725  002B3C  50F3               	movf	prodl,w,c
  1726  002B3E  0100               	movlb	0	; () banked
  1727  002B40  27D2               	addwf	(___wmul@product+1)& (0+255),f,b
  1728                           
  1729                           ; BSR set to: 0
  1730  002B42  C0D1  F0CD         	movff	___wmul@product,?___wmul
  1731  002B46  C0D2  F0CE         	movff	___wmul@product+1,?___wmul+1
  1732  002B4A  D000               	goto	l780
  1733  002B4C                     l780:
  1734                           
  1735                           ; BSR set to: 0
  1736  002B4C  0012               	return		;funcret
  1737  002B4E                     __end_of___wmul:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           prodh	equ	0xFF4
  1744                           prodl	equ	0xFF3
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _CANsendMessage *****************
  1752 ;; Defined at:
  1753 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  identifier      4    0[BANK1 ] unsigned long 
  1756 ;;  data            2    4[BANK1 ] PTR unsigned char 
  1757 ;;		 -> distance_array(8), status_array(8), speed_array(8), remote_frame_array(8), 
  1758 ;;  dataLength      1    6[BANK1 ] unsigned char 
  1759 ;;  flags           1    7[BANK1 ] enum E16907
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  tamp            4    8[BANK1 ] unsigned long 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;		None               void
  1764 ;; Registers used:
  1765 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1771 ;;      Params:         0       0       8       0
  1772 ;;      Locals:         0       0       4       0
  1773 ;;      Temps:          0       4       0       0
  1774 ;;      Totals:         0       4      12       0
  1775 ;;Total ram usage:       16 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    4
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;;		_remote_frame_handler
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           	psect	text3
  1787  000CBC                     __ptext3:
  1788                           	opt stack 0
  1789  000CBC                     _CANsendMessage:
  1790                           	opt stack 25
  1791                           
  1792                           ;inc\CANlib.h: 296: unsigned long tamp;
  1793                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;incstack = 0
  1797  000CBC  010F               	movlb	15	; () banked
  1798  000CBE  B740               	btfsc	64,3,b	;volatile
  1799  000CC0  D142               	goto	l373
  1800                           
  1801                           ; BSR set to: 15
  1802                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1803  000CC2  C106  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1804                           
  1805                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1806  000CC6  0101               	movlb	1	; () banked
  1807  000CC8  AD07               	btfss	CANsendMessage@flags& (0+255),6,b
  1808  000CCA  D003               	goto	l374
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1812  000CCC  010F               	movlb	15	; () banked
  1813  000CCE  8D45               	bsf	69,6,b	;volatile
  1814  000CD0  D002               	goto	l375
  1815  000CD2                     l374:
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;inc\CANlib.h: 302: else
  1819                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1820  000CD2  010F               	movlb	15	; () banked
  1821  000CD4  9D45               	bcf	69,6,b	;volatile
  1822  000CD6                     l375:
  1823                           
  1824                           ; BSR set to: 15
  1825                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1826  000CD6  0101               	movlb	1	; () banked
  1827  000CD8  A707               	btfss	CANsendMessage@flags& (0+255),3,b
  1828  000CDA  D07A               	goto	l376
  1829                           
  1830                           ; BSR set to: 1
  1831                           ;inc\CANlib.h: 306: {
  1832                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1833  000CDC  0101               	movlb	1	; () banked
  1834  000CDE  5100               	movf	CANsendMessage@identifier& (0+255),w,b
  1835  000CE0  0101               	movlb	1	; () banked
  1836  000CE2  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  1837  000CE4  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1838  000CE6  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1839  000CE8  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1840                           
  1841                           ; BSR set to: 1
  1842                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1843  000CEA  C108  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1847  000CEE  0E00               	movlw	0
  1848  000CF0  0101               	movlb	1	; () banked
  1849  000CF2  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  1850  000CF4  0101               	movlb	1	; () banked
  1851  000CF6  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  1852  000CF8  0EFF               	movlw	255
  1853  000CFA  0101               	movlb	1	; () banked
  1854  000CFC  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1855  000CFE  0101               	movlb	1	; () banked
  1856  000D00  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1857  000D02  0E00               	movlw	0
  1858  000D04  0101               	movlb	1	; () banked
  1859  000D06  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1860  000D08  0101               	movlb	1	; () banked
  1861  000D0A  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1862  000D0C  0E00               	movlw	0
  1863  000D0E  0101               	movlb	1	; () banked
  1864  000D10  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1865  000D12  0101               	movlb	1	; () banked
  1866  000D14  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1867                           
  1868                           ; BSR set to: 1
  1869                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1870  000D16  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  1871  000D1A  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1872  000D1E  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1873  000D22  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1874  000D26  C0CE  F0CD         	movff	??_CANsendMessage+1,??_CANsendMessage
  1875  000D2A  C0CF  F0CE         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1876  000D2E  C0D0  F0CF         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1877  000D32  0100               	movlb	0	; () banked
  1878  000D34  6BD0               	clrf	(??_CANsendMessage+3)& (0+255),b
  1879  000D36  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  1880  000D3A  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1881  000D3E  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1882  000D42  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1886  000D46  C108  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1890  000D4A  0E00               	movlw	0
  1891  000D4C  010F               	movlb	15	; () banked
  1892  000D4E  6F42               	movwf	66,b	;volatile
  1893                           
  1894                           ; BSR set to: 15
  1895                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1896  000D50  010F               	movlb	15	; () banked
  1897  000D52  8742               	bsf	66,3,b	;volatile
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1901  000D54  0101               	movlb	1	; () banked
  1902  000D56  A102               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1903  000D58  D002               	goto	l377
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1907  000D5A  010F               	movlb	15	; () banked
  1908  000D5C  8142               	bsf	66,0,b	;volatile
  1909  000D5E                     l377:
  1910                           
  1911                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1912  000D5E  0101               	movlb	1	; () banked
  1913  000D60  A302               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1914  000D62  D002               	goto	l378
  1915                           
  1916                           ; BSR set to: 1
  1917                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1918  000D64  010F               	movlb	15	; () banked
  1919  000D66  8342               	bsf	66,1,b	;volatile
  1920  000D68                     l378:
  1921                           
  1922                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1923  000D68  0101               	movlb	1	; () banked
  1924  000D6A  A502               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1925  000D6C  D002               	goto	l379
  1926                           
  1927                           ; BSR set to: 1
  1928                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1929  000D6E  010F               	movlb	15	; () banked
  1930  000D70  8B42               	bsf	66,5,b	;volatile
  1931  000D72                     l379:
  1932                           
  1933                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1934  000D72  0101               	movlb	1	; () banked
  1935  000D74  A702               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1936  000D76  D002               	goto	l380
  1937                           
  1938                           ; BSR set to: 1
  1939                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1940  000D78  010F               	movlb	15	; () banked
  1941  000D7A  8D42               	bsf	66,6,b	;volatile
  1942  000D7C                     l380:
  1943                           
  1944                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1945  000D7C  0101               	movlb	1	; () banked
  1946  000D7E  A902               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1947  000D80  D003               	goto	l4813
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1951  000D82  010F               	movlb	15	; () banked
  1952  000D84  8F42               	bsf	66,7,b	;volatile
  1953  000D86  D000               	goto	l4813
  1954  000D88                     l4813:
  1955                           
  1956                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1957  000D88  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  1958  000D8C  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1959  000D90  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1960  000D94  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1961  000D98  0E16               	movlw	22
  1962  000D9A  D006               	goto	u6140
  1963  000D9C                     u6145:
  1964  000D9C  0100               	movlb	0	; () banked
  1965  000D9E  90D8               	bcf	status,0,c
  1966  000DA0  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1967  000DA2  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1968  000DA4  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1969  000DA6  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  1970  000DA8                     u6140:
  1971  000DA8  2EE8               	decfsz	wreg,f,c
  1972  000DAA  D7F8               	goto	u6145
  1973  000DAC  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  1974  000DB0  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1975  000DB4  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1976  000DB8  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1980  000DBC  0101               	movlb	1	; () banked
  1981  000DBE  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  1982  000DC0  0101               	movlb	1	; () banked
  1983  000DC2  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  1984  000DC4  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1985  000DC6  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1986  000DC8  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1987                           
  1988                           ; BSR set to: 1
  1989                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1990  000DCA  C108  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1991                           
  1992                           ;inc\CANlib.h: 332: }
  1993  000DCE  D05A               	goto	l4833
  1994  000DD0                     l376:
  1995                           
  1996                           ; BSR set to: 1
  1997                           ;inc\CANlib.h: 334: else
  1998                           ;inc\CANlib.h: 336: {
  1999                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  2000  000DD0  010F               	movlb	15	; () banked
  2001  000DD2  9742               	bcf	66,3,b	;volatile
  2002                           
  2003                           ; BSR set to: 15
  2004                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  2005  000DD4  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2006  000DD8  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2007  000DDC  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2008  000DE0  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2009  000DE4  0E04               	movlw	4
  2010  000DE6  D006               	goto	u6150
  2011  000DE8                     u6155:
  2012  000DE8  0100               	movlb	0	; () banked
  2013  000DEA  90D8               	bcf	status,0,c
  2014  000DEC  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2015  000DEE  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2016  000DF0  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2017  000DF2  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2018  000DF4                     u6150:
  2019  000DF4  2EE8               	decfsz	wreg,f,c
  2020  000DF6  D7F8               	goto	u6155
  2021  000DF8  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2022  000DFC  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2023  000E00  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2024  000E04  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  2028  000E08  0101               	movlb	1	; () banked
  2029  000E0A  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2030  000E0C  0101               	movlb	1	; () banked
  2031  000E0E  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2032  000E10  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2033  000E12  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2034  000E14  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  2038  000E16  C108  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2039                           
  2040                           ; BSR set to: 1
  2041                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  2042  000E1A  0E07               	movlw	7
  2043  000E1C  0101               	movlb	1	; () banked
  2044  000E1E  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2045  000E20  0101               	movlb	1	; () banked
  2046  000E22  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2047  000E24  0E00               	movlw	0
  2048  000E26  0101               	movlb	1	; () banked
  2049  000E28  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2050  000E2A  0101               	movlb	1	; () banked
  2051  000E2C  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2052  000E2E  0E00               	movlw	0
  2053  000E30  0101               	movlb	1	; () banked
  2054  000E32  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2055  000E34  0101               	movlb	1	; () banked
  2056  000E36  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2057  000E38  0E00               	movlw	0
  2058  000E3A  0101               	movlb	1	; () banked
  2059  000E3C  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2060  000E3E  0101               	movlb	1	; () banked
  2061  000E40  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2062                           
  2063                           ; BSR set to: 1
  2064                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  2065  000E42  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2066  000E46  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2067  000E4A  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2068  000E4E  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2069  000E52  0E05               	movlw	5
  2070  000E54                     u6165:
  2071  000E54  90D8               	bcf	status,0,c
  2072  000E56  0100               	movlb	0	; () banked
  2073  000E58  37CD               	rlcf	??_CANsendMessage& (0+255),f,b
  2074  000E5A  37CE               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2075  000E5C  37CF               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2076  000E5E  37D0               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2077  000E60  2EE8               	decfsz	wreg,f,c
  2078  000E62  D7F8               	goto	u6165
  2079  000E64  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2080  000E68  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2081  000E6C  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2082  000E70  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  2086  000E74  010F               	movlb	15	; () banked
  2087  000E76  5142               	movf	66,w,b	;volatile
  2088  000E78  0B1F               	andlw	31
  2089  000E7A  010F               	movlb	15	; () banked
  2090  000E7C  6F42               	movwf	66,b	;volatile
  2091                           
  2092                           ; BSR set to: 15
  2093                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  2094  000E7E  C108  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  2095  000E82  D000               	goto	l4833
  2096  000E84                     l4833:
  2097                           
  2098                           ;inc\CANlib.h: 347: }
  2099                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  2100  000E84  0101               	movlb	1	; () banked
  2101  000E86  A107               	btfss	CANsendMessage@flags& (0+255),0,b
  2102  000E88  D003               	goto	l383
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2106  000E8A  010F               	movlb	15	; () banked
  2107  000E8C  8140               	bsf	64,0,b	;volatile
  2108  000E8E  D002               	goto	l384
  2109  000E90                     l383:
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;inc\CANlib.h: 351: else
  2113                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2114  000E90  010F               	movlb	15	; () banked
  2115  000E92  9140               	bcf	64,0,b	;volatile
  2116  000E94                     l384:
  2117                           
  2118                           ; BSR set to: 15
  2119                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2120  000E94  0101               	movlb	1	; () banked
  2121  000E96  A307               	btfss	CANsendMessage@flags& (0+255),1,b
  2122  000E98  D003               	goto	l385
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2126  000E9A  010F               	movlb	15	; () banked
  2127  000E9C  8340               	bsf	64,1,b	;volatile
  2128  000E9E  D003               	goto	l4839
  2129  000EA0                     l385:
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;inc\CANlib.h: 355: else
  2133                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2134  000EA0  010F               	movlb	15	; () banked
  2135  000EA2  9340               	bcf	64,1,b	;volatile
  2136  000EA4  D000               	goto	l4839
  2137  000EA6                     l4839:
  2138                           
  2139                           ; BSR set to: 15
  2140                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2141  000EA6  C104  FFD9         	movff	CANsendMessage@data,fsr2l
  2142  000EAA  C105  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2143  000EAE  50DF               	movf	indf2,w,c
  2144  000EB0  010F               	movlb	15	; () banked
  2145  000EB2  6F46               	movwf	70,b	;volatile
  2146                           
  2147                           ; BSR set to: 15
  2148                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2149  000EB4  0101               	movlb	1	; () banked
  2150  000EB6  EE20 F001          	lfsr	2,1
  2151  000EBA  5104               	movf	CANsendMessage@data& (0+255),w,b
  2152  000EBC  26D9               	addwf	fsr2l,f,c
  2153  000EBE  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2154  000EC0  22DA               	addwfc	fsr2h,f,c
  2155  000EC2  50DF               	movf	indf2,w,c
  2156  000EC4  010F               	movlb	15	; () banked
  2157  000EC6  6F47               	movwf	71,b	;volatile
  2158                           
  2159                           ; BSR set to: 15
  2160                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2161  000EC8  0101               	movlb	1	; () banked
  2162  000ECA  EE20 F002          	lfsr	2,2
  2163  000ECE  5104               	movf	CANsendMessage@data& (0+255),w,b
  2164  000ED0  26D9               	addwf	fsr2l,f,c
  2165  000ED2  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2166  000ED4  22DA               	addwfc	fsr2h,f,c
  2167  000ED6  50DF               	movf	indf2,w,c
  2168  000ED8  010F               	movlb	15	; () banked
  2169  000EDA  6F48               	movwf	72,b	;volatile
  2170                           
  2171                           ; BSR set to: 15
  2172                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2173  000EDC  0101               	movlb	1	; () banked
  2174  000EDE  EE20 F003          	lfsr	2,3
  2175  000EE2  5104               	movf	CANsendMessage@data& (0+255),w,b
  2176  000EE4  26D9               	addwf	fsr2l,f,c
  2177  000EE6  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2178  000EE8  22DA               	addwfc	fsr2h,f,c
  2179  000EEA  50DF               	movf	indf2,w,c
  2180  000EEC  010F               	movlb	15	; () banked
  2181  000EEE  6F49               	movwf	73,b	;volatile
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2185  000EF0  0101               	movlb	1	; () banked
  2186  000EF2  EE20 F004          	lfsr	2,4
  2187  000EF6  5104               	movf	CANsendMessage@data& (0+255),w,b
  2188  000EF8  26D9               	addwf	fsr2l,f,c
  2189  000EFA  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2190  000EFC  22DA               	addwfc	fsr2h,f,c
  2191  000EFE  50DF               	movf	indf2,w,c
  2192  000F00  010F               	movlb	15	; () banked
  2193  000F02  6F4A               	movwf	74,b	;volatile
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2197  000F04  0101               	movlb	1	; () banked
  2198  000F06  EE20 F005          	lfsr	2,5
  2199  000F0A  5104               	movf	CANsendMessage@data& (0+255),w,b
  2200  000F0C  26D9               	addwf	fsr2l,f,c
  2201  000F0E  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2202  000F10  22DA               	addwfc	fsr2h,f,c
  2203  000F12  50DF               	movf	indf2,w,c
  2204  000F14  010F               	movlb	15	; () banked
  2205  000F16  6F4B               	movwf	75,b	;volatile
  2206                           
  2207                           ; BSR set to: 15
  2208                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2209  000F18  0101               	movlb	1	; () banked
  2210  000F1A  EE20 F006          	lfsr	2,6
  2211  000F1E  5104               	movf	CANsendMessage@data& (0+255),w,b
  2212  000F20  26D9               	addwf	fsr2l,f,c
  2213  000F22  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2214  000F24  22DA               	addwfc	fsr2h,f,c
  2215  000F26  50DF               	movf	indf2,w,c
  2216  000F28  010F               	movlb	15	; () banked
  2217  000F2A  6F4C               	movwf	76,b	;volatile
  2218                           
  2219                           ; BSR set to: 15
  2220                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2221  000F2C  0101               	movlb	1	; () banked
  2222  000F2E  EE20 F007          	lfsr	2,7
  2223  000F32  5104               	movf	CANsendMessage@data& (0+255),w,b
  2224  000F34  26D9               	addwf	fsr2l,f,c
  2225  000F36  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2226  000F38  22DA               	addwfc	fsr2h,f,c
  2227  000F3A  50DF               	movf	indf2,w,c
  2228  000F3C  010F               	movlb	15	; () banked
  2229  000F3E  6F4D               	movwf	77,b	;volatile
  2230                           
  2231                           ; BSR set to: 15
  2232                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2233  000F40  010F               	movlb	15	; () banked
  2234  000F42  8740               	bsf	64,3,b	;volatile
  2235                           
  2236                           ; BSR set to: 15
  2237                           ;inc\CANlib.h: 368: return;
  2238  000F44  D28A               	goto	l387
  2239  000F46                     l373:
  2240                           
  2241                           ; BSR set to: 15
  2242                           ;inc\CANlib.h: 369: }
  2243                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2244  000F46  010F               	movlb	15	; () banked
  2245  000F48  B730               	btfsc	48,3,b	;volatile
  2246  000F4A  D142               	goto	l388
  2247                           
  2248                           ; BSR set to: 15
  2249                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2250  000F4C  C106  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2251                           
  2252                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2253  000F50  0101               	movlb	1	; () banked
  2254  000F52  AD07               	btfss	CANsendMessage@flags& (0+255),6,b
  2255  000F54  D003               	goto	l389
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2259  000F56  010F               	movlb	15	; () banked
  2260  000F58  8D35               	bsf	53,6,b	;volatile
  2261  000F5A  D002               	goto	l390
  2262  000F5C                     l389:
  2263                           
  2264                           ; BSR set to: 1
  2265                           ;inc\CANlib.h: 378: else
  2266                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2267  000F5C  010F               	movlb	15	; () banked
  2268  000F5E  9D35               	bcf	53,6,b	;volatile
  2269  000F60                     l390:
  2270                           
  2271                           ; BSR set to: 15
  2272                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2273  000F60  0101               	movlb	1	; () banked
  2274  000F62  A707               	btfss	CANsendMessage@flags& (0+255),3,b
  2275  000F64  D07A               	goto	l391
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;inc\CANlib.h: 382: {
  2279                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2280  000F66  0101               	movlb	1	; () banked
  2281  000F68  5100               	movf	CANsendMessage@identifier& (0+255),w,b
  2282  000F6A  0101               	movlb	1	; () banked
  2283  000F6C  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2284  000F6E  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2285  000F70  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2286  000F72  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2290  000F74  C108  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2294  000F78  0E00               	movlw	0
  2295  000F7A  0101               	movlb	1	; () banked
  2296  000F7C  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2297  000F7E  0101               	movlb	1	; () banked
  2298  000F80  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2299  000F82  0EFF               	movlw	255
  2300  000F84  0101               	movlb	1	; () banked
  2301  000F86  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2302  000F88  0101               	movlb	1	; () banked
  2303  000F8A  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2304  000F8C  0E00               	movlw	0
  2305  000F8E  0101               	movlb	1	; () banked
  2306  000F90  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2307  000F92  0101               	movlb	1	; () banked
  2308  000F94  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2309  000F96  0E00               	movlw	0
  2310  000F98  0101               	movlb	1	; () banked
  2311  000F9A  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2312  000F9C  0101               	movlb	1	; () banked
  2313  000F9E  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2314                           
  2315                           ; BSR set to: 1
  2316                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2317  000FA0  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2318  000FA4  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2319  000FA8  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2320  000FAC  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2321  000FB0  C0CE  F0CD         	movff	??_CANsendMessage+1,??_CANsendMessage
  2322  000FB4  C0CF  F0CE         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2323  000FB8  C0D0  F0CF         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2324  000FBC  0100               	movlb	0	; () banked
  2325  000FBE  6BD0               	clrf	(??_CANsendMessage+3)& (0+255),b
  2326  000FC0  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2327  000FC4  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2328  000FC8  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2329  000FCC  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2333  000FD0  C108  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2337  000FD4  0E00               	movlw	0
  2338  000FD6  010F               	movlb	15	; () banked
  2339  000FD8  6F32               	movwf	50,b	;volatile
  2340                           
  2341                           ; BSR set to: 15
  2342                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2343  000FDA  010F               	movlb	15	; () banked
  2344  000FDC  8732               	bsf	50,3,b	;volatile
  2345                           
  2346                           ; BSR set to: 15
  2347                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2348  000FDE  0101               	movlb	1	; () banked
  2349  000FE0  A102               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2350  000FE2  D002               	goto	l392
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2354  000FE4  010F               	movlb	15	; () banked
  2355  000FE6  8132               	bsf	50,0,b	;volatile
  2356  000FE8                     l392:
  2357                           
  2358                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2359  000FE8  0101               	movlb	1	; () banked
  2360  000FEA  A302               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2361  000FEC  D002               	goto	l393
  2362                           
  2363                           ; BSR set to: 1
  2364                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2365  000FEE  010F               	movlb	15	; () banked
  2366  000FF0  8332               	bsf	50,1,b	;volatile
  2367  000FF2                     l393:
  2368                           
  2369                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2370  000FF2  0101               	movlb	1	; () banked
  2371  000FF4  A502               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2372  000FF6  D002               	goto	l394
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2376  000FF8  010F               	movlb	15	; () banked
  2377  000FFA  8B32               	bsf	50,5,b	;volatile
  2378  000FFC                     l394:
  2379                           
  2380                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2381  000FFC  0101               	movlb	1	; () banked
  2382  000FFE  A702               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2383  001000  D002               	goto	l395
  2384                           
  2385                           ; BSR set to: 1
  2386                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2387  001002  010F               	movlb	15	; () banked
  2388  001004  8D32               	bsf	50,6,b	;volatile
  2389  001006                     l395:
  2390                           
  2391                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2392  001006  0101               	movlb	1	; () banked
  2393  001008  A902               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2394  00100A  D003               	goto	l4889
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2398  00100C  010F               	movlb	15	; () banked
  2399  00100E  8F32               	bsf	50,7,b	;volatile
  2400  001010  D000               	goto	l4889
  2401  001012                     l4889:
  2402                           
  2403                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2404  001012  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2405  001016  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2406  00101A  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2407  00101E  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2408  001022  0E16               	movlw	22
  2409  001024  D006               	goto	u6270
  2410  001026                     u6275:
  2411  001026  0100               	movlb	0	; () banked
  2412  001028  90D8               	bcf	status,0,c
  2413  00102A  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2414  00102C  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2415  00102E  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2416  001030  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2417  001032                     u6270:
  2418  001032  2EE8               	decfsz	wreg,f,c
  2419  001034  D7F8               	goto	u6275
  2420  001036  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2421  00103A  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2422  00103E  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2423  001042  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2427  001046  0101               	movlb	1	; () banked
  2428  001048  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2429  00104A  0101               	movlb	1	; () banked
  2430  00104C  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2431  00104E  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2432  001050  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2433  001052  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2434                           
  2435                           ; BSR set to: 1
  2436                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2437  001054  C108  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2438                           
  2439                           ;inc\CANlib.h: 407: }
  2440  001058  D05A               	goto	l4909
  2441  00105A                     l391:
  2442                           
  2443                           ; BSR set to: 1
  2444                           ;inc\CANlib.h: 409: else
  2445                           ;inc\CANlib.h: 411: {
  2446                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2447  00105A  010F               	movlb	15	; () banked
  2448  00105C  9732               	bcf	50,3,b	;volatile
  2449                           
  2450                           ; BSR set to: 15
  2451                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2452  00105E  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2453  001062  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2454  001066  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2455  00106A  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2456  00106E  0E04               	movlw	4
  2457  001070  D006               	goto	u6280
  2458  001072                     u6285:
  2459  001072  0100               	movlb	0	; () banked
  2460  001074  90D8               	bcf	status,0,c
  2461  001076  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2462  001078  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2463  00107A  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2464  00107C  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2465  00107E                     u6280:
  2466  00107E  2EE8               	decfsz	wreg,f,c
  2467  001080  D7F8               	goto	u6285
  2468  001082  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2469  001086  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2470  00108A  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2471  00108E  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2475  001092  0101               	movlb	1	; () banked
  2476  001094  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2477  001096  0101               	movlb	1	; () banked
  2478  001098  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2479  00109A  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2480  00109C  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2481  00109E  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2482                           
  2483                           ; BSR set to: 1
  2484                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2485  0010A0  C108  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2489  0010A4  0E07               	movlw	7
  2490  0010A6  0101               	movlb	1	; () banked
  2491  0010A8  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2492  0010AA  0101               	movlb	1	; () banked
  2493  0010AC  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2494  0010AE  0E00               	movlw	0
  2495  0010B0  0101               	movlb	1	; () banked
  2496  0010B2  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2497  0010B4  0101               	movlb	1	; () banked
  2498  0010B6  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2499  0010B8  0E00               	movlw	0
  2500  0010BA  0101               	movlb	1	; () banked
  2501  0010BC  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2502  0010BE  0101               	movlb	1	; () banked
  2503  0010C0  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2504  0010C2  0E00               	movlw	0
  2505  0010C4  0101               	movlb	1	; () banked
  2506  0010C6  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2507  0010C8  0101               	movlb	1	; () banked
  2508  0010CA  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2512  0010CC  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2513  0010D0  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2514  0010D4  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2515  0010D8  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2516  0010DC  0E05               	movlw	5
  2517  0010DE                     u6295:
  2518  0010DE  90D8               	bcf	status,0,c
  2519  0010E0  0100               	movlb	0	; () banked
  2520  0010E2  37CD               	rlcf	??_CANsendMessage& (0+255),f,b
  2521  0010E4  37CE               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2522  0010E6  37CF               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2523  0010E8  37D0               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2524  0010EA  2EE8               	decfsz	wreg,f,c
  2525  0010EC  D7F8               	goto	u6295
  2526  0010EE  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2527  0010F2  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2528  0010F6  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2529  0010FA  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2533  0010FE  010F               	movlb	15	; () banked
  2534  001100  5132               	movf	50,w,b	;volatile
  2535  001102  0B1F               	andlw	31
  2536  001104  010F               	movlb	15	; () banked
  2537  001106  6F32               	movwf	50,b	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2541  001108  C108  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2542  00110C  D000               	goto	l4909
  2543  00110E                     l4909:
  2544                           
  2545                           ;inc\CANlib.h: 422: }
  2546                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2547  00110E  0101               	movlb	1	; () banked
  2548  001110  A107               	btfss	CANsendMessage@flags& (0+255),0,b
  2549  001112  D003               	goto	l398
  2550                           
  2551                           ; BSR set to: 1
  2552                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2553  001114  010F               	movlb	15	; () banked
  2554  001116  8130               	bsf	48,0,b	;volatile
  2555  001118  D002               	goto	l399
  2556  00111A                     l398:
  2557                           
  2558                           ; BSR set to: 1
  2559                           ;inc\CANlib.h: 426: else
  2560                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2561  00111A  010F               	movlb	15	; () banked
  2562  00111C  9130               	bcf	48,0,b	;volatile
  2563  00111E                     l399:
  2564                           
  2565                           ; BSR set to: 15
  2566                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2567  00111E  0101               	movlb	1	; () banked
  2568  001120  A307               	btfss	CANsendMessage@flags& (0+255),1,b
  2569  001122  D003               	goto	l400
  2570                           
  2571                           ; BSR set to: 1
  2572                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2573  001124  010F               	movlb	15	; () banked
  2574  001126  8330               	bsf	48,1,b	;volatile
  2575  001128  D003               	goto	l4915
  2576  00112A                     l400:
  2577                           
  2578                           ; BSR set to: 1
  2579                           ;inc\CANlib.h: 430: else
  2580                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2581  00112A  010F               	movlb	15	; () banked
  2582  00112C  9330               	bcf	48,1,b	;volatile
  2583  00112E  D000               	goto	l4915
  2584  001130                     l4915:
  2585                           
  2586                           ; BSR set to: 15
  2587                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2588  001130  C104  FFD9         	movff	CANsendMessage@data,fsr2l
  2589  001134  C105  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2590  001138  50DF               	movf	indf2,w,c
  2591  00113A  010F               	movlb	15	; () banked
  2592  00113C  6F36               	movwf	54,b	;volatile
  2593                           
  2594                           ; BSR set to: 15
  2595                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2596  00113E  0101               	movlb	1	; () banked
  2597  001140  EE20 F001          	lfsr	2,1
  2598  001144  5104               	movf	CANsendMessage@data& (0+255),w,b
  2599  001146  26D9               	addwf	fsr2l,f,c
  2600  001148  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2601  00114A  22DA               	addwfc	fsr2h,f,c
  2602  00114C  50DF               	movf	indf2,w,c
  2603  00114E  010F               	movlb	15	; () banked
  2604  001150  6F37               	movwf	55,b	;volatile
  2605                           
  2606                           ; BSR set to: 15
  2607                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2608  001152  0101               	movlb	1	; () banked
  2609  001154  EE20 F002          	lfsr	2,2
  2610  001158  5104               	movf	CANsendMessage@data& (0+255),w,b
  2611  00115A  26D9               	addwf	fsr2l,f,c
  2612  00115C  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2613  00115E  22DA               	addwfc	fsr2h,f,c
  2614  001160  50DF               	movf	indf2,w,c
  2615  001162  010F               	movlb	15	; () banked
  2616  001164  6F38               	movwf	56,b	;volatile
  2617                           
  2618                           ; BSR set to: 15
  2619                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2620  001166  0101               	movlb	1	; () banked
  2621  001168  EE20 F003          	lfsr	2,3
  2622  00116C  5104               	movf	CANsendMessage@data& (0+255),w,b
  2623  00116E  26D9               	addwf	fsr2l,f,c
  2624  001170  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2625  001172  22DA               	addwfc	fsr2h,f,c
  2626  001174  50DF               	movf	indf2,w,c
  2627  001176  010F               	movlb	15	; () banked
  2628  001178  6F39               	movwf	57,b	;volatile
  2629                           
  2630                           ; BSR set to: 15
  2631                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2632  00117A  0101               	movlb	1	; () banked
  2633  00117C  EE20 F004          	lfsr	2,4
  2634  001180  5104               	movf	CANsendMessage@data& (0+255),w,b
  2635  001182  26D9               	addwf	fsr2l,f,c
  2636  001184  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2637  001186  22DA               	addwfc	fsr2h,f,c
  2638  001188  50DF               	movf	indf2,w,c
  2639  00118A  010F               	movlb	15	; () banked
  2640  00118C  6F3A               	movwf	58,b	;volatile
  2641                           
  2642                           ; BSR set to: 15
  2643                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2644  00118E  0101               	movlb	1	; () banked
  2645  001190  EE20 F005          	lfsr	2,5
  2646  001194  5104               	movf	CANsendMessage@data& (0+255),w,b
  2647  001196  26D9               	addwf	fsr2l,f,c
  2648  001198  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2649  00119A  22DA               	addwfc	fsr2h,f,c
  2650  00119C  50DF               	movf	indf2,w,c
  2651  00119E  010F               	movlb	15	; () banked
  2652  0011A0  6F3B               	movwf	59,b	;volatile
  2653                           
  2654                           ; BSR set to: 15
  2655                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2656  0011A2  0101               	movlb	1	; () banked
  2657  0011A4  EE20 F006          	lfsr	2,6
  2658  0011A8  5104               	movf	CANsendMessage@data& (0+255),w,b
  2659  0011AA  26D9               	addwf	fsr2l,f,c
  2660  0011AC  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2661  0011AE  22DA               	addwfc	fsr2h,f,c
  2662  0011B0  50DF               	movf	indf2,w,c
  2663  0011B2  010F               	movlb	15	; () banked
  2664  0011B4  6F3C               	movwf	60,b	;volatile
  2665                           
  2666                           ; BSR set to: 15
  2667                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2668  0011B6  0101               	movlb	1	; () banked
  2669  0011B8  EE20 F007          	lfsr	2,7
  2670  0011BC  5104               	movf	CANsendMessage@data& (0+255),w,b
  2671  0011BE  26D9               	addwf	fsr2l,f,c
  2672  0011C0  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2673  0011C2  22DA               	addwfc	fsr2h,f,c
  2674  0011C4  50DF               	movf	indf2,w,c
  2675  0011C6  010F               	movlb	15	; () banked
  2676  0011C8  6F3D               	movwf	61,b	;volatile
  2677                           
  2678                           ; BSR set to: 15
  2679                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2680  0011CA  010F               	movlb	15	; () banked
  2681  0011CC  8730               	bsf	48,3,b	;volatile
  2682                           
  2683                           ; BSR set to: 15
  2684                           ;inc\CANlib.h: 444: return;
  2685  0011CE  D145               	goto	l387
  2686  0011D0                     l388:
  2687                           
  2688                           ; BSR set to: 15
  2689                           ;inc\CANlib.h: 445: }
  2690                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2691  0011D0  010F               	movlb	15	; () banked
  2692  0011D2  B720               	btfsc	32,3,b	;volatile
  2693  0011D4  D142               	goto	l387
  2694                           
  2695                           ; BSR set to: 15
  2696                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2697  0011D6  C106  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2698                           
  2699                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2700  0011DA  0101               	movlb	1	; () banked
  2701  0011DC  AD07               	btfss	CANsendMessage@flags& (0+255),6,b
  2702  0011DE  D003               	goto	l403
  2703                           
  2704                           ; BSR set to: 1
  2705                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2706  0011E0  010F               	movlb	15	; () banked
  2707  0011E2  8D25               	bsf	37,6,b	;volatile
  2708  0011E4  D002               	goto	l404
  2709  0011E6                     l403:
  2710                           
  2711                           ; BSR set to: 1
  2712                           ;inc\CANlib.h: 454: else
  2713                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2714  0011E6  010F               	movlb	15	; () banked
  2715  0011E8  9D25               	bcf	37,6,b	;volatile
  2716  0011EA                     l404:
  2717                           
  2718                           ; BSR set to: 15
  2719                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2720  0011EA  0101               	movlb	1	; () banked
  2721  0011EC  A707               	btfss	CANsendMessage@flags& (0+255),3,b
  2722  0011EE  D07A               	goto	l405
  2723                           
  2724                           ; BSR set to: 1
  2725                           ;inc\CANlib.h: 458: {
  2726                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2727  0011F0  0101               	movlb	1	; () banked
  2728  0011F2  5100               	movf	CANsendMessage@identifier& (0+255),w,b
  2729  0011F4  0101               	movlb	1	; () banked
  2730  0011F6  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2731  0011F8  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2732  0011FA  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2733  0011FC  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2734                           
  2735                           ; BSR set to: 1
  2736                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2737  0011FE  C108  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2741  001202  0E00               	movlw	0
  2742  001204  0101               	movlb	1	; () banked
  2743  001206  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2744  001208  0101               	movlb	1	; () banked
  2745  00120A  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2746  00120C  0EFF               	movlw	255
  2747  00120E  0101               	movlb	1	; () banked
  2748  001210  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2749  001212  0101               	movlb	1	; () banked
  2750  001214  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2751  001216  0E00               	movlw	0
  2752  001218  0101               	movlb	1	; () banked
  2753  00121A  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2754  00121C  0101               	movlb	1	; () banked
  2755  00121E  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2756  001220  0E00               	movlw	0
  2757  001222  0101               	movlb	1	; () banked
  2758  001224  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2759  001226  0101               	movlb	1	; () banked
  2760  001228  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2761                           
  2762                           ; BSR set to: 1
  2763                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2764  00122A  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2765  00122E  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2766  001232  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2767  001236  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2768  00123A  C0CE  F0CD         	movff	??_CANsendMessage+1,??_CANsendMessage
  2769  00123E  C0CF  F0CE         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2770  001242  C0D0  F0CF         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2771  001246  0100               	movlb	0	; () banked
  2772  001248  6BD0               	clrf	(??_CANsendMessage+3)& (0+255),b
  2773  00124A  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2774  00124E  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2775  001252  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2776  001256  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2780  00125A  C108  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2784  00125E  0E00               	movlw	0
  2785  001260  010F               	movlb	15	; () banked
  2786  001262  6F22               	movwf	34,b	;volatile
  2787                           
  2788                           ; BSR set to: 15
  2789                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2790  001264  010F               	movlb	15	; () banked
  2791  001266  8722               	bsf	34,3,b	;volatile
  2792                           
  2793                           ; BSR set to: 15
  2794                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2795  001268  0101               	movlb	1	; () banked
  2796  00126A  A102               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2797  00126C  D002               	goto	l406
  2798                           
  2799                           ; BSR set to: 1
  2800                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2801  00126E  010F               	movlb	15	; () banked
  2802  001270  8122               	bsf	34,0,b	;volatile
  2803  001272                     l406:
  2804                           
  2805                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2806  001272  0101               	movlb	1	; () banked
  2807  001274  A302               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2808  001276  D002               	goto	l407
  2809                           
  2810                           ; BSR set to: 1
  2811                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2812  001278  010F               	movlb	15	; () banked
  2813  00127A  8322               	bsf	34,1,b	;volatile
  2814  00127C                     l407:
  2815                           
  2816                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2817  00127C  0101               	movlb	1	; () banked
  2818  00127E  A502               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2819  001280  D002               	goto	l408
  2820                           
  2821                           ; BSR set to: 1
  2822                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2823  001282  010F               	movlb	15	; () banked
  2824  001284  8B22               	bsf	34,5,b	;volatile
  2825  001286                     l408:
  2826                           
  2827                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2828  001286  0101               	movlb	1	; () banked
  2829  001288  A702               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2830  00128A  D002               	goto	l409
  2831                           
  2832                           ; BSR set to: 1
  2833                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2834  00128C  010F               	movlb	15	; () banked
  2835  00128E  8D22               	bsf	34,6,b	;volatile
  2836  001290                     l409:
  2837                           
  2838                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2839  001290  0101               	movlb	1	; () banked
  2840  001292  A902               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2841  001294  D003               	goto	l4965
  2842                           
  2843                           ; BSR set to: 1
  2844                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2845  001296  010F               	movlb	15	; () banked
  2846  001298  8F22               	bsf	34,7,b	;volatile
  2847  00129A  D000               	goto	l4965
  2848  00129C                     l4965:
  2849                           
  2850                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2851  00129C  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2852  0012A0  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2853  0012A4  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2854  0012A8  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2855  0012AC  0E16               	movlw	22
  2856  0012AE  D006               	goto	u6400
  2857  0012B0                     u6405:
  2858  0012B0  0100               	movlb	0	; () banked
  2859  0012B2  90D8               	bcf	status,0,c
  2860  0012B4  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2861  0012B6  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2862  0012B8  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2863  0012BA  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2864  0012BC                     u6400:
  2865  0012BC  2EE8               	decfsz	wreg,f,c
  2866  0012BE  D7F8               	goto	u6405
  2867  0012C0  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2868  0012C4  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2869  0012C8  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2870  0012CC  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2874  0012D0  0101               	movlb	1	; () banked
  2875  0012D2  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2876  0012D4  0101               	movlb	1	; () banked
  2877  0012D6  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2878  0012D8  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2879  0012DA  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2880  0012DC  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2881                           
  2882                           ; BSR set to: 1
  2883                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2884  0012DE  C108  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2885                           
  2886                           ;inc\CANlib.h: 483: }
  2887  0012E2  D05A               	goto	l4985
  2888  0012E4                     l405:
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;inc\CANlib.h: 485: else
  2892                           ;inc\CANlib.h: 487: {
  2893                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2894  0012E4  010F               	movlb	15	; () banked
  2895  0012E6  9722               	bcf	34,3,b	;volatile
  2896                           
  2897                           ; BSR set to: 15
  2898                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2899  0012E8  C100  F0CD         	movff	CANsendMessage@identifier,??_CANsendMessage
  2900  0012EC  C101  F0CE         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2901  0012F0  C102  F0CF         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2902  0012F4  C103  F0D0         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2903  0012F8  0E04               	movlw	4
  2904  0012FA  D006               	goto	u6410
  2905  0012FC                     u6415:
  2906  0012FC  0100               	movlb	0	; () banked
  2907  0012FE  90D8               	bcf	status,0,c
  2908  001300  33D0               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2909  001302  33CF               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2910  001304  33CE               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2911  001306  33CD               	rrcf	??_CANsendMessage& (0+255),f,b
  2912  001308                     u6410:
  2913  001308  2EE8               	decfsz	wreg,f,c
  2914  00130A  D7F8               	goto	u6415
  2915  00130C  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2916  001310  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2917  001314  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2918  001318  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2922  00131C  0101               	movlb	1	; () banked
  2923  00131E  5108               	movf	CANsendMessage@tamp& (0+255),w,b
  2924  001320  0101               	movlb	1	; () banked
  2925  001322  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2926  001324  6B09               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2927  001326  6B0A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2928  001328  6B0B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2929                           
  2930                           ; BSR set to: 1
  2931                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2932  00132A  C108  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2936  00132E  0E07               	movlw	7
  2937  001330  0101               	movlb	1	; () banked
  2938  001332  1500               	andwf	CANsendMessage@identifier& (0+255),w,b
  2939  001334  0101               	movlb	1	; () banked
  2940  001336  6F08               	movwf	CANsendMessage@tamp& (0+255),b
  2941  001338  0E00               	movlw	0
  2942  00133A  0101               	movlb	1	; () banked
  2943  00133C  1501               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2944  00133E  0101               	movlb	1	; () banked
  2945  001340  6F09               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2946  001342  0E00               	movlw	0
  2947  001344  0101               	movlb	1	; () banked
  2948  001346  1502               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2949  001348  0101               	movlb	1	; () banked
  2950  00134A  6F0A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2951  00134C  0E00               	movlw	0
  2952  00134E  0101               	movlb	1	; () banked
  2953  001350  1503               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2954  001352  0101               	movlb	1	; () banked
  2955  001354  6F0B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2959  001356  C108  F0CD         	movff	CANsendMessage@tamp,??_CANsendMessage
  2960  00135A  C109  F0CE         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2961  00135E  C10A  F0CF         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2962  001362  C10B  F0D0         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2963  001366  0E05               	movlw	5
  2964  001368                     u6425:
  2965  001368  90D8               	bcf	status,0,c
  2966  00136A  0100               	movlb	0	; () banked
  2967  00136C  37CD               	rlcf	??_CANsendMessage& (0+255),f,b
  2968  00136E  37CE               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2969  001370  37CF               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2970  001372  37D0               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2971  001374  2EE8               	decfsz	wreg,f,c
  2972  001376  D7F8               	goto	u6425
  2973  001378  C0CD  F108         	movff	??_CANsendMessage,CANsendMessage@tamp
  2974  00137C  C0CE  F109         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2975  001380  C0CF  F10A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2976  001384  C0D0  F10B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2980  001388  010F               	movlb	15	; () banked
  2981  00138A  5122               	movf	34,w,b	;volatile
  2982  00138C  0B1F               	andlw	31
  2983  00138E  010F               	movlb	15	; () banked
  2984  001390  6F22               	movwf	34,b	;volatile
  2985                           
  2986                           ; BSR set to: 15
  2987                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2988  001392  C108  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2989  001396  D000               	goto	l4985
  2990  001398                     l4985:
  2991                           
  2992                           ;inc\CANlib.h: 498: }
  2993                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2994  001398  0101               	movlb	1	; () banked
  2995  00139A  A107               	btfss	CANsendMessage@flags& (0+255),0,b
  2996  00139C  D003               	goto	l412
  2997                           
  2998                           ; BSR set to: 1
  2999                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  3000  00139E  010F               	movlb	15	; () banked
  3001  0013A0  8120               	bsf	32,0,b	;volatile
  3002  0013A2  D002               	goto	l413
  3003  0013A4                     l412:
  3004                           
  3005                           ; BSR set to: 1
  3006                           ;inc\CANlib.h: 502: else
  3007                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  3008  0013A4  010F               	movlb	15	; () banked
  3009  0013A6  9120               	bcf	32,0,b	;volatile
  3010  0013A8                     l413:
  3011                           
  3012                           ; BSR set to: 15
  3013                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  3014  0013A8  0101               	movlb	1	; () banked
  3015  0013AA  A307               	btfss	CANsendMessage@flags& (0+255),1,b
  3016  0013AC  D003               	goto	l414
  3017                           
  3018                           ; BSR set to: 1
  3019                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  3020  0013AE  010F               	movlb	15	; () banked
  3021  0013B0  8320               	bsf	32,1,b	;volatile
  3022  0013B2  D003               	goto	l4991
  3023  0013B4                     l414:
  3024                           
  3025                           ; BSR set to: 1
  3026                           ;inc\CANlib.h: 506: else
  3027                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  3028  0013B4  010F               	movlb	15	; () banked
  3029  0013B6  9320               	bcf	32,1,b	;volatile
  3030  0013B8  D000               	goto	l4991
  3031  0013BA                     l4991:
  3032                           
  3033                           ; BSR set to: 15
  3034                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  3035  0013BA  C104  FFD9         	movff	CANsendMessage@data,fsr2l
  3036  0013BE  C105  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3037  0013C2  50DF               	movf	indf2,w,c
  3038  0013C4  010F               	movlb	15	; () banked
  3039  0013C6  6F26               	movwf	38,b	;volatile
  3040                           
  3041                           ; BSR set to: 15
  3042                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  3043  0013C8  0101               	movlb	1	; () banked
  3044  0013CA  EE20 F001          	lfsr	2,1
  3045  0013CE  5104               	movf	CANsendMessage@data& (0+255),w,b
  3046  0013D0  26D9               	addwf	fsr2l,f,c
  3047  0013D2  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3048  0013D4  22DA               	addwfc	fsr2h,f,c
  3049  0013D6  50DF               	movf	indf2,w,c
  3050  0013D8  010F               	movlb	15	; () banked
  3051  0013DA  6F27               	movwf	39,b	;volatile
  3052                           
  3053                           ; BSR set to: 15
  3054                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  3055  0013DC  0101               	movlb	1	; () banked
  3056  0013DE  EE20 F002          	lfsr	2,2
  3057  0013E2  5104               	movf	CANsendMessage@data& (0+255),w,b
  3058  0013E4  26D9               	addwf	fsr2l,f,c
  3059  0013E6  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3060  0013E8  22DA               	addwfc	fsr2h,f,c
  3061  0013EA  50DF               	movf	indf2,w,c
  3062  0013EC  010F               	movlb	15	; () banked
  3063  0013EE  6F28               	movwf	40,b	;volatile
  3064                           
  3065                           ; BSR set to: 15
  3066                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  3067  0013F0  0101               	movlb	1	; () banked
  3068  0013F2  EE20 F003          	lfsr	2,3
  3069  0013F6  5104               	movf	CANsendMessage@data& (0+255),w,b
  3070  0013F8  26D9               	addwf	fsr2l,f,c
  3071  0013FA  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3072  0013FC  22DA               	addwfc	fsr2h,f,c
  3073  0013FE  50DF               	movf	indf2,w,c
  3074  001400  010F               	movlb	15	; () banked
  3075  001402  6F29               	movwf	41,b	;volatile
  3076                           
  3077                           ; BSR set to: 15
  3078                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  3079  001404  0101               	movlb	1	; () banked
  3080  001406  EE20 F004          	lfsr	2,4
  3081  00140A  5104               	movf	CANsendMessage@data& (0+255),w,b
  3082  00140C  26D9               	addwf	fsr2l,f,c
  3083  00140E  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3084  001410  22DA               	addwfc	fsr2h,f,c
  3085  001412  50DF               	movf	indf2,w,c
  3086  001414  010F               	movlb	15	; () banked
  3087  001416  6F2A               	movwf	42,b	;volatile
  3088                           
  3089                           ; BSR set to: 15
  3090                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  3091  001418  0101               	movlb	1	; () banked
  3092  00141A  EE20 F005          	lfsr	2,5
  3093  00141E  5104               	movf	CANsendMessage@data& (0+255),w,b
  3094  001420  26D9               	addwf	fsr2l,f,c
  3095  001422  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3096  001424  22DA               	addwfc	fsr2h,f,c
  3097  001426  50DF               	movf	indf2,w,c
  3098  001428  010F               	movlb	15	; () banked
  3099  00142A  6F2B               	movwf	43,b	;volatile
  3100                           
  3101                           ; BSR set to: 15
  3102                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  3103  00142C  0101               	movlb	1	; () banked
  3104  00142E  EE20 F006          	lfsr	2,6
  3105  001432  5104               	movf	CANsendMessage@data& (0+255),w,b
  3106  001434  26D9               	addwf	fsr2l,f,c
  3107  001436  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3108  001438  22DA               	addwfc	fsr2h,f,c
  3109  00143A  50DF               	movf	indf2,w,c
  3110  00143C  010F               	movlb	15	; () banked
  3111  00143E  6F2C               	movwf	44,b	;volatile
  3112                           
  3113                           ; BSR set to: 15
  3114                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  3115  001440  0101               	movlb	1	; () banked
  3116  001442  EE20 F007          	lfsr	2,7
  3117  001446  5104               	movf	CANsendMessage@data& (0+255),w,b
  3118  001448  26D9               	addwf	fsr2l,f,c
  3119  00144A  5105               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3120  00144C  22DA               	addwfc	fsr2h,f,c
  3121  00144E  50DF               	movf	indf2,w,c
  3122  001450  010F               	movlb	15	; () banked
  3123  001452  6F2D               	movwf	45,b	;volatile
  3124                           
  3125                           ; BSR set to: 15
  3126                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3127  001454  010F               	movlb	15	; () banked
  3128  001456  8720               	bsf	32,3,b	;volatile
  3129                           
  3130                           ; BSR set to: 15
  3131                           ;inc\CANlib.h: 520: return;
  3132  001458  D000               	goto	l387
  3133  00145A                     l387:
  3134                           
  3135                           ; BSR set to: 15
  3136  00145A  0012               	return		;funcret
  3137  00145C                     __end_of_CANsendMessage:
  3138                           	opt stack 0
  3139                           tblptru	equ	0xFF8
  3140                           tblptrh	equ	0xFF7
  3141                           tblptrl	equ	0xFF6
  3142                           tablat	equ	0xFF5
  3143                           prodh	equ	0xFF4
  3144                           prodl	equ	0xFF3
  3145                           postinc0	equ	0xFEE
  3146                           wreg	equ	0xFE8
  3147                           postdec1	equ	0xFE5
  3148                           fsr1l	equ	0xFE1
  3149                           indf2	equ	0xFDF
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _CANisTxReady *****************
  3155 ;; Defined at:
  3156 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      unsigned char 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3170 ;;      Params:         0       0       0       0
  3171 ;;      Locals:         0       1       0       0
  3172 ;;      Temps:          0       0       0       0
  3173 ;;      Totals:         0       1       0       0
  3174 ;;Total ram usage:        1 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    4
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_remote_frame_handler
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text4
  3185  002B86                     __ptext4:
  3186                           	opt stack 0
  3187  002B86                     _CANisTxReady:
  3188                           	opt stack 25
  3189                           
  3190                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3191                           
  3192                           ; BSR set to: 15
  3193                           ;incstack = 0
  3194  002B86  0E01               	movlw	1
  3195  002B88  0100               	movlb	0	; () banked
  3196  002B8A  6FCD               	movwf	_CANisTxReady$3173& (0+255),b
  3197                           
  3198                           ; BSR set to: 0
  3199  002B8C  010F               	movlb	15	; () banked
  3200  002B8E  A740               	btfss	64,3,b	;volatile
  3201  002B90  D009               	goto	l566
  3202                           
  3203                           ; BSR set to: 15
  3204  002B92  010F               	movlb	15	; () banked
  3205  002B94  A730               	btfss	48,3,b	;volatile
  3206  002B96  D006               	goto	l566
  3207                           
  3208                           ; BSR set to: 15
  3209  002B98  010F               	movlb	15	; () banked
  3210  002B9A  A720               	btfss	32,3,b	;volatile
  3211  002B9C  D003               	goto	l566
  3212                           
  3213                           ; BSR set to: 15
  3214  002B9E  0E00               	movlw	0
  3215  002BA0  0100               	movlb	0	; () banked
  3216  002BA2  6FCD               	movwf	_CANisTxReady$3173& (0+255),b
  3217  002BA4                     l566:
  3218  002BA4  0100               	movlb	0	; () banked
  3219  002BA6  51CD               	movf	_CANisTxReady$3173& (0+255),w,b
  3220  002BA8  D000               	goto	l567
  3221  002BAA                     l567:
  3222                           
  3223                           ; BSR set to: 0
  3224  002BAA  0012               	return		;funcret
  3225  002BAC                     __end_of_CANisTxReady:
  3226                           	opt stack 0
  3227                           tblptru	equ	0xFF8
  3228                           tblptrh	equ	0xFF7
  3229                           tblptrl	equ	0xFF6
  3230                           tablat	equ	0xFF5
  3231                           prodh	equ	0xFF4
  3232                           prodl	equ	0xFF3
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           postdec1	equ	0xFE5
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           fsr2h	equ	0xFDA
  3239                           fsr2l	equ	0xFD9
  3240                           status	equ	0xFD8
  3241                           
  3242 ;; *************** function _board_initialization *****************
  3243 ;; Defined at:
  3244 ;;		line 445 in file "ABS_Code.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3258 ;;      Params:         0       0       0       0
  3259 ;;      Locals:         0       0       0       0
  3260 ;;      Temps:          0       0       0       0
  3261 ;;      Totals:         0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    6
  3265 ;; This function calls:
  3266 ;;		_CANInitialize
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text5
  3273  0028DC                     __ptext5:
  3274                           	opt stack 0
  3275  0028DC                     _board_initialization:
  3276                           	opt stack 24
  3277                           
  3278                           ;ABS_Code.c: 447: LATA = 0x00;
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;incstack = 0
  3282  0028DC  0E00               	movlw	0
  3283  0028DE  6E89               	movwf	3977,c	;volatile
  3284                           
  3285                           ;ABS_Code.c: 448: TRISA = 0b11111101;
  3286  0028E0  0EFD               	movlw	253
  3287  0028E2  6E92               	movwf	3986,c	;volatile
  3288                           
  3289                           ;ABS_Code.c: 449: LATB = 0x00;
  3290  0028E4  0E00               	movlw	0
  3291  0028E6  6E8A               	movwf	3978,c	;volatile
  3292                           
  3293                           ;ABS_Code.c: 450: TRISB = 0b11111111;
  3294  0028E8  6893               	setf	3987,c	;volatile
  3295                           
  3296                           ;ABS_Code.c: 451: LATC = 0x00;
  3297  0028EA  0E00               	movlw	0
  3298  0028EC  6E8B               	movwf	3979,c	;volatile
  3299                           
  3300                           ;ABS_Code.c: 452: TRISC = 0b11111100;
  3301  0028EE  0EFC               	movlw	252
  3302  0028F0  6E94               	movwf	3988,c	;volatile
  3303                           
  3304                           ;ABS_Code.c: 453: LATD = 0x00;
  3305  0028F2  0E00               	movlw	0
  3306  0028F4  6E8C               	movwf	3980,c	;volatile
  3307                           
  3308                           ;ABS_Code.c: 454: TRISD = 0xFF;
  3309  0028F6  6895               	setf	3989,c	;volatile
  3310                           
  3311                           ;ABS_Code.c: 455: LATE = 0x00;
  3312  0028F8  0E00               	movlw	0
  3313  0028FA  6E8D               	movwf	3981,c	;volatile
  3314                           
  3315                           ;ABS_Code.c: 456: TRISE = 0xFF;
  3316  0028FC  6896               	setf	3990,c	;volatile
  3317                           
  3318                           ;ABS_Code.c: 461: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3319  0028FE  0E06               	movlw	6
  3320  002900  0101               	movlb	1	; () banked
  3321  002902  6F09               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3322  002904  0E05               	movlw	5
  3323  002906  0101               	movlb	1	; () banked
  3324  002908  6F0A               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3325  00290A  0E01               	movlw	1
  3326  00290C  0101               	movlb	1	; () banked
  3327  00290E  6F0B               	movwf	CANInitialize@SJW& (0+255),b
  3328  002910  0E03               	movlw	3
  3329  002912  0101               	movlb	1	; () banked
  3330  002914  6F0C               	movwf	CANInitialize@BRP& (0+255),b
  3331  002916  0E9D               	movlw	157
  3332  002918  0101               	movlb	1	; () banked
  3333  00291A  6F0D               	movwf	CANInitialize@flags& (0+255),b
  3334  00291C  0E04               	movlw	4
  3335  00291E  EC86  F011         	call	_CANInitialize
  3336                           
  3337                           ;ABS_Code.c: 464: PIR3bits.RXB1IF = 0;
  3338  002922  92A4               	bcf	4004,1,c	;volatile
  3339                           
  3340                           ;ABS_Code.c: 465: PIR3bits.RXB0IF = 0;
  3341  002924  90A4               	bcf	4004,0,c	;volatile
  3342                           
  3343                           ;ABS_Code.c: 466: INTCONbits.TMR0IF = 0;
  3344  002926  94F2               	bcf	intcon,2,c	;volatile
  3345                           
  3346                           ;ABS_Code.c: 467: PIR1bits.TMR1IF = 0;
  3347  002928  909E               	bcf	3998,0,c	;volatile
  3348                           
  3349                           ;ABS_Code.c: 468: PIR2bits.TMR3IF = 0;
  3350  00292A  92A1               	bcf	4001,1,c	;volatile
  3351                           
  3352                           ;ABS_Code.c: 469: INTCONbits.INT0IF = 0;
  3353  00292C  92F2               	bcf	intcon,1,c	;volatile
  3354                           
  3355                           ;ABS_Code.c: 470: INTCON3bits.INT1IF = 0;
  3356  00292E  90F0               	bcf	intcon3,0,c	;volatile
  3357                           
  3358                           ;ABS_Code.c: 474: RCONbits.IPEN = 1;
  3359  002930  8ED0               	bsf	4048,7,c	;volatile
  3360                           
  3361                           ;ABS_Code.c: 475: IPR3bits.RXB1IP = 0;
  3362  002932  92A5               	bcf	4005,1,c	;volatile
  3363                           
  3364                           ;ABS_Code.c: 476: IPR3bits.RXB0IP = 0;
  3365  002934  90A5               	bcf	4005,0,c	;volatile
  3366                           
  3367                           ;ABS_Code.c: 477: INTCON2bits.TMR0IP = 1;
  3368  002936  84F1               	bsf	intcon2,2,c	;volatile
  3369                           
  3370                           ;ABS_Code.c: 478: INTCON3bits.INT1IP = 1;
  3371  002938  8CF0               	bsf	intcon3,6,c	;volatile
  3372                           
  3373                           ;ABS_Code.c: 479: IPR1bits.TMR1IP = 0;
  3374  00293A  909F               	bcf	3999,0,c	;volatile
  3375                           
  3376                           ;ABS_Code.c: 480: IPR2bits.TMR3IP = 0;
  3377  00293C  92A2               	bcf	4002,1,c	;volatile
  3378                           
  3379                           ;ABS_Code.c: 483: T0CON = 0x80;
  3380  00293E  0E80               	movlw	128
  3381  002940  6ED5               	movwf	4053,c	;volatile
  3382                           
  3383                           ;ABS_Code.c: 490: TMR0H = 0xFF;
  3384  002942  68D7               	setf	4055,c	;volatile
  3385                           
  3386                           ;ABS_Code.c: 491: TMR0L = 0xFE;
  3387  002944  0EFE               	movlw	254
  3388  002946  6ED6               	movwf	4054,c	;volatile
  3389                           
  3390                           ;ABS_Code.c: 492: PORTCbits.RC0 = 0;
  3391  002948  9082               	bcf	3970,0,c	;volatile
  3392                           
  3393                           ;ABS_Code.c: 493: brake_value_degree = 90;
  3394  00294A  0E5A               	movlw	90
  3395  00294C  6E28               	movwf	_brake_value_degree,c	;volatile
  3396                           
  3397                           ;ABS_Code.c: 494: T1CON = 00110000;
  3398  00294E  0E00               	movlw	0
  3399  002950  6ECD               	movwf	4045,c	;volatile
  3400                           
  3401                           ;ABS_Code.c: 495: T3CON = 01110000;
  3402  002952  0E00               	movlw	0
  3403  002954  6EB1               	movwf	4017,c	;volatile
  3404                           
  3405                           ;ABS_Code.c: 496: INTCON2bits.INTEDG0 = 1;
  3406  002956  8CF1               	bsf	intcon2,6,c	;volatile
  3407                           
  3408                           ;ABS_Code.c: 497: INTCON2bits.INTEDG1 = 1;
  3409  002958  8AF1               	bsf	intcon2,5,c	;volatile
  3410                           
  3411                           ;ABS_Code.c: 515: PIE3bits.RXB1IE = 1;
  3412  00295A  82A3               	bsf	4003,1,c	;volatile
  3413                           
  3414                           ;ABS_Code.c: 516: PIE3bits.RXB0IE = 1;
  3415  00295C  80A3               	bsf	4003,0,c	;volatile
  3416                           
  3417                           ;ABS_Code.c: 517: INTCONbits.TMR0IE = 1;
  3418  00295E  8AF2               	bsf	intcon,5,c	;volatile
  3419                           
  3420                           ;ABS_Code.c: 518: PIE1bits.TMR1IE = 1;
  3421  002960  809D               	bsf	3997,0,c	;volatile
  3422                           
  3423                           ;ABS_Code.c: 519: PIE2bits.TMR3IE = 1;
  3424  002962  82A0               	bsf	4000,1,c	;volatile
  3425                           
  3426                           ;ABS_Code.c: 520: INTCONbits.INT0IE = 1;
  3427  002964  88F2               	bsf	intcon,4,c	;volatile
  3428                           
  3429                           ;ABS_Code.c: 521: INTCON3bits.INT1IE = 1;
  3430  002966  86F0               	bsf	intcon3,3,c	;volatile
  3431                           
  3432                           ;ABS_Code.c: 522: INTCONbits.GIEH = 1;
  3433  002968  8EF2               	bsf	intcon,7,c	;volatile
  3434                           
  3435                           ;ABS_Code.c: 523: INTCONbits.GIEL = 1;
  3436  00296A  8CF2               	bsf	intcon,6,c	;volatile
  3437                           
  3438                           ;ABS_Code.c: 526: T1CONbits.TMR1ON = 1;
  3439  00296C  80CD               	bsf	4045,0,c	;volatile
  3440                           
  3441                           ;ABS_Code.c: 527: T3CONbits.TMR3ON = 1;
  3442  00296E  80B1               	bsf	4017,0,c	;volatile
  3443                           
  3444                           ;ABS_Code.c: 528: T0CONbits.TMR0ON = 1;
  3445  002970  8ED5               	bsf	4053,7,c	;volatile
  3446  002972  0012               	return		;funcret
  3447  002974                     __end_of_board_initialization:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           prodh	equ	0xFF4
  3454                           prodl	equ	0xFF3
  3455                           intcon	equ	0xFF2
  3456                           intcon2	equ	0xFF1
  3457                           intcon3	equ	0xFF0
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           postdec1	equ	0xFE5
  3461                           fsr1l	equ	0xFE1
  3462                           indf2	equ	0xFDF
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _CANInitialize *****************
  3468 ;; Defined at:
  3469 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  propSeg         1    wreg     unsigned char 
  3472 ;;  phaseSeg1       1    9[BANK1 ] unsigned char 
  3473 ;;  phaseSeg2       1   10[BANK1 ] unsigned char 
  3474 ;;  SJW             1   11[BANK1 ] unsigned char 
  3475 ;;  BRP             1   12[BANK1 ] unsigned char 
  3476 ;;  flags           1   13[BANK1 ] enum E16885
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  propSeg         1   18[BANK1 ] unsigned char 
  3479 ;;  FilterConfig    1   20[BANK1 ] unsigned char 
  3480 ;;  FilterConfig    1   19[BANK1 ] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;		None               void
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3490 ;;      Params:         0       0       5       0
  3491 ;;      Locals:         0       0       3       0
  3492 ;;      Temps:          0       0       4       0
  3493 ;;      Totals:         0       0      12       0
  3494 ;;Total ram usage:       12 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    5
  3497 ;; This function calls:
  3498 ;;		_CANOperationMode
  3499 ;;		_CANSetFilter
  3500 ;;		_CANSetMask
  3501 ;; This function is called by:
  3502 ;;		_board_initialization
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text6
  3507  00230C                     __ptext6:
  3508                           	opt stack 0
  3509  00230C                     _CANInitialize:
  3510                           	opt stack 24
  3511                           
  3512                           ;incstack = 0
  3513                           ;CANInitialize@propSeg stored from wreg
  3514  00230C  0101               	movlb	1	; () banked
  3515  00230E  6F12               	movwf	CANInitialize@propSeg& (0+255),b
  3516                           
  3517                           ; BSR set to: 1
  3518                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3519                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3520                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3521  002310  0E80               	movlw	128
  3522  002312  ECD6  F015         	call	_CANOperationMode
  3523                           
  3524                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3525  002316  0E00               	movlw	0
  3526  002318  6E70               	movwf	3952,c	;volatile
  3527                           
  3528                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3529  00231A  0E00               	movlw	0
  3530  00231C  6E71               	movwf	3953,c	;volatile
  3531                           
  3532                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3533  00231E  0E00               	movlw	0
  3534  002320  6E72               	movwf	3954,c	;volatile
  3535                           
  3536                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3537  002322  0101               	movlb	1	; () banked
  3538  002324  410B               	rrncf	CANInitialize@SJW& (0+255),w,b
  3539  002326  42E8               	rrncf	wreg,f,c
  3540  002328  0BC0               	andlw	192
  3541  00232A  0101               	movlb	1	; () banked
  3542  00232C  6F0B               	movwf	CANInitialize@SJW& (0+255),b
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3546  00232E  0101               	movlb	1	; () banked
  3547  002330  510B               	movf	CANInitialize@SJW& (0+255),w,b
  3548  002332  1270               	iorwf	3952,f,c	;volatile
  3549                           
  3550                           ; BSR set to: 1
  3551                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3552  002334  0101               	movlb	1	; () banked
  3553  002336  510C               	movf	CANInitialize@BRP& (0+255),w,b
  3554  002338  1270               	iorwf	3952,f,c	;volatile
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3558  00233A  0101               	movlb	1	; () banked
  3559  00233C  5112               	movf	CANInitialize@propSeg& (0+255),w,b
  3560  00233E  1271               	iorwf	3953,f,c	;volatile
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3564  002340  0101               	movlb	1	; () banked
  3565  002342  3909               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3566  002344  42E8               	rrncf	wreg,f,c
  3567  002346  0BF8               	andlw	248
  3568  002348  0101               	movlb	1	; () banked
  3569  00234A  6F09               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3570                           
  3571                           ; BSR set to: 1
  3572                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3573  00234C  0101               	movlb	1	; () banked
  3574  00234E  5109               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3575  002350  1271               	iorwf	3953,f,c	;volatile
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3579  002352  0101               	movlb	1	; () banked
  3580  002354  A50D               	btfss	CANInitialize@flags& (0+255),2,b
  3581                           
  3582                           ; BSR set to: 1
  3583                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3584  002356  8C71               	bsf	3953,6,c	;volatile
  3585                           
  3586                           ; BSR set to: 1
  3587                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3588  002358  0101               	movlb	1	; () banked
  3589  00235A  A10D               	btfss	CANInitialize@flags& (0+255),0,b
  3590  00235C  D002               	goto	l4753
  3591                           
  3592                           ; BSR set to: 1
  3593                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3594  00235E  8E71               	bsf	3953,7,c	;volatile
  3595  002360  D000               	goto	l4753
  3596  002362                     l4753:
  3597                           
  3598                           ; BSR set to: 1
  3599                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3600  002362  0101               	movlb	1	; () banked
  3601  002364  510A               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3602  002366  1272               	iorwf	3954,f,c	;volatile
  3603                           
  3604                           ; BSR set to: 1
  3605                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3606  002368  0101               	movlb	1	; () banked
  3607  00236A  A30D               	btfss	CANInitialize@flags& (0+255),1,b
  3608  00236C  D002               	goto	l4759
  3609                           
  3610                           ; BSR set to: 1
  3611                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3612  00236E  8C72               	bsf	3954,6,c	;volatile
  3613  002370  D000               	goto	l4759
  3614  002372                     l4759:
  3615                           
  3616                           ; BSR set to: 1
  3617                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3618  002372  0101               	movlb	1	; () banked
  3619  002374  510D               	movf	CANInitialize@flags& (0+255),w,b
  3620  002376  0B60               	andlw	96
  3621  002378  6E60               	movwf	3936,c	;volatile
  3622                           
  3623                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3624  00237A  0101               	movlb	1	; () banked
  3625  00237C  510D               	movf	CANInitialize@flags& (0+255),w,b
  3626  00237E  0B10               	andlw	16
  3627  002380  0AFF               	xorlw	255
  3628  002382  B4D8               	btfsc	status,2,c
  3629                           
  3630                           ; BSR set to: 1
  3631                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3632  002384  8460               	bsf	3936,2,c	;volatile
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3636  002386  CF60 FF50          	movff	3936,3920	;volatile
  3637                           
  3638                           ; BSR set to: 1
  3639                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3640  00238A  0E00               	movlw	0
  3641  00238C  0100               	movlb	0	; () banked
  3642  00238E  6FCD               	movwf	CANSetMask@mask& (0+255),b
  3643  002390  0E00               	movlw	0
  3644  002392  6FCE               	movwf	(CANSetMask@mask+1)& (0+255),b
  3645  002394  0E00               	movlw	0
  3646  002396  6FCF               	movwf	(CANSetMask@mask+2)& (0+255),b
  3647  002398  0E00               	movlw	0
  3648  00239A  6FD0               	movwf	(CANSetMask@mask+3)& (0+255),b
  3649  00239C  0EF7               	movlw	247
  3650  00239E  0100               	movlb	0	; () banked
  3651  0023A0  6FD1               	movwf	CANSetMask@type& (0+255),b
  3652  0023A2  0E01               	movlw	1
  3653  0023A4  ECC5  F00C         	call	_CANSetMask
  3654                           
  3655                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3656  0023A8  0E00               	movlw	0
  3657  0023AA  0100               	movlb	0	; () banked
  3658  0023AC  6FCD               	movwf	CANSetMask@mask& (0+255),b
  3659  0023AE  0E00               	movlw	0
  3660  0023B0  6FCE               	movwf	(CANSetMask@mask+1)& (0+255),b
  3661  0023B2  0E00               	movlw	0
  3662  0023B4  6FCF               	movwf	(CANSetMask@mask+2)& (0+255),b
  3663  0023B6  0E00               	movlw	0
  3664  0023B8  6FD0               	movwf	(CANSetMask@mask+3)& (0+255),b
  3665  0023BA  0EF7               	movlw	247
  3666  0023BC  0100               	movlb	0	; () banked
  3667  0023BE  6FD1               	movwf	CANSetMask@type& (0+255),b
  3668  0023C0  0E02               	movlw	2
  3669  0023C2  ECC5  F00C         	call	_CANSetMask
  3670                           
  3671                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3672  0023C6  D00F               	goto	l4771
  3673  0023C8                     l4765:
  3674                           
  3675                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3676  0023C8  0EF7               	movlw	247
  3677  0023CA  0101               	movlb	1	; () banked
  3678  0023CC  6F13               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3679  0023CE  D007               	goto	l4767
  3680  0023D0                     l368:
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3684  0023D0  0101               	movlb	1	; () banked
  3685  0023D2  6913               	setf	CANInitialize@FilterConfig1& (0+255),b
  3686                           
  3687                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3688  0023D4  0101               	movlb	1	; () banked
  3689  0023D6  6914               	setf	CANInitialize@FilterConfig2& (0+255),b
  3690                           
  3691                           ;inc\CANlib.h: 273: break;
  3692  0023D8  D028               	goto	l4773
  3693  0023DA                     l369:
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3697  0023DA  0101               	movlb	1	; () banked
  3698  0023DC  6913               	setf	CANInitialize@FilterConfig1& (0+255),b
  3699  0023DE                     l4767:
  3700                           
  3701                           ; BSR set to: 1
  3702                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3703  0023DE  0EF7               	movlw	247
  3704  0023E0  0101               	movlb	1	; () banked
  3705  0023E2  6F14               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3706                           
  3707                           ; BSR set to: 1
  3708                           ;inc\CANlib.h: 278: }
  3709                           
  3710                           ;inc\CANlib.h: 277: break;
  3711  0023E4  D022               	goto	l4773
  3712  0023E6                     l4771:
  3713  0023E6  0E9F               	movlw	159
  3714  0023E8  0101               	movlb	1	; () banked
  3715  0023EA  6F0E               	movwf	??_CANInitialize& (0+255),b
  3716  0023EC  0EFF               	movlw	255
  3717  0023EE  0101               	movlb	1	; () banked
  3718  0023F0  6F0F               	movwf	(??_CANInitialize+1)& (0+255),b
  3719  0023F2  0101               	movlb	1	; () banked
  3720  0023F4  510D               	movf	CANInitialize@flags& (0+255),w,b
  3721  0023F6  0B60               	andlw	96
  3722  0023F8  0101               	movlb	1	; () banked
  3723  0023FA  6F10               	movwf	(??_CANInitialize+2)& (0+255),b
  3724  0023FC  6B11               	clrf	(??_CANInitialize+3)& (0+255),b
  3725  0023FE  0101               	movlb	1	; () banked
  3726  002400  510E               	movf	??_CANInitialize& (0+255),w,b
  3727  002402  0101               	movlb	1	; () banked
  3728  002404  1310               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3729  002406  0101               	movlb	1	; () banked
  3730  002408  510F               	movf	(??_CANInitialize+1)& (0+255),w,b
  3731  00240A  0101               	movlb	1	; () banked
  3732  00240C  1311               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3733                           
  3734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3735                           ; Switch size 1, requested type "space"
  3736                           ; Number of cases is 1, Range of values is 0 to 0
  3737                           ; switch strategies available:
  3738                           ; Name         Instructions Cycles
  3739                           ; simple_byte            4     3 (average)
  3740                           ;	Chosen strategy is simple_byte
  3741  00240E  0101               	movlb	1	; () banked
  3742  002410  5111               	movf	(??_CANInitialize+3)& (0+255),w,b
  3743  002412  0A00               	xorlw	0	; case 0
  3744  002414  A4D8               	btfss	status,2,c
  3745  002416  D7E1               	goto	l369
  3746                           
  3747                           ; BSR set to: 1
  3748                           ; Switch size 1, requested type "space"
  3749                           ; Number of cases is 2, Range of values is 191 to 223
  3750                           ; switch strategies available:
  3751                           ; Name         Instructions Cycles
  3752                           ; simple_byte            7     4 (average)
  3753                           ;	Chosen strategy is simple_byte
  3754  002418  0101               	movlb	1	; () banked
  3755  00241A  5110               	movf	(??_CANInitialize+2)& (0+255),w,b
  3756  00241C  0ABF               	xorlw	191	; case 191
  3757  00241E  B4D8               	btfsc	status,2,c
  3758  002420  D7D7               	goto	l368
  3759  002422  0A60               	xorlw	96	; case 223
  3760  002424  B4D8               	btfsc	status,2,c
  3761  002426  D7D0               	goto	l4765
  3762  002428  D7D8               	goto	l369
  3763  00242A                     l4773:
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3767  00242A  0E00               	movlw	0
  3768  00242C  0100               	movlb	0	; () banked
  3769  00242E  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3770  002430  0E00               	movlw	0
  3771  002432  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3772  002434  0E00               	movlw	0
  3773  002436  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3774  002438  0E00               	movlw	0
  3775  00243A  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3776  00243C  C113  F0D1         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3777  002440  0E00               	movlw	0
  3778  002442  ECC9  F000         	call	_CANSetFilter
  3779                           
  3780                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3781  002446  0E00               	movlw	0
  3782  002448  0100               	movlb	0	; () banked
  3783  00244A  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3784  00244C  0E00               	movlw	0
  3785  00244E  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3786  002450  0E00               	movlw	0
  3787  002452  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3788  002454  0E00               	movlw	0
  3789  002456  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3790  002458  C113  F0D1         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3791  00245C  0E01               	movlw	1
  3792  00245E  ECC9  F000         	call	_CANSetFilter
  3793                           
  3794                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3795  002462  0E00               	movlw	0
  3796  002464  0100               	movlb	0	; () banked
  3797  002466  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3798  002468  0E00               	movlw	0
  3799  00246A  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3800  00246C  0E00               	movlw	0
  3801  00246E  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3802  002470  0E00               	movlw	0
  3803  002472  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3804  002474  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3805  002478  0E02               	movlw	2
  3806  00247A  ECC9  F000         	call	_CANSetFilter
  3807                           
  3808                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3809  00247E  0E00               	movlw	0
  3810  002480  0100               	movlb	0	; () banked
  3811  002482  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3812  002484  0E00               	movlw	0
  3813  002486  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3814  002488  0E00               	movlw	0
  3815  00248A  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3816  00248C  0E00               	movlw	0
  3817  00248E  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3818  002490  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3819  002494  0E03               	movlw	3
  3820  002496  ECC9  F000         	call	_CANSetFilter
  3821                           
  3822                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3823  00249A  0E00               	movlw	0
  3824  00249C  0100               	movlb	0	; () banked
  3825  00249E  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3826  0024A0  0E00               	movlw	0
  3827  0024A2  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3828  0024A4  0E00               	movlw	0
  3829  0024A6  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3830  0024A8  0E00               	movlw	0
  3831  0024AA  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3832  0024AC  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3833  0024B0  0E04               	movlw	4
  3834  0024B2  ECC9  F000         	call	_CANSetFilter
  3835                           
  3836                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3837  0024B6  0E00               	movlw	0
  3838  0024B8  0100               	movlb	0	; () banked
  3839  0024BA  6FCD               	movwf	CANSetFilter@filter& (0+255),b
  3840  0024BC  0E00               	movlw	0
  3841  0024BE  6FCE               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3842  0024C0  0E00               	movlw	0
  3843  0024C2  6FCF               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3844  0024C4  0E00               	movlw	0
  3845  0024C6  6FD0               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3846  0024C8  C114  F0D1         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3847  0024CC  0E05               	movlw	5
  3848  0024CE  ECC9  F000         	call	_CANSetFilter
  3849                           
  3850                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3851  0024D2  0E00               	movlw	0
  3852  0024D4  ECD6  F015         	call	_CANOperationMode
  3853  0024D8  0012               	return		;funcret
  3854  0024DA                     __end_of_CANInitialize:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           intcon2	equ	0xFF1
  3864                           intcon3	equ	0xFF0
  3865                           postinc0	equ	0xFEE
  3866                           wreg	equ	0xFE8
  3867                           postdec1	equ	0xFE5
  3868                           fsr1l	equ	0xFE1
  3869                           indf2	equ	0xFDF
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function _CANSetMask *****************
  3875 ;; Defined at:
  3876 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  numBuffer       1    wreg     enum E16919
  3879 ;;  mask            4   36[BANK0 ] unsigned long 
  3880 ;;  type            1   40[BANK0 ] enum E16885
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  numBuffer       1    4[BANK1 ] enum E16919
  3883 ;;  tamp            4    5[BANK1 ] unsigned long 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;		None               void
  3886 ;; Registers used:
  3887 ;;		wreg, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3893 ;;      Params:         0       5       0       0
  3894 ;;      Locals:         0       0       5       0
  3895 ;;      Temps:          0       0       4       0
  3896 ;;      Totals:         0       5       9       0
  3897 ;;Total ram usage:       14 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    4
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_CANInitialize
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text7
  3908  00198A                     __ptext7:
  3909                           	opt stack 0
  3910  00198A                     _CANSetMask:
  3911                           	opt stack 24
  3912                           
  3913                           ;incstack = 0
  3914                           ;CANSetMask@numBuffer stored from wreg
  3915  00198A  0101               	movlb	1	; () banked
  3916  00198C  6F04               	movwf	CANSetMask@numBuffer& (0+255),b
  3917                           
  3918                           ; BSR set to: 1
  3919                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3920  00198E  0101               	movlb	1	; () banked
  3921  001990  0504               	decf	CANSetMask@numBuffer& (0+255),w,b
  3922  001992  A4D8               	btfss	status,2,c
  3923  001994  D057               	goto	l4335
  3924                           
  3925                           ; BSR set to: 1
  3926  001996  0100               	movlb	0	; () banked
  3927  001998  29D1               	incf	CANSetMask@type& (0+255),w,b
  3928  00199A  A4D8               	btfss	status,2,c
  3929  00199C  D053               	goto	l4335
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 644: {
  3933                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3934  00199E  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  3935  0019A2  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3936  0019A6  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3937  0019AA  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3938  0019AE  0E04               	movlw	4
  3939  0019B0  D006               	goto	u5080
  3940  0019B2                     u5085:
  3941  0019B2  0101               	movlb	1	; () banked
  3942  0019B4  90D8               	bcf	status,0,c
  3943  0019B6  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3944  0019B8  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3945  0019BA  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3946  0019BC  3300               	rrcf	??_CANSetMask& (0+255),f,b
  3947  0019BE                     u5080:
  3948  0019BE  2EE8               	decfsz	wreg,f,c
  3949  0019C0  D7F8               	goto	u5085
  3950  0019C2  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  3951  0019C6  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3952  0019CA  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3953  0019CE  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3957  0019D2  0101               	movlb	1	; () banked
  3958  0019D4  5105               	movf	CANSetMask@tamp& (0+255),w,b
  3959  0019D6  0101               	movlb	1	; () banked
  3960  0019D8  6F05               	movwf	CANSetMask@tamp& (0+255),b
  3961  0019DA  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3962  0019DC  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3963  0019DE  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3967  0019E0  C105  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3971  0019E4  0E07               	movlw	7
  3972  0019E6  0100               	movlb	0	; () banked
  3973  0019E8  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  3974  0019EA  0101               	movlb	1	; () banked
  3975  0019EC  6F05               	movwf	CANSetMask@tamp& (0+255),b
  3976  0019EE  0E00               	movlw	0
  3977  0019F0  0100               	movlb	0	; () banked
  3978  0019F2  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3979  0019F4  0101               	movlb	1	; () banked
  3980  0019F6  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3981  0019F8  0E00               	movlw	0
  3982  0019FA  0100               	movlb	0	; () banked
  3983  0019FC  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3984  0019FE  0101               	movlb	1	; () banked
  3985  001A00  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3986  001A02  0E00               	movlw	0
  3987  001A04  0100               	movlb	0	; () banked
  3988  001A06  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3989  001A08  0101               	movlb	1	; () banked
  3990  001A0A  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3994  001A0C  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  3995  001A10  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3996  001A14  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3997  001A18  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3998  001A1C  0E05               	movlw	5
  3999  001A1E                     u5095:
  4000  001A1E  90D8               	bcf	status,0,c
  4001  001A20  0101               	movlb	1	; () banked
  4002  001A22  3700               	rlcf	??_CANSetMask& (0+255),f,b
  4003  001A24  3701               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4004  001A26  3702               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4005  001A28  3703               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4006  001A2A  2EE8               	decfsz	wreg,f,c
  4007  001A2C  D7F8               	goto	u5095
  4008  001A2E  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4009  001A32  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4010  001A36  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4011  001A3A  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4012                           
  4013                           ; BSR set to: 1
  4014                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4015  001A3E  C105  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4016  001A42  D000               	goto	l4335
  4017  001A44                     l4335:
  4018                           
  4019                           ;inc\CANlib.h: 652: }
  4020                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4021  001A44  0E02               	movlw	2
  4022  001A46  0101               	movlb	1	; () banked
  4023  001A48  1904               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4024  001A4A  A4D8               	btfss	status,2,c
  4025  001A4C  D057               	goto	l4351
  4026                           
  4027                           ; BSR set to: 1
  4028  001A4E  0100               	movlb	0	; () banked
  4029  001A50  29D1               	incf	CANSetMask@type& (0+255),w,b
  4030  001A52  A4D8               	btfss	status,2,c
  4031  001A54  D053               	goto	l4351
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;inc\CANlib.h: 655: {
  4035                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4036  001A56  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  4037  001A5A  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4038  001A5E  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4039  001A62  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4040  001A66  0E04               	movlw	4
  4041  001A68  D006               	goto	u5120
  4042  001A6A                     u5125:
  4043  001A6A  0101               	movlb	1	; () banked
  4044  001A6C  90D8               	bcf	status,0,c
  4045  001A6E  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4046  001A70  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4047  001A72  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4048  001A74  3300               	rrcf	??_CANSetMask& (0+255),f,b
  4049  001A76                     u5120:
  4050  001A76  2EE8               	decfsz	wreg,f,c
  4051  001A78  D7F8               	goto	u5125
  4052  001A7A  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4053  001A7E  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4054  001A82  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4055  001A86  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4056                           
  4057                           ; BSR set to: 1
  4058                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4059  001A8A  0101               	movlb	1	; () banked
  4060  001A8C  5105               	movf	CANSetMask@tamp& (0+255),w,b
  4061  001A8E  0101               	movlb	1	; () banked
  4062  001A90  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4063  001A92  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4064  001A94  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4065  001A96  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4066                           
  4067                           ; BSR set to: 1
  4068                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4069  001A98  C105  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4070                           
  4071                           ; BSR set to: 1
  4072                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4073  001A9C  0E07               	movlw	7
  4074  001A9E  0100               	movlb	0	; () banked
  4075  001AA0  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  4076  001AA2  0101               	movlb	1	; () banked
  4077  001AA4  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4078  001AA6  0E00               	movlw	0
  4079  001AA8  0100               	movlb	0	; () banked
  4080  001AAA  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4081  001AAC  0101               	movlb	1	; () banked
  4082  001AAE  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4083  001AB0  0E00               	movlw	0
  4084  001AB2  0100               	movlb	0	; () banked
  4085  001AB4  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4086  001AB6  0101               	movlb	1	; () banked
  4087  001AB8  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4088  001ABA  0E00               	movlw	0
  4089  001ABC  0100               	movlb	0	; () banked
  4090  001ABE  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4091  001AC0  0101               	movlb	1	; () banked
  4092  001AC2  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4096  001AC4  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  4097  001AC8  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4098  001ACC  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4099  001AD0  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4100  001AD4  0E05               	movlw	5
  4101  001AD6                     u5135:
  4102  001AD6  90D8               	bcf	status,0,c
  4103  001AD8  0101               	movlb	1	; () banked
  4104  001ADA  3700               	rlcf	??_CANSetMask& (0+255),f,b
  4105  001ADC  3701               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4106  001ADE  3702               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4107  001AE0  3703               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4108  001AE2  2EE8               	decfsz	wreg,f,c
  4109  001AE4  D7F8               	goto	u5135
  4110  001AE6  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4111  001AEA  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4112  001AEE  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4113  001AF2  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4114                           
  4115                           ; BSR set to: 1
  4116                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4117  001AF6  C105  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4118  001AFA  D000               	goto	l4351
  4119  001AFC                     l4351:
  4120                           
  4121                           ;inc\CANlib.h: 663: }
  4122                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4123  001AFC  0101               	movlb	1	; () banked
  4124  001AFE  0504               	decf	CANSetMask@numBuffer& (0+255),w,b
  4125  001B00  A4D8               	btfss	status,2,c
  4126  001B02  D089               	goto	l4383
  4127                           
  4128                           ; BSR set to: 1
  4129  001B04  0EF7               	movlw	247
  4130  001B06  0100               	movlb	0	; () banked
  4131  001B08  19D1               	xorwf	CANSetMask@type& (0+255),w,b
  4132  001B0A  A4D8               	btfss	status,2,c
  4133  001B0C  D084               	goto	l4383
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 666: {
  4137                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4138  001B0E  0100               	movlb	0	; () banked
  4139  001B10  51CD               	movf	CANSetMask@mask& (0+255),w,b
  4140  001B12  0101               	movlb	1	; () banked
  4141  001B14  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4142  001B16  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4143  001B18  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4144  001B1A  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4148  001B1C  C105  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4152  001B20  0E00               	movlw	0
  4153  001B22  0100               	movlb	0	; () banked
  4154  001B24  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  4155  001B26  0101               	movlb	1	; () banked
  4156  001B28  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4157  001B2A  0EFF               	movlw	255
  4158  001B2C  0100               	movlb	0	; () banked
  4159  001B2E  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4160  001B30  0101               	movlb	1	; () banked
  4161  001B32  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4162  001B34  0E00               	movlw	0
  4163  001B36  0100               	movlb	0	; () banked
  4164  001B38  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4165  001B3A  0101               	movlb	1	; () banked
  4166  001B3C  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4167  001B3E  0E00               	movlw	0
  4168  001B40  0100               	movlb	0	; () banked
  4169  001B42  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4170  001B44  0101               	movlb	1	; () banked
  4171  001B46  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4175  001B48  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  4176  001B4C  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4177  001B50  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4178  001B54  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4179  001B58  C101  F100         	movff	??_CANSetMask+1,??_CANSetMask
  4180  001B5C  C102  F101         	movff	??_CANSetMask+2,??_CANSetMask+1
  4181  001B60  C103  F102         	movff	??_CANSetMask+3,??_CANSetMask+2
  4182  001B64  0101               	movlb	1	; () banked
  4183  001B66  6B03               	clrf	(??_CANSetMask+3)& (0+255),b
  4184  001B68  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4185  001B6C  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4186  001B70  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4187  001B74  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4188                           
  4189                           ; BSR set to: 1
  4190                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4191  001B78  C105  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4192                           
  4193                           ; BSR set to: 1
  4194                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4195  001B7C  0100               	movlb	0	; () banked
  4196  001B7E  A1CF               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4197  001B80  D003               	goto	l442
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4201  001B82  010F               	movlb	15	; () banked
  4202  001B84  8119               	bsf	25,0,b	;volatile
  4203  001B86  D002               	goto	l443
  4204  001B88                     l442:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 676: else
  4208                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4209  001B88  010F               	movlb	15	; () banked
  4210  001B8A  9119               	bcf	25,0,b	;volatile
  4211  001B8C                     l443:
  4212                           
  4213                           ; BSR set to: 15
  4214                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4215  001B8C  0100               	movlb	0	; () banked
  4216  001B8E  A3CF               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4217  001B90  D003               	goto	l444
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4221  001B92  010F               	movlb	15	; () banked
  4222  001B94  8319               	bsf	25,1,b	;volatile
  4223  001B96  D002               	goto	l445
  4224  001B98                     l444:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;inc\CANlib.h: 681: else
  4228                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4229  001B98  010F               	movlb	15	; () banked
  4230  001B9A  9319               	bcf	25,1,b	;volatile
  4231  001B9C                     l445:
  4232                           
  4233                           ; BSR set to: 15
  4234                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4235  001B9C  0100               	movlb	0	; () banked
  4236  001B9E  A5CF               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4237  001BA0  D003               	goto	l446
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4241  001BA2  010F               	movlb	15	; () banked
  4242  001BA4  8B19               	bsf	25,5,b	;volatile
  4243  001BA6  D002               	goto	l447
  4244  001BA8                     l446:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 686: else
  4248                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4249  001BA8  010F               	movlb	15	; () banked
  4250  001BAA  9B19               	bcf	25,5,b	;volatile
  4251  001BAC                     l447:
  4252                           
  4253                           ; BSR set to: 15
  4254                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4255  001BAC  0100               	movlb	0	; () banked
  4256  001BAE  A7CF               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4257  001BB0  D003               	goto	l448
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4261  001BB2  010F               	movlb	15	; () banked
  4262  001BB4  8D19               	bsf	25,6,b	;volatile
  4263  001BB6  D002               	goto	l449
  4264  001BB8                     l448:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 691: else
  4268                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4269  001BB8  010F               	movlb	15	; () banked
  4270  001BBA  9D19               	bcf	25,6,b	;volatile
  4271  001BBC                     l449:
  4272                           
  4273                           ; BSR set to: 15
  4274                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4275  001BBC  0100               	movlb	0	; () banked
  4276  001BBE  A9CF               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4277  001BC0  D003               	goto	l450
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4281  001BC2  010F               	movlb	15	; () banked
  4282  001BC4  8F19               	bsf	25,7,b	;volatile
  4283  001BC6  D003               	goto	l4377
  4284  001BC8                     l450:
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 696: else
  4288                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4289  001BC8  010F               	movlb	15	; () banked
  4290  001BCA  9F19               	bcf	25,7,b	;volatile
  4291  001BCC  D000               	goto	l4377
  4292  001BCE                     l4377:
  4293                           
  4294                           ; BSR set to: 15
  4295                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4296  001BCE  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  4297  001BD2  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4298  001BD6  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4299  001BDA  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4300  001BDE  0E16               	movlw	22
  4301  001BE0  D006               	goto	u5210
  4302  001BE2                     u5215:
  4303  001BE2  0101               	movlb	1	; () banked
  4304  001BE4  90D8               	bcf	status,0,c
  4305  001BE6  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4306  001BE8  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4307  001BEA  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4308  001BEC  3300               	rrcf	??_CANSetMask& (0+255),f,b
  4309  001BEE                     u5210:
  4310  001BEE  2EE8               	decfsz	wreg,f,c
  4311  001BF0  D7F8               	goto	u5215
  4312  001BF2  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4313  001BF6  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4314  001BFA  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4315  001BFE  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4316                           
  4317                           ; BSR set to: 1
  4318                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4319  001C02  0101               	movlb	1	; () banked
  4320  001C04  5105               	movf	CANSetMask@tamp& (0+255),w,b
  4321  001C06  0101               	movlb	1	; () banked
  4322  001C08  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4323  001C0A  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4324  001C0C  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4325  001C0E  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4326                           
  4327                           ; BSR set to: 1
  4328                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4329  001C10  C105  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4330  001C14  D000               	goto	l4383
  4331  001C16                     l4383:
  4332                           
  4333                           ;inc\CANlib.h: 702: }
  4334                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4335  001C16  0E02               	movlw	2
  4336  001C18  0101               	movlb	1	; () banked
  4337  001C1A  1904               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4338  001C1C  A4D8               	btfss	status,2,c
  4339  001C1E  D089               	goto	l463
  4340                           
  4341                           ; BSR set to: 1
  4342  001C20  0EF7               	movlw	247
  4343  001C22  0100               	movlb	0	; () banked
  4344  001C24  19D1               	xorwf	CANSetMask@type& (0+255),w,b
  4345  001C26  A4D8               	btfss	status,2,c
  4346  001C28  D084               	goto	l463
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 705: {
  4350                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4351  001C2A  0100               	movlb	0	; () banked
  4352  001C2C  51CD               	movf	CANSetMask@mask& (0+255),w,b
  4353  001C2E  0101               	movlb	1	; () banked
  4354  001C30  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4355  001C32  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4356  001C34  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4357  001C36  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4358                           
  4359                           ; BSR set to: 1
  4360                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4361  001C38  C105  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4362                           
  4363                           ; BSR set to: 1
  4364                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4365  001C3C  0E00               	movlw	0
  4366  001C3E  0100               	movlb	0	; () banked
  4367  001C40  15CD               	andwf	CANSetMask@mask& (0+255),w,b
  4368  001C42  0101               	movlb	1	; () banked
  4369  001C44  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4370  001C46  0EFF               	movlw	255
  4371  001C48  0100               	movlb	0	; () banked
  4372  001C4A  15CE               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4373  001C4C  0101               	movlb	1	; () banked
  4374  001C4E  6F06               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4375  001C50  0E00               	movlw	0
  4376  001C52  0100               	movlb	0	; () banked
  4377  001C54  15CF               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4378  001C56  0101               	movlb	1	; () banked
  4379  001C58  6F07               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4380  001C5A  0E00               	movlw	0
  4381  001C5C  0100               	movlb	0	; () banked
  4382  001C5E  15D0               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4383  001C60  0101               	movlb	1	; () banked
  4384  001C62  6F08               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4385                           
  4386                           ; BSR set to: 1
  4387                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4388  001C64  C105  F100         	movff	CANSetMask@tamp,??_CANSetMask
  4389  001C68  C106  F101         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4390  001C6C  C107  F102         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4391  001C70  C108  F103         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4392  001C74  C101  F100         	movff	??_CANSetMask+1,??_CANSetMask
  4393  001C78  C102  F101         	movff	??_CANSetMask+2,??_CANSetMask+1
  4394  001C7C  C103  F102         	movff	??_CANSetMask+3,??_CANSetMask+2
  4395  001C80  0101               	movlb	1	; () banked
  4396  001C82  6B03               	clrf	(??_CANSetMask+3)& (0+255),b
  4397  001C84  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4398  001C88  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4399  001C8C  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4400  001C90  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4401                           
  4402                           ; BSR set to: 1
  4403                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4404  001C94  C105  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4405                           
  4406                           ; BSR set to: 1
  4407                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4408  001C98  0100               	movlb	0	; () banked
  4409  001C9A  A1CF               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4410  001C9C  D003               	goto	l453
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4414  001C9E  010F               	movlb	15	; () banked
  4415  001CA0  811D               	bsf	29,0,b	;volatile
  4416  001CA2  D002               	goto	l454
  4417  001CA4                     l453:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;inc\CANlib.h: 715: else
  4421                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4422  001CA4  010F               	movlb	15	; () banked
  4423  001CA6  911D               	bcf	29,0,b	;volatile
  4424  001CA8                     l454:
  4425                           
  4426                           ; BSR set to: 15
  4427                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4428  001CA8  0100               	movlb	0	; () banked
  4429  001CAA  A3CF               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4430  001CAC  D003               	goto	l455
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4434  001CAE  010F               	movlb	15	; () banked
  4435  001CB0  831D               	bsf	29,1,b	;volatile
  4436  001CB2  D002               	goto	l456
  4437  001CB4                     l455:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 720: else
  4441                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4442  001CB4  010F               	movlb	15	; () banked
  4443  001CB6  931D               	bcf	29,1,b	;volatile
  4444  001CB8                     l456:
  4445                           
  4446                           ; BSR set to: 15
  4447                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4448  001CB8  0100               	movlb	0	; () banked
  4449  001CBA  A5CF               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4450  001CBC  D003               	goto	l457
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4454  001CBE  010F               	movlb	15	; () banked
  4455  001CC0  8B1D               	bsf	29,5,b	;volatile
  4456  001CC2  D002               	goto	l458
  4457  001CC4                     l457:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;inc\CANlib.h: 725: else
  4461                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4462  001CC4  010F               	movlb	15	; () banked
  4463  001CC6  9B1D               	bcf	29,5,b	;volatile
  4464  001CC8                     l458:
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4468  001CC8  0100               	movlb	0	; () banked
  4469  001CCA  A7CF               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4470  001CCC  D003               	goto	l459
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4474  001CCE  010F               	movlb	15	; () banked
  4475  001CD0  8D1D               	bsf	29,6,b	;volatile
  4476  001CD2  D002               	goto	l460
  4477  001CD4                     l459:
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;inc\CANlib.h: 730: else
  4481                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4482  001CD4  010F               	movlb	15	; () banked
  4483  001CD6  9D1D               	bcf	29,6,b	;volatile
  4484  001CD8                     l460:
  4485                           
  4486                           ; BSR set to: 15
  4487                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4488  001CD8  0100               	movlb	0	; () banked
  4489  001CDA  A9CF               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4490  001CDC  D003               	goto	l461
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4494  001CDE  010F               	movlb	15	; () banked
  4495  001CE0  8F1D               	bsf	29,7,b	;volatile
  4496  001CE2  D003               	goto	l4409
  4497  001CE4                     l461:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;inc\CANlib.h: 735: else
  4501                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4502  001CE4  010F               	movlb	15	; () banked
  4503  001CE6  9F1D               	bcf	29,7,b	;volatile
  4504  001CE8  D000               	goto	l4409
  4505  001CEA                     l4409:
  4506                           
  4507                           ; BSR set to: 15
  4508                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4509  001CEA  C0CD  F100         	movff	CANSetMask@mask,??_CANSetMask
  4510  001CEE  C0CE  F101         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4511  001CF2  C0CF  F102         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4512  001CF6  C0D0  F103         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4513  001CFA  0E16               	movlw	22
  4514  001CFC  D006               	goto	u5290
  4515  001CFE                     u5295:
  4516  001CFE  0101               	movlb	1	; () banked
  4517  001D00  90D8               	bcf	status,0,c
  4518  001D02  3303               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4519  001D04  3302               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4520  001D06  3301               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4521  001D08  3300               	rrcf	??_CANSetMask& (0+255),f,b
  4522  001D0A                     u5290:
  4523  001D0A  2EE8               	decfsz	wreg,f,c
  4524  001D0C  D7F8               	goto	u5295
  4525  001D0E  C100  F105         	movff	??_CANSetMask,CANSetMask@tamp
  4526  001D12  C101  F106         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4527  001D16  C102  F107         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4528  001D1A  C103  F108         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4529                           
  4530                           ; BSR set to: 1
  4531                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4532  001D1E  0101               	movlb	1	; () banked
  4533  001D20  5105               	movf	CANSetMask@tamp& (0+255),w,b
  4534  001D22  0101               	movlb	1	; () banked
  4535  001D24  6F05               	movwf	CANSetMask@tamp& (0+255),b
  4536  001D26  6B06               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4537  001D28  6B07               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4538  001D2A  6B08               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4539                           
  4540                           ; BSR set to: 1
  4541                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4542  001D2C  C105  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4543  001D30  D000               	goto	l463
  4544  001D32                     l463:
  4545  001D32  0012               	return		;funcret
  4546  001D34                     __end_of_CANSetMask:
  4547                           	opt stack 0
  4548                           tblptru	equ	0xFF8
  4549                           tblptrh	equ	0xFF7
  4550                           tblptrl	equ	0xFF6
  4551                           tablat	equ	0xFF5
  4552                           prodh	equ	0xFF4
  4553                           prodl	equ	0xFF3
  4554                           intcon	equ	0xFF2
  4555                           intcon2	equ	0xFF1
  4556                           intcon3	equ	0xFF0
  4557                           postinc0	equ	0xFEE
  4558                           wreg	equ	0xFE8
  4559                           postdec1	equ	0xFE5
  4560                           fsr1l	equ	0xFE1
  4561                           indf2	equ	0xFDF
  4562                           fsr2h	equ	0xFDA
  4563                           fsr2l	equ	0xFD9
  4564                           status	equ	0xFD8
  4565                           
  4566 ;; *************** function _CANSetFilter *****************
  4567 ;; Defined at:
  4568 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  numBuffer       1    wreg     enum E16922
  4571 ;;  filter          4   36[BANK0 ] unsigned long 
  4572 ;;  type            1   40[BANK0 ] enum E16885
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  numBuffer       1    4[BANK1 ] enum E16922
  4575 ;;  tamp            4    5[BANK1 ] unsigned long 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;		None               void
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4585 ;;      Params:         0       5       0       0
  4586 ;;      Locals:         0       0       5       0
  4587 ;;      Temps:          0       0       4       0
  4588 ;;      Totals:         0       5       9       0
  4589 ;;Total ram usage:       14 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    4
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_CANInitialize
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text8
  4600  000192                     __ptext8:
  4601                           	opt stack 0
  4602  000192                     _CANSetFilter:
  4603                           	opt stack 24
  4604                           
  4605                           ;incstack = 0
  4606                           ;CANSetFilter@numBuffer stored from wreg
  4607  000192  0101               	movlb	1	; () banked
  4608  000194  6F04               	movwf	CANSetFilter@numBuffer& (0+255),b
  4609                           
  4610                           ; BSR set to: 1
  4611                           ;inc\CANlib.h: 750: unsigned long tamp;
  4612                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4613  000196  0101               	movlb	1	; () banked
  4614  000198  5104               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4615  00019A  0101               	movlb	1	; () banked
  4616  00019C  A4D8               	btfss	status,2,c
  4617  00019E  D059               	goto	l4433
  4618                           
  4619                           ; BSR set to: 1
  4620  0001A0  0100               	movlb	0	; () banked
  4621  0001A2  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4622  0001A4  A4D8               	btfss	status,2,c
  4623  0001A6  D055               	goto	l4433
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;inc\CANlib.h: 753: {
  4627                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4628  0001A8  010F               	movlb	15	; () banked
  4629  0001AA  9701               	bcf	1,3,b	;volatile
  4630                           
  4631                           ; BSR set to: 15
  4632                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4633  0001AC  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4634  0001B0  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4635  0001B4  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4636  0001B8  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4637  0001BC  0E04               	movlw	4
  4638  0001BE  D006               	goto	u5320
  4639  0001C0                     u5325:
  4640  0001C0  0101               	movlb	1	; () banked
  4641  0001C2  90D8               	bcf	status,0,c
  4642  0001C4  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4643  0001C6  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4644  0001C8  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4645  0001CA  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  4646  0001CC                     u5320:
  4647  0001CC  2EE8               	decfsz	wreg,f,c
  4648  0001CE  D7F8               	goto	u5325
  4649  0001D0  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4650  0001D4  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4651  0001D8  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4652  0001DC  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4653                           
  4654                           ; BSR set to: 1
  4655                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4656  0001E0  0101               	movlb	1	; () banked
  4657  0001E2  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  4658  0001E4  0101               	movlb	1	; () banked
  4659  0001E6  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4660  0001E8  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4661  0001EA  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4662  0001EC  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4663                           
  4664                           ; BSR set to: 1
  4665                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4666  0001EE  C105  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4670  0001F2  0E07               	movlw	7
  4671  0001F4  0100               	movlb	0	; () banked
  4672  0001F6  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  4673  0001F8  0101               	movlb	1	; () banked
  4674  0001FA  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4675  0001FC  0E00               	movlw	0
  4676  0001FE  0100               	movlb	0	; () banked
  4677  000200  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4678  000202  0101               	movlb	1	; () banked
  4679  000204  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4680  000206  0E00               	movlw	0
  4681  000208  0100               	movlb	0	; () banked
  4682  00020A  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4683  00020C  0101               	movlb	1	; () banked
  4684  00020E  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4685  000210  0E00               	movlw	0
  4686  000212  0100               	movlb	0	; () banked
  4687  000214  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4688  000216  0101               	movlb	1	; () banked
  4689  000218  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4690                           
  4691                           ; BSR set to: 1
  4692                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4693  00021A  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  4694  00021E  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4695  000222  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4696  000226  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4697  00022A  0E05               	movlw	5
  4698  00022C                     u5335:
  4699  00022C  90D8               	bcf	status,0,c
  4700  00022E  0101               	movlb	1	; () banked
  4701  000230  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  4702  000232  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4703  000234  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4704  000236  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4705  000238  2EE8               	decfsz	wreg,f,c
  4706  00023A  D7F8               	goto	u5335
  4707  00023C  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4708  000240  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4709  000244  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4710  000248  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4711                           
  4712                           ; BSR set to: 1
  4713                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4714  00024C  C105  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4715  000250  D000               	goto	l4433
  4716  000252                     l4433:
  4717                           
  4718                           ;inc\CANlib.h: 763: }
  4719                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4720  000252  0101               	movlb	1	; () banked
  4721  000254  0504               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4722  000256  A4D8               	btfss	status,2,c
  4723  000258  D059               	goto	l4451
  4724                           
  4725                           ; BSR set to: 1
  4726  00025A  0100               	movlb	0	; () banked
  4727  00025C  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4728  00025E  A4D8               	btfss	status,2,c
  4729  000260  D055               	goto	l4451
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;inc\CANlib.h: 766: {
  4733                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4734  000262  010F               	movlb	15	; () banked
  4735  000264  9705               	bcf	5,3,b	;volatile
  4736                           
  4737                           ; BSR set to: 15
  4738                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4739  000266  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4740  00026A  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4741  00026E  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4742  000272  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4743  000276  0E04               	movlw	4
  4744  000278  D006               	goto	u5360
  4745  00027A                     u5365:
  4746  00027A  0101               	movlb	1	; () banked
  4747  00027C  90D8               	bcf	status,0,c
  4748  00027E  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4749  000280  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4750  000282  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4751  000284  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  4752  000286                     u5360:
  4753  000286  2EE8               	decfsz	wreg,f,c
  4754  000288  D7F8               	goto	u5365
  4755  00028A  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4756  00028E  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4757  000292  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4758  000296  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4759                           
  4760                           ; BSR set to: 1
  4761                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4762  00029A  0101               	movlb	1	; () banked
  4763  00029C  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  4764  00029E  0101               	movlb	1	; () banked
  4765  0002A0  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4766  0002A2  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4767  0002A4  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4768  0002A6  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4769                           
  4770                           ; BSR set to: 1
  4771                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4772  0002A8  C105  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4773                           
  4774                           ; BSR set to: 1
  4775                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4776  0002AC  0E07               	movlw	7
  4777  0002AE  0100               	movlb	0	; () banked
  4778  0002B0  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  4779  0002B2  0101               	movlb	1	; () banked
  4780  0002B4  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4781  0002B6  0E00               	movlw	0
  4782  0002B8  0100               	movlb	0	; () banked
  4783  0002BA  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4784  0002BC  0101               	movlb	1	; () banked
  4785  0002BE  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4786  0002C0  0E00               	movlw	0
  4787  0002C2  0100               	movlb	0	; () banked
  4788  0002C4  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4789  0002C6  0101               	movlb	1	; () banked
  4790  0002C8  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4791  0002CA  0E00               	movlw	0
  4792  0002CC  0100               	movlb	0	; () banked
  4793  0002CE  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4794  0002D0  0101               	movlb	1	; () banked
  4795  0002D2  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4796                           
  4797                           ; BSR set to: 1
  4798                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4799  0002D4  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  4800  0002D8  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4801  0002DC  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4802  0002E0  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4803  0002E4  0E05               	movlw	5
  4804  0002E6                     u5375:
  4805  0002E6  90D8               	bcf	status,0,c
  4806  0002E8  0101               	movlb	1	; () banked
  4807  0002EA  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  4808  0002EC  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4809  0002EE  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4810  0002F0  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4811  0002F2  2EE8               	decfsz	wreg,f,c
  4812  0002F4  D7F8               	goto	u5375
  4813  0002F6  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4814  0002FA  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4815  0002FE  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4816  000302  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4817                           
  4818                           ; BSR set to: 1
  4819                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4820  000306  C105  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4821  00030A  D000               	goto	l4451
  4822  00030C                     l4451:
  4823                           
  4824                           ;inc\CANlib.h: 776: }
  4825                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4826  00030C  0E02               	movlw	2
  4827  00030E  0101               	movlb	1	; () banked
  4828  000310  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4829  000312  A4D8               	btfss	status,2,c
  4830  000314  D059               	goto	l4469
  4831                           
  4832                           ; BSR set to: 1
  4833  000316  0100               	movlb	0	; () banked
  4834  000318  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4835  00031A  A4D8               	btfss	status,2,c
  4836  00031C  D055               	goto	l4469
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;inc\CANlib.h: 779: {
  4840                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4841  00031E  010F               	movlb	15	; () banked
  4842  000320  9709               	bcf	9,3,b	;volatile
  4843                           
  4844                           ; BSR set to: 15
  4845                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4846  000322  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4847  000326  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4848  00032A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4849  00032E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4850  000332  0E04               	movlw	4
  4851  000334  D006               	goto	u5400
  4852  000336                     u5405:
  4853  000336  0101               	movlb	1	; () banked
  4854  000338  90D8               	bcf	status,0,c
  4855  00033A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4856  00033C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4857  00033E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4858  000340  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  4859  000342                     u5400:
  4860  000342  2EE8               	decfsz	wreg,f,c
  4861  000344  D7F8               	goto	u5405
  4862  000346  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4863  00034A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4864  00034E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4865  000352  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4866                           
  4867                           ; BSR set to: 1
  4868                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4869  000356  0101               	movlb	1	; () banked
  4870  000358  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  4871  00035A  0101               	movlb	1	; () banked
  4872  00035C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4873  00035E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4874  000360  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4875  000362  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4879  000364  C105  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4883  000368  0E07               	movlw	7
  4884  00036A  0100               	movlb	0	; () banked
  4885  00036C  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  4886  00036E  0101               	movlb	1	; () banked
  4887  000370  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4888  000372  0E00               	movlw	0
  4889  000374  0100               	movlb	0	; () banked
  4890  000376  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4891  000378  0101               	movlb	1	; () banked
  4892  00037A  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4893  00037C  0E00               	movlw	0
  4894  00037E  0100               	movlb	0	; () banked
  4895  000380  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4896  000382  0101               	movlb	1	; () banked
  4897  000384  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4898  000386  0E00               	movlw	0
  4899  000388  0100               	movlb	0	; () banked
  4900  00038A  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4901  00038C  0101               	movlb	1	; () banked
  4902  00038E  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4903                           
  4904                           ; BSR set to: 1
  4905                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4906  000390  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  4907  000394  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4908  000398  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4909  00039C  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4910  0003A0  0E05               	movlw	5
  4911  0003A2                     u5415:
  4912  0003A2  90D8               	bcf	status,0,c
  4913  0003A4  0101               	movlb	1	; () banked
  4914  0003A6  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  4915  0003A8  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4916  0003AA  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4917  0003AC  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4918  0003AE  2EE8               	decfsz	wreg,f,c
  4919  0003B0  D7F8               	goto	u5415
  4920  0003B2  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4921  0003B6  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4922  0003BA  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4923  0003BE  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4924                           
  4925                           ; BSR set to: 1
  4926                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4927  0003C2  C105  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4928  0003C6  D000               	goto	l4469
  4929  0003C8                     l4469:
  4930                           
  4931                           ;inc\CANlib.h: 789: }
  4932                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4933  0003C8  0E03               	movlw	3
  4934  0003CA  0101               	movlb	1	; () banked
  4935  0003CC  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4936  0003CE  A4D8               	btfss	status,2,c
  4937  0003D0  D059               	goto	l4487
  4938                           
  4939                           ; BSR set to: 1
  4940  0003D2  0100               	movlb	0	; () banked
  4941  0003D4  29D1               	incf	CANSetFilter@type& (0+255),w,b
  4942  0003D6  A4D8               	btfss	status,2,c
  4943  0003D8  D055               	goto	l4487
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;inc\CANlib.h: 792: {
  4947                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4948  0003DA  010F               	movlb	15	; () banked
  4949  0003DC  970D               	bcf	13,3,b	;volatile
  4950                           
  4951                           ; BSR set to: 15
  4952                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4953  0003DE  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  4954  0003E2  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4955  0003E6  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4956  0003EA  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4957  0003EE  0E04               	movlw	4
  4958  0003F0  D006               	goto	u5440
  4959  0003F2                     u5445:
  4960  0003F2  0101               	movlb	1	; () banked
  4961  0003F4  90D8               	bcf	status,0,c
  4962  0003F6  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4963  0003F8  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4964  0003FA  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4965  0003FC  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  4966  0003FE                     u5440:
  4967  0003FE  2EE8               	decfsz	wreg,f,c
  4968  000400  D7F8               	goto	u5445
  4969  000402  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  4970  000406  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4971  00040A  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4972  00040E  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4973                           
  4974                           ; BSR set to: 1
  4975                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4976  000412  0101               	movlb	1	; () banked
  4977  000414  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  4978  000416  0101               	movlb	1	; () banked
  4979  000418  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4980  00041A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4981  00041C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4982  00041E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4983                           
  4984                           ; BSR set to: 1
  4985                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4986  000420  C105  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4987                           
  4988                           ; BSR set to: 1
  4989                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4990  000424  0E07               	movlw	7
  4991  000426  0100               	movlb	0	; () banked
  4992  000428  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  4993  00042A  0101               	movlb	1	; () banked
  4994  00042C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  4995  00042E  0E00               	movlw	0
  4996  000430  0100               	movlb	0	; () banked
  4997  000432  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4998  000434  0101               	movlb	1	; () banked
  4999  000436  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5000  000438  0E00               	movlw	0
  5001  00043A  0100               	movlb	0	; () banked
  5002  00043C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5003  00043E  0101               	movlb	1	; () banked
  5004  000440  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5005  000442  0E00               	movlw	0
  5006  000444  0100               	movlb	0	; () banked
  5007  000446  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5008  000448  0101               	movlb	1	; () banked
  5009  00044A  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5010                           
  5011                           ; BSR set to: 1
  5012                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5013  00044C  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5014  000450  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5015  000454  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5016  000458  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5017  00045C  0E05               	movlw	5
  5018  00045E                     u5455:
  5019  00045E  90D8               	bcf	status,0,c
  5020  000460  0101               	movlb	1	; () banked
  5021  000462  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  5022  000464  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5023  000466  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5024  000468  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5025  00046A  2EE8               	decfsz	wreg,f,c
  5026  00046C  D7F8               	goto	u5455
  5027  00046E  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5028  000472  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5029  000476  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5030  00047A  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5031                           
  5032                           ; BSR set to: 1
  5033                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5034  00047E  C105  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5035  000482  D000               	goto	l4487
  5036  000484                     l4487:
  5037                           
  5038                           ;inc\CANlib.h: 802: }
  5039                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5040  000484  0E04               	movlw	4
  5041  000486  0101               	movlb	1	; () banked
  5042  000488  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5043  00048A  A4D8               	btfss	status,2,c
  5044  00048C  D059               	goto	l4505
  5045                           
  5046                           ; BSR set to: 1
  5047  00048E  0100               	movlb	0	; () banked
  5048  000490  29D1               	incf	CANSetFilter@type& (0+255),w,b
  5049  000492  A4D8               	btfss	status,2,c
  5050  000494  D055               	goto	l4505
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;inc\CANlib.h: 805: {
  5054                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5055  000496  010F               	movlb	15	; () banked
  5056  000498  9711               	bcf	17,3,b	;volatile
  5057                           
  5058                           ; BSR set to: 15
  5059                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5060  00049A  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5061  00049E  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5062  0004A2  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5063  0004A6  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5064  0004AA  0E04               	movlw	4
  5065  0004AC  D006               	goto	u5480
  5066  0004AE                     u5485:
  5067  0004AE  0101               	movlb	1	; () banked
  5068  0004B0  90D8               	bcf	status,0,c
  5069  0004B2  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5070  0004B4  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5071  0004B6  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5072  0004B8  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5073  0004BA                     u5480:
  5074  0004BA  2EE8               	decfsz	wreg,f,c
  5075  0004BC  D7F8               	goto	u5485
  5076  0004BE  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5077  0004C2  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5078  0004C6  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5079  0004CA  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5080                           
  5081                           ; BSR set to: 1
  5082                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5083  0004CE  0101               	movlb	1	; () banked
  5084  0004D0  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5085  0004D2  0101               	movlb	1	; () banked
  5086  0004D4  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5087  0004D6  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5088  0004D8  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5089  0004DA  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5090                           
  5091                           ; BSR set to: 1
  5092                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5093  0004DC  C105  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5094                           
  5095                           ; BSR set to: 1
  5096                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5097  0004E0  0E07               	movlw	7
  5098  0004E2  0100               	movlb	0	; () banked
  5099  0004E4  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5100  0004E6  0101               	movlb	1	; () banked
  5101  0004E8  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5102  0004EA  0E00               	movlw	0
  5103  0004EC  0100               	movlb	0	; () banked
  5104  0004EE  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5105  0004F0  0101               	movlb	1	; () banked
  5106  0004F2  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5107  0004F4  0E00               	movlw	0
  5108  0004F6  0100               	movlb	0	; () banked
  5109  0004F8  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5110  0004FA  0101               	movlb	1	; () banked
  5111  0004FC  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5112  0004FE  0E00               	movlw	0
  5113  000500  0100               	movlb	0	; () banked
  5114  000502  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5115  000504  0101               	movlb	1	; () banked
  5116  000506  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5120  000508  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5121  00050C  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5122  000510  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5123  000514  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5124  000518  0E05               	movlw	5
  5125  00051A                     u5495:
  5126  00051A  90D8               	bcf	status,0,c
  5127  00051C  0101               	movlb	1	; () banked
  5128  00051E  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  5129  000520  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5130  000522  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5131  000524  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5132  000526  2EE8               	decfsz	wreg,f,c
  5133  000528  D7F8               	goto	u5495
  5134  00052A  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5135  00052E  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5136  000532  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5137  000536  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5138                           
  5139                           ; BSR set to: 1
  5140                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5141  00053A  C105  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5142  00053E  D000               	goto	l4505
  5143  000540                     l4505:
  5144                           
  5145                           ;inc\CANlib.h: 815: }
  5146                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5147  000540  0E05               	movlw	5
  5148  000542  0101               	movlb	1	; () banked
  5149  000544  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5150  000546  A4D8               	btfss	status,2,c
  5151  000548  D059               	goto	l4523
  5152                           
  5153                           ; BSR set to: 1
  5154  00054A  0100               	movlb	0	; () banked
  5155  00054C  29D1               	incf	CANSetFilter@type& (0+255),w,b
  5156  00054E  A4D8               	btfss	status,2,c
  5157  000550  D055               	goto	l4523
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 818: {
  5161                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5162  000552  010F               	movlb	15	; () banked
  5163  000554  9715               	bcf	21,3,b	;volatile
  5164                           
  5165                           ; BSR set to: 15
  5166                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5167  000556  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5168  00055A  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5169  00055E  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5170  000562  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5171  000566  0E04               	movlw	4
  5172  000568  D006               	goto	u5520
  5173  00056A                     u5525:
  5174  00056A  0101               	movlb	1	; () banked
  5175  00056C  90D8               	bcf	status,0,c
  5176  00056E  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5177  000570  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5178  000572  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5179  000574  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5180  000576                     u5520:
  5181  000576  2EE8               	decfsz	wreg,f,c
  5182  000578  D7F8               	goto	u5525
  5183  00057A  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5184  00057E  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5185  000582  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5186  000586  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5187                           
  5188                           ; BSR set to: 1
  5189                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5190  00058A  0101               	movlb	1	; () banked
  5191  00058C  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5192  00058E  0101               	movlb	1	; () banked
  5193  000590  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5194  000592  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5195  000594  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5196  000596  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5197                           
  5198                           ; BSR set to: 1
  5199                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5200  000598  C105  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5201                           
  5202                           ; BSR set to: 1
  5203                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5204  00059C  0E07               	movlw	7
  5205  00059E  0100               	movlb	0	; () banked
  5206  0005A0  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5207  0005A2  0101               	movlb	1	; () banked
  5208  0005A4  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5209  0005A6  0E00               	movlw	0
  5210  0005A8  0100               	movlb	0	; () banked
  5211  0005AA  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5212  0005AC  0101               	movlb	1	; () banked
  5213  0005AE  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5214  0005B0  0E00               	movlw	0
  5215  0005B2  0100               	movlb	0	; () banked
  5216  0005B4  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5217  0005B6  0101               	movlb	1	; () banked
  5218  0005B8  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5219  0005BA  0E00               	movlw	0
  5220  0005BC  0100               	movlb	0	; () banked
  5221  0005BE  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5222  0005C0  0101               	movlb	1	; () banked
  5223  0005C2  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5224                           
  5225                           ; BSR set to: 1
  5226                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5227  0005C4  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5228  0005C8  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5229  0005CC  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5230  0005D0  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5231  0005D4  0E05               	movlw	5
  5232  0005D6                     u5535:
  5233  0005D6  90D8               	bcf	status,0,c
  5234  0005D8  0101               	movlb	1	; () banked
  5235  0005DA  3700               	rlcf	??_CANSetFilter& (0+255),f,b
  5236  0005DC  3701               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5237  0005DE  3702               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5238  0005E0  3703               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5239  0005E2  2EE8               	decfsz	wreg,f,c
  5240  0005E4  D7F8               	goto	u5535
  5241  0005E6  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5242  0005EA  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5243  0005EE  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5244  0005F2  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5245                           
  5246                           ; BSR set to: 1
  5247                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5248  0005F6  C105  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5249  0005FA  D000               	goto	l4523
  5250  0005FC                     l4523:
  5251                           
  5252                           ;inc\CANlib.h: 828: }
  5253                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5254  0005FC  0101               	movlb	1	; () banked
  5255  0005FE  5104               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5256  000600  0101               	movlb	1	; () banked
  5257  000602  A4D8               	btfss	status,2,c
  5258  000604  D08B               	goto	l4557
  5259                           
  5260                           ; BSR set to: 1
  5261  000606  0EF7               	movlw	247
  5262  000608  0100               	movlb	0	; () banked
  5263  00060A  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5264  00060C  A4D8               	btfss	status,2,c
  5265  00060E  D086               	goto	l4557
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;inc\CANlib.h: 832: {
  5269                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5270  000610  010F               	movlb	15	; () banked
  5271  000612  8701               	bsf	1,3,b	;volatile
  5272                           
  5273                           ; BSR set to: 15
  5274                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5275  000614  0100               	movlb	0	; () banked
  5276  000616  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5277  000618  0101               	movlb	1	; () banked
  5278  00061A  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5279  00061C  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5280  00061E  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5281  000620  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5282                           
  5283                           ; BSR set to: 1
  5284                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5285  000622  C105  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5286                           
  5287                           ; BSR set to: 1
  5288                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5289  000626  0E00               	movlw	0
  5290  000628  0100               	movlb	0	; () banked
  5291  00062A  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5292  00062C  0101               	movlb	1	; () banked
  5293  00062E  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5294  000630  0EFF               	movlw	255
  5295  000632  0100               	movlb	0	; () banked
  5296  000634  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5297  000636  0101               	movlb	1	; () banked
  5298  000638  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5299  00063A  0E00               	movlw	0
  5300  00063C  0100               	movlb	0	; () banked
  5301  00063E  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5302  000640  0101               	movlb	1	; () banked
  5303  000642  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5304  000644  0E00               	movlw	0
  5305  000646  0100               	movlb	0	; () banked
  5306  000648  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5307  00064A  0101               	movlb	1	; () banked
  5308  00064C  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5309                           
  5310                           ; BSR set to: 1
  5311                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5312  00064E  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5313  000652  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5314  000656  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5315  00065A  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5316  00065E  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  5317  000662  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5318  000666  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5319  00066A  0101               	movlb	1	; () banked
  5320  00066C  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  5321  00066E  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5322  000672  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5323  000676  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5324  00067A  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5325                           
  5326                           ; BSR set to: 1
  5327                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5328  00067E  C105  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5329                           
  5330                           ; BSR set to: 1
  5331                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5332  000682  0100               	movlb	0	; () banked
  5333  000684  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5334  000686  D003               	goto	l473
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5338  000688  010F               	movlb	15	; () banked
  5339  00068A  8101               	bsf	1,0,b	;volatile
  5340  00068C  D002               	goto	l474
  5341  00068E                     l473:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 844: else
  5345                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5346  00068E  010F               	movlb	15	; () banked
  5347  000690  9101               	bcf	1,0,b	;volatile
  5348  000692                     l474:
  5349                           
  5350                           ; BSR set to: 15
  5351                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5352  000692  0100               	movlb	0	; () banked
  5353  000694  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5354  000696  D003               	goto	l475
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5358  000698  010F               	movlb	15	; () banked
  5359  00069A  8301               	bsf	1,1,b	;volatile
  5360  00069C  D002               	goto	l476
  5361  00069E                     l475:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;inc\CANlib.h: 849: else
  5365                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5366  00069E  010F               	movlb	15	; () banked
  5367  0006A0  9301               	bcf	1,1,b	;volatile
  5368  0006A2                     l476:
  5369                           
  5370                           ; BSR set to: 15
  5371                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5372  0006A2  0100               	movlb	0	; () banked
  5373  0006A4  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5374  0006A6  D003               	goto	l477
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5378  0006A8  010F               	movlb	15	; () banked
  5379  0006AA  8B01               	bsf	1,5,b	;volatile
  5380  0006AC  D002               	goto	l478
  5381  0006AE                     l477:
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;inc\CANlib.h: 854: else
  5385                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5386  0006AE  010F               	movlb	15	; () banked
  5387  0006B0  9B01               	bcf	1,5,b	;volatile
  5388  0006B2                     l478:
  5389                           
  5390                           ; BSR set to: 15
  5391                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5392  0006B2  0100               	movlb	0	; () banked
  5393  0006B4  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5394  0006B6  D003               	goto	l479
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5398  0006B8  010F               	movlb	15	; () banked
  5399  0006BA  8D01               	bsf	1,6,b	;volatile
  5400  0006BC  D002               	goto	l480
  5401  0006BE                     l479:
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 859: else
  5405                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5406  0006BE  010F               	movlb	15	; () banked
  5407  0006C0  9D01               	bcf	1,6,b	;volatile
  5408  0006C2                     l480:
  5409                           
  5410                           ; BSR set to: 15
  5411                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5412  0006C2  0100               	movlb	0	; () banked
  5413  0006C4  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5414  0006C6  D003               	goto	l481
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5418  0006C8  010F               	movlb	15	; () banked
  5419  0006CA  8F01               	bsf	1,7,b	;volatile
  5420  0006CC  D003               	goto	l4551
  5421  0006CE                     l481:
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;inc\CANlib.h: 864: else
  5425                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5426  0006CE  010F               	movlb	15	; () banked
  5427  0006D0  9F01               	bcf	1,7,b	;volatile
  5428  0006D2  D000               	goto	l4551
  5429  0006D4                     l4551:
  5430                           
  5431                           ; BSR set to: 15
  5432                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5433  0006D4  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5434  0006D8  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5435  0006DC  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5436  0006E0  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5437  0006E4  0E16               	movlw	22
  5438  0006E6  D006               	goto	u5610
  5439  0006E8                     u5615:
  5440  0006E8  0101               	movlb	1	; () banked
  5441  0006EA  90D8               	bcf	status,0,c
  5442  0006EC  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5443  0006EE  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5444  0006F0  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5445  0006F2  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5446  0006F4                     u5610:
  5447  0006F4  2EE8               	decfsz	wreg,f,c
  5448  0006F6  D7F8               	goto	u5615
  5449  0006F8  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5450  0006FC  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5451  000700  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5452  000704  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5453                           
  5454                           ; BSR set to: 1
  5455                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5456  000708  0101               	movlb	1	; () banked
  5457  00070A  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5458  00070C  0101               	movlb	1	; () banked
  5459  00070E  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5460  000710  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5461  000712  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5462  000714  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5463                           
  5464                           ; BSR set to: 1
  5465                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5466  000716  C105  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5467  00071A  D000               	goto	l4557
  5468  00071C                     l4557:
  5469                           
  5470                           ;inc\CANlib.h: 870: }
  5471                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5472  00071C  0101               	movlb	1	; () banked
  5473  00071E  0504               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5474  000720  A4D8               	btfss	status,2,c
  5475  000722  D08B               	goto	l4591
  5476                           
  5477                           ; BSR set to: 1
  5478  000724  0EF7               	movlw	247
  5479  000726  0100               	movlb	0	; () banked
  5480  000728  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5481  00072A  A4D8               	btfss	status,2,c
  5482  00072C  D086               	goto	l4591
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;inc\CANlib.h: 873: {
  5486                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5487  00072E  010F               	movlb	15	; () banked
  5488  000730  8705               	bsf	5,3,b	;volatile
  5489                           
  5490                           ; BSR set to: 15
  5491                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5492  000732  0100               	movlb	0	; () banked
  5493  000734  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5494  000736  0101               	movlb	1	; () banked
  5495  000738  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5496  00073A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5497  00073C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5498  00073E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5499                           
  5500                           ; BSR set to: 1
  5501                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5502  000740  C105  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5503                           
  5504                           ; BSR set to: 1
  5505                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5506  000744  0E00               	movlw	0
  5507  000746  0100               	movlb	0	; () banked
  5508  000748  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5509  00074A  0101               	movlb	1	; () banked
  5510  00074C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5511  00074E  0EFF               	movlw	255
  5512  000750  0100               	movlb	0	; () banked
  5513  000752  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5514  000754  0101               	movlb	1	; () banked
  5515  000756  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5516  000758  0E00               	movlw	0
  5517  00075A  0100               	movlb	0	; () banked
  5518  00075C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5519  00075E  0101               	movlb	1	; () banked
  5520  000760  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5521  000762  0E00               	movlw	0
  5522  000764  0100               	movlb	0	; () banked
  5523  000766  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5524  000768  0101               	movlb	1	; () banked
  5525  00076A  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5526                           
  5527                           ; BSR set to: 1
  5528                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5529  00076C  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5530  000770  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5531  000774  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5532  000778  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5533  00077C  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  5534  000780  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5535  000784  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5536  000788  0101               	movlb	1	; () banked
  5537  00078A  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  5538  00078C  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5539  000790  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5540  000794  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5541  000798  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5542                           
  5543                           ; BSR set to: 1
  5544                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5545  00079C  C105  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5546                           
  5547                           ; BSR set to: 1
  5548                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5549  0007A0  0100               	movlb	0	; () banked
  5550  0007A2  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5551  0007A4  D003               	goto	l484
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5555  0007A6  010F               	movlb	15	; () banked
  5556  0007A8  8105               	bsf	5,0,b	;volatile
  5557  0007AA  D002               	goto	l485
  5558  0007AC                     l484:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 885: else
  5562                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5563  0007AC  010F               	movlb	15	; () banked
  5564  0007AE  9105               	bcf	5,0,b	;volatile
  5565  0007B0                     l485:
  5566                           
  5567                           ; BSR set to: 15
  5568                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5569  0007B0  0100               	movlb	0	; () banked
  5570  0007B2  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5571  0007B4  D003               	goto	l486
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5575  0007B6  010F               	movlb	15	; () banked
  5576  0007B8  8305               	bsf	5,1,b	;volatile
  5577  0007BA  D002               	goto	l487
  5578  0007BC                     l486:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;inc\CANlib.h: 890: else
  5582                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5583  0007BC  010F               	movlb	15	; () banked
  5584  0007BE  9305               	bcf	5,1,b	;volatile
  5585  0007C0                     l487:
  5586                           
  5587                           ; BSR set to: 15
  5588                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5589  0007C0  0100               	movlb	0	; () banked
  5590  0007C2  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5591  0007C4  D003               	goto	l488
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5595  0007C6  010F               	movlb	15	; () banked
  5596  0007C8  8B05               	bsf	5,5,b	;volatile
  5597  0007CA  D002               	goto	l489
  5598  0007CC                     l488:
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;inc\CANlib.h: 895: else
  5602                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5603  0007CC  010F               	movlb	15	; () banked
  5604  0007CE  9B05               	bcf	5,5,b	;volatile
  5605  0007D0                     l489:
  5606                           
  5607                           ; BSR set to: 15
  5608                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5609  0007D0  0100               	movlb	0	; () banked
  5610  0007D2  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5611  0007D4  D003               	goto	l490
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5615  0007D6  010F               	movlb	15	; () banked
  5616  0007D8  8D05               	bsf	5,6,b	;volatile
  5617  0007DA  D002               	goto	l491
  5618  0007DC                     l490:
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;inc\CANlib.h: 900: else
  5622                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5623  0007DC  010F               	movlb	15	; () banked
  5624  0007DE  9D05               	bcf	5,6,b	;volatile
  5625  0007E0                     l491:
  5626                           
  5627                           ; BSR set to: 15
  5628                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5629  0007E0  0100               	movlb	0	; () banked
  5630  0007E2  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5631  0007E4  D003               	goto	l492
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5635  0007E6  010F               	movlb	15	; () banked
  5636  0007E8  8F05               	bsf	5,7,b	;volatile
  5637  0007EA  D003               	goto	l4585
  5638  0007EC                     l492:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;inc\CANlib.h: 905: else
  5642                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5643  0007EC  010F               	movlb	15	; () banked
  5644  0007EE  9F05               	bcf	5,7,b	;volatile
  5645  0007F0  D000               	goto	l4585
  5646  0007F2                     l4585:
  5647                           
  5648                           ; BSR set to: 15
  5649                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5650  0007F2  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5651  0007F6  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5652  0007FA  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5653  0007FE  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5654  000802  0E16               	movlw	22
  5655  000804  D006               	goto	u5690
  5656  000806                     u5695:
  5657  000806  0101               	movlb	1	; () banked
  5658  000808  90D8               	bcf	status,0,c
  5659  00080A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5660  00080C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5661  00080E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5662  000810  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5663  000812                     u5690:
  5664  000812  2EE8               	decfsz	wreg,f,c
  5665  000814  D7F8               	goto	u5695
  5666  000816  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5667  00081A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5668  00081E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5669  000822  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5670                           
  5671                           ; BSR set to: 1
  5672                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5673  000826  0101               	movlb	1	; () banked
  5674  000828  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5675  00082A  0101               	movlb	1	; () banked
  5676  00082C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5677  00082E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5678  000830  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5679  000832  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5680                           
  5681                           ; BSR set to: 1
  5682                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5683  000834  C105  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5684  000838  D000               	goto	l4591
  5685  00083A                     l4591:
  5686                           
  5687                           ;inc\CANlib.h: 911: }
  5688                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5689  00083A  0E02               	movlw	2
  5690  00083C  0101               	movlb	1	; () banked
  5691  00083E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5692  000840  A4D8               	btfss	status,2,c
  5693  000842  D08B               	goto	l4625
  5694                           
  5695                           ; BSR set to: 1
  5696  000844  0EF7               	movlw	247
  5697  000846  0100               	movlb	0	; () banked
  5698  000848  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5699  00084A  A4D8               	btfss	status,2,c
  5700  00084C  D086               	goto	l4625
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;inc\CANlib.h: 915: {
  5704                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5705  00084E  010F               	movlb	15	; () banked
  5706  000850  8709               	bsf	9,3,b	;volatile
  5707                           
  5708                           ; BSR set to: 15
  5709                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5710  000852  0100               	movlb	0	; () banked
  5711  000854  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5712  000856  0101               	movlb	1	; () banked
  5713  000858  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5714  00085A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5715  00085C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5716  00085E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5717                           
  5718                           ; BSR set to: 1
  5719                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5720  000860  C105  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5721                           
  5722                           ; BSR set to: 1
  5723                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5724  000864  0E00               	movlw	0
  5725  000866  0100               	movlb	0	; () banked
  5726  000868  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5727  00086A  0101               	movlb	1	; () banked
  5728  00086C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5729  00086E  0EFF               	movlw	255
  5730  000870  0100               	movlb	0	; () banked
  5731  000872  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5732  000874  0101               	movlb	1	; () banked
  5733  000876  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5734  000878  0E00               	movlw	0
  5735  00087A  0100               	movlb	0	; () banked
  5736  00087C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5737  00087E  0101               	movlb	1	; () banked
  5738  000880  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5739  000882  0E00               	movlw	0
  5740  000884  0100               	movlb	0	; () banked
  5741  000886  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5742  000888  0101               	movlb	1	; () banked
  5743  00088A  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5744                           
  5745                           ; BSR set to: 1
  5746                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5747  00088C  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5748  000890  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5749  000894  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5750  000898  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5751  00089C  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  5752  0008A0  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5753  0008A4  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5754  0008A8  0101               	movlb	1	; () banked
  5755  0008AA  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  5756  0008AC  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5757  0008B0  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5758  0008B4  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5759  0008B8  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5760                           
  5761                           ; BSR set to: 1
  5762                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5763  0008BC  C105  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5764                           
  5765                           ; BSR set to: 1
  5766                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5767  0008C0  0100               	movlb	0	; () banked
  5768  0008C2  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5769  0008C4  D003               	goto	l495
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5773  0008C6  010F               	movlb	15	; () banked
  5774  0008C8  8109               	bsf	9,0,b	;volatile
  5775  0008CA  D002               	goto	l496
  5776  0008CC                     l495:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 927: else
  5780                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5781  0008CC  010F               	movlb	15	; () banked
  5782  0008CE  9109               	bcf	9,0,b	;volatile
  5783  0008D0                     l496:
  5784                           
  5785                           ; BSR set to: 15
  5786                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5787  0008D0  0100               	movlb	0	; () banked
  5788  0008D2  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5789  0008D4  D003               	goto	l497
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5793  0008D6  010F               	movlb	15	; () banked
  5794  0008D8  8309               	bsf	9,1,b	;volatile
  5795  0008DA  D002               	goto	l498
  5796  0008DC                     l497:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;inc\CANlib.h: 932: else
  5800                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5801  0008DC  010F               	movlb	15	; () banked
  5802  0008DE  9309               	bcf	9,1,b	;volatile
  5803  0008E0                     l498:
  5804                           
  5805                           ; BSR set to: 15
  5806                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5807  0008E0  0100               	movlb	0	; () banked
  5808  0008E2  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5809  0008E4  D003               	goto	l499
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5813  0008E6  010F               	movlb	15	; () banked
  5814  0008E8  8B09               	bsf	9,5,b	;volatile
  5815  0008EA  D002               	goto	l500
  5816  0008EC                     l499:
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;inc\CANlib.h: 937: else
  5820                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5821  0008EC  010F               	movlb	15	; () banked
  5822  0008EE  9B09               	bcf	9,5,b	;volatile
  5823  0008F0                     l500:
  5824                           
  5825                           ; BSR set to: 15
  5826                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5827  0008F0  0100               	movlb	0	; () banked
  5828  0008F2  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5829  0008F4  D003               	goto	l501
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5833  0008F6  010F               	movlb	15	; () banked
  5834  0008F8  8D09               	bsf	9,6,b	;volatile
  5835  0008FA  D002               	goto	l502
  5836  0008FC                     l501:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;inc\CANlib.h: 942: else
  5840                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5841  0008FC  010F               	movlb	15	; () banked
  5842  0008FE  9D09               	bcf	9,6,b	;volatile
  5843  000900                     l502:
  5844                           
  5845                           ; BSR set to: 15
  5846                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5847  000900  0100               	movlb	0	; () banked
  5848  000902  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5849  000904  D003               	goto	l503
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5853  000906  010F               	movlb	15	; () banked
  5854  000908  8F09               	bsf	9,7,b	;volatile
  5855  00090A  D003               	goto	l4619
  5856  00090C                     l503:
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;inc\CANlib.h: 947: else
  5860                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5861  00090C  010F               	movlb	15	; () banked
  5862  00090E  9F09               	bcf	9,7,b	;volatile
  5863  000910  D000               	goto	l4619
  5864  000912                     l4619:
  5865                           
  5866                           ; BSR set to: 15
  5867                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5868  000912  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  5869  000916  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5870  00091A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5871  00091E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5872  000922  0E16               	movlw	22
  5873  000924  D006               	goto	u5770
  5874  000926                     u5775:
  5875  000926  0101               	movlb	1	; () banked
  5876  000928  90D8               	bcf	status,0,c
  5877  00092A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5878  00092C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5879  00092E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5880  000930  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  5881  000932                     u5770:
  5882  000932  2EE8               	decfsz	wreg,f,c
  5883  000934  D7F8               	goto	u5775
  5884  000936  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5885  00093A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5886  00093E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5887  000942  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5888                           
  5889                           ; BSR set to: 1
  5890                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5891  000946  0101               	movlb	1	; () banked
  5892  000948  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  5893  00094A  0101               	movlb	1	; () banked
  5894  00094C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5895  00094E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5896  000950  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5897  000952  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5901  000954  C105  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5902  000958  D000               	goto	l4625
  5903  00095A                     l4625:
  5904                           
  5905                           ;inc\CANlib.h: 953: }
  5906                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5907  00095A  0E03               	movlw	3
  5908  00095C  0101               	movlb	1	; () banked
  5909  00095E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5910  000960  A4D8               	btfss	status,2,c
  5911  000962  D08B               	goto	l4659
  5912                           
  5913                           ; BSR set to: 1
  5914  000964  0EF7               	movlw	247
  5915  000966  0100               	movlb	0	; () banked
  5916  000968  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  5917  00096A  A4D8               	btfss	status,2,c
  5918  00096C  D086               	goto	l4659
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;inc\CANlib.h: 956: {
  5922                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5923  00096E  010F               	movlb	15	; () banked
  5924  000970  870D               	bsf	13,3,b	;volatile
  5925                           
  5926                           ; BSR set to: 15
  5927                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5928  000972  0100               	movlb	0	; () banked
  5929  000974  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  5930  000976  0101               	movlb	1	; () banked
  5931  000978  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5932  00097A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5933  00097C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5934  00097E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5935                           
  5936                           ; BSR set to: 1
  5937                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5938  000980  C105  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5939                           
  5940                           ; BSR set to: 1
  5941                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5942  000984  0E00               	movlw	0
  5943  000986  0100               	movlb	0	; () banked
  5944  000988  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  5945  00098A  0101               	movlb	1	; () banked
  5946  00098C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  5947  00098E  0EFF               	movlw	255
  5948  000990  0100               	movlb	0	; () banked
  5949  000992  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5950  000994  0101               	movlb	1	; () banked
  5951  000996  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5952  000998  0E00               	movlw	0
  5953  00099A  0100               	movlb	0	; () banked
  5954  00099C  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5955  00099E  0101               	movlb	1	; () banked
  5956  0009A0  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5957  0009A2  0E00               	movlw	0
  5958  0009A4  0100               	movlb	0	; () banked
  5959  0009A6  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5960  0009A8  0101               	movlb	1	; () banked
  5961  0009AA  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5962                           
  5963                           ; BSR set to: 1
  5964                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5965  0009AC  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  5966  0009B0  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5967  0009B4  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5968  0009B8  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5969  0009BC  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  5970  0009C0  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5971  0009C4  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5972  0009C8  0101               	movlb	1	; () banked
  5973  0009CA  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  5974  0009CC  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  5975  0009D0  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5976  0009D4  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5977  0009D8  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5981  0009DC  C105  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5985  0009E0  0100               	movlb	0	; () banked
  5986  0009E2  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5987  0009E4  D003               	goto	l506
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5991  0009E6  010F               	movlb	15	; () banked
  5992  0009E8  810D               	bsf	13,0,b	;volatile
  5993  0009EA  D002               	goto	l507
  5994  0009EC                     l506:
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;inc\CANlib.h: 968: else
  5998                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5999  0009EC  010F               	movlb	15	; () banked
  6000  0009EE  910D               	bcf	13,0,b	;volatile
  6001  0009F0                     l507:
  6002                           
  6003                           ; BSR set to: 15
  6004                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6005  0009F0  0100               	movlb	0	; () banked
  6006  0009F2  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6007  0009F4  D003               	goto	l508
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6011  0009F6  010F               	movlb	15	; () banked
  6012  0009F8  830D               	bsf	13,1,b	;volatile
  6013  0009FA  D002               	goto	l509
  6014  0009FC                     l508:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;inc\CANlib.h: 973: else
  6018                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6019  0009FC  010F               	movlb	15	; () banked
  6020  0009FE  930D               	bcf	13,1,b	;volatile
  6021  000A00                     l509:
  6022                           
  6023                           ; BSR set to: 15
  6024                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6025  000A00  0100               	movlb	0	; () banked
  6026  000A02  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6027  000A04  D003               	goto	l510
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6031  000A06  010F               	movlb	15	; () banked
  6032  000A08  8B0D               	bsf	13,5,b	;volatile
  6033  000A0A  D002               	goto	l511
  6034  000A0C                     l510:
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;inc\CANlib.h: 978: else
  6038                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6039  000A0C  010F               	movlb	15	; () banked
  6040  000A0E  9B0D               	bcf	13,5,b	;volatile
  6041  000A10                     l511:
  6042                           
  6043                           ; BSR set to: 15
  6044                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6045  000A10  0100               	movlb	0	; () banked
  6046  000A12  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6047  000A14  D003               	goto	l512
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6051  000A16  010F               	movlb	15	; () banked
  6052  000A18  8D0D               	bsf	13,6,b	;volatile
  6053  000A1A  D002               	goto	l513
  6054  000A1C                     l512:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;inc\CANlib.h: 983: else
  6058                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6059  000A1C  010F               	movlb	15	; () banked
  6060  000A1E  9D0D               	bcf	13,6,b	;volatile
  6061  000A20                     l513:
  6062                           
  6063                           ; BSR set to: 15
  6064                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6065  000A20  0100               	movlb	0	; () banked
  6066  000A22  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6067  000A24  D003               	goto	l514
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6071  000A26  010F               	movlb	15	; () banked
  6072  000A28  8F0D               	bsf	13,7,b	;volatile
  6073  000A2A  D003               	goto	l4653
  6074  000A2C                     l514:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;inc\CANlib.h: 988: else
  6078                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6079  000A2C  010F               	movlb	15	; () banked
  6080  000A2E  9F0D               	bcf	13,7,b	;volatile
  6081  000A30  D000               	goto	l4653
  6082  000A32                     l4653:
  6083                           
  6084                           ; BSR set to: 15
  6085                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6086  000A32  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  6087  000A36  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6088  000A3A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6089  000A3E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6090  000A42  0E16               	movlw	22
  6091  000A44  D006               	goto	u5850
  6092  000A46                     u5855:
  6093  000A46  0101               	movlb	1	; () banked
  6094  000A48  90D8               	bcf	status,0,c
  6095  000A4A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6096  000A4C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6097  000A4E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6098  000A50  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  6099  000A52                     u5850:
  6100  000A52  2EE8               	decfsz	wreg,f,c
  6101  000A54  D7F8               	goto	u5855
  6102  000A56  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6103  000A5A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6104  000A5E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6105  000A62  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6106                           
  6107                           ; BSR set to: 1
  6108                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6109  000A66  0101               	movlb	1	; () banked
  6110  000A68  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  6111  000A6A  0101               	movlb	1	; () banked
  6112  000A6C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6113  000A6E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6114  000A70  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6115  000A72  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6116                           
  6117                           ; BSR set to: 1
  6118                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6119  000A74  C105  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6120  000A78  D000               	goto	l4659
  6121  000A7A                     l4659:
  6122                           
  6123                           ;inc\CANlib.h: 994: }
  6124                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6125  000A7A  0E04               	movlw	4
  6126  000A7C  0101               	movlb	1	; () banked
  6127  000A7E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6128  000A80  A4D8               	btfss	status,2,c
  6129  000A82  D08B               	goto	l4693
  6130                           
  6131                           ; BSR set to: 1
  6132  000A84  0EF7               	movlw	247
  6133  000A86  0100               	movlb	0	; () banked
  6134  000A88  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  6135  000A8A  A4D8               	btfss	status,2,c
  6136  000A8C  D086               	goto	l4693
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;inc\CANlib.h: 997: {
  6140                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6141  000A8E  010F               	movlb	15	; () banked
  6142  000A90  8711               	bsf	17,3,b	;volatile
  6143                           
  6144                           ; BSR set to: 15
  6145                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6146  000A92  0100               	movlb	0	; () banked
  6147  000A94  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  6148  000A96  0101               	movlb	1	; () banked
  6149  000A98  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6150  000A9A  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6151  000A9C  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6152  000A9E  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6153                           
  6154                           ; BSR set to: 1
  6155                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6156  000AA0  C105  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6157                           
  6158                           ; BSR set to: 1
  6159                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6160  000AA4  0E00               	movlw	0
  6161  000AA6  0100               	movlb	0	; () banked
  6162  000AA8  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  6163  000AAA  0101               	movlb	1	; () banked
  6164  000AAC  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6165  000AAE  0EFF               	movlw	255
  6166  000AB0  0100               	movlb	0	; () banked
  6167  000AB2  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6168  000AB4  0101               	movlb	1	; () banked
  6169  000AB6  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6170  000AB8  0E00               	movlw	0
  6171  000ABA  0100               	movlb	0	; () banked
  6172  000ABC  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6173  000ABE  0101               	movlb	1	; () banked
  6174  000AC0  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6175  000AC2  0E00               	movlw	0
  6176  000AC4  0100               	movlb	0	; () banked
  6177  000AC6  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6178  000AC8  0101               	movlb	1	; () banked
  6179  000ACA  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6180                           
  6181                           ; BSR set to: 1
  6182                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6183  000ACC  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  6184  000AD0  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6185  000AD4  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6186  000AD8  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6187  000ADC  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  6188  000AE0  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6189  000AE4  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6190  000AE8  0101               	movlb	1	; () banked
  6191  000AEA  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  6192  000AEC  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6193  000AF0  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6194  000AF4  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6195  000AF8  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6196                           
  6197                           ; BSR set to: 1
  6198                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6199  000AFC  C105  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6200                           
  6201                           ; BSR set to: 1
  6202                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6203  000B00  0100               	movlb	0	; () banked
  6204  000B02  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6205  000B04  D003               	goto	l517
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6209  000B06  010F               	movlb	15	; () banked
  6210  000B08  8111               	bsf	17,0,b	;volatile
  6211  000B0A  D002               	goto	l518
  6212  000B0C                     l517:
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;inc\CANlib.h: 1009: else
  6216                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6217  000B0C  010F               	movlb	15	; () banked
  6218  000B0E  9111               	bcf	17,0,b	;volatile
  6219  000B10                     l518:
  6220                           
  6221                           ; BSR set to: 15
  6222                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6223  000B10  0100               	movlb	0	; () banked
  6224  000B12  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6225  000B14  D003               	goto	l519
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6229  000B16  010F               	movlb	15	; () banked
  6230  000B18  8311               	bsf	17,1,b	;volatile
  6231  000B1A  D002               	goto	l520
  6232  000B1C                     l519:
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;inc\CANlib.h: 1014: else
  6236                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6237  000B1C  010F               	movlb	15	; () banked
  6238  000B1E  9311               	bcf	17,1,b	;volatile
  6239  000B20                     l520:
  6240                           
  6241                           ; BSR set to: 15
  6242                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6243  000B20  0100               	movlb	0	; () banked
  6244  000B22  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6245  000B24  D003               	goto	l521
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6249  000B26  010F               	movlb	15	; () banked
  6250  000B28  8B11               	bsf	17,5,b	;volatile
  6251  000B2A  D002               	goto	l522
  6252  000B2C                     l521:
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;inc\CANlib.h: 1019: else
  6256                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6257  000B2C  010F               	movlb	15	; () banked
  6258  000B2E  9B11               	bcf	17,5,b	;volatile
  6259  000B30                     l522:
  6260                           
  6261                           ; BSR set to: 15
  6262                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6263  000B30  0100               	movlb	0	; () banked
  6264  000B32  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6265  000B34  D003               	goto	l523
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6269  000B36  010F               	movlb	15	; () banked
  6270  000B38  8D11               	bsf	17,6,b	;volatile
  6271  000B3A  D002               	goto	l524
  6272  000B3C                     l523:
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;inc\CANlib.h: 1024: else
  6276                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6277  000B3C  010F               	movlb	15	; () banked
  6278  000B3E  9D11               	bcf	17,6,b	;volatile
  6279  000B40                     l524:
  6280                           
  6281                           ; BSR set to: 15
  6282                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6283  000B40  0100               	movlb	0	; () banked
  6284  000B42  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6285  000B44  D003               	goto	l525
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6289  000B46  010F               	movlb	15	; () banked
  6290  000B48  8F11               	bsf	17,7,b	;volatile
  6291  000B4A  D003               	goto	l4687
  6292  000B4C                     l525:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;inc\CANlib.h: 1029: else
  6296                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6297  000B4C  010F               	movlb	15	; () banked
  6298  000B4E  9F11               	bcf	17,7,b	;volatile
  6299  000B50  D000               	goto	l4687
  6300  000B52                     l4687:
  6301                           
  6302                           ; BSR set to: 15
  6303                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6304  000B52  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  6305  000B56  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6306  000B5A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6307  000B5E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6308  000B62  0E16               	movlw	22
  6309  000B64  D006               	goto	u5930
  6310  000B66                     u5935:
  6311  000B66  0101               	movlb	1	; () banked
  6312  000B68  90D8               	bcf	status,0,c
  6313  000B6A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6314  000B6C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6315  000B6E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6316  000B70  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  6317  000B72                     u5930:
  6318  000B72  2EE8               	decfsz	wreg,f,c
  6319  000B74  D7F8               	goto	u5935
  6320  000B76  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6321  000B7A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6322  000B7E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6323  000B82  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6324                           
  6325                           ; BSR set to: 1
  6326                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6327  000B86  0101               	movlb	1	; () banked
  6328  000B88  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  6329  000B8A  0101               	movlb	1	; () banked
  6330  000B8C  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6331  000B8E  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6332  000B90  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6333  000B92  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6334                           
  6335                           ; BSR set to: 1
  6336                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6337  000B94  C105  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6338  000B98  D000               	goto	l4693
  6339  000B9A                     l4693:
  6340                           
  6341                           ;inc\CANlib.h: 1035: }
  6342                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6343  000B9A  0E05               	movlw	5
  6344  000B9C  0101               	movlb	1	; () banked
  6345  000B9E  1904               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6346  000BA0  A4D8               	btfss	status,2,c
  6347  000BA2  D08B               	goto	l538
  6348                           
  6349                           ; BSR set to: 1
  6350  000BA4  0EF7               	movlw	247
  6351  000BA6  0100               	movlb	0	; () banked
  6352  000BA8  19D1               	xorwf	CANSetFilter@type& (0+255),w,b
  6353  000BAA  A4D8               	btfss	status,2,c
  6354  000BAC  D086               	goto	l538
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;inc\CANlib.h: 1038: {
  6358                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6359  000BAE  010F               	movlb	15	; () banked
  6360  000BB0  8715               	bsf	21,3,b	;volatile
  6361                           
  6362                           ; BSR set to: 15
  6363                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6364  000BB2  0100               	movlb	0	; () banked
  6365  000BB4  51CD               	movf	CANSetFilter@filter& (0+255),w,b
  6366  000BB6  0101               	movlb	1	; () banked
  6367  000BB8  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6368  000BBA  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6369  000BBC  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6370  000BBE  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6371                           
  6372                           ; BSR set to: 1
  6373                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6374  000BC0  C105  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6375                           
  6376                           ; BSR set to: 1
  6377                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6378  000BC4  0E00               	movlw	0
  6379  000BC6  0100               	movlb	0	; () banked
  6380  000BC8  15CD               	andwf	CANSetFilter@filter& (0+255),w,b
  6381  000BCA  0101               	movlb	1	; () banked
  6382  000BCC  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6383  000BCE  0EFF               	movlw	255
  6384  000BD0  0100               	movlb	0	; () banked
  6385  000BD2  15CE               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6386  000BD4  0101               	movlb	1	; () banked
  6387  000BD6  6F06               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6388  000BD8  0E00               	movlw	0
  6389  000BDA  0100               	movlb	0	; () banked
  6390  000BDC  15CF               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6391  000BDE  0101               	movlb	1	; () banked
  6392  000BE0  6F07               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6393  000BE2  0E00               	movlw	0
  6394  000BE4  0100               	movlb	0	; () banked
  6395  000BE6  15D0               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6396  000BE8  0101               	movlb	1	; () banked
  6397  000BEA  6F08               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6398                           
  6399                           ; BSR set to: 1
  6400                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6401  000BEC  C105  F100         	movff	CANSetFilter@tamp,??_CANSetFilter
  6402  000BF0  C106  F101         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6403  000BF4  C107  F102         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6404  000BF8  C108  F103         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6405  000BFC  C101  F100         	movff	??_CANSetFilter+1,??_CANSetFilter
  6406  000C00  C102  F101         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6407  000C04  C103  F102         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6408  000C08  0101               	movlb	1	; () banked
  6409  000C0A  6B03               	clrf	(??_CANSetFilter+3)& (0+255),b
  6410  000C0C  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6411  000C10  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6412  000C14  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6413  000C18  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6417  000C1C  C105  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6418                           
  6419                           ; BSR set to: 1
  6420                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6421  000C20  0100               	movlb	0	; () banked
  6422  000C22  A1CF               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6423  000C24  D003               	goto	l528
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6427  000C26  010F               	movlb	15	; () banked
  6428  000C28  8115               	bsf	21,0,b	;volatile
  6429  000C2A  D002               	goto	l529
  6430  000C2C                     l528:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;inc\CANlib.h: 1050: else
  6434                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6435  000C2C  010F               	movlb	15	; () banked
  6436  000C2E  9115               	bcf	21,0,b	;volatile
  6437  000C30                     l529:
  6438                           
  6439                           ; BSR set to: 15
  6440                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6441  000C30  0100               	movlb	0	; () banked
  6442  000C32  A3CF               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6443  000C34  D003               	goto	l530
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6447  000C36  010F               	movlb	15	; () banked
  6448  000C38  8315               	bsf	21,1,b	;volatile
  6449  000C3A  D002               	goto	l531
  6450  000C3C                     l530:
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;inc\CANlib.h: 1055: else
  6454                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6455  000C3C  010F               	movlb	15	; () banked
  6456  000C3E  9315               	bcf	21,1,b	;volatile
  6457  000C40                     l531:
  6458                           
  6459                           ; BSR set to: 15
  6460                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6461  000C40  0100               	movlb	0	; () banked
  6462  000C42  A5CF               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6463  000C44  D003               	goto	l532
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6467  000C46  010F               	movlb	15	; () banked
  6468  000C48  8B15               	bsf	21,5,b	;volatile
  6469  000C4A  D002               	goto	l533
  6470  000C4C                     l532:
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;inc\CANlib.h: 1060: else
  6474                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6475  000C4C  010F               	movlb	15	; () banked
  6476  000C4E  9B15               	bcf	21,5,b	;volatile
  6477  000C50                     l533:
  6478                           
  6479                           ; BSR set to: 15
  6480                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6481  000C50  0100               	movlb	0	; () banked
  6482  000C52  A7CF               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6483  000C54  D003               	goto	l534
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6487  000C56  010F               	movlb	15	; () banked
  6488  000C58  8D15               	bsf	21,6,b	;volatile
  6489  000C5A  D002               	goto	l535
  6490  000C5C                     l534:
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;inc\CANlib.h: 1065: else
  6494                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6495  000C5C  010F               	movlb	15	; () banked
  6496  000C5E  9D15               	bcf	21,6,b	;volatile
  6497  000C60                     l535:
  6498                           
  6499                           ; BSR set to: 15
  6500                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6501  000C60  0100               	movlb	0	; () banked
  6502  000C62  A9CF               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6503  000C64  D003               	goto	l536
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6507  000C66  010F               	movlb	15	; () banked
  6508  000C68  8F15               	bsf	21,7,b	;volatile
  6509  000C6A  D003               	goto	l4721
  6510  000C6C                     l536:
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;inc\CANlib.h: 1070: else
  6514                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6515  000C6C  010F               	movlb	15	; () banked
  6516  000C6E  9F15               	bcf	21,7,b	;volatile
  6517  000C70  D000               	goto	l4721
  6518  000C72                     l4721:
  6519                           
  6520                           ; BSR set to: 15
  6521                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6522  000C72  C0CD  F100         	movff	CANSetFilter@filter,??_CANSetFilter
  6523  000C76  C0CE  F101         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6524  000C7A  C0CF  F102         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6525  000C7E  C0D0  F103         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6526  000C82  0E16               	movlw	22
  6527  000C84  D006               	goto	u6010
  6528  000C86                     u6015:
  6529  000C86  0101               	movlb	1	; () banked
  6530  000C88  90D8               	bcf	status,0,c
  6531  000C8A  3303               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6532  000C8C  3302               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6533  000C8E  3301               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6534  000C90  3300               	rrcf	??_CANSetFilter& (0+255),f,b
  6535  000C92                     u6010:
  6536  000C92  2EE8               	decfsz	wreg,f,c
  6537  000C94  D7F8               	goto	u6015
  6538  000C96  C100  F105         	movff	??_CANSetFilter,CANSetFilter@tamp
  6539  000C9A  C101  F106         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6540  000C9E  C102  F107         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6541  000CA2  C103  F108         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6545  000CA6  0101               	movlb	1	; () banked
  6546  000CA8  5105               	movf	CANSetFilter@tamp& (0+255),w,b
  6547  000CAA  0101               	movlb	1	; () banked
  6548  000CAC  6F05               	movwf	CANSetFilter@tamp& (0+255),b
  6549  000CAE  6B06               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6550  000CB0  6B07               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6551  000CB2  6B08               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6555  000CB4  C105  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6556  000CB8  D000               	goto	l538
  6557  000CBA                     l538:
  6558  000CBA  0012               	return		;funcret
  6559  000CBC                     __end_of_CANSetFilter:
  6560                           	opt stack 0
  6561                           tblptru	equ	0xFF8
  6562                           tblptrh	equ	0xFF7
  6563                           tblptrl	equ	0xFF6
  6564                           tablat	equ	0xFF5
  6565                           prodh	equ	0xFF4
  6566                           prodl	equ	0xFF3
  6567                           intcon	equ	0xFF2
  6568                           intcon2	equ	0xFF1
  6569                           intcon3	equ	0xFF0
  6570                           postinc0	equ	0xFEE
  6571                           wreg	equ	0xFE8
  6572                           postdec1	equ	0xFE5
  6573                           fsr1l	equ	0xFE1
  6574                           indf2	equ	0xFDF
  6575                           fsr2h	equ	0xFDA
  6576                           fsr2l	equ	0xFD9
  6577                           status	equ	0xFD8
  6578                           
  6579 ;; *************** function _CANOperationMode *****************
  6580 ;; Defined at:
  6581 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  mode            1    wreg     enum E16879
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  mode            1   36[BANK0 ] enum E16879
  6586 ;; Return value:  Size  Location     Type
  6587 ;;		None               void
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6595 ;;      Params:         0       0       0       0
  6596 ;;      Locals:         0       1       0       0
  6597 ;;      Temps:          0       0       0       0
  6598 ;;      Totals:         0       1       0       0
  6599 ;;Total ram usage:        1 bytes
  6600 ;; Hardware stack levels used:    1
  6601 ;; Hardware stack levels required when called:    4
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_CANInitialize
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text9
  6610  002BAC                     __ptext9:
  6611                           	opt stack 0
  6612  002BAC                     _CANOperationMode:
  6613                           	opt stack 24
  6614                           
  6615                           ;incstack = 0
  6616                           ;CANOperationMode@mode stored from wreg
  6617  002BAC  0100               	movlb	0	; () banked
  6618  002BAE  6FCD               	movwf	CANOperationMode@mode& (0+255),b
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;inc\CANlib.h: 208: CANCON = mode;
  6622  002BB0  C0CD  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6623                           
  6624                           ; BSR set to: 0
  6625                           
  6626                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6627  002BB4  D000               	goto	l4317
  6628  002BB6                     l4317:
  6629                           
  6630                           ; BSR set to: 0
  6631  002BB6  506E               	movf	3950,w,c	;volatile
  6632  002BB8  0BE0               	andlw	224
  6633  002BBA  0100               	movlb	0	; () banked
  6634  002BBC  19CD               	xorwf	CANOperationMode@mode& (0+255),w,b
  6635  002BBE  A4D8               	btfss	status,2,c
  6636  002BC0  D7FA               	goto	l4317
  6637                           
  6638                           ; BSR set to: 0
  6639                           
  6640                           ; BSR set to: 0
  6641  002BC2  0012               	return		;funcret
  6642  002BC4                     __end_of_CANOperationMode:
  6643                           	opt stack 0
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           intcon2	equ	0xFF1
  6652                           intcon3	equ	0xFF0
  6653                           postinc0	equ	0xFEE
  6654                           wreg	equ	0xFE8
  6655                           postdec1	equ	0xFE5
  6656                           fsr1l	equ	0xFE1
  6657                           indf2	equ	0xFDF
  6658                           fsr2h	equ	0xFDA
  6659                           fsr2l	equ	0xFD9
  6660                           status	equ	0xFD8
  6661                           
  6662 ;; *************** function ___lwdiv *****************
  6663 ;; Defined at:
  6664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;  dividend        2    0[BANK1 ] unsigned int 
  6667 ;;  divisor         2    2[BANK1 ] unsigned int 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  quotient        2    5[BANK1 ] unsigned int 
  6670 ;;  counter         1    4[BANK1 ] unsigned char 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  2    0[BANK1 ] unsigned int 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6680 ;;      Params:         0       0       4       0
  6681 ;;      Locals:         0       0       3       0
  6682 ;;      Temps:          0       0       0       0
  6683 ;;      Totals:         0       0       7       0
  6684 ;;Total ram usage:        7 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    4
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_main
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text10
  6695  002974                     __ptext10:
  6696                           	opt stack 0
  6697  002974                     ___lwdiv:
  6698                           	opt stack 26
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;incstack = 0
  6702  002974  0E00               	movlw	0
  6703  002976  0101               	movlb	1	; () banked
  6704  002978  6F06               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6705  00297A  0E00               	movlw	0
  6706  00297C  6F05               	movwf	___lwdiv@quotient& (0+255),b
  6707                           
  6708                           ; BSR set to: 1
  6709  00297E  0101               	movlb	1	; () banked
  6710  002980  5102               	movf	___lwdiv@divisor& (0+255),w,b
  6711  002982  0101               	movlb	1	; () banked
  6712  002984  1103               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6713  002986  B4D8               	btfsc	status,2,c
  6714  002988  D031               	goto	l1298
  6715                           
  6716                           ; BSR set to: 1
  6717  00298A  0E01               	movlw	1
  6718  00298C  0101               	movlb	1	; () banked
  6719  00298E  6F04               	movwf	___lwdiv@counter& (0+255),b
  6720  002990  D007               	goto	l5243
  6721  002992                     l5241:
  6722                           
  6723                           ; BSR set to: 1
  6724  002992  0101               	movlb	1	; () banked
  6725  002994  90D8               	bcf	status,0,c
  6726  002996  3702               	rlcf	___lwdiv@divisor& (0+255),f,b
  6727  002998  3703               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6728  00299A  0101               	movlb	1	; () banked
  6729  00299C  2B04               	incf	___lwdiv@counter& (0+255),f,b
  6730  00299E  D000               	goto	l5243
  6731  0029A0                     l5243:
  6732                           
  6733                           ; BSR set to: 1
  6734  0029A0  0101               	movlb	1	; () banked
  6735  0029A2  BF03               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  6736  0029A4  D002               	goto	l5245
  6737  0029A6  D7F5               	goto	l5241
  6738                           
  6739                           ; BSR set to: 1
  6740  0029A8  D000               	goto	l5245
  6741  0029AA                     l5245:
  6742                           
  6743                           ; BSR set to: 1
  6744  0029AA  0101               	movlb	1	; () banked
  6745  0029AC  90D8               	bcf	status,0,c
  6746  0029AE  3705               	rlcf	___lwdiv@quotient& (0+255),f,b
  6747  0029B0  3706               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6748                           
  6749                           ; BSR set to: 1
  6750  0029B2  0101               	movlb	1	; () banked
  6751  0029B4  5102               	movf	___lwdiv@divisor& (0+255),w,b
  6752  0029B6  0101               	movlb	1	; () banked
  6753  0029B8  5D00               	subwf	___lwdiv@dividend& (0+255),w,b
  6754  0029BA  0101               	movlb	1	; () banked
  6755  0029BC  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6756  0029BE  0101               	movlb	1	; () banked
  6757  0029C0  5901               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6758  0029C2  A0D8               	btfss	status,0,c
  6759  0029C4  D00B               	goto	l5253
  6760                           
  6761                           ; BSR set to: 1
  6762  0029C6  0101               	movlb	1	; () banked
  6763  0029C8  5102               	movf	___lwdiv@divisor& (0+255),w,b
  6764  0029CA  0101               	movlb	1	; () banked
  6765  0029CC  5F00               	subwf	___lwdiv@dividend& (0+255),f,b
  6766  0029CE  0101               	movlb	1	; () banked
  6767  0029D0  5103               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6768  0029D2  0101               	movlb	1	; () banked
  6769  0029D4  5B01               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6770                           
  6771                           ; BSR set to: 1
  6772  0029D6  0101               	movlb	1	; () banked
  6773  0029D8  8105               	bsf	___lwdiv@quotient& (0+255),0,b
  6774  0029DA  D000               	goto	l5253
  6775  0029DC                     l5253:
  6776                           
  6777                           ; BSR set to: 1
  6778  0029DC  0101               	movlb	1	; () banked
  6779  0029DE  90D8               	bcf	status,0,c
  6780  0029E0  3303               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6781  0029E2  3302               	rrcf	___lwdiv@divisor& (0+255),f,b
  6782                           
  6783                           ; BSR set to: 1
  6784  0029E4  0101               	movlb	1	; () banked
  6785  0029E6  2F04               	decfsz	___lwdiv@counter& (0+255),f,b
  6786  0029E8  D7E0               	goto	l5245
  6787  0029EA  D000               	goto	l1298
  6788  0029EC                     l1298:
  6789                           
  6790                           ; BSR set to: 1
  6791  0029EC  C105  F100         	movff	___lwdiv@quotient,?___lwdiv
  6792  0029F0  C106  F101         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6793                           
  6794                           ; BSR set to: 1
  6795  0029F4  0012               	return		;funcret
  6796  0029F6                     __end_of___lwdiv:
  6797                           	opt stack 0
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           prodh	equ	0xFF4
  6803                           prodl	equ	0xFF3
  6804                           intcon	equ	0xFF2
  6805                           intcon2	equ	0xFF1
  6806                           intcon3	equ	0xFF0
  6807                           postinc0	equ	0xFEE
  6808                           wreg	equ	0xFE8
  6809                           postdec1	equ	0xFE5
  6810                           fsr1l	equ	0xFE1
  6811                           indf2	equ	0xFDF
  6812                           fsr2h	equ	0xFDA
  6813                           fsr2l	equ	0xFD9
  6814                           status	equ	0xFD8
  6815                           
  6816 ;; *************** function ___lldiv *****************
  6817 ;; Defined at:
  6818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  dividend        4    0[BANK1 ] unsigned long 
  6821 ;;  divisor         4    4[BANK1 ] unsigned long 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  quotient        4   36[BANK0 ] unsigned long 
  6824 ;;  counter         1   40[BANK0 ] unsigned char 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  4    0[BANK1 ] unsigned long 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6834 ;;      Params:         0       0       8       0
  6835 ;;      Locals:         0       5       0       0
  6836 ;;      Temps:          0       0       0       0
  6837 ;;      Totals:         0       5       8       0
  6838 ;;Total ram usage:       13 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    4
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_main
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text11
  6849  002816                     __ptext11:
  6850                           	opt stack 0
  6851  002816                     ___lldiv:
  6852                           	opt stack 26
  6853                           
  6854                           ; BSR set to: 1
  6855                           ;incstack = 0
  6856  002816  0E00               	movlw	0
  6857  002818  0100               	movlb	0	; () banked
  6858  00281A  6FCD               	movwf	___lldiv@quotient& (0+255),b
  6859  00281C  0E00               	movlw	0
  6860  00281E  6FCE               	movwf	(___lldiv@quotient+1)& (0+255),b
  6861  002820  0E00               	movlw	0
  6862  002822  6FCF               	movwf	(___lldiv@quotient+2)& (0+255),b
  6863  002824  0E00               	movlw	0
  6864  002826  6FD0               	movwf	(___lldiv@quotient+3)& (0+255),b
  6865                           
  6866                           ; BSR set to: 0
  6867  002828  0101               	movlb	1	; () banked
  6868  00282A  5104               	movf	___lldiv@divisor& (0+255),w,b
  6869  00282C  0101               	movlb	1	; () banked
  6870  00282E  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6871  002830  0101               	movlb	1	; () banked
  6872  002832  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6873  002834  0101               	movlb	1	; () banked
  6874  002836  1107               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6875  002838  B4D8               	btfsc	status,2,c
  6876  00283A  D047               	goto	l1235
  6877                           
  6878                           ; BSR set to: 1
  6879  00283C  0E01               	movlw	1
  6880  00283E  0100               	movlb	0	; () banked
  6881  002840  6FD1               	movwf	___lldiv@counter& (0+255),b
  6882  002842  D009               	goto	l5221
  6883  002844                     l5219:
  6884  002844  0101               	movlb	1	; () banked
  6885  002846  90D8               	bcf	status,0,c
  6886  002848  3704               	rlcf	___lldiv@divisor& (0+255),f,b
  6887  00284A  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6888  00284C  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6889  00284E  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6890  002850  0100               	movlb	0	; () banked
  6891  002852  2BD1               	incf	___lldiv@counter& (0+255),f,b
  6892  002854  D000               	goto	l5221
  6893  002856                     l5221:
  6894                           
  6895                           ; BSR set to: 0
  6896  002856  0101               	movlb	1	; () banked
  6897  002858  BF07               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  6898  00285A  D002               	goto	l5223
  6899  00285C  D7F3               	goto	l5219
  6900                           
  6901                           ; BSR set to: 1
  6902  00285E  D000               	goto	l5223
  6903  002860                     l5223:
  6904  002860  0100               	movlb	0	; () banked
  6905  002862  90D8               	bcf	status,0,c
  6906  002864  37CD               	rlcf	___lldiv@quotient& (0+255),f,b
  6907  002866  37CE               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6908  002868  37CF               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6909  00286A  37D0               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6910                           
  6911                           ; BSR set to: 0
  6912  00286C  0101               	movlb	1	; () banked
  6913  00286E  5104               	movf	___lldiv@divisor& (0+255),w,b
  6914  002870  0101               	movlb	1	; () banked
  6915  002872  5D00               	subwf	___lldiv@dividend& (0+255),w,b
  6916  002874  0101               	movlb	1	; () banked
  6917  002876  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6918  002878  0101               	movlb	1	; () banked
  6919  00287A  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6920  00287C  0101               	movlb	1	; () banked
  6921  00287E  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6922  002880  0101               	movlb	1	; () banked
  6923  002882  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6924  002884  0101               	movlb	1	; () banked
  6925  002886  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6926  002888  0101               	movlb	1	; () banked
  6927  00288A  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6928  00288C  A0D8               	btfss	status,0,c
  6929  00288E  D013               	goto	l5231
  6930                           
  6931                           ; BSR set to: 1
  6932  002890  0101               	movlb	1	; () banked
  6933  002892  5104               	movf	___lldiv@divisor& (0+255),w,b
  6934  002894  0101               	movlb	1	; () banked
  6935  002896  5F00               	subwf	___lldiv@dividend& (0+255),f,b
  6936  002898  0101               	movlb	1	; () banked
  6937  00289A  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6938  00289C  0101               	movlb	1	; () banked
  6939  00289E  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6940  0028A0  0101               	movlb	1	; () banked
  6941  0028A2  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6942  0028A4  0101               	movlb	1	; () banked
  6943  0028A6  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6944  0028A8  0101               	movlb	1	; () banked
  6945  0028AA  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6946  0028AC  0101               	movlb	1	; () banked
  6947  0028AE  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6948                           
  6949                           ; BSR set to: 1
  6950  0028B0  0100               	movlb	0	; () banked
  6951  0028B2  81CD               	bsf	___lldiv@quotient& (0+255),0,b
  6952  0028B4  D000               	goto	l5231
  6953  0028B6                     l5231:
  6954  0028B6  0101               	movlb	1	; () banked
  6955  0028B8  90D8               	bcf	status,0,c
  6956  0028BA  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6957  0028BC  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6958  0028BE  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6959  0028C0  3304               	rrcf	___lldiv@divisor& (0+255),f,b
  6960                           
  6961                           ; BSR set to: 1
  6962  0028C2  0100               	movlb	0	; () banked
  6963  0028C4  2FD1               	decfsz	___lldiv@counter& (0+255),f,b
  6964  0028C6  D7CC               	goto	l5223
  6965  0028C8  D000               	goto	l1235
  6966  0028CA                     l1235:
  6967  0028CA  C0CD  F100         	movff	___lldiv@quotient,?___lldiv
  6968  0028CE  C0CE  F101         	movff	___lldiv@quotient+1,?___lldiv+1
  6969  0028D2  C0CF  F102         	movff	___lldiv@quotient+2,?___lldiv+2
  6970  0028D6  C0D0  F103         	movff	___lldiv@quotient+3,?___lldiv+3
  6971  0028DA  0012               	return		;funcret
  6972  0028DC                     __end_of___lldiv:
  6973                           	opt stack 0
  6974                           tblptru	equ	0xFF8
  6975                           tblptrh	equ	0xFF7
  6976                           tblptrl	equ	0xFF6
  6977                           tablat	equ	0xFF5
  6978                           prodh	equ	0xFF4
  6979                           prodl	equ	0xFF3
  6980                           intcon	equ	0xFF2
  6981                           intcon2	equ	0xFF1
  6982                           intcon3	equ	0xFF0
  6983                           postinc0	equ	0xFEE
  6984                           wreg	equ	0xFE8
  6985                           postdec1	equ	0xFE5
  6986                           fsr1l	equ	0xFE1
  6987                           indf2	equ	0xFDF
  6988                           fsr2h	equ	0xFDA
  6989                           fsr2l	equ	0xFD9
  6990                           status	equ	0xFD8
  6991                           
  6992 ;; *************** function ___awdiv *****************
  6993 ;; Defined at:
  6994 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  dividend        2   36[BANK0 ] int 
  6997 ;;  divisor         2   38[BANK0 ] int 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  quotient        2    2[BANK1 ] int 
  7000 ;;  sign            1    1[BANK1 ] unsigned char 
  7001 ;;  counter         1    0[BANK1 ] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  2   36[BANK0 ] int 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7011 ;;      Params:         0       4       0       0
  7012 ;;      Locals:         0       0       4       0
  7013 ;;      Temps:          0       0       0       0
  7014 ;;      Totals:         0       4       4       0
  7015 ;;Total ram usage:        8 bytes
  7016 ;; Hardware stack levels used:    1
  7017 ;; Hardware stack levels required when called:    4
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_main
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text12
  7026  002676                     __ptext12:
  7027                           	opt stack 0
  7028  002676                     ___awdiv:
  7029                           	opt stack 26
  7030                           
  7031                           ;incstack = 0
  7032  002676  0E00               	movlw	0
  7033  002678  0101               	movlb	1	; () banked
  7034  00267A  6F01               	movwf	___awdiv@sign& (0+255),b
  7035                           
  7036                           ; BSR set to: 1
  7037  00267C  0100               	movlb	0	; () banked
  7038  00267E  AFD0               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7039  002680  D009               	goto	l5177
  7040                           
  7041                           ; BSR set to: 0
  7042  002682  0100               	movlb	0	; () banked
  7043  002684  6DCF               	negf	___awdiv@divisor& (0+255),b
  7044  002686  1FD0               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7045  002688  B0D8               	btfsc	status,0,c
  7046  00268A  2BD0               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7047                           
  7048                           ; BSR set to: 0
  7049  00268C  0E01               	movlw	1
  7050  00268E  0101               	movlb	1	; () banked
  7051  002690  6F01               	movwf	___awdiv@sign& (0+255),b
  7052  002692  D000               	goto	l5177
  7053  002694                     l5177:
  7054  002694  0100               	movlb	0	; () banked
  7055  002696  AFCE               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7056  002698  D009               	goto	l5183
  7057                           
  7058                           ; BSR set to: 0
  7059  00269A  0100               	movlb	0	; () banked
  7060  00269C  6DCD               	negf	___awdiv@dividend& (0+255),b
  7061  00269E  1FCE               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7062  0026A0  B0D8               	btfsc	status,0,c
  7063  0026A2  2BCE               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7064                           
  7065                           ; BSR set to: 0
  7066  0026A4  0E01               	movlw	1
  7067  0026A6  0101               	movlb	1	; () banked
  7068  0026A8  1B01               	xorwf	___awdiv@sign& (0+255),f,b
  7069  0026AA  D000               	goto	l5183
  7070  0026AC                     l5183:
  7071  0026AC  0E00               	movlw	0
  7072  0026AE  0101               	movlb	1	; () banked
  7073  0026B0  6F03               	movwf	(___awdiv@quotient+1)& (0+255),b
  7074  0026B2  0E00               	movlw	0
  7075  0026B4  6F02               	movwf	___awdiv@quotient& (0+255),b
  7076                           
  7077                           ; BSR set to: 1
  7078  0026B6  0100               	movlb	0	; () banked
  7079  0026B8  51CF               	movf	___awdiv@divisor& (0+255),w,b
  7080  0026BA  0100               	movlb	0	; () banked
  7081  0026BC  11D0               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7082  0026BE  B4D8               	btfsc	status,2,c
  7083  0026C0  D031               	goto	l5205
  7084                           
  7085                           ; BSR set to: 0
  7086  0026C2  0E01               	movlw	1
  7087  0026C4  0101               	movlb	1	; () banked
  7088  0026C6  6F00               	movwf	___awdiv@counter& (0+255),b
  7089  0026C8  D007               	goto	l5191
  7090  0026CA                     l5189:
  7091  0026CA  0100               	movlb	0	; () banked
  7092  0026CC  90D8               	bcf	status,0,c
  7093  0026CE  37CF               	rlcf	___awdiv@divisor& (0+255),f,b
  7094  0026D0  37D0               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7095  0026D2  0101               	movlb	1	; () banked
  7096  0026D4  2B00               	incf	___awdiv@counter& (0+255),f,b
  7097  0026D6  D000               	goto	l5191
  7098  0026D8                     l5191:
  7099                           
  7100                           ; BSR set to: 1
  7101  0026D8  0100               	movlb	0	; () banked
  7102  0026DA  BFD0               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  7103  0026DC  D002               	goto	l5193
  7104  0026DE  D7F5               	goto	l5189
  7105                           
  7106                           ; BSR set to: 0
  7107  0026E0  D000               	goto	l5193
  7108  0026E2                     l5193:
  7109  0026E2  0101               	movlb	1	; () banked
  7110  0026E4  90D8               	bcf	status,0,c
  7111  0026E6  3702               	rlcf	___awdiv@quotient& (0+255),f,b
  7112  0026E8  3703               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7113                           
  7114                           ; BSR set to: 1
  7115  0026EA  0100               	movlb	0	; () banked
  7116  0026EC  51CF               	movf	___awdiv@divisor& (0+255),w,b
  7117  0026EE  0100               	movlb	0	; () banked
  7118  0026F0  5DCD               	subwf	___awdiv@dividend& (0+255),w,b
  7119  0026F2  0100               	movlb	0	; () banked
  7120  0026F4  51D0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7121  0026F6  0100               	movlb	0	; () banked
  7122  0026F8  59CE               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7123  0026FA  A0D8               	btfss	status,0,c
  7124  0026FC  D00B               	goto	l5201
  7125                           
  7126                           ; BSR set to: 0
  7127  0026FE  0100               	movlb	0	; () banked
  7128  002700  51CF               	movf	___awdiv@divisor& (0+255),w,b
  7129  002702  0100               	movlb	0	; () banked
  7130  002704  5FCD               	subwf	___awdiv@dividend& (0+255),f,b
  7131  002706  0100               	movlb	0	; () banked
  7132  002708  51D0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7133  00270A  0100               	movlb	0	; () banked
  7134  00270C  5BCE               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7135                           
  7136                           ; BSR set to: 0
  7137  00270E  0101               	movlb	1	; () banked
  7138  002710  8102               	bsf	___awdiv@quotient& (0+255),0,b
  7139  002712  D000               	goto	l5201
  7140  002714                     l5201:
  7141  002714  0100               	movlb	0	; () banked
  7142  002716  90D8               	bcf	status,0,c
  7143  002718  33D0               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7144  00271A  33CF               	rrcf	___awdiv@divisor& (0+255),f,b
  7145                           
  7146                           ; BSR set to: 0
  7147  00271C  0101               	movlb	1	; () banked
  7148  00271E  2F00               	decfsz	___awdiv@counter& (0+255),f,b
  7149  002720  D7E0               	goto	l5193
  7150                           
  7151                           ; BSR set to: 1
  7152  002722  D000               	goto	l5205
  7153  002724                     l5205:
  7154  002724  0101               	movlb	1	; () banked
  7155  002726  5101               	movf	___awdiv@sign& (0+255),w,b
  7156  002728  0101               	movlb	1	; () banked
  7157  00272A  B4D8               	btfsc	status,2,c
  7158  00272C  D006               	goto	l5209
  7159                           
  7160                           ; BSR set to: 1
  7161  00272E  0101               	movlb	1	; () banked
  7162  002730  6D02               	negf	___awdiv@quotient& (0+255),b
  7163  002732  1F03               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7164  002734  B0D8               	btfsc	status,0,c
  7165  002736  2B03               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7166  002738  D000               	goto	l5209
  7167  00273A                     l5209:
  7168                           
  7169                           ; BSR set to: 1
  7170  00273A  C102  F0CD         	movff	___awdiv@quotient,?___awdiv
  7171  00273E  C103  F0CE         	movff	___awdiv@quotient+1,?___awdiv+1
  7172  002742  D000               	goto	l973
  7173  002744                     l973:
  7174                           
  7175                           ; BSR set to: 1
  7176  002744  0012               	return		;funcret
  7177  002746                     __end_of___awdiv:
  7178                           	opt stack 0
  7179                           tblptru	equ	0xFF8
  7180                           tblptrh	equ	0xFF7
  7181                           tblptrl	equ	0xFF6
  7182                           tablat	equ	0xFF5
  7183                           prodh	equ	0xFF4
  7184                           prodl	equ	0xFF3
  7185                           intcon	equ	0xFF2
  7186                           intcon2	equ	0xFF1
  7187                           intcon3	equ	0xFF0
  7188                           postinc0	equ	0xFEE
  7189                           wreg	equ	0xFE8
  7190                           postdec1	equ	0xFE5
  7191                           fsr1l	equ	0xFE1
  7192                           indf2	equ	0xFDF
  7193                           fsr2h	equ	0xFDA
  7194                           fsr2l	equ	0xFD9
  7195                           status	equ	0xFD8
  7196                           
  7197 ;; *************** function _CANisTXwarningON *****************
  7198 ;; Defined at:
  7199 ;;		line 1119 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;		None
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      unsigned char 
  7206 ;; Registers used:
  7207 ;;		wreg
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7213 ;;      Params:         0       0       0       0
  7214 ;;      Locals:         0       0       0       0
  7215 ;;      Temps:          0       0       0       0
  7216 ;;      Totals:         0       0       0       0
  7217 ;;Total ram usage:        0 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    4
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_main
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           	psect	text13
  7228  002BEE                     __ptext13:
  7229                           	opt stack 0
  7230  002BEE                     _CANisTXwarningON:
  7231                           	opt stack 26
  7232                           
  7233                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7234                           
  7235                           ; BSR set to: 1
  7236                           ;incstack = 0
  7237  002BEE  A474               	btfss	3956,2,c	;volatile
  7238  002BF0  D002               	goto	u6480
  7239  002BF2  0E01               	movlw	1
  7240  002BF4  D002               	goto	l553
  7241  002BF6                     u6480:
  7242  002BF6  0E00               	movlw	0
  7243  002BF8  D000               	goto	l553
  7244  002BFA                     l553:
  7245  002BFA  0012               	return		;funcret
  7246  002BFC                     __end_of_CANisTXwarningON:
  7247                           	opt stack 0
  7248                           tblptru	equ	0xFF8
  7249                           tblptrh	equ	0xFF7
  7250                           tblptrl	equ	0xFF6
  7251                           tablat	equ	0xFF5
  7252                           prodh	equ	0xFF4
  7253                           prodl	equ	0xFF3
  7254                           intcon	equ	0xFF2
  7255                           intcon2	equ	0xFF1
  7256                           intcon3	equ	0xFF0
  7257                           postinc0	equ	0xFEE
  7258                           wreg	equ	0xFE8
  7259                           postdec1	equ	0xFE5
  7260                           fsr1l	equ	0xFE1
  7261                           indf2	equ	0xFDF
  7262                           fsr2h	equ	0xFDA
  7263                           fsr2l	equ	0xFD9
  7264                           status	equ	0xFD8
  7265                           
  7266 ;; *************** function _CANisRXwarningON *****************
  7267 ;; Defined at:
  7268 ;;		line 1127 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;		None
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;		None
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      unsigned char 
  7275 ;; Registers used:
  7276 ;;		wreg
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7282 ;;      Params:         0       0       0       0
  7283 ;;      Locals:         0       0       0       0
  7284 ;;      Temps:          0       0       0       0
  7285 ;;      Totals:         0       0       0       0
  7286 ;;Total ram usage:        0 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    4
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_main
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text14
  7297  002BFC                     __ptext14:
  7298                           	opt stack 0
  7299  002BFC                     _CANisRXwarningON:
  7300                           	opt stack 26
  7301                           
  7302                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7303                           
  7304                           ;incstack = 0
  7305  002BFC  A274               	btfss	3956,1,c	;volatile
  7306  002BFE  D002               	goto	u6490
  7307  002C00  0E01               	movlw	1
  7308  002C02  D002               	goto	l556
  7309  002C04                     u6490:
  7310  002C04  0E00               	movlw	0
  7311  002C06  D000               	goto	l556
  7312  002C08                     l556:
  7313  002C08  0012               	return		;funcret
  7314  002C0A                     __end_of_CANisRXwarningON:
  7315                           	opt stack 0
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           intcon2	equ	0xFF1
  7324                           intcon3	equ	0xFF0
  7325                           postinc0	equ	0xFEE
  7326                           wreg	equ	0xFE8
  7327                           postdec1	equ	0xFE5
  7328                           fsr1l	equ	0xFE1
  7329                           indf2	equ	0xFDF
  7330                           fsr2h	equ	0xFDA
  7331                           fsr2l	equ	0xFD9
  7332                           status	equ	0xFD8
  7333                           
  7334 ;; *************** function _ISR_Bassa *****************
  7335 ;; Defined at:
  7336 ;;		line 236 in file "ABS_Code.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;		None
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;		None               void
  7343 ;; Registers used:
  7344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7350 ;;      Params:         0       0       0       0
  7351 ;;      Locals:         0       0       0       0
  7352 ;;      Temps:         18       0       0       0
  7353 ;;      Totals:        18       0       0       0
  7354 ;;Total ram usage:       18 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    3
  7357 ;; This function calls:
  7358 ;;		_CANisRxReady
  7359 ;;		_CANreceiveMessage
  7360 ;;		___lbdiv
  7361 ;; This function is called by:
  7362 ;;		Interrupt level 1
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	intcodelo
  7367  000018                     __pintcodelo:
  7368                           	opt stack 0
  7369  000018                     _ISR_Bassa:
  7370                           	opt stack 24
  7371                           
  7372                           ;incstack = 0
  7373  000018  CFD8 F037          	movff	status,??_ISR_Bassa+1
  7374  00001C  CFE8 F038          	movff	wreg,??_ISR_Bassa+2
  7375  000020  CFE0 F039          	movff	bsr,??_ISR_Bassa+3
  7376  000024  CFFA F03A          	movff	pclath,??_ISR_Bassa+4
  7377  000028  CFFB F03B          	movff	pclatu,??_ISR_Bassa+5
  7378  00002C  CFE9 F03C          	movff	fsr0l,??_ISR_Bassa+6
  7379  000030  CFEA F03D          	movff	fsr0h,??_ISR_Bassa+7
  7380  000034  CFE1 F03E          	movff	fsr1l,??_ISR_Bassa+8
  7381  000038  CFE2 F03F          	movff	fsr1h,??_ISR_Bassa+9
  7382  00003C  CFD9 F040          	movff	fsr2l,??_ISR_Bassa+10
  7383  000040  CFDA F041          	movff	fsr2h,??_ISR_Bassa+11
  7384  000044  CFF3 F042          	movff	prodl,??_ISR_Bassa+12
  7385  000048  CFF4 F043          	movff	prodh,??_ISR_Bassa+13
  7386  00004C  CFF6 F044          	movff	tblptrl,??_ISR_Bassa+14
  7387  000050  CFF7 F045          	movff	tblptrh,??_ISR_Bassa+15
  7388  000054  CFF8 F046          	movff	tblptru,??_ISR_Bassa+16
  7389  000058  CFF5 F047          	movff	tablat,??_ISR_Bassa+17
  7390                           
  7391                           ;ABS_Code.c: 238: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7392  00005C  B0A4               	btfsc	4004,0,c	;volatile
  7393  00005E  D002               	goto	i1l4139
  7394  000060  A2A4               	btfss	4004,1,c	;volatile
  7395  000062  D060               	goto	i1l4175
  7396  000064                     i1l4139:
  7397                           
  7398                           ;ABS_Code.c: 239: if (CANisRxReady()) {
  7399  000064  ECE2  F015         	call	_CANisRxReady	;wreg free
  7400  000068  0900               	iorlw	0
  7401  00006A  B4D8               	btfsc	status,2,c
  7402  00006C  D058               	goto	i1l4171
  7403                           
  7404                           ;ABS_Code.c: 240: CANreceiveMessage(&msg);
  7405  00006E  0E82               	movlw	low _msg
  7406  000070  6E2A               	movwf	CANreceiveMessage@msg,c
  7407  000072  0E00               	movlw	high _msg
  7408  000074  6E2B               	movwf	CANreceiveMessage@msg+1,c
  7409  000076  EC2E  F00A         	call	_CANreceiveMessage	;wreg free
  7410                           
  7411                           ;ABS_Code.c: 241: if (msg.RTR == 1) {
  7412  00007A  0100               	movlb	0	; () banked
  7413  00007C  0590               	decf	(_msg+14)& (0+255),w,b
  7414  00007E  A4D8               	btfss	status,2,c
  7415  000080  D00A               	goto	i1l4147
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;ABS_Code.c: 242: remote_frame_id = msg.identifier;
  7419  000082  C082  F001         	movff	_msg,_remote_frame_id	;volatile
  7420  000086  C083  F002         	movff	_msg+1,_remote_frame_id+1	;volatile
  7421  00008A  C084  F003         	movff	_msg+2,_remote_frame_id+2	;volatile
  7422  00008E  C085  F004         	movff	_msg+3,_remote_frame_id+3	;volatile
  7423                           
  7424                           ;ABS_Code.c: 243: remote_frame = 1;
  7425  000092  8049               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7426  000094  D000               	goto	i1l4147
  7427  000096                     i1l4147:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;ABS_Code.c: 244: }
  7431                           ;ABS_Code.c: 245: if (msg.identifier == 0b00000000111) {
  7432  000096  0E07               	movlw	7
  7433  000098  0100               	movlb	0	; () banked
  7434  00009A  1982               	xorwf	_msg& (0+255),w,b
  7435  00009C  0100               	movlb	0	; () banked
  7436  00009E  1183               	iorwf	(_msg+1)& (0+255),w,b
  7437  0000A0  0100               	movlb	0	; () banked
  7438  0000A2  1184               	iorwf	(_msg+2)& (0+255),w,b
  7439  0000A4  0100               	movlb	0	; () banked
  7440  0000A6  1185               	iorwf	(_msg+3)& (0+255),w,b
  7441  0000A8  A4D8               	btfss	status,2,c
  7442  0000AA  D008               	goto	i1l4153
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;ABS_Code.c: 246: if (msg.data[0] >= 90) {
  7446  0000AC  0E59               	movlw	89
  7447  0000AE  0100               	movlb	0	; () banked
  7448  0000B0  6586               	cpfsgt	(_msg+4)& (0+255),b
  7449  0000B2  D002               	goto	i1l708
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;ABS_Code.c: 247: steering_dir = 1;
  7453  0000B4  8249               	bsf	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  7454                           
  7455                           ;ABS_Code.c: 248: } else {
  7456  0000B6  D002               	goto	i1l4153
  7457  0000B8                     i1l708:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;ABS_Code.c: 249: steering_dir = 0;
  7461  0000B8  9249               	bcf	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  7462                           
  7463                           ; BSR set to: 0
  7464  0000BA  D000               	goto	i1l4153
  7465  0000BC                     i1l4153:
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;ABS_Code.c: 250: }
  7469                           ;ABS_Code.c: 251: }
  7470                           ;ABS_Code.c: 252: if (msg.identifier == 0b00000000110) {
  7471  0000BC  0E06               	movlw	6
  7472  0000BE  0100               	movlb	0	; () banked
  7473  0000C0  1982               	xorwf	_msg& (0+255),w,b
  7474  0000C2  0100               	movlb	0	; () banked
  7475  0000C4  1183               	iorwf	(_msg+1)& (0+255),w,b
  7476  0000C6  0100               	movlb	0	; () banked
  7477  0000C8  1184               	iorwf	(_msg+2)& (0+255),w,b
  7478  0000CA  0100               	movlb	0	; () banked
  7479  0000CC  1185               	iorwf	(_msg+3)& (0+255),w,b
  7480  0000CE  A4D8               	btfss	status,2,c
  7481  0000D0  D005               	goto	i1l4157
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;ABS_Code.c: 253: brake_signal_CAN = msg.data[0];
  7485  0000D2  C086  F024         	movff	_msg+4,_brake_signal_CAN	;volatile
  7486                           
  7487                           ;ABS_Code.c: 254: Analogic_Mode = msg.data[1];
  7488  0000D6  C087  F023         	movff	_msg+5,_Analogic_Mode	;volatile
  7489  0000DA  D000               	goto	i1l4157
  7490  0000DC                     i1l4157:
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;ABS_Code.c: 255: }
  7494                           ;ABS_Code.c: 256: if (msg.identifier == 0b00000001111) {
  7495  0000DC  0E0F               	movlw	15
  7496  0000DE  0100               	movlb	0	; () banked
  7497  0000E0  1982               	xorwf	_msg& (0+255),w,b
  7498  0000E2  0100               	movlb	0	; () banked
  7499  0000E4  1183               	iorwf	(_msg+1)& (0+255),w,b
  7500  0000E6  0100               	movlb	0	; () banked
  7501  0000E8  1184               	iorwf	(_msg+2)& (0+255),w,b
  7502  0000EA  0100               	movlb	0	; () banked
  7503  0000EC  1185               	iorwf	(_msg+3)& (0+255),w,b
  7504  0000EE  A4D8               	btfss	status,2,c
  7505  0000F0  D016               	goto	i1l4171
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;ABS_Code.c: 257: distance_set_value = (msg.data[0]) / step;
  7509  0000F2  C029  F02A         	movff	_step,___lbdiv@divisor	;volatile
  7510  0000F6  0100               	movlb	0	; () banked
  7511  0000F8  5186               	movf	(_msg+4)& (0+255),w,b
  7512  0000FA  EC68  F015         	call	___lbdiv
  7513  0000FE  6E36               	movwf	??_ISR_Bassa& (0+255),c
  7514  000100  5036               	movf	??_ISR_Bassa,w,c
  7515  000102  6E1D               	movwf	_distance_set_value,c	;volatile
  7516  000104  6A1E               	clrf	_distance_set_value+1,c	;volatile
  7517                           
  7518                           ;ABS_Code.c: 258: distance_set_counter_1 = 0;
  7519  000106  0E00               	movlw	0
  7520  000108  6E1A               	movwf	_distance_set_counter_1+1,c	;volatile
  7521  00010A  0E00               	movlw	0
  7522  00010C  6E19               	movwf	_distance_set_counter_1,c	;volatile
  7523                           
  7524                           ;ABS_Code.c: 259: distance_set_counter_2 = 0;
  7525  00010E  0E00               	movlw	0
  7526  000110  6E1C               	movwf	_distance_set_counter_2+1,c	;volatile
  7527  000112  0E00               	movlw	0
  7528  000114  6E1B               	movwf	_distance_set_counter_2,c	;volatile
  7529                           
  7530                           ;ABS_Code.c: 260: distance_reached_flag = 0;
  7531  000116  9C48               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  7532                           
  7533                           ;ABS_Code.c: 261: distance_set_flag = 1;
  7534  000118  8E48               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  7535                           
  7536                           ;ABS_Code.c: 262: PORTAbits.RA1 = 0;
  7537  00011A  9280               	bcf	3968,1,c	;volatile
  7538  00011C  D000               	goto	i1l4171
  7539  00011E                     i1l4171:
  7540                           
  7541                           ;ABS_Code.c: 263: }
  7542                           ;ABS_Code.c: 264: }
  7543                           ;ABS_Code.c: 265: PIR3bits.RXB0IF = 0;
  7544  00011E  90A4               	bcf	4004,0,c	;volatile
  7545                           
  7546                           ;ABS_Code.c: 266: PIR3bits.RXB1IF = 0;
  7547  000120  92A4               	bcf	4004,1,c	;volatile
  7548  000122  D000               	goto	i1l4175
  7549  000124                     i1l4175:
  7550                           
  7551                           ;ABS_Code.c: 267: }
  7552                           ;ABS_Code.c: 270: if (PIR1bits.TMR1IF == 1) {
  7553  000124  A09E               	btfss	3998,0,c	;volatile
  7554  000126  D007               	goto	i1l4183
  7555                           
  7556                           ;ABS_Code.c: 271: TMR1_overflow = 1;
  7557  000128  8448               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7558                           
  7559                           ;ABS_Code.c: 272: TMR1H = 0x00;
  7560  00012A  0E00               	movlw	0
  7561  00012C  6ECF               	movwf	4047,c	;volatile
  7562                           
  7563                           ;ABS_Code.c: 273: TMR1L = 0x00;
  7564  00012E  0E00               	movlw	0
  7565  000130  6ECE               	movwf	4046,c	;volatile
  7566                           
  7567                           ;ABS_Code.c: 274: PIR1bits.TMR1IF = 0;
  7568  000132  909E               	bcf	3998,0,c	;volatile
  7569  000134  D000               	goto	i1l4183
  7570  000136                     i1l4183:
  7571                           
  7572                           ;ABS_Code.c: 275: }
  7573                           ;ABS_Code.c: 278: if (PIR2bits.TMR3IF == 1) {
  7574  000136  A2A1               	btfss	4001,1,c	;volatile
  7575  000138  D007               	goto	i1l714
  7576                           
  7577                           ;ABS_Code.c: 279: TMR3_overflow = 1;
  7578  00013A  8648               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7579                           
  7580                           ;ABS_Code.c: 280: TMR3H = 0x00;
  7581  00013C  0E00               	movlw	0
  7582  00013E  6EB3               	movwf	4019,c	;volatile
  7583                           
  7584                           ;ABS_Code.c: 281: TMR3L = 0x00;
  7585  000140  0E00               	movlw	0
  7586  000142  6EB2               	movwf	4018,c	;volatile
  7587                           
  7588                           ;ABS_Code.c: 282: PIR2bits.TMR3IF = 0;
  7589  000144  92A1               	bcf	4001,1,c	;volatile
  7590  000146  D000               	goto	i1l714
  7591  000148                     i1l714:
  7592  000148  C047  FFF5         	movff	??_ISR_Bassa+17,tablat
  7593  00014C  C046  FFF8         	movff	??_ISR_Bassa+16,tblptru
  7594  000150  C045  FFF7         	movff	??_ISR_Bassa+15,tblptrh
  7595  000154  C044  FFF6         	movff	??_ISR_Bassa+14,tblptrl
  7596  000158  C043  FFF4         	movff	??_ISR_Bassa+13,prodh
  7597  00015C  C042  FFF3         	movff	??_ISR_Bassa+12,prodl
  7598  000160  C041  FFDA         	movff	??_ISR_Bassa+11,fsr2h
  7599  000164  C040  FFD9         	movff	??_ISR_Bassa+10,fsr2l
  7600  000168  C03F  FFE2         	movff	??_ISR_Bassa+9,fsr1h
  7601  00016C  C03E  FFE1         	movff	??_ISR_Bassa+8,fsr1l
  7602  000170  C03D  FFEA         	movff	??_ISR_Bassa+7,fsr0h
  7603  000174  C03C  FFE9         	movff	??_ISR_Bassa+6,fsr0l
  7604  000178  C03B  FFFB         	movff	??_ISR_Bassa+5,pclatu
  7605  00017C  C03A  FFFA         	movff	??_ISR_Bassa+4,pclath
  7606  000180  C039  FFE0         	movff	??_ISR_Bassa+3,bsr
  7607  000184  C038  FFE8         	movff	??_ISR_Bassa+2,wreg
  7608  000188  C037  FFD8         	movff	??_ISR_Bassa+1,status
  7609  00018C  0010               	retfie	
  7610  00018E                     __end_of_ISR_Bassa:
  7611                           	opt stack 0
  7612                           pclatu	equ	0xFFB
  7613                           pclath	equ	0xFFA
  7614                           tblptru	equ	0xFF8
  7615                           tblptrh	equ	0xFF7
  7616                           tblptrl	equ	0xFF6
  7617                           tablat	equ	0xFF5
  7618                           prodh	equ	0xFF4
  7619                           prodl	equ	0xFF3
  7620                           intcon	equ	0xFF2
  7621                           intcon2	equ	0xFF1
  7622                           intcon3	equ	0xFF0
  7623                           postinc0	equ	0xFEE
  7624                           fsr0h	equ	0xFEA
  7625                           fsr0l	equ	0xFE9
  7626                           wreg	equ	0xFE8
  7627                           postdec1	equ	0xFE5
  7628                           fsr1h	equ	0xFE2
  7629                           fsr1l	equ	0xFE1
  7630                           bsr	equ	0xFE0
  7631                           indf2	equ	0xFDF
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function ___lbdiv *****************
  7637 ;; Defined at:
  7638 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbdiv.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  dividend        1    wreg     unsigned char 
  7641 ;;  divisor         1    0[COMRAM] unsigned char 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  dividend        1    1[COMRAM] unsigned char 
  7644 ;;  quotient        1    3[COMRAM] unsigned char 
  7645 ;;  counter         1    2[COMRAM] unsigned char 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      unsigned char 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7655 ;;      Params:         1       0       0       0
  7656 ;;      Locals:         3       0       0       0
  7657 ;;      Temps:          0       0       0       0
  7658 ;;      Totals:         4       0       0       0
  7659 ;;Total ram usage:        4 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    2
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_ISR_Bassa
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text16
  7670  002AD0                     __ptext16:
  7671                           	opt stack 0
  7672  002AD0                     ___lbdiv:
  7673                           	opt stack 24
  7674                           
  7675                           ;incstack = 0
  7676                           ;___lbdiv@dividend stored from wreg
  7677  002AD0  6E2B               	movwf	___lbdiv@dividend,c
  7678  002AD2  0E00               	movlw	0
  7679  002AD4  6E2D               	movwf	___lbdiv@quotient,c
  7680  002AD6  502A               	movf	___lbdiv@divisor,w,c
  7681  002AD8  B4D8               	btfsc	status,2,c
  7682  002ADA  D01A               	goto	i1l3921
  7683  002ADC  0E01               	movlw	1
  7684  002ADE  6E2C               	movwf	___lbdiv@counter,c
  7685  002AE0  D004               	goto	i1l3909
  7686  002AE2                     i1l3905:
  7687  002AE2  90D8               	bcf	status,0,c
  7688  002AE4  362A               	rlcf	___lbdiv@divisor,f,c
  7689  002AE6  2A2C               	incf	___lbdiv@counter,f,c
  7690  002AE8  D000               	goto	i1l3909
  7691  002AEA                     i1l3909:
  7692  002AEA  BE2A               	btfsc	___lbdiv@divisor,7,c
  7693  002AEC  D002               	goto	i1l3911
  7694  002AEE  D7F9               	goto	i1l3905
  7695  002AF0  D000               	goto	i1l3911
  7696  002AF2                     i1l3911:
  7697  002AF2  90D8               	bcf	status,0,c
  7698  002AF4  362D               	rlcf	___lbdiv@quotient,f,c
  7699  002AF6  502A               	movf	___lbdiv@divisor,w,c
  7700  002AF8  5C2B               	subwf	___lbdiv@dividend,w,c
  7701  002AFA  A0D8               	btfss	status,0,c
  7702  002AFC  D004               	goto	i1l3917
  7703  002AFE  502A               	movf	___lbdiv@divisor,w,c
  7704  002B00  5E2B               	subwf	___lbdiv@dividend,f,c
  7705  002B02  802D               	bsf	___lbdiv@quotient,0,c
  7706  002B04  D000               	goto	i1l3917
  7707  002B06                     i1l3917:
  7708  002B06  90D8               	bcf	status,0,c
  7709  002B08  322A               	rrcf	___lbdiv@divisor,f,c
  7710  002B0A  2E2C               	decfsz	___lbdiv@counter,f,c
  7711  002B0C  D7F2               	goto	i1l3911
  7712  002B0E  D000               	goto	i1l3921
  7713  002B10                     i1l3921:
  7714  002B10  502D               	movf	___lbdiv@quotient,w,c
  7715  002B12  D000               	goto	i1l1216
  7716  002B14                     i1l1216:
  7717  002B14  0012               	return		;funcret
  7718  002B16                     __end_of___lbdiv:
  7719                           	opt stack 0
  7720                           pclatu	equ	0xFFB
  7721                           pclath	equ	0xFFA
  7722                           tblptru	equ	0xFF8
  7723                           tblptrh	equ	0xFF7
  7724                           tblptrl	equ	0xFF6
  7725                           tablat	equ	0xFF5
  7726                           prodh	equ	0xFF4
  7727                           prodl	equ	0xFF3
  7728                           intcon	equ	0xFF2
  7729                           intcon2	equ	0xFF1
  7730                           intcon3	equ	0xFF0
  7731                           postinc0	equ	0xFEE
  7732                           fsr0h	equ	0xFEA
  7733                           fsr0l	equ	0xFE9
  7734                           wreg	equ	0xFE8
  7735                           postdec1	equ	0xFE5
  7736                           fsr1h	equ	0xFE2
  7737                           fsr1l	equ	0xFE1
  7738                           bsr	equ	0xFE0
  7739                           indf2	equ	0xFDF
  7740                           fsr2h	equ	0xFDA
  7741                           fsr2l	equ	0xFD9
  7742                           status	equ	0xFD8
  7743                           
  7744 ;; *************** function _CANreceiveMessage *****************
  7745 ;; Defined at:
  7746 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  msg             2    0[COMRAM] PTR struct .
  7749 ;;		 -> msg(15), 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  tamp            1   11[COMRAM] unsigned char 
  7752 ;;  error           1   10[COMRAM] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      unsigned char 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7762 ;;      Params:         2       0       0       0
  7763 ;;      Locals:         2       0       0       0
  7764 ;;      Temps:          8       0       0       0
  7765 ;;      Totals:        12       0       0       0
  7766 ;;Total ram usage:       12 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    2
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_ISR_Bassa
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text17
  7777  00145C                     __ptext17:
  7778                           	opt stack 0
  7779  00145C                     _CANreceiveMessage:
  7780                           	opt stack 24
  7781                           
  7782                           ;inc\CANlib.h: 530: BYTE tamp;
  7783                           ;inc\CANlib.h: 531: BYTE error = 0;
  7784                           
  7785                           ;incstack = 0
  7786  00145C  0E00               	movlw	0
  7787  00145E  6E34               	movwf	CANreceiveMessage@error,c
  7788                           
  7789                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7790  001460  AE74               	btfss	3956,7,c	;volatile
  7791  001462  D002               	goto	i1l3575
  7792                           
  7793                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7794  001464  8034               	bsf	CANreceiveMessage@error,0,c
  7795  001466  D000               	goto	i1l3575
  7796  001468                     i1l3575:
  7797                           
  7798                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7799  001468  AC74               	btfss	3956,6,c	;volatile
  7800  00146A  D002               	goto	i1l3579
  7801                           
  7802                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7803  00146C  8234               	bsf	CANreceiveMessage@error,1,c
  7804  00146E  D000               	goto	i1l3579
  7805  001470                     i1l3579:
  7806                           
  7807                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7808  001470  010F               	movlb	15	; () banked
  7809  001472  AF50               	btfss	80,7,b	;volatile
  7810  001474  D149               	goto	i1l420
  7811                           
  7812                           ; BSR set to: 15
  7813                           ;inc\CANlib.h: 541: {
  7814                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7815  001476  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7816  00147A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7817  00147E  6ADE               	clrf	postinc2,c
  7818  001480  6ADE               	clrf	postinc2,c
  7819  001482  6ADE               	clrf	postinc2,c
  7820  001484  6ADD               	clrf	postdec2,c
  7821                           
  7822                           ; BSR set to: 15
  7823                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7824  001486  EE20 F004          	lfsr	2,4
  7825  00148A  502A               	movf	CANreceiveMessage@msg,w,c
  7826  00148C  26D9               	addwf	fsr2l,f,c
  7827  00148E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7828  001490  22DA               	addwfc	fsr2h,f,c
  7829  001492  CF56 FFDF          	movff	3926,indf2	;volatile
  7830                           
  7831                           ; BSR set to: 15
  7832                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7833  001496  EE20 F005          	lfsr	2,5
  7834  00149A  502A               	movf	CANreceiveMessage@msg,w,c
  7835  00149C  26D9               	addwf	fsr2l,f,c
  7836  00149E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7837  0014A0  22DA               	addwfc	fsr2h,f,c
  7838  0014A2  CF57 FFDF          	movff	3927,indf2	;volatile
  7839                           
  7840                           ; BSR set to: 15
  7841                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7842  0014A6  EE20 F006          	lfsr	2,6
  7843  0014AA  502A               	movf	CANreceiveMessage@msg,w,c
  7844  0014AC  26D9               	addwf	fsr2l,f,c
  7845  0014AE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7846  0014B0  22DA               	addwfc	fsr2h,f,c
  7847  0014B2  CF58 FFDF          	movff	3928,indf2	;volatile
  7848                           
  7849                           ; BSR set to: 15
  7850                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7851  0014B6  EE20 F007          	lfsr	2,7
  7852  0014BA  502A               	movf	CANreceiveMessage@msg,w,c
  7853  0014BC  26D9               	addwf	fsr2l,f,c
  7854  0014BE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7855  0014C0  22DA               	addwfc	fsr2h,f,c
  7856  0014C2  CF59 FFDF          	movff	3929,indf2	;volatile
  7857                           
  7858                           ; BSR set to: 15
  7859                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7860  0014C6  EE20 F008          	lfsr	2,8
  7861  0014CA  502A               	movf	CANreceiveMessage@msg,w,c
  7862  0014CC  26D9               	addwf	fsr2l,f,c
  7863  0014CE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7864  0014D0  22DA               	addwfc	fsr2h,f,c
  7865  0014D2  CF5A FFDF          	movff	3930,indf2	;volatile
  7866                           
  7867                           ; BSR set to: 15
  7868                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7869  0014D6  EE20 F009          	lfsr	2,9
  7870  0014DA  502A               	movf	CANreceiveMessage@msg,w,c
  7871  0014DC  26D9               	addwf	fsr2l,f,c
  7872  0014DE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7873  0014E0  22DA               	addwfc	fsr2h,f,c
  7874  0014E2  CF5B FFDF          	movff	3931,indf2	;volatile
  7875                           
  7876                           ; BSR set to: 15
  7877                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7878  0014E6  EE20 F00A          	lfsr	2,10
  7879  0014EA  502A               	movf	CANreceiveMessage@msg,w,c
  7880  0014EC  26D9               	addwf	fsr2l,f,c
  7881  0014EE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7882  0014F0  22DA               	addwfc	fsr2h,f,c
  7883  0014F2  CF5C FFDF          	movff	3932,indf2	;volatile
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7887  0014F6  EE20 F00B          	lfsr	2,11
  7888  0014FA  502A               	movf	CANreceiveMessage@msg,w,c
  7889  0014FC  26D9               	addwf	fsr2l,f,c
  7890  0014FE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7891  001500  22DA               	addwfc	fsr2h,f,c
  7892  001502  CF5D FFDF          	movff	3933,indf2	;volatile
  7893                           
  7894                           ; BSR set to: 15
  7895                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7896  001506  EE20 F00E          	lfsr	2,14
  7897  00150A  502A               	movf	CANreceiveMessage@msg,w,c
  7898  00150C  26D9               	addwf	fsr2l,f,c
  7899  00150E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7900  001510  22DA               	addwfc	fsr2h,f,c
  7901  001512  010F               	movlb	15	; () banked
  7902  001514  AD55               	btfss	85,6,b	;volatile
  7903  001516  D002               	goto	i1u399_20
  7904  001518  0E01               	movlw	1
  7905  00151A  D001               	goto	i1u399_26
  7906  00151C                     i1u399_20:
  7907  00151C  0E00               	movlw	0
  7908  00151E                     i1u399_26:
  7909  00151E  6EDF               	movwf	indf2,c
  7910                           
  7911                           ; BSR set to: 15
  7912                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7913  001520  EE20 F00D          	lfsr	2,13
  7914  001524  502A               	movf	CANreceiveMessage@msg,w,c
  7915  001526  26D9               	addwf	fsr2l,f,c
  7916  001528  502B               	movf	CANreceiveMessage@msg+1,w,c
  7917  00152A  22DA               	addwfc	fsr2h,f,c
  7918  00152C  010F               	movlb	15	; () banked
  7919  00152E  5155               	movf	85,w,b	;volatile
  7920  001530  0B0F               	andlw	15
  7921  001532  6EDF               	movwf	indf2,c
  7922                           
  7923                           ; BSR set to: 15
  7924                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7925  001534  EE20 F00C          	lfsr	2,12
  7926  001538  502A               	movf	CANreceiveMessage@msg,w,c
  7927  00153A  26D9               	addwf	fsr2l,f,c
  7928  00153C  502B               	movf	CANreceiveMessage@msg+1,w,c
  7929  00153E  22DA               	addwfc	fsr2h,f,c
  7930  001540  010F               	movlb	15	; () banked
  7931  001542  A752               	btfss	82,3,b	;volatile
  7932  001544  D002               	goto	i1u400_20
  7933  001546  0E01               	movlw	1
  7934  001548  D001               	goto	i1u400_26
  7935  00154A                     i1u400_20:
  7936  00154A  0E00               	movlw	0
  7937  00154C                     i1u400_26:
  7938  00154C  6EDF               	movwf	indf2,c
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7942  00154E  010F               	movlb	15	; () banked
  7943  001550  B752               	btfsc	82,3,b	;volatile
  7944  001552  D044               	goto	i1l3613
  7945                           
  7946                           ; BSR set to: 15
  7947                           ;inc\CANlib.h: 559: {
  7948                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7949  001554  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7950  001558  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7951  00155A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7952  00155C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7953  00155E  0E03               	movlw	3
  7954  001560                     i1u402_25:
  7955  001560  90D8               	bcf	status,0,c
  7956  001562  362C               	rlcf	??_CANreceiveMessage,f,c
  7957  001564  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7958  001566  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7959  001568  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7960  00156A  2EE8               	decfsz	wreg,f,c
  7961  00156C  D7F9               	goto	i1u402_25
  7962  00156E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7963  001572  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7964  001576  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7965  00157A  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7966  00157E  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7967  001582  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7968                           
  7969                           ; BSR set to: 15
  7970                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7971  001586  010F               	movlb	15	; () banked
  7972  001588  3952               	swapf	82,w,b	;volatile
  7973  00158A  42E8               	rrncf	wreg,f,c
  7974  00158C  0B07               	andlw	7
  7975  00158E  0B07               	andlw	7
  7976  001590  6E35               	movwf	CANreceiveMessage@tamp,c
  7977                           
  7978                           ; BSR set to: 15
  7979                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7980  001592  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7981  001596  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7982  00159A  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  7983  00159E  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  7984  0015A2  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  7985  0015A6  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  7986  0015AA  5035               	movf	CANreceiveMessage@tamp,w,c
  7987  0015AC  242C               	addwf	??_CANreceiveMessage,w,c
  7988  0015AE  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7989  0015B0  0E00               	movlw	0
  7990  0015B2  202D               	addwfc	??_CANreceiveMessage+1,w,c
  7991  0015B4  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7992  0015B6  0E00               	movlw	0
  7993  0015B8  202E               	addwfc	??_CANreceiveMessage+2,w,c
  7994  0015BA  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7995  0015BC  0E00               	movlw	0
  7996  0015BE  202F               	addwfc	??_CANreceiveMessage+3,w,c
  7997  0015C0  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7998  0015C2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7999  0015C6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8000  0015CA  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8001  0015CE  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8002  0015D2  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8003  0015D6  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8004                           
  8005                           ;inc\CANlib.h: 563: }
  8006  0015DA  D093               	goto	i1l3639
  8007  0015DC                     i1l3613:
  8008                           
  8009                           ; BSR set to: 15
  8010                           ;inc\CANlib.h: 564: else
  8011                           ;inc\CANlib.h: 565: {
  8012                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8013  0015DC  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
  8014  0015E0  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8015  0015E2  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8016  0015E4  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8017  0015E6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8018  0015EA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8019  0015EE  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8020  0015F2  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8021  0015F6  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8022  0015FA  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8026  0015FE  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
  8027  001602  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8028  001604  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8029  001606  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8030  001608  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8031  00160C  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8032  001610  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8033  001614  6A2C               	clrf	??_CANreceiveMessage,c
  8034  001616  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8035  00161A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8036  00161E  502C               	movf	??_CANreceiveMessage,w,c
  8037  001620  26DE               	addwf	postinc2,f,c
  8038  001622  502D               	movf	??_CANreceiveMessage+1,w,c
  8039  001624  22DE               	addwfc	postinc2,f,c
  8040  001626  502E               	movf	??_CANreceiveMessage+2,w,c
  8041  001628  22DE               	addwfc	postinc2,f,c
  8042  00162A  502F               	movf	??_CANreceiveMessage+3,w,c
  8043  00162C  22DE               	addwfc	postinc2,f,c
  8044                           
  8045                           ; BSR set to: 15
  8046                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8047  00162E  010F               	movlb	15	; () banked
  8048  001630  A152               	btfss	82,0,b	;volatile
  8049  001632  D00D               	goto	i1l3621
  8050                           
  8051                           ; BSR set to: 15
  8052                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  8053  001634  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8054  001638  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8055  00163C  0E00               	movlw	0
  8056  00163E  12DE               	iorwf	postinc2,f,c
  8057  001640  0E00               	movlw	0
  8058  001642  12DE               	iorwf	postinc2,f,c
  8059  001644  0E01               	movlw	1
  8060  001646  12DE               	iorwf	postinc2,f,c
  8061  001648  0E00               	movlw	0
  8062  00164A  12DE               	iorwf	postinc2,f,c
  8063  00164C  D000               	goto	i1l3621
  8064  00164E                     i1l3621:
  8065                           
  8066                           ; BSR set to: 15
  8067                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8068  00164E  010F               	movlb	15	; () banked
  8069  001650  A352               	btfss	82,1,b	;volatile
  8070  001652  D00D               	goto	i1l3625
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  8074  001654  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8075  001658  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8076  00165C  0E00               	movlw	0
  8077  00165E  12DE               	iorwf	postinc2,f,c
  8078  001660  0E00               	movlw	0
  8079  001662  12DE               	iorwf	postinc2,f,c
  8080  001664  0E02               	movlw	2
  8081  001666  12DE               	iorwf	postinc2,f,c
  8082  001668  0E00               	movlw	0
  8083  00166A  12DE               	iorwf	postinc2,f,c
  8084  00166C  D000               	goto	i1l3625
  8085  00166E                     i1l3625:
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8089  00166E  010F               	movlb	15	; () banked
  8090  001670  AB52               	btfss	82,5,b	;volatile
  8091  001672  D00D               	goto	i1l3629
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8095  001674  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8096  001678  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8097  00167C  0E00               	movlw	0
  8098  00167E  12DE               	iorwf	postinc2,f,c
  8099  001680  0E00               	movlw	0
  8100  001682  12DE               	iorwf	postinc2,f,c
  8101  001684  0E04               	movlw	4
  8102  001686  12DE               	iorwf	postinc2,f,c
  8103  001688  0E00               	movlw	0
  8104  00168A  12DE               	iorwf	postinc2,f,c
  8105  00168C  D000               	goto	i1l3629
  8106  00168E                     i1l3629:
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8110  00168E  010F               	movlb	15	; () banked
  8111  001690  AD52               	btfss	82,6,b	;volatile
  8112  001692  D00D               	goto	i1l3633
  8113                           
  8114                           ; BSR set to: 15
  8115                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8116  001694  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8117  001698  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8118  00169C  0E00               	movlw	0
  8119  00169E  12DE               	iorwf	postinc2,f,c
  8120  0016A0  0E00               	movlw	0
  8121  0016A2  12DE               	iorwf	postinc2,f,c
  8122  0016A4  0E08               	movlw	8
  8123  0016A6  12DE               	iorwf	postinc2,f,c
  8124  0016A8  0E00               	movlw	0
  8125  0016AA  12DE               	iorwf	postinc2,f,c
  8126  0016AC  D000               	goto	i1l3633
  8127  0016AE                     i1l3633:
  8128                           
  8129                           ; BSR set to: 15
  8130                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8131  0016AE  010F               	movlb	15	; () banked
  8132  0016B0  AF52               	btfss	82,7,b	;volatile
  8133  0016B2  D00D               	goto	i1l3637
  8134                           
  8135                           ; BSR set to: 15
  8136                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8137  0016B4  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8138  0016B8  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8139  0016BC  0E00               	movlw	0
  8140  0016BE  12DE               	iorwf	postinc2,f,c
  8141  0016C0  0E00               	movlw	0
  8142  0016C2  12DE               	iorwf	postinc2,f,c
  8143  0016C4  0E10               	movlw	16
  8144  0016C6  12DE               	iorwf	postinc2,f,c
  8145  0016C8  0E00               	movlw	0
  8146  0016CA  12DE               	iorwf	postinc2,f,c
  8147  0016CC  D000               	goto	i1l3637
  8148  0016CE                     i1l3637:
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8152  0016CE  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  8153  0016D2  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8154  0016D4  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8155  0016D6  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8156  0016D8  0E15               	movlw	21
  8157  0016DA                     i1u408_25:
  8158  0016DA  90D8               	bcf	status,0,c
  8159  0016DC  362C               	rlcf	??_CANreceiveMessage,f,c
  8160  0016DE  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8161  0016E0  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8162  0016E2  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8163  0016E4  2EE8               	decfsz	wreg,f,c
  8164  0016E6  D7F9               	goto	i1u408_25
  8165  0016E8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8166  0016EC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8167  0016F0  502C               	movf	??_CANreceiveMessage,w,c
  8168  0016F2  12DE               	iorwf	postinc2,f,c
  8169  0016F4  502D               	movf	??_CANreceiveMessage+1,w,c
  8170  0016F6  12DE               	iorwf	postinc2,f,c
  8171  0016F8  502E               	movf	??_CANreceiveMessage+2,w,c
  8172  0016FA  12DE               	iorwf	postinc2,f,c
  8173  0016FC  502F               	movf	??_CANreceiveMessage+3,w,c
  8174  0016FE  12DE               	iorwf	postinc2,f,c
  8175  001700  D000               	goto	i1l3639
  8176  001702                     i1l3639:
  8177                           
  8178                           ; BSR set to: 15
  8179                           ;inc\CANlib.h: 581: }
  8180                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8181  001702  010F               	movlb	15	; () banked
  8182  001704  9F50               	bcf	80,7,b	;volatile
  8183                           
  8184                           ; BSR set to: 15
  8185                           ;inc\CANlib.h: 584: return (error);
  8186                           ;	Return value of _CANreceiveMessage is never used
  8187  001706  D140               	goto	i1l428
  8188  001708                     i1l420:
  8189                           
  8190                           ; BSR set to: 15
  8191                           ;inc\CANlib.h: 585: }
  8192                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8193  001708  AE60               	btfss	3936,7,c	;volatile
  8194  00170A  D13E               	goto	i1l428
  8195                           
  8196                           ; BSR set to: 15
  8197                           ;inc\CANlib.h: 588: {
  8198                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8199  00170C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8200  001710  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8201  001714  6ADE               	clrf	postinc2,c
  8202  001716  6ADE               	clrf	postinc2,c
  8203  001718  6ADE               	clrf	postinc2,c
  8204  00171A  6ADD               	clrf	postdec2,c
  8205                           
  8206                           ; BSR set to: 15
  8207                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8208  00171C  EE20 F004          	lfsr	2,4
  8209  001720  502A               	movf	CANreceiveMessage@msg,w,c
  8210  001722  26D9               	addwf	fsr2l,f,c
  8211  001724  502B               	movf	CANreceiveMessage@msg+1,w,c
  8212  001726  22DA               	addwfc	fsr2h,f,c
  8213  001728  CF66 FFDF          	movff	3942,indf2	;volatile
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8217  00172C  EE20 F005          	lfsr	2,5
  8218  001730  502A               	movf	CANreceiveMessage@msg,w,c
  8219  001732  26D9               	addwf	fsr2l,f,c
  8220  001734  502B               	movf	CANreceiveMessage@msg+1,w,c
  8221  001736  22DA               	addwfc	fsr2h,f,c
  8222  001738  CF67 FFDF          	movff	3943,indf2	;volatile
  8223                           
  8224                           ; BSR set to: 15
  8225                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8226  00173C  EE20 F006          	lfsr	2,6
  8227  001740  502A               	movf	CANreceiveMessage@msg,w,c
  8228  001742  26D9               	addwf	fsr2l,f,c
  8229  001744  502B               	movf	CANreceiveMessage@msg+1,w,c
  8230  001746  22DA               	addwfc	fsr2h,f,c
  8231  001748  CF68 FFDF          	movff	3944,indf2	;volatile
  8232                           
  8233                           ; BSR set to: 15
  8234                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8235  00174C  EE20 F007          	lfsr	2,7
  8236  001750  502A               	movf	CANreceiveMessage@msg,w,c
  8237  001752  26D9               	addwf	fsr2l,f,c
  8238  001754  502B               	movf	CANreceiveMessage@msg+1,w,c
  8239  001756  22DA               	addwfc	fsr2h,f,c
  8240  001758  CF69 FFDF          	movff	3945,indf2	;volatile
  8241                           
  8242                           ; BSR set to: 15
  8243                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8244  00175C  EE20 F008          	lfsr	2,8
  8245  001760  502A               	movf	CANreceiveMessage@msg,w,c
  8246  001762  26D9               	addwf	fsr2l,f,c
  8247  001764  502B               	movf	CANreceiveMessage@msg+1,w,c
  8248  001766  22DA               	addwfc	fsr2h,f,c
  8249  001768  CF6A FFDF          	movff	3946,indf2	;volatile
  8250                           
  8251                           ; BSR set to: 15
  8252                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8253  00176C  EE20 F009          	lfsr	2,9
  8254  001770  502A               	movf	CANreceiveMessage@msg,w,c
  8255  001772  26D9               	addwf	fsr2l,f,c
  8256  001774  502B               	movf	CANreceiveMessage@msg+1,w,c
  8257  001776  22DA               	addwfc	fsr2h,f,c
  8258  001778  CF6B FFDF          	movff	3947,indf2	;volatile
  8259                           
  8260                           ; BSR set to: 15
  8261                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8262  00177C  EE20 F00A          	lfsr	2,10
  8263  001780  502A               	movf	CANreceiveMessage@msg,w,c
  8264  001782  26D9               	addwf	fsr2l,f,c
  8265  001784  502B               	movf	CANreceiveMessage@msg+1,w,c
  8266  001786  22DA               	addwfc	fsr2h,f,c
  8267  001788  CF6C FFDF          	movff	3948,indf2	;volatile
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8271  00178C  EE20 F00B          	lfsr	2,11
  8272  001790  502A               	movf	CANreceiveMessage@msg,w,c
  8273  001792  26D9               	addwf	fsr2l,f,c
  8274  001794  502B               	movf	CANreceiveMessage@msg+1,w,c
  8275  001796  22DA               	addwfc	fsr2h,f,c
  8276  001798  CF6D FFDF          	movff	3949,indf2	;volatile
  8277                           
  8278                           ; BSR set to: 15
  8279                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8280  00179C  EE20 F00E          	lfsr	2,14
  8281  0017A0  502A               	movf	CANreceiveMessage@msg,w,c
  8282  0017A2  26D9               	addwf	fsr2l,f,c
  8283  0017A4  502B               	movf	CANreceiveMessage@msg+1,w,c
  8284  0017A6  22DA               	addwfc	fsr2h,f,c
  8285  0017A8  AC65               	btfss	3941,6,c	;volatile
  8286  0017AA  D002               	goto	i1u410_20
  8287  0017AC  0E01               	movlw	1
  8288  0017AE  D001               	goto	i1u410_26
  8289  0017B0                     i1u410_20:
  8290  0017B0  0E00               	movlw	0
  8291  0017B2                     i1u410_26:
  8292  0017B2  6EDF               	movwf	indf2,c
  8293                           
  8294                           ; BSR set to: 15
  8295                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8296  0017B4  EE20 F00D          	lfsr	2,13
  8297  0017B8  502A               	movf	CANreceiveMessage@msg,w,c
  8298  0017BA  26D9               	addwf	fsr2l,f,c
  8299  0017BC  502B               	movf	CANreceiveMessage@msg+1,w,c
  8300  0017BE  22DA               	addwfc	fsr2h,f,c
  8301  0017C0  5065               	movf	3941,w,c	;volatile
  8302  0017C2  0B0F               	andlw	15
  8303  0017C4  6EDF               	movwf	indf2,c
  8304                           
  8305                           ; BSR set to: 15
  8306                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8307  0017C6  EE20 F00C          	lfsr	2,12
  8308  0017CA  502A               	movf	CANreceiveMessage@msg,w,c
  8309  0017CC  26D9               	addwf	fsr2l,f,c
  8310  0017CE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8311  0017D0  22DA               	addwfc	fsr2h,f,c
  8312  0017D2  A662               	btfss	3938,3,c	;volatile
  8313  0017D4  D002               	goto	i1u411_20
  8314  0017D6  0E01               	movlw	1
  8315  0017D8  D001               	goto	i1u411_26
  8316  0017DA                     i1u411_20:
  8317  0017DA  0E00               	movlw	0
  8318  0017DC                     i1u411_26:
  8319  0017DC  6EDF               	movwf	indf2,c
  8320                           
  8321                           ; BSR set to: 15
  8322                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8323  0017DE  B662               	btfsc	3938,3,c	;volatile
  8324  0017E0  D043               	goto	i1l3675
  8325                           
  8326                           ; BSR set to: 15
  8327                           ;inc\CANlib.h: 606: {
  8328                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8329  0017E2  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8330  0017E6  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8331  0017E8  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8332  0017EA  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8333  0017EC  0E03               	movlw	3
  8334  0017EE                     i1u413_25:
  8335  0017EE  90D8               	bcf	status,0,c
  8336  0017F0  362C               	rlcf	??_CANreceiveMessage,f,c
  8337  0017F2  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8338  0017F4  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8339  0017F6  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8340  0017F8  2EE8               	decfsz	wreg,f,c
  8341  0017FA  D7F9               	goto	i1u413_25
  8342  0017FC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8343  001800  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8344  001804  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8345  001808  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8346  00180C  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8347  001810  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8348                           
  8349                           ; BSR set to: 15
  8350                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8351  001814  3862               	swapf	3938,w,c	;volatile
  8352  001816  42E8               	rrncf	wreg,f,c
  8353  001818  0B07               	andlw	7
  8354  00181A  0B07               	andlw	7
  8355  00181C  6E35               	movwf	CANreceiveMessage@tamp,c
  8356                           
  8357                           ; BSR set to: 15
  8358                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8359  00181E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8360  001822  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8361  001826  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8362  00182A  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8363  00182E  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8364  001832  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8365  001836  5035               	movf	CANreceiveMessage@tamp,w,c
  8366  001838  242C               	addwf	??_CANreceiveMessage,w,c
  8367  00183A  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8368  00183C  0E00               	movlw	0
  8369  00183E  202D               	addwfc	??_CANreceiveMessage+1,w,c
  8370  001840  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8371  001842  0E00               	movlw	0
  8372  001844  202E               	addwfc	??_CANreceiveMessage+2,w,c
  8373  001846  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8374  001848  0E00               	movlw	0
  8375  00184A  202F               	addwfc	??_CANreceiveMessage+3,w,c
  8376  00184C  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8377  00184E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8378  001852  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8379  001856  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8380  00185A  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8381  00185E  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8382  001862  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8383                           
  8384                           ;inc\CANlib.h: 610: }
  8385  001866  D08E               	goto	i1l3701
  8386  001868                     i1l3675:
  8387                           
  8388                           ; BSR set to: 15
  8389                           ;inc\CANlib.h: 611: else
  8390                           ;inc\CANlib.h: 612: {
  8391                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8392  001868  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
  8393  00186C  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8394  00186E  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8395  001870  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8396  001872  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8397  001876  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8398  00187A  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8399  00187E  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8400  001882  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8401  001886  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8402                           
  8403                           ; BSR set to: 15
  8404                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8405  00188A  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
  8406  00188E  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8407  001890  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8408  001892  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8409  001894  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8410  001898  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8411  00189C  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8412  0018A0  6A2C               	clrf	??_CANreceiveMessage,c
  8413  0018A2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8414  0018A6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8415  0018AA  502C               	movf	??_CANreceiveMessage,w,c
  8416  0018AC  26DE               	addwf	postinc2,f,c
  8417  0018AE  502D               	movf	??_CANreceiveMessage+1,w,c
  8418  0018B0  22DE               	addwfc	postinc2,f,c
  8419  0018B2  502E               	movf	??_CANreceiveMessage+2,w,c
  8420  0018B4  22DE               	addwfc	postinc2,f,c
  8421  0018B6  502F               	movf	??_CANreceiveMessage+3,w,c
  8422  0018B8  22DE               	addwfc	postinc2,f,c
  8423                           
  8424                           ; BSR set to: 15
  8425                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8426  0018BA  A062               	btfss	3938,0,c	;volatile
  8427  0018BC  D00D               	goto	i1l3683
  8428                           
  8429                           ; BSR set to: 15
  8430                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8431  0018BE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8432  0018C2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8433  0018C6  0E00               	movlw	0
  8434  0018C8  12DE               	iorwf	postinc2,f,c
  8435  0018CA  0E00               	movlw	0
  8436  0018CC  12DE               	iorwf	postinc2,f,c
  8437  0018CE  0E01               	movlw	1
  8438  0018D0  12DE               	iorwf	postinc2,f,c
  8439  0018D2  0E00               	movlw	0
  8440  0018D4  12DE               	iorwf	postinc2,f,c
  8441  0018D6  D000               	goto	i1l3683
  8442  0018D8                     i1l3683:
  8443                           
  8444                           ; BSR set to: 15
  8445                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8446  0018D8  A262               	btfss	3938,1,c	;volatile
  8447  0018DA  D00D               	goto	i1l3687
  8448                           
  8449                           ; BSR set to: 15
  8450                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8451  0018DC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8452  0018E0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8453  0018E4  0E00               	movlw	0
  8454  0018E6  12DE               	iorwf	postinc2,f,c
  8455  0018E8  0E00               	movlw	0
  8456  0018EA  12DE               	iorwf	postinc2,f,c
  8457  0018EC  0E02               	movlw	2
  8458  0018EE  12DE               	iorwf	postinc2,f,c
  8459  0018F0  0E00               	movlw	0
  8460  0018F2  12DE               	iorwf	postinc2,f,c
  8461  0018F4  D000               	goto	i1l3687
  8462  0018F6                     i1l3687:
  8463                           
  8464                           ; BSR set to: 15
  8465                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8466  0018F6  AA62               	btfss	3938,5,c	;volatile
  8467  0018F8  D00D               	goto	i1l3691
  8468                           
  8469                           ; BSR set to: 15
  8470                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8471  0018FA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8472  0018FE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8473  001902  0E00               	movlw	0
  8474  001904  12DE               	iorwf	postinc2,f,c
  8475  001906  0E00               	movlw	0
  8476  001908  12DE               	iorwf	postinc2,f,c
  8477  00190A  0E04               	movlw	4
  8478  00190C  12DE               	iorwf	postinc2,f,c
  8479  00190E  0E00               	movlw	0
  8480  001910  12DE               	iorwf	postinc2,f,c
  8481  001912  D000               	goto	i1l3691
  8482  001914                     i1l3691:
  8483                           
  8484                           ; BSR set to: 15
  8485                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8486  001914  AC62               	btfss	3938,6,c	;volatile
  8487  001916  D00D               	goto	i1l3695
  8488                           
  8489                           ; BSR set to: 15
  8490                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8491  001918  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8492  00191C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8493  001920  0E00               	movlw	0
  8494  001922  12DE               	iorwf	postinc2,f,c
  8495  001924  0E00               	movlw	0
  8496  001926  12DE               	iorwf	postinc2,f,c
  8497  001928  0E08               	movlw	8
  8498  00192A  12DE               	iorwf	postinc2,f,c
  8499  00192C  0E00               	movlw	0
  8500  00192E  12DE               	iorwf	postinc2,f,c
  8501  001930  D000               	goto	i1l3695
  8502  001932                     i1l3695:
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8506  001932  AE62               	btfss	3938,7,c	;volatile
  8507  001934  D00D               	goto	i1l3699
  8508                           
  8509                           ; BSR set to: 15
  8510                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8511  001936  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8512  00193A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8513  00193E  0E00               	movlw	0
  8514  001940  12DE               	iorwf	postinc2,f,c
  8515  001942  0E00               	movlw	0
  8516  001944  12DE               	iorwf	postinc2,f,c
  8517  001946  0E10               	movlw	16
  8518  001948  12DE               	iorwf	postinc2,f,c
  8519  00194A  0E00               	movlw	0
  8520  00194C  12DE               	iorwf	postinc2,f,c
  8521  00194E  D000               	goto	i1l3699
  8522  001950                     i1l3699:
  8523                           
  8524                           ; BSR set to: 15
  8525                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8526  001950  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8527  001954  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8528  001956  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8529  001958  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8530  00195A  0E15               	movlw	21
  8531  00195C                     i1u419_25:
  8532  00195C  90D8               	bcf	status,0,c
  8533  00195E  362C               	rlcf	??_CANreceiveMessage,f,c
  8534  001960  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8535  001962  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8536  001964  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8537  001966  2EE8               	decfsz	wreg,f,c
  8538  001968  D7F9               	goto	i1u419_25
  8539  00196A  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8540  00196E  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8541  001972  502C               	movf	??_CANreceiveMessage,w,c
  8542  001974  12DE               	iorwf	postinc2,f,c
  8543  001976  502D               	movf	??_CANreceiveMessage+1,w,c
  8544  001978  12DE               	iorwf	postinc2,f,c
  8545  00197A  502E               	movf	??_CANreceiveMessage+2,w,c
  8546  00197C  12DE               	iorwf	postinc2,f,c
  8547  00197E  502F               	movf	??_CANreceiveMessage+3,w,c
  8548  001980  12DE               	iorwf	postinc2,f,c
  8549  001982  D000               	goto	i1l3701
  8550  001984                     i1l3701:
  8551                           
  8552                           ; BSR set to: 15
  8553                           ;inc\CANlib.h: 629: }
  8554                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8555  001984  9E60               	bcf	3936,7,c	;volatile
  8556                           
  8557                           ; BSR set to: 15
  8558                           ;inc\CANlib.h: 632: return (error);
  8559                           ;	Return value of _CANreceiveMessage is never used
  8560  001986  D000               	goto	i1l428
  8561  001988                     i1l428:
  8562                           
  8563                           ; BSR set to: 15
  8564  001988  0012               	return		;funcret
  8565  00198A                     __end_of_CANreceiveMessage:
  8566                           	opt stack 0
  8567                           pclatu	equ	0xFFB
  8568                           pclath	equ	0xFFA
  8569                           tblptru	equ	0xFF8
  8570                           tblptrh	equ	0xFF7
  8571                           tblptrl	equ	0xFF6
  8572                           tablat	equ	0xFF5
  8573                           prodh	equ	0xFF4
  8574                           prodl	equ	0xFF3
  8575                           intcon	equ	0xFF2
  8576                           intcon2	equ	0xFF1
  8577                           intcon3	equ	0xFF0
  8578                           postinc0	equ	0xFEE
  8579                           fsr0h	equ	0xFEA
  8580                           fsr0l	equ	0xFE9
  8581                           wreg	equ	0xFE8
  8582                           postdec1	equ	0xFE5
  8583                           fsr1h	equ	0xFE2
  8584                           fsr1l	equ	0xFE1
  8585                           bsr	equ	0xFE0
  8586                           indf2	equ	0xFDF
  8587                           postinc2	equ	0xFDE
  8588                           postdec2	equ	0xFDD
  8589                           fsr2h	equ	0xFDA
  8590                           fsr2l	equ	0xFD9
  8591                           status	equ	0xFD8
  8592                           
  8593 ;; *************** function _CANisRxReady *****************
  8594 ;; Defined at:
  8595 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;		None
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      unsigned char 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8609 ;;      Params:         0       0       0       0
  8610 ;;      Locals:         1       0       0       0
  8611 ;;      Temps:          0       0       0       0
  8612 ;;      Totals:         1       0       0       0
  8613 ;;Total ram usage:        1 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:    2
  8616 ;; This function calls:
  8617 ;;		Nothing
  8618 ;; This function is called by:
  8619 ;;		_ISR_Bassa
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text18
  8624  002BC4                     __ptext18:
  8625                           	opt stack 0
  8626  002BC4                     _CANisRxReady:
  8627                           	opt stack 24
  8628                           
  8629                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8630                           
  8631                           ; BSR set to: 15
  8632                           ;incstack = 0
  8633  002BC4  0E01               	movlw	1
  8634  002BC6  6E2A               	movwf	_CANisRxReady$3175,c
  8635  002BC8  BE60               	btfsc	3936,7,c	;volatile
  8636  002BCA  D005               	goto	i1l571
  8637  002BCC  010F               	movlb	15	; () banked
  8638  002BCE  BF50               	btfsc	80,7,b	;volatile
  8639  002BD0  D002               	goto	i1l571
  8640                           
  8641                           ; BSR set to: 15
  8642  002BD2  0E00               	movlw	0
  8643  002BD4  6E2A               	movwf	_CANisRxReady$3175,c
  8644  002BD6                     i1l571:
  8645  002BD6  502A               	movf	_CANisRxReady$3175,w,c
  8646  002BD8  D000               	goto	i1l572
  8647  002BDA                     i1l572:
  8648  002BDA  0012               	return		;funcret
  8649  002BDC                     __end_of_CANisRxReady:
  8650                           	opt stack 0
  8651                           pclatu	equ	0xFFB
  8652                           pclath	equ	0xFFA
  8653                           tblptru	equ	0xFF8
  8654                           tblptrh	equ	0xFF7
  8655                           tblptrl	equ	0xFF6
  8656                           tablat	equ	0xFF5
  8657                           prodh	equ	0xFF4
  8658                           prodl	equ	0xFF3
  8659                           intcon	equ	0xFF2
  8660                           intcon2	equ	0xFF1
  8661                           intcon3	equ	0xFF0
  8662                           postinc0	equ	0xFEE
  8663                           fsr0h	equ	0xFEA
  8664                           fsr0l	equ	0xFE9
  8665                           wreg	equ	0xFE8
  8666                           postdec1	equ	0xFE5
  8667                           fsr1h	equ	0xFE2
  8668                           fsr1l	equ	0xFE1
  8669                           bsr	equ	0xFE0
  8670                           indf2	equ	0xFDF
  8671                           postinc2	equ	0xFDE
  8672                           postdec2	equ	0xFDD
  8673                           fsr2h	equ	0xFDA
  8674                           fsr2l	equ	0xFD9
  8675                           status	equ	0xFD8
  8676                           
  8677 ;; *************** function _ISR_Alta *****************
  8678 ;; Defined at:
  8679 ;;		line 154 in file "ABS_Code.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;		None
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;		None
  8684 ;; Return value:  Size  Location     Type
  8685 ;;		None               void
  8686 ;; Registers used:
  8687 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8693 ;;      Params:         0       0       0       0
  8694 ;;      Locals:         0       0       0       0
  8695 ;;      Temps:          0      22       0       0
  8696 ;;      Totals:         0      22       0       0
  8697 ;;Total ram usage:       22 bytes
  8698 ;; Hardware stack levels used:    1
  8699 ;; Hardware stack levels required when called:    1
  8700 ;; This function calls:
  8701 ;;		_WriteTimer0
  8702 ;;		i2___awdiv
  8703 ;;		i2___lwdiv
  8704 ;;		i2___wmul
  8705 ;; This function is called by:
  8706 ;;		Interrupt level 2
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	intcode
  8711  000008                     __pintcode:
  8712                           	opt stack 0
  8713  000008                     _ISR_Alta:
  8714                           	opt stack 24
  8715                           
  8716                           ;incstack = 0
  8717  000008  CFFA F0BF          	movff	pclath,??_ISR_Alta+8
  8718  00000C  CFFB F0C0          	movff	pclatu,??_ISR_Alta+9
  8719  000010  CFE9 F0C1          	movff	fsr0l,??_ISR_Alta+10
  8720  000014  ED9A  F00E         	call	int_func,f	;refresh shadow registers
  8721                           pclatu	equ	0xFFB
  8722                           pclath	equ	0xFFA
  8723                           tblptru	equ	0xFF8
  8724                           tblptrh	equ	0xFF7
  8725                           tblptrl	equ	0xFF6
  8726                           tablat	equ	0xFF5
  8727                           prodh	equ	0xFF4
  8728                           prodl	equ	0xFF3
  8729                           intcon	equ	0xFF2
  8730                           intcon2	equ	0xFF1
  8731                           intcon3	equ	0xFF0
  8732                           postinc0	equ	0xFEE
  8733                           fsr0h	equ	0xFEA
  8734                           fsr0l	equ	0xFE9
  8735                           wreg	equ	0xFE8
  8736                           postdec1	equ	0xFE5
  8737                           fsr1h	equ	0xFE2
  8738                           fsr1l	equ	0xFE1
  8739                           bsr	equ	0xFE0
  8740                           indf2	equ	0xFDF
  8741                           postinc2	equ	0xFDE
  8742                           postdec2	equ	0xFDD
  8743                           fsr2h	equ	0xFDA
  8744                           fsr2l	equ	0xFD9
  8745                           status	equ	0xFD8
  8746                           
  8747                           	psect	intcode_body
  8748  001D34                     __pintcode_body:
  8749                           	opt stack 24
  8750  001D34                     int_func:
  8751                           	opt stack 24
  8752  001D34  0006               	pop		; remove dummy address from shadow register refresh
  8753  001D36  CFEA F0C2          	movff	fsr0h,??_ISR_Alta+11
  8754  001D3A  CFE1 F0C3          	movff	fsr1l,??_ISR_Alta+12
  8755  001D3E  CFE2 F0C4          	movff	fsr1h,??_ISR_Alta+13
  8756  001D42  CFD9 F0C5          	movff	fsr2l,??_ISR_Alta+14
  8757  001D46  CFDA F0C6          	movff	fsr2h,??_ISR_Alta+15
  8758  001D4A  CFF3 F0C7          	movff	prodl,??_ISR_Alta+16
  8759  001D4E  CFF4 F0C8          	movff	prodh,??_ISR_Alta+17
  8760  001D52  CFF6 F0C9          	movff	tblptrl,??_ISR_Alta+18
  8761  001D56  CFF7 F0CA          	movff	tblptrh,??_ISR_Alta+19
  8762  001D5A  CFF8 F0CB          	movff	tblptru,??_ISR_Alta+20
  8763  001D5E  CFF5 F0CC          	movff	tablat,??_ISR_Alta+21
  8764                           
  8765                           ;ABS_Code.c: 156: if (INTCONbits.TMR0IF == 1) {
  8766  001D62  A4F2               	btfss	intcon,2,c	;volatile
  8767  001D64  D0AD               	goto	i2l5353
  8768                           
  8769                           ;ABS_Code.c: 157: PORTCbits.RC0 = ~PORTCbits.RC0;
  8770  001D66  7082               	btg	3970,0,c	;volatile
  8771                           
  8772                           ;ABS_Code.c: 158: if (PORTCbits.RC0 == 1) {
  8773  001D68  A082               	btfss	3970,0,c	;volatile
  8774  001D6A  D0A1               	goto	i2l5349
  8775                           
  8776                           ;ABS_Code.c: 159: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8777  001D6C  0E40               	movlw	64
  8778  001D6E  0100               	movlb	0	; () banked
  8779  001D70  6FB7               	movwf	??_ISR_Alta& (0+255),b
  8780  001D72  0E06               	movlw	6
  8781  001D74  0100               	movlb	0	; () banked
  8782  001D76  6FB8               	movwf	(??_ISR_Alta+1)& (0+255),b
  8783  001D78  C028  F0A9         	movff	_brake_value_degree,i2___wmul@multiplier	;volatile
  8784  001D7C  0100               	movlb	0	; () banked
  8785  001D7E  6BAA               	clrf	(i2___wmul@multiplier+1)& (0+255),b
  8786  001D80  0E05               	movlw	5
  8787  001D82  0100               	movlb	0	; () banked
  8788  001D84  6FAC               	movwf	(i2___wmul@multiplicand+1)& (0+255),b
  8789  001D86  0E78               	movlw	120
  8790  001D88  6FAB               	movwf	i2___wmul@multiplicand& (0+255),b
  8791  001D8A  ECA7  F015         	call	i2___wmul	;wreg free
  8792  001D8E  C0A9  F0AF         	movff	?i2___wmul,i2___awdiv@dividend
  8793  001D92  C0AA  F0B0         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8794  001D96  0E00               	movlw	0
  8795  001D98  0100               	movlb	0	; () banked
  8796  001D9A  6FB2               	movwf	(i2___awdiv@divisor+1)& (0+255),b
  8797  001D9C  0EB4               	movlw	180
  8798  001D9E  6FB1               	movwf	i2___awdiv@divisor& (0+255),b
  8799  001DA0  ECA3  F013         	call	i2___awdiv	;wreg free
  8800  001DA4  90D8               	bcf	status,0,c
  8801  001DA6  0100               	movlb	0	; () banked
  8802  001DA8  37AF               	rlcf	?i2___awdiv& (0+255),f,b
  8803  001DAA  0100               	movlb	0	; () banked
  8804  001DAC  37B0               	rlcf	(?i2___awdiv+1)& (0+255),f,b
  8805  001DAE  0100               	movlb	0	; () banked
  8806  001DB0  51B7               	movf	??_ISR_Alta& (0+255),w,b
  8807  001DB2  0100               	movlb	0	; () banked
  8808  001DB4  27AF               	addwf	?i2___awdiv& (0+255),f,b
  8809  001DB6  0100               	movlb	0	; () banked
  8810  001DB8  51B8               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8811  001DBA  0100               	movlb	0	; () banked
  8812  001DBC  23B0               	addwfc	(?i2___awdiv+1)& (0+255),f,b
  8813  001DBE  0100               	movlb	0	; () banked
  8814  001DC0  C0AF  F005         	movff	?i2___awdiv,_timer_on	;volatile
  8815  001DC4  0100               	movlb	0	; () banked
  8816  001DC6  C0B0  F006         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8817  001DCA  0E00               	movlw	0
  8818  001DCC  BE06               	btfsc	_timer_on+1,7,c	;volatile
  8819  001DCE  0EFF               	movlw	-1
  8820  001DD0  6E07               	movwf	_timer_on+2,c	;volatile
  8821  001DD2  6E08               	movwf	_timer_on+3,c	;volatile
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;ABS_Code.c: 160: timer_off = 65536 - (40000 - timer_on);
  8825  001DD4  C005  F0B7         	movff	_timer_on,??_ISR_Alta	;volatile
  8826  001DD8  C006  F0B8         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8827  001DDC  C007  F0B9         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8828  001DE0  C008  F0BA         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8829  001DE4  0100               	movlb	0	; () banked
  8830  001DE6  1FB7               	comf	??_ISR_Alta& (0+255),f,b
  8831  001DE8  1FB8               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8832  001DEA  1FB9               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8833  001DEC  1FBA               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8834  001DEE  2BB7               	incf	??_ISR_Alta& (0+255),f,b
  8835  001DF0  0E00               	movlw	0
  8836  001DF2  23B8               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8837  001DF4  23B9               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8838  001DF6  23BA               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8839  001DF8  0E40               	movlw	64
  8840  001DFA  0100               	movlb	0	; () banked
  8841  001DFC  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  8842  001DFE  0100               	movlb	0	; () banked
  8843  001E00  6FBB               	movwf	(??_ISR_Alta+4)& (0+255),b
  8844  001E02  0E9C               	movlw	156
  8845  001E04  0100               	movlb	0	; () banked
  8846  001E06  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8847  001E08  0100               	movlb	0	; () banked
  8848  001E0A  6FBC               	movwf	(??_ISR_Alta+5)& (0+255),b
  8849  001E0C  0E00               	movlw	0
  8850  001E0E  0100               	movlb	0	; () banked
  8851  001E10  21B9               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8852  001E12  0100               	movlb	0	; () banked
  8853  001E14  6FBD               	movwf	(??_ISR_Alta+6)& (0+255),b
  8854  001E16  0E00               	movlw	0
  8855  001E18  0100               	movlb	0	; () banked
  8856  001E1A  21BA               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8857  001E1C  0100               	movlb	0	; () banked
  8858  001E1E  6FBE               	movwf	(??_ISR_Alta+7)& (0+255),b
  8859  001E20  0100               	movlb	0	; () banked
  8860  001E22  1FBB               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8861  001E24  1FBC               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8862  001E26  1FBD               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8863  001E28  1FBE               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8864  001E2A  2BBB               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8865  001E2C  0E00               	movlw	0
  8866  001E2E  23BC               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8867  001E30  23BD               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8868  001E32  23BE               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8869  001E34  0E00               	movlw	0
  8870  001E36  0100               	movlb	0	; () banked
  8871  001E38  25BB               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8872  001E3A  0100               	movlb	0	; () banked
  8873  001E3C  6F74               	movwf	_timer_off& (0+255),b	;volatile
  8874  001E3E  0E00               	movlw	0
  8875  001E40  0100               	movlb	0	; () banked
  8876  001E42  21BC               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8877  001E44  0100               	movlb	0	; () banked
  8878  001E46  6F75               	movwf	(_timer_off+1)& (0+255),b	;volatile
  8879  001E48  0E01               	movlw	1
  8880  001E4A  0100               	movlb	0	; () banked
  8881  001E4C  21BD               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8882  001E4E  0100               	movlb	0	; () banked
  8883  001E50  6F76               	movwf	(_timer_off+2)& (0+255),b	;volatile
  8884  001E52  0E00               	movlw	0
  8885  001E54  0100               	movlb	0	; () banked
  8886  001E56  21BE               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8887  001E58  0100               	movlb	0	; () banked
  8888  001E5A  6F77               	movwf	(_timer_off+3)& (0+255),b	;volatile
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;ABS_Code.c: 161: timer_on = 65536 - timer_on;
  8892  001E5C  C005  F0B7         	movff	_timer_on,??_ISR_Alta	;volatile
  8893  001E60  C006  F0B8         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8894  001E64  C007  F0B9         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8895  001E68  C008  F0BA         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8896  001E6C  0100               	movlb	0	; () banked
  8897  001E6E  1FB7               	comf	??_ISR_Alta& (0+255),f,b
  8898  001E70  1FB8               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8899  001E72  1FB9               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8900  001E74  1FBA               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8901  001E76  2BB7               	incf	??_ISR_Alta& (0+255),f,b
  8902  001E78  0E00               	movlw	0
  8903  001E7A  23B8               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8904  001E7C  23B9               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8905  001E7E  23BA               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8906  001E80  0E00               	movlw	0
  8907  001E82  0100               	movlb	0	; () banked
  8908  001E84  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  8909  001E86  6E05               	movwf	_timer_on,c	;volatile
  8910  001E88  0E00               	movlw	0
  8911  001E8A  0100               	movlb	0	; () banked
  8912  001E8C  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8913  001E8E  6E06               	movwf	_timer_on+1,c	;volatile
  8914  001E90  0E01               	movlw	1
  8915  001E92  0100               	movlb	0	; () banked
  8916  001E94  21B9               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8917  001E96  6E07               	movwf	_timer_on+2,c	;volatile
  8918  001E98  0E00               	movlw	0
  8919  001E9A  0100               	movlb	0	; () banked
  8920  001E9C  21BA               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8921  001E9E  6E08               	movwf	_timer_on+3,c	;volatile
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;ABS_Code.c: 162: WriteTimer0(timer_on);
  8925  001EA0  C005  F0A9         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8926  001EA4  C006  F0AA         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8927  001EA8  ECEE  F015         	call	_WriteTimer0	;wreg free
  8928                           
  8929                           ;ABS_Code.c: 163: } else {
  8930  001EAC  D007               	goto	i2l5351
  8931  001EAE                     i2l5349:
  8932                           
  8933                           ;ABS_Code.c: 164: WriteTimer0(timer_off);
  8934  001EAE  C074  F0A9         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8935  001EB2  C075  F0AA         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8936  001EB6  ECEE  F015         	call	_WriteTimer0	;wreg free
  8937  001EBA  D000               	goto	i2l5351
  8938  001EBC                     i2l5351:
  8939                           
  8940                           ;ABS_Code.c: 165: }
  8941                           ;ABS_Code.c: 166: INTCONbits.TMR0IF = 0;
  8942  001EBC  94F2               	bcf	intcon,2,c	;volatile
  8943  001EBE  D000               	goto	i2l5353
  8944  001EC0                     i2l5353:
  8945                           
  8946                           ;ABS_Code.c: 167: }
  8947                           ;ABS_Code.c: 170: if (INTCONbits.INT0IF == 1) {
  8948  001EC0  A2F2               	btfss	intcon,1,c	;volatile
  8949  001EC2  D04C               	goto	i2l685
  8950                           
  8951                           ;ABS_Code.c: 171: if (x == 0) {
  8952  001EC4  B449               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8953  001EC6  D006               	goto	i2l5361
  8954                           
  8955                           ;ABS_Code.c: 172: TMR1H = 0x00;
  8956  001EC8  0E00               	movlw	0
  8957  001ECA  6ECF               	movwf	4047,c	;volatile
  8958                           
  8959                           ;ABS_Code.c: 173: TMR1L = 0x00;
  8960  001ECC  0E00               	movlw	0
  8961  001ECE  6ECE               	movwf	4046,c	;volatile
  8962                           
  8963                           ;ABS_Code.c: 174: x = 1;
  8964  001ED0  8449               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8965                           
  8966                           ;ABS_Code.c: 175: } else {
  8967  001ED2  D043               	goto	i2l687
  8968  001ED4                     i2l5361:
  8969                           
  8970                           ;ABS_Code.c: 176: gap_time_1 = (TMR1H << 8) + TMR1L;
  8971  001ED4  50CF               	movf	4047,w,c	;volatile
  8972  001ED6  0100               	movlb	0	; () banked
  8973  001ED8  6FB8               	movwf	(??_ISR_Alta+1)& (0+255),b
  8974  001EDA  6BB7               	clrf	??_ISR_Alta& (0+255),b
  8975  001EDC  50CE               	movf	4046,w,c	;volatile
  8976  001EDE  0100               	movlb	0	; () banked
  8977  001EE0  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  8978  001EE2  6E1F               	movwf	_gap_time_1,c	;volatile
  8979  001EE4  0E00               	movlw	0
  8980  001EE6  0100               	movlb	0	; () banked
  8981  001EE8  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8982  001EEA  6E20               	movwf	_gap_time_1+1,c	;volatile
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;ABS_Code.c: 177: gap_time_1 = gap_time_1 / 500;
  8986  001EEC  C01F  F0A9         	movff	_gap_time_1,i2___lwdiv@dividend	;volatile
  8987  001EF0  C020  F0AA         	movff	_gap_time_1+1,i2___lwdiv@dividend+1	;volatile
  8988  001EF4  0E01               	movlw	1
  8989  001EF6  0100               	movlb	0	; () banked
  8990  001EF8  6FAC               	movwf	(i2___lwdiv@divisor+1)& (0+255),b
  8991  001EFA  0EF4               	movlw	244
  8992  001EFC  6FAB               	movwf	i2___lwdiv@divisor& (0+255),b
  8993  001EFE  ECFB  F014         	call	i2___lwdiv	;wreg free
  8994  001F02  C0A9  F01F         	movff	?i2___lwdiv,_gap_time_1	;volatile
  8995  001F06  C0AA  F020         	movff	?i2___lwdiv+1,_gap_time_1+1	;volatile
  8996                           
  8997                           ;ABS_Code.c: 178: ENC1_measure = 1;
  8998  001F0A  8048               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8999                           
  9000                           ;ABS_Code.c: 179: TMR1H = 0x00;
  9001  001F0C  0E00               	movlw	0
  9002  001F0E  6ECF               	movwf	4047,c	;volatile
  9003                           
  9004                           ;ABS_Code.c: 180: TMR1L = 0x00;
  9005  001F10  0E00               	movlw	0
  9006  001F12  6ECE               	movwf	4046,c	;volatile
  9007                           
  9008                           ;ABS_Code.c: 181: if (count_flag == 1) {
  9009  001F14  AA48               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9010  001F16  D008               	goto	i2l5375
  9011                           
  9012                           ;ABS_Code.c: 182: int_counter_1++;
  9013  001F18  0E01               	movlw	1
  9014  001F1A  0100               	movlb	0	; () banked
  9015  001F1C  276C               	addwf	_int_counter_1& (0+255),f,b	;volatile
  9016  001F1E  0E00               	movlw	0
  9017  001F20  236D               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  9018  001F22  236E               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  9019  001F24  236F               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  9020  001F26  D000               	goto	i2l5375
  9021  001F28                     i2l5375:
  9022                           
  9023                           ;ABS_Code.c: 183: }
  9024                           ;ABS_Code.c: 184: if (distance_set_flag == 1) {
  9025  001F28  AE48               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  9026  001F2A  D017               	goto	i2l687
  9027                           
  9028                           ;ABS_Code.c: 185: distance_set_counter_1++;
  9029  001F2C  4A19               	infsnz	_distance_set_counter_1,f,c	;volatile
  9030  001F2E  2A1A               	incf	_distance_set_counter_1+1,f,c	;volatile
  9031                           
  9032                           ;ABS_Code.c: 186: if ((steering_dir == 1)&&(distance_set_counter_1 > distance_set_value)
      +                          ) {
  9033  001F30  A249               	btfss	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9034  001F32  D008               	goto	i2l690
  9035  001F34  5019               	movf	_distance_set_counter_1,w,c	;volatile
  9036  001F36  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9037  001F38  501A               	movf	_distance_set_counter_1+1,w,c	;volatile
  9038  001F3A  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9039  001F3C  B0D8               	btfsc	status,0,c
  9040  001F3E  D002               	goto	i2l690
  9041                           
  9042                           ;ABS_Code.c: 187: distance_reached_flag = 1;
  9043  001F40  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9044                           
  9045                           ;ABS_Code.c: 188: PORTAbits.RA1 = 1;
  9046  001F42  8280               	bsf	3968,1,c	;volatile
  9047  001F44                     i2l690:
  9048                           
  9049                           ;ABS_Code.c: 189: }
  9050                           ;ABS_Code.c: 190: if ((steering_dir == 0)&&(distance_set_counter_2 > distance_set_value)
      +                          ) {
  9051  001F44  B249               	btfsc	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9052  001F46  D009               	goto	i2l687
  9053  001F48  501B               	movf	_distance_set_counter_2,w,c	;volatile
  9054  001F4A  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9055  001F4C  501C               	movf	_distance_set_counter_2+1,w,c	;volatile
  9056  001F4E  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9057  001F50  B0D8               	btfsc	status,0,c
  9058  001F52  D003               	goto	i2l687
  9059                           
  9060                           ;ABS_Code.c: 191: distance_reached_flag = 1;
  9061  001F54  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9062                           
  9063                           ;ABS_Code.c: 192: PORTAbits.RA1 = 1;
  9064  001F56  8280               	bsf	3968,1,c	;volatile
  9065  001F58  D000               	goto	i2l687
  9066  001F5A                     i2l687:
  9067                           
  9068                           ;ABS_Code.c: 193: }
  9069                           ;ABS_Code.c: 194: }
  9070                           ;ABS_Code.c: 195: }
  9071                           ;ABS_Code.c: 196: INTCONbits.INT0IF = 0;
  9072  001F5A  92F2               	bcf	intcon,1,c	;volatile
  9073  001F5C                     i2l685:
  9074                           
  9075                           ;ABS_Code.c: 197: }
  9076                           ;ABS_Code.c: 200: if (INTCON3bits.INT1IF == 1) {
  9077  001F5C  A0F0               	btfss	intcon3,0,c	;volatile
  9078  001F5E  D04D               	goto	i2l699
  9079                           
  9080                           ;ABS_Code.c: 201: if (y == 0) {
  9081  001F60  B649               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  9082  001F62  D006               	goto	i2l5395
  9083                           
  9084                           ;ABS_Code.c: 202: TMR3H = 0x00;
  9085  001F64  0E00               	movlw	0
  9086  001F66  6EB3               	movwf	4019,c	;volatile
  9087                           
  9088                           ;ABS_Code.c: 203: TMR3L = 0x00;
  9089  001F68  0E00               	movlw	0
  9090  001F6A  6EB2               	movwf	4018,c	;volatile
  9091                           
  9092                           ;ABS_Code.c: 204: y = 1;
  9093  001F6C  8649               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  9094                           
  9095                           ;ABS_Code.c: 205: } else {
  9096  001F6E  D043               	goto	i2l694
  9097  001F70                     i2l5395:
  9098                           
  9099                           ;ABS_Code.c: 206: gap_time_2 = (TMR3H << 8) + TMR3L;
  9100  001F70  50B3               	movf	4019,w,c	;volatile
  9101  001F72  0100               	movlb	0	; () banked
  9102  001F74  6FB8               	movwf	(??_ISR_Alta+1)& (0+255),b
  9103  001F76  6BB7               	clrf	??_ISR_Alta& (0+255),b
  9104  001F78  50B2               	movf	4018,w,c	;volatile
  9105  001F7A  0100               	movlb	0	; () banked
  9106  001F7C  25B7               	addwf	??_ISR_Alta& (0+255),w,b
  9107  001F7E  6E21               	movwf	_gap_time_2,c	;volatile
  9108  001F80  0E00               	movlw	0
  9109  001F82  0100               	movlb	0	; () banked
  9110  001F84  21B8               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  9111  001F86  6E22               	movwf	_gap_time_2+1,c	;volatile
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;ABS_Code.c: 207: gap_time_2 = gap_time_2 / 500;
  9115  001F88  C021  F0A9         	movff	_gap_time_2,i2___lwdiv@dividend	;volatile
  9116  001F8C  C022  F0AA         	movff	_gap_time_2+1,i2___lwdiv@dividend+1	;volatile
  9117  001F90  0E01               	movlw	1
  9118  001F92  0100               	movlb	0	; () banked
  9119  001F94  6FAC               	movwf	(i2___lwdiv@divisor+1)& (0+255),b
  9120  001F96  0EF4               	movlw	244
  9121  001F98  6FAB               	movwf	i2___lwdiv@divisor& (0+255),b
  9122  001F9A  ECFB  F014         	call	i2___lwdiv	;wreg free
  9123  001F9E  C0A9  F021         	movff	?i2___lwdiv,_gap_time_2	;volatile
  9124  001FA2  C0AA  F022         	movff	?i2___lwdiv+1,_gap_time_2+1	;volatile
  9125                           
  9126                           ;ABS_Code.c: 208: ENC2_measure = 1;
  9127  001FA6  8248               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  9128                           
  9129                           ;ABS_Code.c: 209: TMR3H = 0x00;
  9130  001FA8  0E00               	movlw	0
  9131  001FAA  6EB3               	movwf	4019,c	;volatile
  9132                           
  9133                           ;ABS_Code.c: 210: TMR3L = 0x00;
  9134  001FAC  0E00               	movlw	0
  9135  001FAE  6EB2               	movwf	4018,c	;volatile
  9136                           
  9137                           ;ABS_Code.c: 211: if (count_flag == 1) {
  9138  001FB0  AA48               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9139  001FB2  D008               	goto	i2l5409
  9140                           
  9141                           ;ABS_Code.c: 212: int_counter_2++;
  9142  001FB4  0E01               	movlw	1
  9143  001FB6  0100               	movlb	0	; () banked
  9144  001FB8  2770               	addwf	_int_counter_2& (0+255),f,b	;volatile
  9145  001FBA  0E00               	movlw	0
  9146  001FBC  2371               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  9147  001FBE  2372               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  9148  001FC0  2373               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9149  001FC2  D000               	goto	i2l5409
  9150  001FC4                     i2l5409:
  9151                           
  9152                           ;ABS_Code.c: 213: }
  9153                           ;ABS_Code.c: 214: if (distance_set_flag == 1) {
  9154  001FC4  AE48               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  9155  001FC6  D017               	goto	i2l694
  9156                           
  9157                           ;ABS_Code.c: 215: distance_set_counter_2++;
  9158  001FC8  4A1B               	infsnz	_distance_set_counter_2,f,c	;volatile
  9159  001FCA  2A1C               	incf	_distance_set_counter_2+1,f,c	;volatile
  9160                           
  9161                           ;ABS_Code.c: 216: if ((steering_dir == 1)&&(distance_set_counter_1 > distance_set_value)
      +                          ) {
  9162  001FCC  A249               	btfss	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9163  001FCE  D008               	goto	i2l697
  9164  001FD0  5019               	movf	_distance_set_counter_1,w,c	;volatile
  9165  001FD2  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9166  001FD4  501A               	movf	_distance_set_counter_1+1,w,c	;volatile
  9167  001FD6  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9168  001FD8  B0D8               	btfsc	status,0,c
  9169  001FDA  D002               	goto	i2l697
  9170                           
  9171                           ;ABS_Code.c: 217: distance_reached_flag = 1;
  9172  001FDC  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9173                           
  9174                           ;ABS_Code.c: 218: PORTAbits.RA1 = 1;
  9175  001FDE  8280               	bsf	3968,1,c	;volatile
  9176  001FE0                     i2l697:
  9177                           
  9178                           ;ABS_Code.c: 219: }
  9179                           ;ABS_Code.c: 220: if ((steering_dir == 0)&&(distance_set_counter_2 > distance_set_value)
      +                          ) {
  9180  001FE0  B249               	btfsc	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9181  001FE2  D009               	goto	i2l694
  9182  001FE4  501B               	movf	_distance_set_counter_2,w,c	;volatile
  9183  001FE6  5C1D               	subwf	_distance_set_value,w,c	;volatile
  9184  001FE8  501C               	movf	_distance_set_counter_2+1,w,c	;volatile
  9185  001FEA  581E               	subwfb	_distance_set_value+1,w,c	;volatile
  9186  001FEC  B0D8               	btfsc	status,0,c
  9187  001FEE  D003               	goto	i2l694
  9188                           
  9189                           ;ABS_Code.c: 221: distance_reached_flag = 1;
  9190  001FF0  8C48               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9191                           
  9192                           ;ABS_Code.c: 222: PORTAbits.RA1 = 1;
  9193  001FF2  8280               	bsf	3968,1,c	;volatile
  9194  001FF4  D000               	goto	i2l694
  9195  001FF6                     i2l694:
  9196                           
  9197                           ;ABS_Code.c: 223: }
  9198                           ;ABS_Code.c: 224: }
  9199                           ;ABS_Code.c: 225: }
  9200                           ;ABS_Code.c: 226: INTCON3bits.INT1IF = 0;
  9201  001FF6  90F0               	bcf	intcon3,0,c	;volatile
  9202  001FF8  D000               	goto	i2l699
  9203  001FFA                     i2l699:
  9204  001FFA  C0CC  FFF5         	movff	??_ISR_Alta+21,tablat
  9205  001FFE  C0CB  FFF8         	movff	??_ISR_Alta+20,tblptru
  9206  002002  C0CA  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9207  002006  C0C9  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9208  00200A  C0C8  FFF4         	movff	??_ISR_Alta+17,prodh
  9209  00200E  C0C7  FFF3         	movff	??_ISR_Alta+16,prodl
  9210  002012  C0C6  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9211  002016  C0C5  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9212  00201A  C0C4  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9213  00201E  C0C3  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9214  002022  C0C2  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9215  002026  C0C1  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9216  00202A  C0C0  FFFB         	movff	??_ISR_Alta+9,pclatu
  9217  00202E  C0BF  FFFA         	movff	??_ISR_Alta+8,pclath
  9218  002032  0011               	retfie		f
  9219  002034                     __end_of_ISR_Alta:
  9220                           	opt stack 0
  9221                           pclatu	equ	0xFFB
  9222                           pclath	equ	0xFFA
  9223                           tblptru	equ	0xFF8
  9224                           tblptrh	equ	0xFF7
  9225                           tblptrl	equ	0xFF6
  9226                           tablat	equ	0xFF5
  9227                           prodh	equ	0xFF4
  9228                           prodl	equ	0xFF3
  9229                           intcon	equ	0xFF2
  9230                           intcon2	equ	0xFF1
  9231                           intcon3	equ	0xFF0
  9232                           postinc0	equ	0xFEE
  9233                           fsr0h	equ	0xFEA
  9234                           fsr0l	equ	0xFE9
  9235                           wreg	equ	0xFE8
  9236                           postdec1	equ	0xFE5
  9237                           fsr1h	equ	0xFE2
  9238                           fsr1l	equ	0xFE1
  9239                           bsr	equ	0xFE0
  9240                           indf2	equ	0xFDF
  9241                           postinc2	equ	0xFDE
  9242                           postdec2	equ	0xFDD
  9243                           fsr2h	equ	0xFDA
  9244                           fsr2l	equ	0xFD9
  9245                           status	equ	0xFD8
  9246                           
  9247 ;; *************** function i2___wmul *****************
  9248 ;; Defined at:
  9249 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9252 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  __wmul          2    4[BANK0 ] unsigned int 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  2    0[BANK0 ] unsigned int 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2, status,0, prodl, prodh
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9264 ;;      Params:         0       4       0       0
  9265 ;;      Locals:         0       2       0       0
  9266 ;;      Temps:          0       0       0       0
  9267 ;;      Totals:         0       6       0       0
  9268 ;;Total ram usage:        6 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; This function calls:
  9271 ;;		Nothing
  9272 ;; This function is called by:
  9273 ;;		_ISR_Alta
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           	psect	text20
  9278  002B4E                     __ptext20:
  9279                           	opt stack 0
  9280  002B4E                     i2___wmul:
  9281                           	opt stack 24
  9282                           
  9283                           ;incstack = 0
  9284  002B4E  0100               	movlb	0	; () banked
  9285  002B50  51A9               	movf	i2___wmul@multiplier& (0+255),w,b
  9286  002B52  0100               	movlb	0	; () banked
  9287  002B54  03AB               	mulwf	i2___wmul@multiplicand& (0+255),b
  9288  002B56  CFF3 F0AD          	movff	prodl,i2___wmul@product
  9289  002B5A  CFF4 F0AE          	movff	prodh,i2___wmul@product+1
  9290  002B5E  0100               	movlb	0	; () banked
  9291  002B60  51A9               	movf	i2___wmul@multiplier& (0+255),w,b
  9292  002B62  0100               	movlb	0	; () banked
  9293  002B64  03AC               	mulwf	(i2___wmul@multiplicand+1)& (0+255),b
  9294  002B66  50F3               	movf	prodl,w,c
  9295  002B68  0100               	movlb	0	; () banked
  9296  002B6A  27AE               	addwf	(i2___wmul@product+1)& (0+255),f,b
  9297  002B6C  0100               	movlb	0	; () banked
  9298  002B6E  51AA               	movf	(i2___wmul@multiplier+1)& (0+255),w,b
  9299  002B70  0100               	movlb	0	; () banked
  9300  002B72  03AB               	mulwf	i2___wmul@multiplicand& (0+255),b
  9301  002B74  50F3               	movf	prodl,w,c
  9302  002B76  0100               	movlb	0	; () banked
  9303  002B78  27AE               	addwf	(i2___wmul@product+1)& (0+255),f,b
  9304                           
  9305                           ; BSR set to: 0
  9306  002B7A  C0AD  F0A9         	movff	i2___wmul@product,?i2___wmul
  9307  002B7E  C0AE  F0AA         	movff	i2___wmul@product+1,?i2___wmul+1
  9308  002B82  D000               	goto	i2l780
  9309  002B84                     i2l780:
  9310                           
  9311                           ; BSR set to: 0
  9312  002B84  0012               	return		;funcret
  9313  002B86                     __end_ofi2___wmul:
  9314                           	opt stack 0
  9315                           pclatu	equ	0xFFB
  9316                           pclath	equ	0xFFA
  9317                           tblptru	equ	0xFF8
  9318                           tblptrh	equ	0xFF7
  9319                           tblptrl	equ	0xFF6
  9320                           tablat	equ	0xFF5
  9321                           prodh	equ	0xFF4
  9322                           prodl	equ	0xFF3
  9323                           intcon	equ	0xFF2
  9324                           intcon2	equ	0xFF1
  9325                           intcon3	equ	0xFF0
  9326                           postinc0	equ	0xFEE
  9327                           fsr0h	equ	0xFEA
  9328                           fsr0l	equ	0xFE9
  9329                           wreg	equ	0xFE8
  9330                           postdec1	equ	0xFE5
  9331                           fsr1h	equ	0xFE2
  9332                           fsr1l	equ	0xFE1
  9333                           bsr	equ	0xFE0
  9334                           indf2	equ	0xFDF
  9335                           postinc2	equ	0xFDE
  9336                           postdec2	equ	0xFDD
  9337                           fsr2h	equ	0xFDA
  9338                           fsr2l	equ	0xFD9
  9339                           status	equ	0xFD8
  9340                           
  9341 ;; *************** function i2___lwdiv *****************
  9342 ;; Defined at:
  9343 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  dividend        2    0[BANK0 ] unsigned int 
  9346 ;;  divisor         2    2[BANK0 ] unsigned int 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  __lwdiv         2    5[BANK0 ] unsigned int 
  9349 ;;  __lwdiv         1    4[BANK0 ] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  2    0[BANK0 ] unsigned int 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9359 ;;      Params:         0       4       0       0
  9360 ;;      Locals:         0       3       0       0
  9361 ;;      Temps:          0       0       0       0
  9362 ;;      Totals:         0       7       0       0
  9363 ;;Total ram usage:        7 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_ISR_Alta
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text21
  9373  0029F6                     __ptext21:
  9374                           	opt stack 0
  9375  0029F6                     i2___lwdiv:
  9376                           	opt stack 24
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;incstack = 0
  9380  0029F6  0E00               	movlw	0
  9381  0029F8  0100               	movlb	0	; () banked
  9382  0029FA  6FAF               	movwf	(i2___lwdiv@quotient+1)& (0+255),b
  9383  0029FC  0E00               	movlw	0
  9384  0029FE  6FAE               	movwf	i2___lwdiv@quotient& (0+255),b
  9385                           
  9386                           ; BSR set to: 0
  9387  002A00  0100               	movlb	0	; () banked
  9388  002A02  51AB               	movf	i2___lwdiv@divisor& (0+255),w,b
  9389  002A04  0100               	movlb	0	; () banked
  9390  002A06  11AC               	iorwf	(i2___lwdiv@divisor+1)& (0+255),w,b
  9391  002A08  B4D8               	btfsc	status,2,c
  9392  002A0A  D031               	goto	i2l1298
  9393                           
  9394                           ; BSR set to: 0
  9395  002A0C  0E01               	movlw	1
  9396  002A0E  0100               	movlb	0	; () banked
  9397  002A10  6FAD               	movwf	i2___lwdiv@counter& (0+255),b
  9398  002A12  D007               	goto	i2l5315
  9399  002A14                     i2l5313:
  9400                           
  9401                           ; BSR set to: 0
  9402  002A14  0100               	movlb	0	; () banked
  9403  002A16  90D8               	bcf	status,0,c
  9404  002A18  37AB               	rlcf	i2___lwdiv@divisor& (0+255),f,b
  9405  002A1A  37AC               	rlcf	(i2___lwdiv@divisor+1)& (0+255),f,b
  9406  002A1C  0100               	movlb	0	; () banked
  9407  002A1E  2BAD               	incf	i2___lwdiv@counter& (0+255),f,b
  9408  002A20  D000               	goto	i2l5315
  9409  002A22                     i2l5315:
  9410                           
  9411                           ; BSR set to: 0
  9412  002A22  0100               	movlb	0	; () banked
  9413  002A24  BFAC               	btfsc	(i2___lwdiv@divisor+1)& (0+255),7,b
  9414  002A26  D002               	goto	i2l5317
  9415  002A28  D7F5               	goto	i2l5313
  9416                           
  9417                           ; BSR set to: 0
  9418  002A2A  D000               	goto	i2l5317
  9419  002A2C                     i2l5317:
  9420                           
  9421                           ; BSR set to: 0
  9422  002A2C  0100               	movlb	0	; () banked
  9423  002A2E  90D8               	bcf	status,0,c
  9424  002A30  37AE               	rlcf	i2___lwdiv@quotient& (0+255),f,b
  9425  002A32  37AF               	rlcf	(i2___lwdiv@quotient+1)& (0+255),f,b
  9426                           
  9427                           ; BSR set to: 0
  9428  002A34  0100               	movlb	0	; () banked
  9429  002A36  51AB               	movf	i2___lwdiv@divisor& (0+255),w,b
  9430  002A38  0100               	movlb	0	; () banked
  9431  002A3A  5DA9               	subwf	i2___lwdiv@dividend& (0+255),w,b
  9432  002A3C  0100               	movlb	0	; () banked
  9433  002A3E  51AC               	movf	(i2___lwdiv@divisor+1)& (0+255),w,b
  9434  002A40  0100               	movlb	0	; () banked
  9435  002A42  59AA               	subwfb	(i2___lwdiv@dividend+1)& (0+255),w,b
  9436  002A44  A0D8               	btfss	status,0,c
  9437  002A46  D00B               	goto	i2l5325
  9438                           
  9439                           ; BSR set to: 0
  9440  002A48  0100               	movlb	0	; () banked
  9441  002A4A  51AB               	movf	i2___lwdiv@divisor& (0+255),w,b
  9442  002A4C  0100               	movlb	0	; () banked
  9443  002A4E  5FA9               	subwf	i2___lwdiv@dividend& (0+255),f,b
  9444  002A50  0100               	movlb	0	; () banked
  9445  002A52  51AC               	movf	(i2___lwdiv@divisor+1)& (0+255),w,b
  9446  002A54  0100               	movlb	0	; () banked
  9447  002A56  5BAA               	subwfb	(i2___lwdiv@dividend+1)& (0+255),f,b
  9448                           
  9449                           ; BSR set to: 0
  9450  002A58  0100               	movlb	0	; () banked
  9451  002A5A  81AE               	bsf	i2___lwdiv@quotient& (0+255),0,b
  9452  002A5C  D000               	goto	i2l5325
  9453  002A5E                     i2l5325:
  9454                           
  9455                           ; BSR set to: 0
  9456  002A5E  0100               	movlb	0	; () banked
  9457  002A60  90D8               	bcf	status,0,c
  9458  002A62  33AC               	rrcf	(i2___lwdiv@divisor+1)& (0+255),f,b
  9459  002A64  33AB               	rrcf	i2___lwdiv@divisor& (0+255),f,b
  9460                           
  9461                           ; BSR set to: 0
  9462  002A66  0100               	movlb	0	; () banked
  9463  002A68  2FAD               	decfsz	i2___lwdiv@counter& (0+255),f,b
  9464  002A6A  D7E0               	goto	i2l5317
  9465  002A6C  D000               	goto	i2l1298
  9466  002A6E                     i2l1298:
  9467                           
  9468                           ; BSR set to: 0
  9469  002A6E  C0AE  F0A9         	movff	i2___lwdiv@quotient,?i2___lwdiv
  9470  002A72  C0AF  F0AA         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  9471                           
  9472                           ; BSR set to: 0
  9473  002A76  0012               	return		;funcret
  9474  002A78                     __end_ofi2___lwdiv:
  9475                           	opt stack 0
  9476                           pclatu	equ	0xFFB
  9477                           pclath	equ	0xFFA
  9478                           tblptru	equ	0xFF8
  9479                           tblptrh	equ	0xFF7
  9480                           tblptrl	equ	0xFF6
  9481                           tablat	equ	0xFF5
  9482                           prodh	equ	0xFF4
  9483                           prodl	equ	0xFF3
  9484                           intcon	equ	0xFF2
  9485                           intcon2	equ	0xFF1
  9486                           intcon3	equ	0xFF0
  9487                           postinc0	equ	0xFEE
  9488                           fsr0h	equ	0xFEA
  9489                           fsr0l	equ	0xFE9
  9490                           wreg	equ	0xFE8
  9491                           postdec1	equ	0xFE5
  9492                           fsr1h	equ	0xFE2
  9493                           fsr1l	equ	0xFE1
  9494                           bsr	equ	0xFE0
  9495                           indf2	equ	0xFDF
  9496                           postinc2	equ	0xFDE
  9497                           postdec2	equ	0xFDD
  9498                           fsr2h	equ	0xFDA
  9499                           fsr2l	equ	0xFD9
  9500                           status	equ	0xFD8
  9501                           
  9502 ;; *************** function i2___awdiv *****************
  9503 ;; Defined at:
  9504 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  dividend        2    6[BANK0 ] int 
  9507 ;;  divisor         2    8[BANK0 ] int 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;  __awdiv         2   12[BANK0 ] int 
  9510 ;;  __awdiv         1   11[BANK0 ] unsigned char 
  9511 ;;  __awdiv         1   10[BANK0 ] unsigned char 
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  2    6[BANK0 ] int 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9521 ;;      Params:         0       4       0       0
  9522 ;;      Locals:         0       4       0       0
  9523 ;;      Temps:          0       0       0       0
  9524 ;;      Totals:         0       8       0       0
  9525 ;;Total ram usage:        8 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_ISR_Alta
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text22
  9535  002746                     __ptext22:
  9536                           	opt stack 0
  9537  002746                     i2___awdiv:
  9538                           	opt stack 24
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;incstack = 0
  9542  002746  0E00               	movlw	0
  9543  002748  0100               	movlb	0	; () banked
  9544  00274A  6FB4               	movwf	i2___awdiv@sign& (0+255),b
  9545                           
  9546                           ; BSR set to: 0
  9547  00274C  0100               	movlb	0	; () banked
  9548  00274E  AFB2               	btfss	(i2___awdiv@divisor+1)& (0+255),7,b
  9549  002750  D009               	goto	i2l5271
  9550                           
  9551                           ; BSR set to: 0
  9552  002752  0100               	movlb	0	; () banked
  9553  002754  6DB1               	negf	i2___awdiv@divisor& (0+255),b
  9554  002756  1FB2               	comf	(i2___awdiv@divisor+1)& (0+255),f,b
  9555  002758  B0D8               	btfsc	status,0,c
  9556  00275A  2BB2               	incf	(i2___awdiv@divisor+1)& (0+255),f,b
  9557                           
  9558                           ; BSR set to: 0
  9559  00275C  0E01               	movlw	1
  9560  00275E  0100               	movlb	0	; () banked
  9561  002760  6FB4               	movwf	i2___awdiv@sign& (0+255),b
  9562  002762  D000               	goto	i2l5271
  9563  002764                     i2l5271:
  9564                           
  9565                           ; BSR set to: 0
  9566  002764  0100               	movlb	0	; () banked
  9567  002766  AFB0               	btfss	(i2___awdiv@dividend+1)& (0+255),7,b
  9568  002768  D009               	goto	i2l5277
  9569                           
  9570                           ; BSR set to: 0
  9571  00276A  0100               	movlb	0	; () banked
  9572  00276C  6DAF               	negf	i2___awdiv@dividend& (0+255),b
  9573  00276E  1FB0               	comf	(i2___awdiv@dividend+1)& (0+255),f,b
  9574  002770  B0D8               	btfsc	status,0,c
  9575  002772  2BB0               	incf	(i2___awdiv@dividend+1)& (0+255),f,b
  9576                           
  9577                           ; BSR set to: 0
  9578  002774  0E01               	movlw	1
  9579  002776  0100               	movlb	0	; () banked
  9580  002778  1BB4               	xorwf	i2___awdiv@sign& (0+255),f,b
  9581  00277A  D000               	goto	i2l5277
  9582  00277C                     i2l5277:
  9583                           
  9584                           ; BSR set to: 0
  9585  00277C  0E00               	movlw	0
  9586  00277E  0100               	movlb	0	; () banked
  9587  002780  6FB6               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9588  002782  0E00               	movlw	0
  9589  002784  6FB5               	movwf	i2___awdiv@quotient& (0+255),b
  9590                           
  9591                           ; BSR set to: 0
  9592  002786  0100               	movlb	0	; () banked
  9593  002788  51B1               	movf	i2___awdiv@divisor& (0+255),w,b
  9594  00278A  0100               	movlb	0	; () banked
  9595  00278C  11B2               	iorwf	(i2___awdiv@divisor+1)& (0+255),w,b
  9596  00278E  B4D8               	btfsc	status,2,c
  9597  002790  D031               	goto	i2l5299
  9598                           
  9599                           ; BSR set to: 0
  9600  002792  0E01               	movlw	1
  9601  002794  0100               	movlb	0	; () banked
  9602  002796  6FB3               	movwf	i2___awdiv@counter& (0+255),b
  9603  002798  D007               	goto	i2l5285
  9604  00279A                     i2l5283:
  9605                           
  9606                           ; BSR set to: 0
  9607  00279A  0100               	movlb	0	; () banked
  9608  00279C  90D8               	bcf	status,0,c
  9609  00279E  37B1               	rlcf	i2___awdiv@divisor& (0+255),f,b
  9610  0027A0  37B2               	rlcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9611  0027A2  0100               	movlb	0	; () banked
  9612  0027A4  2BB3               	incf	i2___awdiv@counter& (0+255),f,b
  9613  0027A6  D000               	goto	i2l5285
  9614  0027A8                     i2l5285:
  9615                           
  9616                           ; BSR set to: 0
  9617  0027A8  0100               	movlb	0	; () banked
  9618  0027AA  BFB2               	btfsc	(i2___awdiv@divisor+1)& (0+255),7,b
  9619  0027AC  D002               	goto	i2l5287
  9620  0027AE  D7F5               	goto	i2l5283
  9621                           
  9622                           ; BSR set to: 0
  9623  0027B0  D000               	goto	i2l5287
  9624  0027B2                     i2l5287:
  9625                           
  9626                           ; BSR set to: 0
  9627  0027B2  0100               	movlb	0	; () banked
  9628  0027B4  90D8               	bcf	status,0,c
  9629  0027B6  37B5               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9630  0027B8  37B6               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9631                           
  9632                           ; BSR set to: 0
  9633  0027BA  0100               	movlb	0	; () banked
  9634  0027BC  51B1               	movf	i2___awdiv@divisor& (0+255),w,b
  9635  0027BE  0100               	movlb	0	; () banked
  9636  0027C0  5DAF               	subwf	i2___awdiv@dividend& (0+255),w,b
  9637  0027C2  0100               	movlb	0	; () banked
  9638  0027C4  51B2               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9639  0027C6  0100               	movlb	0	; () banked
  9640  0027C8  59B0               	subwfb	(i2___awdiv@dividend+1)& (0+255),w,b
  9641  0027CA  A0D8               	btfss	status,0,c
  9642  0027CC  D00B               	goto	i2l5295
  9643                           
  9644                           ; BSR set to: 0
  9645  0027CE  0100               	movlb	0	; () banked
  9646  0027D0  51B1               	movf	i2___awdiv@divisor& (0+255),w,b
  9647  0027D2  0100               	movlb	0	; () banked
  9648  0027D4  5FAF               	subwf	i2___awdiv@dividend& (0+255),f,b
  9649  0027D6  0100               	movlb	0	; () banked
  9650  0027D8  51B2               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9651  0027DA  0100               	movlb	0	; () banked
  9652  0027DC  5BB0               	subwfb	(i2___awdiv@dividend+1)& (0+255),f,b
  9653                           
  9654                           ; BSR set to: 0
  9655  0027DE  0100               	movlb	0	; () banked
  9656  0027E0  81B5               	bsf	i2___awdiv@quotient& (0+255),0,b
  9657  0027E2  D000               	goto	i2l5295
  9658  0027E4                     i2l5295:
  9659                           
  9660                           ; BSR set to: 0
  9661  0027E4  0100               	movlb	0	; () banked
  9662  0027E6  90D8               	bcf	status,0,c
  9663  0027E8  33B2               	rrcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9664  0027EA  33B1               	rrcf	i2___awdiv@divisor& (0+255),f,b
  9665                           
  9666                           ; BSR set to: 0
  9667  0027EC  0100               	movlb	0	; () banked
  9668  0027EE  2FB3               	decfsz	i2___awdiv@counter& (0+255),f,b
  9669  0027F0  D7E0               	goto	i2l5287
  9670                           
  9671                           ; BSR set to: 0
  9672  0027F2  D000               	goto	i2l5299
  9673  0027F4                     i2l5299:
  9674                           
  9675                           ; BSR set to: 0
  9676  0027F4  0100               	movlb	0	; () banked
  9677  0027F6  51B4               	movf	i2___awdiv@sign& (0+255),w,b
  9678  0027F8  0100               	movlb	0	; () banked
  9679  0027FA  B4D8               	btfsc	status,2,c
  9680  0027FC  D006               	goto	i2l5303
  9681                           
  9682                           ; BSR set to: 0
  9683  0027FE  0100               	movlb	0	; () banked
  9684  002800  6DB5               	negf	i2___awdiv@quotient& (0+255),b
  9685  002802  1FB6               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9686  002804  B0D8               	btfsc	status,0,c
  9687  002806  2BB6               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9688  002808  D000               	goto	i2l5303
  9689  00280A                     i2l5303:
  9690                           
  9691                           ; BSR set to: 0
  9692  00280A  C0B5  F0AF         	movff	i2___awdiv@quotient,?i2___awdiv
  9693  00280E  C0B6  F0B0         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9694  002812  D000               	goto	i2l973
  9695  002814                     i2l973:
  9696                           
  9697                           ; BSR set to: 0
  9698  002814  0012               	return		;funcret
  9699  002816                     __end_ofi2___awdiv:
  9700                           	opt stack 0
  9701                           pclatu	equ	0xFFB
  9702                           pclath	equ	0xFFA
  9703                           tblptru	equ	0xFF8
  9704                           tblptrh	equ	0xFF7
  9705                           tblptrl	equ	0xFF6
  9706                           tablat	equ	0xFF5
  9707                           prodh	equ	0xFF4
  9708                           prodl	equ	0xFF3
  9709                           intcon	equ	0xFF2
  9710                           intcon2	equ	0xFF1
  9711                           intcon3	equ	0xFF0
  9712                           postinc0	equ	0xFEE
  9713                           fsr0h	equ	0xFEA
  9714                           fsr0l	equ	0xFE9
  9715                           wreg	equ	0xFE8
  9716                           postdec1	equ	0xFE5
  9717                           fsr1h	equ	0xFE2
  9718                           fsr1l	equ	0xFE1
  9719                           bsr	equ	0xFE0
  9720                           indf2	equ	0xFDF
  9721                           postinc2	equ	0xFDE
  9722                           postdec2	equ	0xFDD
  9723                           fsr2h	equ	0xFDA
  9724                           fsr2l	equ	0xFD9
  9725                           status	equ	0xFD8
  9726                           
  9727 ;; *************** function _WriteTimer0 *****************
  9728 ;; Defined at:
  9729 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;  timer0          2    0[BANK0 ] unsigned int 
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;  timer           2    2[BANK0 ] struct Timers
  9734 ;; Return value:  Size  Location     Type
  9735 ;;		None               void
  9736 ;; Registers used:
  9737 ;;		None
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9743 ;;      Params:         0       2       0       0
  9744 ;;      Locals:         0       2       0       0
  9745 ;;      Temps:          0       0       0       0
  9746 ;;      Totals:         0       4       0       0
  9747 ;;Total ram usage:        4 bytes
  9748 ;; Hardware stack levels used:    1
  9749 ;; This function calls:
  9750 ;;		Nothing
  9751 ;; This function is called by:
  9752 ;;		_ISR_Alta
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text23
  9757  002BDC                     __ptext23:
  9758                           	opt stack 0
  9759  002BDC                     _WriteTimer0:
  9760                           	opt stack 24
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;incstack = 0
  9764  002BDC  C0A9  F0AB         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9765  002BE0  C0AA  F0AC         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9766  002BE4  C0AC  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9767  002BE8  C0AB  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9768  002BEC  0012               	return		;funcret
  9769  002BEE                     __end_of_WriteTimer0:
  9770                           	opt stack 0
  9771  0000                     pclatu	equ	0xFFB
  9772                           pclath	equ	0xFFA
  9773                           tblptru	equ	0xFF8
  9774                           tblptrh	equ	0xFF7
  9775                           tblptrl	equ	0xFF6
  9776                           tablat	equ	0xFF5
  9777                           prodh	equ	0xFF4
  9778                           prodl	equ	0xFF3
  9779                           intcon	equ	0xFF2
  9780                           intcon2	equ	0xFF1
  9781                           intcon3	equ	0xFF0
  9782                           postinc0	equ	0xFEE
  9783                           fsr0h	equ	0xFEA
  9784                           fsr0l	equ	0xFE9
  9785                           wreg	equ	0xFE8
  9786                           postdec1	equ	0xFE5
  9787                           fsr1h	equ	0xFE2
  9788                           fsr1l	equ	0xFE1
  9789                           bsr	equ	0xFE0
  9790                           indf2	equ	0xFDF
  9791                           postinc2	equ	0xFDE
  9792                           postdec2	equ	0xFDD
  9793                           fsr2h	equ	0xFDA
  9794                           fsr2l	equ	0xFD9
  9795                           status	equ	0xFD8
  9796                           pclatu	equ	0xFFB
  9797                           pclath	equ	0xFFA
  9798                           tblptru	equ	0xFF8
  9799                           tblptrh	equ	0xFF7
  9800                           tblptrl	equ	0xFF6
  9801                           tablat	equ	0xFF5
  9802                           prodh	equ	0xFF4
  9803                           prodl	equ	0xFF3
  9804                           intcon	equ	0xFF2
  9805                           intcon2	equ	0xFF1
  9806                           intcon3	equ	0xFF0
  9807                           postinc0	equ	0xFEE
  9808                           fsr0h	equ	0xFEA
  9809                           fsr0l	equ	0xFE9
  9810                           wreg	equ	0xFE8
  9811                           postdec1	equ	0xFE5
  9812                           fsr1h	equ	0xFE2
  9813                           fsr1l	equ	0xFE1
  9814                           bsr	equ	0xFE0
  9815                           indf2	equ	0xFDF
  9816                           postinc2	equ	0xFDE
  9817                           postdec2	equ	0xFDD
  9818                           fsr2h	equ	0xFDA
  9819                           fsr2l	equ	0xFD9
  9820                           status	equ	0xFD8
  9821                           
  9822                           	psect	param0
  9823  0000                     pclatu	equ	0xFFB
  9824                           pclath	equ	0xFFA
  9825                           tblptru	equ	0xFF8
  9826                           tblptrh	equ	0xFF7
  9827                           tblptrl	equ	0xFF6
  9828                           tablat	equ	0xFF5
  9829                           prodh	equ	0xFF4
  9830                           prodl	equ	0xFF3
  9831                           intcon	equ	0xFF2
  9832                           intcon2	equ	0xFF1
  9833                           intcon3	equ	0xFF0
  9834                           postinc0	equ	0xFEE
  9835                           fsr0h	equ	0xFEA
  9836                           fsr0l	equ	0xFE9
  9837                           wreg	equ	0xFE8
  9838                           postdec1	equ	0xFE5
  9839                           fsr1h	equ	0xFE2
  9840                           fsr1l	equ	0xFE1
  9841                           bsr	equ	0xFE0
  9842                           indf2	equ	0xFDF
  9843                           postinc2	equ	0xFDE
  9844                           postdec2	equ	0xFDD
  9845                           fsr2h	equ	0xFDA
  9846                           fsr2l	equ	0xFD9
  9847                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      74
    BANK0           160     42     123
    BANK1           256     23      23
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), remote_frame_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->___wmul
    _remote_frame_handler->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___lwdiv->___wmul

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   21576
                                             21 BANK1      2     2      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                            ___awdiv
                            ___lldiv
                            ___lwdiv
                             ___wmul
               _board_initialization
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 0     0      0    5726
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1092
                                             36 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                             36 BANK0      4     4      0
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK1     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             36 BANK0      5     0      5
                                              0 BANK1      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             36 BANK0      5     0      5
                                              0 BANK1      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     717
                                              0 BANK1      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     549
                                             36 BANK0      5     5      0
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     683
                                             36 BANK0      4     0      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           18    18      0    1387
                                             12 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     226
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1445
                                             14 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                          i2___lwdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     296
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     381
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                              6 BANK0      8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   ___awdiv
   ___lldiv
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___lbdiv

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___lwdiv
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     17      17       6        9.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2A      7B       4       76.9%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     1E      4A       1       77.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DC       9        0.0%
DATA                 0      0      DC      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jun 15 15:03:08 2016

           ??_CANisTXwarningON 00CD                              _x 024A                              _y 024B  
         __end_of_CANSetFilter 0CBC                   ___awdiv@sign 0101                             bsr 000FE0  
          ___wmul@multiplicand 00CF             i2___lwdiv@dividend 00A9                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000  
                          l400 112A                            l403 11E6                            l500 08F0  
                          l412 13A4                            l404 11EA                            l501 08FC  
                          l413 13A8                            l405 12E4                            l510 0A0C  
                          l502 0900                            l414 13B4                            l406 1272  
                          l511 0A10                            l503 090C                            l407 127C  
                          l520 0B20                            l512 0A1C                            l408 1286  
                          l521 0B2C                            l513 0A20                            l409 1290  
                          l530 0C3C                            l522 0B30                            l514 0A2C  
                          l506 09EC                            l450 1BC8                            l442 1B88  
                          l531 0C40                            l523 0B3C                            l507 09F0  
                          l443 1B8C                            l532 0C4C                            l524 0B40  
                          l508 09FC                            l460 1CD8                            l444 1B98  
                          l380 0D7C                            l533 0C50                            l525 0B4C  
                          l517 0B0C                            l509 0A00                            l461 1CE4  
                          l453 1CA4                            l445 1B9C                            l373 0F46  
                          l534 0C5C                            l518 0B10                            l454 1CA8  
                          l446 1BA8                            l390 0F60                            l374 0CD2  
                          l535 0C60                            l519 0B1C                            l455 1CB4  
                          l463 1D32                            l447 1BAC                            l391 105A  
                          l383 0E90                            l375 0CD6                            l536 0C6C  
                          l528 0C2C                            l480 06C2                            l456 1CB8  
                          l448 1BB8                            l368 23D0                            l392 0FE8  
                          l384 0E94                            l376 0DD0                            l720 2056  
                          l553 2BFA                            l529 0C30                            l481 06CE  
                          l473 068E                            l457 1CC4                            l449 1BBC  
                          l369 23DA                            l393 0FF2                            l385 0EA0  
                          l377 0D5E                            l721 205E                            l538 0CBA  
                          l490 07DC                            l474 0692                            l458 1CC8  
                          l394 0FFC                            l378 0D68                            l491 07E0  
                          l475 069E                            l459 1CD4                            l395 1006  
                          l387 145A                            l379 0D72                            l556 2C08  
                          l492 07EC                            l484 07AC                            l476 06A2  
                          l388 11D0                            l485 07B0                            l477 06AE  
                          l389 0F5C                            l725 209C                            l486 07BC  
                          l478 06B2                            l566 2BA4                            l398 111A  
                          l742 221A                            l726 20DC                            l495 08CC  
                          l487 07C0                            l479 06BE                            l567 2BAA  
                          l399 111E                            l751 2670                            l496 08D0  
                          l488 07CC                            l736 2136                            l497 08DC  
                          l489 07D0                            l498 08E0                            l499 08EC  
                          l780 2B4C                            l764 2674                            l973 2744  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 0082                            wreg 000FE8                   _steering_dir 0249  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l1235 28CA  
                         l1298 29EC                           l5201 2714                           l5205 2724  
                         l5221 2856                           l4317 2BB6                           l5231 28B6  
                         l5223 2860                           l4351 1AFC                           l4335 1A44  
                         l5143 25A0                           l5135 252A                           l5209 273A  
                         l5241 2992                           l4505 0540                           l4433 0252  
                         l4409 1CEA                           l5219 2844                           l5243 29A0  
                         l4523 05FC                           l4451 030C                           l5139 2566  
                         l5253 29DC                           l5245 29AA                           l5165 2660  
                         l5149 25D6                           l5191 26D8                           l5183 26AC  
                         l4551 06D4                           l4383 1C16                           l5193 26E2  
                         l5177 2694                           l4721 0C72                           l4625 095A  
                         l4377 1BCE                           l4619 0912                           l5507 2232  
                         l5443 20A4                           l5189 26CA                           l4653 0A32  
                         l4557 071C                           l4469 03C8                           l4813 0D88  
                         l5509 226E                           l5461 20E2                           l5453 20C2  
                         l5437 2094                           l5429 2042                           l4591 083A  
                         l4487 0484                           l5471 212E                           l4585 07F2  
                         l4753 2362                           l4833 0E84                           l5481 218A  
                         l5457 20D0                           l5449 20B6                           l4659 0A7A  
                         l4771 23E6                           l4915 1130                           l5467 2108  
                         l4693 0B9A                           l4773 242A                           l4765 23C8  
                         l4909 110E                           l4687 0B52                           l4767 23DE  
                         l4759 2372                           l4839 0EA6                           l5479 214E  
                         l5499 2212                           l4965 129C                           l4991 13BA  
                         l4985 1398                           l4889 1012                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           _LATD 000F8C  
                         _LATE 000F8D                           u5120 1A76                           u6010 0C92  
                         u5210 1BEE                           u5125 1A6A                           u6015 0C86  
                         u5215 1BE2                           u5135 1AD6                           u5400 0342  
                         u5320 01CC                           u5080 19BE                           u6140 0DA8  
                         u5405 0336                           u5325 01C0                           u5085 19B2  
                         u6150 0DF4                           u5415 03A2                           u5335 022C  
                         u5095 1A1E                           u5520 0576                           u5440 03FE  
                         u5360 0286                           u6400 12BC                           u6145 0D9C  
                         u5610 06F4                           u5290 1D0A                           u6410 1308  
                         u6155 0DE8                           u5525 056A                           u5445 03F2  
                         u5365 027A                           u6405 12B0                           u6165 0E54  
                         u6270 1032                           u5615 06E8                           u5535 05D6  
                         u5455 045E                           u5375 02E6                           u5295 1CFE  
                         u6415 12FC                           u5480 04BA                           u6280 107E  
                         u6425 1368                           u6275 1026                           u5485 04AE  
                         u6285 1072                           u5495 051A                           u6295 10DE  
                         u6480 2BF6                           u6490 2C04                           u5930 0B72  
                         u5850 0A52                           u5770 0932                           u5690 0812  
                         u5935 0B66                           u5855 0A46                           u5775 0926  
                         u5695 0806            __size_of_CANSetMask 03AA                           _main 2034  
                         fsr0h 000FEA                           fsr1h 000FE2             i2___lwdiv@quotient 00AE  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _step 0029  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 018E                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000               _CANOperationMode 2BAC                   _status_array 00A1  
              _brake_value_inc 0025           _remote_frame_handler 24DA     __size_of_CANreceiveMessage 052E  
                        ?_main 002A                __end_of___awdiv 2746                __end_of___lbdiv 2B16  
              __end_of___lldiv 28DC                          _T0CON 000FD5                ___awdiv@divisor 00CF  
                        _T1CON 000FCD                          _T3CON 000FB1             __size_of_ISR_Bassa 0176  
              __end_of___lwdiv 29F6                          i1l420 1708                          i1l428 1988  
                        i1l714 0148                          i1l571 2BD6                          i1l572 2BDA  
                        i1l708 00B8                          i2l690 1F44                          i2l780 2B84  
                        i2l685 1F5C                          i2l694 1FF6                          i2l687 1F5A  
                        i2l697 1FE0                          i2l699 1FFA                ___awdiv@counter 0100  
                        i2l973 2814                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2              _CANisRxReady$3175 002A                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 2034  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 010D  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0240           __end_of_CANisRxReady 2BDC  
                        tablat 000FF5         _distance_set_counter_1 0019         _distance_set_counter_2 001B  
         __end_of_CANisTxReady 2BAC               __end_ofi2___wmul 2B86                          status 000FD8  
              ___lbdiv@divisor 002A                ___lbdiv@counter 002C             __size_ofi2___awdiv 00D0  
           __size_ofi2___lwdiv 0082                __initialization 2A78                   __end_of_main 230C  
__size_of_board_initialization 0098               _brake_signal_CAN 0024          ?_remote_frame_handler 002A  
                       ??_main 0115                  __activetblptr 000002              _CANisTxReady$3173 00CD  
                       _CANCON 000F6F               ___awdiv@dividend 00CD                __CFG_BBSIZ$1024 000000  
                       i1l1216 2B14                         i1l4153 00BC                         i1l4147 0096  
                       i1l4171 011E                         i1l4139 0064                         i1l3701 1984  
                       i1l3621 164E                         i1l3613 15DC                         i1l4157 00DC  
                       i1l4183 0136                         i1l4175 0124                         i1l3633 16AE  
                       i1l3625 166E                         i1l3637 16CE                         i1l3629 168E  
                       i1l3639 1702                         i1l3575 1468                         i1l3911 2AF2  
                       i1l3905 2AE2                         i1l3921 2B10                         i1l3691 1914  
                       i1l3683 18D8                         i1l3675 1868                         i1l3579 1470  
                       i1l3917 2B06                         i1l3909 2AEA                         i1l3695 1932  
                       i1l3687 18F6                         i2l1298 2A6E                         i1l3699 1950  
                       i2l5303 280A                         i2l5313 2A14                         i2l5315 2A22  
                       i2l5325 2A5E                         i2l5317 2A2C                         i2l5271 2764  
                       i2l5351 1EBC                         i2l5409 1FC4                         i2l5361 1ED4  
                       i2l5353 1EC0                         i2l5283 279A                         i2l5285 27A8  
                       i2l5277 277C                         i2l5349 1EAE                         i2l5295 27E4  
                       i2l5287 27B2                         i2l5375 1F28                         i2l5299 27F4  
                       i2l5395 1F70                         _RXB0D0 000F66                         _RXB0D1 000F67  
                       _RXB0D2 000F68                         _RXB0D3 000F69                         _RXB0D4 000F6A  
                       _RXB1D0 000F56                         _RXB0D5 000F6B                         _RXB1D1 000F57  
                       _RXB0D6 000F6C                         _RXB1D2 000F58                         _RXB0D7 000F6D  
                       _RXB1D3 000F59                         _RXB1D4 000F5A                         _RXB1D5 000F5B  
                       _RXB1D6 000F5C                         _RXB1D7 000F5D                         _TXB0D0 000F46  
                       _TXB0D1 000F47                         _TXB0D2 000F48                         _TXB0D3 000F49  
                       _TXB1D0 000F36                         _TXB0D4 000F4A                         _TXB1D1 000F37  
                       _TXB0D5 000F4B                         _TXB1D2 000F38                         _TXB0D6 000F4C  
                       _TXB1D3 000F39                         _TXB0D7 000F4D                         _TXB2D0 000F26  
                       _TXB1D4 000F3A                         _TXB2D1 000F27                         _TXB1D5 000F3B  
                       _TXB2D2 000F28                         _TXB1D6 000F3C                         _TXB2D3 000F29  
                       _TXB1D7 000F3D                         _TXB2D4 000F2A                         _TXB2D5 000F2B  
                       _TXB2D6 000F2C                         _TXB2D7 000F2D             CANsendMessage@data 0104  
           CANsendMessage@tamp 0108              __end_of_ISR_Bassa 018E          __size_of_CANSetFilter 0B2A  
           _distance_set_value 001D                 __CFG_XINST$OFF 000000                         ___wmul 2B16  
                    ??___awdiv 00D1                      ??___lbdiv 002B                 __CFG_STVREN$ON 000000  
                    ??___lldiv 00CD                      ??___lwdiv 00D3                   ??_CANSetMask 0100  
                       clear_0 2A7E                         clear_1 2A8E               ___awdiv@quotient 0102  
               i2___awdiv@sign 00B4                __CFG_BOREN$BOHW 000000                   __pdataCOMRAM 004A  
            __end_ofi2___awdiv 2816              __end_ofi2___lwdiv 2A78                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  _home_position 0026  
                 _CANSetFilter 0192               ___lbdiv@dividend 002B                     __accesstop 0060  
      __end_of__initialization 2AC6             __end_of_CANSetMask 1D34                __CFG_PBADEN$OFF 000000  
                ___rparam_used 000000      __size_of_CANisRXwarningON 000E                 __pcstackCOMRAM 002A  
                    ?_ISR_Alta 002A                   __pidataBANK0 2C0A         ??_remote_frame_handler 00D3  
             ___lbdiv@quotient 002D                   _ENC1_measure 0240          CANSetFilter@numBuffer 0104  
                    ?i2___wmul 00A9      __size_of_CANisTXwarningON 000E                   _ENC2_measure 0241  
        __size_of_CANisRxReady 0018          __size_of_CANisTxReady 0026       __end_of_CANOperationMode 2BC4  
                   __pbssBANK0 0060        __size_of_CANsendMessage 07A0                     ??_ISR_Alta 00B7  
                      ?___wmul 00CD                     _gap_time_1 001F                     _gap_time_2 0021  
             WriteTimer0@timer 00AB                  ??_WriteTimer0 00AB                   _CANisRxReady 2BC4  
                      _CANSTAT 000F6E                   _CANisTxReady 2B86                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72                     ??i2___wmul 00AD  
                _int_counter_1 006C                  _int_counter_2 0070         __size_of_CANInitialize 01CE  
        _distance_reached_flag 0246                        _RXB0DLC 000F65                        _RXB1DLC 000F55  
                      _RXB0CON 000F60                        _RXB1CON 000F50                        _TXB0DLC 000F45  
                      _TXB1DLC 000F35                        _TXB2DLC 000F25                     _distance_1 0015  
                   _distance_2 0017            CANsendMessage@flags 0107                     _count_flag 0245  
                      __Hparam 0000                        __Lparam 0000                        ___awdiv 2676  
                      ___lbdiv 2AD0                        ___lldiv 2816                __size_of___wmul 0038  
                      ___lwdiv 2974           CANInitialize@propSeg 0112                        __pcinit 2A78  
                      __ramtop 0300                        __ptext0 2034                        __ptext1 24DA  
                      __ptext2 2B16                        __ptext3 0CBC                        __ptext4 2B86  
                      __ptext5 28DC                        __ptext6 230C                        __ptext7 198A  
                      __ptext8 0192                        __ptext9 2BAC                      _T0CONbits 000FD5  
                    _T1CONbits 000FCD                      _T3CONbits 000FB1            __end_of_WriteTimer0 2BEE  
       CANreceiveMessage@error 0034   __end_of_board_initialization 2974                 __pintcode_body 1D34  
         end_of_initialization 2AC6          _wheel_speed_average_1 0011          _wheel_speed_average_2 0078  
                _Analogic_Mode 0023                  __Lmediumconst 0000                        int_func 1D34  
          i2___wmul@multiplier 00A9               _CANisRXwarningON 2BFC                  _CANInitialize 230C  
              ___lldiv@divisor 0104                ___lldiv@counter 00D1                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTAbits 000F80                 CANSetMask@mask 00CD  
                    _PORTCbits 000F82                 CANSetMask@tamp 0105                 CANSetMask@type 00D1  
             _CANisTXwarningON 2BEE                      i2___awdiv 2746              i2___lwdiv@divisor 00AB  
                    i2___lwdiv 29F6              i2___lwdiv@counter 00AD        _clock_counter_reference 007C  
               _CANsendMessage 0CBC             _remote_frame_array 00D3               CANInitialize@BRP 010C  
             CANInitialize@SJW 010B                 ?_CANInitialize 0109             i2___awdiv@dividend 00AF  
                   ?_ISR_Bassa 002A              __size_of_ISR_Alta 202C                 __end_of___wmul 2B4E  
                __pidataCOMRAM 2C12                    _WriteTimer0 2BDC               i2___wmul@product 00AD  
          start_initialization 2A78             i2___awdiv@quotient 00B5              __size_ofi2___wmul 0038  
          CANSetMask@numBuffer 0104                     ?i2___awdiv 00AF         __end_of_CANsendMessage 145C  
                   ?i2___lwdiv 00A9              ?_CANOperationMode 002A             ??_CANOperationMode 00CD  
   CANInitialize@FilterConfig1 0113     CANInitialize@FilterConfig2 0114              _distance_set_flag 0247  
         _board_initialization 28DC                       ??___wmul 00D1                    __pdataBANK0 00D3  
             __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 019C             _brake_value_degree 0028  
       CANInitialize@phaseSeg1 0109         CANInitialize@phaseSeg2 010A                    __pbssCOMRAM 0001  
                __pcstackBANK0 00A9                  __pcstackBANK1 0100                    _data_debug1 0060  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72                ?_CANsendMessage 0100  
              ??_CANInitialize 010E             CANSetFilter@filter 00CD               ___lwdiv@dividend 0100  
        ?_board_initialization 002A                    ??_ISR_Bassa 0036                      __pintcode 0008  
                     ?___awdiv 00CD                       ?___lbdiv 002A                       ?___lldiv 0100  
                     ?___lwdiv 0100                    __pintcodelo 0018              WriteTimer0@timer0 00A9  
     __end_of_CANisRXwarningON 2C0A                    _brake_value 0027                    _COMSTATbits 000F74  
             ___lwdiv@quotient 0105                    ??i2___awdiv 00B3                    ??i2___lwdiv 00AD  
        CANreceiveMessage@tamp 0035                 ___wmul@product 00D1                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2   _delay_quartz_frequency_value 004A                       _PIE1bits 000F9D  
                     _IPR3bits 000FA5                       _PIE2bits 000FA0                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 2BFC                       i1u400_20 154A                       i1u400_26 154C  
                     i1u410_20 17B0                       i1u402_25 1560                       i1u410_26 17B2  
                     i1u411_20 17DA                       i1u411_26 17DC                       i1u413_25 17EE  
                     i1u408_25 16DA                       i1u419_25 195C                       i1u399_20 151C  
                     i1u399_26 151E                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _PIR3bits 000FA4                       _RXB0EIDH 000F63                       _RXB0EIDL 000F64  
                     _RXB1EIDH 000F53                       _RXB1EIDL 000F54                       _ISR_Alta 0008  
                     _RCONbits 000FD0               __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61  
                     _RXB0SIDL 000F62                       _RXF0EIDH 000F02                       _RXB1SIDH 000F51  
                     _RXF0EIDL 000F03                       _RXB1SIDL 000F52                       _RXF1EIDH 000F06  
                     _RXF1EIDL 000F07                       _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B  
                     _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F                       _RXF4EIDH 000F12  
                     _RXF4EIDL 000F13                       _RXF5EIDH 000F16                       _RXF5EIDL 000F17  
                     _RXF0SIDH 000F00                       _RXF0SIDL 000F01                       _TXB0EIDH 000F43  
                     _RXF1SIDH 000F04                       _TXB0EIDL 000F44                       _RXF1SIDL 000F05  
                     _TXB1EIDH 000F33                       _RXF2SIDH 000F08                       _TXB1EIDL 000F34  
                     _RXF2SIDL 000F09                       _TXB2EIDH 000F23                       _RXF3SIDH 000F0C  
                     _TXB2EIDL 000F24                       _RXF3SIDL 000F0D                       _RXF4SIDH 000F10  
                     _RXF4SIDL 000F11                       _RXF5SIDH 000F14                       _RXF5SIDL 000F15  
                     _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B                       _TXB0SIDH 000F41  
                     _RXM1EIDH 000F1E                       _TXB0SIDL 000F42                       _RXM1EIDL 000F1F  
                     _TXB1SIDH 000F31                       _TXB1SIDL 000F32                       _TXB2SIDH 000F21  
                     _TXB2SIDL 000F22                      _timer_off 0074                       _RXM0SIDH 000F18  
                     _RXM0SIDL 000F19                       _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D  
                     _RXERRCNT 000F75                       _TXERRCNT 000F76              ___wmul@multiplier 00CD  
                     i2___wmul 2B4E              i2___awdiv@divisor 00B1              i2___awdiv@counter 00B3  
                ?_CANSetFilter 00CD                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 2AA8                     _CANCONbits 000F6F                       __Hparam0 0000  
                     __Lparam0 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00D2  
                 _RXB1SIDLbits 000F52                     _CANSetMask 198A               __size_of___awdiv 00D0  
             __size_of___lbdiv 0046          i2___wmul@multiplicand 00AB               __size_of___lldiv 00C6  
             __size_of___lwdiv 0082                _remote_frame_id 0001                       _Tx_retry 0244  
                 ?_WriteTimer0 00A9                   _RXF0SIDLbits 000F01                ___lwdiv@divisor 0102  
                 _RXF1SIDLbits 000F05                  _TMR1_overflow 0242                ___lwdiv@counter 0104  
               ??_CANSetFilter 0100                       __ptext10 2974                       __ptext11 2816  
                     __ptext20 2B4E                       __ptext12 2676                       __ptext21 29F6  
                     __ptext13 2BEE                       __ptext22 2746                       __ptext14 2BFC  
                     __ptext23 2BDC                       __ptext16 2AD0                       __ptext17 145C  
                     __ptext18 2BC4                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 0106  
                 _remote_frame 0248                  _TMR3_overflow 0243                  __size_of_main 02D8  
         CANreceiveMessage@msg 002A                   _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32  
                     _timer_on 0005                   _TXB2SIDLbits 000F22      __size_of_CANOperationMode 0018  
                ?_CANisRxReady 002A                  ?_CANisTxReady 002A                    _RXB0DLCbits 000F65  
                  _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60  
                  _RXB1CONbits 000F50              _CANreceiveMessage 145C                   _RXM1SIDLbits 000F1D  
                   _INTCONbits 000FF2               ??_CANsendMessage 00CD                  _wheel_speed_1 0009  
                _wheel_speed_2 000D             ?_CANreceiveMessage 002A       CANsendMessage@identifier 0100  
 __end_of_remote_frame_handler 2676                       intlevel1 0000                       intlevel2 0000  
             CANSetFilter@tamp 0105               CANSetFilter@type 00D1            ??_CANreceiveMessage 002C  
             ___lldiv@dividend 0100                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00CD                 ??_CANisRxReady 002A  
                  ?_CANSetMask 00CD                 ??_CANisTxReady 00CD                 _distance_array 0091  
    __end_of_CANreceiveMessage 198A               ___lldiv@quotient 00CD              ?_CANisRXwarningON 002A  
                  _speed_array 0099             ??_CANisRXwarningON 00CD          _distance_actual_value 0068  
        __end_of_CANInitialize 24DA            _int_counter_1_count 007E            _int_counter_2_count 0080  
            ?_CANisTXwarningON 002A  
