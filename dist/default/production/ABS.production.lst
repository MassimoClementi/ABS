

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Feb 04 16:33:25 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataBANK0
    43  002842                     __pidataBANK0:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _delay_quartz_frequency_value
    47  002842  10                 	db	16
    48                           
    49                           ;initializer for _status_array
    50  002843  00                 	db	0
    51  002844  00                 	db	0
    52  002845  00                 	db	0
    53  002846  00                 	db	0
    54  002847  00                 	db	0
    55  002848  00                 	db	0
    56  002849  00                 	db	0
    57  00284A  01                 	db	1
    58  0000                     _RXB1CON	set	3920
    59  0000                     _RXB1CONbits	set	3920
    60  0000                     _RXB1D0	set	3926
    61  0000                     _RXB1D1	set	3927
    62  0000                     _RXB1D2	set	3928
    63  0000                     _RXB1D3	set	3929
    64  0000                     _RXB1D4	set	3930
    65  0000                     _RXB1D5	set	3931
    66  0000                     _RXB1D6	set	3932
    67  0000                     _RXB1D7	set	3933
    68  0000                     _RXB1DLC	set	3925
    69  0000                     _RXB1DLCbits	set	3925
    70  0000                     _RXB1EIDH	set	3923
    71  0000                     _RXB1EIDL	set	3924
    72  0000                     _RXB1SIDH	set	3921
    73  0000                     _RXB1SIDL	set	3922
    74  0000                     _RXB1SIDLbits	set	3922
    75  0000                     _RXF0EIDH	set	3842
    76  0000                     _RXF0EIDL	set	3843
    77  0000                     _RXF0SIDH	set	3840
    78  0000                     _RXF0SIDL	set	3841
    79  0000                     _RXF0SIDLbits	set	3841
    80  0000                     _RXF1EIDH	set	3846
    81  0000                     _RXF1EIDL	set	3847
    82  0000                     _RXF1SIDH	set	3844
    83  0000                     _RXF1SIDL	set	3845
    84  0000                     _RXF1SIDLbits	set	3845
    85  0000                     _RXF2EIDH	set	3850
    86  0000                     _RXF2EIDL	set	3851
    87  0000                     _RXF2SIDH	set	3848
    88  0000                     _RXF2SIDL	set	3849
    89  0000                     _RXF2SIDLbits	set	3849
    90  0000                     _RXF3EIDH	set	3854
    91  0000                     _RXF3EIDL	set	3855
    92  0000                     _RXF3SIDH	set	3852
    93  0000                     _RXF3SIDL	set	3853
    94  0000                     _RXF3SIDLbits	set	3853
    95  0000                     _RXF4EIDH	set	3858
    96  0000                     _RXF4EIDL	set	3859
    97  0000                     _RXF4SIDH	set	3856
    98  0000                     _RXF4SIDL	set	3857
    99  0000                     _RXF4SIDLbits	set	3857
   100  0000                     _RXF5EIDH	set	3862
   101  0000                     _RXF5EIDL	set	3863
   102  0000                     _RXF5SIDH	set	3860
   103  0000                     _RXF5SIDL	set	3861
   104  0000                     _RXF5SIDLbits	set	3861
   105  0000                     _RXM0EIDH	set	3866
   106  0000                     _RXM0EIDL	set	3867
   107  0000                     _RXM0SIDH	set	3864
   108  0000                     _RXM0SIDL	set	3865
   109  0000                     _RXM0SIDLbits	set	3865
   110  0000                     _RXM1EIDH	set	3870
   111  0000                     _RXM1EIDL	set	3871
   112  0000                     _RXM1SIDH	set	3868
   113  0000                     _RXM1SIDL	set	3869
   114  0000                     _RXM1SIDLbits	set	3869
   115  0000                     _TXB0CONbits	set	3904
   116  0000                     _TXB0D0	set	3910
   117  0000                     _TXB0D1	set	3911
   118  0000                     _TXB0D2	set	3912
   119  0000                     _TXB0D3	set	3913
   120  0000                     _TXB0D4	set	3914
   121  0000                     _TXB0D5	set	3915
   122  0000                     _TXB0D6	set	3916
   123  0000                     _TXB0D7	set	3917
   124  0000                     _TXB0DLC	set	3909
   125  0000                     _TXB0DLCbits	set	3909
   126  0000                     _TXB0EIDH	set	3907
   127  0000                     _TXB0EIDL	set	3908
   128  0000                     _TXB0SIDH	set	3905
   129  0000                     _TXB0SIDL	set	3906
   130  0000                     _TXB0SIDLbits	set	3906
   131  0000                     _TXB1CONbits	set	3888
   132  0000                     _TXB1D0	set	3894
   133  0000                     _TXB1D1	set	3895
   134  0000                     _TXB1D2	set	3896
   135  0000                     _TXB1D3	set	3897
   136  0000                     _TXB1D4	set	3898
   137  0000                     _TXB1D5	set	3899
   138  0000                     _TXB1D6	set	3900
   139  0000                     _TXB1D7	set	3901
   140  0000                     _TXB1DLC	set	3893
   141  0000                     _TXB1DLCbits	set	3893
   142  0000                     _TXB1EIDH	set	3891
   143  0000                     _TXB1EIDL	set	3892
   144  0000                     _TXB1SIDH	set	3889
   145  0000                     _TXB1SIDL	set	3890
   146  0000                     _TXB1SIDLbits	set	3890
   147  0000                     _TXB2CONbits	set	3872
   148  0000                     _TXB2D0	set	3878
   149  0000                     _TXB2D1	set	3879
   150  0000                     _TXB2D2	set	3880
   151  0000                     _TXB2D3	set	3881
   152  0000                     _TXB2D4	set	3882
   153  0000                     _TXB2D5	set	3883
   154  0000                     _TXB2D6	set	3884
   155  0000                     _TXB2D7	set	3885
   156  0000                     _TXB2DLC	set	3877
   157  0000                     _TXB2DLCbits	set	3877
   158  0000                     _TXB2EIDH	set	3875
   159  0000                     _TXB2EIDL	set	3876
   160  0000                     _TXB2SIDH	set	3873
   161  0000                     _TXB2SIDL	set	3874
   162  0000                     _TXB2SIDLbits	set	3874
   163  0000                     _ADCON0bits	set	4034
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON2bits	set	4032
   166  0000                     _ADRESH	set	4036
   167  0000                     _BRGCON1	set	3952
   168  0000                     _BRGCON2	set	3953
   169  0000                     _BRGCON2bits	set	3953
   170  0000                     _BRGCON3	set	3954
   171  0000                     _BRGCON3bits	set	3954
   172  0000                     _CANCON	set	3951
   173  0000                     _CANCONbits	set	3951
   174  0000                     _CANSTAT	set	3950
   175  0000                     _COMSTATbits	set	3956
   176  0000                     _INTCON2bits	set	4081
   177  0000                     _INTCON3bits	set	4080
   178  0000                     _INTCONbits	set	4082
   179  0000                     _IPR1bits	set	3999
   180  0000                     _IPR2bits	set	4002
   181  0000                     _IPR3bits	set	4005
   182  0000                     _LATA	set	3977
   183  0000                     _LATB	set	3978
   184  0000                     _LATC	set	3979
   185  0000                     _LATD	set	3980
   186  0000                     _LATE	set	3981
   187  0000                     _PIE1bits	set	3997
   188  0000                     _PIE2bits	set	4000
   189  0000                     _PIE3bits	set	4003
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PIR2bits	set	4001
   192  0000                     _PIR3bits	set	4004
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTCbits	set	3970
   195  0000                     _RCONbits	set	4048
   196  0000                     _RXB0CON	set	3936
   197  0000                     _RXB0CONbits	set	3936
   198  0000                     _RXB0D0	set	3942
   199  0000                     _RXB0D1	set	3943
   200  0000                     _RXB0D2	set	3944
   201  0000                     _RXB0D3	set	3945
   202  0000                     _RXB0D4	set	3946
   203  0000                     _RXB0D5	set	3947
   204  0000                     _RXB0D6	set	3948
   205  0000                     _RXB0D7	set	3949
   206  0000                     _RXB0DLC	set	3941
   207  0000                     _RXB0DLCbits	set	3941
   208  0000                     _RXB0EIDH	set	3939
   209  0000                     _RXB0EIDL	set	3940
   210  0000                     _RXB0SIDH	set	3937
   211  0000                     _RXB0SIDL	set	3938
   212  0000                     _RXB0SIDLbits	set	3938
   213  0000                     _RXERRCNT	set	3957
   214  0000                     _T0CON	set	4053
   215  0000                     _T0CONbits	set	4053
   216  0000                     _T1CON	set	4045
   217  0000                     _T1CONbits	set	4045
   218  0000                     _T3CON	set	4017
   219  0000                     _T3CONbits	set	4017
   220  0000                     _TMR0H	set	4055
   221  0000                     _TMR0L	set	4054
   222  0000                     _TMR1H	set	4047
   223  0000                     _TMR1L	set	4046
   224  0000                     _TMR3H	set	4019
   225  0000                     _TMR3L	set	4018
   226  0000                     _TRISA	set	3986
   227  0000                     _TRISB	set	3987
   228  0000                     _TRISC	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TXERRCNT	set	3958
   232                           
   233                           ; #config settings
   234  0000                     
   235                           	psect	cinit
   236  0026AA                     __pcinit:
   237                           	opt stack 0
   238  0026AA                     start_initialization:
   239                           	opt stack 0
   240  0026AA                     __initialization:
   241                           	opt stack 0
   242                           
   243                           ; Clear objects allocated to BANK0 (66 bytes)
   244  0026AA  EE00  F060         	lfsr	0,__pbssBANK0
   245  0026AE  0E42               	movlw	66
   246  0026B0                     clear_0:
   247  0026B0  6AEE               	clrf	postinc0,c
   248  0026B2  06E8               	decf	wreg,f,c
   249  0026B4  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   252  0026B6  6A3A               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   253  0026B8  6A39               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   254                           
   255                           ; Clear objects allocated to COMRAM (13 bytes)
   256  0026BA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   257  0026BE  0E0D               	movlw	13
   258  0026C0                     clear_1:
   259  0026C0  6AEE               	clrf	postinc0,c
   260  0026C2  06E8               	decf	wreg,f,c
   261  0026C4  E1FD               	bnz	clear_1
   262                           
   263                           ; Initialize objects allocated to BANK0 (9 bytes)
   264                           ; load TBLPTR registers with __pidataBANK0
   265  0026C6  0E42               	movlw	low __pidataBANK0
   266  0026C8  6EF6               	movwf	tblptrl,c
   267  0026CA  0E28               	movlw	high __pidataBANK0
   268  0026CC  6EF7               	movwf	tblptrh,c
   269  0026CE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   270  0026D0  6EF8               	movwf	tblptru,c
   271  0026D2  EE00  F0D2         	lfsr	0,__pdataBANK0
   272  0026D6  EE10 F009          	lfsr	1,9
   273  0026DA                     copy_data0:
   274  0026DA  0009               	tblrd		*+
   275  0026DC  CFF5 FFEE          	movff	tablat,postinc0
   276  0026E0  50E5               	movf	postdec1,w,c
   277  0026E2  50E1               	movf	fsr1l,w,c
   278  0026E4  E1FA               	bnz	copy_data0
   279  0026E6                     end_of_initialization:
   280                           	opt stack 0
   281  0026E6                     __end_of__initialization:
   282                           	opt stack 0
   283  0026E6  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   284  0026E8  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   285  0026EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   286  0026EC  6EF8               	movwf	tblptru,c
   287  0026EE  0100               	movlb	0
   288  0026F0  EF57  F010         	goto	_main	;jump to C main() function
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	bitbssCOMRAM
   299  0001C8                     __pbitbssCOMRAM:
   300                           	opt stack 0
   301  0001C8                     _ENC1_measure:
   302                           	opt stack 0
   303  0001C8                     	ds	1
   304  0001C9                     _ENC2_measure:
   305                           	opt stack 0
   306  0001C9                     	ds	1
   307  0001CA                     _TMR1_overflow:
   308                           	opt stack 0
   309  0001CA                     	ds	1
   310  0001CB                     _TMR3_overflow:
   311                           	opt stack 0
   312  0001CB                     	ds	1
   313  0001CC                     _Tx_retry:
   314                           	opt stack 0
   315  0001CC                     	ds	1
   316  0001CD                     _count_flag:
   317                           	opt stack 0
   318  0001CD                     	ds	1
   319  0001CE                     _remote_frame:
   320                           	opt stack 0
   321  0001CE                     	ds	1
   322  0001CF                     _x:
   323                           	opt stack 0
   324  0001CF                     	ds	1
   325  0001D0                     _y:
   326                           	opt stack 0
   327  0001D0                     	ds	1
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssCOMRAM
   338  00002C                     __pbssCOMRAM:
   339                           	opt stack 0
   340  00002C                     _timer_off:
   341                           	opt stack 0
   342  00002C                     	ds	4
   343  000030                     _timer_on:
   344                           	opt stack 0
   345  000030                     	ds	4
   346  000034                     _gap_time_1:
   347                           	opt stack 0
   348  000034                     	ds	2
   349  000036                     _gap_time_2:
   350                           	opt stack 0
   351  000036                     	ds	2
   352  000038                     _brake_value_degree:
   353                           	opt stack 0
   354  000038                     	ds	1
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           
   364                           	psect	bssBANK0
   365  000060                     __pbssBANK0:
   366                           	opt stack 0
   367  000060                     _int_counter_1:
   368                           	opt stack 0
   369  000060                     	ds	4
   370  000064                     _int_counter_2:
   371                           	opt stack 0
   372  000064                     	ds	4
   373  000068                     _remote_frame_id:
   374                           	opt stack 0
   375  000068                     	ds	4
   376  00006C                     _wheel_speed_1:
   377                           	opt stack 0
   378  00006C                     	ds	4
   379  000070                     _wheel_speed_2:
   380                           	opt stack 0
   381  000070                     	ds	4
   382  000074                     _clock_counter_reference:
   383                           	opt stack 0
   384  000074                     	ds	2
   385  000076                     _correction_factor:
   386                           	opt stack 0
   387  000076                     	ds	2
   388  000078                     _distance_1:
   389                           	opt stack 0
   390  000078                     	ds	2
   391  00007A                     _distance_2:
   392                           	opt stack 0
   393  00007A                     	ds	2
   394  00007C                     _Analogic_Mode:
   395                           	opt stack 0
   396  00007C                     	ds	1
   397  00007D                     _brake_signal_CAN:
   398                           	opt stack 0
   399  00007D                     	ds	1
   400  00007E                     _brake_value_inc:
   401                           	opt stack 0
   402  00007E                     	ds	1
   403  00007F                     _home_position:
   404                           	opt stack 0
   405  00007F                     	ds	1
   406  000080                     _read:
   407                           	opt stack 0
   408  000080                     	ds	1
   409  000081                     _step:
   410                           	opt stack 0
   411  000081                     	ds	1
   412  000082                     _msg:
   413                           	opt stack 0
   414  000082                     	ds	15
   415  000091                     _distance_array:
   416                           	opt stack 0
   417  000091                     	ds	8
   418  000099                     _speed_array:
   419                           	opt stack 0
   420  000099                     	ds	8
   421  0000A1                     _brake_value:
   422                           	opt stack 0
   423  0000A1                     	ds	1
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	dataBANK0
   434  0000D2                     __pdataBANK0:
   435                           	opt stack 0
   436  0000D2                     _delay_quartz_frequency_value:
   437                           	opt stack 0
   438  0000D2                     	ds	1
   439  0000D3                     _status_array:
   440                           	opt stack 0
   441  0000D3                     	ds	8
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	cstackBANK0
   452  0000A2                     __pcstackBANK0:
   453                           	opt stack 0
   454  0000A2                     ??_ISR_Alta:
   455                           
   456                           ; 0 bytes @ 0x0
   457  0000A2                     	ds	22
   458  0000B8                     ?___wmul:
   459                           	opt stack 0
   460  0000B8                     ?___awdiv:
   461                           	opt stack 0
   462  0000B8                     ?___lwdiv:
   463                           	opt stack 0
   464  0000B8                     CANOperationMode@mode:
   465                           	opt stack 0
   466  0000B8                     _CANisTxReady$3282:
   467                           	opt stack 0
   468  0000B8                     ___wmul@multiplier:
   469                           	opt stack 0
   470  0000B8                     ___awdiv@dividend:
   471                           	opt stack 0
   472  0000B8                     ___lwdiv@dividend:
   473                           	opt stack 0
   474  0000B8                     CANsendMessage@identifier:
   475                           	opt stack 0
   476  0000B8                     CANSetMask@mask:
   477                           	opt stack 0
   478  0000B8                     CANSetFilter@filter:
   479                           	opt stack 0
   480                           
   481                           ; 4 bytes @ 0x16
   482  0000B8                     	ds	2
   483  0000BA                     ___wmul@multiplicand:
   484                           	opt stack 0
   485  0000BA                     ___awdiv@divisor:
   486                           	opt stack 0
   487  0000BA                     ___lwdiv@divisor:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x18
   491  0000BA                     	ds	2
   492  0000BC                     CANSetMask@type:
   493                           	opt stack 0
   494  0000BC                     CANSetFilter@type:
   495                           	opt stack 0
   496  0000BC                     ___awdiv@counter:
   497                           	opt stack 0
   498  0000BC                     CANsendMessage@data:
   499                           	opt stack 0
   500  0000BC                     ___wmul@product:
   501                           	opt stack 0
   502  0000BC                     ___lwdiv@quotient:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  0000BC                     	ds	1
   507  0000BD                     ??_CANSetMask:
   508  0000BD                     ??_CANSetFilter:
   509  0000BD                     ___awdiv@sign:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1B
   513  0000BD                     	ds	1
   514  0000BE                     CANsendMessage@dataLength:
   515                           	opt stack 0
   516  0000BE                     ___lwdiv@counter:
   517                           	opt stack 0
   518  0000BE                     delay_ms@value_ms:
   519                           	opt stack 0
   520  0000BE                     ___awdiv@quotient:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x1C
   524  0000BE                     	ds	1
   525  0000BF                     CANsendMessage@flags:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x1D
   529  0000BF                     	ds	1
   530  0000C0                     ??_CANsendMessage:
   531  0000C0                     
   532                           ; 0 bytes @ 0x1E
   533  0000C0                     	ds	1
   534  0000C1                     CANSetMask@numBuffer:
   535                           	opt stack 0
   536  0000C1                     CANSetFilter@numBuffer:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x1F
   540  0000C1                     	ds	1
   541  0000C2                     CANSetMask@tamp:
   542                           	opt stack 0
   543  0000C2                     CANSetFilter@tamp:
   544                           	opt stack 0
   545                           
   546                           ; 4 bytes @ 0x20
   547  0000C2                     	ds	2
   548  0000C4                     CANsendMessage@tamp:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x22
   552  0000C4                     	ds	2
   553  0000C6                     CANInitialize@phaseSeg1:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x24
   557  0000C6                     	ds	1
   558  0000C7                     CANInitialize@phaseSeg2:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x25
   562  0000C7                     	ds	1
   563  0000C8                     ??_remote_frame_handler:
   564  0000C8                     CANInitialize@SJW:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x26
   568  0000C8                     	ds	1
   569  0000C9                     CANInitialize@BRP:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x27
   573  0000C9                     	ds	1
   574  0000CA                     CANInitialize@flags:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x28
   578  0000CA                     	ds	1
   579  0000CB                     ??_CANInitialize:
   580                           
   581                           ; 0 bytes @ 0x29
   582  0000CB                     	ds	4
   583  0000CF                     CANInitialize@propSeg:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x2D
   587  0000CF                     	ds	1
   588  0000D0                     CANInitialize@FilterConfig1:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x2E
   592  0000D0                     	ds	1
   593  0000D1                     CANInitialize@FilterConfig2:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x2F
   597  0000D1                     	ds	1
   598  0000D2                     tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           postdec1	equ	0xFE5
   605                           fsr1l	equ	0xFE1
   606                           
   607                           ; 0 bytes @ 0x30
   608                           
   609                           	psect	cstackCOMRAM
   610  000001                     __pcstackCOMRAM:
   611                           	opt stack 0
   612  000001                     _CANisRxReady$3284:
   613                           	opt stack 0
   614  000001                     CANreceiveMessage@msg:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x0
   618  000001                     	ds	2
   619  000003                     ??_CANreceiveMessage:
   620                           
   621                           ; 0 bytes @ 0x2
   622  000003                     	ds	8
   623  00000B                     CANreceiveMessage@error:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0xA
   627  00000B                     	ds	1
   628  00000C                     CANreceiveMessage@tamp:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0xB
   632  00000C                     	ds	1
   633  00000D                     ??_ISR_Bassa:
   634                           
   635                           ; 0 bytes @ 0xC
   636  00000D                     	ds	17
   637  00001E                     ?i2___wmul:
   638                           	opt stack 0
   639  00001E                     ?i2___lwdiv:
   640                           	opt stack 0
   641  00001E                     WriteTimer0@timer0:
   642                           	opt stack 0
   643  00001E                     i2___wmul@multiplier:
   644                           	opt stack 0
   645  00001E                     i2___lwdiv@dividend:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x1D
   649  00001E                     	ds	2
   650  000020                     WriteTimer0@timer:
   651                           	opt stack 0
   652  000020                     i2___wmul@multiplicand:
   653                           	opt stack 0
   654  000020                     i2___lwdiv@divisor:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x1F
   658  000020                     	ds	2
   659  000022                     i2___wmul@product:
   660                           	opt stack 0
   661  000022                     i2___lwdiv@quotient:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x21
   665  000022                     	ds	2
   666  000024                     ?i2___awdiv:
   667                           	opt stack 0
   668  000024                     i2___lwdiv@counter:
   669                           	opt stack 0
   670  000024                     i2___awdiv@dividend:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x23
   674  000024                     	ds	2
   675  000026                     i2___awdiv@divisor:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x25
   679  000026                     	ds	2
   680  000028                     i2___awdiv@counter:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x27
   684  000028                     	ds	1
   685  000029                     i2___awdiv@sign:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x28
   689  000029                     	ds	1
   690  00002A                     i2___awdiv@quotient:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x29
   694  00002A                     	ds	2
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           postdec1	equ	0xFE5
   702                           fsr1l	equ	0xFE1
   703                           
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 225 in file "ABS_Code.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  2  694[None  ] int 
   716 ;; Registers used:
   717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   723 ;;      Params:         0       0       0       0
   724 ;;      Locals:         0       0       0       0
   725 ;;      Temps:          0       0       0       0
   726 ;;      Totals:         0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels required when called:    7
   729 ;; This function calls:
   730 ;;		_ADC_Read
   731 ;;		_CANisRXwarningON
   732 ;;		_CANisTXwarningON
   733 ;;		___awdiv
   734 ;;		___lwdiv
   735 ;;		_board_initialization
   736 ;;		_delay_ms
   737 ;;		_remote_frame_handler
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text0
   744  0020AE                     __ptext0:
   745                           	opt stack 0
   746  0020AE                     _main:
   747                           	opt stack 24
   748                           
   749                           ;ABS_Code.c: 226: board_initialization();
   750                           
   751                           ;incstack = 0
   752  0020AE  ECED  F011         	call	_board_initialization	;wreg free
   753                           
   754                           ;ABS_Code.c: 227: step = (11 * (3.1415)) / 16;
   755  0020B2  0E02               	movlw	2
   756  0020B4  0100               	movlb	0	; () banked
   757  0020B6  6F81               	movwf	_step& (0+255),b
   758                           
   759                           ; BSR set to: 0
   760                           ;ABS_Code.c: 230: PORTAbits.RA1 = 1;
   761  0020B8  8280               	bsf	3968,1,c	;volatile
   762                           
   763                           ; BSR set to: 0
   764                           ;ABS_Code.c: 231: PORTCbits.RC1 = 1;
   765  0020BA  8282               	bsf	3970,1,c	;volatile
   766                           
   767                           ; BSR set to: 0
   768                           ;ABS_Code.c: 232: delay_ms(500);
   769  0020BC  0E01               	movlw	1
   770  0020BE  0100               	movlb	0	; () banked
   771  0020C0  6FBF               	movwf	(delay_ms@value_ms+1)& (0+255),b
   772  0020C2  0EF4               	movlw	244
   773  0020C4  6FBE               	movwf	delay_ms@value_ms& (0+255),b
   774  0020C6  EC99  F013         	call	_delay_ms	;wreg free
   775                           
   776                           ;ABS_Code.c: 233: PORTAbits.RA1 = 0;
   777  0020CA  9280               	bcf	3968,1,c	;volatile
   778                           
   779                           ;ABS_Code.c: 234: PORTCbits.RC1 = 0;
   780  0020CC  9282               	bcf	3970,1,c	;volatile
   781                           
   782                           ;ABS_Code.c: 235: delay_ms(100);
   783  0020CE  0E00               	movlw	0
   784  0020D0  0100               	movlb	0	; () banked
   785  0020D2  6FBF               	movwf	(delay_ms@value_ms+1)& (0+255),b
   786  0020D4  0E64               	movlw	100
   787  0020D6  6FBE               	movwf	delay_ms@value_ms& (0+255),b
   788  0020D8  EC99  F013         	call	_delay_ms	;wreg free
   789  0020DC                     l4014:
   790                           
   791                           ;ABS_Code.c: 238: ADC_Read();
   792  0020DC  EC7A  F013         	call	_ADC_Read	;wreg free
   793                           
   794                           ;ABS_Code.c: 239: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   795  0020E0  EC15  F014         	call	_CANisTXwarningON	;wreg free
   796  0020E4  06E8               	decf	wreg,f,c
   797  0020E6  B4D8               	btfsc	status,2,c
   798  0020E8  D005               	goto	l698
   799  0020EA  EC1B  F014         	call	_CANisRXwarningON	;wreg free
   800  0020EE  06E8               	decf	wreg,f,c
   801  0020F0  A4D8               	btfss	status,2,c
   802  0020F2  D004               	goto	l696
   803  0020F4                     l698:
   804                           
   805                           ;ABS_Code.c: 240: PORTAbits.RA1 = 1;
   806  0020F4  8280               	bsf	3968,1,c	;volatile
   807                           
   808                           ;ABS_Code.c: 241: COMSTATbits.TXWARN = 0;
   809  0020F6  9474               	bcf	3956,2,c	;volatile
   810                           
   811                           ;ABS_Code.c: 242: COMSTATbits.RXWARN = 0;
   812  0020F8  9274               	bcf	3956,1,c	;volatile
   813                           
   814                           ;ABS_Code.c: 243: } else {
   815  0020FA  D001               	goto	l699
   816  0020FC                     l696:
   817                           
   818                           ;ABS_Code.c: 244: PORTAbits.RA1 = 0;
   819  0020FC  9280               	bcf	3968,1,c	;volatile
   820  0020FE                     l699:
   821                           
   822                           ;ABS_Code.c: 245: }
   823                           ;ABS_Code.c: 247: if ((remote_frame == 1) || (Tx_retry == 1)) {
   824  0020FE  BC39               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
   825  002100  D002               	goto	l702
   826  002102  A839               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c
   827  002104  D003               	goto	l4024
   828  002106                     l702:
   829                           
   830                           ;ABS_Code.c: 248: remote_frame = 0;
   831  002106  9C39               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   832                           
   833                           ;ABS_Code.c: 249: remote_frame_handler();
   834  002108  EC24  F011         	call	_remote_frame_handler	;wreg free
   835  00210C                     l4024:
   836                           
   837                           ;ABS_Code.c: 250: }
   838                           ;ABS_Code.c: 252: if (Analogic_Mode == 0) {
   839  00210C  0100               	movlb	0	; () banked
   840  00210E  517C               	movf	_Analogic_Mode& (0+255),w,b
   841  002110  A4D8               	btfss	status,2,c
   842  002112  D01E               	goto	l703
   843                           
   844                           ; BSR set to: 0
   845                           ;ABS_Code.c: 253: if (brake_signal_CAN == 00) {
   846  002114  0100               	movlb	0	; () banked
   847  002116  517D               	movf	_brake_signal_CAN& (0+255),w,b
   848  002118  A4D8               	btfss	status,2,c
   849  00211A  D003               	goto	l4030
   850                           
   851                           ; BSR set to: 0
   852                           ;ABS_Code.c: 254: brake_value_inc = 0;
   853  00211C  0E00               	movlw	0
   854  00211E  0100               	movlb	0	; () banked
   855  002120  6F7E               	movwf	_brake_value_inc& (0+255),b
   856  002122                     l4030:
   857                           
   858                           ; BSR set to: 0
   859                           ;ABS_Code.c: 255: }
   860                           ;ABS_Code.c: 256: if (brake_signal_CAN == 01) {
   861  002122  0100               	movlb	0	; () banked
   862  002124  057D               	decf	_brake_signal_CAN& (0+255),w,b
   863  002126  A4D8               	btfss	status,2,c
   864  002128  D003               	goto	l4034
   865                           
   866                           ; BSR set to: 0
   867                           ;ABS_Code.c: 257: brake_value_inc = 150;
   868  00212A  0E96               	movlw	150
   869  00212C  0100               	movlb	0	; () banked
   870  00212E  6F7E               	movwf	_brake_value_inc& (0+255),b
   871  002130                     l4034:
   872                           
   873                           ; BSR set to: 0
   874                           ;ABS_Code.c: 258: }
   875                           ;ABS_Code.c: 259: if (brake_signal_CAN == 10) {
   876  002130  0E0A               	movlw	10
   877  002132  0100               	movlb	0	; () banked
   878  002134  197D               	xorwf	_brake_signal_CAN& (0+255),w,b
   879  002136  A4D8               	btfss	status,2,c
   880  002138  D003               	goto	l4038
   881                           
   882                           ; BSR set to: 0
   883                           ;ABS_Code.c: 260: brake_value_inc = 200;
   884  00213A  0EC8               	movlw	200
   885  00213C  0100               	movlb	0	; () banked
   886  00213E  6F7E               	movwf	_brake_value_inc& (0+255),b
   887  002140                     l4038:
   888                           
   889                           ; BSR set to: 0
   890                           ;ABS_Code.c: 261: }
   891                           ;ABS_Code.c: 262: if (brake_signal_CAN == 11) {
   892  002140  0E0B               	movlw	11
   893  002142  0100               	movlb	0	; () banked
   894  002144  197D               	xorwf	_brake_signal_CAN& (0+255),w,b
   895  002146  A4D8               	btfss	status,2,c
   896  002148  D005               	goto	l4042
   897                           
   898                           ; BSR set to: 0
   899                           ;ABS_Code.c: 263: brake_value_inc = 255;
   900  00214A  0100               	movlb	0	; () banked
   901  00214C  697E               	setf	_brake_value_inc& (0+255),b
   902                           
   903                           ; BSR set to: 0
   904                           ;ABS_Code.c: 264: }
   905                           ;ABS_Code.c: 265: } else {
   906  00214E  D002               	goto	l4042
   907  002150                     l703:
   908                           
   909                           ; BSR set to: 0
   910                           ;ABS_Code.c: 266: brake_value_inc = brake_signal_CAN;
   911  002150  C07D  F07E         	movff	_brake_signal_CAN,_brake_value_inc
   912  002154                     l4042:
   913                           
   914                           ; BSR set to: 0
   915                           ;ABS_Code.c: 267: }
   916                           ;ABS_Code.c: 269: brake_value = (brake_value_inc / 17) + home_position;
   917  002154  C07E  F0B8         	movff	_brake_value_inc,___awdiv@dividend
   918  002158  0100               	movlb	0	; () banked
   919  00215A  6BB9               	clrf	(___awdiv@dividend+1)& (0+255),b
   920  00215C  0E00               	movlw	0
   921  00215E  0100               	movlb	0	; () banked
   922  002160  6FBB               	movwf	(___awdiv@divisor+1)& (0+255),b
   923  002162  0E11               	movlw	17
   924  002164  6FBA               	movwf	___awdiv@divisor& (0+255),b
   925  002166  EC4F  F012         	call	___awdiv	;wreg free
   926  00216A  0100               	movlb	0	; () banked
   927  00216C  51B8               	movf	?___awdiv& (0+255),w,b
   928  00216E  0100               	movlb	0	; () banked
   929  002170  257F               	addwf	_home_position& (0+255),w,b
   930  002172  0100               	movlb	0	; () banked
   931  002174  6FA1               	movwf	_brake_value& (0+255),b
   932                           
   933                           ; BSR set to: 0
   934                           ;ABS_Code.c: 270: brake_value_degree = (180 * brake_value) / 255;
   935  002176  0100               	movlb	0	; () banked
   936  002178  51A1               	movf	_brake_value& (0+255),w,b
   937  00217A  0DB4               	mullw	180
   938  00217C  CFF3 F0B8          	movff	prodl,___awdiv@dividend
   939  002180  CFF4 F0B9          	movff	prodh,___awdiv@dividend+1
   940  002184  0E00               	movlw	0
   941  002186  0100               	movlb	0	; () banked
   942  002188  6FBB               	movwf	(___awdiv@divisor+1)& (0+255),b
   943  00218A  69BA               	setf	___awdiv@divisor& (0+255),b
   944  00218C  EC4F  F012         	call	___awdiv	;wreg free
   945  002190  0100               	movlb	0	; () banked
   946  002192  51B8               	movf	?___awdiv& (0+255),w,b
   947  002194  6E38               	movwf	_brake_value_degree,c
   948                           
   949                           ; BSR set to: 0
   950                           ;ABS_Code.c: 272: if ((ENC1_measure == 1)||(TMR1_overflow == 1)) {
   951  002196  B039               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
   952  002198  D002               	goto	l711
   953                           
   954                           ; BSR set to: 0
   955  00219A  A439               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   956  00219C  D028               	goto	l4062
   957  00219E                     l711:
   958                           
   959                           ; BSR set to: 0
   960                           ;ABS_Code.c: 273: if (TMR1_overflow == 1){
   961  00219E  A439               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   962  0021A0  D00B               	goto	l4054
   963                           
   964                           ; BSR set to: 0
   965                           ;ABS_Code.c: 274: wheel_speed_1 = 0;
   966  0021A2  0E00               	movlw	0
   967  0021A4  0100               	movlb	0	; () banked
   968  0021A6  6F6C               	movwf	_wheel_speed_1& (0+255),b
   969  0021A8  0E00               	movlw	0
   970  0021AA  6F6D               	movwf	(_wheel_speed_1+1)& (0+255),b
   971  0021AC  0E00               	movlw	0
   972  0021AE  6F6E               	movwf	(_wheel_speed_1+2)& (0+255),b
   973  0021B0  0E00               	movlw	0
   974  0021B2  6F6F               	movwf	(_wheel_speed_1+3)& (0+255),b
   975                           
   976                           ; BSR set to: 0
   977                           ;ABS_Code.c: 275: TMR1_overflow = 0;
   978  0021B4  9439               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
   979                           
   980                           ;ABS_Code.c: 276: } else {
   981  0021B6  D016               	goto	l4056
   982  0021B8                     l4054:
   983                           
   984                           ; BSR set to: 0
   985                           ;ABS_Code.c: 277: wheel_speed_1 = (step * 100) / gap_time_1;
   986  0021B8  0100               	movlb	0	; () banked
   987  0021BA  5181               	movf	_step& (0+255),w,b
   988  0021BC  0D64               	mullw	100
   989  0021BE  CFF3 F0B8          	movff	prodl,___lwdiv@dividend
   990  0021C2  CFF4 F0B9          	movff	prodh,___lwdiv@dividend+1
   991  0021C6  C034  F0BA         	movff	_gap_time_1,___lwdiv@divisor
   992  0021CA  C035  F0BB         	movff	_gap_time_1+1,___lwdiv@divisor+1
   993  0021CE  ECF0  F012         	call	___lwdiv	;wreg free
   994  0021D2  0100               	movlb	0	; () banked
   995  0021D4  C0B8  F06C         	movff	?___lwdiv,_wheel_speed_1
   996  0021D8  0100               	movlb	0	; () banked
   997  0021DA  C0B9  F06D         	movff	?___lwdiv+1,_wheel_speed_1+1
   998  0021DE  0100               	movlb	0	; () banked
   999  0021E0  6B6E               	clrf	(_wheel_speed_1+2)& (0+255),b
  1000  0021E2  6B6F               	clrf	(_wheel_speed_1+3)& (0+255),b
  1001  0021E4                     l4056:
  1002                           
  1003                           ; BSR set to: 0
  1004                           ;ABS_Code.c: 278: }
  1005                           ;ABS_Code.c: 279: speed_array[3] = wheel_speed_1 >> 8;
  1006  0021E4  C06D  F09C         	movff	_wheel_speed_1+1,_speed_array+3
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;ABS_Code.c: 280: speed_array[2] = wheel_speed_1;
  1010  0021E8  C06C  F09B         	movff	_wheel_speed_1,_speed_array+2
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;ABS_Code.c: 281: ENC1_measure = 0;
  1014  0021EC  9039               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  1015  0021EE                     l4062:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;ABS_Code.c: 282: }
  1019                           ;ABS_Code.c: 284: if ((ENC2_measure == 1)||(TMR3_overflow == 1)) {
  1020  0021EE  B239               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1021  0021F0  D002               	goto	l716
  1022                           
  1023                           ; BSR set to: 0
  1024  0021F2  A639               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1025  0021F4  D773               	goto	l4014
  1026  0021F6                     l716:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;ABS_Code.c: 285: if (TMR3_overflow == 1){
  1030  0021F6  A639               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1031  0021F8  D00B               	goto	l4070
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;ABS_Code.c: 286: wheel_speed_2 = 0;
  1035  0021FA  0E00               	movlw	0
  1036  0021FC  0100               	movlb	0	; () banked
  1037  0021FE  6F70               	movwf	_wheel_speed_2& (0+255),b
  1038  002200  0E00               	movlw	0
  1039  002202  6F71               	movwf	(_wheel_speed_2+1)& (0+255),b
  1040  002204  0E00               	movlw	0
  1041  002206  6F72               	movwf	(_wheel_speed_2+2)& (0+255),b
  1042  002208  0E00               	movlw	0
  1043  00220A  6F73               	movwf	(_wheel_speed_2+3)& (0+255),b
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;ABS_Code.c: 287: TMR3_overflow = 0;
  1047  00220C  9639               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  1048                           
  1049                           ;ABS_Code.c: 288: } else {
  1050  00220E  D016               	goto	l4072
  1051  002210                     l4070:
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;ABS_Code.c: 289: wheel_speed_2 = (step * 100) / gap_time_2;
  1055  002210  0100               	movlb	0	; () banked
  1056  002212  5181               	movf	_step& (0+255),w,b
  1057  002214  0D64               	mullw	100
  1058  002216  CFF3 F0B8          	movff	prodl,___lwdiv@dividend
  1059  00221A  CFF4 F0B9          	movff	prodh,___lwdiv@dividend+1
  1060  00221E  C036  F0BA         	movff	_gap_time_2,___lwdiv@divisor
  1061  002222  C037  F0BB         	movff	_gap_time_2+1,___lwdiv@divisor+1
  1062  002226  ECF0  F012         	call	___lwdiv	;wreg free
  1063  00222A  0100               	movlb	0	; () banked
  1064  00222C  C0B8  F070         	movff	?___lwdiv,_wheel_speed_2
  1065  002230  0100               	movlb	0	; () banked
  1066  002232  C0B9  F071         	movff	?___lwdiv+1,_wheel_speed_2+1
  1067  002236  0100               	movlb	0	; () banked
  1068  002238  6B72               	clrf	(_wheel_speed_2+2)& (0+255),b
  1069  00223A  6B73               	clrf	(_wheel_speed_2+3)& (0+255),b
  1070  00223C                     l4072:
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;ABS_Code.c: 290: }
  1074                           ;ABS_Code.c: 291: speed_array[1] = wheel_speed_2 >> 8;
  1075  00223C  C071  F09A         	movff	_wheel_speed_2+1,_speed_array+1
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;ABS_Code.c: 292: speed_array[0] = wheel_speed_2;
  1079  002240  C070  F099         	movff	_wheel_speed_2,_speed_array
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;ABS_Code.c: 293: ENC2_measure = 0;
  1083  002244  9239               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  1084                           
  1085                           ; BSR set to: 0
  1086                           
  1087                           ; BSR set to: 0
  1088  002246  D74A               	goto	l4014
  1089  002248                     __end_of_main:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           prodh	equ	0xFF4
  1096                           prodl	equ	0xFF3
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postdec1	equ	0xFE5
  1100                           fsr1l	equ	0xFE1
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _remote_frame_handler *****************
  1104 ;; Defined at:
  1105 ;;		line 303 in file "ABS_Code.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;		None               void
  1112 ;; Registers used:
  1113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1119 ;;      Params:         0       0       0       0
  1120 ;;      Locals:         0       0       0       0
  1121 ;;      Temps:          0       1       0       0
  1122 ;;      Totals:         0       1       0       0
  1123 ;;Total ram usage:        1 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    5
  1126 ;; This function calls:
  1127 ;;		_CANisTxReady
  1128 ;;		_CANsendMessage
  1129 ;;		___wmul
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text1
  1136  002248                     __ptext1:
  1137                           	opt stack 0
  1138  002248                     _remote_frame_handler:
  1139                           	opt stack 25
  1140                           
  1141                           ;ABS_Code.c: 304: if (CANisTxReady()) {
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;incstack = 0
  1145  002248  ECE4  F013         	call	_CANisTxReady	;wreg free
  1146  00224C  0900               	iorlw	0
  1147  00224E  B4D8               	btfsc	status,2,c
  1148  002250  D0C2               	goto	l724
  1149                           
  1150                           ;ABS_Code.c: 305: if (remote_frame_id == 0b00000000000000000000000000010) {
  1151  002252  0E02               	movlw	2
  1152  002254  0100               	movlb	0	; () banked
  1153  002256  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1154  002258  0100               	movlb	0	; () banked
  1155  00225A  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1156  00225C  0100               	movlb	0	; () banked
  1157  00225E  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1158  002260  0100               	movlb	0	; () banked
  1159  002262  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1160  002264  A4D8               	btfss	status,2,c
  1161  002266  D016               	goto	l3778
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;ABS_Code.c: 306: CANsendMessage(remote_frame_id, status_array, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1165  002268  C068  F0B8         	movff	_remote_frame_id,CANsendMessage@identifier
  1166  00226C  C069  F0B9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1167  002270  C06A  F0BA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1168  002274  C06B  F0BB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1169  002278  0ED3               	movlw	low _status_array
  1170  00227A  0100               	movlb	0	; () banked
  1171  00227C  6FBC               	movwf	CANsendMessage@data& (0+255),b
  1172  00227E  0E00               	movlw	high _status_array
  1173  002280  0100               	movlb	0	; () banked
  1174  002282  6FBD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1175  002284  0E08               	movlw	8
  1176  002286  0100               	movlb	0	; () banked
  1177  002288  6FBE               	movwf	CANsendMessage@dataLength& (0+255),b
  1178  00228A  0EBC               	movlw	188
  1179  00228C  0100               	movlb	0	; () banked
  1180  00228E  6FBF               	movwf	CANsendMessage@flags& (0+255),b
  1181  002290  EC0D  F006         	call	_CANsendMessage	;wreg free
  1182  002294                     l3778:
  1183                           
  1184                           ;ABS_Code.c: 307: }
  1185                           ;ABS_Code.c: 308: if (remote_frame_id == 0b00000000000000000000000000110) {
  1186  002294  0E06               	movlw	6
  1187  002296  0100               	movlb	0	; () banked
  1188  002298  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1189  00229A  0100               	movlb	0	; () banked
  1190  00229C  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1191  00229E  0100               	movlb	0	; () banked
  1192  0022A0  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1193  0022A2  0100               	movlb	0	; () banked
  1194  0022A4  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1195  0022A6  A4D8               	btfss	status,2,c
  1196  0022A8  D024               	goto	l3784
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;ABS_Code.c: 309: PORTCbits.RC0 = ~PORTCbits.RC0;
  1200  0022AA  A082               	btfss	3970,0,c	;volatile
  1201  0022AC  D002               	goto	u4140
  1202  0022AE  0E01               	movlw	1
  1203  0022B0  D001               	goto	u4146
  1204  0022B2                     u4140:
  1205  0022B2  0E00               	movlw	0
  1206  0022B4                     u4146:
  1207  0022B4  0AFF               	xorlw	255
  1208  0022B6  0100               	movlb	0	; () banked
  1209  0022B8  6FC8               	movwf	??_remote_frame_handler& (0+255),b
  1210  0022BA  5082               	movf	3970,w,c	;volatile
  1211  0022BC  0100               	movlb	0	; () banked
  1212  0022BE  19C8               	xorwf	??_remote_frame_handler& (0+255),w,b
  1213  0022C0  0BFE               	andlw	-2
  1214  0022C2  19C8               	xorwf	??_remote_frame_handler& (0+255),w,b
  1215  0022C4  6E82               	movwf	3970,c	;volatile
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;ABS_Code.c: 310: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1219  0022C6  C068  F0B8         	movff	_remote_frame_id,CANsendMessage@identifier
  1220  0022CA  C069  F0B9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1221  0022CE  C06A  F0BA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1222  0022D2  C06B  F0BB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1223  0022D6  0E99               	movlw	low _speed_array
  1224  0022D8  0100               	movlb	0	; () banked
  1225  0022DA  6FBC               	movwf	CANsendMessage@data& (0+255),b
  1226  0022DC  0E00               	movlw	high _speed_array
  1227  0022DE  0100               	movlb	0	; () banked
  1228  0022E0  6FBD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1229  0022E2  0E08               	movlw	8
  1230  0022E4  0100               	movlb	0	; () banked
  1231  0022E6  6FBE               	movwf	CANsendMessage@dataLength& (0+255),b
  1232  0022E8  0EBC               	movlw	188
  1233  0022EA  0100               	movlb	0	; () banked
  1234  0022EC  6FBF               	movwf	CANsendMessage@flags& (0+255),b
  1235  0022EE  EC0D  F006         	call	_CANsendMessage	;wreg free
  1236  0022F2                     l3784:
  1237                           
  1238                           ;ABS_Code.c: 311: }
  1239                           ;ABS_Code.c: 312: if (remote_frame_id == 0b00000000000000000000000001000) {
  1240  0022F2  0E08               	movlw	8
  1241  0022F4  0100               	movlb	0	; () banked
  1242  0022F6  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1243  0022F8  0100               	movlb	0	; () banked
  1244  0022FA  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1245  0022FC  0100               	movlb	0	; () banked
  1246  0022FE  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1247  002300  0100               	movlb	0	; () banked
  1248  002302  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1249  002304  A4D8               	btfss	status,2,c
  1250  002306  D013               	goto	l3790
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;ABS_Code.c: 313: int_counter_1 = 0;
  1254  002308  0E00               	movlw	0
  1255  00230A  0100               	movlb	0	; () banked
  1256  00230C  6F60               	movwf	_int_counter_1& (0+255),b
  1257  00230E  0E00               	movlw	0
  1258  002310  6F61               	movwf	(_int_counter_1+1)& (0+255),b
  1259  002312  0E00               	movlw	0
  1260  002314  6F62               	movwf	(_int_counter_1+2)& (0+255),b
  1261  002316  0E00               	movlw	0
  1262  002318  6F63               	movwf	(_int_counter_1+3)& (0+255),b
  1263                           
  1264                           ;ABS_Code.c: 314: int_counter_2 = 0;
  1265  00231A  0E00               	movlw	0
  1266  00231C  0100               	movlb	0	; () banked
  1267  00231E  6F64               	movwf	_int_counter_2& (0+255),b
  1268  002320  0E00               	movlw	0
  1269  002322  6F65               	movwf	(_int_counter_2+1)& (0+255),b
  1270  002324  0E00               	movlw	0
  1271  002326  6F66               	movwf	(_int_counter_2+2)& (0+255),b
  1272  002328  0E00               	movlw	0
  1273  00232A  6F67               	movwf	(_int_counter_2+3)& (0+255),b
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;ABS_Code.c: 315: count_flag = 1;
  1277  00232C  8A39               	bsf	_count_flag/(0+8),_count_flag& (0+7),c
  1278  00232E                     l3790:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;ABS_Code.c: 316: }
  1282                           ;ABS_Code.c: 317: if (remote_frame_id == 0b00000000000000000000000000111) {
  1283  00232E  0E07               	movlw	7
  1284  002330  0100               	movlb	0	; () banked
  1285  002332  1968               	xorwf	_remote_frame_id& (0+255),w,b
  1286  002334  0100               	movlb	0	; () banked
  1287  002336  1169               	iorwf	(_remote_frame_id+1)& (0+255),w,b
  1288  002338  0100               	movlb	0	; () banked
  1289  00233A  116A               	iorwf	(_remote_frame_id+2)& (0+255),w,b
  1290  00233C  0100               	movlb	0	; () banked
  1291  00233E  116B               	iorwf	(_remote_frame_id+3)& (0+255),w,b
  1292  002340  A4D8               	btfss	status,2,c
  1293  002342  D03F               	goto	l3806
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;ABS_Code.c: 318: distance_1 = step * (int_counter_1);
  1297  002344  C081  F0B8         	movff	_step,___wmul@multiplier
  1298  002348  0100               	movlb	0	; () banked
  1299  00234A  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1300  00234C  C060  F0BA         	movff	_int_counter_1,___wmul@multiplicand
  1301  002350  C061  F0BB         	movff	_int_counter_1+1,___wmul@multiplicand+1
  1302  002354  ECB6  F013         	call	___wmul	;wreg free
  1303  002358  C0B8  F078         	movff	?___wmul,_distance_1
  1304  00235C  C0B9  F079         	movff	?___wmul+1,_distance_1+1
  1305                           
  1306                           ;ABS_Code.c: 319: distance_2 = step * (int_counter_2);
  1307  002360  C081  F0B8         	movff	_step,___wmul@multiplier
  1308  002364  0100               	movlb	0	; () banked
  1309  002366  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1310  002368  C064  F0BA         	movff	_int_counter_2,___wmul@multiplicand
  1311  00236C  C065  F0BB         	movff	_int_counter_2+1,___wmul@multiplicand+1
  1312  002370  ECB6  F013         	call	___wmul	;wreg free
  1313  002374  C0B8  F07A         	movff	?___wmul,_distance_2
  1314  002378  C0B9  F07B         	movff	?___wmul+1,_distance_2+1
  1315                           
  1316                           ;ABS_Code.c: 320: count_flag = 0;
  1317  00237C  9A39               	bcf	_count_flag/(0+8),_count_flag& (0+7),c
  1318                           
  1319                           ;ABS_Code.c: 321: distance_array[0] = distance_1;
  1320  00237E  C078  F091         	movff	_distance_1,_distance_array
  1321                           
  1322                           ;ABS_Code.c: 322: distance_array[1] = distance_1 >> 8;
  1323  002382  0100               	movlb	0	; () banked
  1324  002384  5179               	movf	(_distance_1+1)& (0+255),w,b
  1325  002386  0100               	movlb	0	; () banked
  1326  002388  6F92               	movwf	(_distance_array+1)& (0+255),b
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;ABS_Code.c: 323: distance_array[2] = distance_2;
  1330  00238A  C07A  F093         	movff	_distance_2,_distance_array+2
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;ABS_Code.c: 324: distance_array[3] = distance_2 >> 8;
  1334  00238E  0100               	movlb	0	; () banked
  1335  002390  517B               	movf	(_distance_2+1)& (0+255),w,b
  1336  002392  0100               	movlb	0	; () banked
  1337  002394  6F94               	movwf	(_distance_array+3)& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;ABS_Code.c: 325: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1341  002396  C068  F0B8         	movff	_remote_frame_id,CANsendMessage@identifier
  1342  00239A  C069  F0B9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1
  1343  00239E  C06A  F0BA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2
  1344  0023A2  C06B  F0BB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3
  1345  0023A6  0E91               	movlw	low _distance_array
  1346  0023A8  0100               	movlb	0	; () banked
  1347  0023AA  6FBC               	movwf	CANsendMessage@data& (0+255),b
  1348  0023AC  0E00               	movlw	high _distance_array
  1349  0023AE  0100               	movlb	0	; () banked
  1350  0023B0  6FBD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1351  0023B2  0E08               	movlw	8
  1352  0023B4  0100               	movlb	0	; () banked
  1353  0023B6  6FBE               	movwf	CANsendMessage@dataLength& (0+255),b
  1354  0023B8  0EBC               	movlw	188
  1355  0023BA  0100               	movlb	0	; () banked
  1356  0023BC  6FBF               	movwf	CANsendMessage@flags& (0+255),b
  1357  0023BE  EC0D  F006         	call	_CANsendMessage	;wreg free
  1358  0023C2                     l3806:
  1359                           
  1360                           ;ABS_Code.c: 326: }
  1361                           ;ABS_Code.c: 327: if (TXB0CONbits.TXABT || TXB1CONbits.TXABT) {
  1362  0023C2  010F               	movlb	15	; () banked
  1363  0023C4  BD40               	btfsc	64,6,b	;volatile
  1364  0023C6  D003               	goto	l731
  1365                           
  1366                           ; BSR set to: 15
  1367  0023C8  010F               	movlb	15	; () banked
  1368  0023CA  AD30               	btfss	48,6,b	;volatile
  1369  0023CC  D002               	goto	l729
  1370  0023CE                     l731:
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;ABS_Code.c: 328: Tx_retry = 1;
  1374  0023CE  8839               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1375                           
  1376                           ;ABS_Code.c: 329: } else {
  1377  0023D0  0012               	return	
  1378  0023D2                     l729:
  1379                           
  1380                           ; BSR set to: 15
  1381                           ;ABS_Code.c: 330: Tx_retry = 0;
  1382  0023D2  9839               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1383                           
  1384                           ; BSR set to: 15
  1385                           ;ABS_Code.c: 331: }
  1386                           ;ABS_Code.c: 332: } else {
  1387  0023D4  0012               	return	
  1388  0023D6                     l724:
  1389                           
  1390                           ;ABS_Code.c: 333: Tx_retry = 1;
  1391  0023D6  8839               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c
  1392  0023D8  0012               	return	
  1393  0023DA                     __end_of_remote_frame_handler:
  1394                           	opt stack 0
  1395                           tblptru	equ	0xFF8
  1396                           tblptrh	equ	0xFF7
  1397                           tblptrl	equ	0xFF6
  1398                           tablat	equ	0xFF5
  1399                           prodh	equ	0xFF4
  1400                           prodl	equ	0xFF3
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           postdec1	equ	0xFE5
  1404                           fsr1l	equ	0xFE1
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _CANsendMessage *****************
  1408 ;; Defined at:
  1409 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  identifier      4   22[BANK0 ] unsigned long 
  1412 ;;  data            2   26[BANK0 ] PTR unsigned char 
  1413 ;;		 -> distance_array(8), status_array(8), speed_array(8), 
  1414 ;;  dataLength      1   28[BANK0 ] unsigned char 
  1415 ;;  flags           1   29[BANK0 ] enum E16866
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  tamp            4   34[BANK0 ] unsigned long 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;		None               void
  1420 ;; Registers used:
  1421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1427 ;;      Params:         0       8       0       0
  1428 ;;      Locals:         0       4       0       0
  1429 ;;      Temps:          0       4       0       0
  1430 ;;      Totals:         0      16       0       0
  1431 ;;Total ram usage:       16 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    4
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_remote_frame_handler
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text2
  1442  000C1A                     __ptext2:
  1443                           	opt stack 0
  1444  000C1A                     _CANsendMessage:
  1445                           	opt stack 25
  1446                           
  1447                           ;inc\CANlib.h: 296: unsigned long tamp;
  1448                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1449                           
  1450                           ;incstack = 0
  1451  000C1A  010F               	movlb	15	; () banked
  1452  000C1C  B740               	btfsc	64,3,b	;volatile
  1453  000C1E  D13F               	goto	l383
  1454                           
  1455                           ; BSR set to: 15
  1456                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1457  000C20  C0BE  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1458                           
  1459                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1460  000C24  0100               	movlb	0	; () banked
  1461  000C26  ADBF               	btfss	CANsendMessage@flags& (0+255),6,b
  1462  000C28  D003               	goto	l384
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1466  000C2A  010F               	movlb	15	; () banked
  1467  000C2C  8D45               	bsf	69,6,b	;volatile
  1468  000C2E  D002               	goto	l385
  1469  000C30                     l384:
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;inc\CANlib.h: 302: else
  1473                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1474  000C30  010F               	movlb	15	; () banked
  1475  000C32  9D45               	bcf	69,6,b	;volatile
  1476  000C34                     l385:
  1477                           
  1478                           ; BSR set to: 15
  1479                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1480  000C34  0100               	movlb	0	; () banked
  1481  000C36  A7BF               	btfss	CANsendMessage@flags& (0+255),3,b
  1482  000C38  D079               	goto	l386
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;inc\CANlib.h: 306: {
  1486                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1487  000C3A  0100               	movlb	0	; () banked
  1488  000C3C  51B8               	movf	CANsendMessage@identifier& (0+255),w,b
  1489  000C3E  0100               	movlb	0	; () banked
  1490  000C40  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1491  000C42  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1492  000C44  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1493  000C46  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1497  000C48  C0C4  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1501  000C4C  0E00               	movlw	0
  1502  000C4E  0100               	movlb	0	; () banked
  1503  000C50  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1504  000C52  0100               	movlb	0	; () banked
  1505  000C54  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1506  000C56  0EFF               	movlw	255
  1507  000C58  0100               	movlb	0	; () banked
  1508  000C5A  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1509  000C5C  0100               	movlb	0	; () banked
  1510  000C5E  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1511  000C60  0E00               	movlw	0
  1512  000C62  0100               	movlb	0	; () banked
  1513  000C64  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1514  000C66  0100               	movlb	0	; () banked
  1515  000C68  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1516  000C6A  0E00               	movlw	0
  1517  000C6C  0100               	movlb	0	; () banked
  1518  000C6E  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1519  000C70  0100               	movlb	0	; () banked
  1520  000C72  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1524  000C74  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1525  000C78  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1526  000C7C  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1527  000C80  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1528  000C84  C0C1  F0C0         	movff	??_CANsendMessage+1,??_CANsendMessage
  1529  000C88  C0C2  F0C1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1530  000C8C  C0C3  F0C2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1531  000C90  0100               	movlb	0	; () banked
  1532  000C92  6BC3               	clrf	(??_CANsendMessage+3)& (0+255),b
  1533  000C94  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1534  000C98  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1535  000C9C  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1536  000CA0  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1540  000CA4  C0C4  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1544  000CA8  0E00               	movlw	0
  1545  000CAA  010F               	movlb	15	; () banked
  1546  000CAC  6F42               	movwf	66,b	;volatile
  1547                           
  1548                           ; BSR set to: 15
  1549                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1550  000CAE  010F               	movlb	15	; () banked
  1551  000CB0  8742               	bsf	66,3,b	;volatile
  1552                           
  1553                           ; BSR set to: 15
  1554                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1555  000CB2  0100               	movlb	0	; () banked
  1556  000CB4  A1BA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1557  000CB6  D002               	goto	l387
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1561  000CB8  010F               	movlb	15	; () banked
  1562  000CBA  8142               	bsf	66,0,b	;volatile
  1563  000CBC                     l387:
  1564                           
  1565                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1566  000CBC  0100               	movlb	0	; () banked
  1567  000CBE  A3BA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1568  000CC0  D002               	goto	l388
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1572  000CC2  010F               	movlb	15	; () banked
  1573  000CC4  8342               	bsf	66,1,b	;volatile
  1574  000CC6                     l388:
  1575                           
  1576                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1577  000CC6  0100               	movlb	0	; () banked
  1578  000CC8  A5BA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1579  000CCA  D002               	goto	l389
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1583  000CCC  010F               	movlb	15	; () banked
  1584  000CCE  8B42               	bsf	66,5,b	;volatile
  1585  000CD0                     l389:
  1586                           
  1587                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1588  000CD0  0100               	movlb	0	; () banked
  1589  000CD2  A7BA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1590  000CD4  D002               	goto	l390
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1594  000CD6  010F               	movlb	15	; () banked
  1595  000CD8  8D42               	bsf	66,6,b	;volatile
  1596  000CDA                     l390:
  1597                           
  1598                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1599  000CDA  0100               	movlb	0	; () banked
  1600  000CDC  A9BA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1601  000CDE  D002               	goto	l3244
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1605  000CE0  010F               	movlb	15	; () banked
  1606  000CE2  8F42               	bsf	66,7,b	;volatile
  1607  000CE4                     l3244:
  1608                           
  1609                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1610  000CE4  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1611  000CE8  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1612  000CEC  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1613  000CF0  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1614  000CF4  0E16               	movlw	22
  1615  000CF6  D006               	goto	u3410
  1616  000CF8                     u3415:
  1617  000CF8  0100               	movlb	0	; () banked
  1618  000CFA  90D8               	bcf	status,0,c
  1619  000CFC  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1620  000CFE  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1621  000D00  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1622  000D02  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  1623  000D04                     u3410:
  1624  000D04  2EE8               	decfsz	wreg,f,c
  1625  000D06  D7F8               	goto	u3415
  1626  000D08  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1627  000D0C  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1628  000D10  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1629  000D14  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1633  000D18  0100               	movlb	0	; () banked
  1634  000D1A  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  1635  000D1C  0100               	movlb	0	; () banked
  1636  000D1E  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1637  000D20  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1638  000D22  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1639  000D24  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1643  000D26  C0C4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1644                           
  1645                           ;inc\CANlib.h: 332: }
  1646  000D2A  D059               	goto	l3264
  1647  000D2C                     l386:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;inc\CANlib.h: 334: else
  1651                           ;inc\CANlib.h: 336: {
  1652                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1653  000D2C  010F               	movlb	15	; () banked
  1654  000D2E  9742               	bcf	66,3,b	;volatile
  1655                           
  1656                           ; BSR set to: 15
  1657                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1658  000D30  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1659  000D34  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1660  000D38  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1661  000D3C  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1662  000D40  0E04               	movlw	4
  1663  000D42  D006               	goto	u3420
  1664  000D44                     u3425:
  1665  000D44  0100               	movlb	0	; () banked
  1666  000D46  90D8               	bcf	status,0,c
  1667  000D48  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1668  000D4A  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1669  000D4C  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1670  000D4E  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  1671  000D50                     u3420:
  1672  000D50  2EE8               	decfsz	wreg,f,c
  1673  000D52  D7F8               	goto	u3425
  1674  000D54  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1675  000D58  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1676  000D5C  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1677  000D60  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1681  000D64  0100               	movlb	0	; () banked
  1682  000D66  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  1683  000D68  0100               	movlb	0	; () banked
  1684  000D6A  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1685  000D6C  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1686  000D6E  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1687  000D70  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1691  000D72  C0C4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1695  000D76  0E07               	movlw	7
  1696  000D78  0100               	movlb	0	; () banked
  1697  000D7A  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1698  000D7C  0100               	movlb	0	; () banked
  1699  000D7E  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1700  000D80  0E00               	movlw	0
  1701  000D82  0100               	movlb	0	; () banked
  1702  000D84  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1703  000D86  0100               	movlb	0	; () banked
  1704  000D88  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1705  000D8A  0E00               	movlw	0
  1706  000D8C  0100               	movlb	0	; () banked
  1707  000D8E  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1708  000D90  0100               	movlb	0	; () banked
  1709  000D92  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1710  000D94  0E00               	movlw	0
  1711  000D96  0100               	movlb	0	; () banked
  1712  000D98  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1713  000D9A  0100               	movlb	0	; () banked
  1714  000D9C  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1718  000D9E  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1719  000DA2  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1720  000DA6  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1721  000DAA  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1722  000DAE  0E05               	movlw	5
  1723  000DB0                     u3435:
  1724  000DB0  90D8               	bcf	status,0,c
  1725  000DB2  0100               	movlb	0	; () banked
  1726  000DB4  37C0               	rlcf	??_CANsendMessage& (0+255),f,b
  1727  000DB6  37C1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1728  000DB8  37C2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1729  000DBA  37C3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1730  000DBC  2EE8               	decfsz	wreg,f,c
  1731  000DBE  D7F8               	goto	u3435
  1732  000DC0  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1733  000DC4  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1734  000DC8  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1735  000DCC  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1739  000DD0  010F               	movlb	15	; () banked
  1740  000DD2  5142               	movf	66,w,b	;volatile
  1741  000DD4  0B1F               	andlw	31
  1742  000DD6  010F               	movlb	15	; () banked
  1743  000DD8  6F42               	movwf	66,b	;volatile
  1744                           
  1745                           ; BSR set to: 15
  1746                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1747  000DDA  C0C4  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1748  000DDE                     l3264:
  1749                           
  1750                           ;inc\CANlib.h: 347: }
  1751                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1752  000DDE  0100               	movlb	0	; () banked
  1753  000DE0  A1BF               	btfss	CANsendMessage@flags& (0+255),0,b
  1754  000DE2  D003               	goto	l393
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1758  000DE4  010F               	movlb	15	; () banked
  1759  000DE6  8140               	bsf	64,0,b	;volatile
  1760  000DE8  D002               	goto	l394
  1761  000DEA                     l393:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;inc\CANlib.h: 351: else
  1765                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1766  000DEA  010F               	movlb	15	; () banked
  1767  000DEC  9140               	bcf	64,0,b	;volatile
  1768  000DEE                     l394:
  1769                           
  1770                           ; BSR set to: 15
  1771                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1772  000DEE  0100               	movlb	0	; () banked
  1773  000DF0  A3BF               	btfss	CANsendMessage@flags& (0+255),1,b
  1774  000DF2  D003               	goto	l395
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1778  000DF4  010F               	movlb	15	; () banked
  1779  000DF6  8340               	bsf	64,1,b	;volatile
  1780  000DF8  D002               	goto	l3270
  1781  000DFA                     l395:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;inc\CANlib.h: 355: else
  1785                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1786  000DFA  010F               	movlb	15	; () banked
  1787  000DFC  9340               	bcf	64,1,b	;volatile
  1788  000DFE                     l3270:
  1789                           
  1790                           ; BSR set to: 15
  1791                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1792  000DFE  C0BC  FFD9         	movff	CANsendMessage@data,fsr2l
  1793  000E02  C0BD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1794  000E06  50DF               	movf	indf2,w,c
  1795  000E08  010F               	movlb	15	; () banked
  1796  000E0A  6F46               	movwf	70,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1800  000E0C  0100               	movlb	0	; () banked
  1801  000E0E  EE20 F001          	lfsr	2,1
  1802  000E12  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1803  000E14  26D9               	addwf	fsr2l,f,c
  1804  000E16  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1805  000E18  22DA               	addwfc	fsr2h,f,c
  1806  000E1A  50DF               	movf	indf2,w,c
  1807  000E1C  010F               	movlb	15	; () banked
  1808  000E1E  6F47               	movwf	71,b	;volatile
  1809                           
  1810                           ; BSR set to: 15
  1811                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1812  000E20  0100               	movlb	0	; () banked
  1813  000E22  EE20 F002          	lfsr	2,2
  1814  000E26  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1815  000E28  26D9               	addwf	fsr2l,f,c
  1816  000E2A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1817  000E2C  22DA               	addwfc	fsr2h,f,c
  1818  000E2E  50DF               	movf	indf2,w,c
  1819  000E30  010F               	movlb	15	; () banked
  1820  000E32  6F48               	movwf	72,b	;volatile
  1821                           
  1822                           ; BSR set to: 15
  1823                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1824  000E34  0100               	movlb	0	; () banked
  1825  000E36  EE20 F003          	lfsr	2,3
  1826  000E3A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1827  000E3C  26D9               	addwf	fsr2l,f,c
  1828  000E3E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1829  000E40  22DA               	addwfc	fsr2h,f,c
  1830  000E42  50DF               	movf	indf2,w,c
  1831  000E44  010F               	movlb	15	; () banked
  1832  000E46  6F49               	movwf	73,b	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1836  000E48  0100               	movlb	0	; () banked
  1837  000E4A  EE20 F004          	lfsr	2,4
  1838  000E4E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1839  000E50  26D9               	addwf	fsr2l,f,c
  1840  000E52  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1841  000E54  22DA               	addwfc	fsr2h,f,c
  1842  000E56  50DF               	movf	indf2,w,c
  1843  000E58  010F               	movlb	15	; () banked
  1844  000E5A  6F4A               	movwf	74,b	;volatile
  1845                           
  1846                           ; BSR set to: 15
  1847                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1848  000E5C  0100               	movlb	0	; () banked
  1849  000E5E  EE20 F005          	lfsr	2,5
  1850  000E62  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1851  000E64  26D9               	addwf	fsr2l,f,c
  1852  000E66  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1853  000E68  22DA               	addwfc	fsr2h,f,c
  1854  000E6A  50DF               	movf	indf2,w,c
  1855  000E6C  010F               	movlb	15	; () banked
  1856  000E6E  6F4B               	movwf	75,b	;volatile
  1857                           
  1858                           ; BSR set to: 15
  1859                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1860  000E70  0100               	movlb	0	; () banked
  1861  000E72  EE20 F006          	lfsr	2,6
  1862  000E76  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1863  000E78  26D9               	addwf	fsr2l,f,c
  1864  000E7A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1865  000E7C  22DA               	addwfc	fsr2h,f,c
  1866  000E7E  50DF               	movf	indf2,w,c
  1867  000E80  010F               	movlb	15	; () banked
  1868  000E82  6F4C               	movwf	76,b	;volatile
  1869                           
  1870                           ; BSR set to: 15
  1871                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1872  000E84  0100               	movlb	0	; () banked
  1873  000E86  EE20 F007          	lfsr	2,7
  1874  000E8A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  1875  000E8C  26D9               	addwf	fsr2l,f,c
  1876  000E8E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1877  000E90  22DA               	addwfc	fsr2h,f,c
  1878  000E92  50DF               	movf	indf2,w,c
  1879  000E94  010F               	movlb	15	; () banked
  1880  000E96  6F4D               	movwf	77,b	;volatile
  1881                           
  1882                           ; BSR set to: 15
  1883                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1884  000E98  010F               	movlb	15	; () banked
  1885  000E9A  8740               	bsf	64,3,b	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888                           ;inc\CANlib.h: 368: return;
  1889  000E9C  0012               	return	
  1890  000E9E                     l383:
  1891                           
  1892                           ; BSR set to: 15
  1893                           ;inc\CANlib.h: 369: }
  1894                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1895  000E9E  010F               	movlb	15	; () banked
  1896  000EA0  B730               	btfsc	48,3,b	;volatile
  1897  000EA2  D13F               	goto	l398
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1901  000EA4  C0BE  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1902                           
  1903                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1904  000EA8  0100               	movlb	0	; () banked
  1905  000EAA  ADBF               	btfss	CANsendMessage@flags& (0+255),6,b
  1906  000EAC  D003               	goto	l399
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1910  000EAE  010F               	movlb	15	; () banked
  1911  000EB0  8D35               	bsf	53,6,b	;volatile
  1912  000EB2  D002               	goto	l400
  1913  000EB4                     l399:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;inc\CANlib.h: 378: else
  1917                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1918  000EB4  010F               	movlb	15	; () banked
  1919  000EB6  9D35               	bcf	53,6,b	;volatile
  1920  000EB8                     l400:
  1921                           
  1922                           ; BSR set to: 15
  1923                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1924  000EB8  0100               	movlb	0	; () banked
  1925  000EBA  A7BF               	btfss	CANsendMessage@flags& (0+255),3,b
  1926  000EBC  D079               	goto	l401
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;inc\CANlib.h: 382: {
  1930                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1931  000EBE  0100               	movlb	0	; () banked
  1932  000EC0  51B8               	movf	CANsendMessage@identifier& (0+255),w,b
  1933  000EC2  0100               	movlb	0	; () banked
  1934  000EC4  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1935  000EC6  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1936  000EC8  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1937  000ECA  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1941  000ECC  C0C4  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1945  000ED0  0E00               	movlw	0
  1946  000ED2  0100               	movlb	0	; () banked
  1947  000ED4  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1948  000ED6  0100               	movlb	0	; () banked
  1949  000ED8  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  1950  000EDA  0EFF               	movlw	255
  1951  000EDC  0100               	movlb	0	; () banked
  1952  000EDE  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1953  000EE0  0100               	movlb	0	; () banked
  1954  000EE2  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1955  000EE4  0E00               	movlw	0
  1956  000EE6  0100               	movlb	0	; () banked
  1957  000EE8  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1958  000EEA  0100               	movlb	0	; () banked
  1959  000EEC  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1960  000EEE  0E00               	movlw	0
  1961  000EF0  0100               	movlb	0	; () banked
  1962  000EF2  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1963  000EF4  0100               	movlb	0	; () banked
  1964  000EF6  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1968  000EF8  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1969  000EFC  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1970  000F00  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1971  000F04  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1972  000F08  C0C1  F0C0         	movff	??_CANsendMessage+1,??_CANsendMessage
  1973  000F0C  C0C2  F0C1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1974  000F10  C0C3  F0C2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1975  000F14  0100               	movlb	0	; () banked
  1976  000F16  6BC3               	clrf	(??_CANsendMessage+3)& (0+255),b
  1977  000F18  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1978  000F1C  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1979  000F20  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1980  000F24  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1984  000F28  C0C4  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1988  000F2C  0E00               	movlw	0
  1989  000F2E  010F               	movlb	15	; () banked
  1990  000F30  6F32               	movwf	50,b	;volatile
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1994  000F32  010F               	movlb	15	; () banked
  1995  000F34  8732               	bsf	50,3,b	;volatile
  1996                           
  1997                           ; BSR set to: 15
  1998                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1999  000F36  0100               	movlb	0	; () banked
  2000  000F38  A1BA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2001  000F3A  D002               	goto	l402
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2005  000F3C  010F               	movlb	15	; () banked
  2006  000F3E  8132               	bsf	50,0,b	;volatile
  2007  000F40                     l402:
  2008                           
  2009                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2010  000F40  0100               	movlb	0	; () banked
  2011  000F42  A3BA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2012  000F44  D002               	goto	l403
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2016  000F46  010F               	movlb	15	; () banked
  2017  000F48  8332               	bsf	50,1,b	;volatile
  2018  000F4A                     l403:
  2019                           
  2020                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2021  000F4A  0100               	movlb	0	; () banked
  2022  000F4C  A5BA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2023  000F4E  D002               	goto	l404
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2027  000F50  010F               	movlb	15	; () banked
  2028  000F52  8B32               	bsf	50,5,b	;volatile
  2029  000F54                     l404:
  2030                           
  2031                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2032  000F54  0100               	movlb	0	; () banked
  2033  000F56  A7BA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2034  000F58  D002               	goto	l405
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2038  000F5A  010F               	movlb	15	; () banked
  2039  000F5C  8D32               	bsf	50,6,b	;volatile
  2040  000F5E                     l405:
  2041                           
  2042                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2043  000F5E  0100               	movlb	0	; () banked
  2044  000F60  A9BA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2045  000F62  D002               	goto	l3320
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2049  000F64  010F               	movlb	15	; () banked
  2050  000F66  8F32               	bsf	50,7,b	;volatile
  2051  000F68                     l3320:
  2052                           
  2053                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2054  000F68  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2055  000F6C  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2056  000F70  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2057  000F74  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2058  000F78  0E16               	movlw	22
  2059  000F7A  D006               	goto	u3540
  2060  000F7C                     u3545:
  2061  000F7C  0100               	movlb	0	; () banked
  2062  000F7E  90D8               	bcf	status,0,c
  2063  000F80  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2064  000F82  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2065  000F84  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2066  000F86  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2067  000F88                     u3540:
  2068  000F88  2EE8               	decfsz	wreg,f,c
  2069  000F8A  D7F8               	goto	u3545
  2070  000F8C  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2071  000F90  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2072  000F94  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2073  000F98  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2077  000F9C  0100               	movlb	0	; () banked
  2078  000F9E  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2079  000FA0  0100               	movlb	0	; () banked
  2080  000FA2  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2081  000FA4  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2082  000FA6  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2083  000FA8  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2087  000FAA  C0C4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2088                           
  2089                           ;inc\CANlib.h: 407: }
  2090  000FAE  D059               	goto	l3340
  2091  000FB0                     l401:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;inc\CANlib.h: 409: else
  2095                           ;inc\CANlib.h: 411: {
  2096                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2097  000FB0  010F               	movlb	15	; () banked
  2098  000FB2  9732               	bcf	50,3,b	;volatile
  2099                           
  2100                           ; BSR set to: 15
  2101                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2102  000FB4  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2103  000FB8  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2104  000FBC  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2105  000FC0  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2106  000FC4  0E04               	movlw	4
  2107  000FC6  D006               	goto	u3550
  2108  000FC8                     u3555:
  2109  000FC8  0100               	movlb	0	; () banked
  2110  000FCA  90D8               	bcf	status,0,c
  2111  000FCC  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2112  000FCE  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2113  000FD0  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2114  000FD2  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2115  000FD4                     u3550:
  2116  000FD4  2EE8               	decfsz	wreg,f,c
  2117  000FD6  D7F8               	goto	u3555
  2118  000FD8  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2119  000FDC  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2120  000FE0  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2121  000FE4  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2125  000FE8  0100               	movlb	0	; () banked
  2126  000FEA  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2127  000FEC  0100               	movlb	0	; () banked
  2128  000FEE  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2129  000FF0  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2130  000FF2  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2131  000FF4  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2135  000FF6  C0C4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2139  000FFA  0E07               	movlw	7
  2140  000FFC  0100               	movlb	0	; () banked
  2141  000FFE  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2142  001000  0100               	movlb	0	; () banked
  2143  001002  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2144  001004  0E00               	movlw	0
  2145  001006  0100               	movlb	0	; () banked
  2146  001008  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2147  00100A  0100               	movlb	0	; () banked
  2148  00100C  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2149  00100E  0E00               	movlw	0
  2150  001010  0100               	movlb	0	; () banked
  2151  001012  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2152  001014  0100               	movlb	0	; () banked
  2153  001016  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2154  001018  0E00               	movlw	0
  2155  00101A  0100               	movlb	0	; () banked
  2156  00101C  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2157  00101E  0100               	movlb	0	; () banked
  2158  001020  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2162  001022  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2163  001026  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2164  00102A  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2165  00102E  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2166  001032  0E05               	movlw	5
  2167  001034                     u3565:
  2168  001034  90D8               	bcf	status,0,c
  2169  001036  0100               	movlb	0	; () banked
  2170  001038  37C0               	rlcf	??_CANsendMessage& (0+255),f,b
  2171  00103A  37C1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2172  00103C  37C2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2173  00103E  37C3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2174  001040  2EE8               	decfsz	wreg,f,c
  2175  001042  D7F8               	goto	u3565
  2176  001044  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2177  001048  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2178  00104C  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2179  001050  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2183  001054  010F               	movlb	15	; () banked
  2184  001056  5132               	movf	50,w,b	;volatile
  2185  001058  0B1F               	andlw	31
  2186  00105A  010F               	movlb	15	; () banked
  2187  00105C  6F32               	movwf	50,b	;volatile
  2188                           
  2189                           ; BSR set to: 15
  2190                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2191  00105E  C0C4  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2192  001062                     l3340:
  2193                           
  2194                           ;inc\CANlib.h: 422: }
  2195                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2196  001062  0100               	movlb	0	; () banked
  2197  001064  A1BF               	btfss	CANsendMessage@flags& (0+255),0,b
  2198  001066  D003               	goto	l408
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2202  001068  010F               	movlb	15	; () banked
  2203  00106A  8130               	bsf	48,0,b	;volatile
  2204  00106C  D002               	goto	l409
  2205  00106E                     l408:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;inc\CANlib.h: 426: else
  2209                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2210  00106E  010F               	movlb	15	; () banked
  2211  001070  9130               	bcf	48,0,b	;volatile
  2212  001072                     l409:
  2213                           
  2214                           ; BSR set to: 15
  2215                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2216  001072  0100               	movlb	0	; () banked
  2217  001074  A3BF               	btfss	CANsendMessage@flags& (0+255),1,b
  2218  001076  D003               	goto	l410
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2222  001078  010F               	movlb	15	; () banked
  2223  00107A  8330               	bsf	48,1,b	;volatile
  2224  00107C  D002               	goto	l3346
  2225  00107E                     l410:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;inc\CANlib.h: 430: else
  2229                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2230  00107E  010F               	movlb	15	; () banked
  2231  001080  9330               	bcf	48,1,b	;volatile
  2232  001082                     l3346:
  2233                           
  2234                           ; BSR set to: 15
  2235                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2236  001082  C0BC  FFD9         	movff	CANsendMessage@data,fsr2l
  2237  001086  C0BD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2238  00108A  50DF               	movf	indf2,w,c
  2239  00108C  010F               	movlb	15	; () banked
  2240  00108E  6F36               	movwf	54,b	;volatile
  2241                           
  2242                           ; BSR set to: 15
  2243                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2244  001090  0100               	movlb	0	; () banked
  2245  001092  EE20 F001          	lfsr	2,1
  2246  001096  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2247  001098  26D9               	addwf	fsr2l,f,c
  2248  00109A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2249  00109C  22DA               	addwfc	fsr2h,f,c
  2250  00109E  50DF               	movf	indf2,w,c
  2251  0010A0  010F               	movlb	15	; () banked
  2252  0010A2  6F37               	movwf	55,b	;volatile
  2253                           
  2254                           ; BSR set to: 15
  2255                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2256  0010A4  0100               	movlb	0	; () banked
  2257  0010A6  EE20 F002          	lfsr	2,2
  2258  0010AA  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2259  0010AC  26D9               	addwf	fsr2l,f,c
  2260  0010AE  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2261  0010B0  22DA               	addwfc	fsr2h,f,c
  2262  0010B2  50DF               	movf	indf2,w,c
  2263  0010B4  010F               	movlb	15	; () banked
  2264  0010B6  6F38               	movwf	56,b	;volatile
  2265                           
  2266                           ; BSR set to: 15
  2267                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2268  0010B8  0100               	movlb	0	; () banked
  2269  0010BA  EE20 F003          	lfsr	2,3
  2270  0010BE  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2271  0010C0  26D9               	addwf	fsr2l,f,c
  2272  0010C2  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2273  0010C4  22DA               	addwfc	fsr2h,f,c
  2274  0010C6  50DF               	movf	indf2,w,c
  2275  0010C8  010F               	movlb	15	; () banked
  2276  0010CA  6F39               	movwf	57,b	;volatile
  2277                           
  2278                           ; BSR set to: 15
  2279                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2280  0010CC  0100               	movlb	0	; () banked
  2281  0010CE  EE20 F004          	lfsr	2,4
  2282  0010D2  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2283  0010D4  26D9               	addwf	fsr2l,f,c
  2284  0010D6  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2285  0010D8  22DA               	addwfc	fsr2h,f,c
  2286  0010DA  50DF               	movf	indf2,w,c
  2287  0010DC  010F               	movlb	15	; () banked
  2288  0010DE  6F3A               	movwf	58,b	;volatile
  2289                           
  2290                           ; BSR set to: 15
  2291                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2292  0010E0  0100               	movlb	0	; () banked
  2293  0010E2  EE20 F005          	lfsr	2,5
  2294  0010E6  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2295  0010E8  26D9               	addwf	fsr2l,f,c
  2296  0010EA  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2297  0010EC  22DA               	addwfc	fsr2h,f,c
  2298  0010EE  50DF               	movf	indf2,w,c
  2299  0010F0  010F               	movlb	15	; () banked
  2300  0010F2  6F3B               	movwf	59,b	;volatile
  2301                           
  2302                           ; BSR set to: 15
  2303                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2304  0010F4  0100               	movlb	0	; () banked
  2305  0010F6  EE20 F006          	lfsr	2,6
  2306  0010FA  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2307  0010FC  26D9               	addwf	fsr2l,f,c
  2308  0010FE  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2309  001100  22DA               	addwfc	fsr2h,f,c
  2310  001102  50DF               	movf	indf2,w,c
  2311  001104  010F               	movlb	15	; () banked
  2312  001106  6F3C               	movwf	60,b	;volatile
  2313                           
  2314                           ; BSR set to: 15
  2315                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2316  001108  0100               	movlb	0	; () banked
  2317  00110A  EE20 F007          	lfsr	2,7
  2318  00110E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2319  001110  26D9               	addwf	fsr2l,f,c
  2320  001112  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2321  001114  22DA               	addwfc	fsr2h,f,c
  2322  001116  50DF               	movf	indf2,w,c
  2323  001118  010F               	movlb	15	; () banked
  2324  00111A  6F3D               	movwf	61,b	;volatile
  2325                           
  2326                           ; BSR set to: 15
  2327                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2328  00111C  010F               	movlb	15	; () banked
  2329  00111E  8730               	bsf	48,3,b	;volatile
  2330                           
  2331                           ; BSR set to: 15
  2332                           ;inc\CANlib.h: 444: return;
  2333  001120  0012               	return	
  2334  001122                     l398:
  2335                           
  2336                           ; BSR set to: 15
  2337                           ;inc\CANlib.h: 445: }
  2338                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2339  001122  010F               	movlb	15	; () banked
  2340  001124  B720               	btfsc	32,3,b	;volatile
  2341  001126  0012               	return	
  2342                           
  2343                           ; BSR set to: 15
  2344                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2345  001128  C0BE  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2346                           
  2347                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2348  00112C  0100               	movlb	0	; () banked
  2349  00112E  ADBF               	btfss	CANsendMessage@flags& (0+255),6,b
  2350  001130  D003               	goto	l413
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2354  001132  010F               	movlb	15	; () banked
  2355  001134  8D25               	bsf	37,6,b	;volatile
  2356  001136  D002               	goto	l414
  2357  001138                     l413:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;inc\CANlib.h: 454: else
  2361                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2362  001138  010F               	movlb	15	; () banked
  2363  00113A  9D25               	bcf	37,6,b	;volatile
  2364  00113C                     l414:
  2365                           
  2366                           ; BSR set to: 15
  2367                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2368  00113C  0100               	movlb	0	; () banked
  2369  00113E  A7BF               	btfss	CANsendMessage@flags& (0+255),3,b
  2370  001140  D079               	goto	l415
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;inc\CANlib.h: 458: {
  2374                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2375  001142  0100               	movlb	0	; () banked
  2376  001144  51B8               	movf	CANsendMessage@identifier& (0+255),w,b
  2377  001146  0100               	movlb	0	; () banked
  2378  001148  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2379  00114A  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2380  00114C  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2381  00114E  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2385  001150  C0C4  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2389  001154  0E00               	movlw	0
  2390  001156  0100               	movlb	0	; () banked
  2391  001158  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2392  00115A  0100               	movlb	0	; () banked
  2393  00115C  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2394  00115E  0EFF               	movlw	255
  2395  001160  0100               	movlb	0	; () banked
  2396  001162  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2397  001164  0100               	movlb	0	; () banked
  2398  001166  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2399  001168  0E00               	movlw	0
  2400  00116A  0100               	movlb	0	; () banked
  2401  00116C  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2402  00116E  0100               	movlb	0	; () banked
  2403  001170  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2404  001172  0E00               	movlw	0
  2405  001174  0100               	movlb	0	; () banked
  2406  001176  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2407  001178  0100               	movlb	0	; () banked
  2408  00117A  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2412  00117C  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2413  001180  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2414  001184  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2415  001188  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2416  00118C  C0C1  F0C0         	movff	??_CANsendMessage+1,??_CANsendMessage
  2417  001190  C0C2  F0C1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2418  001194  C0C3  F0C2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2419  001198  0100               	movlb	0	; () banked
  2420  00119A  6BC3               	clrf	(??_CANsendMessage+3)& (0+255),b
  2421  00119C  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2422  0011A0  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2423  0011A4  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2424  0011A8  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2428  0011AC  C0C4  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2432  0011B0  0E00               	movlw	0
  2433  0011B2  010F               	movlb	15	; () banked
  2434  0011B4  6F22               	movwf	34,b	;volatile
  2435                           
  2436                           ; BSR set to: 15
  2437                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2438  0011B6  010F               	movlb	15	; () banked
  2439  0011B8  8722               	bsf	34,3,b	;volatile
  2440                           
  2441                           ; BSR set to: 15
  2442                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2443  0011BA  0100               	movlb	0	; () banked
  2444  0011BC  A1BA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2445  0011BE  D002               	goto	l416
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2449  0011C0  010F               	movlb	15	; () banked
  2450  0011C2  8122               	bsf	34,0,b	;volatile
  2451  0011C4                     l416:
  2452                           
  2453                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2454  0011C4  0100               	movlb	0	; () banked
  2455  0011C6  A3BA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2456  0011C8  D002               	goto	l417
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2460  0011CA  010F               	movlb	15	; () banked
  2461  0011CC  8322               	bsf	34,1,b	;volatile
  2462  0011CE                     l417:
  2463                           
  2464                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2465  0011CE  0100               	movlb	0	; () banked
  2466  0011D0  A5BA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2467  0011D2  D002               	goto	l418
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2471  0011D4  010F               	movlb	15	; () banked
  2472  0011D6  8B22               	bsf	34,5,b	;volatile
  2473  0011D8                     l418:
  2474                           
  2475                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2476  0011D8  0100               	movlb	0	; () banked
  2477  0011DA  A7BA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2478  0011DC  D002               	goto	l419
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2482  0011DE  010F               	movlb	15	; () banked
  2483  0011E0  8D22               	bsf	34,6,b	;volatile
  2484  0011E2                     l419:
  2485                           
  2486                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2487  0011E2  0100               	movlb	0	; () banked
  2488  0011E4  A9BA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2489  0011E6  D002               	goto	l3396
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2493  0011E8  010F               	movlb	15	; () banked
  2494  0011EA  8F22               	bsf	34,7,b	;volatile
  2495  0011EC                     l3396:
  2496                           
  2497                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2498  0011EC  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2499  0011F0  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2500  0011F4  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2501  0011F8  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2502  0011FC  0E16               	movlw	22
  2503  0011FE  D006               	goto	u3670
  2504  001200                     u3675:
  2505  001200  0100               	movlb	0	; () banked
  2506  001202  90D8               	bcf	status,0,c
  2507  001204  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2508  001206  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2509  001208  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2510  00120A  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2511  00120C                     u3670:
  2512  00120C  2EE8               	decfsz	wreg,f,c
  2513  00120E  D7F8               	goto	u3675
  2514  001210  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2515  001214  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2516  001218  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2517  00121C  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2521  001220  0100               	movlb	0	; () banked
  2522  001222  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2523  001224  0100               	movlb	0	; () banked
  2524  001226  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2525  001228  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2526  00122A  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2527  00122C  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2531  00122E  C0C4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2532                           
  2533                           ;inc\CANlib.h: 483: }
  2534  001232  D059               	goto	l3416
  2535  001234                     l415:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;inc\CANlib.h: 485: else
  2539                           ;inc\CANlib.h: 487: {
  2540                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2541  001234  010F               	movlb	15	; () banked
  2542  001236  9722               	bcf	34,3,b	;volatile
  2543                           
  2544                           ; BSR set to: 15
  2545                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2546  001238  C0B8  F0C0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2547  00123C  C0B9  F0C1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2548  001240  C0BA  F0C2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2549  001244  C0BB  F0C3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2550  001248  0E04               	movlw	4
  2551  00124A  D006               	goto	u3680
  2552  00124C                     u3685:
  2553  00124C  0100               	movlb	0	; () banked
  2554  00124E  90D8               	bcf	status,0,c
  2555  001250  33C3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2556  001252  33C2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2557  001254  33C1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2558  001256  33C0               	rrcf	??_CANsendMessage& (0+255),f,b
  2559  001258                     u3680:
  2560  001258  2EE8               	decfsz	wreg,f,c
  2561  00125A  D7F8               	goto	u3685
  2562  00125C  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2563  001260  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2564  001264  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2565  001268  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2569  00126C  0100               	movlb	0	; () banked
  2570  00126E  51C4               	movf	CANsendMessage@tamp& (0+255),w,b
  2571  001270  0100               	movlb	0	; () banked
  2572  001272  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2573  001274  6BC5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2574  001276  6BC6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2575  001278  6BC7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2579  00127A  C0C4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2583  00127E  0E07               	movlw	7
  2584  001280  0100               	movlb	0	; () banked
  2585  001282  15B8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2586  001284  0100               	movlb	0	; () banked
  2587  001286  6FC4               	movwf	CANsendMessage@tamp& (0+255),b
  2588  001288  0E00               	movlw	0
  2589  00128A  0100               	movlb	0	; () banked
  2590  00128C  15B9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2591  00128E  0100               	movlb	0	; () banked
  2592  001290  6FC5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2593  001292  0E00               	movlw	0
  2594  001294  0100               	movlb	0	; () banked
  2595  001296  15BA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2596  001298  0100               	movlb	0	; () banked
  2597  00129A  6FC6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2598  00129C  0E00               	movlw	0
  2599  00129E  0100               	movlb	0	; () banked
  2600  0012A0  15BB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2601  0012A2  0100               	movlb	0	; () banked
  2602  0012A4  6FC7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2606  0012A6  C0C4  F0C0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2607  0012AA  C0C5  F0C1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2608  0012AE  C0C6  F0C2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2609  0012B2  C0C7  F0C3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2610  0012B6  0E05               	movlw	5
  2611  0012B8                     u3695:
  2612  0012B8  90D8               	bcf	status,0,c
  2613  0012BA  0100               	movlb	0	; () banked
  2614  0012BC  37C0               	rlcf	??_CANsendMessage& (0+255),f,b
  2615  0012BE  37C1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2616  0012C0  37C2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2617  0012C2  37C3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2618  0012C4  2EE8               	decfsz	wreg,f,c
  2619  0012C6  D7F8               	goto	u3695
  2620  0012C8  C0C0  F0C4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2621  0012CC  C0C1  F0C5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2622  0012D0  C0C2  F0C6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2623  0012D4  C0C3  F0C7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2627  0012D8  010F               	movlb	15	; () banked
  2628  0012DA  5122               	movf	34,w,b	;volatile
  2629  0012DC  0B1F               	andlw	31
  2630  0012DE  010F               	movlb	15	; () banked
  2631  0012E0  6F22               	movwf	34,b	;volatile
  2632                           
  2633                           ; BSR set to: 15
  2634                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2635  0012E2  C0C4  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2636  0012E6                     l3416:
  2637                           
  2638                           ;inc\CANlib.h: 498: }
  2639                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2640  0012E6  0100               	movlb	0	; () banked
  2641  0012E8  A1BF               	btfss	CANsendMessage@flags& (0+255),0,b
  2642  0012EA  D003               	goto	l422
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2646  0012EC  010F               	movlb	15	; () banked
  2647  0012EE  8120               	bsf	32,0,b	;volatile
  2648  0012F0  D002               	goto	l423
  2649  0012F2                     l422:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;inc\CANlib.h: 502: else
  2653                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2654  0012F2  010F               	movlb	15	; () banked
  2655  0012F4  9120               	bcf	32,0,b	;volatile
  2656  0012F6                     l423:
  2657                           
  2658                           ; BSR set to: 15
  2659                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2660  0012F6  0100               	movlb	0	; () banked
  2661  0012F8  A3BF               	btfss	CANsendMessage@flags& (0+255),1,b
  2662  0012FA  D003               	goto	l424
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2666  0012FC  010F               	movlb	15	; () banked
  2667  0012FE  8320               	bsf	32,1,b	;volatile
  2668  001300  D002               	goto	l3422
  2669  001302                     l424:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;inc\CANlib.h: 506: else
  2673                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2674  001302  010F               	movlb	15	; () banked
  2675  001304  9320               	bcf	32,1,b	;volatile
  2676  001306                     l3422:
  2677                           
  2678                           ; BSR set to: 15
  2679                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2680  001306  C0BC  FFD9         	movff	CANsendMessage@data,fsr2l
  2681  00130A  C0BD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2682  00130E  50DF               	movf	indf2,w,c
  2683  001310  010F               	movlb	15	; () banked
  2684  001312  6F26               	movwf	38,b	;volatile
  2685                           
  2686                           ; BSR set to: 15
  2687                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2688  001314  0100               	movlb	0	; () banked
  2689  001316  EE20 F001          	lfsr	2,1
  2690  00131A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2691  00131C  26D9               	addwf	fsr2l,f,c
  2692  00131E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2693  001320  22DA               	addwfc	fsr2h,f,c
  2694  001322  50DF               	movf	indf2,w,c
  2695  001324  010F               	movlb	15	; () banked
  2696  001326  6F27               	movwf	39,b	;volatile
  2697                           
  2698                           ; BSR set to: 15
  2699                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2700  001328  0100               	movlb	0	; () banked
  2701  00132A  EE20 F002          	lfsr	2,2
  2702  00132E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2703  001330  26D9               	addwf	fsr2l,f,c
  2704  001332  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2705  001334  22DA               	addwfc	fsr2h,f,c
  2706  001336  50DF               	movf	indf2,w,c
  2707  001338  010F               	movlb	15	; () banked
  2708  00133A  6F28               	movwf	40,b	;volatile
  2709                           
  2710                           ; BSR set to: 15
  2711                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2712  00133C  0100               	movlb	0	; () banked
  2713  00133E  EE20 F003          	lfsr	2,3
  2714  001342  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2715  001344  26D9               	addwf	fsr2l,f,c
  2716  001346  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2717  001348  22DA               	addwfc	fsr2h,f,c
  2718  00134A  50DF               	movf	indf2,w,c
  2719  00134C  010F               	movlb	15	; () banked
  2720  00134E  6F29               	movwf	41,b	;volatile
  2721                           
  2722                           ; BSR set to: 15
  2723                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2724  001350  0100               	movlb	0	; () banked
  2725  001352  EE20 F004          	lfsr	2,4
  2726  001356  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2727  001358  26D9               	addwf	fsr2l,f,c
  2728  00135A  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2729  00135C  22DA               	addwfc	fsr2h,f,c
  2730  00135E  50DF               	movf	indf2,w,c
  2731  001360  010F               	movlb	15	; () banked
  2732  001362  6F2A               	movwf	42,b	;volatile
  2733                           
  2734                           ; BSR set to: 15
  2735                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2736  001364  0100               	movlb	0	; () banked
  2737  001366  EE20 F005          	lfsr	2,5
  2738  00136A  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2739  00136C  26D9               	addwf	fsr2l,f,c
  2740  00136E  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2741  001370  22DA               	addwfc	fsr2h,f,c
  2742  001372  50DF               	movf	indf2,w,c
  2743  001374  010F               	movlb	15	; () banked
  2744  001376  6F2B               	movwf	43,b	;volatile
  2745                           
  2746                           ; BSR set to: 15
  2747                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2748  001378  0100               	movlb	0	; () banked
  2749  00137A  EE20 F006          	lfsr	2,6
  2750  00137E  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2751  001380  26D9               	addwf	fsr2l,f,c
  2752  001382  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2753  001384  22DA               	addwfc	fsr2h,f,c
  2754  001386  50DF               	movf	indf2,w,c
  2755  001388  010F               	movlb	15	; () banked
  2756  00138A  6F2C               	movwf	44,b	;volatile
  2757                           
  2758                           ; BSR set to: 15
  2759                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2760  00138C  0100               	movlb	0	; () banked
  2761  00138E  EE20 F007          	lfsr	2,7
  2762  001392  51BC               	movf	CANsendMessage@data& (0+255),w,b
  2763  001394  26D9               	addwf	fsr2l,f,c
  2764  001396  51BD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2765  001398  22DA               	addwfc	fsr2h,f,c
  2766  00139A  50DF               	movf	indf2,w,c
  2767  00139C  010F               	movlb	15	; () banked
  2768  00139E  6F2D               	movwf	45,b	;volatile
  2769                           
  2770                           ; BSR set to: 15
  2771                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2772  0013A0  010F               	movlb	15	; () banked
  2773  0013A2  8720               	bsf	32,3,b	;volatile
  2774                           
  2775                           ; BSR set to: 15
  2776                           ;inc\CANlib.h: 520: return;
  2777  0013A4  0012               	return	
  2778  0013A6                     __end_of_CANsendMessage:
  2779                           	opt stack 0
  2780                           tblptru	equ	0xFF8
  2781                           tblptrh	equ	0xFF7
  2782                           tblptrl	equ	0xFF6
  2783                           tablat	equ	0xFF5
  2784                           prodh	equ	0xFF4
  2785                           prodl	equ	0xFF3
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           postdec1	equ	0xFE5
  2789                           fsr1l	equ	0xFE1
  2790                           indf2	equ	0xFDF
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _CANisTxReady *****************
  2796 ;; Defined at:
  2797 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      unsigned char 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2811 ;;      Params:         0       0       0       0
  2812 ;;      Locals:         0       1       0       0
  2813 ;;      Temps:          0       0       0       0
  2814 ;;      Totals:         0       1       0       0
  2815 ;;Total ram usage:        1 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    4
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_remote_frame_handler
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text3
  2826  0027C8                     __ptext3:
  2827                           	opt stack 0
  2828  0027C8                     _CANisTxReady:
  2829                           	opt stack 25
  2830                           
  2831                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2832                           
  2833                           ; BSR set to: 15
  2834                           ;incstack = 0
  2835  0027C8  0E01               	movlw	1
  2836  0027CA  0100               	movlb	0	; () banked
  2837  0027CC  6FB8               	movwf	_CANisTxReady$3282& (0+255),b
  2838                           
  2839                           ; BSR set to: 0
  2840  0027CE  010F               	movlb	15	; () banked
  2841  0027D0  A740               	btfss	64,3,b	;volatile
  2842  0027D2  D009               	goto	l576
  2843                           
  2844                           ; BSR set to: 15
  2845  0027D4  010F               	movlb	15	; () banked
  2846  0027D6  A730               	btfss	48,3,b	;volatile
  2847  0027D8  D006               	goto	l576
  2848                           
  2849                           ; BSR set to: 15
  2850  0027DA  010F               	movlb	15	; () banked
  2851  0027DC  A720               	btfss	32,3,b	;volatile
  2852  0027DE  D003               	goto	l576
  2853                           
  2854                           ; BSR set to: 15
  2855  0027E0  0E00               	movlw	0
  2856  0027E2  0100               	movlb	0	; () banked
  2857  0027E4  6FB8               	movwf	_CANisTxReady$3282& (0+255),b
  2858  0027E6                     l576:
  2859  0027E6  0100               	movlb	0	; () banked
  2860  0027E8  51B8               	movf	_CANisTxReady$3282& (0+255),w,b
  2861  0027EA  0012               	return	
  2862  0027EC                     __end_of_CANisTxReady:
  2863                           	opt stack 0
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           prodh	equ	0xFF4
  2869                           prodl	equ	0xFF3
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           postdec1	equ	0xFE5
  2873                           fsr1l	equ	0xFE1
  2874                           indf2	equ	0xFDF
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _board_initialization *****************
  2880 ;; Defined at:
  2881 ;;		line 345 in file "ABS_Code.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2895 ;;      Params:         0       0       0       0
  2896 ;;      Locals:         0       0       0       0
  2897 ;;      Temps:          0       0       0       0
  2898 ;;      Totals:         0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    6
  2902 ;; This function calls:
  2903 ;;		_CANInitialize
  2904 ;;		_delay_ms
  2905 ;; This function is called by:
  2906 ;;		_main
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text4
  2911  0023DA                     __ptext4:
  2912                           	opt stack 0
  2913  0023DA                     _board_initialization:
  2914                           	opt stack 24
  2915                           
  2916                           ;ABS_Code.c: 347: LATA = 0x00;
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;incstack = 0
  2920  0023DA  0E00               	movlw	0
  2921  0023DC  6E89               	movwf	3977,c	;volatile
  2922                           
  2923                           ;ABS_Code.c: 348: TRISA = 0b11111101;
  2924  0023DE  0EFD               	movlw	253
  2925  0023E0  6E92               	movwf	3986,c	;volatile
  2926                           
  2927                           ;ABS_Code.c: 349: LATB = 0x00;
  2928  0023E2  0E00               	movlw	0
  2929  0023E4  6E8A               	movwf	3978,c	;volatile
  2930                           
  2931                           ;ABS_Code.c: 350: TRISB = 0b11111111;
  2932  0023E6  6893               	setf	3987,c	;volatile
  2933                           
  2934                           ;ABS_Code.c: 351: LATC = 0x00;
  2935  0023E8  0E00               	movlw	0
  2936  0023EA  6E8B               	movwf	3979,c	;volatile
  2937                           
  2938                           ;ABS_Code.c: 352: TRISC = 0b11111100;
  2939  0023EC  0EFC               	movlw	252
  2940  0023EE  6E94               	movwf	3988,c	;volatile
  2941                           
  2942                           ;ABS_Code.c: 353: LATD = 0x00;
  2943  0023F0  0E00               	movlw	0
  2944  0023F2  6E8C               	movwf	3980,c	;volatile
  2945                           
  2946                           ;ABS_Code.c: 354: TRISD = 0xFF;
  2947  0023F4  6895               	setf	3989,c	;volatile
  2948                           
  2949                           ;ABS_Code.c: 355: LATE = 0x00;
  2950  0023F6  0E00               	movlw	0
  2951  0023F8  6E8D               	movwf	3981,c	;volatile
  2952                           
  2953                           ;ABS_Code.c: 356: TRISE = 0xFF;
  2954  0023FA  6896               	setf	3990,c	;volatile
  2955                           
  2956                           ;ABS_Code.c: 358: ADCON1 = 0x11111110;
  2957  0023FC  0E10               	movlw	16
  2958  0023FE  6EC1               	movwf	4033,c	;volatile
  2959                           
  2960                           ;ABS_Code.c: 361: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2961  002400  0E06               	movlw	6
  2962  002402  0100               	movlb	0	; () banked
  2963  002404  6FC6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2964  002406  0E05               	movlw	5
  2965  002408  0100               	movlb	0	; () banked
  2966  00240A  6FC7               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2967  00240C  0E01               	movlw	1
  2968  00240E  0100               	movlb	0	; () banked
  2969  002410  6FC8               	movwf	CANInitialize@SJW& (0+255),b
  2970  002412  0E03               	movlw	3
  2971  002414  0100               	movlb	0	; () banked
  2972  002416  6FC9               	movwf	CANInitialize@BRP& (0+255),b
  2973  002418  0E9D               	movlw	157
  2974  00241A  0100               	movlb	0	; () banked
  2975  00241C  6FCA               	movwf	CANInitialize@flags& (0+255),b
  2976  00241E  0E04               	movlw	4
  2977  002420  EC74  F00F         	call	_CANInitialize
  2978                           
  2979                           ;ABS_Code.c: 364: PIR3bits.RXB1IF = 0;
  2980  002424  92A4               	bcf	4004,1,c	;volatile
  2981                           
  2982                           ;ABS_Code.c: 365: PIR3bits.RXB0IF = 0;
  2983  002426  90A4               	bcf	4004,0,c	;volatile
  2984                           
  2985                           ;ABS_Code.c: 366: INTCONbits.TMR0IF = 0;
  2986  002428  94F2               	bcf	intcon,2,c	;volatile
  2987                           
  2988                           ;ABS_Code.c: 367: PIR1bits.TMR1IF = 0;
  2989  00242A  909E               	bcf	3998,0,c	;volatile
  2990                           
  2991                           ;ABS_Code.c: 368: PIR2bits.TMR3IF = 0;
  2992  00242C  92A1               	bcf	4001,1,c	;volatile
  2993                           
  2994                           ;ABS_Code.c: 369: INTCONbits.INT0IF = 0;
  2995  00242E  92F2               	bcf	intcon,1,c	;volatile
  2996                           
  2997                           ;ABS_Code.c: 370: INTCON3bits.INT1IF = 0;
  2998  002430  90F0               	bcf	intcon3,0,c	;volatile
  2999                           
  3000                           ;ABS_Code.c: 374: RCONbits.IPEN = 1;
  3001  002432  8ED0               	bsf	4048,7,c	;volatile
  3002                           
  3003                           ;ABS_Code.c: 375: IPR3bits.RXB1IP = 0;
  3004  002434  92A5               	bcf	4005,1,c	;volatile
  3005                           
  3006                           ;ABS_Code.c: 376: IPR3bits.RXB0IP = 0;
  3007  002436  90A5               	bcf	4005,0,c	;volatile
  3008                           
  3009                           ;ABS_Code.c: 377: INTCON2bits.TMR0IP = 1;
  3010  002438  84F1               	bsf	intcon2,2,c	;volatile
  3011                           
  3012                           ;ABS_Code.c: 378: INTCON3bits.INT1IP = 1;
  3013  00243A  8CF0               	bsf	intcon3,6,c	;volatile
  3014                           
  3015                           ;ABS_Code.c: 379: IPR1bits.TMR1IP = 0;
  3016  00243C  909F               	bcf	3999,0,c	;volatile
  3017                           
  3018                           ;ABS_Code.c: 380: IPR2bits.TMR3IP = 0;
  3019  00243E  92A2               	bcf	4002,1,c	;volatile
  3020                           
  3021                           ;ABS_Code.c: 383: T0CON = 0x80;
  3022  002440  0E80               	movlw	128
  3023  002442  6ED5               	movwf	4053,c	;volatile
  3024                           
  3025                           ;ABS_Code.c: 390: TMR0H = 0xFF;
  3026  002444  68D7               	setf	4055,c	;volatile
  3027                           
  3028                           ;ABS_Code.c: 391: TMR0L = 0xFE;
  3029  002446  0EFE               	movlw	254
  3030  002448  6ED6               	movwf	4054,c	;volatile
  3031                           
  3032                           ;ABS_Code.c: 392: PORTCbits.RC0 = 0;
  3033  00244A  9082               	bcf	3970,0,c	;volatile
  3034                           
  3035                           ;ABS_Code.c: 393: brake_value_degree = 90;
  3036  00244C  0E5A               	movlw	90
  3037  00244E  6E38               	movwf	_brake_value_degree,c
  3038                           
  3039                           ;ABS_Code.c: 394: T1CON = 00010000;
  3040  002450  0E00               	movlw	0
  3041  002452  6ECD               	movwf	4045,c	;volatile
  3042                           
  3043                           ;ABS_Code.c: 395: T3CON = 01010000;
  3044  002454  0E00               	movlw	0
  3045  002456  6EB1               	movwf	4017,c	;volatile
  3046                           
  3047                           ;ABS_Code.c: 396: INTCON2bits.INTEDG0 = 1;
  3048  002458  8CF1               	bsf	intcon2,6,c	;volatile
  3049                           
  3050                           ;ABS_Code.c: 397: INTCON2bits.INTEDG1 = 1;
  3051  00245A  8AF1               	bsf	intcon2,5,c	;volatile
  3052                           
  3053                           ;ABS_Code.c: 400: ADCON1 = 0b01110111;
  3054  00245C  0E77               	movlw	119
  3055  00245E  6EC1               	movwf	4033,c	;volatile
  3056                           
  3057                           ;ABS_Code.c: 401: ADCON0bits.CHS2 = 0;
  3058  002460  98C2               	bcf	4034,4,c	;volatile
  3059                           
  3060                           ;ABS_Code.c: 402: ADCON0bits.CHS1 = 0;
  3061  002462  96C2               	bcf	4034,3,c	;volatile
  3062                           
  3063                           ;ABS_Code.c: 403: ADCON0bits.CHS0 = 0;
  3064  002464  94C2               	bcf	4034,2,c	;volatile
  3065                           
  3066                           ;ABS_Code.c: 404: ADCON2bits.ACQT2 = 1;
  3067  002466  8AC0               	bsf	4032,5,c	;volatile
  3068                           
  3069                           ;ABS_Code.c: 405: ADCON2bits.ACQT1 = 1;
  3070  002468  88C0               	bsf	4032,4,c	;volatile
  3071                           
  3072                           ;ABS_Code.c: 406: ADCON2bits.ACQT0 = 0;
  3073  00246A  96C0               	bcf	4032,3,c	;volatile
  3074                           
  3075                           ;ABS_Code.c: 407: ADCON2bits.ADCS2 = 1;
  3076  00246C  84C0               	bsf	4032,2,c	;volatile
  3077                           
  3078                           ;ABS_Code.c: 408: ADCON2bits.ADCS1 = 0;
  3079  00246E  92C0               	bcf	4032,1,c	;volatile
  3080                           
  3081                           ;ABS_Code.c: 409: ADCON2bits.ADCS0 = 1;
  3082  002470  80C0               	bsf	4032,0,c	;volatile
  3083                           
  3084                           ;ABS_Code.c: 410: ADCON2bits.ADFM = 0;
  3085  002472  9EC0               	bcf	4032,7,c	;volatile
  3086                           
  3087                           ;ABS_Code.c: 411: ADCON0bits.ADON = 1;
  3088  002474  80C2               	bsf	4034,0,c	;volatile
  3089                           
  3090                           ;ABS_Code.c: 414: PIE3bits.RXB1IE = 1;
  3091  002476  82A3               	bsf	4003,1,c	;volatile
  3092                           
  3093                           ;ABS_Code.c: 415: PIE3bits.RXB0IE = 1;
  3094  002478  80A3               	bsf	4003,0,c	;volatile
  3095                           
  3096                           ;ABS_Code.c: 416: INTCONbits.TMR0IE = 1;
  3097  00247A  8AF2               	bsf	intcon,5,c	;volatile
  3098                           
  3099                           ;ABS_Code.c: 417: PIE1bits.TMR1IE = 1;
  3100  00247C  809D               	bsf	3997,0,c	;volatile
  3101                           
  3102                           ;ABS_Code.c: 418: PIE2bits.TMR3IE = 1;
  3103  00247E  82A0               	bsf	4000,1,c	;volatile
  3104                           
  3105                           ;ABS_Code.c: 419: INTCONbits.INT0IE = 1;
  3106  002480  88F2               	bsf	intcon,4,c	;volatile
  3107                           
  3108                           ;ABS_Code.c: 420: INTCON3bits.INT1IE = 1;
  3109  002482  86F0               	bsf	intcon3,3,c	;volatile
  3110                           
  3111                           ;ABS_Code.c: 421: INTCONbits.GIEH = 1;
  3112  002484  8EF2               	bsf	intcon,7,c	;volatile
  3113                           
  3114                           ;ABS_Code.c: 422: INTCONbits.GIEL = 1;
  3115  002486  8CF2               	bsf	intcon,6,c	;volatile
  3116                           
  3117                           ;ABS_Code.c: 425: T1CONbits.TMR1ON = 1;
  3118  002488  80CD               	bsf	4045,0,c	;volatile
  3119                           
  3120                           ;ABS_Code.c: 426: T3CONbits.TMR3ON = 1;
  3121  00248A  80B1               	bsf	4017,0,c	;volatile
  3122                           
  3123                           ;ABS_Code.c: 427: T0CONbits.TMR0ON = 1;
  3124  00248C  8ED5               	bsf	4053,7,c	;volatile
  3125                           
  3126                           ;ABS_Code.c: 428: delay_ms(2);
  3127  00248E  0E00               	movlw	0
  3128  002490  0100               	movlb	0	; () banked
  3129  002492  6FBF               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3130  002494  0E02               	movlw	2
  3131  002496  6FBE               	movwf	delay_ms@value_ms& (0+255),b
  3132  002498  EC99  F013         	call	_delay_ms	;wreg free
  3133  00249C  0012               	return		;funcret
  3134  00249E                     __end_of_board_initialization:
  3135                           	opt stack 0
  3136                           tblptru	equ	0xFF8
  3137                           tblptrh	equ	0xFF7
  3138                           tblptrl	equ	0xFF6
  3139                           tablat	equ	0xFF5
  3140                           prodh	equ	0xFF4
  3141                           prodl	equ	0xFF3
  3142                           intcon	equ	0xFF2
  3143                           intcon2	equ	0xFF1
  3144                           intcon3	equ	0xFF0
  3145                           postinc0	equ	0xFEE
  3146                           wreg	equ	0xFE8
  3147                           postdec1	equ	0xFE5
  3148                           fsr1l	equ	0xFE1
  3149                           indf2	equ	0xFDF
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _delay_ms *****************
  3155 ;; Defined at:
  3156 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  value_ms        2   28[BANK0 ] unsigned int 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;		None               void
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3170 ;;      Params:         0       2       0       0
  3171 ;;      Locals:         0       0       0       0
  3172 ;;      Temps:          0       0       0       0
  3173 ;;      Totals:         0       2       0       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    5
  3177 ;; This function calls:
  3178 ;;		___wmul
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;;		_board_initialization
  3182 ;;		_delay_s
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text5
  3187  002732                     __ptext5:
  3188                           	opt stack 0
  3189  002732                     _delay_ms:
  3190                           	opt stack 25
  3191                           
  3192                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3193                           
  3194                           ;incstack = 0
  3195  002732  C0D2  F0B8         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3196  002736  0100               	movlb	0	; () banked
  3197  002738  6BB9               	clrf	(___wmul@multiplier+1)& (0+255),b
  3198  00273A  C0BE  F0BA         	movff	delay_ms@value_ms,___wmul@multiplicand
  3199  00273E  C0BF  F0BB         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3200  002742  ECB6  F013         	call	___wmul	;wreg free
  3201  002746  C0B8  F074         	movff	?___wmul,_clock_counter_reference	;volatile
  3202  00274A  C0B9  F075         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3203                           
  3204                           ;src\delay.c: 75: while (clock_counter_reference) {
  3205  00274E  D007               	goto	l589
  3206  002750                     l3456:
  3207                           
  3208                           ;src\delay.c: 85: _delay(240);
  3209  002750  0E50               	movlw	80
  3210  002752                     u4727:
  3211  002752  2EE8               	decfsz	wreg,f,c
  3212  002754  D7FE               	goto	u4727
  3213                           
  3214                           ;src\delay.c: 88: clock_counter_reference--;
  3215  002756  0100               	movlb	0	; () banked
  3216  002758  0774               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3217  00275A  A0D8               	btfss	status,0,c
  3218  00275C  0775               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3219  00275E                     l589:
  3220  00275E  0100               	movlb	0	; () banked
  3221  002760  5174               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3222  002762  0100               	movlb	0	; () banked
  3223  002764  1175               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3224  002766  B4D8               	btfsc	status,2,c
  3225  002768  0012               	return	
  3226  00276A  D7F2               	goto	l3456
  3227  00276C                     __end_of_delay_ms:
  3228                           	opt stack 0
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           intcon	equ	0xFF2
  3236                           intcon2	equ	0xFF1
  3237                           intcon3	equ	0xFF0
  3238                           postinc0	equ	0xFEE
  3239                           wreg	equ	0xFE8
  3240                           postdec1	equ	0xFE5
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function ___wmul *****************
  3248 ;; Defined at:
  3249 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  multiplier      2   22[BANK0 ] unsigned int 
  3252 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  product         2   26[BANK0 ] unsigned int 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  2   22[BANK0 ] unsigned int 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, prodl, prodh
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3264 ;;      Params:         0       4       0       0
  3265 ;;      Locals:         0       2       0       0
  3266 ;;      Temps:          0       0       0       0
  3267 ;;      Totals:         0       6       0       0
  3268 ;;Total ram usage:        6 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    4
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_delay_ms
  3275 ;;		_remote_frame_handler
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text6
  3280  00276C                     __ptext6:
  3281                           	opt stack 0
  3282  00276C                     ___wmul:
  3283                           	opt stack 25
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;incstack = 0
  3287  00276C  0100               	movlb	0	; () banked
  3288  00276E  51B8               	movf	___wmul@multiplier& (0+255),w,b
  3289  002770  0100               	movlb	0	; () banked
  3290  002772  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  3291  002774  CFF3 F0BC          	movff	prodl,___wmul@product
  3292  002778  CFF4 F0BD          	movff	prodh,___wmul@product+1
  3293  00277C  0100               	movlb	0	; () banked
  3294  00277E  51B8               	movf	___wmul@multiplier& (0+255),w,b
  3295  002780  0100               	movlb	0	; () banked
  3296  002782  03BB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3297  002784  50F3               	movf	prodl,w,c
  3298  002786  0100               	movlb	0	; () banked
  3299  002788  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  3300  00278A  0100               	movlb	0	; () banked
  3301  00278C  51B9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3302  00278E  0100               	movlb	0	; () banked
  3303  002790  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  3304  002792  50F3               	movf	prodl,w,c
  3305  002794  0100               	movlb	0	; () banked
  3306  002796  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  3307                           
  3308                           ; BSR set to: 0
  3309  002798  C0BC  F0B8         	movff	___wmul@product,?___wmul
  3310  00279C  C0BD  F0B9         	movff	___wmul@product+1,?___wmul+1
  3311  0027A0  0012               	return	
  3312  0027A2                     __end_of___wmul:
  3313                           	opt stack 0
  3314                           tblptru	equ	0xFF8
  3315                           tblptrh	equ	0xFF7
  3316                           tblptrl	equ	0xFF6
  3317                           tablat	equ	0xFF5
  3318                           prodh	equ	0xFF4
  3319                           prodl	equ	0xFF3
  3320                           intcon	equ	0xFF2
  3321                           intcon2	equ	0xFF1
  3322                           intcon3	equ	0xFF0
  3323                           postinc0	equ	0xFEE
  3324                           wreg	equ	0xFE8
  3325                           postdec1	equ	0xFE5
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           fsr2h	equ	0xFDA
  3329                           fsr2l	equ	0xFD9
  3330                           status	equ	0xFD8
  3331                           
  3332 ;; *************** function _CANInitialize *****************
  3333 ;; Defined at:
  3334 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  propSeg         1    wreg     unsigned char 
  3337 ;;  phaseSeg1       1   36[BANK0 ] unsigned char 
  3338 ;;  phaseSeg2       1   37[BANK0 ] unsigned char 
  3339 ;;  SJW             1   38[BANK0 ] unsigned char 
  3340 ;;  BRP             1   39[BANK0 ] unsigned char 
  3341 ;;  flags           1   40[BANK0 ] enum E16844
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  propSeg         1   45[BANK0 ] unsigned char 
  3344 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  3345 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3355 ;;      Params:         0       5       0       0
  3356 ;;      Locals:         0       3       0       0
  3357 ;;      Temps:          0       4       0       0
  3358 ;;      Totals:         0      12       0       0
  3359 ;;Total ram usage:       12 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    5
  3362 ;; This function calls:
  3363 ;;		_CANOperationMode
  3364 ;;		_CANSetFilter
  3365 ;;		_CANSetMask
  3366 ;; This function is called by:
  3367 ;;		_board_initialization
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text7
  3372  001EE8                     __ptext7:
  3373                           	opt stack 0
  3374  001EE8                     _CANInitialize:
  3375                           	opt stack 24
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;incstack = 0
  3379                           ;CANInitialize@propSeg stored from wreg
  3380  001EE8  0100               	movlb	0	; () banked
  3381  001EEA  6FCF               	movwf	CANInitialize@propSeg& (0+255),b
  3382                           
  3383                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3384                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3385                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3386  001EEC  0E80               	movlw	128
  3387  001EEE  ECF6  F013         	call	_CANOperationMode
  3388                           
  3389                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3390  001EF2  0E00               	movlw	0
  3391  001EF4  6E70               	movwf	3952,c	;volatile
  3392                           
  3393                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3394  001EF6  0E00               	movlw	0
  3395  001EF8  6E71               	movwf	3953,c	;volatile
  3396                           
  3397                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3398  001EFA  0E00               	movlw	0
  3399  001EFC  6E72               	movwf	3954,c	;volatile
  3400                           
  3401                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3402  001EFE  0100               	movlb	0	; () banked
  3403  001F00  41C8               	rrncf	CANInitialize@SJW& (0+255),w,b
  3404  001F02  42E8               	rrncf	wreg,f,c
  3405  001F04  0BC0               	andlw	192
  3406  001F06  0100               	movlb	0	; () banked
  3407  001F08  6FC8               	movwf	CANInitialize@SJW& (0+255),b
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3411  001F0A  0100               	movlb	0	; () banked
  3412  001F0C  51C8               	movf	CANInitialize@SJW& (0+255),w,b
  3413  001F0E  1270               	iorwf	3952,f,c	;volatile
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3417  001F10  0100               	movlb	0	; () banked
  3418  001F12  51C9               	movf	CANInitialize@BRP& (0+255),w,b
  3419  001F14  1270               	iorwf	3952,f,c	;volatile
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3423  001F16  0100               	movlb	0	; () banked
  3424  001F18  51CF               	movf	CANInitialize@propSeg& (0+255),w,b
  3425  001F1A  1271               	iorwf	3953,f,c	;volatile
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3429  001F1C  0100               	movlb	0	; () banked
  3430  001F1E  39C6               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3431  001F20  42E8               	rrncf	wreg,f,c
  3432  001F22  0BF8               	andlw	248
  3433  001F24  0100               	movlb	0	; () banked
  3434  001F26  6FC6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3438  001F28  0100               	movlb	0	; () banked
  3439  001F2A  51C6               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3440  001F2C  1271               	iorwf	3953,f,c	;volatile
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3444  001F2E  0100               	movlb	0	; () banked
  3445  001F30  A5CA               	btfss	CANInitialize@flags& (0+255),2,b
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3449  001F32  8C71               	bsf	3953,6,c	;volatile
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3453  001F34  0100               	movlb	0	; () banked
  3454  001F36  B1CA               	btfsc	CANInitialize@flags& (0+255),0,b
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3458  001F38  8E71               	bsf	3953,7,c	;volatile
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3462                           
  3463                           ; BSR set to: 0
  3464  001F3A  0100               	movlb	0	; () banked
  3465  001F3C  51C7               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3466  001F3E  1272               	iorwf	3954,f,c	;volatile
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3470  001F40  0100               	movlb	0	; () banked
  3471  001F42  B3CA               	btfsc	CANInitialize@flags& (0+255),1,b
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3475  001F44  8C72               	bsf	3954,6,c	;volatile
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3479                           
  3480                           ; BSR set to: 0
  3481  001F46  0100               	movlb	0	; () banked
  3482  001F48  51CA               	movf	CANInitialize@flags& (0+255),w,b
  3483  001F4A  0B60               	andlw	96
  3484  001F4C  6E60               	movwf	3936,c	;volatile
  3485                           
  3486                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3487  001F4E  0100               	movlb	0	; () banked
  3488  001F50  51CA               	movf	CANInitialize@flags& (0+255),w,b
  3489  001F52  0B10               	andlw	16
  3490  001F54  0AFF               	xorlw	255
  3491  001F56  B4D8               	btfsc	status,2,c
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3495  001F58  8460               	bsf	3936,2,c	;volatile
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3499  001F5A  CF60 FF50          	movff	3936,3920	;volatile
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3503  001F5E  0E00               	movlw	0
  3504  001F60  0100               	movlb	0	; () banked
  3505  001F62  6FB8               	movwf	CANSetMask@mask& (0+255),b
  3506  001F64  0E00               	movlw	0
  3507  001F66  6FB9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3508  001F68  0E00               	movlw	0
  3509  001F6A  6FBA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3510  001F6C  0E00               	movlw	0
  3511  001F6E  6FBB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3512  001F70  0EF7               	movlw	247
  3513  001F72  0100               	movlb	0	; () banked
  3514  001F74  6FBC               	movwf	CANSetMask@type& (0+255),b
  3515  001F76  0E01               	movlw	1
  3516  001F78  EC59  F00C         	call	_CANSetMask
  3517                           
  3518                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3519  001F7C  0E00               	movlw	0
  3520  001F7E  0100               	movlb	0	; () banked
  3521  001F80  6FB8               	movwf	CANSetMask@mask& (0+255),b
  3522  001F82  0E00               	movlw	0
  3523  001F84  6FB9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3524  001F86  0E00               	movlw	0
  3525  001F88  6FBA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3526  001F8A  0E00               	movlw	0
  3527  001F8C  6FBB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3528  001F8E  0EF7               	movlw	247
  3529  001F90  0100               	movlb	0	; () banked
  3530  001F92  6FBC               	movwf	CANSetMask@type& (0+255),b
  3531  001F94  0E02               	movlw	2
  3532  001F96  EC59  F00C         	call	_CANSetMask
  3533                           
  3534                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3535  001F9A  D00F               	goto	l3204
  3536  001F9C                     l3198:
  3537                           
  3538                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3539  001F9C  0EF7               	movlw	247
  3540  001F9E  0100               	movlb	0	; () banked
  3541  001FA0  6FD0               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3542  001FA2  D007               	goto	l3200
  3543  001FA4                     l378:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3547  001FA4  0100               	movlb	0	; () banked
  3548  001FA6  69D0               	setf	CANInitialize@FilterConfig1& (0+255),b
  3549                           
  3550                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3551  001FA8  0100               	movlb	0	; () banked
  3552  001FAA  69D1               	setf	CANInitialize@FilterConfig2& (0+255),b
  3553                           
  3554                           ;inc\CANlib.h: 273: break;
  3555  001FAC  D028               	goto	l3206
  3556  001FAE                     l379:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3560  001FAE  0100               	movlb	0	; () banked
  3561  001FB0  69D0               	setf	CANInitialize@FilterConfig1& (0+255),b
  3562  001FB2                     l3200:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3566  001FB2  0EF7               	movlw	247
  3567  001FB4  0100               	movlb	0	; () banked
  3568  001FB6  6FD1               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;inc\CANlib.h: 278: }
  3572                           
  3573                           ;inc\CANlib.h: 277: break;
  3574  001FB8  D022               	goto	l3206
  3575  001FBA                     l3204:
  3576  001FBA  0E9F               	movlw	159
  3577  001FBC  0100               	movlb	0	; () banked
  3578  001FBE  6FCB               	movwf	??_CANInitialize& (0+255),b
  3579  001FC0  0EFF               	movlw	255
  3580  001FC2  0100               	movlb	0	; () banked
  3581  001FC4  6FCC               	movwf	(??_CANInitialize+1)& (0+255),b
  3582  001FC6  0100               	movlb	0	; () banked
  3583  001FC8  51CA               	movf	CANInitialize@flags& (0+255),w,b
  3584  001FCA  0B60               	andlw	96
  3585  001FCC  0100               	movlb	0	; () banked
  3586  001FCE  6FCD               	movwf	(??_CANInitialize+2)& (0+255),b
  3587  001FD0  6BCE               	clrf	(??_CANInitialize+3)& (0+255),b
  3588  001FD2  0100               	movlb	0	; () banked
  3589  001FD4  51CB               	movf	??_CANInitialize& (0+255),w,b
  3590  001FD6  0100               	movlb	0	; () banked
  3591  001FD8  13CD               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3592  001FDA  0100               	movlb	0	; () banked
  3593  001FDC  51CC               	movf	(??_CANInitialize+1)& (0+255),w,b
  3594  001FDE  0100               	movlb	0	; () banked
  3595  001FE0  13CE               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3596                           
  3597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3598                           ; Switch size 1, requested type "space"
  3599                           ; Number of cases is 1, Range of values is 0 to 0
  3600                           ; switch strategies available:
  3601                           ; Name         Instructions Cycles
  3602                           ; simple_byte            4     3 (average)
  3603                           ;	Chosen strategy is simple_byte
  3604  001FE2  0100               	movlb	0	; () banked
  3605  001FE4  51CE               	movf	(??_CANInitialize+3)& (0+255),w,b
  3606  001FE6  0A00               	xorlw	0	; case 0
  3607  001FE8  A4D8               	btfss	status,2,c
  3608  001FEA  D7E1               	goto	l379
  3609                           
  3610                           ; BSR set to: 0
  3611                           ; Switch size 1, requested type "space"
  3612                           ; Number of cases is 2, Range of values is 191 to 223
  3613                           ; switch strategies available:
  3614                           ; Name         Instructions Cycles
  3615                           ; simple_byte            7     4 (average)
  3616                           ;	Chosen strategy is simple_byte
  3617  001FEC  0100               	movlb	0	; () banked
  3618  001FEE  51CD               	movf	(??_CANInitialize+2)& (0+255),w,b
  3619  001FF0  0ABF               	xorlw	191	; case 191
  3620  001FF2  B4D8               	btfsc	status,2,c
  3621  001FF4  D7D7               	goto	l378
  3622  001FF6  0A60               	xorlw	96	; case 223
  3623  001FF8  B4D8               	btfsc	status,2,c
  3624  001FFA  D7D0               	goto	l3198
  3625  001FFC  D7D8               	goto	l379
  3626  001FFE                     l3206:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3630  001FFE  0E00               	movlw	0
  3631  002000  0100               	movlb	0	; () banked
  3632  002002  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3633  002004  0E00               	movlw	0
  3634  002006  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3635  002008  0E00               	movlw	0
  3636  00200A  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3637  00200C  0E00               	movlw	0
  3638  00200E  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3639  002010  C0D0  F0BC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3640  002014  0E00               	movlw	0
  3641  002016  EC8A  F000         	call	_CANSetFilter
  3642                           
  3643                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3644  00201A  0E00               	movlw	0
  3645  00201C  0100               	movlb	0	; () banked
  3646  00201E  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3647  002020  0E00               	movlw	0
  3648  002022  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3649  002024  0E00               	movlw	0
  3650  002026  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3651  002028  0E00               	movlw	0
  3652  00202A  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3653  00202C  C0D0  F0BC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3654  002030  0E01               	movlw	1
  3655  002032  EC8A  F000         	call	_CANSetFilter
  3656                           
  3657                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3658  002036  0E00               	movlw	0
  3659  002038  0100               	movlb	0	; () banked
  3660  00203A  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3661  00203C  0E00               	movlw	0
  3662  00203E  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3663  002040  0E00               	movlw	0
  3664  002042  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3665  002044  0E00               	movlw	0
  3666  002046  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3667  002048  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3668  00204C  0E02               	movlw	2
  3669  00204E  EC8A  F000         	call	_CANSetFilter
  3670                           
  3671                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3672  002052  0E00               	movlw	0
  3673  002054  0100               	movlb	0	; () banked
  3674  002056  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3675  002058  0E00               	movlw	0
  3676  00205A  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3677  00205C  0E00               	movlw	0
  3678  00205E  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3679  002060  0E00               	movlw	0
  3680  002062  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3681  002064  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3682  002068  0E03               	movlw	3
  3683  00206A  EC8A  F000         	call	_CANSetFilter
  3684                           
  3685                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3686  00206E  0E00               	movlw	0
  3687  002070  0100               	movlb	0	; () banked
  3688  002072  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3689  002074  0E00               	movlw	0
  3690  002076  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3691  002078  0E00               	movlw	0
  3692  00207A  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3693  00207C  0E00               	movlw	0
  3694  00207E  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3695  002080  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3696  002084  0E04               	movlw	4
  3697  002086  EC8A  F000         	call	_CANSetFilter
  3698                           
  3699                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3700  00208A  0E00               	movlw	0
  3701  00208C  0100               	movlb	0	; () banked
  3702  00208E  6FB8               	movwf	CANSetFilter@filter& (0+255),b
  3703  002090  0E00               	movlw	0
  3704  002092  6FB9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3705  002094  0E00               	movlw	0
  3706  002096  6FBA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3707  002098  0E00               	movlw	0
  3708  00209A  6FBB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3709  00209C  C0D1  F0BC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3710  0020A0  0E05               	movlw	5
  3711  0020A2  EC8A  F000         	call	_CANSetFilter
  3712                           
  3713                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3714  0020A6  0E00               	movlw	0
  3715  0020A8  ECF6  F013         	call	_CANOperationMode
  3716  0020AC  0012               	return		;funcret
  3717  0020AE                     __end_of_CANInitialize:
  3718                           	opt stack 0
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           prodh	equ	0xFF4
  3724                           prodl	equ	0xFF3
  3725                           intcon	equ	0xFF2
  3726                           intcon2	equ	0xFF1
  3727                           intcon3	equ	0xFF0
  3728                           postinc0	equ	0xFEE
  3729                           wreg	equ	0xFE8
  3730                           postdec1	equ	0xFE5
  3731                           fsr1l	equ	0xFE1
  3732                           indf2	equ	0xFDF
  3733                           fsr2h	equ	0xFDA
  3734                           fsr2l	equ	0xFD9
  3735                           status	equ	0xFD8
  3736                           
  3737 ;; *************** function _CANSetMask *****************
  3738 ;; Defined at:
  3739 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  numBuffer       1    wreg     enum E16878
  3742 ;;  mask            4   22[BANK0 ] unsigned long 
  3743 ;;  type            1   26[BANK0 ] enum E16844
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  numBuffer       1   31[BANK0 ] enum E16878
  3746 ;;  tamp            4   32[BANK0 ] unsigned long 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;		None               void
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3756 ;;      Params:         0       5       0       0
  3757 ;;      Locals:         0       5       0       0
  3758 ;;      Temps:          0       4       0       0
  3759 ;;      Totals:         0      14       0       0
  3760 ;;Total ram usage:       14 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    4
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_CANInitialize
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text8
  3771  0018B2                     __ptext8:
  3772                           	opt stack 0
  3773  0018B2                     _CANSetMask:
  3774                           	opt stack 24
  3775                           
  3776                           ;incstack = 0
  3777                           ;CANSetMask@numBuffer stored from wreg
  3778  0018B2  0100               	movlb	0	; () banked
  3779  0018B4  6FC1               	movwf	CANSetMask@numBuffer& (0+255),b
  3780                           
  3781                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3782  0018B6  0100               	movlb	0	; () banked
  3783  0018B8  05C1               	decf	CANSetMask@numBuffer& (0+255),w,b
  3784  0018BA  A4D8               	btfss	status,2,c
  3785  0018BC  D056               	goto	l2762
  3786                           
  3787                           ; BSR set to: 0
  3788  0018BE  0100               	movlb	0	; () banked
  3789  0018C0  29BC               	incf	CANSetMask@type& (0+255),w,b
  3790  0018C2  A4D8               	btfss	status,2,c
  3791  0018C4  D052               	goto	l2762
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;inc\CANlib.h: 644: {
  3795                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3796  0018C6  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  3797  0018CA  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3798  0018CE  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3799  0018D2  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3800  0018D6  0E04               	movlw	4
  3801  0018D8  D006               	goto	u2350
  3802  0018DA                     u2355:
  3803  0018DA  0100               	movlb	0	; () banked
  3804  0018DC  90D8               	bcf	status,0,c
  3805  0018DE  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3806  0018E0  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3807  0018E2  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3808  0018E4  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  3809  0018E6                     u2350:
  3810  0018E6  2EE8               	decfsz	wreg,f,c
  3811  0018E8  D7F8               	goto	u2355
  3812  0018EA  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3813  0018EE  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3814  0018F2  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3815  0018F6  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3819  0018FA  0100               	movlb	0	; () banked
  3820  0018FC  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  3821  0018FE  0100               	movlb	0	; () banked
  3822  001900  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3823  001902  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3824  001904  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3825  001906  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3829  001908  C0C2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3833  00190C  0E07               	movlw	7
  3834  00190E  0100               	movlb	0	; () banked
  3835  001910  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  3836  001912  0100               	movlb	0	; () banked
  3837  001914  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3838  001916  0E00               	movlw	0
  3839  001918  0100               	movlb	0	; () banked
  3840  00191A  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3841  00191C  0100               	movlb	0	; () banked
  3842  00191E  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3843  001920  0E00               	movlw	0
  3844  001922  0100               	movlb	0	; () banked
  3845  001924  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3846  001926  0100               	movlb	0	; () banked
  3847  001928  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3848  00192A  0E00               	movlw	0
  3849  00192C  0100               	movlb	0	; () banked
  3850  00192E  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3851  001930  0100               	movlb	0	; () banked
  3852  001932  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3856  001934  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  3857  001938  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3858  00193C  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3859  001940  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3860  001944  0E05               	movlw	5
  3861  001946                     u2365:
  3862  001946  90D8               	bcf	status,0,c
  3863  001948  0100               	movlb	0	; () banked
  3864  00194A  37BD               	rlcf	??_CANSetMask& (0+255),f,b
  3865  00194C  37BE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3866  00194E  37BF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3867  001950  37C0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3868  001952  2EE8               	decfsz	wreg,f,c
  3869  001954  D7F8               	goto	u2365
  3870  001956  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3871  00195A  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3872  00195E  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3873  001962  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3877  001966  C0C2  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3878  00196A                     l2762:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;inc\CANlib.h: 652: }
  3882                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3883  00196A  0E02               	movlw	2
  3884  00196C  0100               	movlb	0	; () banked
  3885  00196E  19C1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3886  001970  A4D8               	btfss	status,2,c
  3887  001972  D056               	goto	l2778
  3888                           
  3889                           ; BSR set to: 0
  3890  001974  0100               	movlb	0	; () banked
  3891  001976  29BC               	incf	CANSetMask@type& (0+255),w,b
  3892  001978  A4D8               	btfss	status,2,c
  3893  00197A  D052               	goto	l2778
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;inc\CANlib.h: 655: {
  3897                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3898  00197C  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  3899  001980  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3900  001984  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3901  001988  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3902  00198C  0E04               	movlw	4
  3903  00198E  D006               	goto	u2390
  3904  001990                     u2395:
  3905  001990  0100               	movlb	0	; () banked
  3906  001992  90D8               	bcf	status,0,c
  3907  001994  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3908  001996  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3909  001998  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3910  00199A  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  3911  00199C                     u2390:
  3912  00199C  2EE8               	decfsz	wreg,f,c
  3913  00199E  D7F8               	goto	u2395
  3914  0019A0  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3915  0019A4  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3916  0019A8  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3917  0019AC  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3921  0019B0  0100               	movlb	0	; () banked
  3922  0019B2  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  3923  0019B4  0100               	movlb	0	; () banked
  3924  0019B6  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3925  0019B8  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3926  0019BA  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3927  0019BC  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3931  0019BE  C0C2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3935  0019C2  0E07               	movlw	7
  3936  0019C4  0100               	movlb	0	; () banked
  3937  0019C6  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  3938  0019C8  0100               	movlb	0	; () banked
  3939  0019CA  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  3940  0019CC  0E00               	movlw	0
  3941  0019CE  0100               	movlb	0	; () banked
  3942  0019D0  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3943  0019D2  0100               	movlb	0	; () banked
  3944  0019D4  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3945  0019D6  0E00               	movlw	0
  3946  0019D8  0100               	movlb	0	; () banked
  3947  0019DA  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3948  0019DC  0100               	movlb	0	; () banked
  3949  0019DE  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3950  0019E0  0E00               	movlw	0
  3951  0019E2  0100               	movlb	0	; () banked
  3952  0019E4  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3953  0019E6  0100               	movlb	0	; () banked
  3954  0019E8  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3958  0019EA  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  3959  0019EE  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3960  0019F2  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3961  0019F6  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3962  0019FA  0E05               	movlw	5
  3963  0019FC                     u2405:
  3964  0019FC  90D8               	bcf	status,0,c
  3965  0019FE  0100               	movlb	0	; () banked
  3966  001A00  37BD               	rlcf	??_CANSetMask& (0+255),f,b
  3967  001A02  37BE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3968  001A04  37BF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3969  001A06  37C0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3970  001A08  2EE8               	decfsz	wreg,f,c
  3971  001A0A  D7F8               	goto	u2405
  3972  001A0C  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  3973  001A10  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3974  001A14  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3975  001A18  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3979  001A1C  C0C2  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3980  001A20                     l2778:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;inc\CANlib.h: 663: }
  3984                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3985  001A20  0100               	movlb	0	; () banked
  3986  001A22  05C1               	decf	CANSetMask@numBuffer& (0+255),w,b
  3987  001A24  A4D8               	btfss	status,2,c
  3988  001A26  D087               	goto	l2810
  3989                           
  3990                           ; BSR set to: 0
  3991  001A28  0EF7               	movlw	247
  3992  001A2A  0100               	movlb	0	; () banked
  3993  001A2C  19BC               	xorwf	CANSetMask@type& (0+255),w,b
  3994  001A2E  A4D8               	btfss	status,2,c
  3995  001A30  D082               	goto	l2810
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 666: {
  3999                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4000  001A32  0100               	movlb	0	; () banked
  4001  001A34  51B8               	movf	CANSetMask@mask& (0+255),w,b
  4002  001A36  0100               	movlb	0	; () banked
  4003  001A38  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4004  001A3A  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4005  001A3C  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4006  001A3E  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4010  001A40  C0C2  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4014  001A44  0E00               	movlw	0
  4015  001A46  0100               	movlb	0	; () banked
  4016  001A48  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  4017  001A4A  0100               	movlb	0	; () banked
  4018  001A4C  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4019  001A4E  0EFF               	movlw	255
  4020  001A50  0100               	movlb	0	; () banked
  4021  001A52  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4022  001A54  0100               	movlb	0	; () banked
  4023  001A56  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4024  001A58  0E00               	movlw	0
  4025  001A5A  0100               	movlb	0	; () banked
  4026  001A5C  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4027  001A5E  0100               	movlb	0	; () banked
  4028  001A60  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4029  001A62  0E00               	movlw	0
  4030  001A64  0100               	movlb	0	; () banked
  4031  001A66  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4032  001A68  0100               	movlb	0	; () banked
  4033  001A6A  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4037  001A6C  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  4038  001A70  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4039  001A74  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4040  001A78  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4041  001A7C  C0BE  F0BD         	movff	??_CANSetMask+1,??_CANSetMask
  4042  001A80  C0BF  F0BE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4043  001A84  C0C0  F0BF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4044  001A88  0100               	movlb	0	; () banked
  4045  001A8A  6BC0               	clrf	(??_CANSetMask+3)& (0+255),b
  4046  001A8C  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4047  001A90  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4048  001A94  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4049  001A98  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4053  001A9C  C0C2  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4057  001AA0  0100               	movlb	0	; () banked
  4058  001AA2  A1BA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4059  001AA4  D003               	goto	l452
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4063  001AA6  010F               	movlb	15	; () banked
  4064  001AA8  8119               	bsf	25,0,b	;volatile
  4065  001AAA  D002               	goto	l453
  4066  001AAC                     l452:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;inc\CANlib.h: 676: else
  4070                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4071  001AAC  010F               	movlb	15	; () banked
  4072  001AAE  9119               	bcf	25,0,b	;volatile
  4073  001AB0                     l453:
  4074                           
  4075                           ; BSR set to: 15
  4076                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4077  001AB0  0100               	movlb	0	; () banked
  4078  001AB2  A3BA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4079  001AB4  D003               	goto	l454
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4083  001AB6  010F               	movlb	15	; () banked
  4084  001AB8  8319               	bsf	25,1,b	;volatile
  4085  001ABA  D002               	goto	l455
  4086  001ABC                     l454:
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;inc\CANlib.h: 681: else
  4090                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4091  001ABC  010F               	movlb	15	; () banked
  4092  001ABE  9319               	bcf	25,1,b	;volatile
  4093  001AC0                     l455:
  4094                           
  4095                           ; BSR set to: 15
  4096                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4097  001AC0  0100               	movlb	0	; () banked
  4098  001AC2  A5BA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4099  001AC4  D003               	goto	l456
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4103  001AC6  010F               	movlb	15	; () banked
  4104  001AC8  8B19               	bsf	25,5,b	;volatile
  4105  001ACA  D002               	goto	l457
  4106  001ACC                     l456:
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;inc\CANlib.h: 686: else
  4110                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4111  001ACC  010F               	movlb	15	; () banked
  4112  001ACE  9B19               	bcf	25,5,b	;volatile
  4113  001AD0                     l457:
  4114                           
  4115                           ; BSR set to: 15
  4116                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4117  001AD0  0100               	movlb	0	; () banked
  4118  001AD2  A7BA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4119  001AD4  D003               	goto	l458
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4123  001AD6  010F               	movlb	15	; () banked
  4124  001AD8  8D19               	bsf	25,6,b	;volatile
  4125  001ADA  D002               	goto	l459
  4126  001ADC                     l458:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;inc\CANlib.h: 691: else
  4130                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4131  001ADC  010F               	movlb	15	; () banked
  4132  001ADE  9D19               	bcf	25,6,b	;volatile
  4133  001AE0                     l459:
  4134                           
  4135                           ; BSR set to: 15
  4136                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4137  001AE0  0100               	movlb	0	; () banked
  4138  001AE2  A9BA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4139  001AE4  D003               	goto	l460
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4143  001AE6  010F               	movlb	15	; () banked
  4144  001AE8  8F19               	bsf	25,7,b	;volatile
  4145  001AEA  D002               	goto	l2804
  4146  001AEC                     l460:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;inc\CANlib.h: 696: else
  4150                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4151  001AEC  010F               	movlb	15	; () banked
  4152  001AEE  9F19               	bcf	25,7,b	;volatile
  4153  001AF0                     l2804:
  4154                           
  4155                           ; BSR set to: 15
  4156                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4157  001AF0  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  4158  001AF4  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4159  001AF8  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4160  001AFC  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4161  001B00  0E16               	movlw	22
  4162  001B02  D006               	goto	u2480
  4163  001B04                     u2485:
  4164  001B04  0100               	movlb	0	; () banked
  4165  001B06  90D8               	bcf	status,0,c
  4166  001B08  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4167  001B0A  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4168  001B0C  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4169  001B0E  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  4170  001B10                     u2480:
  4171  001B10  2EE8               	decfsz	wreg,f,c
  4172  001B12  D7F8               	goto	u2485
  4173  001B14  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4174  001B18  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4175  001B1C  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4176  001B20  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4180  001B24  0100               	movlb	0	; () banked
  4181  001B26  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  4182  001B28  0100               	movlb	0	; () banked
  4183  001B2A  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4184  001B2C  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4185  001B2E  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4186  001B30  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4190  001B32  C0C2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4191  001B36                     l2810:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 702: }
  4195                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4196  001B36  0E02               	movlw	2
  4197  001B38  0100               	movlb	0	; () banked
  4198  001B3A  19C1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4199  001B3C  A4D8               	btfss	status,2,c
  4200  001B3E  0012               	return	
  4201                           
  4202                           ; BSR set to: 0
  4203  001B40  0EF7               	movlw	247
  4204  001B42  0100               	movlb	0	; () banked
  4205  001B44  19BC               	xorwf	CANSetMask@type& (0+255),w,b
  4206  001B46  A4D8               	btfss	status,2,c
  4207  001B48  0012               	return	
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;inc\CANlib.h: 705: {
  4211                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4212  001B4A  0100               	movlb	0	; () banked
  4213  001B4C  51B8               	movf	CANSetMask@mask& (0+255),w,b
  4214  001B4E  0100               	movlb	0	; () banked
  4215  001B50  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4216  001B52  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4217  001B54  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4218  001B56  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4222  001B58  C0C2  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4226  001B5C  0E00               	movlw	0
  4227  001B5E  0100               	movlb	0	; () banked
  4228  001B60  15B8               	andwf	CANSetMask@mask& (0+255),w,b
  4229  001B62  0100               	movlb	0	; () banked
  4230  001B64  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4231  001B66  0EFF               	movlw	255
  4232  001B68  0100               	movlb	0	; () banked
  4233  001B6A  15B9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4234  001B6C  0100               	movlb	0	; () banked
  4235  001B6E  6FC3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4236  001B70  0E00               	movlw	0
  4237  001B72  0100               	movlb	0	; () banked
  4238  001B74  15BA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4239  001B76  0100               	movlb	0	; () banked
  4240  001B78  6FC4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4241  001B7A  0E00               	movlw	0
  4242  001B7C  0100               	movlb	0	; () banked
  4243  001B7E  15BB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4244  001B80  0100               	movlb	0	; () banked
  4245  001B82  6FC5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4249  001B84  C0C2  F0BD         	movff	CANSetMask@tamp,??_CANSetMask
  4250  001B88  C0C3  F0BE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4251  001B8C  C0C4  F0BF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4252  001B90  C0C5  F0C0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4253  001B94  C0BE  F0BD         	movff	??_CANSetMask+1,??_CANSetMask
  4254  001B98  C0BF  F0BE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4255  001B9C  C0C0  F0BF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4256  001BA0  0100               	movlb	0	; () banked
  4257  001BA2  6BC0               	clrf	(??_CANSetMask+3)& (0+255),b
  4258  001BA4  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4259  001BA8  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4260  001BAC  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4261  001BB0  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4265  001BB4  C0C2  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4269  001BB8  0100               	movlb	0	; () banked
  4270  001BBA  A1BA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4271  001BBC  D003               	goto	l463
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4275  001BBE  010F               	movlb	15	; () banked
  4276  001BC0  811D               	bsf	29,0,b	;volatile
  4277  001BC2  D002               	goto	l464
  4278  001BC4                     l463:
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;inc\CANlib.h: 715: else
  4282                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4283  001BC4  010F               	movlb	15	; () banked
  4284  001BC6  911D               	bcf	29,0,b	;volatile
  4285  001BC8                     l464:
  4286                           
  4287                           ; BSR set to: 15
  4288                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4289  001BC8  0100               	movlb	0	; () banked
  4290  001BCA  A3BA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4291  001BCC  D003               	goto	l465
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4295  001BCE  010F               	movlb	15	; () banked
  4296  001BD0  831D               	bsf	29,1,b	;volatile
  4297  001BD2  D002               	goto	l466
  4298  001BD4                     l465:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;inc\CANlib.h: 720: else
  4302                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4303  001BD4  010F               	movlb	15	; () banked
  4304  001BD6  931D               	bcf	29,1,b	;volatile
  4305  001BD8                     l466:
  4306                           
  4307                           ; BSR set to: 15
  4308                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4309  001BD8  0100               	movlb	0	; () banked
  4310  001BDA  A5BA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4311  001BDC  D003               	goto	l467
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4315  001BDE  010F               	movlb	15	; () banked
  4316  001BE0  8B1D               	bsf	29,5,b	;volatile
  4317  001BE2  D002               	goto	l468
  4318  001BE4                     l467:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;inc\CANlib.h: 725: else
  4322                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4323  001BE4  010F               	movlb	15	; () banked
  4324  001BE6  9B1D               	bcf	29,5,b	;volatile
  4325  001BE8                     l468:
  4326                           
  4327                           ; BSR set to: 15
  4328                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4329  001BE8  0100               	movlb	0	; () banked
  4330  001BEA  A7BA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4331  001BEC  D003               	goto	l469
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4335  001BEE  010F               	movlb	15	; () banked
  4336  001BF0  8D1D               	bsf	29,6,b	;volatile
  4337  001BF2  D002               	goto	l470
  4338  001BF4                     l469:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;inc\CANlib.h: 730: else
  4342                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4343  001BF4  010F               	movlb	15	; () banked
  4344  001BF6  9D1D               	bcf	29,6,b	;volatile
  4345  001BF8                     l470:
  4346                           
  4347                           ; BSR set to: 15
  4348                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4349  001BF8  0100               	movlb	0	; () banked
  4350  001BFA  A9BA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4351  001BFC  D003               	goto	l471
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4355  001BFE  010F               	movlb	15	; () banked
  4356  001C00  8F1D               	bsf	29,7,b	;volatile
  4357  001C02  D002               	goto	l2836
  4358  001C04                     l471:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;inc\CANlib.h: 735: else
  4362                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4363  001C04  010F               	movlb	15	; () banked
  4364  001C06  9F1D               	bcf	29,7,b	;volatile
  4365  001C08                     l2836:
  4366                           
  4367                           ; BSR set to: 15
  4368                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4369  001C08  C0B8  F0BD         	movff	CANSetMask@mask,??_CANSetMask
  4370  001C0C  C0B9  F0BE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4371  001C10  C0BA  F0BF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4372  001C14  C0BB  F0C0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4373  001C18  0E16               	movlw	22
  4374  001C1A  D006               	goto	u2560
  4375  001C1C                     u2565:
  4376  001C1C  0100               	movlb	0	; () banked
  4377  001C1E  90D8               	bcf	status,0,c
  4378  001C20  33C0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4379  001C22  33BF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4380  001C24  33BE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4381  001C26  33BD               	rrcf	??_CANSetMask& (0+255),f,b
  4382  001C28                     u2560:
  4383  001C28  2EE8               	decfsz	wreg,f,c
  4384  001C2A  D7F8               	goto	u2565
  4385  001C2C  C0BD  F0C2         	movff	??_CANSetMask,CANSetMask@tamp
  4386  001C30  C0BE  F0C3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4387  001C34  C0BF  F0C4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4388  001C38  C0C0  F0C5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4392  001C3C  0100               	movlb	0	; () banked
  4393  001C3E  51C2               	movf	CANSetMask@tamp& (0+255),w,b
  4394  001C40  0100               	movlb	0	; () banked
  4395  001C42  6FC2               	movwf	CANSetMask@tamp& (0+255),b
  4396  001C44  6BC3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4397  001C46  6BC4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4398  001C48  6BC5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4402  001C4A  C0C2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4403  001C4E  0012               	return	
  4404  001C50                     __end_of_CANSetMask:
  4405                           	opt stack 0
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           intcon	equ	0xFF2
  4413                           intcon2	equ	0xFF1
  4414                           intcon3	equ	0xFF0
  4415                           postinc0	equ	0xFEE
  4416                           wreg	equ	0xFE8
  4417                           postdec1	equ	0xFE5
  4418                           fsr1l	equ	0xFE1
  4419                           indf2	equ	0xFDF
  4420                           fsr2h	equ	0xFDA
  4421                           fsr2l	equ	0xFD9
  4422                           status	equ	0xFD8
  4423                           
  4424 ;; *************** function _CANSetFilter *****************
  4425 ;; Defined at:
  4426 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  numBuffer       1    wreg     enum E16881
  4429 ;;  filter          4   22[BANK0 ] unsigned long 
  4430 ;;  type            1   26[BANK0 ] enum E16844
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  numBuffer       1   31[BANK0 ] enum E16881
  4433 ;;  tamp            4   32[BANK0 ] unsigned long 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;		None               void
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4443 ;;      Params:         0       5       0       0
  4444 ;;      Locals:         0       5       0       0
  4445 ;;      Temps:          0       4       0       0
  4446 ;;      Totals:         0      14       0       0
  4447 ;;Total ram usage:       14 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    4
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		_CANInitialize
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text9
  4458  000114                     __ptext9:
  4459                           	opt stack 0
  4460  000114                     _CANSetFilter:
  4461                           	opt stack 24
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;incstack = 0
  4465                           ;CANSetFilter@numBuffer stored from wreg
  4466  000114  0100               	movlb	0	; () banked
  4467  000116  6FC1               	movwf	CANSetFilter@numBuffer& (0+255),b
  4468                           
  4469                           ;inc\CANlib.h: 750: unsigned long tamp;
  4470                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4471  000118  0100               	movlb	0	; () banked
  4472  00011A  51C1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4473  00011C  0100               	movlb	0	; () banked
  4474  00011E  A4D8               	btfss	status,2,c
  4475  000120  D058               	goto	l2860
  4476                           
  4477                           ; BSR set to: 0
  4478  000122  0100               	movlb	0	; () banked
  4479  000124  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4480  000126  A4D8               	btfss	status,2,c
  4481  000128  D054               	goto	l2860
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;inc\CANlib.h: 753: {
  4485                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4486  00012A  010F               	movlb	15	; () banked
  4487  00012C  9701               	bcf	1,3,b	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4491  00012E  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4492  000132  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4493  000136  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4494  00013A  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4495  00013E  0E04               	movlw	4
  4496  000140  D006               	goto	u2590
  4497  000142                     u2595:
  4498  000142  0100               	movlb	0	; () banked
  4499  000144  90D8               	bcf	status,0,c
  4500  000146  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4501  000148  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4502  00014A  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4503  00014C  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4504  00014E                     u2590:
  4505  00014E  2EE8               	decfsz	wreg,f,c
  4506  000150  D7F8               	goto	u2595
  4507  000152  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4508  000156  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4509  00015A  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4510  00015E  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4514  000162  0100               	movlb	0	; () banked
  4515  000164  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4516  000166  0100               	movlb	0	; () banked
  4517  000168  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4518  00016A  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4519  00016C  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4520  00016E  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4524  000170  C0C2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4528  000174  0E07               	movlw	7
  4529  000176  0100               	movlb	0	; () banked
  4530  000178  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4531  00017A  0100               	movlb	0	; () banked
  4532  00017C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4533  00017E  0E00               	movlw	0
  4534  000180  0100               	movlb	0	; () banked
  4535  000182  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4536  000184  0100               	movlb	0	; () banked
  4537  000186  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4538  000188  0E00               	movlw	0
  4539  00018A  0100               	movlb	0	; () banked
  4540  00018C  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4541  00018E  0100               	movlb	0	; () banked
  4542  000190  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4543  000192  0E00               	movlw	0
  4544  000194  0100               	movlb	0	; () banked
  4545  000196  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4546  000198  0100               	movlb	0	; () banked
  4547  00019A  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4551  00019C  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4552  0001A0  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4553  0001A4  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4554  0001A8  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4555  0001AC  0E05               	movlw	5
  4556  0001AE                     u2605:
  4557  0001AE  90D8               	bcf	status,0,c
  4558  0001B0  0100               	movlb	0	; () banked
  4559  0001B2  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4560  0001B4  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4561  0001B6  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4562  0001B8  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4563  0001BA  2EE8               	decfsz	wreg,f,c
  4564  0001BC  D7F8               	goto	u2605
  4565  0001BE  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4566  0001C2  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4567  0001C6  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4568  0001CA  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4572  0001CE  C0C2  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4573  0001D2                     l2860:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;inc\CANlib.h: 763: }
  4577                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4578  0001D2  0100               	movlb	0	; () banked
  4579  0001D4  05C1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4580  0001D6  A4D8               	btfss	status,2,c
  4581  0001D8  D058               	goto	l2878
  4582                           
  4583                           ; BSR set to: 0
  4584  0001DA  0100               	movlb	0	; () banked
  4585  0001DC  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4586  0001DE  A4D8               	btfss	status,2,c
  4587  0001E0  D054               	goto	l2878
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 766: {
  4591                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4592  0001E2  010F               	movlb	15	; () banked
  4593  0001E4  9705               	bcf	5,3,b	;volatile
  4594                           
  4595                           ; BSR set to: 15
  4596                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4597  0001E6  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4598  0001EA  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4599  0001EE  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4600  0001F2  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4601  0001F6  0E04               	movlw	4
  4602  0001F8  D006               	goto	u2630
  4603  0001FA                     u2635:
  4604  0001FA  0100               	movlb	0	; () banked
  4605  0001FC  90D8               	bcf	status,0,c
  4606  0001FE  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4607  000200  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4608  000202  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4609  000204  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4610  000206                     u2630:
  4611  000206  2EE8               	decfsz	wreg,f,c
  4612  000208  D7F8               	goto	u2635
  4613  00020A  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4614  00020E  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4615  000212  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4616  000216  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4620  00021A  0100               	movlb	0	; () banked
  4621  00021C  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4622  00021E  0100               	movlb	0	; () banked
  4623  000220  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4624  000222  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4625  000224  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4626  000226  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4630  000228  C0C2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4634  00022C  0E07               	movlw	7
  4635  00022E  0100               	movlb	0	; () banked
  4636  000230  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4637  000232  0100               	movlb	0	; () banked
  4638  000234  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4639  000236  0E00               	movlw	0
  4640  000238  0100               	movlb	0	; () banked
  4641  00023A  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4642  00023C  0100               	movlb	0	; () banked
  4643  00023E  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4644  000240  0E00               	movlw	0
  4645  000242  0100               	movlb	0	; () banked
  4646  000244  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4647  000246  0100               	movlb	0	; () banked
  4648  000248  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4649  00024A  0E00               	movlw	0
  4650  00024C  0100               	movlb	0	; () banked
  4651  00024E  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4652  000250  0100               	movlb	0	; () banked
  4653  000252  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4657  000254  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4658  000258  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4659  00025C  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4660  000260  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4661  000264  0E05               	movlw	5
  4662  000266                     u2645:
  4663  000266  90D8               	bcf	status,0,c
  4664  000268  0100               	movlb	0	; () banked
  4665  00026A  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4666  00026C  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4667  00026E  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4668  000270  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4669  000272  2EE8               	decfsz	wreg,f,c
  4670  000274  D7F8               	goto	u2645
  4671  000276  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4672  00027A  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4673  00027E  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4674  000282  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4678  000286  C0C2  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4679  00028A                     l2878:
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;inc\CANlib.h: 776: }
  4683                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4684  00028A  0E02               	movlw	2
  4685  00028C  0100               	movlb	0	; () banked
  4686  00028E  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4687  000290  A4D8               	btfss	status,2,c
  4688  000292  D058               	goto	l2896
  4689                           
  4690                           ; BSR set to: 0
  4691  000294  0100               	movlb	0	; () banked
  4692  000296  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4693  000298  A4D8               	btfss	status,2,c
  4694  00029A  D054               	goto	l2896
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;inc\CANlib.h: 779: {
  4698                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4699  00029C  010F               	movlb	15	; () banked
  4700  00029E  9709               	bcf	9,3,b	;volatile
  4701                           
  4702                           ; BSR set to: 15
  4703                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4704  0002A0  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4705  0002A4  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4706  0002A8  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4707  0002AC  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4708  0002B0  0E04               	movlw	4
  4709  0002B2  D006               	goto	u2670
  4710  0002B4                     u2675:
  4711  0002B4  0100               	movlb	0	; () banked
  4712  0002B6  90D8               	bcf	status,0,c
  4713  0002B8  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4714  0002BA  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4715  0002BC  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4716  0002BE  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4717  0002C0                     u2670:
  4718  0002C0  2EE8               	decfsz	wreg,f,c
  4719  0002C2  D7F8               	goto	u2675
  4720  0002C4  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4721  0002C8  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4722  0002CC  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4723  0002D0  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4727  0002D4  0100               	movlb	0	; () banked
  4728  0002D6  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4729  0002D8  0100               	movlb	0	; () banked
  4730  0002DA  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4731  0002DC  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4732  0002DE  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4733  0002E0  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4737  0002E2  C0C2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4741  0002E6  0E07               	movlw	7
  4742  0002E8  0100               	movlb	0	; () banked
  4743  0002EA  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4744  0002EC  0100               	movlb	0	; () banked
  4745  0002EE  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4746  0002F0  0E00               	movlw	0
  4747  0002F2  0100               	movlb	0	; () banked
  4748  0002F4  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4749  0002F6  0100               	movlb	0	; () banked
  4750  0002F8  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4751  0002FA  0E00               	movlw	0
  4752  0002FC  0100               	movlb	0	; () banked
  4753  0002FE  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4754  000300  0100               	movlb	0	; () banked
  4755  000302  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4756  000304  0E00               	movlw	0
  4757  000306  0100               	movlb	0	; () banked
  4758  000308  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4759  00030A  0100               	movlb	0	; () banked
  4760  00030C  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4764  00030E  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4765  000312  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4766  000316  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4767  00031A  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4768  00031E  0E05               	movlw	5
  4769  000320                     u2685:
  4770  000320  90D8               	bcf	status,0,c
  4771  000322  0100               	movlb	0	; () banked
  4772  000324  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4773  000326  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4774  000328  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4775  00032A  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4776  00032C  2EE8               	decfsz	wreg,f,c
  4777  00032E  D7F8               	goto	u2685
  4778  000330  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4779  000334  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4780  000338  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4781  00033C  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4785  000340  C0C2  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4786  000344                     l2896:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;inc\CANlib.h: 789: }
  4790                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4791  000344  0E03               	movlw	3
  4792  000346  0100               	movlb	0	; () banked
  4793  000348  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4794  00034A  A4D8               	btfss	status,2,c
  4795  00034C  D058               	goto	l2914
  4796                           
  4797                           ; BSR set to: 0
  4798  00034E  0100               	movlb	0	; () banked
  4799  000350  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4800  000352  A4D8               	btfss	status,2,c
  4801  000354  D054               	goto	l2914
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;inc\CANlib.h: 792: {
  4805                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4806  000356  010F               	movlb	15	; () banked
  4807  000358  970D               	bcf	13,3,b	;volatile
  4808                           
  4809                           ; BSR set to: 15
  4810                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4811  00035A  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4812  00035E  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4813  000362  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4814  000366  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4815  00036A  0E04               	movlw	4
  4816  00036C  D006               	goto	u2710
  4817  00036E                     u2715:
  4818  00036E  0100               	movlb	0	; () banked
  4819  000370  90D8               	bcf	status,0,c
  4820  000372  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4821  000374  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4822  000376  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4823  000378  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4824  00037A                     u2710:
  4825  00037A  2EE8               	decfsz	wreg,f,c
  4826  00037C  D7F8               	goto	u2715
  4827  00037E  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4828  000382  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4829  000386  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4830  00038A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4834  00038E  0100               	movlb	0	; () banked
  4835  000390  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4836  000392  0100               	movlb	0	; () banked
  4837  000394  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4838  000396  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4839  000398  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4840  00039A  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4844  00039C  C0C2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4848  0003A0  0E07               	movlw	7
  4849  0003A2  0100               	movlb	0	; () banked
  4850  0003A4  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4851  0003A6  0100               	movlb	0	; () banked
  4852  0003A8  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4853  0003AA  0E00               	movlw	0
  4854  0003AC  0100               	movlb	0	; () banked
  4855  0003AE  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4856  0003B0  0100               	movlb	0	; () banked
  4857  0003B2  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4858  0003B4  0E00               	movlw	0
  4859  0003B6  0100               	movlb	0	; () banked
  4860  0003B8  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4861  0003BA  0100               	movlb	0	; () banked
  4862  0003BC  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4863  0003BE  0E00               	movlw	0
  4864  0003C0  0100               	movlb	0	; () banked
  4865  0003C2  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4866  0003C4  0100               	movlb	0	; () banked
  4867  0003C6  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4871  0003C8  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4872  0003CC  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4873  0003D0  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4874  0003D4  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4875  0003D8  0E05               	movlw	5
  4876  0003DA                     u2725:
  4877  0003DA  90D8               	bcf	status,0,c
  4878  0003DC  0100               	movlb	0	; () banked
  4879  0003DE  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4880  0003E0  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4881  0003E2  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4882  0003E4  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4883  0003E6  2EE8               	decfsz	wreg,f,c
  4884  0003E8  D7F8               	goto	u2725
  4885  0003EA  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4886  0003EE  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4887  0003F2  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4888  0003F6  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4892  0003FA  C0C2  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4893  0003FE                     l2914:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;inc\CANlib.h: 802: }
  4897                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4898  0003FE  0E04               	movlw	4
  4899  000400  0100               	movlb	0	; () banked
  4900  000402  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4901  000404  A4D8               	btfss	status,2,c
  4902  000406  D058               	goto	l2932
  4903                           
  4904                           ; BSR set to: 0
  4905  000408  0100               	movlb	0	; () banked
  4906  00040A  29BC               	incf	CANSetFilter@type& (0+255),w,b
  4907  00040C  A4D8               	btfss	status,2,c
  4908  00040E  D054               	goto	l2932
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 805: {
  4912                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4913  000410  010F               	movlb	15	; () banked
  4914  000412  9711               	bcf	17,3,b	;volatile
  4915                           
  4916                           ; BSR set to: 15
  4917                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4918  000414  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  4919  000418  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4920  00041C  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4921  000420  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4922  000424  0E04               	movlw	4
  4923  000426  D006               	goto	u2750
  4924  000428                     u2755:
  4925  000428  0100               	movlb	0	; () banked
  4926  00042A  90D8               	bcf	status,0,c
  4927  00042C  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4928  00042E  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4929  000430  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4930  000432  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  4931  000434                     u2750:
  4932  000434  2EE8               	decfsz	wreg,f,c
  4933  000436  D7F8               	goto	u2755
  4934  000438  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4935  00043C  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4936  000440  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4937  000444  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4941  000448  0100               	movlb	0	; () banked
  4942  00044A  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  4943  00044C  0100               	movlb	0	; () banked
  4944  00044E  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4945  000450  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4946  000452  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4947  000454  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4951  000456  C0C2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4955  00045A  0E07               	movlw	7
  4956  00045C  0100               	movlb	0	; () banked
  4957  00045E  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  4958  000460  0100               	movlb	0	; () banked
  4959  000462  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  4960  000464  0E00               	movlw	0
  4961  000466  0100               	movlb	0	; () banked
  4962  000468  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4963  00046A  0100               	movlb	0	; () banked
  4964  00046C  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4965  00046E  0E00               	movlw	0
  4966  000470  0100               	movlb	0	; () banked
  4967  000472  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4968  000474  0100               	movlb	0	; () banked
  4969  000476  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4970  000478  0E00               	movlw	0
  4971  00047A  0100               	movlb	0	; () banked
  4972  00047C  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4973  00047E  0100               	movlb	0	; () banked
  4974  000480  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4978  000482  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4979  000486  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4980  00048A  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4981  00048E  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4982  000492  0E05               	movlw	5
  4983  000494                     u2765:
  4984  000494  90D8               	bcf	status,0,c
  4985  000496  0100               	movlb	0	; () banked
  4986  000498  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  4987  00049A  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4988  00049C  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4989  00049E  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4990  0004A0  2EE8               	decfsz	wreg,f,c
  4991  0004A2  D7F8               	goto	u2765
  4992  0004A4  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4993  0004A8  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4994  0004AC  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4995  0004B0  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4999  0004B4  C0C2  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5000  0004B8                     l2932:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 815: }
  5004                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5005  0004B8  0E05               	movlw	5
  5006  0004BA  0100               	movlb	0	; () banked
  5007  0004BC  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5008  0004BE  A4D8               	btfss	status,2,c
  5009  0004C0  D058               	goto	l2950
  5010                           
  5011                           ; BSR set to: 0
  5012  0004C2  0100               	movlb	0	; () banked
  5013  0004C4  29BC               	incf	CANSetFilter@type& (0+255),w,b
  5014  0004C6  A4D8               	btfss	status,2,c
  5015  0004C8  D054               	goto	l2950
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 818: {
  5019                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5020  0004CA  010F               	movlb	15	; () banked
  5021  0004CC  9715               	bcf	21,3,b	;volatile
  5022                           
  5023                           ; BSR set to: 15
  5024                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5025  0004CE  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5026  0004D2  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5027  0004D6  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5028  0004DA  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5029  0004DE  0E04               	movlw	4
  5030  0004E0  D006               	goto	u2790
  5031  0004E2                     u2795:
  5032  0004E2  0100               	movlb	0	; () banked
  5033  0004E4  90D8               	bcf	status,0,c
  5034  0004E6  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5035  0004E8  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5036  0004EA  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5037  0004EC  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5038  0004EE                     u2790:
  5039  0004EE  2EE8               	decfsz	wreg,f,c
  5040  0004F0  D7F8               	goto	u2795
  5041  0004F2  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5042  0004F6  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5043  0004FA  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5044  0004FE  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5048  000502  0100               	movlb	0	; () banked
  5049  000504  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5050  000506  0100               	movlb	0	; () banked
  5051  000508  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5052  00050A  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5053  00050C  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5054  00050E  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5058  000510  C0C2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5062  000514  0E07               	movlw	7
  5063  000516  0100               	movlb	0	; () banked
  5064  000518  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5065  00051A  0100               	movlb	0	; () banked
  5066  00051C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5067  00051E  0E00               	movlw	0
  5068  000520  0100               	movlb	0	; () banked
  5069  000522  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5070  000524  0100               	movlb	0	; () banked
  5071  000526  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5072  000528  0E00               	movlw	0
  5073  00052A  0100               	movlb	0	; () banked
  5074  00052C  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5075  00052E  0100               	movlb	0	; () banked
  5076  000530  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5077  000532  0E00               	movlw	0
  5078  000534  0100               	movlb	0	; () banked
  5079  000536  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5080  000538  0100               	movlb	0	; () banked
  5081  00053A  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5085  00053C  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5086  000540  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5087  000544  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5088  000548  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5089  00054C  0E05               	movlw	5
  5090  00054E                     u2805:
  5091  00054E  90D8               	bcf	status,0,c
  5092  000550  0100               	movlb	0	; () banked
  5093  000552  37BD               	rlcf	??_CANSetFilter& (0+255),f,b
  5094  000554  37BE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5095  000556  37BF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5096  000558  37C0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5097  00055A  2EE8               	decfsz	wreg,f,c
  5098  00055C  D7F8               	goto	u2805
  5099  00055E  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5100  000562  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5101  000566  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5102  00056A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5106  00056E  C0C2  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5107  000572                     l2950:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 828: }
  5111                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5112  000572  0100               	movlb	0	; () banked
  5113  000574  51C1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5114  000576  0100               	movlb	0	; () banked
  5115  000578  A4D8               	btfss	status,2,c
  5116  00057A  D089               	goto	l2984
  5117                           
  5118                           ; BSR set to: 0
  5119  00057C  0EF7               	movlw	247
  5120  00057E  0100               	movlb	0	; () banked
  5121  000580  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5122  000582  A4D8               	btfss	status,2,c
  5123  000584  D084               	goto	l2984
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;inc\CANlib.h: 832: {
  5127                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5128  000586  010F               	movlb	15	; () banked
  5129  000588  8701               	bsf	1,3,b	;volatile
  5130                           
  5131                           ; BSR set to: 15
  5132                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5133  00058A  0100               	movlb	0	; () banked
  5134  00058C  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5135  00058E  0100               	movlb	0	; () banked
  5136  000590  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5137  000592  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5138  000594  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5139  000596  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5143  000598  C0C2  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5147  00059C  0E00               	movlw	0
  5148  00059E  0100               	movlb	0	; () banked
  5149  0005A0  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5150  0005A2  0100               	movlb	0	; () banked
  5151  0005A4  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5152  0005A6  0EFF               	movlw	255
  5153  0005A8  0100               	movlb	0	; () banked
  5154  0005AA  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5155  0005AC  0100               	movlb	0	; () banked
  5156  0005AE  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5157  0005B0  0E00               	movlw	0
  5158  0005B2  0100               	movlb	0	; () banked
  5159  0005B4  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5160  0005B6  0100               	movlb	0	; () banked
  5161  0005B8  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5162  0005BA  0E00               	movlw	0
  5163  0005BC  0100               	movlb	0	; () banked
  5164  0005BE  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5165  0005C0  0100               	movlb	0	; () banked
  5166  0005C2  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5170  0005C4  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5171  0005C8  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5172  0005CC  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5173  0005D0  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5174  0005D4  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5175  0005D8  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5176  0005DC  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5177  0005E0  0100               	movlb	0	; () banked
  5178  0005E2  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5179  0005E4  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5180  0005E8  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5181  0005EC  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5182  0005F0  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5186  0005F4  C0C2  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5190  0005F8  0100               	movlb	0	; () banked
  5191  0005FA  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5192  0005FC  D003               	goto	l483
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5196  0005FE  010F               	movlb	15	; () banked
  5197  000600  8101               	bsf	1,0,b	;volatile
  5198  000602  D002               	goto	l484
  5199  000604                     l483:
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;inc\CANlib.h: 844: else
  5203                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5204  000604  010F               	movlb	15	; () banked
  5205  000606  9101               	bcf	1,0,b	;volatile
  5206  000608                     l484:
  5207                           
  5208                           ; BSR set to: 15
  5209                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5210  000608  0100               	movlb	0	; () banked
  5211  00060A  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5212  00060C  D003               	goto	l485
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5216  00060E  010F               	movlb	15	; () banked
  5217  000610  8301               	bsf	1,1,b	;volatile
  5218  000612  D002               	goto	l486
  5219  000614                     l485:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;inc\CANlib.h: 849: else
  5223                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5224  000614  010F               	movlb	15	; () banked
  5225  000616  9301               	bcf	1,1,b	;volatile
  5226  000618                     l486:
  5227                           
  5228                           ; BSR set to: 15
  5229                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5230  000618  0100               	movlb	0	; () banked
  5231  00061A  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5232  00061C  D003               	goto	l487
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5236  00061E  010F               	movlb	15	; () banked
  5237  000620  8B01               	bsf	1,5,b	;volatile
  5238  000622  D002               	goto	l488
  5239  000624                     l487:
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;inc\CANlib.h: 854: else
  5243                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5244  000624  010F               	movlb	15	; () banked
  5245  000626  9B01               	bcf	1,5,b	;volatile
  5246  000628                     l488:
  5247                           
  5248                           ; BSR set to: 15
  5249                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5250  000628  0100               	movlb	0	; () banked
  5251  00062A  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5252  00062C  D003               	goto	l489
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5256  00062E  010F               	movlb	15	; () banked
  5257  000630  8D01               	bsf	1,6,b	;volatile
  5258  000632  D002               	goto	l490
  5259  000634                     l489:
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 859: else
  5263                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5264  000634  010F               	movlb	15	; () banked
  5265  000636  9D01               	bcf	1,6,b	;volatile
  5266  000638                     l490:
  5267                           
  5268                           ; BSR set to: 15
  5269                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5270  000638  0100               	movlb	0	; () banked
  5271  00063A  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5272  00063C  D003               	goto	l491
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5276  00063E  010F               	movlb	15	; () banked
  5277  000640  8F01               	bsf	1,7,b	;volatile
  5278  000642  D002               	goto	l2978
  5279  000644                     l491:
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 864: else
  5283                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5284  000644  010F               	movlb	15	; () banked
  5285  000646  9F01               	bcf	1,7,b	;volatile
  5286  000648                     l2978:
  5287                           
  5288                           ; BSR set to: 15
  5289                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5290  000648  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5291  00064C  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5292  000650  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5293  000654  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5294  000658  0E16               	movlw	22
  5295  00065A  D006               	goto	u2880
  5296  00065C                     u2885:
  5297  00065C  0100               	movlb	0	; () banked
  5298  00065E  90D8               	bcf	status,0,c
  5299  000660  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5300  000662  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5301  000664  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5302  000666  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5303  000668                     u2880:
  5304  000668  2EE8               	decfsz	wreg,f,c
  5305  00066A  D7F8               	goto	u2885
  5306  00066C  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5307  000670  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5308  000674  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5309  000678  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5313  00067C  0100               	movlb	0	; () banked
  5314  00067E  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5315  000680  0100               	movlb	0	; () banked
  5316  000682  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5317  000684  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5318  000686  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5319  000688  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5323  00068A  C0C2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5324  00068E                     l2984:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;inc\CANlib.h: 870: }
  5328                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5329  00068E  0100               	movlb	0	; () banked
  5330  000690  05C1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5331  000692  A4D8               	btfss	status,2,c
  5332  000694  D089               	goto	l3018
  5333                           
  5334                           ; BSR set to: 0
  5335  000696  0EF7               	movlw	247
  5336  000698  0100               	movlb	0	; () banked
  5337  00069A  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5338  00069C  A4D8               	btfss	status,2,c
  5339  00069E  D084               	goto	l3018
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 873: {
  5343                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5344  0006A0  010F               	movlb	15	; () banked
  5345  0006A2  8705               	bsf	5,3,b	;volatile
  5346                           
  5347                           ; BSR set to: 15
  5348                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5349  0006A4  0100               	movlb	0	; () banked
  5350  0006A6  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5351  0006A8  0100               	movlb	0	; () banked
  5352  0006AA  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5353  0006AC  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5354  0006AE  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5355  0006B0  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5359  0006B2  C0C2  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5363  0006B6  0E00               	movlw	0
  5364  0006B8  0100               	movlb	0	; () banked
  5365  0006BA  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5366  0006BC  0100               	movlb	0	; () banked
  5367  0006BE  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5368  0006C0  0EFF               	movlw	255
  5369  0006C2  0100               	movlb	0	; () banked
  5370  0006C4  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5371  0006C6  0100               	movlb	0	; () banked
  5372  0006C8  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5373  0006CA  0E00               	movlw	0
  5374  0006CC  0100               	movlb	0	; () banked
  5375  0006CE  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5376  0006D0  0100               	movlb	0	; () banked
  5377  0006D2  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5378  0006D4  0E00               	movlw	0
  5379  0006D6  0100               	movlb	0	; () banked
  5380  0006D8  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5381  0006DA  0100               	movlb	0	; () banked
  5382  0006DC  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5386  0006DE  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5387  0006E2  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5388  0006E6  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5389  0006EA  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5390  0006EE  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5391  0006F2  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5392  0006F6  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5393  0006FA  0100               	movlb	0	; () banked
  5394  0006FC  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5395  0006FE  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5396  000702  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5397  000706  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5398  00070A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5402  00070E  C0C2  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5406  000712  0100               	movlb	0	; () banked
  5407  000714  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5408  000716  D003               	goto	l494
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5412  000718  010F               	movlb	15	; () banked
  5413  00071A  8105               	bsf	5,0,b	;volatile
  5414  00071C  D002               	goto	l495
  5415  00071E                     l494:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;inc\CANlib.h: 885: else
  5419                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5420  00071E  010F               	movlb	15	; () banked
  5421  000720  9105               	bcf	5,0,b	;volatile
  5422  000722                     l495:
  5423                           
  5424                           ; BSR set to: 15
  5425                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5426  000722  0100               	movlb	0	; () banked
  5427  000724  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5428  000726  D003               	goto	l496
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5432  000728  010F               	movlb	15	; () banked
  5433  00072A  8305               	bsf	5,1,b	;volatile
  5434  00072C  D002               	goto	l497
  5435  00072E                     l496:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;inc\CANlib.h: 890: else
  5439                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5440  00072E  010F               	movlb	15	; () banked
  5441  000730  9305               	bcf	5,1,b	;volatile
  5442  000732                     l497:
  5443                           
  5444                           ; BSR set to: 15
  5445                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5446  000732  0100               	movlb	0	; () banked
  5447  000734  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5448  000736  D003               	goto	l498
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5452  000738  010F               	movlb	15	; () banked
  5453  00073A  8B05               	bsf	5,5,b	;volatile
  5454  00073C  D002               	goto	l499
  5455  00073E                     l498:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 895: else
  5459                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5460  00073E  010F               	movlb	15	; () banked
  5461  000740  9B05               	bcf	5,5,b	;volatile
  5462  000742                     l499:
  5463                           
  5464                           ; BSR set to: 15
  5465                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5466  000742  0100               	movlb	0	; () banked
  5467  000744  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5468  000746  D003               	goto	l500
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5472  000748  010F               	movlb	15	; () banked
  5473  00074A  8D05               	bsf	5,6,b	;volatile
  5474  00074C  D002               	goto	l501
  5475  00074E                     l500:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 900: else
  5479                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5480  00074E  010F               	movlb	15	; () banked
  5481  000750  9D05               	bcf	5,6,b	;volatile
  5482  000752                     l501:
  5483                           
  5484                           ; BSR set to: 15
  5485                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5486  000752  0100               	movlb	0	; () banked
  5487  000754  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5488  000756  D003               	goto	l502
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5492  000758  010F               	movlb	15	; () banked
  5493  00075A  8F05               	bsf	5,7,b	;volatile
  5494  00075C  D002               	goto	l3012
  5495  00075E                     l502:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 905: else
  5499                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5500  00075E  010F               	movlb	15	; () banked
  5501  000760  9F05               	bcf	5,7,b	;volatile
  5502  000762                     l3012:
  5503                           
  5504                           ; BSR set to: 15
  5505                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5506  000762  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5507  000766  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5508  00076A  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5509  00076E  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5510  000772  0E16               	movlw	22
  5511  000774  D006               	goto	u2960
  5512  000776                     u2965:
  5513  000776  0100               	movlb	0	; () banked
  5514  000778  90D8               	bcf	status,0,c
  5515  00077A  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5516  00077C  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5517  00077E  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5518  000780  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5519  000782                     u2960:
  5520  000782  2EE8               	decfsz	wreg,f,c
  5521  000784  D7F8               	goto	u2965
  5522  000786  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5523  00078A  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5524  00078E  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5525  000792  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5529  000796  0100               	movlb	0	; () banked
  5530  000798  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5531  00079A  0100               	movlb	0	; () banked
  5532  00079C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5533  00079E  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5534  0007A0  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5535  0007A2  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5539  0007A4  C0C2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5540  0007A8                     l3018:
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;inc\CANlib.h: 911: }
  5544                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5545  0007A8  0E02               	movlw	2
  5546  0007AA  0100               	movlb	0	; () banked
  5547  0007AC  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5548  0007AE  A4D8               	btfss	status,2,c
  5549  0007B0  D089               	goto	l3052
  5550                           
  5551                           ; BSR set to: 0
  5552  0007B2  0EF7               	movlw	247
  5553  0007B4  0100               	movlb	0	; () banked
  5554  0007B6  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5555  0007B8  A4D8               	btfss	status,2,c
  5556  0007BA  D084               	goto	l3052
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 915: {
  5560                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5561  0007BC  010F               	movlb	15	; () banked
  5562  0007BE  8709               	bsf	9,3,b	;volatile
  5563                           
  5564                           ; BSR set to: 15
  5565                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5566  0007C0  0100               	movlb	0	; () banked
  5567  0007C2  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5568  0007C4  0100               	movlb	0	; () banked
  5569  0007C6  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5570  0007C8  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5571  0007CA  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5572  0007CC  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5576  0007CE  C0C2  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5580  0007D2  0E00               	movlw	0
  5581  0007D4  0100               	movlb	0	; () banked
  5582  0007D6  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5583  0007D8  0100               	movlb	0	; () banked
  5584  0007DA  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5585  0007DC  0EFF               	movlw	255
  5586  0007DE  0100               	movlb	0	; () banked
  5587  0007E0  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5588  0007E2  0100               	movlb	0	; () banked
  5589  0007E4  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5590  0007E6  0E00               	movlw	0
  5591  0007E8  0100               	movlb	0	; () banked
  5592  0007EA  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5593  0007EC  0100               	movlb	0	; () banked
  5594  0007EE  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5595  0007F0  0E00               	movlw	0
  5596  0007F2  0100               	movlb	0	; () banked
  5597  0007F4  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5598  0007F6  0100               	movlb	0	; () banked
  5599  0007F8  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5603  0007FA  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5604  0007FE  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5605  000802  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5606  000806  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5607  00080A  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5608  00080E  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5609  000812  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5610  000816  0100               	movlb	0	; () banked
  5611  000818  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5612  00081A  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5613  00081E  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5614  000822  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5615  000826  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5619  00082A  C0C2  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5623  00082E  0100               	movlb	0	; () banked
  5624  000830  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5625  000832  D003               	goto	l505
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5629  000834  010F               	movlb	15	; () banked
  5630  000836  8109               	bsf	9,0,b	;volatile
  5631  000838  D002               	goto	l506
  5632  00083A                     l505:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;inc\CANlib.h: 927: else
  5636                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5637  00083A  010F               	movlb	15	; () banked
  5638  00083C  9109               	bcf	9,0,b	;volatile
  5639  00083E                     l506:
  5640                           
  5641                           ; BSR set to: 15
  5642                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5643  00083E  0100               	movlb	0	; () banked
  5644  000840  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5645  000842  D003               	goto	l507
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5649  000844  010F               	movlb	15	; () banked
  5650  000846  8309               	bsf	9,1,b	;volatile
  5651  000848  D002               	goto	l508
  5652  00084A                     l507:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;inc\CANlib.h: 932: else
  5656                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5657  00084A  010F               	movlb	15	; () banked
  5658  00084C  9309               	bcf	9,1,b	;volatile
  5659  00084E                     l508:
  5660                           
  5661                           ; BSR set to: 15
  5662                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5663  00084E  0100               	movlb	0	; () banked
  5664  000850  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5665  000852  D003               	goto	l509
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5669  000854  010F               	movlb	15	; () banked
  5670  000856  8B09               	bsf	9,5,b	;volatile
  5671  000858  D002               	goto	l510
  5672  00085A                     l509:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 937: else
  5676                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5677  00085A  010F               	movlb	15	; () banked
  5678  00085C  9B09               	bcf	9,5,b	;volatile
  5679  00085E                     l510:
  5680                           
  5681                           ; BSR set to: 15
  5682                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5683  00085E  0100               	movlb	0	; () banked
  5684  000860  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5685  000862  D003               	goto	l511
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5689  000864  010F               	movlb	15	; () banked
  5690  000866  8D09               	bsf	9,6,b	;volatile
  5691  000868  D002               	goto	l512
  5692  00086A                     l511:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 942: else
  5696                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5697  00086A  010F               	movlb	15	; () banked
  5698  00086C  9D09               	bcf	9,6,b	;volatile
  5699  00086E                     l512:
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5703  00086E  0100               	movlb	0	; () banked
  5704  000870  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5705  000872  D003               	goto	l513
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5709  000874  010F               	movlb	15	; () banked
  5710  000876  8F09               	bsf	9,7,b	;volatile
  5711  000878  D002               	goto	l3046
  5712  00087A                     l513:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 947: else
  5716                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5717  00087A  010F               	movlb	15	; () banked
  5718  00087C  9F09               	bcf	9,7,b	;volatile
  5719  00087E                     l3046:
  5720                           
  5721                           ; BSR set to: 15
  5722                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5723  00087E  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5724  000882  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5725  000886  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5726  00088A  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5727  00088E  0E16               	movlw	22
  5728  000890  D006               	goto	u3040
  5729  000892                     u3045:
  5730  000892  0100               	movlb	0	; () banked
  5731  000894  90D8               	bcf	status,0,c
  5732  000896  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5733  000898  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5734  00089A  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5735  00089C  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5736  00089E                     u3040:
  5737  00089E  2EE8               	decfsz	wreg,f,c
  5738  0008A0  D7F8               	goto	u3045
  5739  0008A2  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5740  0008A6  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5741  0008AA  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5742  0008AE  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5746  0008B2  0100               	movlb	0	; () banked
  5747  0008B4  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5748  0008B6  0100               	movlb	0	; () banked
  5749  0008B8  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5750  0008BA  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5751  0008BC  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5752  0008BE  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5756  0008C0  C0C2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5757  0008C4                     l3052:
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;inc\CANlib.h: 953: }
  5761                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5762  0008C4  0E03               	movlw	3
  5763  0008C6  0100               	movlb	0	; () banked
  5764  0008C8  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5765  0008CA  A4D8               	btfss	status,2,c
  5766  0008CC  D089               	goto	l3086
  5767                           
  5768                           ; BSR set to: 0
  5769  0008CE  0EF7               	movlw	247
  5770  0008D0  0100               	movlb	0	; () banked
  5771  0008D2  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5772  0008D4  A4D8               	btfss	status,2,c
  5773  0008D6  D084               	goto	l3086
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;inc\CANlib.h: 956: {
  5777                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5778  0008D8  010F               	movlb	15	; () banked
  5779  0008DA  870D               	bsf	13,3,b	;volatile
  5780                           
  5781                           ; BSR set to: 15
  5782                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5783  0008DC  0100               	movlb	0	; () banked
  5784  0008DE  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  5785  0008E0  0100               	movlb	0	; () banked
  5786  0008E2  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5787  0008E4  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5788  0008E6  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5789  0008E8  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5793  0008EA  C0C2  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5797  0008EE  0E00               	movlw	0
  5798  0008F0  0100               	movlb	0	; () banked
  5799  0008F2  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  5800  0008F4  0100               	movlb	0	; () banked
  5801  0008F6  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5802  0008F8  0EFF               	movlw	255
  5803  0008FA  0100               	movlb	0	; () banked
  5804  0008FC  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5805  0008FE  0100               	movlb	0	; () banked
  5806  000900  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5807  000902  0E00               	movlw	0
  5808  000904  0100               	movlb	0	; () banked
  5809  000906  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5810  000908  0100               	movlb	0	; () banked
  5811  00090A  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5812  00090C  0E00               	movlw	0
  5813  00090E  0100               	movlb	0	; () banked
  5814  000910  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5815  000912  0100               	movlb	0	; () banked
  5816  000914  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5820  000916  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5821  00091A  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5822  00091E  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5823  000922  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5824  000926  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5825  00092A  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5826  00092E  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5827  000932  0100               	movlb	0	; () banked
  5828  000934  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5829  000936  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5830  00093A  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5831  00093E  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5832  000942  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5836  000946  C0C2  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5840  00094A  0100               	movlb	0	; () banked
  5841  00094C  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5842  00094E  D003               	goto	l516
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5846  000950  010F               	movlb	15	; () banked
  5847  000952  810D               	bsf	13,0,b	;volatile
  5848  000954  D002               	goto	l517
  5849  000956                     l516:
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;inc\CANlib.h: 968: else
  5853                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5854  000956  010F               	movlb	15	; () banked
  5855  000958  910D               	bcf	13,0,b	;volatile
  5856  00095A                     l517:
  5857                           
  5858                           ; BSR set to: 15
  5859                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5860  00095A  0100               	movlb	0	; () banked
  5861  00095C  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5862  00095E  D003               	goto	l518
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5866  000960  010F               	movlb	15	; () banked
  5867  000962  830D               	bsf	13,1,b	;volatile
  5868  000964  D002               	goto	l519
  5869  000966                     l518:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;inc\CANlib.h: 973: else
  5873                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5874  000966  010F               	movlb	15	; () banked
  5875  000968  930D               	bcf	13,1,b	;volatile
  5876  00096A                     l519:
  5877                           
  5878                           ; BSR set to: 15
  5879                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5880  00096A  0100               	movlb	0	; () banked
  5881  00096C  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5882  00096E  D003               	goto	l520
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5886  000970  010F               	movlb	15	; () banked
  5887  000972  8B0D               	bsf	13,5,b	;volatile
  5888  000974  D002               	goto	l521
  5889  000976                     l520:
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;inc\CANlib.h: 978: else
  5893                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5894  000976  010F               	movlb	15	; () banked
  5895  000978  9B0D               	bcf	13,5,b	;volatile
  5896  00097A                     l521:
  5897                           
  5898                           ; BSR set to: 15
  5899                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5900  00097A  0100               	movlb	0	; () banked
  5901  00097C  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5902  00097E  D003               	goto	l522
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5906  000980  010F               	movlb	15	; () banked
  5907  000982  8D0D               	bsf	13,6,b	;volatile
  5908  000984  D002               	goto	l523
  5909  000986                     l522:
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 983: else
  5913                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5914  000986  010F               	movlb	15	; () banked
  5915  000988  9D0D               	bcf	13,6,b	;volatile
  5916  00098A                     l523:
  5917                           
  5918                           ; BSR set to: 15
  5919                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5920  00098A  0100               	movlb	0	; () banked
  5921  00098C  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5922  00098E  D003               	goto	l524
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5926  000990  010F               	movlb	15	; () banked
  5927  000992  8F0D               	bsf	13,7,b	;volatile
  5928  000994  D002               	goto	l3080
  5929  000996                     l524:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;inc\CANlib.h: 988: else
  5933                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5934  000996  010F               	movlb	15	; () banked
  5935  000998  9F0D               	bcf	13,7,b	;volatile
  5936  00099A                     l3080:
  5937                           
  5938                           ; BSR set to: 15
  5939                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5940  00099A  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  5941  00099E  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5942  0009A2  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5943  0009A6  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5944  0009AA  0E16               	movlw	22
  5945  0009AC  D006               	goto	u3120
  5946  0009AE                     u3125:
  5947  0009AE  0100               	movlb	0	; () banked
  5948  0009B0  90D8               	bcf	status,0,c
  5949  0009B2  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5950  0009B4  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5951  0009B6  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5952  0009B8  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  5953  0009BA                     u3120:
  5954  0009BA  2EE8               	decfsz	wreg,f,c
  5955  0009BC  D7F8               	goto	u3125
  5956  0009BE  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5957  0009C2  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5958  0009C6  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5959  0009CA  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5963  0009CE  0100               	movlb	0	; () banked
  5964  0009D0  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  5965  0009D2  0100               	movlb	0	; () banked
  5966  0009D4  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  5967  0009D6  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5968  0009D8  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5969  0009DA  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5973  0009DC  C0C2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5974  0009E0                     l3086:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;inc\CANlib.h: 994: }
  5978                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5979  0009E0  0E04               	movlw	4
  5980  0009E2  0100               	movlb	0	; () banked
  5981  0009E4  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5982  0009E6  A4D8               	btfss	status,2,c
  5983  0009E8  D089               	goto	l3120
  5984                           
  5985                           ; BSR set to: 0
  5986  0009EA  0EF7               	movlw	247
  5987  0009EC  0100               	movlb	0	; () banked
  5988  0009EE  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  5989  0009F0  A4D8               	btfss	status,2,c
  5990  0009F2  D084               	goto	l3120
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;inc\CANlib.h: 997: {
  5994                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5995  0009F4  010F               	movlb	15	; () banked
  5996  0009F6  8711               	bsf	17,3,b	;volatile
  5997                           
  5998                           ; BSR set to: 15
  5999                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6000  0009F8  0100               	movlb	0	; () banked
  6001  0009FA  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  6002  0009FC  0100               	movlb	0	; () banked
  6003  0009FE  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6004  000A00  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6005  000A02  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6006  000A04  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6010  000A06  C0C2  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6014  000A0A  0E00               	movlw	0
  6015  000A0C  0100               	movlb	0	; () banked
  6016  000A0E  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  6017  000A10  0100               	movlb	0	; () banked
  6018  000A12  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6019  000A14  0EFF               	movlw	255
  6020  000A16  0100               	movlb	0	; () banked
  6021  000A18  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6022  000A1A  0100               	movlb	0	; () banked
  6023  000A1C  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6024  000A1E  0E00               	movlw	0
  6025  000A20  0100               	movlb	0	; () banked
  6026  000A22  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6027  000A24  0100               	movlb	0	; () banked
  6028  000A26  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6029  000A28  0E00               	movlw	0
  6030  000A2A  0100               	movlb	0	; () banked
  6031  000A2C  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6032  000A2E  0100               	movlb	0	; () banked
  6033  000A30  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6037  000A32  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6038  000A36  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6039  000A3A  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6040  000A3E  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6041  000A42  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6042  000A46  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6043  000A4A  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6044  000A4E  0100               	movlb	0	; () banked
  6045  000A50  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6046  000A52  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6047  000A56  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6048  000A5A  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6049  000A5E  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6053  000A62  C0C2  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6057  000A66  0100               	movlb	0	; () banked
  6058  000A68  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6059  000A6A  D003               	goto	l527
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6063  000A6C  010F               	movlb	15	; () banked
  6064  000A6E  8111               	bsf	17,0,b	;volatile
  6065  000A70  D002               	goto	l528
  6066  000A72                     l527:
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;inc\CANlib.h: 1009: else
  6070                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6071  000A72  010F               	movlb	15	; () banked
  6072  000A74  9111               	bcf	17,0,b	;volatile
  6073  000A76                     l528:
  6074                           
  6075                           ; BSR set to: 15
  6076                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6077  000A76  0100               	movlb	0	; () banked
  6078  000A78  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6079  000A7A  D003               	goto	l529
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6083  000A7C  010F               	movlb	15	; () banked
  6084  000A7E  8311               	bsf	17,1,b	;volatile
  6085  000A80  D002               	goto	l530
  6086  000A82                     l529:
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;inc\CANlib.h: 1014: else
  6090                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6091  000A82  010F               	movlb	15	; () banked
  6092  000A84  9311               	bcf	17,1,b	;volatile
  6093  000A86                     l530:
  6094                           
  6095                           ; BSR set to: 15
  6096                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6097  000A86  0100               	movlb	0	; () banked
  6098  000A88  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6099  000A8A  D003               	goto	l531
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6103  000A8C  010F               	movlb	15	; () banked
  6104  000A8E  8B11               	bsf	17,5,b	;volatile
  6105  000A90  D002               	goto	l532
  6106  000A92                     l531:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;inc\CANlib.h: 1019: else
  6110                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6111  000A92  010F               	movlb	15	; () banked
  6112  000A94  9B11               	bcf	17,5,b	;volatile
  6113  000A96                     l532:
  6114                           
  6115                           ; BSR set to: 15
  6116                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6117  000A96  0100               	movlb	0	; () banked
  6118  000A98  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6119  000A9A  D003               	goto	l533
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6123  000A9C  010F               	movlb	15	; () banked
  6124  000A9E  8D11               	bsf	17,6,b	;volatile
  6125  000AA0  D002               	goto	l534
  6126  000AA2                     l533:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;inc\CANlib.h: 1024: else
  6130                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6131  000AA2  010F               	movlb	15	; () banked
  6132  000AA4  9D11               	bcf	17,6,b	;volatile
  6133  000AA6                     l534:
  6134                           
  6135                           ; BSR set to: 15
  6136                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6137  000AA6  0100               	movlb	0	; () banked
  6138  000AA8  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6139  000AAA  D003               	goto	l535
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6143  000AAC  010F               	movlb	15	; () banked
  6144  000AAE  8F11               	bsf	17,7,b	;volatile
  6145  000AB0  D002               	goto	l3114
  6146  000AB2                     l535:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;inc\CANlib.h: 1029: else
  6150                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6151  000AB2  010F               	movlb	15	; () banked
  6152  000AB4  9F11               	bcf	17,7,b	;volatile
  6153  000AB6                     l3114:
  6154                           
  6155                           ; BSR set to: 15
  6156                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6157  000AB6  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  6158  000ABA  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6159  000ABE  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6160  000AC2  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6161  000AC6  0E16               	movlw	22
  6162  000AC8  D006               	goto	u3200
  6163  000ACA                     u3205:
  6164  000ACA  0100               	movlb	0	; () banked
  6165  000ACC  90D8               	bcf	status,0,c
  6166  000ACE  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6167  000AD0  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6168  000AD2  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6169  000AD4  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  6170  000AD6                     u3200:
  6171  000AD6  2EE8               	decfsz	wreg,f,c
  6172  000AD8  D7F8               	goto	u3205
  6173  000ADA  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6174  000ADE  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6175  000AE2  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6176  000AE6  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6180  000AEA  0100               	movlb	0	; () banked
  6181  000AEC  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  6182  000AEE  0100               	movlb	0	; () banked
  6183  000AF0  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6184  000AF2  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6185  000AF4  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6186  000AF6  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6190  000AF8  C0C2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6191  000AFC                     l3120:
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;inc\CANlib.h: 1035: }
  6195                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6196  000AFC  0E05               	movlw	5
  6197  000AFE  0100               	movlb	0	; () banked
  6198  000B00  19C1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6199  000B02  A4D8               	btfss	status,2,c
  6200  000B04  0012               	return	
  6201                           
  6202                           ; BSR set to: 0
  6203  000B06  0EF7               	movlw	247
  6204  000B08  0100               	movlb	0	; () banked
  6205  000B0A  19BC               	xorwf	CANSetFilter@type& (0+255),w,b
  6206  000B0C  A4D8               	btfss	status,2,c
  6207  000B0E  0012               	return	
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;inc\CANlib.h: 1038: {
  6211                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6212  000B10  010F               	movlb	15	; () banked
  6213  000B12  8715               	bsf	21,3,b	;volatile
  6214                           
  6215                           ; BSR set to: 15
  6216                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6217  000B14  0100               	movlb	0	; () banked
  6218  000B16  51B8               	movf	CANSetFilter@filter& (0+255),w,b
  6219  000B18  0100               	movlb	0	; () banked
  6220  000B1A  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6221  000B1C  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6222  000B1E  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6223  000B20  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6227  000B22  C0C2  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6231  000B26  0E00               	movlw	0
  6232  000B28  0100               	movlb	0	; () banked
  6233  000B2A  15B8               	andwf	CANSetFilter@filter& (0+255),w,b
  6234  000B2C  0100               	movlb	0	; () banked
  6235  000B2E  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6236  000B30  0EFF               	movlw	255
  6237  000B32  0100               	movlb	0	; () banked
  6238  000B34  15B9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6239  000B36  0100               	movlb	0	; () banked
  6240  000B38  6FC3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6241  000B3A  0E00               	movlw	0
  6242  000B3C  0100               	movlb	0	; () banked
  6243  000B3E  15BA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6244  000B40  0100               	movlb	0	; () banked
  6245  000B42  6FC4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6246  000B44  0E00               	movlw	0
  6247  000B46  0100               	movlb	0	; () banked
  6248  000B48  15BB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6249  000B4A  0100               	movlb	0	; () banked
  6250  000B4C  6FC5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6254  000B4E  C0C2  F0BD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6255  000B52  C0C3  F0BE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6256  000B56  C0C4  F0BF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6257  000B5A  C0C5  F0C0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6258  000B5E  C0BE  F0BD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6259  000B62  C0BF  F0BE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6260  000B66  C0C0  F0BF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6261  000B6A  0100               	movlb	0	; () banked
  6262  000B6C  6BC0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6263  000B6E  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6264  000B72  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6265  000B76  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6266  000B7A  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6270  000B7E  C0C2  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6274  000B82  0100               	movlb	0	; () banked
  6275  000B84  A1BA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6276  000B86  D003               	goto	l538
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6280  000B88  010F               	movlb	15	; () banked
  6281  000B8A  8115               	bsf	21,0,b	;volatile
  6282  000B8C  D002               	goto	l539
  6283  000B8E                     l538:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;inc\CANlib.h: 1050: else
  6287                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6288  000B8E  010F               	movlb	15	; () banked
  6289  000B90  9115               	bcf	21,0,b	;volatile
  6290  000B92                     l539:
  6291                           
  6292                           ; BSR set to: 15
  6293                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6294  000B92  0100               	movlb	0	; () banked
  6295  000B94  A3BA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6296  000B96  D003               	goto	l540
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6300  000B98  010F               	movlb	15	; () banked
  6301  000B9A  8315               	bsf	21,1,b	;volatile
  6302  000B9C  D002               	goto	l541
  6303  000B9E                     l540:
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;inc\CANlib.h: 1055: else
  6307                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6308  000B9E  010F               	movlb	15	; () banked
  6309  000BA0  9315               	bcf	21,1,b	;volatile
  6310  000BA2                     l541:
  6311                           
  6312                           ; BSR set to: 15
  6313                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6314  000BA2  0100               	movlb	0	; () banked
  6315  000BA4  A5BA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6316  000BA6  D003               	goto	l542
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6320  000BA8  010F               	movlb	15	; () banked
  6321  000BAA  8B15               	bsf	21,5,b	;volatile
  6322  000BAC  D002               	goto	l543
  6323  000BAE                     l542:
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;inc\CANlib.h: 1060: else
  6327                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6328  000BAE  010F               	movlb	15	; () banked
  6329  000BB0  9B15               	bcf	21,5,b	;volatile
  6330  000BB2                     l543:
  6331                           
  6332                           ; BSR set to: 15
  6333                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6334  000BB2  0100               	movlb	0	; () banked
  6335  000BB4  A7BA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6336  000BB6  D003               	goto	l544
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6340  000BB8  010F               	movlb	15	; () banked
  6341  000BBA  8D15               	bsf	21,6,b	;volatile
  6342  000BBC  D002               	goto	l545
  6343  000BBE                     l544:
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;inc\CANlib.h: 1065: else
  6347                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6348  000BBE  010F               	movlb	15	; () banked
  6349  000BC0  9D15               	bcf	21,6,b	;volatile
  6350  000BC2                     l545:
  6351                           
  6352                           ; BSR set to: 15
  6353                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6354  000BC2  0100               	movlb	0	; () banked
  6355  000BC4  A9BA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6356  000BC6  D003               	goto	l546
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6360  000BC8  010F               	movlb	15	; () banked
  6361  000BCA  8F15               	bsf	21,7,b	;volatile
  6362  000BCC  D002               	goto	l3148
  6363  000BCE                     l546:
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;inc\CANlib.h: 1070: else
  6367                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6368  000BCE  010F               	movlb	15	; () banked
  6369  000BD0  9F15               	bcf	21,7,b	;volatile
  6370  000BD2                     l3148:
  6371                           
  6372                           ; BSR set to: 15
  6373                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6374  000BD2  C0B8  F0BD         	movff	CANSetFilter@filter,??_CANSetFilter
  6375  000BD6  C0B9  F0BE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6376  000BDA  C0BA  F0BF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6377  000BDE  C0BB  F0C0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6378  000BE2  0E16               	movlw	22
  6379  000BE4  D006               	goto	u3280
  6380  000BE6                     u3285:
  6381  000BE6  0100               	movlb	0	; () banked
  6382  000BE8  90D8               	bcf	status,0,c
  6383  000BEA  33C0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6384  000BEC  33BF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6385  000BEE  33BE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6386  000BF0  33BD               	rrcf	??_CANSetFilter& (0+255),f,b
  6387  000BF2                     u3280:
  6388  000BF2  2EE8               	decfsz	wreg,f,c
  6389  000BF4  D7F8               	goto	u3285
  6390  000BF6  C0BD  F0C2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6391  000BFA  C0BE  F0C3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6392  000BFE  C0BF  F0C4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6393  000C02  C0C0  F0C5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6397  000C06  0100               	movlb	0	; () banked
  6398  000C08  51C2               	movf	CANSetFilter@tamp& (0+255),w,b
  6399  000C0A  0100               	movlb	0	; () banked
  6400  000C0C  6FC2               	movwf	CANSetFilter@tamp& (0+255),b
  6401  000C0E  6BC3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6402  000C10  6BC4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6403  000C12  6BC5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6407  000C14  C0C2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6408  000C18  0012               	return	
  6409  000C1A                     __end_of_CANSetFilter:
  6410                           	opt stack 0
  6411                           tblptru	equ	0xFF8
  6412                           tblptrh	equ	0xFF7
  6413                           tblptrl	equ	0xFF6
  6414                           tablat	equ	0xFF5
  6415                           prodh	equ	0xFF4
  6416                           prodl	equ	0xFF3
  6417                           intcon	equ	0xFF2
  6418                           intcon2	equ	0xFF1
  6419                           intcon3	equ	0xFF0
  6420                           postinc0	equ	0xFEE
  6421                           wreg	equ	0xFE8
  6422                           postdec1	equ	0xFE5
  6423                           fsr1l	equ	0xFE1
  6424                           indf2	equ	0xFDF
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function _CANOperationMode *****************
  6430 ;; Defined at:
  6431 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  mode            1    wreg     enum E16838
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  mode            1   22[BANK0 ] enum E16838
  6436 ;; Return value:  Size  Location     Type
  6437 ;;		None               void
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6445 ;;      Params:         0       0       0       0
  6446 ;;      Locals:         0       1       0       0
  6447 ;;      Temps:          0       0       0       0
  6448 ;;      Totals:         0       1       0       0
  6449 ;;Total ram usage:        1 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    4
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_CANInitialize
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text10
  6460  0027EC                     __ptext10:
  6461                           	opt stack 0
  6462  0027EC                     _CANOperationMode:
  6463                           	opt stack 24
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;incstack = 0
  6467                           ;CANOperationMode@mode stored from wreg
  6468  0027EC  0100               	movlb	0	; () banked
  6469  0027EE  6FB8               	movwf	CANOperationMode@mode& (0+255),b
  6470                           
  6471                           ;inc\CANlib.h: 208: CANCON = mode;
  6472  0027F0  C0B8  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6473  0027F4                     l2744:
  6474  0027F4  506E               	movf	3950,w,c	;volatile
  6475  0027F6  0BE0               	andlw	224
  6476  0027F8  0100               	movlb	0	; () banked
  6477  0027FA  19B8               	xorwf	CANOperationMode@mode& (0+255),w,b
  6478  0027FC  B4D8               	btfsc	status,2,c
  6479  0027FE  0012               	return	
  6480  002800  D7F9               	goto	l2744
  6481  002802                     __end_of_CANOperationMode:
  6482                           	opt stack 0
  6483                           tblptru	equ	0xFF8
  6484                           tblptrh	equ	0xFF7
  6485                           tblptrl	equ	0xFF6
  6486                           tablat	equ	0xFF5
  6487                           prodh	equ	0xFF4
  6488                           prodl	equ	0xFF3
  6489                           intcon	equ	0xFF2
  6490                           intcon2	equ	0xFF1
  6491                           intcon3	equ	0xFF0
  6492                           postinc0	equ	0xFEE
  6493                           wreg	equ	0xFE8
  6494                           postdec1	equ	0xFE5
  6495                           fsr1l	equ	0xFE1
  6496                           indf2	equ	0xFDF
  6497                           fsr2h	equ	0xFDA
  6498                           fsr2l	equ	0xFD9
  6499                           status	equ	0xFD8
  6500                           
  6501 ;; *************** function ___lwdiv *****************
  6502 ;; Defined at:
  6503 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  dividend        2   22[BANK0 ] unsigned int 
  6506 ;;  divisor         2   24[BANK0 ] unsigned int 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  quotient        2   26[BANK0 ] unsigned int 
  6509 ;;  counter         1   28[BANK0 ] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  2   22[BANK0 ] unsigned int 
  6512 ;; Registers used:
  6513 ;;		wreg, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6519 ;;      Params:         0       4       0       0
  6520 ;;      Locals:         0       3       0       0
  6521 ;;      Temps:          0       0       0       0
  6522 ;;      Totals:         0       7       0       0
  6523 ;;Total ram usage:        7 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    4
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_main
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text11
  6534  0025E0                     __ptext11:
  6535                           	opt stack 0
  6536  0025E0                     ___lwdiv:
  6537                           	opt stack 26
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;incstack = 0
  6541  0025E0  0E00               	movlw	0
  6542  0025E2  0100               	movlb	0	; () banked
  6543  0025E4  6FBD               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6544  0025E6  0E00               	movlw	0
  6545  0025E8  6FBC               	movwf	___lwdiv@quotient& (0+255),b
  6546                           
  6547                           ; BSR set to: 0
  6548  0025EA  0100               	movlb	0	; () banked
  6549  0025EC  51BA               	movf	___lwdiv@divisor& (0+255),w,b
  6550  0025EE  0100               	movlb	0	; () banked
  6551  0025F0  11BB               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6552  0025F2  B4D8               	btfsc	status,2,c
  6553  0025F4  D02C               	goto	l1153
  6554                           
  6555                           ; BSR set to: 0
  6556  0025F6  0E01               	movlw	1
  6557  0025F8  0100               	movlb	0	; () banked
  6558  0025FA  6FBE               	movwf	___lwdiv@counter& (0+255),b
  6559  0025FC  D006               	goto	l3818
  6560  0025FE                     l3816:
  6561                           
  6562                           ; BSR set to: 0
  6563  0025FE  0100               	movlb	0	; () banked
  6564  002600  90D8               	bcf	status,0,c
  6565  002602  37BA               	rlcf	___lwdiv@divisor& (0+255),f,b
  6566  002604  37BB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6567  002606  0100               	movlb	0	; () banked
  6568  002608  2BBE               	incf	___lwdiv@counter& (0+255),f,b
  6569  00260A                     l3818:
  6570                           
  6571                           ; BSR set to: 0
  6572  00260A  0100               	movlb	0	; () banked
  6573  00260C  AFBB               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6574  00260E  D7F7               	goto	l3816
  6575  002610                     l3820:
  6576                           
  6577                           ; BSR set to: 0
  6578  002610  0100               	movlb	0	; () banked
  6579  002612  90D8               	bcf	status,0,c
  6580  002614  37BC               	rlcf	___lwdiv@quotient& (0+255),f,b
  6581  002616  37BD               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6582                           
  6583                           ; BSR set to: 0
  6584  002618  0100               	movlb	0	; () banked
  6585  00261A  51BA               	movf	___lwdiv@divisor& (0+255),w,b
  6586  00261C  0100               	movlb	0	; () banked
  6587  00261E  5DB8               	subwf	___lwdiv@dividend& (0+255),w,b
  6588  002620  0100               	movlb	0	; () banked
  6589  002622  51BB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6590  002624  0100               	movlb	0	; () banked
  6591  002626  59B9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6592  002628  A0D8               	btfss	status,0,c
  6593  00262A  D00A               	goto	l3828
  6594                           
  6595                           ; BSR set to: 0
  6596  00262C  0100               	movlb	0	; () banked
  6597  00262E  51BA               	movf	___lwdiv@divisor& (0+255),w,b
  6598  002630  0100               	movlb	0	; () banked
  6599  002632  5FB8               	subwf	___lwdiv@dividend& (0+255),f,b
  6600  002634  0100               	movlb	0	; () banked
  6601  002636  51BB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6602  002638  0100               	movlb	0	; () banked
  6603  00263A  5BB9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6604                           
  6605                           ; BSR set to: 0
  6606  00263C  0100               	movlb	0	; () banked
  6607  00263E  81BC               	bsf	___lwdiv@quotient& (0+255),0,b
  6608  002640                     l3828:
  6609                           
  6610                           ; BSR set to: 0
  6611  002640  0100               	movlb	0	; () banked
  6612  002642  90D8               	bcf	status,0,c
  6613  002644  33BB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6614  002646  33BA               	rrcf	___lwdiv@divisor& (0+255),f,b
  6615                           
  6616                           ; BSR set to: 0
  6617  002648  0100               	movlb	0	; () banked
  6618  00264A  2FBE               	decfsz	___lwdiv@counter& (0+255),f,b
  6619  00264C  D7E1               	goto	l3820
  6620  00264E                     l1153:
  6621                           
  6622                           ; BSR set to: 0
  6623  00264E  C0BC  F0B8         	movff	___lwdiv@quotient,?___lwdiv
  6624  002652  C0BD  F0B9         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6625                           
  6626                           ; BSR set to: 0
  6627  002656  0012               	return		;funcret
  6628  002658                     __end_of___lwdiv:
  6629                           	opt stack 0
  6630                           tblptru	equ	0xFF8
  6631                           tblptrh	equ	0xFF7
  6632                           tblptrl	equ	0xFF6
  6633                           tablat	equ	0xFF5
  6634                           prodh	equ	0xFF4
  6635                           prodl	equ	0xFF3
  6636                           intcon	equ	0xFF2
  6637                           intcon2	equ	0xFF1
  6638                           intcon3	equ	0xFF0
  6639                           postinc0	equ	0xFEE
  6640                           wreg	equ	0xFE8
  6641                           postdec1	equ	0xFE5
  6642                           fsr1l	equ	0xFE1
  6643                           indf2	equ	0xFDF
  6644                           fsr2h	equ	0xFDA
  6645                           fsr2l	equ	0xFD9
  6646                           status	equ	0xFD8
  6647                           
  6648 ;; *************** function _CANisTXwarningON *****************
  6649 ;; Defined at:
  6650 ;;		line 1119 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      unsigned char 
  6657 ;; Registers used:
  6658 ;;		wreg
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6664 ;;      Params:         0       0       0       0
  6665 ;;      Locals:         0       0       0       0
  6666 ;;      Temps:          0       0       0       0
  6667 ;;      Totals:         0       0       0       0
  6668 ;;Total ram usage:        0 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    4
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_main
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text12
  6679  00282A                     __ptext12:
  6680                           	opt stack 0
  6681  00282A                     _CANisTXwarningON:
  6682                           	opt stack 26
  6683                           
  6684                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;incstack = 0
  6688  00282A  A474               	btfss	3956,2,c	;volatile
  6689  00282C  D002               	goto	u4060
  6690  00282E  0E01               	movlw	1
  6691  002830  0012               	return	
  6692  002832                     u4060:
  6693  002832  0E00               	movlw	0
  6694  002834  0012               	return	
  6695  002836                     __end_of_CANisTXwarningON:
  6696                           	opt stack 0
  6697                           tblptru	equ	0xFF8
  6698                           tblptrh	equ	0xFF7
  6699                           tblptrl	equ	0xFF6
  6700                           tablat	equ	0xFF5
  6701                           prodh	equ	0xFF4
  6702                           prodl	equ	0xFF3
  6703                           intcon	equ	0xFF2
  6704                           intcon2	equ	0xFF1
  6705                           intcon3	equ	0xFF0
  6706                           postinc0	equ	0xFEE
  6707                           wreg	equ	0xFE8
  6708                           postdec1	equ	0xFE5
  6709                           fsr1l	equ	0xFE1
  6710                           indf2	equ	0xFDF
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _CANisRXwarningON *****************
  6716 ;; Defined at:
  6717 ;;		line 1127 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      unsigned char 
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6731 ;;      Params:         0       0       0       0
  6732 ;;      Locals:         0       0       0       0
  6733 ;;      Temps:          0       0       0       0
  6734 ;;      Totals:         0       0       0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    4
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_main
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text13
  6746  002836                     __ptext13:
  6747                           	opt stack 0
  6748  002836                     _CANisRXwarningON:
  6749                           	opt stack 26
  6750                           
  6751                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6752                           
  6753                           ;incstack = 0
  6754  002836  A274               	btfss	3956,1,c	;volatile
  6755  002838  D002               	goto	u4070
  6756  00283A  0E01               	movlw	1
  6757  00283C  0012               	return	
  6758  00283E                     u4070:
  6759  00283E  0E00               	movlw	0
  6760  002840  0012               	return	
  6761  002842                     __end_of_CANisRXwarningON:
  6762                           	opt stack 0
  6763                           tblptru	equ	0xFF8
  6764                           tblptrh	equ	0xFF7
  6765                           tblptrl	equ	0xFF6
  6766                           tablat	equ	0xFF5
  6767                           prodh	equ	0xFF4
  6768                           prodl	equ	0xFF3
  6769                           intcon	equ	0xFF2
  6770                           intcon2	equ	0xFF1
  6771                           intcon3	equ	0xFF0
  6772                           postinc0	equ	0xFEE
  6773                           wreg	equ	0xFE8
  6774                           postdec1	equ	0xFE5
  6775                           fsr1l	equ	0xFE1
  6776                           indf2	equ	0xFDF
  6777                           fsr2h	equ	0xFDA
  6778                           fsr2l	equ	0xFD9
  6779                           status	equ	0xFD8
  6780                           
  6781 ;; *************** function _ADC_Read *****************
  6782 ;; Defined at:
  6783 ;;		line 337 in file "ABS_Code.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;		None               void
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6797 ;;      Params:         0       0       0       0
  6798 ;;      Locals:         0       0       0       0
  6799 ;;      Temps:          0       0       0       0
  6800 ;;      Totals:         0       0       0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    5
  6804 ;; This function calls:
  6805 ;;		___awdiv
  6806 ;; This function is called by:
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text14
  6812  0026F4                     __ptext14:
  6813                           	opt stack 0
  6814  0026F4                     _ADC_Read:
  6815                           	opt stack 25
  6816                           
  6817                           ;ABS_Code.c: 338: ADCON0bits.GO = 1;
  6818                           
  6819                           ;incstack = 0
  6820  0026F4  82C2               	bsf	4034,1,c	;volatile
  6821  0026F6                     l737:
  6822  0026F6  B2C2               	btfsc	4034,1,c	;volatile
  6823  0026F8  D7FE               	goto	l737
  6824                           
  6825                           ;ABS_Code.c: 340: read = ADRESH;
  6826  0026FA  CFC4 F080          	movff	4036,_read	;volatile
  6827                           
  6828                           ;ABS_Code.c: 341: correction_factor = read - 127;
  6829  0026FE  0E81               	movlw	129
  6830  002700  0100               	movlb	0	; () banked
  6831  002702  2580               	addwf	_read& (0+255),w,b
  6832  002704  0100               	movlb	0	; () banked
  6833  002706  6F76               	movwf	_correction_factor& (0+255),b
  6834  002708  0100               	movlb	0	; () banked
  6835  00270A  6B77               	clrf	(_correction_factor+1)& (0+255),b
  6836  00270C  0EFF               	movlw	255
  6837  00270E  2377               	addwfc	(_correction_factor+1)& (0+255),f,b
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;ABS_Code.c: 342: home_position = correction_factor / 4 + 127;
  6841  002710  C076  F0B8         	movff	_correction_factor,___awdiv@dividend
  6842  002714  C077  F0B9         	movff	_correction_factor+1,___awdiv@dividend+1
  6843  002718  0E00               	movlw	0
  6844  00271A  0100               	movlb	0	; () banked
  6845  00271C  6FBB               	movwf	(___awdiv@divisor+1)& (0+255),b
  6846  00271E  0E04               	movlw	4
  6847  002720  6FBA               	movwf	___awdiv@divisor& (0+255),b
  6848  002722  EC4F  F012         	call	___awdiv	;wreg free
  6849  002726  0100               	movlb	0	; () banked
  6850  002728  51B8               	movf	?___awdiv& (0+255),w,b
  6851  00272A  0F7F               	addlw	127
  6852  00272C  0100               	movlb	0	; () banked
  6853  00272E  6F7F               	movwf	_home_position& (0+255),b
  6854                           
  6855                           ; BSR set to: 0
  6856  002730  0012               	return		;funcret
  6857  002732                     __end_of_ADC_Read:
  6858                           	opt stack 0
  6859                           tblptru	equ	0xFF8
  6860                           tblptrh	equ	0xFF7
  6861                           tblptrl	equ	0xFF6
  6862                           tablat	equ	0xFF5
  6863                           prodh	equ	0xFF4
  6864                           prodl	equ	0xFF3
  6865                           intcon	equ	0xFF2
  6866                           intcon2	equ	0xFF1
  6867                           intcon3	equ	0xFF0
  6868                           postinc0	equ	0xFEE
  6869                           wreg	equ	0xFE8
  6870                           postdec1	equ	0xFE5
  6871                           fsr1l	equ	0xFE1
  6872                           indf2	equ	0xFDF
  6873                           fsr2h	equ	0xFDA
  6874                           fsr2l	equ	0xFD9
  6875                           status	equ	0xFD8
  6876                           
  6877 ;; *************** function ___awdiv *****************
  6878 ;; Defined at:
  6879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  dividend        2   22[BANK0 ] int 
  6882 ;;  divisor         2   24[BANK0 ] int 
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  quotient        2   28[BANK0 ] int 
  6885 ;;  sign            1   27[BANK0 ] unsigned char 
  6886 ;;  counter         1   26[BANK0 ] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  2   22[BANK0 ] int 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6896 ;;      Params:         0       4       0       0
  6897 ;;      Locals:         0       4       0       0
  6898 ;;      Temps:          0       0       0       0
  6899 ;;      Totals:         0       8       0       0
  6900 ;;Total ram usage:        8 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:    4
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_main
  6907 ;;		_ADC_Read
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text15
  6912  00249E                     __ptext15:
  6913                           	opt stack 0
  6914  00249E                     ___awdiv:
  6915                           	opt stack 26
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;incstack = 0
  6919  00249E  0E00               	movlw	0
  6920  0024A0  0100               	movlb	0	; () banked
  6921  0024A2  6FBD               	movwf	___awdiv@sign& (0+255),b
  6922                           
  6923                           ; BSR set to: 0
  6924  0024A4  0100               	movlb	0	; () banked
  6925  0024A6  AFBB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6926  0024A8  D008               	goto	l3468
  6927                           
  6928                           ; BSR set to: 0
  6929  0024AA  0100               	movlb	0	; () banked
  6930  0024AC  6DBA               	negf	___awdiv@divisor& (0+255),b
  6931  0024AE  1FBB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6932  0024B0  B0D8               	btfsc	status,0,c
  6933  0024B2  2BBB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6934                           
  6935                           ; BSR set to: 0
  6936  0024B4  0E01               	movlw	1
  6937  0024B6  0100               	movlb	0	; () banked
  6938  0024B8  6FBD               	movwf	___awdiv@sign& (0+255),b
  6939  0024BA                     l3468:
  6940                           
  6941                           ; BSR set to: 0
  6942  0024BA  0100               	movlb	0	; () banked
  6943  0024BC  AFB9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6944  0024BE  D008               	goto	l3474
  6945                           
  6946                           ; BSR set to: 0
  6947  0024C0  0100               	movlb	0	; () banked
  6948  0024C2  6DB8               	negf	___awdiv@dividend& (0+255),b
  6949  0024C4  1FB9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6950  0024C6  B0D8               	btfsc	status,0,c
  6951  0024C8  2BB9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6952                           
  6953                           ; BSR set to: 0
  6954  0024CA  0E01               	movlw	1
  6955  0024CC  0100               	movlb	0	; () banked
  6956  0024CE  1BBD               	xorwf	___awdiv@sign& (0+255),f,b
  6957  0024D0                     l3474:
  6958                           
  6959                           ; BSR set to: 0
  6960  0024D0  0E00               	movlw	0
  6961  0024D2  0100               	movlb	0	; () banked
  6962  0024D4  6FBF               	movwf	(___awdiv@quotient+1)& (0+255),b
  6963  0024D6  0E00               	movlw	0
  6964  0024D8  6FBE               	movwf	___awdiv@quotient& (0+255),b
  6965                           
  6966                           ; BSR set to: 0
  6967  0024DA  0100               	movlb	0	; () banked
  6968  0024DC  51BA               	movf	___awdiv@divisor& (0+255),w,b
  6969  0024DE  0100               	movlb	0	; () banked
  6970  0024E0  11BB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6971  0024E2  B4D8               	btfsc	status,2,c
  6972  0024E4  D02C               	goto	l3496
  6973                           
  6974                           ; BSR set to: 0
  6975  0024E6  0E01               	movlw	1
  6976  0024E8  0100               	movlb	0	; () banked
  6977  0024EA  6FBC               	movwf	___awdiv@counter& (0+255),b
  6978  0024EC  D006               	goto	l3482
  6979  0024EE                     l3480:
  6980                           
  6981                           ; BSR set to: 0
  6982  0024EE  0100               	movlb	0	; () banked
  6983  0024F0  90D8               	bcf	status,0,c
  6984  0024F2  37BA               	rlcf	___awdiv@divisor& (0+255),f,b
  6985  0024F4  37BB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6986  0024F6  0100               	movlb	0	; () banked
  6987  0024F8  2BBC               	incf	___awdiv@counter& (0+255),f,b
  6988  0024FA                     l3482:
  6989                           
  6990                           ; BSR set to: 0
  6991  0024FA  0100               	movlb	0	; () banked
  6992  0024FC  AFBB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6993  0024FE  D7F7               	goto	l3480
  6994  002500                     l3484:
  6995                           
  6996                           ; BSR set to: 0
  6997  002500  0100               	movlb	0	; () banked
  6998  002502  90D8               	bcf	status,0,c
  6999  002504  37BE               	rlcf	___awdiv@quotient& (0+255),f,b
  7000  002506  37BF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7001                           
  7002                           ; BSR set to: 0
  7003  002508  0100               	movlb	0	; () banked
  7004  00250A  51BA               	movf	___awdiv@divisor& (0+255),w,b
  7005  00250C  0100               	movlb	0	; () banked
  7006  00250E  5DB8               	subwf	___awdiv@dividend& (0+255),w,b
  7007  002510  0100               	movlb	0	; () banked
  7008  002512  51BB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7009  002514  0100               	movlb	0	; () banked
  7010  002516  59B9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7011  002518  A0D8               	btfss	status,0,c
  7012  00251A  D00A               	goto	l3492
  7013                           
  7014                           ; BSR set to: 0
  7015  00251C  0100               	movlb	0	; () banked
  7016  00251E  51BA               	movf	___awdiv@divisor& (0+255),w,b
  7017  002520  0100               	movlb	0	; () banked
  7018  002522  5FB8               	subwf	___awdiv@dividend& (0+255),f,b
  7019  002524  0100               	movlb	0	; () banked
  7020  002526  51BB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7021  002528  0100               	movlb	0	; () banked
  7022  00252A  5BB9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7023                           
  7024                           ; BSR set to: 0
  7025  00252C  0100               	movlb	0	; () banked
  7026  00252E  81BE               	bsf	___awdiv@quotient& (0+255),0,b
  7027  002530                     l3492:
  7028                           
  7029                           ; BSR set to: 0
  7030  002530  0100               	movlb	0	; () banked
  7031  002532  90D8               	bcf	status,0,c
  7032  002534  33BB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7033  002536  33BA               	rrcf	___awdiv@divisor& (0+255),f,b
  7034                           
  7035                           ; BSR set to: 0
  7036  002538  0100               	movlb	0	; () banked
  7037  00253A  2FBC               	decfsz	___awdiv@counter& (0+255),f,b
  7038  00253C  D7E1               	goto	l3484
  7039  00253E                     l3496:
  7040                           
  7041                           ; BSR set to: 0
  7042  00253E  0100               	movlb	0	; () banked
  7043  002540  51BD               	movf	___awdiv@sign& (0+255),w,b
  7044  002542  0100               	movlb	0	; () banked
  7045  002544  B4D8               	btfsc	status,2,c
  7046  002546  D005               	goto	l3500
  7047                           
  7048                           ; BSR set to: 0
  7049  002548  0100               	movlb	0	; () banked
  7050  00254A  6DBE               	negf	___awdiv@quotient& (0+255),b
  7051  00254C  1FBF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7052  00254E  B0D8               	btfsc	status,0,c
  7053  002550  2BBF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7054  002552                     l3500:
  7055                           
  7056                           ; BSR set to: 0
  7057  002552  C0BE  F0B8         	movff	___awdiv@quotient,?___awdiv
  7058  002556  C0BF  F0B9         	movff	___awdiv@quotient+1,?___awdiv+1
  7059  00255A  0012               	return	
  7060  00255C                     __end_of___awdiv:
  7061                           	opt stack 0
  7062                           tblptru	equ	0xFF8
  7063                           tblptrh	equ	0xFF7
  7064                           tblptrl	equ	0xFF6
  7065                           tablat	equ	0xFF5
  7066                           prodh	equ	0xFF4
  7067                           prodl	equ	0xFF3
  7068                           intcon	equ	0xFF2
  7069                           intcon2	equ	0xFF1
  7070                           intcon3	equ	0xFF0
  7071                           postinc0	equ	0xFEE
  7072                           wreg	equ	0xFE8
  7073                           postdec1	equ	0xFE5
  7074                           fsr1l	equ	0xFE1
  7075                           indf2	equ	0xFDF
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function _ISR_Bassa *****************
  7081 ;; Defined at:
  7082 ;;		line 190 in file "ABS_Code.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;		None               void
  7089 ;; Registers used:
  7090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7096 ;;      Params:         0       0       0       0
  7097 ;;      Locals:         0       0       0       0
  7098 ;;      Temps:         17       0       0       0
  7099 ;;      Totals:        17       0       0       0
  7100 ;;Total ram usage:       17 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    3
  7103 ;; This function calls:
  7104 ;;		_CANisRxReady
  7105 ;;		_CANreceiveMessage
  7106 ;; This function is called by:
  7107 ;;		Interrupt level 1
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	intcodelo
  7112  000018                     __pintcodelo:
  7113                           	opt stack 0
  7114  000018                     _ISR_Bassa:
  7115                           	opt stack 24
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;incstack = 0
  7119  000018  803B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7120  00001A  CFD8 F00D          	movff	status,??_ISR_Bassa
  7121  00001E  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7122  000022  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7123  000026  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7124  00002A  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7125  00002E  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7126  000032  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7127  000036  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7128  00003A  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7129  00003E  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7130  000042  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7131  000046  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7132  00004A  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7133  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7134  000052  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7135  000056  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7136  00005A  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7137                           
  7138                           ;ABS_Code.c: 192: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7139  00005E  A0A4               	btfss	4004,0,c	;volatile
  7140  000060  B2A4               	btfsc	4004,1,c	;volatile
  7141  000062  D001               	goto	i1l3982
  7142  000064  D029               	goto	i1l684
  7143  000066                     i1l3982:
  7144                           
  7145                           ;ABS_Code.c: 193: if (CANisRxReady()) {
  7146  000066  EC01  F014         	call	_CANisRxReady	;wreg free
  7147  00006A  0900               	iorlw	0
  7148  00006C  B4D8               	btfsc	status,2,c
  7149  00006E  D022               	goto	i1l687
  7150                           
  7151                           ;ABS_Code.c: 194: CANreceiveMessage(&msg);
  7152  000070  0E82               	movlw	low _msg
  7153  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7154  000074  0E00               	movlw	high _msg
  7155  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7156  000078  ECD3  F009         	call	_CANreceiveMessage	;wreg free
  7157                           
  7158                           ;ABS_Code.c: 195: if (msg.RTR == 1) {
  7159  00007C  0100               	movlb	0	; () banked
  7160  00007E  0590               	decf	(_msg+14)& (0+255),w,b
  7161  000080  A4D8               	btfss	status,2,c
  7162  000082  D009               	goto	i1l3990
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;ABS_Code.c: 196: remote_frame_id = msg.identifier;
  7166  000084  C082  F068         	movff	_msg,_remote_frame_id
  7167  000088  C083  F069         	movff	_msg+1,_remote_frame_id+1
  7168  00008C  C084  F06A         	movff	_msg+2,_remote_frame_id+2
  7169  000090  C085  F06B         	movff	_msg+3,_remote_frame_id+3
  7170                           
  7171                           ;ABS_Code.c: 197: remote_frame = 1;
  7172  000094  8C39               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7173  000096                     i1l3990:
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;ABS_Code.c: 198: }
  7177                           ;ABS_Code.c: 199: if (msg.identifier == 0b00000000000000000000000000100) {
  7178  000096  0E04               	movlw	4
  7179  000098  0100               	movlb	0	; () banked
  7180  00009A  1982               	xorwf	_msg& (0+255),w,b
  7181  00009C  0100               	movlb	0	; () banked
  7182  00009E  1183               	iorwf	(_msg+1)& (0+255),w,b
  7183  0000A0  0100               	movlb	0	; () banked
  7184  0000A2  1184               	iorwf	(_msg+2)& (0+255),w,b
  7185  0000A4  0100               	movlb	0	; () banked
  7186  0000A6  1185               	iorwf	(_msg+3)& (0+255),w,b
  7187  0000A8  A4D8               	btfss	status,2,c
  7188  0000AA  D004               	goto	i1l687
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;ABS_Code.c: 200: brake_signal_CAN = msg.data[0];
  7192  0000AC  C086  F07D         	movff	_msg+4,_brake_signal_CAN
  7193                           
  7194                           ;ABS_Code.c: 201: Analogic_Mode = msg.data[1];
  7195  0000B0  C087  F07C         	movff	_msg+5,_Analogic_Mode
  7196  0000B4                     i1l687:
  7197                           
  7198                           ;ABS_Code.c: 202: }
  7199                           ;ABS_Code.c: 203: }
  7200                           ;ABS_Code.c: 204: PIR3bits.RXB0IF = 0;
  7201  0000B4  90A4               	bcf	4004,0,c	;volatile
  7202                           
  7203                           ;ABS_Code.c: 205: PIR3bits.RXB1IF = 0;
  7204  0000B6  92A4               	bcf	4004,1,c	;volatile
  7205  0000B8                     i1l684:
  7206                           
  7207                           ;ABS_Code.c: 206: }
  7208                           ;ABS_Code.c: 209: if(PIR1bits.TMR1IF == 1) {
  7209  0000B8  A09E               	btfss	3998,0,c	;volatile
  7210  0000BA  D002               	goto	i1l690
  7211                           
  7212                           ;ABS_Code.c: 210: TMR1_overflow = 1;
  7213  0000BC  8439               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c
  7214                           
  7215                           ;ABS_Code.c: 211: PIR1bits.TMR1IF = 0;
  7216  0000BE  909E               	bcf	3998,0,c	;volatile
  7217  0000C0                     i1l690:
  7218                           
  7219                           ;ABS_Code.c: 212: }
  7220                           ;ABS_Code.c: 215: if(PIR2bits.TMR3IF == 1){
  7221  0000C0  A2A1               	btfss	4001,1,c	;volatile
  7222  0000C2  D002               	goto	i1l692
  7223                           
  7224                           ;ABS_Code.c: 216: TMR3_overflow = 1;
  7225  0000C4  8639               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c
  7226                           
  7227                           ;ABS_Code.c: 217: PIR2bits.TMR3IF = 0;
  7228  0000C6  92A1               	bcf	4001,1,c	;volatile
  7229  0000C8                     i1l692:
  7230  0000C8  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7231  0000CC  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7232  0000D0  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7233  0000D4  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7234  0000D8  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7235  0000DC  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7236  0000E0  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7237  0000E4  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7238  0000E8  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7239  0000EC  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7240  0000F0  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7241  0000F4  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7242  0000F8  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7243  0000FC  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7244  000100  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7245  000104  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7246  000108  C00D  FFD8         	movff	??_ISR_Bassa,status
  7247  00010C  903B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7248  00010E  0010               	retfie	
  7249  000110                     __end_of_ISR_Bassa:
  7250                           	opt stack 0
  7251                           pclatu	equ	0xFFB
  7252                           pclath	equ	0xFFA
  7253                           tblptru	equ	0xFF8
  7254                           tblptrh	equ	0xFF7
  7255                           tblptrl	equ	0xFF6
  7256                           tablat	equ	0xFF5
  7257                           prodh	equ	0xFF4
  7258                           prodl	equ	0xFF3
  7259                           intcon	equ	0xFF2
  7260                           intcon2	equ	0xFF1
  7261                           intcon3	equ	0xFF0
  7262                           postinc0	equ	0xFEE
  7263                           fsr0h	equ	0xFEA
  7264                           fsr0l	equ	0xFE9
  7265                           wreg	equ	0xFE8
  7266                           postdec1	equ	0xFE5
  7267                           fsr1h	equ	0xFE2
  7268                           fsr1l	equ	0xFE1
  7269                           bsr	equ	0xFE0
  7270                           indf2	equ	0xFDF
  7271                           fsr2h	equ	0xFDA
  7272                           fsr2l	equ	0xFD9
  7273                           status	equ	0xFD8
  7274                           
  7275 ;; *************** function _CANreceiveMessage *****************
  7276 ;; Defined at:
  7277 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  msg             2    0[COMRAM] PTR struct .
  7280 ;;		 -> msg(15), 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  tamp            1   11[COMRAM] unsigned char 
  7283 ;;  error           1   10[COMRAM] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      unsigned char 
  7286 ;; Registers used:
  7287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7293 ;;      Params:         2       0       0       0
  7294 ;;      Locals:         2       0       0       0
  7295 ;;      Temps:          8       0       0       0
  7296 ;;      Totals:        12       0       0       0
  7297 ;;Total ram usage:       12 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:    2
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_ISR_Bassa
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text17
  7308  0013A6                     __ptext17:
  7309                           	opt stack 0
  7310  0013A6                     _CANreceiveMessage:
  7311                           	opt stack 24
  7312                           
  7313                           ;inc\CANlib.h: 530: BYTE tamp;
  7314                           ;inc\CANlib.h: 531: BYTE error = 0;
  7315                           
  7316                           ;incstack = 0
  7317  0013A6  0E00               	movlw	0
  7318  0013A8  6E0B               	movwf	CANreceiveMessage@error,c
  7319                           
  7320                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7321  0013AA  BE74               	btfsc	3956,7,c	;volatile
  7322                           
  7323                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7324  0013AC  800B               	bsf	CANreceiveMessage@error,0,c
  7325                           
  7326                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7327  0013AE  BC74               	btfsc	3956,6,c	;volatile
  7328                           
  7329                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7330  0013B0  820B               	bsf	CANreceiveMessage@error,1,c
  7331                           
  7332                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7333  0013B2  010F               	movlb	15	; () banked
  7334  0013B4  AF50               	btfss	80,7,b	;volatile
  7335  0013B6  D143               	goto	i1l430
  7336                           
  7337                           ; BSR set to: 15
  7338                           ;inc\CANlib.h: 541: {
  7339                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7340  0013B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7341  0013BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7342  0013C0  6ADE               	clrf	postinc2,c
  7343  0013C2  6ADE               	clrf	postinc2,c
  7344  0013C4  6ADE               	clrf	postinc2,c
  7345  0013C6  6ADD               	clrf	postdec2,c
  7346                           
  7347                           ; BSR set to: 15
  7348                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7349  0013C8  EE20 F004          	lfsr	2,4
  7350  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7351  0013CE  26D9               	addwf	fsr2l,f,c
  7352  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7353  0013D2  22DA               	addwfc	fsr2h,f,c
  7354  0013D4  CF56 FFDF          	movff	3926,indf2	;volatile
  7355                           
  7356                           ; BSR set to: 15
  7357                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7358  0013D8  EE20 F005          	lfsr	2,5
  7359  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7360  0013DE  26D9               	addwf	fsr2l,f,c
  7361  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7362  0013E2  22DA               	addwfc	fsr2h,f,c
  7363  0013E4  CF57 FFDF          	movff	3927,indf2	;volatile
  7364                           
  7365                           ; BSR set to: 15
  7366                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7367  0013E8  EE20 F006          	lfsr	2,6
  7368  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7369  0013EE  26D9               	addwf	fsr2l,f,c
  7370  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7371  0013F2  22DA               	addwfc	fsr2h,f,c
  7372  0013F4  CF58 FFDF          	movff	3928,indf2	;volatile
  7373                           
  7374                           ; BSR set to: 15
  7375                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7376  0013F8  EE20 F007          	lfsr	2,7
  7377  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7378  0013FE  26D9               	addwf	fsr2l,f,c
  7379  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7380  001402  22DA               	addwfc	fsr2h,f,c
  7381  001404  CF59 FFDF          	movff	3929,indf2	;volatile
  7382                           
  7383                           ; BSR set to: 15
  7384                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7385  001408  EE20 F008          	lfsr	2,8
  7386  00140C  5001               	movf	CANreceiveMessage@msg,w,c
  7387  00140E  26D9               	addwf	fsr2l,f,c
  7388  001410  5002               	movf	CANreceiveMessage@msg+1,w,c
  7389  001412  22DA               	addwfc	fsr2h,f,c
  7390  001414  CF5A FFDF          	movff	3930,indf2	;volatile
  7391                           
  7392                           ; BSR set to: 15
  7393                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7394  001418  EE20 F009          	lfsr	2,9
  7395  00141C  5001               	movf	CANreceiveMessage@msg,w,c
  7396  00141E  26D9               	addwf	fsr2l,f,c
  7397  001420  5002               	movf	CANreceiveMessage@msg+1,w,c
  7398  001422  22DA               	addwfc	fsr2h,f,c
  7399  001424  CF5B FFDF          	movff	3931,indf2	;volatile
  7400                           
  7401                           ; BSR set to: 15
  7402                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7403  001428  EE20 F00A          	lfsr	2,10
  7404  00142C  5001               	movf	CANreceiveMessage@msg,w,c
  7405  00142E  26D9               	addwf	fsr2l,f,c
  7406  001430  5002               	movf	CANreceiveMessage@msg+1,w,c
  7407  001432  22DA               	addwfc	fsr2h,f,c
  7408  001434  CF5C FFDF          	movff	3932,indf2	;volatile
  7409                           
  7410                           ; BSR set to: 15
  7411                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7412  001438  EE20 F00B          	lfsr	2,11
  7413  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7414  00143E  26D9               	addwf	fsr2l,f,c
  7415  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7416  001442  22DA               	addwfc	fsr2h,f,c
  7417  001444  CF5D FFDF          	movff	3933,indf2	;volatile
  7418                           
  7419                           ; BSR set to: 15
  7420                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7421  001448  EE20 F00E          	lfsr	2,14
  7422  00144C  5001               	movf	CANreceiveMessage@msg,w,c
  7423  00144E  26D9               	addwf	fsr2l,f,c
  7424  001450  5002               	movf	CANreceiveMessage@msg+1,w,c
  7425  001452  22DA               	addwfc	fsr2h,f,c
  7426  001454  010F               	movlb	15	; () banked
  7427  001456  AD55               	btfss	85,6,b	;volatile
  7428  001458  D002               	goto	i1u385_20
  7429  00145A  0E01               	movlw	1
  7430  00145C  D001               	goto	i1u385_26
  7431  00145E                     i1u385_20:
  7432  00145E  0E00               	movlw	0
  7433  001460                     i1u385_26:
  7434  001460  6EDF               	movwf	indf2,c
  7435                           
  7436                           ; BSR set to: 15
  7437                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7438  001462  EE20 F00D          	lfsr	2,13
  7439  001466  5001               	movf	CANreceiveMessage@msg,w,c
  7440  001468  26D9               	addwf	fsr2l,f,c
  7441  00146A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7442  00146C  22DA               	addwfc	fsr2h,f,c
  7443  00146E  010F               	movlb	15	; () banked
  7444  001470  5155               	movf	85,w,b	;volatile
  7445  001472  0B0F               	andlw	15
  7446  001474  6EDF               	movwf	indf2,c
  7447                           
  7448                           ; BSR set to: 15
  7449                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7450  001476  EE20 F00C          	lfsr	2,12
  7451  00147A  5001               	movf	CANreceiveMessage@msg,w,c
  7452  00147C  26D9               	addwf	fsr2l,f,c
  7453  00147E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7454  001480  22DA               	addwfc	fsr2h,f,c
  7455  001482  010F               	movlb	15	; () banked
  7456  001484  A752               	btfss	82,3,b	;volatile
  7457  001486  D002               	goto	i1u386_20
  7458  001488  0E01               	movlw	1
  7459  00148A  D001               	goto	i1u386_26
  7460  00148C                     i1u386_20:
  7461  00148C  0E00               	movlw	0
  7462  00148E                     i1u386_26:
  7463  00148E  6EDF               	movwf	indf2,c
  7464                           
  7465                           ; BSR set to: 15
  7466                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7467  001490  010F               	movlb	15	; () banked
  7468  001492  B752               	btfsc	82,3,b	;volatile
  7469  001494  D044               	goto	i1l3548
  7470                           
  7471                           ; BSR set to: 15
  7472                           ;inc\CANlib.h: 559: {
  7473                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7474  001496  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7475  00149A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7476  00149C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7477  00149E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7478  0014A0  0E03               	movlw	3
  7479  0014A2                     i1u388_25:
  7480  0014A2  90D8               	bcf	status,0,c
  7481  0014A4  3603               	rlcf	??_CANreceiveMessage,f,c
  7482  0014A6  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7483  0014A8  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7484  0014AA  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7485  0014AC  2EE8               	decfsz	wreg,f,c
  7486  0014AE  D7F9               	goto	i1u388_25
  7487  0014B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7488  0014B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7489  0014B8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7490  0014BC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7491  0014C0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7492  0014C4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7493                           
  7494                           ; BSR set to: 15
  7495                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7496  0014C8  010F               	movlb	15	; () banked
  7497  0014CA  3952               	swapf	82,w,b	;volatile
  7498  0014CC  42E8               	rrncf	wreg,f,c
  7499  0014CE  0B07               	andlw	7
  7500  0014D0  0B07               	andlw	7
  7501  0014D2  6E0C               	movwf	CANreceiveMessage@tamp,c
  7502                           
  7503                           ; BSR set to: 15
  7504                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7505  0014D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7506  0014D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7507  0014DC  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7508  0014E0  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7509  0014E4  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7510  0014E8  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7511  0014EC  500C               	movf	CANreceiveMessage@tamp,w,c
  7512  0014EE  2403               	addwf	??_CANreceiveMessage,w,c
  7513  0014F0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7514  0014F2  0E00               	movlw	0
  7515  0014F4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7516  0014F6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7517  0014F8  0E00               	movlw	0
  7518  0014FA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7519  0014FC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7520  0014FE  0E00               	movlw	0
  7521  001500  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7522  001502  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7523  001504  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7524  001508  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7525  00150C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7526  001510  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7527  001514  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7528  001518  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7529                           
  7530                           ;inc\CANlib.h: 563: }
  7531  00151C  D08D               	goto	i1l3574
  7532  00151E                     i1l3548:
  7533                           
  7534                           ; BSR set to: 15
  7535                           ;inc\CANlib.h: 564: else
  7536                           ;inc\CANlib.h: 565: {
  7537                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7538  00151E  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7539  001522  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7540  001524  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7541  001526  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7542  001528  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7543  00152C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7544  001530  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7545  001534  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7546  001538  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7547  00153C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7548                           
  7549                           ; BSR set to: 15
  7550                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7551  001540  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7552  001544  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7553  001546  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7554  001548  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7555  00154A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7556  00154E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7557  001552  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7558  001556  6A03               	clrf	??_CANreceiveMessage,c
  7559  001558  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7560  00155C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7561  001560  5003               	movf	??_CANreceiveMessage,w,c
  7562  001562  26DE               	addwf	postinc2,f,c
  7563  001564  5004               	movf	??_CANreceiveMessage+1,w,c
  7564  001566  22DE               	addwfc	postinc2,f,c
  7565  001568  5005               	movf	??_CANreceiveMessage+2,w,c
  7566  00156A  22DE               	addwfc	postinc2,f,c
  7567  00156C  5006               	movf	??_CANreceiveMessage+3,w,c
  7568  00156E  22DE               	addwfc	postinc2,f,c
  7569                           
  7570                           ; BSR set to: 15
  7571                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7572  001570  010F               	movlb	15	; () banked
  7573  001572  A152               	btfss	82,0,b	;volatile
  7574  001574  D00C               	goto	i1l3556
  7575                           
  7576                           ; BSR set to: 15
  7577                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7578  001576  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7579  00157A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7580  00157E  0E00               	movlw	0
  7581  001580  12DE               	iorwf	postinc2,f,c
  7582  001582  0E00               	movlw	0
  7583  001584  12DE               	iorwf	postinc2,f,c
  7584  001586  0E01               	movlw	1
  7585  001588  12DE               	iorwf	postinc2,f,c
  7586  00158A  0E00               	movlw	0
  7587  00158C  12DE               	iorwf	postinc2,f,c
  7588  00158E                     i1l3556:
  7589                           
  7590                           ; BSR set to: 15
  7591                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7592  00158E  010F               	movlb	15	; () banked
  7593  001590  A352               	btfss	82,1,b	;volatile
  7594  001592  D00C               	goto	i1l3560
  7595                           
  7596                           ; BSR set to: 15
  7597                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7598  001594  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7599  001598  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7600  00159C  0E00               	movlw	0
  7601  00159E  12DE               	iorwf	postinc2,f,c
  7602  0015A0  0E00               	movlw	0
  7603  0015A2  12DE               	iorwf	postinc2,f,c
  7604  0015A4  0E02               	movlw	2
  7605  0015A6  12DE               	iorwf	postinc2,f,c
  7606  0015A8  0E00               	movlw	0
  7607  0015AA  12DE               	iorwf	postinc2,f,c
  7608  0015AC                     i1l3560:
  7609                           
  7610                           ; BSR set to: 15
  7611                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7612  0015AC  010F               	movlb	15	; () banked
  7613  0015AE  AB52               	btfss	82,5,b	;volatile
  7614  0015B0  D00C               	goto	i1l3564
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7618  0015B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7619  0015B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7620  0015BA  0E00               	movlw	0
  7621  0015BC  12DE               	iorwf	postinc2,f,c
  7622  0015BE  0E00               	movlw	0
  7623  0015C0  12DE               	iorwf	postinc2,f,c
  7624  0015C2  0E04               	movlw	4
  7625  0015C4  12DE               	iorwf	postinc2,f,c
  7626  0015C6  0E00               	movlw	0
  7627  0015C8  12DE               	iorwf	postinc2,f,c
  7628  0015CA                     i1l3564:
  7629                           
  7630                           ; BSR set to: 15
  7631                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7632  0015CA  010F               	movlb	15	; () banked
  7633  0015CC  AD52               	btfss	82,6,b	;volatile
  7634  0015CE  D00C               	goto	i1l3568
  7635                           
  7636                           ; BSR set to: 15
  7637                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7638  0015D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7639  0015D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7640  0015D8  0E00               	movlw	0
  7641  0015DA  12DE               	iorwf	postinc2,f,c
  7642  0015DC  0E00               	movlw	0
  7643  0015DE  12DE               	iorwf	postinc2,f,c
  7644  0015E0  0E08               	movlw	8
  7645  0015E2  12DE               	iorwf	postinc2,f,c
  7646  0015E4  0E00               	movlw	0
  7647  0015E6  12DE               	iorwf	postinc2,f,c
  7648  0015E8                     i1l3568:
  7649                           
  7650                           ; BSR set to: 15
  7651                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7652  0015E8  010F               	movlb	15	; () banked
  7653  0015EA  AF52               	btfss	82,7,b	;volatile
  7654  0015EC  D00C               	goto	i1l3572
  7655                           
  7656                           ; BSR set to: 15
  7657                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7658  0015EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7659  0015F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7660  0015F6  0E00               	movlw	0
  7661  0015F8  12DE               	iorwf	postinc2,f,c
  7662  0015FA  0E00               	movlw	0
  7663  0015FC  12DE               	iorwf	postinc2,f,c
  7664  0015FE  0E10               	movlw	16
  7665  001600  12DE               	iorwf	postinc2,f,c
  7666  001602  0E00               	movlw	0
  7667  001604  12DE               	iorwf	postinc2,f,c
  7668  001606                     i1l3572:
  7669                           
  7670                           ; BSR set to: 15
  7671                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7672  001606  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7673  00160A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7674  00160C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7675  00160E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7676  001610  0E15               	movlw	21
  7677  001612                     i1u394_25:
  7678  001612  90D8               	bcf	status,0,c
  7679  001614  3603               	rlcf	??_CANreceiveMessage,f,c
  7680  001616  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7681  001618  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7682  00161A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7683  00161C  2EE8               	decfsz	wreg,f,c
  7684  00161E  D7F9               	goto	i1u394_25
  7685  001620  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7686  001624  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7687  001628  5003               	movf	??_CANreceiveMessage,w,c
  7688  00162A  12DE               	iorwf	postinc2,f,c
  7689  00162C  5004               	movf	??_CANreceiveMessage+1,w,c
  7690  00162E  12DE               	iorwf	postinc2,f,c
  7691  001630  5005               	movf	??_CANreceiveMessage+2,w,c
  7692  001632  12DE               	iorwf	postinc2,f,c
  7693  001634  5006               	movf	??_CANreceiveMessage+3,w,c
  7694  001636  12DE               	iorwf	postinc2,f,c
  7695  001638                     i1l3574:
  7696                           
  7697                           ; BSR set to: 15
  7698                           ;inc\CANlib.h: 581: }
  7699                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7700  001638  010F               	movlb	15	; () banked
  7701  00163A  9F50               	bcf	80,7,b	;volatile
  7702                           
  7703                           ; BSR set to: 15
  7704                           ;inc\CANlib.h: 584: return (error);
  7705                           ;	Return value of _CANreceiveMessage is never used
  7706  00163C  0012               	return	
  7707  00163E                     i1l430:
  7708                           
  7709                           ; BSR set to: 15
  7710                           ;inc\CANlib.h: 585: }
  7711                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7712  00163E  AE60               	btfss	3936,7,c	;volatile
  7713  001640  0012               	return	
  7714                           
  7715                           ; BSR set to: 15
  7716                           ;inc\CANlib.h: 588: {
  7717                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7718  001642  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7719  001646  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7720  00164A  6ADE               	clrf	postinc2,c
  7721  00164C  6ADE               	clrf	postinc2,c
  7722  00164E  6ADE               	clrf	postinc2,c
  7723  001650  6ADD               	clrf	postdec2,c
  7724                           
  7725                           ; BSR set to: 15
  7726                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7727  001652  EE20 F004          	lfsr	2,4
  7728  001656  5001               	movf	CANreceiveMessage@msg,w,c
  7729  001658  26D9               	addwf	fsr2l,f,c
  7730  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7731  00165C  22DA               	addwfc	fsr2h,f,c
  7732  00165E  CF66 FFDF          	movff	3942,indf2	;volatile
  7733                           
  7734                           ; BSR set to: 15
  7735                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7736  001662  EE20 F005          	lfsr	2,5
  7737  001666  5001               	movf	CANreceiveMessage@msg,w,c
  7738  001668  26D9               	addwf	fsr2l,f,c
  7739  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7740  00166C  22DA               	addwfc	fsr2h,f,c
  7741  00166E  CF67 FFDF          	movff	3943,indf2	;volatile
  7742                           
  7743                           ; BSR set to: 15
  7744                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7745  001672  EE20 F006          	lfsr	2,6
  7746  001676  5001               	movf	CANreceiveMessage@msg,w,c
  7747  001678  26D9               	addwf	fsr2l,f,c
  7748  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7749  00167C  22DA               	addwfc	fsr2h,f,c
  7750  00167E  CF68 FFDF          	movff	3944,indf2	;volatile
  7751                           
  7752                           ; BSR set to: 15
  7753                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7754  001682  EE20 F007          	lfsr	2,7
  7755  001686  5001               	movf	CANreceiveMessage@msg,w,c
  7756  001688  26D9               	addwf	fsr2l,f,c
  7757  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7758  00168C  22DA               	addwfc	fsr2h,f,c
  7759  00168E  CF69 FFDF          	movff	3945,indf2	;volatile
  7760                           
  7761                           ; BSR set to: 15
  7762                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7763  001692  EE20 F008          	lfsr	2,8
  7764  001696  5001               	movf	CANreceiveMessage@msg,w,c
  7765  001698  26D9               	addwf	fsr2l,f,c
  7766  00169A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7767  00169C  22DA               	addwfc	fsr2h,f,c
  7768  00169E  CF6A FFDF          	movff	3946,indf2	;volatile
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7772  0016A2  EE20 F009          	lfsr	2,9
  7773  0016A6  5001               	movf	CANreceiveMessage@msg,w,c
  7774  0016A8  26D9               	addwf	fsr2l,f,c
  7775  0016AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7776  0016AC  22DA               	addwfc	fsr2h,f,c
  7777  0016AE  CF6B FFDF          	movff	3947,indf2	;volatile
  7778                           
  7779                           ; BSR set to: 15
  7780                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7781  0016B2  EE20 F00A          	lfsr	2,10
  7782  0016B6  5001               	movf	CANreceiveMessage@msg,w,c
  7783  0016B8  26D9               	addwf	fsr2l,f,c
  7784  0016BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7785  0016BC  22DA               	addwfc	fsr2h,f,c
  7786  0016BE  CF6C FFDF          	movff	3948,indf2	;volatile
  7787                           
  7788                           ; BSR set to: 15
  7789                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7790  0016C2  EE20 F00B          	lfsr	2,11
  7791  0016C6  5001               	movf	CANreceiveMessage@msg,w,c
  7792  0016C8  26D9               	addwf	fsr2l,f,c
  7793  0016CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7794  0016CC  22DA               	addwfc	fsr2h,f,c
  7795  0016CE  CF6D FFDF          	movff	3949,indf2	;volatile
  7796                           
  7797                           ; BSR set to: 15
  7798                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7799  0016D2  EE20 F00E          	lfsr	2,14
  7800  0016D6  5001               	movf	CANreceiveMessage@msg,w,c
  7801  0016D8  26D9               	addwf	fsr2l,f,c
  7802  0016DA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7803  0016DC  22DA               	addwfc	fsr2h,f,c
  7804  0016DE  AC65               	btfss	3941,6,c	;volatile
  7805  0016E0  D002               	goto	i1u396_20
  7806  0016E2  0E01               	movlw	1
  7807  0016E4  D001               	goto	i1u396_26
  7808  0016E6                     i1u396_20:
  7809  0016E6  0E00               	movlw	0
  7810  0016E8                     i1u396_26:
  7811  0016E8  6EDF               	movwf	indf2,c
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7815  0016EA  EE20 F00D          	lfsr	2,13
  7816  0016EE  5001               	movf	CANreceiveMessage@msg,w,c
  7817  0016F0  26D9               	addwf	fsr2l,f,c
  7818  0016F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7819  0016F4  22DA               	addwfc	fsr2h,f,c
  7820  0016F6  5065               	movf	3941,w,c	;volatile
  7821  0016F8  0B0F               	andlw	15
  7822  0016FA  6EDF               	movwf	indf2,c
  7823                           
  7824                           ; BSR set to: 15
  7825                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7826  0016FC  EE20 F00C          	lfsr	2,12
  7827  001700  5001               	movf	CANreceiveMessage@msg,w,c
  7828  001702  26D9               	addwf	fsr2l,f,c
  7829  001704  5002               	movf	CANreceiveMessage@msg+1,w,c
  7830  001706  22DA               	addwfc	fsr2h,f,c
  7831  001708  A662               	btfss	3938,3,c	;volatile
  7832  00170A  D002               	goto	i1u397_20
  7833  00170C  0E01               	movlw	1
  7834  00170E  D001               	goto	i1u397_26
  7835  001710                     i1u397_20:
  7836  001710  0E00               	movlw	0
  7837  001712                     i1u397_26:
  7838  001712  6EDF               	movwf	indf2,c
  7839                           
  7840                           ; BSR set to: 15
  7841                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7842  001714  B662               	btfsc	3938,3,c	;volatile
  7843  001716  D043               	goto	i1l3610
  7844                           
  7845                           ; BSR set to: 15
  7846                           ;inc\CANlib.h: 606: {
  7847                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7848  001718  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7849  00171C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7850  00171E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7851  001720  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7852  001722  0E03               	movlw	3
  7853  001724                     i1u399_25:
  7854  001724  90D8               	bcf	status,0,c
  7855  001726  3603               	rlcf	??_CANreceiveMessage,f,c
  7856  001728  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7857  00172A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7858  00172C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7859  00172E  2EE8               	decfsz	wreg,f,c
  7860  001730  D7F9               	goto	i1u399_25
  7861  001732  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7862  001736  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7863  00173A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7864  00173E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7865  001742  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7866  001746  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7867                           
  7868                           ; BSR set to: 15
  7869                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7870  00174A  3862               	swapf	3938,w,c	;volatile
  7871  00174C  42E8               	rrncf	wreg,f,c
  7872  00174E  0B07               	andlw	7
  7873  001750  0B07               	andlw	7
  7874  001752  6E0C               	movwf	CANreceiveMessage@tamp,c
  7875                           
  7876                           ; BSR set to: 15
  7877                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7878  001754  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7879  001758  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7880  00175C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7881  001760  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7882  001764  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7883  001768  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7884  00176C  500C               	movf	CANreceiveMessage@tamp,w,c
  7885  00176E  2403               	addwf	??_CANreceiveMessage,w,c
  7886  001770  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7887  001772  0E00               	movlw	0
  7888  001774  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7889  001776  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7890  001778  0E00               	movlw	0
  7891  00177A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7892  00177C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7893  00177E  0E00               	movlw	0
  7894  001780  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7895  001782  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7896  001784  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7897  001788  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7898  00178C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7899  001790  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7900  001794  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7901  001798  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7902                           
  7903                           ;inc\CANlib.h: 610: }
  7904  00179C  D088               	goto	i1l3636
  7905  00179E                     i1l3610:
  7906                           
  7907                           ; BSR set to: 15
  7908                           ;inc\CANlib.h: 611: else
  7909                           ;inc\CANlib.h: 612: {
  7910                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7911  00179E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7912  0017A2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7913  0017A4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7914  0017A6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7915  0017A8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7916  0017AC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7917  0017B0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7918  0017B4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7919  0017B8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7920  0017BC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7921                           
  7922                           ; BSR set to: 15
  7923                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7924  0017C0  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7925  0017C4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7926  0017C6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7927  0017C8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7928  0017CA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7929  0017CE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7930  0017D2  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7931  0017D6  6A03               	clrf	??_CANreceiveMessage,c
  7932  0017D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7933  0017DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7934  0017E0  5003               	movf	??_CANreceiveMessage,w,c
  7935  0017E2  26DE               	addwf	postinc2,f,c
  7936  0017E4  5004               	movf	??_CANreceiveMessage+1,w,c
  7937  0017E6  22DE               	addwfc	postinc2,f,c
  7938  0017E8  5005               	movf	??_CANreceiveMessage+2,w,c
  7939  0017EA  22DE               	addwfc	postinc2,f,c
  7940  0017EC  5006               	movf	??_CANreceiveMessage+3,w,c
  7941  0017EE  22DE               	addwfc	postinc2,f,c
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7945  0017F0  A062               	btfss	3938,0,c	;volatile
  7946  0017F2  D00C               	goto	i1l3618
  7947                           
  7948                           ; BSR set to: 15
  7949                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7950  0017F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7951  0017F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7952  0017FC  0E00               	movlw	0
  7953  0017FE  12DE               	iorwf	postinc2,f,c
  7954  001800  0E00               	movlw	0
  7955  001802  12DE               	iorwf	postinc2,f,c
  7956  001804  0E01               	movlw	1
  7957  001806  12DE               	iorwf	postinc2,f,c
  7958  001808  0E00               	movlw	0
  7959  00180A  12DE               	iorwf	postinc2,f,c
  7960  00180C                     i1l3618:
  7961                           
  7962                           ; BSR set to: 15
  7963                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7964  00180C  A262               	btfss	3938,1,c	;volatile
  7965  00180E  D00C               	goto	i1l3622
  7966                           
  7967                           ; BSR set to: 15
  7968                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7969  001810  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7970  001814  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7971  001818  0E00               	movlw	0
  7972  00181A  12DE               	iorwf	postinc2,f,c
  7973  00181C  0E00               	movlw	0
  7974  00181E  12DE               	iorwf	postinc2,f,c
  7975  001820  0E02               	movlw	2
  7976  001822  12DE               	iorwf	postinc2,f,c
  7977  001824  0E00               	movlw	0
  7978  001826  12DE               	iorwf	postinc2,f,c
  7979  001828                     i1l3622:
  7980                           
  7981                           ; BSR set to: 15
  7982                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7983  001828  AA62               	btfss	3938,5,c	;volatile
  7984  00182A  D00C               	goto	i1l3626
  7985                           
  7986                           ; BSR set to: 15
  7987                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  7988  00182C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7989  001830  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7990  001834  0E00               	movlw	0
  7991  001836  12DE               	iorwf	postinc2,f,c
  7992  001838  0E00               	movlw	0
  7993  00183A  12DE               	iorwf	postinc2,f,c
  7994  00183C  0E04               	movlw	4
  7995  00183E  12DE               	iorwf	postinc2,f,c
  7996  001840  0E00               	movlw	0
  7997  001842  12DE               	iorwf	postinc2,f,c
  7998  001844                     i1l3626:
  7999                           
  8000                           ; BSR set to: 15
  8001                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8002  001844  AC62               	btfss	3938,6,c	;volatile
  8003  001846  D00C               	goto	i1l3630
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8007  001848  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8008  00184C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8009  001850  0E00               	movlw	0
  8010  001852  12DE               	iorwf	postinc2,f,c
  8011  001854  0E00               	movlw	0
  8012  001856  12DE               	iorwf	postinc2,f,c
  8013  001858  0E08               	movlw	8
  8014  00185A  12DE               	iorwf	postinc2,f,c
  8015  00185C  0E00               	movlw	0
  8016  00185E  12DE               	iorwf	postinc2,f,c
  8017  001860                     i1l3630:
  8018                           
  8019                           ; BSR set to: 15
  8020                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8021  001860  AE62               	btfss	3938,7,c	;volatile
  8022  001862  D00C               	goto	i1l3634
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8026  001864  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8027  001868  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8028  00186C  0E00               	movlw	0
  8029  00186E  12DE               	iorwf	postinc2,f,c
  8030  001870  0E00               	movlw	0
  8031  001872  12DE               	iorwf	postinc2,f,c
  8032  001874  0E10               	movlw	16
  8033  001876  12DE               	iorwf	postinc2,f,c
  8034  001878  0E00               	movlw	0
  8035  00187A  12DE               	iorwf	postinc2,f,c
  8036  00187C                     i1l3634:
  8037                           
  8038                           ; BSR set to: 15
  8039                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8040  00187C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8041  001880  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8042  001882  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8043  001884  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8044  001886  0E15               	movlw	21
  8045  001888                     i1u405_25:
  8046  001888  90D8               	bcf	status,0,c
  8047  00188A  3603               	rlcf	??_CANreceiveMessage,f,c
  8048  00188C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8049  00188E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8050  001890  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8051  001892  2EE8               	decfsz	wreg,f,c
  8052  001894  D7F9               	goto	i1u405_25
  8053  001896  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8054  00189A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8055  00189E  5003               	movf	??_CANreceiveMessage,w,c
  8056  0018A0  12DE               	iorwf	postinc2,f,c
  8057  0018A2  5004               	movf	??_CANreceiveMessage+1,w,c
  8058  0018A4  12DE               	iorwf	postinc2,f,c
  8059  0018A6  5005               	movf	??_CANreceiveMessage+2,w,c
  8060  0018A8  12DE               	iorwf	postinc2,f,c
  8061  0018AA  5006               	movf	??_CANreceiveMessage+3,w,c
  8062  0018AC  12DE               	iorwf	postinc2,f,c
  8063  0018AE                     i1l3636:
  8064                           
  8065                           ; BSR set to: 15
  8066                           ;inc\CANlib.h: 629: }
  8067                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8068  0018AE  9E60               	bcf	3936,7,c	;volatile
  8069                           
  8070                           ; BSR set to: 15
  8071                           ;inc\CANlib.h: 632: return (error);
  8072                           ;	Return value of _CANreceiveMessage is never used
  8073  0018B0  0012               	return	
  8074  0018B2                     __end_of_CANreceiveMessage:
  8075                           	opt stack 0
  8076                           pclatu	equ	0xFFB
  8077                           pclath	equ	0xFFA
  8078                           tblptru	equ	0xFF8
  8079                           tblptrh	equ	0xFF7
  8080                           tblptrl	equ	0xFF6
  8081                           tablat	equ	0xFF5
  8082                           prodh	equ	0xFF4
  8083                           prodl	equ	0xFF3
  8084                           intcon	equ	0xFF2
  8085                           intcon2	equ	0xFF1
  8086                           intcon3	equ	0xFF0
  8087                           postinc0	equ	0xFEE
  8088                           fsr0h	equ	0xFEA
  8089                           fsr0l	equ	0xFE9
  8090                           wreg	equ	0xFE8
  8091                           postdec1	equ	0xFE5
  8092                           fsr1h	equ	0xFE2
  8093                           fsr1l	equ	0xFE1
  8094                           bsr	equ	0xFE0
  8095                           indf2	equ	0xFDF
  8096                           postinc2	equ	0xFDE
  8097                           postdec2	equ	0xFDD
  8098                           fsr2h	equ	0xFDA
  8099                           fsr2l	equ	0xFD9
  8100                           status	equ	0xFD8
  8101                           
  8102 ;; *************** function _CANisRxReady *****************
  8103 ;; Defined at:
  8104 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;		None
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;		None
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  1    wreg      unsigned char 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8118 ;;      Params:         0       0       0       0
  8119 ;;      Locals:         1       0       0       0
  8120 ;;      Temps:          0       0       0       0
  8121 ;;      Totals:         1       0       0       0
  8122 ;;Total ram usage:        1 bytes
  8123 ;; Hardware stack levels used:    1
  8124 ;; Hardware stack levels required when called:    2
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_ISR_Bassa
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text18
  8133  002802                     __ptext18:
  8134                           	opt stack 0
  8135  002802                     _CANisRxReady:
  8136                           	opt stack 24
  8137                           
  8138                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8139                           
  8140                           ; BSR set to: 15
  8141                           ;incstack = 0
  8142  002802  0E01               	movlw	1
  8143  002804  6E01               	movwf	_CANisRxReady$3284,c
  8144  002806  BE60               	btfsc	3936,7,c	;volatile
  8145  002808  D005               	goto	i1l581
  8146  00280A  010F               	movlb	15	; () banked
  8147  00280C  BF50               	btfsc	80,7,b	;volatile
  8148  00280E  D002               	goto	i1l581
  8149                           
  8150                           ; BSR set to: 15
  8151  002810  0E00               	movlw	0
  8152  002812  6E01               	movwf	_CANisRxReady$3284,c
  8153  002814                     i1l581:
  8154  002814  5001               	movf	_CANisRxReady$3284,w,c
  8155  002816  0012               	return	
  8156  002818                     __end_of_CANisRxReady:
  8157                           	opt stack 0
  8158                           pclatu	equ	0xFFB
  8159                           pclath	equ	0xFFA
  8160                           tblptru	equ	0xFF8
  8161                           tblptrh	equ	0xFF7
  8162                           tblptrl	equ	0xFF6
  8163                           tablat	equ	0xFF5
  8164                           prodh	equ	0xFF4
  8165                           prodl	equ	0xFF3
  8166                           intcon	equ	0xFF2
  8167                           intcon2	equ	0xFF1
  8168                           intcon3	equ	0xFF0
  8169                           postinc0	equ	0xFEE
  8170                           fsr0h	equ	0xFEA
  8171                           fsr0l	equ	0xFE9
  8172                           wreg	equ	0xFE8
  8173                           postdec1	equ	0xFE5
  8174                           fsr1h	equ	0xFE2
  8175                           fsr1l	equ	0xFE1
  8176                           bsr	equ	0xFE0
  8177                           indf2	equ	0xFDF
  8178                           postinc2	equ	0xFDE
  8179                           postdec2	equ	0xFDD
  8180                           fsr2h	equ	0xFDA
  8181                           fsr2l	equ	0xFD9
  8182                           status	equ	0xFD8
  8183                           
  8184 ;; *************** function _ISR_Alta *****************
  8185 ;; Defined at:
  8186 ;;		line 129 in file "ABS_Code.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;		None
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;		None               void
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8200 ;;      Params:         0       0       0       0
  8201 ;;      Locals:         0       0       0       0
  8202 ;;      Temps:          0      22       0       0
  8203 ;;      Totals:         0      22       0       0
  8204 ;;Total ram usage:       22 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    1
  8207 ;; This function calls:
  8208 ;;		_WriteTimer0
  8209 ;;		i2___awdiv
  8210 ;;		i2___lwdiv
  8211 ;;		i2___wmul
  8212 ;; This function is called by:
  8213 ;;		Interrupt level 2
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	intcode
  8218  000008                     __pintcode:
  8219                           	opt stack 0
  8220  000008                     _ISR_Alta:
  8221                           	opt stack 24
  8222                           
  8223                           ;incstack = 0
  8224  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8225  00000A  CFFA F0AA          	movff	pclath,??_ISR_Alta+8
  8226  00000E  CFFB F0AB          	movff	pclatu,??_ISR_Alta+9
  8227  000012  ED28  F00E         	call	int_func,f	;refresh shadow registers
  8228                           pclatu	equ	0xFFB
  8229                           pclath	equ	0xFFA
  8230                           tblptru	equ	0xFF8
  8231                           tblptrh	equ	0xFF7
  8232                           tblptrl	equ	0xFF6
  8233                           tablat	equ	0xFF5
  8234                           prodh	equ	0xFF4
  8235                           prodl	equ	0xFF3
  8236                           intcon	equ	0xFF2
  8237                           intcon2	equ	0xFF1
  8238                           intcon3	equ	0xFF0
  8239                           postinc0	equ	0xFEE
  8240                           fsr0h	equ	0xFEA
  8241                           fsr0l	equ	0xFE9
  8242                           wreg	equ	0xFE8
  8243                           postdec1	equ	0xFE5
  8244                           fsr1h	equ	0xFE2
  8245                           fsr1l	equ	0xFE1
  8246                           bsr	equ	0xFE0
  8247                           indf2	equ	0xFDF
  8248                           postinc2	equ	0xFDE
  8249                           postdec2	equ	0xFDD
  8250                           fsr2h	equ	0xFDA
  8251                           fsr2l	equ	0xFD9
  8252                           status	equ	0xFD8
  8253                           
  8254                           	psect	intcode_body
  8255  001C50                     __pintcode_body:
  8256                           	opt stack 24
  8257  001C50                     int_func:
  8258                           	opt stack 24
  8259  001C50  0006               	pop		; remove dummy address from shadow register refresh
  8260  001C52  CFE9 F0AC          	movff	fsr0l,??_ISR_Alta+10
  8261  001C56  CFEA F0AD          	movff	fsr0h,??_ISR_Alta+11
  8262  001C5A  CFE1 F0AE          	movff	fsr1l,??_ISR_Alta+12
  8263  001C5E  CFE2 F0AF          	movff	fsr1h,??_ISR_Alta+13
  8264  001C62  CFD9 F0B0          	movff	fsr2l,??_ISR_Alta+14
  8265  001C66  CFDA F0B1          	movff	fsr2h,??_ISR_Alta+15
  8266  001C6A  CFF3 F0B2          	movff	prodl,??_ISR_Alta+16
  8267  001C6E  CFF4 F0B3          	movff	prodh,??_ISR_Alta+17
  8268  001C72  CFF6 F0B4          	movff	tblptrl,??_ISR_Alta+18
  8269  001C76  CFF7 F0B5          	movff	tblptrh,??_ISR_Alta+19
  8270  001C7A  CFF8 F0B6          	movff	tblptru,??_ISR_Alta+20
  8271  001C7E  CFF5 F0B7          	movff	tablat,??_ISR_Alta+21
  8272                           
  8273                           ;ABS_Code.c: 131: if (INTCONbits.TMR0IF == 1) {
  8274  001C82  A4F2               	btfss	intcon,2,c	;volatile
  8275  001C84  D09D               	goto	i2l4114
  8276                           
  8277                           ;ABS_Code.c: 132: if (PORTCbits.RC0 == 1) {
  8278  001C86  A082               	btfss	3970,0,c	;volatile
  8279  001C88  D094               	goto	i2l4110
  8280                           
  8281                           ;ABS_Code.c: 133: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8282  001C8A  0E40               	movlw	64
  8283  001C8C  0100               	movlb	0	; () banked
  8284  001C8E  6FA2               	movwf	??_ISR_Alta& (0+255),b
  8285  001C90  0E06               	movlw	6
  8286  001C92  0100               	movlb	0	; () banked
  8287  001C94  6FA3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8288  001C96  C038  F01E         	movff	_brake_value_degree,i2___wmul@multiplier
  8289  001C9A  6A1F               	clrf	i2___wmul@multiplier+1,c
  8290  001C9C  0E05               	movlw	5
  8291  001C9E  6E21               	movwf	i2___wmul@multiplicand+1,c
  8292  001CA0  0E78               	movlw	120
  8293  001CA2  6E20               	movwf	i2___wmul@multiplicand,c
  8294  001CA4  ECD1  F013         	call	i2___wmul	;wreg free
  8295  001CA8  C01E  F024         	movff	?i2___wmul,i2___awdiv@dividend
  8296  001CAC  C01F  F025         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8297  001CB0  0E00               	movlw	0
  8298  001CB2  6E27               	movwf	i2___awdiv@divisor+1,c
  8299  001CB4  0EB4               	movlw	180
  8300  001CB6  6E26               	movwf	i2___awdiv@divisor,c
  8301  001CB8  ECAE  F012         	call	i2___awdiv	;wreg free
  8302  001CBC  90D8               	bcf	status,0,c
  8303  001CBE  3624               	rlcf	?i2___awdiv,f,c
  8304  001CC0  3625               	rlcf	?i2___awdiv+1,f,c
  8305  001CC2  0100               	movlb	0	; () banked
  8306  001CC4  51A2               	movf	??_ISR_Alta& (0+255),w,b
  8307  001CC6  2624               	addwf	?i2___awdiv,f,c
  8308  001CC8  0100               	movlb	0	; () banked
  8309  001CCA  51A3               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8310  001CCC  2225               	addwfc	?i2___awdiv+1,f,c
  8311  001CCE  C024  F030         	movff	?i2___awdiv,_timer_on
  8312  001CD2  C025  F031         	movff	?i2___awdiv+1,_timer_on+1
  8313  001CD6  0E00               	movlw	0
  8314  001CD8  BE31               	btfsc	_timer_on+1,7,c
  8315  001CDA  0EFF               	movlw	-1
  8316  001CDC  6E32               	movwf	_timer_on+2,c
  8317  001CDE  6E33               	movwf	_timer_on+3,c
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;ABS_Code.c: 134: timer_off = 65536 - (40000 - timer_on);
  8321  001CE0  C030  F0A2         	movff	_timer_on,??_ISR_Alta
  8322  001CE4  C031  F0A3         	movff	_timer_on+1,??_ISR_Alta+1
  8323  001CE8  C032  F0A4         	movff	_timer_on+2,??_ISR_Alta+2
  8324  001CEC  C033  F0A5         	movff	_timer_on+3,??_ISR_Alta+3
  8325  001CF0  0100               	movlb	0	; () banked
  8326  001CF2  1FA2               	comf	??_ISR_Alta& (0+255),f,b
  8327  001CF4  1FA3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8328  001CF6  1FA4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8329  001CF8  1FA5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8330  001CFA  2BA2               	incf	??_ISR_Alta& (0+255),f,b
  8331  001CFC  0E00               	movlw	0
  8332  001CFE  23A3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8333  001D00  23A4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8334  001D02  23A5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8335  001D04  0E40               	movlw	64
  8336  001D06  0100               	movlb	0	; () banked
  8337  001D08  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8338  001D0A  0100               	movlb	0	; () banked
  8339  001D0C  6FA6               	movwf	(??_ISR_Alta+4)& (0+255),b
  8340  001D0E  0E9C               	movlw	156
  8341  001D10  0100               	movlb	0	; () banked
  8342  001D12  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8343  001D14  0100               	movlb	0	; () banked
  8344  001D16  6FA7               	movwf	(??_ISR_Alta+5)& (0+255),b
  8345  001D18  0E00               	movlw	0
  8346  001D1A  0100               	movlb	0	; () banked
  8347  001D1C  21A4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8348  001D1E  0100               	movlb	0	; () banked
  8349  001D20  6FA8               	movwf	(??_ISR_Alta+6)& (0+255),b
  8350  001D22  0E00               	movlw	0
  8351  001D24  0100               	movlb	0	; () banked
  8352  001D26  21A5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8353  001D28  0100               	movlb	0	; () banked
  8354  001D2A  6FA9               	movwf	(??_ISR_Alta+7)& (0+255),b
  8355  001D2C  0100               	movlb	0	; () banked
  8356  001D2E  1FA6               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8357  001D30  1FA7               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8358  001D32  1FA8               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8359  001D34  1FA9               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8360  001D36  2BA6               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8361  001D38  0E00               	movlw	0
  8362  001D3A  23A7               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8363  001D3C  23A8               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8364  001D3E  23A9               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8365  001D40  0E00               	movlw	0
  8366  001D42  0100               	movlb	0	; () banked
  8367  001D44  25A6               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8368  001D46  6E2C               	movwf	_timer_off,c
  8369  001D48  0E00               	movlw	0
  8370  001D4A  0100               	movlb	0	; () banked
  8371  001D4C  21A7               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8372  001D4E  6E2D               	movwf	_timer_off+1,c
  8373  001D50  0E01               	movlw	1
  8374  001D52  0100               	movlb	0	; () banked
  8375  001D54  21A8               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8376  001D56  6E2E               	movwf	_timer_off+2,c
  8377  001D58  0E00               	movlw	0
  8378  001D5A  0100               	movlb	0	; () banked
  8379  001D5C  21A9               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8380  001D5E  6E2F               	movwf	_timer_off+3,c
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;ABS_Code.c: 135: timer_on = 65536 - timer_on;
  8384  001D60  C030  F0A2         	movff	_timer_on,??_ISR_Alta
  8385  001D64  C031  F0A3         	movff	_timer_on+1,??_ISR_Alta+1
  8386  001D68  C032  F0A4         	movff	_timer_on+2,??_ISR_Alta+2
  8387  001D6C  C033  F0A5         	movff	_timer_on+3,??_ISR_Alta+3
  8388  001D70  0100               	movlb	0	; () banked
  8389  001D72  1FA2               	comf	??_ISR_Alta& (0+255),f,b
  8390  001D74  1FA3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8391  001D76  1FA4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8392  001D78  1FA5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8393  001D7A  2BA2               	incf	??_ISR_Alta& (0+255),f,b
  8394  001D7C  0E00               	movlw	0
  8395  001D7E  23A3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8396  001D80  23A4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8397  001D82  23A5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8398  001D84  0E00               	movlw	0
  8399  001D86  0100               	movlb	0	; () banked
  8400  001D88  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8401  001D8A  6E30               	movwf	_timer_on,c
  8402  001D8C  0E00               	movlw	0
  8403  001D8E  0100               	movlb	0	; () banked
  8404  001D90  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8405  001D92  6E31               	movwf	_timer_on+1,c
  8406  001D94  0E01               	movlw	1
  8407  001D96  0100               	movlb	0	; () banked
  8408  001D98  21A4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8409  001D9A  6E32               	movwf	_timer_on+2,c
  8410  001D9C  0E00               	movlw	0
  8411  001D9E  0100               	movlb	0	; () banked
  8412  001DA0  21A5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8413  001DA2  6E33               	movwf	_timer_on+3,c
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;ABS_Code.c: 136: WriteTimer0(timer_on);
  8417  001DA4  C030  F01E         	movff	_timer_on,WriteTimer0@timer0
  8418  001DA8  C031  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1
  8419  001DAC  EC0C  F014         	call	_WriteTimer0	;wreg free
  8420                           
  8421                           ;ABS_Code.c: 137: } else {
  8422  001DB0  D006               	goto	i2l4112
  8423  001DB2                     i2l4110:
  8424                           
  8425                           ;ABS_Code.c: 138: WriteTimer0(timer_off);
  8426  001DB2  C02C  F01E         	movff	_timer_off,WriteTimer0@timer0
  8427  001DB6  C02D  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1
  8428  001DBA  EC0C  F014         	call	_WriteTimer0	;wreg free
  8429  001DBE                     i2l4112:
  8430                           
  8431                           ;ABS_Code.c: 139: }
  8432                           ;ABS_Code.c: 140: INTCONbits.TMR0IF = 0;
  8433  001DBE  94F2               	bcf	intcon,2,c	;volatile
  8434  001DC0                     i2l4114:
  8435                           
  8436                           ;ABS_Code.c: 141: }
  8437                           ;ABS_Code.c: 144: if (INTCONbits.INT0IF == 1) {
  8438  001DC0  A2F2               	btfss	intcon,1,c	;volatile
  8439  001DC2  D041               	goto	i2l4138
  8440                           
  8441                           ;ABS_Code.c: 145: if (x == 0) {
  8442  001DC4  BE39               	btfsc	_x/(0+8),_x& (0+7),c
  8443  001DC6  D006               	goto	i2l4122
  8444                           
  8445                           ;ABS_Code.c: 146: TMR1H = 0x00;
  8446  001DC8  0E00               	movlw	0
  8447  001DCA  6ECF               	movwf	4047,c	;volatile
  8448                           
  8449                           ;ABS_Code.c: 147: TMR1L = 0x00;
  8450  001DCC  0E00               	movlw	0
  8451  001DCE  6ECE               	movwf	4046,c	;volatile
  8452                           
  8453                           ;ABS_Code.c: 148: x = 1;
  8454  001DD0  8E39               	bsf	_x/(0+8),_x& (0+7),c
  8455                           
  8456                           ;ABS_Code.c: 149: } else {
  8457  001DD2  D028               	goto	i2l4136
  8458  001DD4                     i2l4122:
  8459                           
  8460                           ;ABS_Code.c: 150: gap_time_1 = (TMR1H <<8) + TMR1L;
  8461  001DD4  50CF               	movf	4047,w,c	;volatile
  8462  001DD6  0100               	movlb	0	; () banked
  8463  001DD8  6FA3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8464  001DDA  6BA2               	clrf	??_ISR_Alta& (0+255),b
  8465  001DDC  50CE               	movf	4046,w,c	;volatile
  8466  001DDE  0100               	movlb	0	; () banked
  8467  001DE0  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8468  001DE2  6E34               	movwf	_gap_time_1,c
  8469  001DE4  0E00               	movlw	0
  8470  001DE6  0100               	movlb	0	; () banked
  8471  001DE8  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8472  001DEA  6E35               	movwf	_gap_time_1+1,c
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;ABS_Code.c: 151: gap_time_1 = gap_time_1 / 500;
  8476  001DEC  C034  F01E         	movff	_gap_time_1,i2___lwdiv@dividend
  8477  001DF0  C035  F01F         	movff	_gap_time_1+1,i2___lwdiv@dividend+1
  8478  001DF4  0E01               	movlw	1
  8479  001DF6  6E21               	movwf	i2___lwdiv@divisor+1,c
  8480  001DF8  0EF4               	movlw	244
  8481  001DFA  6E20               	movwf	i2___lwdiv@divisor,c
  8482  001DFC  EC2C  F013         	call	i2___lwdiv	;wreg free
  8483  001E00  C01E  F034         	movff	?i2___lwdiv,_gap_time_1
  8484  001E04  C01F  F035         	movff	?i2___lwdiv+1,_gap_time_1+1
  8485                           
  8486                           ;ABS_Code.c: 152: ENC1_measure = 1;
  8487  001E08  8039               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c
  8488                           
  8489                           ;ABS_Code.c: 153: TMR1H = 0x00;
  8490  001E0A  0E00               	movlw	0
  8491  001E0C  6ECF               	movwf	4047,c	;volatile
  8492                           
  8493                           ;ABS_Code.c: 154: TMR1H = 0x00;
  8494  001E0E  0E00               	movlw	0
  8495  001E10  6ECF               	movwf	4047,c	;volatile
  8496                           
  8497                           ;ABS_Code.c: 155: if (count_flag == 1) {
  8498  001E12  AA39               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8499  001E14  D007               	goto	i2l4136
  8500                           
  8501                           ;ABS_Code.c: 156: int_counter_1++;
  8502  001E16  0E01               	movlw	1
  8503  001E18  0100               	movlb	0	; () banked
  8504  001E1A  2760               	addwf	_int_counter_1& (0+255),f,b
  8505  001E1C  0E00               	movlw	0
  8506  001E1E  2361               	addwfc	(_int_counter_1+1)& (0+255),f,b
  8507  001E20  2362               	addwfc	(_int_counter_1+2)& (0+255),f,b
  8508  001E22  2363               	addwfc	(_int_counter_1+3)& (0+255),f,b
  8509  001E24                     i2l4136:
  8510                           
  8511                           ;ABS_Code.c: 157: }
  8512                           ;ABS_Code.c: 158: }
  8513                           ;ABS_Code.c: 159: INTCONbits.INT0IF = 0;
  8514  001E24  92F2               	bcf	intcon,1,c	;volatile
  8515                           
  8516                           ;ABS_Code.c: 160: PORTCbits.RC1 = ~PORTCbits.RC1;
  8517  001E26  A282               	btfss	3970,1,c	;volatile
  8518  001E28  D002               	goto	i2u468_40
  8519  001E2A  0E01               	movlw	1
  8520  001E2C  D001               	goto	i2u468_46
  8521  001E2E                     i2u468_40:
  8522  001E2E  0E00               	movlw	0
  8523  001E30                     i2u468_46:
  8524  001E30  0AFF               	xorlw	255
  8525  001E32  0100               	movlb	0	; () banked
  8526  001E34  6FA2               	movwf	??_ISR_Alta& (0+255),b
  8527  001E36  0100               	movlb	0	; () banked
  8528  001E38  47A2               	rlncf	??_ISR_Alta& (0+255),f,b
  8529  001E3A  5082               	movf	3970,w,c	;volatile
  8530  001E3C  0100               	movlb	0	; () banked
  8531  001E3E  19A2               	xorwf	??_ISR_Alta& (0+255),w,b
  8532  001E40  0BFD               	andlw	-3
  8533  001E42  19A2               	xorwf	??_ISR_Alta& (0+255),w,b
  8534  001E44  6E82               	movwf	3970,c	;volatile
  8535  001E46                     i2l4138:
  8536                           
  8537                           ;ABS_Code.c: 161: }
  8538                           ;ABS_Code.c: 164: if (INTCON3bits.INT1IF == 1) {
  8539  001E46  A0F0               	btfss	intcon3,0,c	;volatile
  8540  001E48  D031               	goto	i2l681
  8541                           
  8542                           ;ABS_Code.c: 165: if (y == 0) {
  8543  001E4A  B03A               	btfsc	_y/(0+8),_y& (0+7),c
  8544  001E4C  D006               	goto	i2l4146
  8545                           
  8546                           ;ABS_Code.c: 166: TMR3H = 0x00;
  8547  001E4E  0E00               	movlw	0
  8548  001E50  6EB3               	movwf	4019,c	;volatile
  8549                           
  8550                           ;ABS_Code.c: 167: TMR3L = 0x00;
  8551  001E52  0E00               	movlw	0
  8552  001E54  6EB2               	movwf	4018,c	;volatile
  8553                           
  8554                           ;ABS_Code.c: 168: y = 1;
  8555  001E56  803A               	bsf	_y/(0+8),_y& (0+7),c
  8556                           
  8557                           ;ABS_Code.c: 169: } else {
  8558  001E58  D028               	goto	i2l4160
  8559  001E5A                     i2l4146:
  8560                           
  8561                           ;ABS_Code.c: 170: gap_time_2 = (TMR3H <<8) + TMR3L;
  8562  001E5A  50B3               	movf	4019,w,c	;volatile
  8563  001E5C  0100               	movlb	0	; () banked
  8564  001E5E  6FA3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8565  001E60  6BA2               	clrf	??_ISR_Alta& (0+255),b
  8566  001E62  50B2               	movf	4018,w,c	;volatile
  8567  001E64  0100               	movlb	0	; () banked
  8568  001E66  25A2               	addwf	??_ISR_Alta& (0+255),w,b
  8569  001E68  6E36               	movwf	_gap_time_2,c
  8570  001E6A  0E00               	movlw	0
  8571  001E6C  0100               	movlb	0	; () banked
  8572  001E6E  21A3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8573  001E70  6E37               	movwf	_gap_time_2+1,c
  8574                           
  8575                           ; BSR set to: 0
  8576                           ;ABS_Code.c: 171: gap_time_2 = gap_time_2 / 500;
  8577  001E72  C036  F01E         	movff	_gap_time_2,i2___lwdiv@dividend
  8578  001E76  C037  F01F         	movff	_gap_time_2+1,i2___lwdiv@dividend+1
  8579  001E7A  0E01               	movlw	1
  8580  001E7C  6E21               	movwf	i2___lwdiv@divisor+1,c
  8581  001E7E  0EF4               	movlw	244
  8582  001E80  6E20               	movwf	i2___lwdiv@divisor,c
  8583  001E82  EC2C  F013         	call	i2___lwdiv	;wreg free
  8584  001E86  C01E  F036         	movff	?i2___lwdiv,_gap_time_2
  8585  001E8A  C01F  F037         	movff	?i2___lwdiv+1,_gap_time_2+1
  8586                           
  8587                           ;ABS_Code.c: 172: ENC2_measure = 1;
  8588  001E8E  8239               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c
  8589                           
  8590                           ;ABS_Code.c: 173: TMR3H = 0x00;
  8591  001E90  0E00               	movlw	0
  8592  001E92  6EB3               	movwf	4019,c	;volatile
  8593                           
  8594                           ;ABS_Code.c: 174: TMR3H = 0x00;
  8595  001E94  0E00               	movlw	0
  8596  001E96  6EB3               	movwf	4019,c	;volatile
  8597                           
  8598                           ;ABS_Code.c: 175: if (count_flag == 1) {
  8599  001E98  AA39               	btfss	_count_flag/(0+8),_count_flag& (0+7),c
  8600  001E9A  D007               	goto	i2l4160
  8601                           
  8602                           ;ABS_Code.c: 176: int_counter_2++;
  8603  001E9C  0E01               	movlw	1
  8604  001E9E  0100               	movlb	0	; () banked
  8605  001EA0  2764               	addwf	_int_counter_2& (0+255),f,b
  8606  001EA2  0E00               	movlw	0
  8607  001EA4  2365               	addwfc	(_int_counter_2+1)& (0+255),f,b
  8608  001EA6  2366               	addwfc	(_int_counter_2+2)& (0+255),f,b
  8609  001EA8  2367               	addwfc	(_int_counter_2+3)& (0+255),f,b
  8610  001EAA                     i2l4160:
  8611                           
  8612                           ;ABS_Code.c: 177: }
  8613                           ;ABS_Code.c: 178: }
  8614                           ;ABS_Code.c: 179: INTCON3bits.INT1IF = 0;
  8615  001EAA  90F0               	bcf	intcon3,0,c	;volatile
  8616  001EAC                     i2l681:
  8617  001EAC  C0B7  FFF5         	movff	??_ISR_Alta+21,tablat
  8618  001EB0  C0B6  FFF8         	movff	??_ISR_Alta+20,tblptru
  8619  001EB4  C0B5  FFF7         	movff	??_ISR_Alta+19,tblptrh
  8620  001EB8  C0B4  FFF6         	movff	??_ISR_Alta+18,tblptrl
  8621  001EBC  C0B3  FFF4         	movff	??_ISR_Alta+17,prodh
  8622  001EC0  C0B2  FFF3         	movff	??_ISR_Alta+16,prodl
  8623  001EC4  C0B1  FFDA         	movff	??_ISR_Alta+15,fsr2h
  8624  001EC8  C0B0  FFD9         	movff	??_ISR_Alta+14,fsr2l
  8625  001ECC  C0AF  FFE2         	movff	??_ISR_Alta+13,fsr1h
  8626  001ED0  C0AE  FFE1         	movff	??_ISR_Alta+12,fsr1l
  8627  001ED4  C0AD  FFEA         	movff	??_ISR_Alta+11,fsr0h
  8628  001ED8  C0AC  FFE9         	movff	??_ISR_Alta+10,fsr0l
  8629  001EDC  C0AB  FFFB         	movff	??_ISR_Alta+9,pclatu
  8630  001EE0  C0AA  FFFA         	movff	??_ISR_Alta+8,pclath
  8631  001EE4  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8632  001EE6  0011               	retfie		f
  8633  001EE8                     __end_of_ISR_Alta:
  8634                           	opt stack 0
  8635                           pclatu	equ	0xFFB
  8636                           pclath	equ	0xFFA
  8637                           tblptru	equ	0xFF8
  8638                           tblptrh	equ	0xFF7
  8639                           tblptrl	equ	0xFF6
  8640                           tablat	equ	0xFF5
  8641                           prodh	equ	0xFF4
  8642                           prodl	equ	0xFF3
  8643                           intcon	equ	0xFF2
  8644                           intcon2	equ	0xFF1
  8645                           intcon3	equ	0xFF0
  8646                           postinc0	equ	0xFEE
  8647                           fsr0h	equ	0xFEA
  8648                           fsr0l	equ	0xFE9
  8649                           wreg	equ	0xFE8
  8650                           postdec1	equ	0xFE5
  8651                           fsr1h	equ	0xFE2
  8652                           fsr1l	equ	0xFE1
  8653                           bsr	equ	0xFE0
  8654                           indf2	equ	0xFDF
  8655                           postinc2	equ	0xFDE
  8656                           postdec2	equ	0xFDD
  8657                           fsr2h	equ	0xFDA
  8658                           fsr2l	equ	0xFD9
  8659                           status	equ	0xFD8
  8660                           
  8661 ;; *************** function i2___wmul *****************
  8662 ;; Defined at:
  8663 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;  multiplier      2   29[COMRAM] unsigned int 
  8666 ;;  multiplicand    2   31[COMRAM] unsigned int 
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;  __wmul          2   33[COMRAM] unsigned int 
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  2   29[COMRAM] unsigned int 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2, status,0, prodl, prodh
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8678 ;;      Params:         4       0       0       0
  8679 ;;      Locals:         2       0       0       0
  8680 ;;      Temps:          0       0       0       0
  8681 ;;      Totals:         6       0       0       0
  8682 ;;Total ram usage:        6 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		_ISR_Alta
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           	psect	text20
  8692  0027A2                     __ptext20:
  8693                           	opt stack 0
  8694  0027A2                     i2___wmul:
  8695                           	opt stack 24
  8696                           
  8697                           ;incstack = 0
  8698  0027A2  501E               	movf	i2___wmul@multiplier,w,c
  8699  0027A4  0220               	mulwf	i2___wmul@multiplicand,c
  8700  0027A6  CFF3 F022          	movff	prodl,i2___wmul@product
  8701  0027AA  CFF4 F023          	movff	prodh,i2___wmul@product+1
  8702  0027AE  501E               	movf	i2___wmul@multiplier,w,c
  8703  0027B0  0221               	mulwf	i2___wmul@multiplicand+1,c
  8704  0027B2  50F3               	movf	prodl,w,c
  8705  0027B4  2623               	addwf	i2___wmul@product+1,f,c
  8706  0027B6  501F               	movf	i2___wmul@multiplier+1,w,c
  8707  0027B8  0220               	mulwf	i2___wmul@multiplicand,c
  8708  0027BA  50F3               	movf	prodl,w,c
  8709  0027BC  2623               	addwf	i2___wmul@product+1,f,c
  8710  0027BE  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  8711  0027C2  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  8712  0027C6  0012               	return	
  8713  0027C8                     __end_ofi2___wmul:
  8714                           	opt stack 0
  8715                           pclatu	equ	0xFFB
  8716                           pclath	equ	0xFFA
  8717                           tblptru	equ	0xFF8
  8718                           tblptrh	equ	0xFF7
  8719                           tblptrl	equ	0xFF6
  8720                           tablat	equ	0xFF5
  8721                           prodh	equ	0xFF4
  8722                           prodl	equ	0xFF3
  8723                           intcon	equ	0xFF2
  8724                           intcon2	equ	0xFF1
  8725                           intcon3	equ	0xFF0
  8726                           postinc0	equ	0xFEE
  8727                           fsr0h	equ	0xFEA
  8728                           fsr0l	equ	0xFE9
  8729                           wreg	equ	0xFE8
  8730                           postdec1	equ	0xFE5
  8731                           fsr1h	equ	0xFE2
  8732                           fsr1l	equ	0xFE1
  8733                           bsr	equ	0xFE0
  8734                           indf2	equ	0xFDF
  8735                           postinc2	equ	0xFDE
  8736                           postdec2	equ	0xFDD
  8737                           fsr2h	equ	0xFDA
  8738                           fsr2l	equ	0xFD9
  8739                           status	equ	0xFD8
  8740                           
  8741 ;; *************** function i2___lwdiv *****************
  8742 ;; Defined at:
  8743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  dividend        2   29[COMRAM] unsigned int 
  8746 ;;  divisor         2   31[COMRAM] unsigned int 
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;  __lwdiv         2   33[COMRAM] unsigned int 
  8749 ;;  __lwdiv         1   35[COMRAM] unsigned char 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  2   29[COMRAM] unsigned int 
  8752 ;; Registers used:
  8753 ;;		wreg, status,2, status,0
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8759 ;;      Params:         4       0       0       0
  8760 ;;      Locals:         3       0       0       0
  8761 ;;      Temps:          0       0       0       0
  8762 ;;      Totals:         7       0       0       0
  8763 ;;Total ram usage:        7 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; This function calls:
  8766 ;;		Nothing
  8767 ;; This function is called by:
  8768 ;;		_ISR_Alta
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           	psect	text21
  8773  002658                     __ptext21:
  8774                           	opt stack 0
  8775  002658                     i2___lwdiv:
  8776                           	opt stack 24
  8777                           
  8778                           ;incstack = 0
  8779  002658  0E00               	movlw	0
  8780  00265A  6E23               	movwf	i2___lwdiv@quotient+1,c
  8781  00265C  0E00               	movlw	0
  8782  00265E  6E22               	movwf	i2___lwdiv@quotient,c
  8783  002660  5020               	movf	i2___lwdiv@divisor,w,c
  8784  002662  1021               	iorwf	i2___lwdiv@divisor+1,w,c
  8785  002664  B4D8               	btfsc	status,2,c
  8786  002666  D01C               	goto	i2l1153
  8787  002668  0E01               	movlw	1
  8788  00266A  6E24               	movwf	i2___lwdiv@counter,c
  8789  00266C  D004               	goto	i2l3890
  8790  00266E                     i2l3888:
  8791  00266E  90D8               	bcf	status,0,c
  8792  002670  3620               	rlcf	i2___lwdiv@divisor,f,c
  8793  002672  3621               	rlcf	i2___lwdiv@divisor+1,f,c
  8794  002674  2A24               	incf	i2___lwdiv@counter,f,c
  8795  002676                     i2l3890:
  8796  002676  AE21               	btfss	i2___lwdiv@divisor+1,7,c
  8797  002678  D7FA               	goto	i2l3888
  8798  00267A                     i2l3892:
  8799  00267A  90D8               	bcf	status,0,c
  8800  00267C  3622               	rlcf	i2___lwdiv@quotient,f,c
  8801  00267E  3623               	rlcf	i2___lwdiv@quotient+1,f,c
  8802  002680  5020               	movf	i2___lwdiv@divisor,w,c
  8803  002682  5C1E               	subwf	i2___lwdiv@dividend,w,c
  8804  002684  5021               	movf	i2___lwdiv@divisor+1,w,c
  8805  002686  581F               	subwfb	i2___lwdiv@dividend+1,w,c
  8806  002688  A0D8               	btfss	status,0,c
  8807  00268A  D005               	goto	i2l3900
  8808  00268C  5020               	movf	i2___lwdiv@divisor,w,c
  8809  00268E  5E1E               	subwf	i2___lwdiv@dividend,f,c
  8810  002690  5021               	movf	i2___lwdiv@divisor+1,w,c
  8811  002692  5A1F               	subwfb	i2___lwdiv@dividend+1,f,c
  8812  002694  8022               	bsf	i2___lwdiv@quotient,0,c
  8813  002696                     i2l3900:
  8814  002696  90D8               	bcf	status,0,c
  8815  002698  3221               	rrcf	i2___lwdiv@divisor+1,f,c
  8816  00269A  3220               	rrcf	i2___lwdiv@divisor,f,c
  8817  00269C  2E24               	decfsz	i2___lwdiv@counter,f,c
  8818  00269E  D7ED               	goto	i2l3892
  8819  0026A0                     i2l1153:
  8820  0026A0  C022  F01E         	movff	i2___lwdiv@quotient,?i2___lwdiv
  8821  0026A4  C023  F01F         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  8822  0026A8  0012               	return		;funcret
  8823  0026AA                     __end_ofi2___lwdiv:
  8824                           	opt stack 0
  8825                           pclatu	equ	0xFFB
  8826                           pclath	equ	0xFFA
  8827                           tblptru	equ	0xFF8
  8828                           tblptrh	equ	0xFF7
  8829                           tblptrl	equ	0xFF6
  8830                           tablat	equ	0xFF5
  8831                           prodh	equ	0xFF4
  8832                           prodl	equ	0xFF3
  8833                           intcon	equ	0xFF2
  8834                           intcon2	equ	0xFF1
  8835                           intcon3	equ	0xFF0
  8836                           postinc0	equ	0xFEE
  8837                           fsr0h	equ	0xFEA
  8838                           fsr0l	equ	0xFE9
  8839                           wreg	equ	0xFE8
  8840                           postdec1	equ	0xFE5
  8841                           fsr1h	equ	0xFE2
  8842                           fsr1l	equ	0xFE1
  8843                           bsr	equ	0xFE0
  8844                           indf2	equ	0xFDF
  8845                           postinc2	equ	0xFDE
  8846                           postdec2	equ	0xFDD
  8847                           fsr2h	equ	0xFDA
  8848                           fsr2l	equ	0xFD9
  8849                           status	equ	0xFD8
  8850                           
  8851 ;; *************** function i2___awdiv *****************
  8852 ;; Defined at:
  8853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;  dividend        2   35[COMRAM] int 
  8856 ;;  divisor         2   37[COMRAM] int 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  __awdiv         2   41[COMRAM] int 
  8859 ;;  __awdiv         1   40[COMRAM] unsigned char 
  8860 ;;  __awdiv         1   39[COMRAM] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  2   35[COMRAM] int 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8870 ;;      Params:         4       0       0       0
  8871 ;;      Locals:         4       0       0       0
  8872 ;;      Temps:          0       0       0       0
  8873 ;;      Totals:         8       0       0       0
  8874 ;;Total ram usage:        8 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_ISR_Alta
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text22
  8884  00255C                     __ptext22:
  8885                           	opt stack 0
  8886  00255C                     i2___awdiv:
  8887                           	opt stack 24
  8888                           
  8889                           ;incstack = 0
  8890  00255C  0E00               	movlw	0
  8891  00255E  6E29               	movwf	i2___awdiv@sign,c
  8892  002560  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8893  002562  D006               	goto	i2l3846
  8894  002564  6C26               	negf	i2___awdiv@divisor,c
  8895  002566  1E27               	comf	i2___awdiv@divisor+1,f,c
  8896  002568  B0D8               	btfsc	status,0,c
  8897  00256A  2A27               	incf	i2___awdiv@divisor+1,f,c
  8898  00256C  0E01               	movlw	1
  8899  00256E  6E29               	movwf	i2___awdiv@sign,c
  8900  002570                     i2l3846:
  8901  002570  AE25               	btfss	i2___awdiv@dividend+1,7,c
  8902  002572  D006               	goto	i2l3852
  8903  002574  6C24               	negf	i2___awdiv@dividend,c
  8904  002576  1E25               	comf	i2___awdiv@dividend+1,f,c
  8905  002578  B0D8               	btfsc	status,0,c
  8906  00257A  2A25               	incf	i2___awdiv@dividend+1,f,c
  8907  00257C  0E01               	movlw	1
  8908  00257E  1A29               	xorwf	i2___awdiv@sign,f,c
  8909  002580                     i2l3852:
  8910  002580  0E00               	movlw	0
  8911  002582  6E2B               	movwf	i2___awdiv@quotient+1,c
  8912  002584  0E00               	movlw	0
  8913  002586  6E2A               	movwf	i2___awdiv@quotient,c
  8914  002588  5026               	movf	i2___awdiv@divisor,w,c
  8915  00258A  1027               	iorwf	i2___awdiv@divisor+1,w,c
  8916  00258C  B4D8               	btfsc	status,2,c
  8917  00258E  D01C               	goto	i2l3874
  8918  002590  0E01               	movlw	1
  8919  002592  6E28               	movwf	i2___awdiv@counter,c
  8920  002594  D004               	goto	i2l3860
  8921  002596                     i2l3858:
  8922  002596  90D8               	bcf	status,0,c
  8923  002598  3626               	rlcf	i2___awdiv@divisor,f,c
  8924  00259A  3627               	rlcf	i2___awdiv@divisor+1,f,c
  8925  00259C  2A28               	incf	i2___awdiv@counter,f,c
  8926  00259E                     i2l3860:
  8927  00259E  AE27               	btfss	i2___awdiv@divisor+1,7,c
  8928  0025A0  D7FA               	goto	i2l3858
  8929  0025A2                     i2l3862:
  8930  0025A2  90D8               	bcf	status,0,c
  8931  0025A4  362A               	rlcf	i2___awdiv@quotient,f,c
  8932  0025A6  362B               	rlcf	i2___awdiv@quotient+1,f,c
  8933  0025A8  5026               	movf	i2___awdiv@divisor,w,c
  8934  0025AA  5C24               	subwf	i2___awdiv@dividend,w,c
  8935  0025AC  5027               	movf	i2___awdiv@divisor+1,w,c
  8936  0025AE  5825               	subwfb	i2___awdiv@dividend+1,w,c
  8937  0025B0  A0D8               	btfss	status,0,c
  8938  0025B2  D005               	goto	i2l3870
  8939  0025B4  5026               	movf	i2___awdiv@divisor,w,c
  8940  0025B6  5E24               	subwf	i2___awdiv@dividend,f,c
  8941  0025B8  5027               	movf	i2___awdiv@divisor+1,w,c
  8942  0025BA  5A25               	subwfb	i2___awdiv@dividend+1,f,c
  8943  0025BC  802A               	bsf	i2___awdiv@quotient,0,c
  8944  0025BE                     i2l3870:
  8945  0025BE  90D8               	bcf	status,0,c
  8946  0025C0  3227               	rrcf	i2___awdiv@divisor+1,f,c
  8947  0025C2  3226               	rrcf	i2___awdiv@divisor,f,c
  8948  0025C4  2E28               	decfsz	i2___awdiv@counter,f,c
  8949  0025C6  D7ED               	goto	i2l3862
  8950  0025C8                     i2l3874:
  8951  0025C8  5029               	movf	i2___awdiv@sign,w,c
  8952  0025CA  B4D8               	btfsc	status,2,c
  8953  0025CC  D004               	goto	i2l3878
  8954  0025CE  6C2A               	negf	i2___awdiv@quotient,c
  8955  0025D0  1E2B               	comf	i2___awdiv@quotient+1,f,c
  8956  0025D2  B0D8               	btfsc	status,0,c
  8957  0025D4  2A2B               	incf	i2___awdiv@quotient+1,f,c
  8958  0025D6                     i2l3878:
  8959  0025D6  C02A  F024         	movff	i2___awdiv@quotient,?i2___awdiv
  8960  0025DA  C02B  F025         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  8961  0025DE  0012               	return	
  8962  0025E0                     __end_ofi2___awdiv:
  8963                           	opt stack 0
  8964                           pclatu	equ	0xFFB
  8965                           pclath	equ	0xFFA
  8966                           tblptru	equ	0xFF8
  8967                           tblptrh	equ	0xFF7
  8968                           tblptrl	equ	0xFF6
  8969                           tablat	equ	0xFF5
  8970                           prodh	equ	0xFF4
  8971                           prodl	equ	0xFF3
  8972                           intcon	equ	0xFF2
  8973                           intcon2	equ	0xFF1
  8974                           intcon3	equ	0xFF0
  8975                           postinc0	equ	0xFEE
  8976                           fsr0h	equ	0xFEA
  8977                           fsr0l	equ	0xFE9
  8978                           wreg	equ	0xFE8
  8979                           postdec1	equ	0xFE5
  8980                           fsr1h	equ	0xFE2
  8981                           fsr1l	equ	0xFE1
  8982                           bsr	equ	0xFE0
  8983                           indf2	equ	0xFDF
  8984                           postinc2	equ	0xFDE
  8985                           postdec2	equ	0xFDD
  8986                           fsr2h	equ	0xFDA
  8987                           fsr2l	equ	0xFD9
  8988                           status	equ	0xFD8
  8989                           
  8990 ;; *************** function _WriteTimer0 *****************
  8991 ;; Defined at:
  8992 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;  timer0          2   29[COMRAM] unsigned int 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;  timer           2   31[COMRAM] struct Timers
  8997 ;; Return value:  Size  Location     Type
  8998 ;;		None               void
  8999 ;; Registers used:
  9000 ;;		None
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9006 ;;      Params:         2       0       0       0
  9007 ;;      Locals:         2       0       0       0
  9008 ;;      Temps:          0       0       0       0
  9009 ;;      Totals:         4       0       0       0
  9010 ;;Total ram usage:        4 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; This function calls:
  9013 ;;		Nothing
  9014 ;; This function is called by:
  9015 ;;		_ISR_Alta
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019                           	psect	text23
  9020  002818                     __ptext23:
  9021                           	opt stack 0
  9022  002818                     _WriteTimer0:
  9023                           	opt stack 24
  9024                           
  9025                           ;incstack = 0
  9026  002818  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9027  00281C  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9028  002820  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9029  002824  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9030  002828  0012               	return		;funcret
  9031  00282A                     __end_of_WriteTimer0:
  9032                           	opt stack 0
  9033  0000                     pclatu	equ	0xFFB
  9034                           pclath	equ	0xFFA
  9035                           tblptru	equ	0xFF8
  9036                           tblptrh	equ	0xFF7
  9037                           tblptrl	equ	0xFF6
  9038                           tablat	equ	0xFF5
  9039                           prodh	equ	0xFF4
  9040                           prodl	equ	0xFF3
  9041                           intcon	equ	0xFF2
  9042                           intcon2	equ	0xFF1
  9043                           intcon3	equ	0xFF0
  9044                           postinc0	equ	0xFEE
  9045                           fsr0h	equ	0xFEA
  9046                           fsr0l	equ	0xFE9
  9047                           wreg	equ	0xFE8
  9048                           postdec1	equ	0xFE5
  9049                           fsr1h	equ	0xFE2
  9050                           fsr1l	equ	0xFE1
  9051                           bsr	equ	0xFE0
  9052                           indf2	equ	0xFDF
  9053                           postinc2	equ	0xFDE
  9054                           postdec2	equ	0xFDD
  9055                           fsr2h	equ	0xFDA
  9056                           fsr2l	equ	0xFD9
  9057                           status	equ	0xFD8
  9058                           pclatu	equ	0xFFB
  9059                           pclath	equ	0xFFA
  9060                           tblptru	equ	0xFF8
  9061                           tblptrh	equ	0xFF7
  9062                           tblptrl	equ	0xFF6
  9063                           tablat	equ	0xFF5
  9064                           prodh	equ	0xFF4
  9065                           prodl	equ	0xFF3
  9066                           intcon	equ	0xFF2
  9067                           intcon2	equ	0xFF1
  9068                           intcon3	equ	0xFF0
  9069                           postinc0	equ	0xFEE
  9070                           fsr0h	equ	0xFEA
  9071                           fsr0l	equ	0xFE9
  9072                           wreg	equ	0xFE8
  9073                           postdec1	equ	0xFE5
  9074                           fsr1h	equ	0xFE2
  9075                           fsr1l	equ	0xFE1
  9076                           bsr	equ	0xFE0
  9077                           indf2	equ	0xFDF
  9078                           postinc2	equ	0xFDE
  9079                           postdec2	equ	0xFDD
  9080                           fsr2h	equ	0xFDA
  9081                           fsr2l	equ	0xFD9
  9082                           status	equ	0xFD8
  9083                           
  9084                           	psect	rparam
  9085  0000                     pclatu	equ	0xFFB
  9086                           pclath	equ	0xFFA
  9087                           tblptru	equ	0xFF8
  9088                           tblptrh	equ	0xFF7
  9089                           tblptrl	equ	0xFF6
  9090                           tablat	equ	0xFF5
  9091                           prodh	equ	0xFF4
  9092                           prodl	equ	0xFF3
  9093                           intcon	equ	0xFF2
  9094                           intcon2	equ	0xFF1
  9095                           intcon3	equ	0xFF0
  9096                           postinc0	equ	0xFEE
  9097                           fsr0h	equ	0xFEA
  9098                           fsr0l	equ	0xFE9
  9099                           wreg	equ	0xFE8
  9100                           postdec1	equ	0xFE5
  9101                           fsr1h	equ	0xFE2
  9102                           fsr1l	equ	0xFE1
  9103                           bsr	equ	0xFE0
  9104                           indf2	equ	0xFDF
  9105                           postinc2	equ	0xFDE
  9106                           postdec2	equ	0xFDD
  9107                           fsr2h	equ	0xFDA
  9108                           fsr2l	equ	0xFD9
  9109                           status	equ	0xFD8
  9110                           
  9111                           	psect	temp
  9112  00003B                     btemp:
  9113                           	opt stack 0
  9114  00003B                     	ds	1
  9115  0000                     int$flags	set	btemp
  9116                           pclatu	equ	0xFFB
  9117                           pclath	equ	0xFFA
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           intcon	equ	0xFF2
  9125                           intcon2	equ	0xFF1
  9126                           intcon3	equ	0xFF0
  9127                           postinc0	equ	0xFEE
  9128                           fsr0h	equ	0xFEA
  9129                           fsr0l	equ	0xFE9
  9130                           wreg	equ	0xFE8
  9131                           postdec1	equ	0xFE5
  9132                           fsr1h	equ	0xFE2
  9133                           fsr1l	equ	0xFE1
  9134                           bsr	equ	0xFE0
  9135                           indf2	equ	0xFDF
  9136                           postinc2	equ	0xFDE
  9137                           postdec2	equ	0xFDD
  9138                           fsr2h	equ	0xFDA
  9139                           fsr2l	equ	0xFD9
  9140                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      58
    BANK0           160     48     123
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _ADC_Read->___awdiv

Critical Paths under _ISR_Alta in BANK0

    None.

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13374
                           _ADC_Read
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___lwdiv
               _board_initialization
                           _delay_ms
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 1     1      0    3552
                                             38 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             22 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6833
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     899
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     621
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             36 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     570
                                             22 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             0     0      0     760
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1023
                                              0 BANK0     22    22      0
                        _WriteTimer0
                          i2___awdiv
                          i2___lwdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lwdiv                                            7     3      4     266
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     352
                                             35 COMRAM     8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
     ___awdiv
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___lwdiv
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   i2___awdiv
     i2___wmul (ARG)
   i2___lwdiv
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     30      7B       4       76.9%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     2B      3A       1       61.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B5       9        0.0%
DATA                 0      0      B5      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Feb 04 16:33:25 2016

           ??_CANisTXwarningON 00B8                              _x 01CF                              _y 01D0  
         __end_of_CANSetFilter 0C1A                   ___awdiv@sign 00BD                             bsr 000FE0  
          ___wmul@multiplicand 00BA             i2___lwdiv@dividend 001E                    __CFG_BORV$3 000000  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000  
                  __CFG_LVP$ON 000000                            l400 0EB8                            l401 0FB0  
                          l410 107E                            l402 0F40                            l403 0F4A  
                          l500 074E                            l404 0F54                            l501 0752  
                          l413 1138                            l405 0F5E                            l510 085E  
                          l502 075E                            l422 12F2                            l414 113C  
                          l511 086A                            l423 12F6                            l415 1234  
                          l520 0976                            l512 086E                            l424 1302  
                          l416 11C4                            l408 106E                            l521 097A  
                          l513 087A                            l505 083A                            l417 11CE  
                          l409 1072                            l530 0A86                            l522 0986  
                          l506 083E                            l418 11D8                            l531 0A92  
                          l523 098A                            l507 084A                            l419 11E2  
                          l540 0B9E                            l532 0A96                            l524 0996  
                          l516 0956                            l508 084E                            l460 1AEC  
                          l452 1AAC                            l541 0BA2                            l533 0AA2  
                          l517 095A                            l509 085A                            l453 1AB0  
                          l542 0BAE                            l534 0AA6                            l518 0966  
                          l470 1BF8                            l454 1ABC                            l390 0CDA  
                          l702 2106                            l543 0BB2                            l535 0AB2  
                          l527 0A72                            l519 096A                            l471 1C04  
                          l463 1BC4                            l455 1AC0                            l383 0E9E  
                          l711 219E                            l703 2150                            l544 0BBE  
                          l528 0A76                            l464 1BC8                            l456 1ACC  
                          l384 0C30                            l545 0BC2                            l529 0A82  
                          l465 1BD4                            l457 1AD0                            l393 0DEA  
                          l385 0C34                            l546 0BCE                            l538 0B8E  
                          l490 0638                            l466 1BD8                            l458 1ADC  
                          l378 1FA4                            l394 0DEE                            l386 0D2C  
                          l539 0B92                            l491 0644                            l483 0604  
                          l467 1BE4                            l459 1AE0                            l379 1FAE  
                          l395 0DFA                            l387 0CBC                            l731 23CE  
                          l484 0608                            l468 1BE8                            l388 0CC6  
                          l724 23D6                            l716 21F6                            l485 0614  
                          l469 1BF4                            l389 0CD0                            l494 071E  
                          l486 0618                            l398 1122                            l495 0722  
                          l487 0624                            l399 0EB4                            l496 072E  
                          l488 0628                            l576 27E6                            l737 26F6  
                          l497 0732                            l489 0634                            l729 23D2  
                          l498 073E                            l499 0742                            l589 275E  
                          l696 20FC                            l698 20F4                            l699 20FE  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 0082                            wreg 000FE8                   __CFG_WDT$OFF 000000  
                         l1153 264E                           l3012 0762                           l3120 0AFC  
                         l3200 1FB2                           l3114 0AB6                           l3018 07A8  
                         l3052 08C4                           l3204 1FBA                           l3046 087E  
                         l3206 1FFE                           l4030 2122                           l4014 20DC  
                         l3080 099A                           l3320 0F68                           l4024 210C  
                         l4042 2154                           l4034 2130                           l3500 2552  
                         l3148 0BD2                           l3340 1062                           l3244 0CE4  
                         l3086 09E0                           l3422 1306                           l3270 0DFE  
                         l4070 2210                           l4054 21B8                           l4062 21EE  
                         l4038 2140                           l3416 12E6                           l3264 0DDE  
                         l4072 223C                           l4056 21E4                           l2810 1B36  
                         l3346 1082                           l2804 1AF0                           l3198 1F9C  
                         l3480 24EE                           l2744 27F4                           l3456 2750  
                         l3482 24FA                           l3474 24D0                           l2914 03FE  
                         l2762 196A                           l3492 2530                           l3484 2500  
                         l3468 24BA                           l3820 2610                           l2932 04B8  
                         l2860 01D2                           l2836 1C08                           l3396 11EC  
                         l2950 0572                           l3806 23C2                           l3496 253E  
                         l3816 25FE                           l3818 260A                           l2778 1A20  
                         l3828 2640                           l2878 028A                           l3790 232E  
                         l2984 068E                           l2896 0344                           l3784 22F2  
                         l2978 0648                           l3778 2294                           _LATA 000F89  
                         _LATB 000F8A                           _LATC 000F8B                           u3200 0AD6  
                         u3120 09BA                           u3040 089E                           _LATD 000F8C  
                         _LATE 000F8D                           u3205 0ACA                           u3125 09AE  
                         u3045 0892                           u2405 19FC                           u2350 18E6  
                         u3410 0D04                           u2355 18DA                           u4060 2832  
                         u3420 0D50                           u4140 22B2                           u2605 01AE  
                         u2365 1946                           u4070 283E                           u2710 037A  
                         u2630 0206                           u2390 199C                           u3415 0CF8  
                         u3280 0BF2                           u2560 1C28                           u2480 1B10  
                         u3425 0D44                           u4146 22B4                           u2715 036E  
                         u2635 01FA                           u2395 1990                           u3435 0DB0  
                         u3540 0F88                           u3285 0BE6                           u2805 054E  
                         u2725 03DA                           u2645 0266                           u2565 1C1C  
                         u2485 1B04                           u2750 0434                           u2670 02C0  
                         u2590 014E                           u3550 0FD4                           u3545 0F7C  
                         u2755 0428                           u2675 02B4                           u2595 0142  
                         u3555 0FC8                           u2765 0494                           u2685 0320  
                         u3565 1034                           u2790 04EE                           u3670 120C  
                         u2960 0782                           u2880 0668                           u3680 1258  
                         u2795 04E2                           u3675 1200                           u2965 0776  
                         u2885 065C                           u3685 124C                           u4727 2752  
                         u3695 12B8            __size_of_CANSetMask 039E                           _main 20AE  
                         _read 0080                           fsr0h 000FEA                           fsr1h 000FE2  
           i2___lwdiv@quotient 0022                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         _step 0081                           btemp 003B               __end_of_ADC_Read 2732  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 0110                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 27EC                   _status_array 00D3  
              _brake_value_inc 007E           _remote_frame_handler 2248     __size_of_CANreceiveMessage 050C  
                        ?_main 0001                __end_of___awdiv 255C                          _T0CON 000FD5  
              ___awdiv@divisor 00BA                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 00F8                __end_of___lwdiv 2658                          i1l430 163E  
                        i1l581 2814                          i1l690 00C0                          i1l692 00C8  
                        i1l684 00B8                          i1l687 00B4                          i2l681 1EAC  
              ___awdiv@counter 00BC                          _TMR0H 000FD7                          _TMR1H 000FCF  
                        _TMR0L 000FD6                          _TMR3H 000FB3                          _TMR1L 000FCE  
                        _TMR3L 000FB2              _CANisRxReady$3284 0001                          _TRISA 000F92  
                        _TRISB 000F93                          _TRISC 000F94                          _TRISD 000F95  
                        _TRISE 000F96                  __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 1EE8  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 00CA  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 01C8           __end_of_CANisRxReady 2818  
                        tablat 000FF5           __end_of_CANisTxReady 27EC               __end_ofi2___wmul 27C8  
                        status 000FD8             __size_ofi2___awdiv 0084                 __CFG_PBADEN$ON 000000  
           __size_ofi2___lwdiv 0052                __initialization 26AA                   __end_of_main 2248  
__size_of_board_initialization 00C4               _brake_signal_CAN 007D          ?_remote_frame_handler 0001  
                       ??_main 00D2                  __activetblptr 000002              _CANisTxReady$3282 00B8  
                       _ADCON1 000FC1                         _CANCON 000F6F                         _ADRESH 000FC4  
             ___awdiv@dividend 00B8                __CFG_BBSIZ$1024 000000                         i1l3610 179E  
                       i1l3630 1860                         i1l3622 1828                         i1l3560 15AC  
                       i2l1153 26A0                         i1l3634 187C                         i1l3626 1844  
                       i1l3618 180C                         i1l3636 18AE                         i1l3572 1606  
                       i1l3564 15CA                         i1l3556 158E                         i1l3548 151E  
                       i1l3574 1638                         i1l3568 15E8                         i2l4110 1DB2  
                       i2l4112 1DBE                         i2l4122 1DD4                         i2l4114 1DC0  
                       i1l3990 0096                         i1l3982 0066                         i2l4160 1EAA  
                       i2l4136 1E24                         i2l4146 1E5A                         i2l4138 1E46  
                       i2l3900 2696                         i2l3860 259E                         i2l3852 2580  
                       i2l3870 25BE                         i2l3862 25A2                         i2l3846 2570  
                       i2l3858 2596                         i2l3874 25C8                         i2l3890 2676  
                       i2l3892 267A                         i2l3878 25D6                         i2l3888 266E  
                       _RXB0D0 000F66                         _RXB0D1 000F67                         _RXB0D2 000F68  
                       _RXB0D3 000F69                         _RXB0D4 000F6A                         _RXB1D0 000F56  
                       _RXB0D5 000F6B                         _RXB1D1 000F57                         _RXB0D6 000F6C  
                       _RXB1D2 000F58                         _RXB0D7 000F6D                         _RXB1D3 000F59  
                       _RXB1D4 000F5A                         _RXB1D5 000F5B                         _RXB1D6 000F5C  
                       _RXB1D7 000F5D                         _TXB0D0 000F46                         _TXB0D1 000F47  
                       _TXB0D2 000F48                         _TXB0D3 000F49                         _TXB1D0 000F36  
                       _TXB0D4 000F4A                         _TXB1D1 000F37                         _TXB0D5 000F4B  
                       _TXB1D2 000F38                         _TXB0D6 000F4C                         _TXB1D3 000F39  
                       _TXB0D7 000F4D                         _TXB2D0 000F26                         _TXB1D4 000F3A  
                       _TXB2D1 000F27                         _TXB1D5 000F3B                         _TXB2D2 000F28  
                       _TXB1D6 000F3C                         _TXB2D3 000F29                         _TXB1D7 000F3D  
                       _TXB2D4 000F2A                         _TXB2D5 000F2B                         _TXB2D6 000F2C  
                       _TXB2D7 000F2D             CANsendMessage@data 00BC             CANsendMessage@tamp 00C4  
            __end_of_ISR_Bassa 0110               __end_of_delay_ms 276C          __size_of_CANSetFilter 0B06  
               __CFG_XINST$OFF 000000                         ___wmul 276C                      ??___awdiv 00BC  
               __CFG_STVREN$ON 000000                      ??___lwdiv 00BC                   ??_CANSetMask 00BD  
                       clear_0 26B0                         clear_1 26C0               ___awdiv@quotient 00BE  
               i2___awdiv@sign 0029                __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 25E0  
                    ?_ADC_Read 0001              __end_ofi2___lwdiv 26AA                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  _home_position 007F  
                 _CANSetFilter 0114                     __accesstop 0060        __end_of__initialization 26E6  
           __end_of_CANSetMask 1C50                  ___rparam_used 000001      __size_of_CANisRXwarningON 000C  
               __pcstackCOMRAM 0001                      ?_ISR_Alta 0001                   __pidataBANK0 2842  
       ??_remote_frame_handler 00C8                   _ENC1_measure 01C8          CANSetFilter@numBuffer 00C1  
                    ?i2___wmul 001E      __size_of_CANisTXwarningON 000C                   _ENC2_measure 01C9  
                   ??_ADC_Read 00C0          __size_of_CANisRxReady 0016          __size_of_CANisTxReady 0024  
     __end_of_CANOperationMode 2802                     __pbssBANK0 0060        __size_of_CANsendMessage 078C  
                   ??_ISR_Alta 00A2                        ?___wmul 00B8                     _gap_time_1 0034  
                   _gap_time_2 0036               WriteTimer0@timer 0020                  ??_WriteTimer0 0020  
                 _CANisRxReady 2802                        _CANSTAT 000F6E                   _CANisTxReady 27C8  
                      _BRGCON1 000F70                        _BRGCON2 000F71                        _BRGCON3 000F72  
                   ??i2___wmul 0022                  _int_counter_1 0060                  _int_counter_2 0064  
       __size_of_CANInitialize 01C6                      ?_delay_ms 00BE                        _RXB0DLC 000F65  
                      _RXB1DLC 000F55                        _RXB0CON 000F60                        _RXB1CON 000F50  
                      _TXB0DLC 000F45                        _TXB1DLC 000F35                        _TXB2DLC 000F25  
                   _distance_1 0078                     _distance_2 007A            CANsendMessage@flags 00BF  
                   _count_flag 01CD                        __Hparam 0000                        __Lparam 0000  
             delay_ms@value_ms 00BE                        ___awdiv 249E                __size_of___wmul 0036  
                      ___lwdiv 25E0           CANInitialize@propSeg 00CF                        __pcinit 26AA  
                      __ramtop 0300                        __ptext0 20AE                        __ptext1 2248  
                      __ptext2 0C1A                        __ptext3 27C8                        __ptext4 23DA  
                      __ptext5 2732                        __ptext6 276C                        __ptext7 1EE8  
                      __ptext8 18B2                        __ptext9 0114                      _T0CONbits 000FD5  
                    _T1CONbits 000FCD                      _T3CONbits 000FB1            __end_of_WriteTimer0 282A  
                   ??_delay_ms 00C0         CANreceiveMessage@error 000B   __end_of_board_initialization 249E  
               __pintcode_body 1C50           end_of_initialization 26E6                  _Analogic_Mode 007C  
                __Lmediumconst 0000                        int_func 1C50            i2___wmul@multiplier 001E  
             _CANisRXwarningON 2836                  _CANInitialize 1EE8                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTAbits 000F80                 CANSetMask@mask 00B8  
                    _PORTCbits 000F82              _correction_factor 0076                 CANSetMask@tamp 00C2  
               CANSetMask@type 00BC               _CANisTXwarningON 282A              __size_of_ADC_Read 003E  
                    i2___awdiv 255C              i2___lwdiv@divisor 0020                      i2___lwdiv 2658  
            i2___lwdiv@counter 0024        _clock_counter_reference 0074                 _CANsendMessage 0C1A  
             CANInitialize@BRP 00C9               CANInitialize@SJW 00C8                 ?_CANInitialize 00C6  
           i2___awdiv@dividend 0024                     ?_ISR_Bassa 0001              __size_of_ISR_Alta 1EE0  
               __end_of___wmul 27A2                    _WriteTimer0 2818               i2___wmul@product 0022  
          start_initialization 26AA             i2___awdiv@quotient 002A              __size_ofi2___wmul 0026  
          CANSetMask@numBuffer 00C1                     ?i2___awdiv 0024         __end_of_CANsendMessage 13A6  
                   ?i2___lwdiv 001E              ?_CANOperationMode 0001             ??_CANOperationMode 00B8  
   CANInitialize@FilterConfig1 00D0     CANInitialize@FilterConfig2 00D1           _board_initialization 23DA  
                     ??___wmul 00BC                    __pdataBANK0 00D2               __CFG_LPT1OSC$OFF 000000  
__size_of_remote_frame_handler 0192             _brake_value_degree 0038         CANInitialize@phaseSeg1 00C6  
       CANInitialize@phaseSeg2 00C7                    __pbssCOMRAM 002C                  __pcstackBANK0 00A2  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72              __size_of_delay_ms 003A  
              ?_CANsendMessage 00B8                ??_CANInitialize 00CB             CANSetFilter@filter 00B8  
             ___lwdiv@dividend 00B8          ?_board_initialization 0001                    ??_ISR_Bassa 000D  
                    __pintcode 0008                       ?___awdiv 00B8                       ?___lwdiv 00B8  
                  __pintcodelo 0018              WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2842  
                  _brake_value 00A1                    _COMSTATbits 000F74                       _ADC_Read 26F4  
             ___lwdiv@quotient 00BC                    ??i2___awdiv 0028                    ??i2___lwdiv 0022  
        CANreceiveMessage@tamp 000C                 ___wmul@product 00BC                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2   _delay_quartz_frequency_value 00D2                       _PIE1bits 000F9D  
                     _IPR3bits 000FA5                       _PIE2bits 000FA0                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 2836                       i1u405_25 1888                       i1u385_20 145E  
                     i1u385_26 1460                       i1u386_20 148C                       i1u394_25 1612  
                     i1u386_26 148E                       i1u396_20 16E6                       i1u388_25 14A2  
                     i1u396_26 16E8                       i1u397_20 1710                       i1u397_26 1712  
                     i1u399_25 1724                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _PIR3bits 000FA4                       i2u468_40 1E2E                       i2u468_46 1E30  
                     _RXB0EIDH 000F63                       _RXB0EIDL 000F64                       _RXB1EIDH 000F53  
                     _RXB1EIDL 000F54                       _ISR_Alta 0008                       _RCONbits 000FD0  
             __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61                       _RXB0SIDL 000F62  
                     _RXF0EIDH 000F02                       _RXB1SIDH 000F51                       _RXF0EIDL 000F03  
                     _RXB1SIDL 000F52                       _RXF1EIDH 000F06                       _RXF1EIDL 000F07  
                     _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E  
                     _RXF3EIDL 000F0F                       _RXF4EIDH 000F12                       _RXF4EIDL 000F13  
                     _RXF5EIDH 000F16                       _RXF5EIDL 000F17                       _RXF0SIDH 000F00  
                     _RXF0SIDL 000F01                       _TXB0EIDH 000F43                       _RXF1SIDH 000F04  
                     _TXB0EIDL 000F44                       _RXF1SIDL 000F05                       _TXB1EIDH 000F33  
                     _RXF2SIDH 000F08                       _TXB1EIDL 000F34                       _RXF2SIDL 000F09  
                     _TXB2EIDH 000F23                       _RXF3SIDH 000F0C                       _TXB2EIDL 000F24  
                     _RXF3SIDL 000F0D                       _RXF4SIDH 000F10                       _RXF4SIDL 000F11  
                     _RXF5SIDH 000F14                       _RXF5SIDL 000F15                       _RXM0EIDH 000F1A  
                     _RXM0EIDL 000F1B                       _TXB0SIDH 000F41                       _RXM1EIDH 000F1E  
                     _TXB0SIDL 000F42                       _RXM1EIDL 000F1F                       _TXB1SIDH 000F31  
                     _TXB1SIDL 000F32                       _TXB2SIDH 000F21                       _TXB2SIDL 000F22  
                    _timer_off 002C                       _RXM0SIDH 000F18                       _RXM0SIDL 000F19  
                     _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D                       _RXERRCNT 000F75  
                     _TXERRCNT 000F76                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 00B8                       i2___wmul 27A2              i2___awdiv@divisor 0026  
            i2___awdiv@counter 0028                  ?_CANSetFilter 00B8                    _INTCON2bits 000FF1  
                  _INTCON3bits 000FF0                      copy_data0 26DA                     _CANCONbits 000F6F  
                     __Hrparam 0000                   _RXB0SIDLbits 000F62         ??_board_initialization 00D2  
                     __Lrparam 0000                   _RXB1SIDLbits 000F52                     _CANSetMask 18B2  
             __size_of___awdiv 00BE          i2___wmul@multiplicand 0020               __size_of___lwdiv 0078  
              _remote_frame_id 0068                       _Tx_retry 01CC                   ?_WriteTimer0 001E  
                 _RXF0SIDLbits 000F01                       _delay_ms 2732                ___lwdiv@divisor 00BA  
                 _RXF1SIDLbits 000F05                  _TMR1_overflow 01CA                ___lwdiv@counter 00BE  
               ??_CANSetFilter 00BD                       __ptext10 27EC                       __ptext11 25E0  
                     __ptext20 27A2                       __ptext12 282A                       __ptext21 2658  
                     __ptext13 2836                       __ptext22 255C                       __ptext14 26F4  
                     __ptext23 2818                       __ptext15 249E                       __ptext17 13A6  
                     __ptext18 2802                   _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D  
                 _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00BE  
                 _remote_frame 01CE                  _TMR3_overflow 01CB                  __size_of_main 019A  
         CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32  
                     _timer_on 0030                   _TXB2SIDLbits 000F22                       int$flags 003B  
    __size_of_CANOperationMode 0016                  ?_CANisRxReady 0001                  ?_CANisTxReady 0001  
                  _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19  
                  _RXB0CONbits 000F60                    _RXB1CONbits 000F50              _CANreceiveMessage 13A6  
                 _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2               ??_CANsendMessage 00C0  
                _wheel_speed_1 006C                  _wheel_speed_2 0070             ?_CANreceiveMessage 0001  
     CANsendMessage@identifier 00B8   __end_of_remote_frame_handler 23DA                       intlevel1 0000  
                     intlevel2 0000               CANSetFilter@tamp 00C2               CANSetFilter@type 00BC  
          ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00B8                 ??_CANisRxReady 0001  
                  ?_CANSetMask 00B8                 ??_CANisTxReady 00B8                 _distance_array 0091  
    __end_of_CANreceiveMessage 18B2              ?_CANisRXwarningON 0001                    _speed_array 0099  
           ??_CANisRXwarningON 00B8          __end_of_CANInitialize 20AE              ?_CANisTXwarningON 0001  
