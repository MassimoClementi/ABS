

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jun 07 19:21:50 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  002B3C                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _delay_quartz_frequency_value
    46  002B3C  10                 	db	16
    47                           
    48                           ;initializer for _remote_frame_array
    49  002B3D  01                 	db	1
    50  002B3E  00                 	db	0
    51  002B3F  00                 	db	0
    52  002B40  00                 	db	0
    53  002B41  00                 	db	0
    54  002B42  00                 	db	0
    55  002B43  00                 	db	0
    56  002B44  00                 	db	0
    57  0000                     _RXB1CON	set	3920
    58  0000                     _RXB1CONbits	set	3920
    59  0000                     _RXB1D0	set	3926
    60  0000                     _RXB1D1	set	3927
    61  0000                     _RXB1D2	set	3928
    62  0000                     _RXB1D3	set	3929
    63  0000                     _RXB1D4	set	3930
    64  0000                     _RXB1D5	set	3931
    65  0000                     _RXB1D6	set	3932
    66  0000                     _RXB1D7	set	3933
    67  0000                     _RXB1DLC	set	3925
    68  0000                     _RXB1DLCbits	set	3925
    69  0000                     _RXB1EIDH	set	3923
    70  0000                     _RXB1EIDL	set	3924
    71  0000                     _RXB1SIDH	set	3921
    72  0000                     _RXB1SIDL	set	3922
    73  0000                     _RXB1SIDLbits	set	3922
    74  0000                     _RXF0EIDH	set	3842
    75  0000                     _RXF0EIDL	set	3843
    76  0000                     _RXF0SIDH	set	3840
    77  0000                     _RXF0SIDL	set	3841
    78  0000                     _RXF0SIDLbits	set	3841
    79  0000                     _RXF1EIDH	set	3846
    80  0000                     _RXF1EIDL	set	3847
    81  0000                     _RXF1SIDH	set	3844
    82  0000                     _RXF1SIDL	set	3845
    83  0000                     _RXF1SIDLbits	set	3845
    84  0000                     _RXF2EIDH	set	3850
    85  0000                     _RXF2EIDL	set	3851
    86  0000                     _RXF2SIDH	set	3848
    87  0000                     _RXF2SIDL	set	3849
    88  0000                     _RXF2SIDLbits	set	3849
    89  0000                     _RXF3EIDH	set	3854
    90  0000                     _RXF3EIDL	set	3855
    91  0000                     _RXF3SIDH	set	3852
    92  0000                     _RXF3SIDL	set	3853
    93  0000                     _RXF3SIDLbits	set	3853
    94  0000                     _RXF4EIDH	set	3858
    95  0000                     _RXF4EIDL	set	3859
    96  0000                     _RXF4SIDH	set	3856
    97  0000                     _RXF4SIDL	set	3857
    98  0000                     _RXF4SIDLbits	set	3857
    99  0000                     _RXF5EIDH	set	3862
   100  0000                     _RXF5EIDL	set	3863
   101  0000                     _RXF5SIDH	set	3860
   102  0000                     _RXF5SIDL	set	3861
   103  0000                     _RXF5SIDLbits	set	3861
   104  0000                     _RXM0EIDH	set	3866
   105  0000                     _RXM0EIDL	set	3867
   106  0000                     _RXM0SIDH	set	3864
   107  0000                     _RXM0SIDL	set	3865
   108  0000                     _RXM0SIDLbits	set	3865
   109  0000                     _RXM1EIDH	set	3870
   110  0000                     _RXM1EIDL	set	3871
   111  0000                     _RXM1SIDH	set	3868
   112  0000                     _RXM1SIDL	set	3869
   113  0000                     _RXM1SIDLbits	set	3869
   114  0000                     _TXB0CONbits	set	3904
   115  0000                     _TXB0D0	set	3910
   116  0000                     _TXB0D1	set	3911
   117  0000                     _TXB0D2	set	3912
   118  0000                     _TXB0D3	set	3913
   119  0000                     _TXB0D4	set	3914
   120  0000                     _TXB0D5	set	3915
   121  0000                     _TXB0D6	set	3916
   122  0000                     _TXB0D7	set	3917
   123  0000                     _TXB0DLC	set	3909
   124  0000                     _TXB0DLCbits	set	3909
   125  0000                     _TXB0EIDH	set	3907
   126  0000                     _TXB0EIDL	set	3908
   127  0000                     _TXB0SIDH	set	3905
   128  0000                     _TXB0SIDL	set	3906
   129  0000                     _TXB0SIDLbits	set	3906
   130  0000                     _TXB1CONbits	set	3888
   131  0000                     _TXB1D0	set	3894
   132  0000                     _TXB1D1	set	3895
   133  0000                     _TXB1D2	set	3896
   134  0000                     _TXB1D3	set	3897
   135  0000                     _TXB1D4	set	3898
   136  0000                     _TXB1D5	set	3899
   137  0000                     _TXB1D6	set	3900
   138  0000                     _TXB1D7	set	3901
   139  0000                     _TXB1DLC	set	3893
   140  0000                     _TXB1DLCbits	set	3893
   141  0000                     _TXB1EIDH	set	3891
   142  0000                     _TXB1EIDL	set	3892
   143  0000                     _TXB1SIDH	set	3889
   144  0000                     _TXB1SIDL	set	3890
   145  0000                     _TXB1SIDLbits	set	3890
   146  0000                     _TXB2CONbits	set	3872
   147  0000                     _TXB2D0	set	3878
   148  0000                     _TXB2D1	set	3879
   149  0000                     _TXB2D2	set	3880
   150  0000                     _TXB2D3	set	3881
   151  0000                     _TXB2D4	set	3882
   152  0000                     _TXB2D5	set	3883
   153  0000                     _TXB2D6	set	3884
   154  0000                     _TXB2D7	set	3885
   155  0000                     _TXB2DLC	set	3877
   156  0000                     _TXB2DLCbits	set	3877
   157  0000                     _TXB2EIDH	set	3875
   158  0000                     _TXB2EIDL	set	3876
   159  0000                     _TXB2SIDH	set	3873
   160  0000                     _TXB2SIDL	set	3874
   161  0000                     _TXB2SIDLbits	set	3874
   162  0000                     _ADCON0bits	set	4034
   163  0000                     _ADCON1	set	4033
   164  0000                     _ADCON2bits	set	4032
   165  0000                     _ADRESH	set	4036
   166  0000                     _BRGCON1	set	3952
   167  0000                     _BRGCON2	set	3953
   168  0000                     _BRGCON2bits	set	3953
   169  0000                     _BRGCON3	set	3954
   170  0000                     _BRGCON3bits	set	3954
   171  0000                     _CANCON	set	3951
   172  0000                     _CANCONbits	set	3951
   173  0000                     _CANSTAT	set	3950
   174  0000                     _COMSTATbits	set	3956
   175  0000                     _INTCON2bits	set	4081
   176  0000                     _INTCON3bits	set	4080
   177  0000                     _INTCONbits	set	4082
   178  0000                     _IPR1bits	set	3999
   179  0000                     _IPR2bits	set	4002
   180  0000                     _IPR3bits	set	4005
   181  0000                     _LATA	set	3977
   182  0000                     _LATB	set	3978
   183  0000                     _LATC	set	3979
   184  0000                     _LATD	set	3980
   185  0000                     _LATE	set	3981
   186  0000                     _PIE1bits	set	3997
   187  0000                     _PIE2bits	set	4000
   188  0000                     _PIE3bits	set	4003
   189  0000                     _PIR1bits	set	3998
   190  0000                     _PIR2bits	set	4001
   191  0000                     _PIR3bits	set	4004
   192  0000                     _PORTAbits	set	3968
   193  0000                     _PORTCbits	set	3970
   194  0000                     _RCONbits	set	4048
   195  0000                     _RXB0CON	set	3936
   196  0000                     _RXB0CONbits	set	3936
   197  0000                     _RXB0D0	set	3942
   198  0000                     _RXB0D1	set	3943
   199  0000                     _RXB0D2	set	3944
   200  0000                     _RXB0D3	set	3945
   201  0000                     _RXB0D4	set	3946
   202  0000                     _RXB0D5	set	3947
   203  0000                     _RXB0D6	set	3948
   204  0000                     _RXB0D7	set	3949
   205  0000                     _RXB0DLC	set	3941
   206  0000                     _RXB0DLCbits	set	3941
   207  0000                     _RXB0EIDH	set	3939
   208  0000                     _RXB0EIDL	set	3940
   209  0000                     _RXB0SIDH	set	3937
   210  0000                     _RXB0SIDL	set	3938
   211  0000                     _RXB0SIDLbits	set	3938
   212  0000                     _RXERRCNT	set	3957
   213  0000                     _T0CON	set	4053
   214  0000                     _T0CONbits	set	4053
   215  0000                     _T1CON	set	4045
   216  0000                     _T1CONbits	set	4045
   217  0000                     _T3CON	set	4017
   218  0000                     _T3CONbits	set	4017
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _TMR1H	set	4047
   222  0000                     _TMR1L	set	4046
   223  0000                     _TMR3H	set	4019
   224  0000                     _TMR3L	set	4018
   225  0000                     _TRISA	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISC	set	3988
   228  0000                     _TRISD	set	3989
   229  0000                     _TRISE	set	3990
   230  0000                     _TXERRCNT	set	3958
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  002A12                     __pcinit:
   236                           	opt stack 0
   237  002A12                     start_initialization:
   238                           	opt stack 0
   239  002A12                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Clear objects allocated to BANK0 (74 bytes)
   243  002A12  EE00  F060         	lfsr	0,__pbssBANK0
   244  002A16  0E4A               	movlw	74
   245  002A18                     clear_0:
   246  002A18  6AEE               	clrf	postinc0,c
   247  002A1A  06E8               	decf	wreg,f,c
   248  002A1C  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   251  002A1E  6A42               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   252  002A20  6A41               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   253                           
   254                           ; Clear objects allocated to COMRAM (28 bytes)
   255  002A22  EE00  F025         	lfsr	0,__pbssCOMRAM
   256  002A26  0E1C               	movlw	28
   257  002A28                     clear_1:
   258  002A28  6AEE               	clrf	postinc0,c
   259  002A2A  06E8               	decf	wreg,f,c
   260  002A2C  E1FD               	bnz	clear_1
   261                           
   262                           ; Initialize objects allocated to BANK0 (9 bytes)
   263                           ; load TBLPTR registers with __pidataBANK0
   264  002A2E  0E3C               	movlw	low __pidataBANK0
   265  002A30  6EF6               	movwf	tblptrl,c
   266  002A32  0E2B               	movlw	high __pidataBANK0
   267  002A34  6EF7               	movwf	tblptrh,c
   268  002A36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   269  002A38  6EF8               	movwf	tblptru,c
   270  002A3A  EE00  F0D9         	lfsr	0,__pdataBANK0
   271  002A3E  EE10 F009          	lfsr	1,9
   272  002A42                     copy_data0:
   273  002A42  0009               	tblrd		*+
   274  002A44  CFF5 FFEE          	movff	tablat,postinc0
   275  002A48  50E5               	movf	postdec1,w,c
   276  002A4A  50E1               	movf	fsr1l,w,c
   277  002A4C  E1FA               	bnz	copy_data0
   278  002A4E                     end_of_initialization:
   279                           	opt stack 0
   280  002A4E                     __end_of__initialization:
   281                           	opt stack 0
   282  002A4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  002A50  6EF8               	movwf	tblptru,c
   284  002A52  0100               	movlb	0
   285  002A54  EF79  F00E         	goto	_main	;jump to C main() function
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           postdec1	equ	0xFE5
   293                           fsr1l	equ	0xFE1
   294                           
   295                           	psect	bitbssCOMRAM
   296  000208                     __pbitbssCOMRAM:
   297                           	opt stack 0
   298  000208                     _ENC1_measure:
   299                           	opt stack 0
   300  000208                     	ds	1
   301  000209                     _ENC2_measure:
   302                           	opt stack 0
   303  000209                     	ds	1
   304  00020A                     _TMR1_overflow:
   305                           	opt stack 0
   306  00020A                     	ds	1
   307  00020B                     _TMR3_overflow:
   308                           	opt stack 0
   309  00020B                     	ds	1
   310  00020C                     _Tx_retry:
   311                           	opt stack 0
   312  00020C                     	ds	1
   313  00020D                     _count_flag:
   314                           	opt stack 0
   315  00020D                     	ds	1
   316  00020E                     _distance_reached_flag:
   317                           	opt stack 0
   318  00020E                     	ds	1
   319  00020F                     _distance_set_flag:
   320                           	opt stack 0
   321  00020F                     	ds	1
   322  000210                     _remote_frame:
   323                           	opt stack 0
   324  000210                     	ds	1
   325  000211                     _x:
   326                           	opt stack 0
   327  000211                     	ds	1
   328  000212                     _y:
   329                           	opt stack 0
   330  000212                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	bssCOMRAM
   341  000025                     __pbssCOMRAM:
   342                           	opt stack 0
   343  000025                     _timer_off:
   344                           	opt stack 0
   345  000025                     	ds	4
   346  000029                     _timer_on:
   347                           	opt stack 0
   348  000029                     	ds	4
   349  00002D                     _gap_time_1:
   350                           	opt stack 0
   351  00002D                     	ds	2
   352  00002F                     _gap_time_2:
   353                           	opt stack 0
   354  00002F                     	ds	2
   355  000031                     _msg:
   356                           	opt stack 0
   357  000031                     	ds	15
   358  000040                     _brake_value_degree:
   359                           	opt stack 0
   360  000040                     	ds	1
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           postdec1	equ	0xFE5
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	bssBANK0
   371  000060                     __pbssBANK0:
   372                           	opt stack 0
   373  000060                     _data_debug1:
   374                           	opt stack 0
   375  000060                     	ds	8
   376  000068                     _distance_actual_value:
   377                           	opt stack 0
   378  000068                     	ds	4
   379  00006C                     _int_counter_1:
   380                           	opt stack 0
   381  00006C                     	ds	4
   382  000070                     _int_counter_2:
   383                           	opt stack 0
   384  000070                     	ds	4
   385  000074                     _remote_frame_id:
   386                           	opt stack 0
   387  000074                     	ds	4
   388  000078                     _wheel_speed_1:
   389                           	opt stack 0
   390  000078                     	ds	4
   391  00007C                     _wheel_speed_2:
   392                           	opt stack 0
   393  00007C                     	ds	4
   394  000080                     _clock_counter_reference:
   395                           	opt stack 0
   396  000080                     	ds	2
   397  000082                     _distance_1:
   398                           	opt stack 0
   399  000082                     	ds	2
   400  000084                     _distance_2:
   401                           	opt stack 0
   402  000084                     	ds	2
   403  000086                     _distance_set_counter_1:
   404                           	opt stack 0
   405  000086                     	ds	2
   406  000088                     _distance_set_counter_2:
   407                           	opt stack 0
   408  000088                     	ds	2
   409  00008A                     _distance_set_value:
   410                           	opt stack 0
   411  00008A                     	ds	2
   412  00008C                     _Analogic_Mode:
   413                           	opt stack 0
   414  00008C                     	ds	1
   415  00008D                     _brake_signal_CAN:
   416                           	opt stack 0
   417  00008D                     	ds	1
   418  00008E                     _brake_value_inc:
   419                           	opt stack 0
   420  00008E                     	ds	1
   421  00008F                     _home_position:
   422                           	opt stack 0
   423  00008F                     	ds	1
   424  000090                     _step:
   425                           	opt stack 0
   426  000090                     	ds	1
   427  000091                     _distance_array:
   428                           	opt stack 0
   429  000091                     	ds	8
   430  000099                     _speed_array:
   431                           	opt stack 0
   432  000099                     	ds	8
   433  0000A1                     _status_array:
   434                           	opt stack 0
   435  0000A1                     	ds	8
   436  0000A9                     _brake_value:
   437                           	opt stack 0
   438  0000A9                     	ds	1
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	dataBANK0
   449  0000D9                     __pdataBANK0:
   450                           	opt stack 0
   451  0000D9                     _delay_quartz_frequency_value:
   452                           	opt stack 0
   453  0000D9                     	ds	1
   454  0000DA                     _remote_frame_array:
   455                           	opt stack 0
   456  0000DA                     	ds	8
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           postdec1	equ	0xFE5
   464                           fsr1l	equ	0xFE1
   465                           
   466                           	psect	cstackBANK1
   467  000100                     __pcstackBANK1:
   468                           	opt stack 0
   469  000100                     ?___aldiv:
   470                           	opt stack 0
   471  000100                     CANInitialize@phaseSeg1:
   472                           	opt stack 0
   473  000100                     ___aldiv@dividend:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x0
   477  000100                     	ds	1
   478  000101                     CANInitialize@phaseSeg2:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x1
   482  000101                     	ds	1
   483  000102                     CANInitialize@SJW:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x2
   487  000102                     	ds	1
   488  000103                     CANInitialize@BRP:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x3
   492  000103                     	ds	1
   493  000104                     CANInitialize@flags:
   494                           	opt stack 0
   495  000104                     ___aldiv@divisor:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x4
   499  000104                     	ds	1
   500  000105                     ??_CANInitialize:
   501                           
   502                           ; 0 bytes @ 0x5
   503  000105                     	ds	3
   504  000108                     ___aldiv@counter:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x8
   508  000108                     	ds	1
   509  000109                     ___aldiv@sign:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x9
   513  000109                     	ds	1
   514  00010A                     ___aldiv@quotient:
   515                           	opt stack 0
   516                           
   517                           ; 4 bytes @ 0xA
   518  00010A                     	ds	4
   519  00010E                     ??_main:
   520                           
   521                           ; 0 bytes @ 0xE
   522  00010E                     	ds	4
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	cstackBANK0
   533  0000AA                     __pcstackBANK0:
   534                           	opt stack 0
   535  0000AA                     ?i2___awdiv:
   536                           	opt stack 0
   537  0000AA                     i2___awdiv@dividend:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x0
   541  0000AA                     	ds	2
   542  0000AC                     i2___awdiv@divisor:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x2
   546  0000AC                     	ds	2
   547  0000AE                     i2___awdiv@counter:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x4
   551  0000AE                     	ds	1
   552  0000AF                     i2___awdiv@sign:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x5
   556  0000AF                     	ds	1
   557  0000B0                     i2___awdiv@quotient:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x6
   561  0000B0                     	ds	2
   562  0000B2                     ??_ISR_Alta:
   563                           
   564                           ; 0 bytes @ 0x8
   565  0000B2                     	ds	22
   566  0000C8                     ?___wmul:
   567                           	opt stack 0
   568  0000C8                     ?___awdiv:
   569                           	opt stack 0
   570  0000C8                     ?___lmul:
   571                           	opt stack 0
   572  0000C8                     CANOperationMode@mode:
   573                           	opt stack 0
   574  0000C8                     _CANisTxReady$3278:
   575                           	opt stack 0
   576  0000C8                     ___wmul@multiplier:
   577                           	opt stack 0
   578  0000C8                     ___awdiv@dividend:
   579                           	opt stack 0
   580  0000C8                     CANsendMessage@identifier:
   581                           	opt stack 0
   582  0000C8                     CANSetMask@mask:
   583                           	opt stack 0
   584  0000C8                     CANSetFilter@filter:
   585                           	opt stack 0
   586  0000C8                     ___lmul@multiplier:
   587                           	opt stack 0
   588                           
   589                           ; 4 bytes @ 0x1E
   590  0000C8                     	ds	2
   591  0000CA                     ___wmul@multiplicand:
   592                           	opt stack 0
   593  0000CA                     ___awdiv@divisor:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x20
   597  0000CA                     	ds	2
   598  0000CC                     CANSetMask@type:
   599                           	opt stack 0
   600  0000CC                     CANSetFilter@type:
   601                           	opt stack 0
   602  0000CC                     ___awdiv@counter:
   603                           	opt stack 0
   604  0000CC                     CANsendMessage@data:
   605                           	opt stack 0
   606  0000CC                     ___wmul@product:
   607                           	opt stack 0
   608  0000CC                     ___lmul@multiplicand:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x22
   612  0000CC                     	ds	1
   613  0000CD                     ??_CANSetMask:
   614  0000CD                     ??_CANSetFilter:
   615  0000CD                     ___awdiv@sign:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x23
   619  0000CD                     	ds	1
   620  0000CE                     CANsendMessage@dataLength:
   621                           	opt stack 0
   622  0000CE                     ___awdiv@quotient:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x24
   626  0000CE                     	ds	1
   627  0000CF                     CANsendMessage@flags:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x25
   631  0000CF                     	ds	1
   632  0000D0                     ??_CANsendMessage:
   633  0000D0                     ___lmul@product:
   634                           	opt stack 0
   635                           
   636                           ; 4 bytes @ 0x26
   637  0000D0                     	ds	1
   638  0000D1                     CANSetMask@numBuffer:
   639                           	opt stack 0
   640  0000D1                     CANSetFilter@numBuffer:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x27
   644  0000D1                     	ds	1
   645  0000D2                     CANSetMask@tamp:
   646                           	opt stack 0
   647  0000D2                     CANSetFilter@tamp:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x28
   651  0000D2                     	ds	2
   652  0000D4                     CANsendMessage@tamp:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x2A
   656  0000D4                     	ds	2
   657  0000D6                     CANInitialize@propSeg:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x2C
   661  0000D6                     	ds	1
   662  0000D7                     CANInitialize@FilterConfig1:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x2D
   666  0000D7                     	ds	1
   667  0000D8                     CANInitialize@FilterConfig2:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x2E
   671  0000D8                     	ds	1
   672  0000D9                     tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1l	equ	0xFE1
   680                           
   681                           ; 0 bytes @ 0x2F
   682                           
   683                           	psect	cstackCOMRAM
   684  000001                     __pcstackCOMRAM:
   685                           	opt stack 0
   686  000001                     _CANisRxReady$3280:
   687                           	opt stack 0
   688  000001                     CANreceiveMessage@msg:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x0
   692  000001                     	ds	2
   693  000003                     ??_CANreceiveMessage:
   694                           
   695                           ; 0 bytes @ 0x2
   696  000003                     	ds	8
   697  00000B                     CANreceiveMessage@error:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0xA
   701  00000B                     	ds	1
   702  00000C                     CANreceiveMessage@tamp:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0xB
   706  00000C                     	ds	1
   707  00000D                     ??_ISR_Bassa:
   708                           
   709                           ; 0 bytes @ 0xC
   710  00000D                     	ds	17
   711  00001E                     ?___lwdiv:
   712                           	opt stack 0
   713  00001E                     ?i2___wmul:
   714                           	opt stack 0
   715  00001E                     WriteTimer0@timer0:
   716                           	opt stack 0
   717  00001E                     ___lwdiv@dividend:
   718                           	opt stack 0
   719  00001E                     i2___wmul@multiplier:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x1D
   723  00001E                     	ds	2
   724  000020                     WriteTimer0@timer:
   725                           	opt stack 0
   726  000020                     ___lwdiv@divisor:
   727                           	opt stack 0
   728  000020                     i2___wmul@multiplicand:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x1F
   732  000020                     	ds	2
   733  000022                     ___lwdiv@quotient:
   734                           	opt stack 0
   735  000022                     i2___wmul@product:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x21
   739  000022                     	ds	2
   740  000024                     ___lwdiv@counter:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x23
   744  000024                     	ds	1
   745                           tblptru	equ	0xFF8
   746                           tblptrh	equ	0xFF7
   747                           tblptrl	equ	0xFF6
   748                           tablat	equ	0xFF5
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           postdec1	equ	0xFE5
   752                           fsr1l	equ	0xFE1
   753                           
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 260 in file "ABS_Code.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2  707[None  ] int 
   766 ;; Registers used:
   767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   773 ;;      Params:         0       0       0       0
   774 ;;      Locals:         0       0       0       0
   775 ;;      Temps:          0       0       4       0
   776 ;;      Totals:         0       0       4       0
   777 ;;Total ram usage:        4 bytes
   778 ;; Hardware stack levels required when called:    7
   779 ;; This function calls:
   780 ;;		_CANisRXwarningON
   781 ;;		_CANisTXwarningON
   782 ;;		_CANsendMessage
   783 ;;		___aldiv
   784 ;;		___awdiv
   785 ;;		___lmul
   786 ;;		___wmul
   787 ;;		_board_initialization
   788 ;;		_remote_frame_handler
   789 ;; This function is called by:
   790 ;;		Startup code after reset
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text0
   795  001CF2                     __ptext0:
   796                           	opt stack 0
   797  001CF2                     _main:
   798                           	opt stack 24
   799                           
   800                           ;ABS_Code.c: 261: board_initialization();
   801                           
   802                           ;incstack = 0
   803  001CF2  EC42  F014         	call	_board_initialization	;wreg free
   804                           
   805                           ;ABS_Code.c: 262: step = (11 * (3.14159265358979323846)) / 16;
   806  001CF6  0E02               	movlw	2
   807  001CF8  0100               	movlb	0	; () banked
   808  001CFA  6F90               	movwf	_step& (0+255),b	;volatile
   809  001CFC  D000               	goto	l4553
   810  001CFE                     l4553:
   811                           
   812                           ;ABS_Code.c: 274: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   813  001CFE  EC90  F015         	call	_CANisTXwarningON	;wreg free
   814  001D02  06E8               	decf	wreg,f,c
   815  001D04  B4D8               	btfsc	status,2,c
   816  001D06  D005               	goto	l711
   817  001D08  EC97  F015         	call	_CANisRXwarningON	;wreg free
   818  001D0C  06E8               	decf	wreg,f,c
   819  001D0E  A4D8               	btfss	status,2,c
   820  001D10  D004               	goto	l712
   821  001D12                     l711:
   822                           
   823                           ;ABS_Code.c: 275: PORTAbits.RA1 = 1;
   824  001D12  8280               	bsf	3968,1,c	;volatile
   825                           
   826                           ;ABS_Code.c: 276: COMSTATbits.TXWARN = 0;
   827  001D14  9474               	bcf	3956,2,c	;volatile
   828                           
   829                           ;ABS_Code.c: 277: COMSTATbits.RXWARN = 0;
   830  001D16  9274               	bcf	3956,1,c	;volatile
   831                           
   832                           ;ABS_Code.c: 278: } else {
   833  001D18  D000               	goto	l712
   834  001D1A                     l712:
   835                           
   836                           ;ABS_Code.c: 280: }
   837                           ;ABS_Code.c: 283: if (distance_set_flag == 1) {
   838  001D1A  AE41               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
   839  001D1C  D059               	goto	l4565
   840                           
   841                           ;ABS_Code.c: 284: distance_actual_value = (step * (distance_set_counter_1 + distance_set
      +                          _counter_2)) / 2;
   842  001D1E  0100               	movlb	0	; () banked
   843  001D20  5188               	movf	_distance_set_counter_2& (0+255),w,b	;volatile
   844  001D22  0100               	movlb	0	; () banked
   845  001D24  2586               	addwf	_distance_set_counter_1& (0+255),w,b	;volatile
   846  001D26  0100               	movlb	0	; () banked
   847  001D28  6FC8               	movwf	___wmul@multiplier& (0+255),b
   848  001D2A  0100               	movlb	0	; () banked
   849  001D2C  5189               	movf	(_distance_set_counter_2+1)& (0+255),w,b	;volatile
   850  001D2E  0100               	movlb	0	; () banked
   851  001D30  2187               	addwfc	(_distance_set_counter_1+1)& (0+255),w,b	;volatile
   852  001D32  0100               	movlb	0	; () banked
   853  001D34  6FC9               	movwf	(___wmul@multiplier+1)& (0+255),b
   854  001D36  C090  F0CA         	movff	_step,___wmul@multiplicand	;volatile
   855  001D3A  0100               	movlb	0	; () banked
   856  001D3C  6BCB               	clrf	(___wmul@multiplicand+1)& (0+255),b
   857  001D3E  EC2C  F015         	call	___wmul	;wreg free
   858  001D42  90D8               	bcf	status,0,c
   859  001D44  0100               	movlb	0	; () banked
   860  001D46  31C9               	rrcf	(?___wmul+1)& (0+255),w,b
   861  001D48  0101               	movlb	1	; () banked
   862  001D4A  6F0F               	movwf	(??_main+1)& (0+255),b
   863  001D4C  0100               	movlb	0	; () banked
   864  001D4E  31C8               	rrcf	?___wmul& (0+255),w,b
   865  001D50  0101               	movlb	1	; () banked
   866  001D52  6F0E               	movwf	??_main& (0+255),b
   867  001D54  C10E  F068         	movff	??_main,_distance_actual_value	;volatile
   868  001D58  C10F  F069         	movff	??_main+1,_distance_actual_value+1	;volatile
   869  001D5C  0100               	movlb	0	; () banked
   870  001D5E  6B6A               	clrf	(_distance_actual_value+2)& (0+255),b	;volatile
   871  001D60  6B6B               	clrf	(_distance_actual_value+3)& (0+255),b	;volatile
   872                           
   873                           ; BSR set to: 0
   874                           ;ABS_Code.c: 285: if (distance_actual_value >= distance_set_value) {
   875  001D62  0100               	movlb	0	; () banked
   876  001D64  518A               	movf	_distance_set_value& (0+255),w,b	;volatile
   877  001D66  0101               	movlb	1	; () banked
   878  001D68  6F0E               	movwf	??_main& (0+255),b
   879  001D6A  0100               	movlb	0	; () banked
   880  001D6C  518B               	movf	(_distance_set_value+1)& (0+255),w,b	;volatile
   881  001D6E  0101               	movlb	1	; () banked
   882  001D70  6F0F               	movwf	(??_main+1)& (0+255),b
   883  001D72  0101               	movlb	1	; () banked
   884  001D74  6B10               	clrf	(??_main+2)& (0+255),b
   885  001D76  0101               	movlb	1	; () banked
   886  001D78  6B11               	clrf	(??_main+3)& (0+255),b
   887  001D7A  0101               	movlb	1	; () banked
   888  001D7C  510E               	movf	??_main& (0+255),w,b
   889  001D7E  0100               	movlb	0	; () banked
   890  001D80  5D68               	subwf	_distance_actual_value& (0+255),w,b	;volatile
   891  001D82  0101               	movlb	1	; () banked
   892  001D84  510F               	movf	(??_main+1)& (0+255),w,b
   893  001D86  0100               	movlb	0	; () banked
   894  001D88  5969               	subwfb	(_distance_actual_value+1)& (0+255),w,b	;volatile
   895  001D8A  0101               	movlb	1	; () banked
   896  001D8C  5110               	movf	(??_main+2)& (0+255),w,b
   897  001D8E  0100               	movlb	0	; () banked
   898  001D90  596A               	subwfb	(_distance_actual_value+2)& (0+255),w,b	;volatile
   899  001D92  0101               	movlb	1	; () banked
   900  001D94  5111               	movf	(??_main+3)& (0+255),w,b
   901  001D96  0100               	movlb	0	; () banked
   902  001D98  596B               	subwfb	(_distance_actual_value+3)& (0+255),w,b	;volatile
   903  001D9A  A0D8               	btfss	status,0,c
   904  001D9C  D019               	goto	l4565
   905                           
   906                           ; BSR set to: 0
   907                           ;ABS_Code.c: 286: distance_set_flag = 0;
   908  001D9E  9E41               	bcf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
   909                           
   910                           ; BSR set to: 0
   911                           ;ABS_Code.c: 287: CANsendMessage(0b00000001111, remote_frame_array, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   912  001DA0  0E0F               	movlw	15
   913  001DA2  0100               	movlb	0	; () banked
   914  001DA4  6FC8               	movwf	CANsendMessage@identifier& (0+255),b
   915  001DA6  0E00               	movlw	0
   916  001DA8  6FC9               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   917  001DAA  0E00               	movlw	0
   918  001DAC  6FCA               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   919  001DAE  0E00               	movlw	0
   920  001DB0  6FCB               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   921  001DB2  0EDA               	movlw	low _remote_frame_array
   922  001DB4  0100               	movlb	0	; () banked
   923  001DB6  6FCC               	movwf	CANsendMessage@data& (0+255),b
   924  001DB8  0E00               	movlw	high _remote_frame_array
   925  001DBA  0100               	movlb	0	; () banked
   926  001DBC  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
   927  001DBE  0E08               	movlw	8
   928  001DC0  0100               	movlb	0	; () banked
   929  001DC2  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
   930  001DC4  0EFC               	movlw	252
   931  001DC6  0100               	movlb	0	; () banked
   932  001DC8  6FCF               	movwf	CANsendMessage@flags& (0+255),b
   933  001DCA  EC3D  F006         	call	_CANsendMessage	;wreg free
   934  001DCE  D000               	goto	l4565
   935  001DD0                     l4565:
   936                           
   937                           ;ABS_Code.c: 288: }
   938                           ;ABS_Code.c: 289: }
   939                           ;ABS_Code.c: 292: if ((remote_frame == 1) || (Tx_retry == 1)) {
   940  001DD0  B042               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   941  001DD2  D002               	goto	l717
   942  001DD4  A841               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   943  001DD6  D004               	goto	l4571
   944  001DD8                     l717:
   945                           
   946                           ;ABS_Code.c: 293: remote_frame = 0;
   947  001DD8  9042               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   948                           
   949                           ;ABS_Code.c: 294: remote_frame_handler();
   950  001DDA  EC19  F012         	call	_remote_frame_handler	;wreg free
   951  001DDE  D000               	goto	l4571
   952  001DE0                     l4571:
   953                           
   954                           ;ABS_Code.c: 295: }
   955                           ;ABS_Code.c: 298: if (Analogic_Mode == 0b00000000) {
   956  001DE0  0100               	movlb	0	; () banked
   957  001DE2  518C               	movf	_Analogic_Mode& (0+255),w,b	;volatile
   958  001DE4  A4D8               	btfss	status,2,c
   959  001DE6  D021               	goto	l718
   960                           
   961                           ; BSR set to: 0
   962                           ;ABS_Code.c: 299: if (brake_signal_CAN == 0b00000000) {
   963  001DE8  0100               	movlb	0	; () banked
   964  001DEA  518D               	movf	_brake_signal_CAN& (0+255),w,b	;volatile
   965  001DEC  A4D8               	btfss	status,2,c
   966  001DEE  D004               	goto	l4577
   967                           
   968                           ; BSR set to: 0
   969                           ;ABS_Code.c: 300: brake_value_inc = 0;
   970  001DF0  0E00               	movlw	0
   971  001DF2  0100               	movlb	0	; () banked
   972  001DF4  6F8E               	movwf	_brake_value_inc& (0+255),b	;volatile
   973  001DF6  D000               	goto	l4577
   974  001DF8                     l4577:
   975                           
   976                           ; BSR set to: 0
   977                           ;ABS_Code.c: 301: }
   978                           ;ABS_Code.c: 302: if (brake_signal_CAN == 0b00000001) {
   979  001DF8  0100               	movlb	0	; () banked
   980  001DFA  058D               	decf	_brake_signal_CAN& (0+255),w,b	;volatile
   981  001DFC  A4D8               	btfss	status,2,c
   982  001DFE  D004               	goto	l4581
   983                           
   984                           ; BSR set to: 0
   985                           ;ABS_Code.c: 303: brake_value_inc = 150;
   986  001E00  0E96               	movlw	150
   987  001E02  0100               	movlb	0	; () banked
   988  001E04  6F8E               	movwf	_brake_value_inc& (0+255),b	;volatile
   989  001E06  D000               	goto	l4581
   990  001E08                     l4581:
   991                           
   992                           ; BSR set to: 0
   993                           ;ABS_Code.c: 304: }
   994                           ;ABS_Code.c: 305: if (brake_signal_CAN == 0b00000010) {
   995  001E08  0E02               	movlw	2
   996  001E0A  0100               	movlb	0	; () banked
   997  001E0C  198D               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
   998  001E0E  A4D8               	btfss	status,2,c
   999  001E10  D004               	goto	l4585
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;ABS_Code.c: 306: brake_value_inc = 200;
  1003  001E12  0EC8               	movlw	200
  1004  001E14  0100               	movlb	0	; () banked
  1005  001E16  6F8E               	movwf	_brake_value_inc& (0+255),b	;volatile
  1006  001E18  D000               	goto	l4585
  1007  001E1A                     l4585:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;ABS_Code.c: 307: }
  1011                           ;ABS_Code.c: 308: if (brake_signal_CAN == 0b00000011) {
  1012  001E1A  0E03               	movlw	3
  1013  001E1C  0100               	movlb	0	; () banked
  1014  001E1E  198D               	xorwf	_brake_signal_CAN& (0+255),w,b	;volatile
  1015  001E20  A4D8               	btfss	status,2,c
  1016  001E22  D006               	goto	l4589
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;ABS_Code.c: 309: brake_value_inc = 255;
  1020  001E24  0100               	movlb	0	; () banked
  1021  001E26  698E               	setf	_brake_value_inc& (0+255),b	;volatile
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;ABS_Code.c: 310: }
  1025                           ;ABS_Code.c: 311: } else {
  1026  001E28  D003               	goto	l4589
  1027  001E2A                     l718:
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;ABS_Code.c: 312: brake_value_inc = brake_signal_CAN;
  1031  001E2A  C08D  F08E         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
  1032  001E2E  D000               	goto	l4589
  1033  001E30                     l4589:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;ABS_Code.c: 313: }
  1037                           ;ABS_Code.c: 316: if (((brake_value_inc / 5) + home_position) > 255) {
  1038  001E30  C08E  F0C8         	movff	_brake_value_inc,___awdiv@dividend	;volatile
  1039  001E34  0100               	movlb	0	; () banked
  1040  001E36  6BC9               	clrf	(___awdiv@dividend+1)& (0+255),b
  1041  001E38  0E00               	movlw	0
  1042  001E3A  0100               	movlb	0	; () banked
  1043  001E3C  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  1044  001E3E  0E05               	movlw	5
  1045  001E40  6FCA               	movwf	___awdiv@divisor& (0+255),b
  1046  001E42  EC72  F013         	call	___awdiv	;wreg free
  1047  001E46  0100               	movlb	0	; () banked
  1048  001E48  518F               	movf	_home_position& (0+255),w,b	;volatile
  1049  001E4A  0100               	movlb	0	; () banked
  1050  001E4C  27C8               	addwf	?___awdiv& (0+255),f,b
  1051  001E4E  0E00               	movlw	0
  1052  001E50  0100               	movlb	0	; () banked
  1053  001E52  23C9               	addwfc	(?___awdiv+1)& (0+255),f,b
  1054  001E54  0100               	movlb	0	; () banked
  1055  001E56  BFC9               	btfsc	(?___awdiv+1)& (0+255),7,b
  1056  001E58  D008               	goto	l4595
  1057  001E5A  0100               	movlb	0	; () banked
  1058  001E5C  05C9               	decf	(?___awdiv+1)& (0+255),w,b
  1059  001E5E  A0D8               	btfss	status,0,c
  1060  001E60  D004               	goto	l4595
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;ABS_Code.c: 317: brake_value = 255;
  1064  001E62  0100               	movlb	0	; () banked
  1065  001E64  69A9               	setf	_brake_value& (0+255),b	;volatile
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;ABS_Code.c: 318: brake_value_degree = 180;
  1069  001E66  0EB4               	movlw	180
  1070  001E68  D020               	goto	L1
  1071  001E6A                     l4595:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;ABS_Code.c: 320: brake_value = (brake_value_inc / 5) + home_position;
  1075  001E6A  C08E  F0C8         	movff	_brake_value_inc,___awdiv@dividend	;volatile
  1076  001E6E  0100               	movlb	0	; () banked
  1077  001E70  6BC9               	clrf	(___awdiv@dividend+1)& (0+255),b
  1078  001E72  0E00               	movlw	0
  1079  001E74  0100               	movlb	0	; () banked
  1080  001E76  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  1081  001E78  0E05               	movlw	5
  1082  001E7A  6FCA               	movwf	___awdiv@divisor& (0+255),b
  1083  001E7C  EC72  F013         	call	___awdiv	;wreg free
  1084  001E80  0100               	movlb	0	; () banked
  1085  001E82  51C8               	movf	?___awdiv& (0+255),w,b
  1086  001E84  0100               	movlb	0	; () banked
  1087  001E86  258F               	addwf	_home_position& (0+255),w,b	;volatile
  1088  001E88  0100               	movlb	0	; () banked
  1089  001E8A  6FA9               	movwf	_brake_value& (0+255),b	;volatile
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;ABS_Code.c: 321: brake_value_degree = (180 * brake_value) / 255;
  1093  001E8C  0100               	movlb	0	; () banked
  1094  001E8E  51A9               	movf	_brake_value& (0+255),w,b	;volatile
  1095  001E90  0DB4               	mullw	180
  1096  001E92  CFF3 F0C8          	movff	prodl,___awdiv@dividend
  1097  001E96  CFF4 F0C9          	movff	prodh,___awdiv@dividend+1
  1098  001E9A  0E00               	movlw	0
  1099  001E9C  0100               	movlb	0	; () banked
  1100  001E9E  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  1101  001EA0  69CA               	setf	___awdiv@divisor& (0+255),b
  1102  001EA2  EC72  F013         	call	___awdiv	;wreg free
  1103  001EA6  0100               	movlb	0	; () banked
  1104  001EA8  51C8               	movf	?___awdiv& (0+255),w,b
  1105  001EAA                     L1:
  1106  001EAA  6E40               	movwf	_brake_value_degree,c	;volatile
  1107  001EAC  D000               	goto	l4599
  1108  001EAE                     l4599:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;ABS_Code.c: 322: }
  1112                           ;ABS_Code.c: 325: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1113  001EAE  B041               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1114  001EB0  D002               	goto	l728
  1115                           
  1116                           ; BSR set to: 0
  1117  001EB2  A441               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1118  001EB4  D03F               	goto	l4615
  1119  001EB6                     l728:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;ABS_Code.c: 326: if (TMR1_overflow == 1) {
  1123  001EB6  A441               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1124  001EB8  D00B               	goto	l4607
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;ABS_Code.c: 327: wheel_speed_1 = 0;
  1128  001EBA  0E00               	movlw	0
  1129  001EBC  0100               	movlb	0	; () banked
  1130  001EBE  6F78               	movwf	_wheel_speed_1& (0+255),b	;volatile
  1131  001EC0  0E00               	movlw	0
  1132  001EC2  6F79               	movwf	(_wheel_speed_1+1)& (0+255),b	;volatile
  1133  001EC4  0E00               	movlw	0
  1134  001EC6  6F7A               	movwf	(_wheel_speed_1+2)& (0+255),b	;volatile
  1135  001EC8  0E00               	movlw	0
  1136  001ECA  6F7B               	movwf	(_wheel_speed_1+3)& (0+255),b	;volatile
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;ABS_Code.c: 328: TMR1_overflow = 0;
  1140  001ECC  9441               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1141                           
  1142                           ;ABS_Code.c: 329: } else {
  1143  001ECE  D02C               	goto	l4609
  1144  001ED0                     l4607:
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;ABS_Code.c: 330: wheel_speed_1 = (step * 100000) / gap_time_1;
  1148  001ED0  0100               	movlb	0	; () banked
  1149  001ED2  5190               	movf	_step& (0+255),w,b	;volatile
  1150  001ED4  0100               	movlb	0	; () banked
  1151  001ED6  6FC8               	movwf	___lmul@multiplier& (0+255),b
  1152  001ED8  6BC9               	clrf	(___lmul@multiplier+1)& (0+255),b
  1153  001EDA  6BCA               	clrf	(___lmul@multiplier+2)& (0+255),b
  1154  001EDC  6BCB               	clrf	(___lmul@multiplier+3)& (0+255),b
  1155  001EDE  0EA0               	movlw	160
  1156  001EE0  0100               	movlb	0	; () banked
  1157  001EE2  6FCC               	movwf	___lmul@multiplicand& (0+255),b
  1158  001EE4  0E86               	movlw	134
  1159  001EE6  6FCD               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1160  001EE8  0E01               	movlw	1
  1161  001EEA  6FCE               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1162  001EEC  0E00               	movlw	0
  1163  001EEE  6FCF               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1164  001EF0  EC9E  F014         	call	___lmul	;wreg free
  1165  001EF4  C0C8  F100         	movff	?___lmul,___aldiv@dividend
  1166  001EF8  C0C9  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1167  001EFC  C0CA  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1168  001F00  C0CB  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1169  001F04  C02D  F104         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1170  001F08  C02E  F105         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1171  001F0C  0101               	movlb	1	; () banked
  1172  001F0E  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1173  001F10  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1174  001F12  ECDC  F012         	call	___aldiv	;wreg free
  1175  001F16  C100  F078         	movff	?___aldiv,_wheel_speed_1	;volatile
  1176  001F1A  C101  F079         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1177  001F1E  C102  F07A         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1178  001F22  C103  F07B         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1179  001F26  D000               	goto	l4609
  1180  001F28                     l4609:
  1181                           
  1182                           ;ABS_Code.c: 331: }
  1183                           ;ABS_Code.c: 332: speed_array[3] = wheel_speed_1 >> 8;
  1184  001F28  C079  F09C         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1185                           
  1186                           ;ABS_Code.c: 333: speed_array[2] = wheel_speed_1;
  1187  001F2C  C078  F09B         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1188                           
  1189                           ;ABS_Code.c: 334: ENC1_measure = 0;
  1190  001F30  9041               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1191  001F32  D000               	goto	l4615
  1192  001F34                     l4615:
  1193                           
  1194                           ;ABS_Code.c: 335: }
  1195                           ;ABS_Code.c: 338: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1196  001F34  B241               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1197  001F36  D002               	goto	l733
  1198  001F38  A641               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1199  001F3A  D6E1               	goto	l4553
  1200  001F3C                     l733:
  1201                           
  1202                           ;ABS_Code.c: 339: if (TMR3_overflow == 1) {
  1203  001F3C  A641               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1204  001F3E  D00B               	goto	l4623
  1205                           
  1206                           ;ABS_Code.c: 340: wheel_speed_2 = 0;
  1207  001F40  0E00               	movlw	0
  1208  001F42  0100               	movlb	0	; () banked
  1209  001F44  6F7C               	movwf	_wheel_speed_2& (0+255),b	;volatile
  1210  001F46  0E00               	movlw	0
  1211  001F48  6F7D               	movwf	(_wheel_speed_2+1)& (0+255),b	;volatile
  1212  001F4A  0E00               	movlw	0
  1213  001F4C  6F7E               	movwf	(_wheel_speed_2+2)& (0+255),b	;volatile
  1214  001F4E  0E00               	movlw	0
  1215  001F50  6F7F               	movwf	(_wheel_speed_2+3)& (0+255),b	;volatile
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;ABS_Code.c: 341: TMR3_overflow = 0;
  1219  001F52  9641               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1220                           
  1221                           ;ABS_Code.c: 342: } else {
  1222  001F54  D02C               	goto	l4625
  1223  001F56                     l4623:
  1224                           
  1225                           ;ABS_Code.c: 343: wheel_speed_2 = (step * 100000) / gap_time_2;
  1226  001F56  0100               	movlb	0	; () banked
  1227  001F58  5190               	movf	_step& (0+255),w,b	;volatile
  1228  001F5A  0100               	movlb	0	; () banked
  1229  001F5C  6FC8               	movwf	___lmul@multiplier& (0+255),b
  1230  001F5E  6BC9               	clrf	(___lmul@multiplier+1)& (0+255),b
  1231  001F60  6BCA               	clrf	(___lmul@multiplier+2)& (0+255),b
  1232  001F62  6BCB               	clrf	(___lmul@multiplier+3)& (0+255),b
  1233  001F64  0EA0               	movlw	160
  1234  001F66  0100               	movlb	0	; () banked
  1235  001F68  6FCC               	movwf	___lmul@multiplicand& (0+255),b
  1236  001F6A  0E86               	movlw	134
  1237  001F6C  6FCD               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1238  001F6E  0E01               	movlw	1
  1239  001F70  6FCE               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1240  001F72  0E00               	movlw	0
  1241  001F74  6FCF               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1242  001F76  EC9E  F014         	call	___lmul	;wreg free
  1243  001F7A  C0C8  F100         	movff	?___lmul,___aldiv@dividend
  1244  001F7E  C0C9  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1245  001F82  C0CA  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1246  001F86  C0CB  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1247  001F8A  C02F  F104         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1248  001F8E  C030  F105         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1249  001F92  0101               	movlb	1	; () banked
  1250  001F94  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1251  001F96  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1252  001F98  ECDC  F012         	call	___aldiv	;wreg free
  1253  001F9C  C100  F07C         	movff	?___aldiv,_wheel_speed_2	;volatile
  1254  001FA0  C101  F07D         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1255  001FA4  C102  F07E         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1256  001FA8  C103  F07F         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1257  001FAC  D000               	goto	l4625
  1258  001FAE                     l4625:
  1259                           
  1260                           ;ABS_Code.c: 344: }
  1261                           ;ABS_Code.c: 345: speed_array[1] = wheel_speed_2 >> 8;
  1262  001FAE  C07D  F09A         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1263                           
  1264                           ;ABS_Code.c: 346: speed_array[0] = wheel_speed_2;
  1265  001FB2  C07C  F099         	movff	_wheel_speed_2,_speed_array	;volatile
  1266                           
  1267                           ;ABS_Code.c: 347: ENC2_measure = 0;
  1268  001FB6  9241               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1269  001FB8  D6A2               	goto	l4553
  1270  001FBA  EFA6  F000         	goto	start
  1271  001FBE                     __end_of_main:
  1272                           	opt stack 0
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           prodh	equ	0xFF4
  1278                           prodl	equ	0xFF3
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1l	equ	0xFE1
  1283                           status	equ	0xFD8
  1284                           
  1285 ;; *************** function _remote_frame_handler *****************
  1286 ;; Defined at:
  1287 ;;		line 357 in file "ABS_Code.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;		None               void
  1294 ;; Registers used:
  1295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1301 ;;      Params:         0       0       0       0
  1302 ;;      Locals:         0       0       0       0
  1303 ;;      Temps:          0       0       0       0
  1304 ;;      Totals:         0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    5
  1308 ;; This function calls:
  1309 ;;		_CANisTxReady
  1310 ;;		_CANsendMessage
  1311 ;;		___wmul
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text1
  1318  002432                     __ptext1:
  1319                           	opt stack 0
  1320  002432                     _remote_frame_handler:
  1321                           	opt stack 25
  1322                           
  1323                           ;ABS_Code.c: 358: if (CANisTxReady() == 1) {
  1324                           
  1325                           ;incstack = 0
  1326  002432  EC5C  F015         	call	_CANisTxReady	;wreg free
  1327  002436  06E8               	decf	wreg,f,c
  1328  002438  A4D8               	btfss	status,2,c
  1329  00243A  D0BB               	goto	l741
  1330                           
  1331                           ;ABS_Code.c: 359: if (remote_frame_id == 0b00000000010) {
  1332  00243C  0E02               	movlw	2
  1333  00243E  0100               	movlb	0	; () banked
  1334  002440  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1335  002442  0100               	movlb	0	; () banked
  1336  002444  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1337  002446  0100               	movlb	0	; () banked
  1338  002448  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1339  00244A  0100               	movlb	0	; () banked
  1340  00244C  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1341  00244E  A4D8               	btfss	status,2,c
  1342  002450  D01C               	goto	l3799
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;ABS_Code.c: 360: status_array[0] = 0x01;
  1346  002452  0E01               	movlw	1
  1347  002454  0100               	movlb	0	; () banked
  1348  002456  6FA1               	movwf	_status_array& (0+255),b	;volatile
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;ABS_Code.c: 361: CANsendMessage(0b00000000010, status_array, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1352  002458  0E02               	movlw	2
  1353  00245A  0100               	movlb	0	; () banked
  1354  00245C  6FC8               	movwf	CANsendMessage@identifier& (0+255),b
  1355  00245E  0E00               	movlw	0
  1356  002460  6FC9               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1357  002462  0E00               	movlw	0
  1358  002464  6FCA               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1359  002466  0E00               	movlw	0
  1360  002468  6FCB               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1361  00246A  0EA1               	movlw	low _status_array
  1362  00246C  0100               	movlb	0	; () banked
  1363  00246E  6FCC               	movwf	CANsendMessage@data& (0+255),b
  1364  002470  0E00               	movlw	high _status_array
  1365  002472  0100               	movlb	0	; () banked
  1366  002474  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1367  002476  0E08               	movlw	8
  1368  002478  0100               	movlb	0	; () banked
  1369  00247A  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
  1370  00247C  0EBC               	movlw	188
  1371  00247E  0100               	movlb	0	; () banked
  1372  002480  6FCF               	movwf	CANsendMessage@flags& (0+255),b
  1373  002482  EC3D  F006         	call	_CANsendMessage	;wreg free
  1374                           
  1375                           ;ABS_Code.c: 362: PORTCbits.RC1 = ~PORTCbits.RC1;
  1376  002486  7282               	btg	3970,1,c	;volatile
  1377  002488  D000               	goto	l3799
  1378  00248A                     l3799:
  1379                           
  1380                           ;ABS_Code.c: 363: }
  1381                           ;ABS_Code.c: 365: if (remote_frame_id == 0b00000001000) {
  1382  00248A  0E08               	movlw	8
  1383  00248C  0100               	movlb	0	; () banked
  1384  00248E  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1385  002490  0100               	movlb	0	; () banked
  1386  002492  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1387  002494  0100               	movlb	0	; () banked
  1388  002496  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1389  002498  0100               	movlb	0	; () banked
  1390  00249A  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1391  00249C  A4D8               	btfss	status,2,c
  1392  00249E  D017               	goto	l3803
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;ABS_Code.c: 366: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1396  0024A0  C074  F0C8         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1397  0024A4  C075  F0C9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1398  0024A8  C076  F0CA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1399  0024AC  C077  F0CB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1400  0024B0  0E99               	movlw	low _speed_array
  1401  0024B2  0100               	movlb	0	; () banked
  1402  0024B4  6FCC               	movwf	CANsendMessage@data& (0+255),b
  1403  0024B6  0E00               	movlw	high _speed_array
  1404  0024B8  0100               	movlb	0	; () banked
  1405  0024BA  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1406  0024BC  0E08               	movlw	8
  1407  0024BE  0100               	movlb	0	; () banked
  1408  0024C0  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
  1409  0024C2  0EBC               	movlw	188
  1410  0024C4  0100               	movlb	0	; () banked
  1411  0024C6  6FCF               	movwf	CANsendMessage@flags& (0+255),b
  1412  0024C8  EC3D  F006         	call	_CANsendMessage	;wreg free
  1413  0024CC  D000               	goto	l3803
  1414  0024CE                     l3803:
  1415                           
  1416                           ;ABS_Code.c: 367: }
  1417                           ;ABS_Code.c: 368: if (remote_frame_id == 0b00000001010) {
  1418  0024CE  0E0A               	movlw	10
  1419  0024D0  0100               	movlb	0	; () banked
  1420  0024D2  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1421  0024D4  0100               	movlb	0	; () banked
  1422  0024D6  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1423  0024D8  0100               	movlb	0	; () banked
  1424  0024DA  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1425  0024DC  0100               	movlb	0	; () banked
  1426  0024DE  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1427  0024E0  A4D8               	btfss	status,2,c
  1428  0024E2  D014               	goto	l3809
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;ABS_Code.c: 369: int_counter_1 = 0;
  1432  0024E4  0E00               	movlw	0
  1433  0024E6  0100               	movlb	0	; () banked
  1434  0024E8  6F6C               	movwf	_int_counter_1& (0+255),b	;volatile
  1435  0024EA  0E00               	movlw	0
  1436  0024EC  6F6D               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1437  0024EE  0E00               	movlw	0
  1438  0024F0  6F6E               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1439  0024F2  0E00               	movlw	0
  1440  0024F4  6F6F               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1441                           
  1442                           ;ABS_Code.c: 370: int_counter_2 = 0;
  1443  0024F6  0E00               	movlw	0
  1444  0024F8  0100               	movlb	0	; () banked
  1445  0024FA  6F70               	movwf	_int_counter_2& (0+255),b	;volatile
  1446  0024FC  0E00               	movlw	0
  1447  0024FE  6F71               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1448  002500  0E00               	movlw	0
  1449  002502  6F72               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1450  002504  0E00               	movlw	0
  1451  002506  6F73               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;ABS_Code.c: 371: count_flag = 1;
  1455  002508  8A41               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1456  00250A  D000               	goto	l3809
  1457  00250C                     l3809:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;ABS_Code.c: 372: }
  1461                           ;ABS_Code.c: 373: if (remote_frame_id == 0b00000001001) {
  1462  00250C  0E09               	movlw	9
  1463  00250E  0100               	movlb	0	; () banked
  1464  002510  1974               	xorwf	_remote_frame_id& (0+255),w,b	;volatile
  1465  002512  0100               	movlb	0	; () banked
  1466  002514  1175               	iorwf	(_remote_frame_id+1)& (0+255),w,b	;volatile
  1467  002516  0100               	movlb	0	; () banked
  1468  002518  1176               	iorwf	(_remote_frame_id+2)& (0+255),w,b	;volatile
  1469  00251A  0100               	movlb	0	; () banked
  1470  00251C  1177               	iorwf	(_remote_frame_id+3)& (0+255),w,b	;volatile
  1471  00251E  A4D8               	btfss	status,2,c
  1472  002520  D040               	goto	l3825
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;ABS_Code.c: 374: distance_1 = step * (int_counter_1);
  1476  002522  C090  F0C8         	movff	_step,___wmul@multiplier	;volatile
  1477  002526  0100               	movlb	0	; () banked
  1478  002528  6BC9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1479  00252A  C06C  F0CA         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1480  00252E  C06D  F0CB         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1481  002532  EC2C  F015         	call	___wmul	;wreg free
  1482  002536  C0C8  F082         	movff	?___wmul,_distance_1	;volatile
  1483  00253A  C0C9  F083         	movff	?___wmul+1,_distance_1+1	;volatile
  1484                           
  1485                           ;ABS_Code.c: 375: distance_2 = step * (int_counter_2);
  1486  00253E  C090  F0C8         	movff	_step,___wmul@multiplier	;volatile
  1487  002542  0100               	movlb	0	; () banked
  1488  002544  6BC9               	clrf	(___wmul@multiplier+1)& (0+255),b
  1489  002546  C070  F0CA         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1490  00254A  C071  F0CB         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1491  00254E  EC2C  F015         	call	___wmul	;wreg free
  1492  002552  C0C8  F084         	movff	?___wmul,_distance_2	;volatile
  1493  002556  C0C9  F085         	movff	?___wmul+1,_distance_2+1	;volatile
  1494                           
  1495                           ;ABS_Code.c: 376: count_flag = 0;
  1496  00255A  9A41               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1497                           
  1498                           ;ABS_Code.c: 377: distance_array[0] = distance_1;
  1499  00255C  C082  F091         	movff	_distance_1,_distance_array	;volatile
  1500                           
  1501                           ;ABS_Code.c: 378: distance_array[1] = distance_1 >> 8;
  1502  002560  0100               	movlb	0	; () banked
  1503  002562  5183               	movf	(_distance_1+1)& (0+255),w,b	;volatile
  1504  002564  0100               	movlb	0	; () banked
  1505  002566  6F92               	movwf	(_distance_array+1)& (0+255),b	;volatile
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;ABS_Code.c: 379: distance_array[2] = distance_2;
  1509  002568  C084  F093         	movff	_distance_2,_distance_array+2	;volatile
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;ABS_Code.c: 380: distance_array[3] = distance_2 >> 8;
  1513  00256C  0100               	movlb	0	; () banked
  1514  00256E  5185               	movf	(_distance_2+1)& (0+255),w,b	;volatile
  1515  002570  0100               	movlb	0	; () banked
  1516  002572  6F94               	movwf	(_distance_array+3)& (0+255),b	;volatile
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;ABS_Code.c: 381: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1520  002574  C074  F0C8         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1521  002578  C075  F0C9         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1522  00257C  C076  F0CA         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1523  002580  C077  F0CB         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1524  002584  0E91               	movlw	low _distance_array
  1525  002586  0100               	movlb	0	; () banked
  1526  002588  6FCC               	movwf	CANsendMessage@data& (0+255),b
  1527  00258A  0E00               	movlw	high _distance_array
  1528  00258C  0100               	movlb	0	; () banked
  1529  00258E  6FCD               	movwf	(CANsendMessage@data+1)& (0+255),b
  1530  002590  0E08               	movlw	8
  1531  002592  0100               	movlb	0	; () banked
  1532  002594  6FCE               	movwf	CANsendMessage@dataLength& (0+255),b
  1533  002596  0EBC               	movlw	188
  1534  002598  0100               	movlb	0	; () banked
  1535  00259A  6FCF               	movwf	CANsendMessage@flags& (0+255),b
  1536  00259C  EC3D  F006         	call	_CANsendMessage	;wreg free
  1537  0025A0  D000               	goto	l3825
  1538  0025A2                     l3825:
  1539                           
  1540                           ;ABS_Code.c: 382: }
  1541                           ;ABS_Code.c: 384: if (TXB0CONbits.TXABT == 1 || TXB1CONbits.TXABT == 1) {
  1542  0025A2  010F               	movlb	15	; () banked
  1543  0025A4  BD40               	btfsc	64,6,b	;volatile
  1544  0025A6  D005               	goto	l741
  1545                           
  1546                           ; BSR set to: 15
  1547  0025A8  010F               	movlb	15	; () banked
  1548  0025AA  BD30               	btfsc	48,6,b	;volatile
  1549  0025AC  D002               	goto	l741
  1550                           
  1551                           ; BSR set to: 15
  1552                           ;ABS_Code.c: 387: Tx_retry = 0;
  1553                           
  1554                           ;ABS_Code.c: 386: } else {
  1555                           
  1556                           ; BSR set to: 15
  1557                           ;ABS_Code.c: 385: Tx_retry = 1;
  1558  0025AE  9841               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1559                           
  1560                           ; BSR set to: 15
  1561                           ;ABS_Code.c: 388: }
  1562                           ;ABS_Code.c: 389: } else {
  1563  0025B0  D002               	goto	l751
  1564  0025B2                     l741:
  1565                           
  1566                           ;ABS_Code.c: 390: Tx_retry = 1;
  1567  0025B2  8841               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1568  0025B4  D000               	goto	l751
  1569  0025B6                     l751:
  1570  0025B6  0012               	return		;funcret
  1571  0025B8                     __end_of_remote_frame_handler:
  1572                           	opt stack 0
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           prodh	equ	0xFF4
  1578                           prodl	equ	0xFF3
  1579                           postinc0	equ	0xFEE
  1580                           wreg	equ	0xFE8
  1581                           postdec1	equ	0xFE5
  1582                           fsr1l	equ	0xFE1
  1583                           status	equ	0xFD8
  1584                           
  1585 ;; *************** function ___wmul *****************
  1586 ;; Defined at:
  1587 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  multiplier      2   30[BANK0 ] unsigned int 
  1590 ;;  multiplicand    2   32[BANK0 ] unsigned int 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  product         2   34[BANK0 ] unsigned int 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  2   30[BANK0 ] unsigned int 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0, prodl, prodh
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1602 ;;      Params:         0       4       0       0
  1603 ;;      Locals:         0       2       0       0
  1604 ;;      Temps:          0       0       0       0
  1605 ;;      Totals:         0       6       0       0
  1606 ;;Total ram usage:        6 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    4
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;;		_remote_frame_handler
  1614 ;;		_delay_ms
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text2
  1619  002A58                     __ptext2:
  1620                           	opt stack 0
  1621  002A58                     ___wmul:
  1622                           	opt stack 25
  1623                           
  1624                           ;incstack = 0
  1625  002A58  0100               	movlb	0	; () banked
  1626  002A5A  51C8               	movf	___wmul@multiplier& (0+255),w,b
  1627  002A5C  0100               	movlb	0	; () banked
  1628  002A5E  03CA               	mulwf	___wmul@multiplicand& (0+255),b
  1629  002A60  CFF3 F0CC          	movff	prodl,___wmul@product
  1630  002A64  CFF4 F0CD          	movff	prodh,___wmul@product+1
  1631  002A68  0100               	movlb	0	; () banked
  1632  002A6A  51C8               	movf	___wmul@multiplier& (0+255),w,b
  1633  002A6C  0100               	movlb	0	; () banked
  1634  002A6E  03CB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1635  002A70  50F3               	movf	prodl,w,c
  1636  002A72  0100               	movlb	0	; () banked
  1637  002A74  27CD               	addwf	(___wmul@product+1)& (0+255),f,b
  1638  002A76  0100               	movlb	0	; () banked
  1639  002A78  51C9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1640  002A7A  0100               	movlb	0	; () banked
  1641  002A7C  03CA               	mulwf	___wmul@multiplicand& (0+255),b
  1642  002A7E  50F3               	movf	prodl,w,c
  1643  002A80  0100               	movlb	0	; () banked
  1644  002A82  27CD               	addwf	(___wmul@product+1)& (0+255),f,b
  1645                           
  1646                           ; BSR set to: 0
  1647  002A84  C0CC  F0C8         	movff	___wmul@product,?___wmul
  1648  002A88  C0CD  F0C9         	movff	___wmul@product+1,?___wmul+1
  1649  002A8C  D000               	goto	l770
  1650  002A8E                     l770:
  1651                           
  1652                           ; BSR set to: 0
  1653  002A8E  0012               	return		;funcret
  1654  002A90                     __end_of___wmul:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postdec1	equ	0xFE5
  1665                           fsr1l	equ	0xFE1
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _CANsendMessage *****************
  1669 ;; Defined at:
  1670 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  identifier      4   30[BANK0 ] unsigned long 
  1673 ;;  data            2   34[BANK0 ] PTR unsigned char 
  1674 ;;		 -> distance_array(8), status_array(8), speed_array(8), remote_frame_array(8), 
  1675 ;;  dataLength      1   36[BANK0 ] unsigned char 
  1676 ;;  flags           1   37[BANK0 ] enum E16907
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  tamp            4   42[BANK0 ] unsigned long 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;		None               void
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1688 ;;      Params:         0       8       0       0
  1689 ;;      Locals:         0       4       0       0
  1690 ;;      Temps:          0       4       0       0
  1691 ;;      Totals:         0      16       0       0
  1692 ;;Total ram usage:       16 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    4
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;;		_remote_frame_handler
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text3
  1704  000C7A                     __ptext3:
  1705                           	opt stack 0
  1706  000C7A                     _CANsendMessage:
  1707                           	opt stack 25
  1708                           
  1709                           ;inc\CANlib.h: 296: unsigned long tamp;
  1710                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;incstack = 0
  1714  000C7A  010F               	movlb	15	; () banked
  1715  000C7C  B740               	btfsc	64,3,b	;volatile
  1716  000C7E  D142               	goto	l381
  1717                           
  1718                           ; BSR set to: 15
  1719                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1720  000C80  C0CE  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1721                           
  1722                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1723  000C84  0100               	movlb	0	; () banked
  1724  000C86  ADCF               	btfss	CANsendMessage@flags& (0+255),6,b
  1725  000C88  D003               	goto	l382
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1729  000C8A  010F               	movlb	15	; () banked
  1730  000C8C  8D45               	bsf	69,6,b	;volatile
  1731  000C8E  D002               	goto	l383
  1732  000C90                     l382:
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;inc\CANlib.h: 302: else
  1736                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1737  000C90  010F               	movlb	15	; () banked
  1738  000C92  9D45               	bcf	69,6,b	;volatile
  1739  000C94                     l383:
  1740                           
  1741                           ; BSR set to: 15
  1742                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1743  000C94  0100               	movlb	0	; () banked
  1744  000C96  A7CF               	btfss	CANsendMessage@flags& (0+255),3,b
  1745  000C98  D07A               	goto	l384
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;inc\CANlib.h: 306: {
  1749                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1750  000C9A  0100               	movlb	0	; () banked
  1751  000C9C  51C8               	movf	CANsendMessage@identifier& (0+255),w,b
  1752  000C9E  0100               	movlb	0	; () banked
  1753  000CA0  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1754  000CA2  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1755  000CA4  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1756  000CA6  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1760  000CA8  C0D4  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1764  000CAC  0E00               	movlw	0
  1765  000CAE  0100               	movlb	0	; () banked
  1766  000CB0  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1767  000CB2  0100               	movlb	0	; () banked
  1768  000CB4  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1769  000CB6  0EFF               	movlw	255
  1770  000CB8  0100               	movlb	0	; () banked
  1771  000CBA  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1772  000CBC  0100               	movlb	0	; () banked
  1773  000CBE  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1774  000CC0  0E00               	movlw	0
  1775  000CC2  0100               	movlb	0	; () banked
  1776  000CC4  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1777  000CC6  0100               	movlb	0	; () banked
  1778  000CC8  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1779  000CCA  0E00               	movlw	0
  1780  000CCC  0100               	movlb	0	; () banked
  1781  000CCE  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1782  000CD0  0100               	movlb	0	; () banked
  1783  000CD2  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1787  000CD4  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1788  000CD8  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1789  000CDC  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1790  000CE0  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1791  000CE4  C0D1  F0D0         	movff	??_CANsendMessage+1,??_CANsendMessage
  1792  000CE8  C0D2  F0D1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1793  000CEC  C0D3  F0D2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1794  000CF0  0100               	movlb	0	; () banked
  1795  000CF2  6BD3               	clrf	(??_CANsendMessage+3)& (0+255),b
  1796  000CF4  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1797  000CF8  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1798  000CFC  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1799  000D00  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1803  000D04  C0D4  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1807  000D08  0E00               	movlw	0
  1808  000D0A  010F               	movlb	15	; () banked
  1809  000D0C  6F42               	movwf	66,b	;volatile
  1810                           
  1811                           ; BSR set to: 15
  1812                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1813  000D0E  010F               	movlb	15	; () banked
  1814  000D10  8742               	bsf	66,3,b	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1818  000D12  0100               	movlb	0	; () banked
  1819  000D14  A1CA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1820  000D16  D002               	goto	l385
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1824  000D18  010F               	movlb	15	; () banked
  1825  000D1A  8142               	bsf	66,0,b	;volatile
  1826  000D1C                     l385:
  1827                           
  1828                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1829  000D1C  0100               	movlb	0	; () banked
  1830  000D1E  A3CA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1831  000D20  D002               	goto	l386
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1835  000D22  010F               	movlb	15	; () banked
  1836  000D24  8342               	bsf	66,1,b	;volatile
  1837  000D26                     l386:
  1838                           
  1839                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1840  000D26  0100               	movlb	0	; () banked
  1841  000D28  A5CA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1842  000D2A  D002               	goto	l387
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1846  000D2C  010F               	movlb	15	; () banked
  1847  000D2E  8B42               	bsf	66,5,b	;volatile
  1848  000D30                     l387:
  1849                           
  1850                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1851  000D30  0100               	movlb	0	; () banked
  1852  000D32  A7CA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1853  000D34  D002               	goto	l388
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1857  000D36  010F               	movlb	15	; () banked
  1858  000D38  8D42               	bsf	66,6,b	;volatile
  1859  000D3A                     l388:
  1860                           
  1861                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1862  000D3A  0100               	movlb	0	; () banked
  1863  000D3C  A9CA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1864  000D3E  D003               	goto	l3305
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1868  000D40  010F               	movlb	15	; () banked
  1869  000D42  8F42               	bsf	66,7,b	;volatile
  1870  000D44  D000               	goto	l3305
  1871  000D46                     l3305:
  1872                           
  1873                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1874  000D46  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1875  000D4A  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1876  000D4E  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1877  000D52  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1878  000D56  0E16               	movlw	22
  1879  000D58  D006               	goto	u3500
  1880  000D5A                     u3505:
  1881  000D5A  0100               	movlb	0	; () banked
  1882  000D5C  90D8               	bcf	status,0,c
  1883  000D5E  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1884  000D60  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1885  000D62  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1886  000D64  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  1887  000D66                     u3500:
  1888  000D66  2EE8               	decfsz	wreg,f,c
  1889  000D68  D7F8               	goto	u3505
  1890  000D6A  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1891  000D6E  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1892  000D72  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1893  000D76  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1897  000D7A  0100               	movlb	0	; () banked
  1898  000D7C  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  1899  000D7E  0100               	movlb	0	; () banked
  1900  000D80  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1901  000D82  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1902  000D84  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1903  000D86  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1907  000D88  C0D4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1908                           
  1909                           ;inc\CANlib.h: 332: }
  1910  000D8C  D05A               	goto	l3325
  1911  000D8E                     l384:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;inc\CANlib.h: 334: else
  1915                           ;inc\CANlib.h: 336: {
  1916                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1917  000D8E  010F               	movlb	15	; () banked
  1918  000D90  9742               	bcf	66,3,b	;volatile
  1919                           
  1920                           ; BSR set to: 15
  1921                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1922  000D92  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  1923  000D96  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1924  000D9A  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1925  000D9E  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1926  000DA2  0E04               	movlw	4
  1927  000DA4  D006               	goto	u3510
  1928  000DA6                     u3515:
  1929  000DA6  0100               	movlb	0	; () banked
  1930  000DA8  90D8               	bcf	status,0,c
  1931  000DAA  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1932  000DAC  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1933  000DAE  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1934  000DB0  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  1935  000DB2                     u3510:
  1936  000DB2  2EE8               	decfsz	wreg,f,c
  1937  000DB4  D7F8               	goto	u3515
  1938  000DB6  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1939  000DBA  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1940  000DBE  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1941  000DC2  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1945  000DC6  0100               	movlb	0	; () banked
  1946  000DC8  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  1947  000DCA  0100               	movlb	0	; () banked
  1948  000DCC  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1949  000DCE  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1950  000DD0  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1951  000DD2  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1955  000DD4  C0D4  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1959  000DD8  0E07               	movlw	7
  1960  000DDA  0100               	movlb	0	; () banked
  1961  000DDC  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  1962  000DDE  0100               	movlb	0	; () banked
  1963  000DE0  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  1964  000DE2  0E00               	movlw	0
  1965  000DE4  0100               	movlb	0	; () banked
  1966  000DE6  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1967  000DE8  0100               	movlb	0	; () banked
  1968  000DEA  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1969  000DEC  0E00               	movlw	0
  1970  000DEE  0100               	movlb	0	; () banked
  1971  000DF0  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1972  000DF2  0100               	movlb	0	; () banked
  1973  000DF4  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1974  000DF6  0E00               	movlw	0
  1975  000DF8  0100               	movlb	0	; () banked
  1976  000DFA  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1977  000DFC  0100               	movlb	0	; () banked
  1978  000DFE  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1982  000E00  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  1983  000E04  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1984  000E08  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1985  000E0C  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1986  000E10  0E05               	movlw	5
  1987  000E12                     u3525:
  1988  000E12  90D8               	bcf	status,0,c
  1989  000E14  0100               	movlb	0	; () banked
  1990  000E16  37D0               	rlcf	??_CANsendMessage& (0+255),f,b
  1991  000E18  37D1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1992  000E1A  37D2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1993  000E1C  37D3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1994  000E1E  2EE8               	decfsz	wreg,f,c
  1995  000E20  D7F8               	goto	u3525
  1996  000E22  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  1997  000E26  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1998  000E2A  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1999  000E2E  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  2003  000E32  010F               	movlb	15	; () banked
  2004  000E34  5142               	movf	66,w,b	;volatile
  2005  000E36  0B1F               	andlw	31
  2006  000E38  010F               	movlb	15	; () banked
  2007  000E3A  6F42               	movwf	66,b	;volatile
  2008                           
  2009                           ; BSR set to: 15
  2010                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  2011  000E3C  C0D4  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  2012  000E40  D000               	goto	l3325
  2013  000E42                     l3325:
  2014                           
  2015                           ;inc\CANlib.h: 347: }
  2016                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  2017  000E42  0100               	movlb	0	; () banked
  2018  000E44  A1CF               	btfss	CANsendMessage@flags& (0+255),0,b
  2019  000E46  D003               	goto	l391
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2023  000E48  010F               	movlb	15	; () banked
  2024  000E4A  8140               	bsf	64,0,b	;volatile
  2025  000E4C  D002               	goto	l392
  2026  000E4E                     l391:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;inc\CANlib.h: 351: else
  2030                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2031  000E4E  010F               	movlb	15	; () banked
  2032  000E50  9140               	bcf	64,0,b	;volatile
  2033  000E52                     l392:
  2034                           
  2035                           ; BSR set to: 15
  2036                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2037  000E52  0100               	movlb	0	; () banked
  2038  000E54  A3CF               	btfss	CANsendMessage@flags& (0+255),1,b
  2039  000E56  D003               	goto	l393
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2043  000E58  010F               	movlb	15	; () banked
  2044  000E5A  8340               	bsf	64,1,b	;volatile
  2045  000E5C  D003               	goto	l3331
  2046  000E5E                     l393:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;inc\CANlib.h: 355: else
  2050                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2051  000E5E  010F               	movlb	15	; () banked
  2052  000E60  9340               	bcf	64,1,b	;volatile
  2053  000E62  D000               	goto	l3331
  2054  000E64                     l3331:
  2055                           
  2056                           ; BSR set to: 15
  2057                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2058  000E64  C0CC  FFD9         	movff	CANsendMessage@data,fsr2l
  2059  000E68  C0CD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2060  000E6C  50DF               	movf	indf2,w,c
  2061  000E6E  010F               	movlb	15	; () banked
  2062  000E70  6F46               	movwf	70,b	;volatile
  2063                           
  2064                           ; BSR set to: 15
  2065                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2066  000E72  0100               	movlb	0	; () banked
  2067  000E74  EE20 F001          	lfsr	2,1
  2068  000E78  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2069  000E7A  26D9               	addwf	fsr2l,f,c
  2070  000E7C  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2071  000E7E  22DA               	addwfc	fsr2h,f,c
  2072  000E80  50DF               	movf	indf2,w,c
  2073  000E82  010F               	movlb	15	; () banked
  2074  000E84  6F47               	movwf	71,b	;volatile
  2075                           
  2076                           ; BSR set to: 15
  2077                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2078  000E86  0100               	movlb	0	; () banked
  2079  000E88  EE20 F002          	lfsr	2,2
  2080  000E8C  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2081  000E8E  26D9               	addwf	fsr2l,f,c
  2082  000E90  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2083  000E92  22DA               	addwfc	fsr2h,f,c
  2084  000E94  50DF               	movf	indf2,w,c
  2085  000E96  010F               	movlb	15	; () banked
  2086  000E98  6F48               	movwf	72,b	;volatile
  2087                           
  2088                           ; BSR set to: 15
  2089                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2090  000E9A  0100               	movlb	0	; () banked
  2091  000E9C  EE20 F003          	lfsr	2,3
  2092  000EA0  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2093  000EA2  26D9               	addwf	fsr2l,f,c
  2094  000EA4  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2095  000EA6  22DA               	addwfc	fsr2h,f,c
  2096  000EA8  50DF               	movf	indf2,w,c
  2097  000EAA  010F               	movlb	15	; () banked
  2098  000EAC  6F49               	movwf	73,b	;volatile
  2099                           
  2100                           ; BSR set to: 15
  2101                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2102  000EAE  0100               	movlb	0	; () banked
  2103  000EB0  EE20 F004          	lfsr	2,4
  2104  000EB4  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2105  000EB6  26D9               	addwf	fsr2l,f,c
  2106  000EB8  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2107  000EBA  22DA               	addwfc	fsr2h,f,c
  2108  000EBC  50DF               	movf	indf2,w,c
  2109  000EBE  010F               	movlb	15	; () banked
  2110  000EC0  6F4A               	movwf	74,b	;volatile
  2111                           
  2112                           ; BSR set to: 15
  2113                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2114  000EC2  0100               	movlb	0	; () banked
  2115  000EC4  EE20 F005          	lfsr	2,5
  2116  000EC8  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2117  000ECA  26D9               	addwf	fsr2l,f,c
  2118  000ECC  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2119  000ECE  22DA               	addwfc	fsr2h,f,c
  2120  000ED0  50DF               	movf	indf2,w,c
  2121  000ED2  010F               	movlb	15	; () banked
  2122  000ED4  6F4B               	movwf	75,b	;volatile
  2123                           
  2124                           ; BSR set to: 15
  2125                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2126  000ED6  0100               	movlb	0	; () banked
  2127  000ED8  EE20 F006          	lfsr	2,6
  2128  000EDC  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2129  000EDE  26D9               	addwf	fsr2l,f,c
  2130  000EE0  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2131  000EE2  22DA               	addwfc	fsr2h,f,c
  2132  000EE4  50DF               	movf	indf2,w,c
  2133  000EE6  010F               	movlb	15	; () banked
  2134  000EE8  6F4C               	movwf	76,b	;volatile
  2135                           
  2136                           ; BSR set to: 15
  2137                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2138  000EEA  0100               	movlb	0	; () banked
  2139  000EEC  EE20 F007          	lfsr	2,7
  2140  000EF0  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2141  000EF2  26D9               	addwf	fsr2l,f,c
  2142  000EF4  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2143  000EF6  22DA               	addwfc	fsr2h,f,c
  2144  000EF8  50DF               	movf	indf2,w,c
  2145  000EFA  010F               	movlb	15	; () banked
  2146  000EFC  6F4D               	movwf	77,b	;volatile
  2147                           
  2148                           ; BSR set to: 15
  2149                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2150  000EFE  010F               	movlb	15	; () banked
  2151  000F00  8740               	bsf	64,3,b	;volatile
  2152                           
  2153                           ; BSR set to: 15
  2154                           ;inc\CANlib.h: 368: return;
  2155  000F02  D28A               	goto	l395
  2156  000F04                     l381:
  2157                           
  2158                           ; BSR set to: 15
  2159                           ;inc\CANlib.h: 369: }
  2160                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2161  000F04  010F               	movlb	15	; () banked
  2162  000F06  B730               	btfsc	48,3,b	;volatile
  2163  000F08  D142               	goto	l396
  2164                           
  2165                           ; BSR set to: 15
  2166                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2167  000F0A  C0CE  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2168                           
  2169                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2170  000F0E  0100               	movlb	0	; () banked
  2171  000F10  ADCF               	btfss	CANsendMessage@flags& (0+255),6,b
  2172  000F12  D003               	goto	l397
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2176  000F14  010F               	movlb	15	; () banked
  2177  000F16  8D35               	bsf	53,6,b	;volatile
  2178  000F18  D002               	goto	l398
  2179  000F1A                     l397:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;inc\CANlib.h: 378: else
  2183                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2184  000F1A  010F               	movlb	15	; () banked
  2185  000F1C  9D35               	bcf	53,6,b	;volatile
  2186  000F1E                     l398:
  2187                           
  2188                           ; BSR set to: 15
  2189                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2190  000F1E  0100               	movlb	0	; () banked
  2191  000F20  A7CF               	btfss	CANsendMessage@flags& (0+255),3,b
  2192  000F22  D07A               	goto	l399
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;inc\CANlib.h: 382: {
  2196                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2197  000F24  0100               	movlb	0	; () banked
  2198  000F26  51C8               	movf	CANsendMessage@identifier& (0+255),w,b
  2199  000F28  0100               	movlb	0	; () banked
  2200  000F2A  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2201  000F2C  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2202  000F2E  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2203  000F30  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2207  000F32  C0D4  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2211  000F36  0E00               	movlw	0
  2212  000F38  0100               	movlb	0	; () banked
  2213  000F3A  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2214  000F3C  0100               	movlb	0	; () banked
  2215  000F3E  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2216  000F40  0EFF               	movlw	255
  2217  000F42  0100               	movlb	0	; () banked
  2218  000F44  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2219  000F46  0100               	movlb	0	; () banked
  2220  000F48  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2221  000F4A  0E00               	movlw	0
  2222  000F4C  0100               	movlb	0	; () banked
  2223  000F4E  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2224  000F50  0100               	movlb	0	; () banked
  2225  000F52  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2226  000F54  0E00               	movlw	0
  2227  000F56  0100               	movlb	0	; () banked
  2228  000F58  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2229  000F5A  0100               	movlb	0	; () banked
  2230  000F5C  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2234  000F5E  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2235  000F62  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2236  000F66  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2237  000F6A  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2238  000F6E  C0D1  F0D0         	movff	??_CANsendMessage+1,??_CANsendMessage
  2239  000F72  C0D2  F0D1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2240  000F76  C0D3  F0D2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2241  000F7A  0100               	movlb	0	; () banked
  2242  000F7C  6BD3               	clrf	(??_CANsendMessage+3)& (0+255),b
  2243  000F7E  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2244  000F82  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2245  000F86  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2246  000F8A  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2250  000F8E  C0D4  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2254  000F92  0E00               	movlw	0
  2255  000F94  010F               	movlb	15	; () banked
  2256  000F96  6F32               	movwf	50,b	;volatile
  2257                           
  2258                           ; BSR set to: 15
  2259                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2260  000F98  010F               	movlb	15	; () banked
  2261  000F9A  8732               	bsf	50,3,b	;volatile
  2262                           
  2263                           ; BSR set to: 15
  2264                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2265  000F9C  0100               	movlb	0	; () banked
  2266  000F9E  A1CA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2267  000FA0  D002               	goto	l400
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2271  000FA2  010F               	movlb	15	; () banked
  2272  000FA4  8132               	bsf	50,0,b	;volatile
  2273  000FA6                     l400:
  2274                           
  2275                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2276  000FA6  0100               	movlb	0	; () banked
  2277  000FA8  A3CA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2278  000FAA  D002               	goto	l401
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2282  000FAC  010F               	movlb	15	; () banked
  2283  000FAE  8332               	bsf	50,1,b	;volatile
  2284  000FB0                     l401:
  2285                           
  2286                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2287  000FB0  0100               	movlb	0	; () banked
  2288  000FB2  A5CA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2289  000FB4  D002               	goto	l402
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2293  000FB6  010F               	movlb	15	; () banked
  2294  000FB8  8B32               	bsf	50,5,b	;volatile
  2295  000FBA                     l402:
  2296                           
  2297                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2298  000FBA  0100               	movlb	0	; () banked
  2299  000FBC  A7CA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2300  000FBE  D002               	goto	l403
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2304  000FC0  010F               	movlb	15	; () banked
  2305  000FC2  8D32               	bsf	50,6,b	;volatile
  2306  000FC4                     l403:
  2307                           
  2308                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2309  000FC4  0100               	movlb	0	; () banked
  2310  000FC6  A9CA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2311  000FC8  D003               	goto	l3381
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2315  000FCA  010F               	movlb	15	; () banked
  2316  000FCC  8F32               	bsf	50,7,b	;volatile
  2317  000FCE  D000               	goto	l3381
  2318  000FD0                     l3381:
  2319                           
  2320                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2321  000FD0  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2322  000FD4  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2323  000FD8  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2324  000FDC  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2325  000FE0  0E16               	movlw	22
  2326  000FE2  D006               	goto	u3630
  2327  000FE4                     u3635:
  2328  000FE4  0100               	movlb	0	; () banked
  2329  000FE6  90D8               	bcf	status,0,c
  2330  000FE8  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2331  000FEA  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2332  000FEC  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2333  000FEE  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2334  000FF0                     u3630:
  2335  000FF0  2EE8               	decfsz	wreg,f,c
  2336  000FF2  D7F8               	goto	u3635
  2337  000FF4  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2338  000FF8  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2339  000FFC  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2340  001000  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2344  001004  0100               	movlb	0	; () banked
  2345  001006  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2346  001008  0100               	movlb	0	; () banked
  2347  00100A  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2348  00100C  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2349  00100E  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2350  001010  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2354  001012  C0D4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2355                           
  2356                           ;inc\CANlib.h: 407: }
  2357  001016  D05A               	goto	l3401
  2358  001018                     l399:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;inc\CANlib.h: 409: else
  2362                           ;inc\CANlib.h: 411: {
  2363                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2364  001018  010F               	movlb	15	; () banked
  2365  00101A  9732               	bcf	50,3,b	;volatile
  2366                           
  2367                           ; BSR set to: 15
  2368                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2369  00101C  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2370  001020  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2371  001024  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2372  001028  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2373  00102C  0E04               	movlw	4
  2374  00102E  D006               	goto	u3640
  2375  001030                     u3645:
  2376  001030  0100               	movlb	0	; () banked
  2377  001032  90D8               	bcf	status,0,c
  2378  001034  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2379  001036  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2380  001038  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2381  00103A  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2382  00103C                     u3640:
  2383  00103C  2EE8               	decfsz	wreg,f,c
  2384  00103E  D7F8               	goto	u3645
  2385  001040  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2386  001044  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2387  001048  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2388  00104C  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2392  001050  0100               	movlb	0	; () banked
  2393  001052  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2394  001054  0100               	movlb	0	; () banked
  2395  001056  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2396  001058  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2397  00105A  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2398  00105C  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2402  00105E  C0D4  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2406  001062  0E07               	movlw	7
  2407  001064  0100               	movlb	0	; () banked
  2408  001066  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2409  001068  0100               	movlb	0	; () banked
  2410  00106A  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2411  00106C  0E00               	movlw	0
  2412  00106E  0100               	movlb	0	; () banked
  2413  001070  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2414  001072  0100               	movlb	0	; () banked
  2415  001074  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2416  001076  0E00               	movlw	0
  2417  001078  0100               	movlb	0	; () banked
  2418  00107A  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2419  00107C  0100               	movlb	0	; () banked
  2420  00107E  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2421  001080  0E00               	movlw	0
  2422  001082  0100               	movlb	0	; () banked
  2423  001084  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2424  001086  0100               	movlb	0	; () banked
  2425  001088  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2429  00108A  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2430  00108E  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2431  001092  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2432  001096  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2433  00109A  0E05               	movlw	5
  2434  00109C                     u3655:
  2435  00109C  90D8               	bcf	status,0,c
  2436  00109E  0100               	movlb	0	; () banked
  2437  0010A0  37D0               	rlcf	??_CANsendMessage& (0+255),f,b
  2438  0010A2  37D1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2439  0010A4  37D2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2440  0010A6  37D3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2441  0010A8  2EE8               	decfsz	wreg,f,c
  2442  0010AA  D7F8               	goto	u3655
  2443  0010AC  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2444  0010B0  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2445  0010B4  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2446  0010B8  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2450  0010BC  010F               	movlb	15	; () banked
  2451  0010BE  5132               	movf	50,w,b	;volatile
  2452  0010C0  0B1F               	andlw	31
  2453  0010C2  010F               	movlb	15	; () banked
  2454  0010C4  6F32               	movwf	50,b	;volatile
  2455                           
  2456                           ; BSR set to: 15
  2457                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2458  0010C6  C0D4  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2459  0010CA  D000               	goto	l3401
  2460  0010CC                     l3401:
  2461                           
  2462                           ;inc\CANlib.h: 422: }
  2463                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2464  0010CC  0100               	movlb	0	; () banked
  2465  0010CE  A1CF               	btfss	CANsendMessage@flags& (0+255),0,b
  2466  0010D0  D003               	goto	l406
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2470  0010D2  010F               	movlb	15	; () banked
  2471  0010D4  8130               	bsf	48,0,b	;volatile
  2472  0010D6  D002               	goto	l407
  2473  0010D8                     l406:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;inc\CANlib.h: 426: else
  2477                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2478  0010D8  010F               	movlb	15	; () banked
  2479  0010DA  9130               	bcf	48,0,b	;volatile
  2480  0010DC                     l407:
  2481                           
  2482                           ; BSR set to: 15
  2483                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2484  0010DC  0100               	movlb	0	; () banked
  2485  0010DE  A3CF               	btfss	CANsendMessage@flags& (0+255),1,b
  2486  0010E0  D003               	goto	l408
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2490  0010E2  010F               	movlb	15	; () banked
  2491  0010E4  8330               	bsf	48,1,b	;volatile
  2492  0010E6  D003               	goto	l3407
  2493  0010E8                     l408:
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;inc\CANlib.h: 430: else
  2497                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2498  0010E8  010F               	movlb	15	; () banked
  2499  0010EA  9330               	bcf	48,1,b	;volatile
  2500  0010EC  D000               	goto	l3407
  2501  0010EE                     l3407:
  2502                           
  2503                           ; BSR set to: 15
  2504                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2505  0010EE  C0CC  FFD9         	movff	CANsendMessage@data,fsr2l
  2506  0010F2  C0CD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2507  0010F6  50DF               	movf	indf2,w,c
  2508  0010F8  010F               	movlb	15	; () banked
  2509  0010FA  6F36               	movwf	54,b	;volatile
  2510                           
  2511                           ; BSR set to: 15
  2512                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2513  0010FC  0100               	movlb	0	; () banked
  2514  0010FE  EE20 F001          	lfsr	2,1
  2515  001102  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2516  001104  26D9               	addwf	fsr2l,f,c
  2517  001106  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2518  001108  22DA               	addwfc	fsr2h,f,c
  2519  00110A  50DF               	movf	indf2,w,c
  2520  00110C  010F               	movlb	15	; () banked
  2521  00110E  6F37               	movwf	55,b	;volatile
  2522                           
  2523                           ; BSR set to: 15
  2524                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2525  001110  0100               	movlb	0	; () banked
  2526  001112  EE20 F002          	lfsr	2,2
  2527  001116  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2528  001118  26D9               	addwf	fsr2l,f,c
  2529  00111A  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2530  00111C  22DA               	addwfc	fsr2h,f,c
  2531  00111E  50DF               	movf	indf2,w,c
  2532  001120  010F               	movlb	15	; () banked
  2533  001122  6F38               	movwf	56,b	;volatile
  2534                           
  2535                           ; BSR set to: 15
  2536                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2537  001124  0100               	movlb	0	; () banked
  2538  001126  EE20 F003          	lfsr	2,3
  2539  00112A  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2540  00112C  26D9               	addwf	fsr2l,f,c
  2541  00112E  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2542  001130  22DA               	addwfc	fsr2h,f,c
  2543  001132  50DF               	movf	indf2,w,c
  2544  001134  010F               	movlb	15	; () banked
  2545  001136  6F39               	movwf	57,b	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2549  001138  0100               	movlb	0	; () banked
  2550  00113A  EE20 F004          	lfsr	2,4
  2551  00113E  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2552  001140  26D9               	addwf	fsr2l,f,c
  2553  001142  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2554  001144  22DA               	addwfc	fsr2h,f,c
  2555  001146  50DF               	movf	indf2,w,c
  2556  001148  010F               	movlb	15	; () banked
  2557  00114A  6F3A               	movwf	58,b	;volatile
  2558                           
  2559                           ; BSR set to: 15
  2560                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2561  00114C  0100               	movlb	0	; () banked
  2562  00114E  EE20 F005          	lfsr	2,5
  2563  001152  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2564  001154  26D9               	addwf	fsr2l,f,c
  2565  001156  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2566  001158  22DA               	addwfc	fsr2h,f,c
  2567  00115A  50DF               	movf	indf2,w,c
  2568  00115C  010F               	movlb	15	; () banked
  2569  00115E  6F3B               	movwf	59,b	;volatile
  2570                           
  2571                           ; BSR set to: 15
  2572                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2573  001160  0100               	movlb	0	; () banked
  2574  001162  EE20 F006          	lfsr	2,6
  2575  001166  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2576  001168  26D9               	addwf	fsr2l,f,c
  2577  00116A  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2578  00116C  22DA               	addwfc	fsr2h,f,c
  2579  00116E  50DF               	movf	indf2,w,c
  2580  001170  010F               	movlb	15	; () banked
  2581  001172  6F3C               	movwf	60,b	;volatile
  2582                           
  2583                           ; BSR set to: 15
  2584                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2585  001174  0100               	movlb	0	; () banked
  2586  001176  EE20 F007          	lfsr	2,7
  2587  00117A  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2588  00117C  26D9               	addwf	fsr2l,f,c
  2589  00117E  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2590  001180  22DA               	addwfc	fsr2h,f,c
  2591  001182  50DF               	movf	indf2,w,c
  2592  001184  010F               	movlb	15	; () banked
  2593  001186  6F3D               	movwf	61,b	;volatile
  2594                           
  2595                           ; BSR set to: 15
  2596                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2597  001188  010F               	movlb	15	; () banked
  2598  00118A  8730               	bsf	48,3,b	;volatile
  2599                           
  2600                           ; BSR set to: 15
  2601                           ;inc\CANlib.h: 444: return;
  2602  00118C  D145               	goto	l395
  2603  00118E                     l396:
  2604                           
  2605                           ; BSR set to: 15
  2606                           ;inc\CANlib.h: 445: }
  2607                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2608  00118E  010F               	movlb	15	; () banked
  2609  001190  B720               	btfsc	32,3,b	;volatile
  2610  001192  D142               	goto	l395
  2611                           
  2612                           ; BSR set to: 15
  2613                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2614  001194  C0CE  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2615                           
  2616                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2617  001198  0100               	movlb	0	; () banked
  2618  00119A  ADCF               	btfss	CANsendMessage@flags& (0+255),6,b
  2619  00119C  D003               	goto	l411
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2623  00119E  010F               	movlb	15	; () banked
  2624  0011A0  8D25               	bsf	37,6,b	;volatile
  2625  0011A2  D002               	goto	l412
  2626  0011A4                     l411:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;inc\CANlib.h: 454: else
  2630                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2631  0011A4  010F               	movlb	15	; () banked
  2632  0011A6  9D25               	bcf	37,6,b	;volatile
  2633  0011A8                     l412:
  2634                           
  2635                           ; BSR set to: 15
  2636                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2637  0011A8  0100               	movlb	0	; () banked
  2638  0011AA  A7CF               	btfss	CANsendMessage@flags& (0+255),3,b
  2639  0011AC  D07A               	goto	l413
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;inc\CANlib.h: 458: {
  2643                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2644  0011AE  0100               	movlb	0	; () banked
  2645  0011B0  51C8               	movf	CANsendMessage@identifier& (0+255),w,b
  2646  0011B2  0100               	movlb	0	; () banked
  2647  0011B4  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2648  0011B6  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2649  0011B8  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2650  0011BA  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2654  0011BC  C0D4  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2658  0011C0  0E00               	movlw	0
  2659  0011C2  0100               	movlb	0	; () banked
  2660  0011C4  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2661  0011C6  0100               	movlb	0	; () banked
  2662  0011C8  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2663  0011CA  0EFF               	movlw	255
  2664  0011CC  0100               	movlb	0	; () banked
  2665  0011CE  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2666  0011D0  0100               	movlb	0	; () banked
  2667  0011D2  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2668  0011D4  0E00               	movlw	0
  2669  0011D6  0100               	movlb	0	; () banked
  2670  0011D8  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2671  0011DA  0100               	movlb	0	; () banked
  2672  0011DC  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2673  0011DE  0E00               	movlw	0
  2674  0011E0  0100               	movlb	0	; () banked
  2675  0011E2  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2676  0011E4  0100               	movlb	0	; () banked
  2677  0011E6  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2681  0011E8  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2682  0011EC  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2683  0011F0  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2684  0011F4  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2685  0011F8  C0D1  F0D0         	movff	??_CANsendMessage+1,??_CANsendMessage
  2686  0011FC  C0D2  F0D1         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2687  001200  C0D3  F0D2         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2688  001204  0100               	movlb	0	; () banked
  2689  001206  6BD3               	clrf	(??_CANsendMessage+3)& (0+255),b
  2690  001208  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2691  00120C  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2692  001210  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2693  001214  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2697  001218  C0D4  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2701  00121C  0E00               	movlw	0
  2702  00121E  010F               	movlb	15	; () banked
  2703  001220  6F22               	movwf	34,b	;volatile
  2704                           
  2705                           ; BSR set to: 15
  2706                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2707  001222  010F               	movlb	15	; () banked
  2708  001224  8722               	bsf	34,3,b	;volatile
  2709                           
  2710                           ; BSR set to: 15
  2711                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2712  001226  0100               	movlb	0	; () banked
  2713  001228  A1CA               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2714  00122A  D002               	goto	l414
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2718  00122C  010F               	movlb	15	; () banked
  2719  00122E  8122               	bsf	34,0,b	;volatile
  2720  001230                     l414:
  2721                           
  2722                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2723  001230  0100               	movlb	0	; () banked
  2724  001232  A3CA               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2725  001234  D002               	goto	l415
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2729  001236  010F               	movlb	15	; () banked
  2730  001238  8322               	bsf	34,1,b	;volatile
  2731  00123A                     l415:
  2732                           
  2733                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2734  00123A  0100               	movlb	0	; () banked
  2735  00123C  A5CA               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2736  00123E  D002               	goto	l416
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2740  001240  010F               	movlb	15	; () banked
  2741  001242  8B22               	bsf	34,5,b	;volatile
  2742  001244                     l416:
  2743                           
  2744                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2745  001244  0100               	movlb	0	; () banked
  2746  001246  A7CA               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2747  001248  D002               	goto	l417
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2751  00124A  010F               	movlb	15	; () banked
  2752  00124C  8D22               	bsf	34,6,b	;volatile
  2753  00124E                     l417:
  2754                           
  2755                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2756  00124E  0100               	movlb	0	; () banked
  2757  001250  A9CA               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2758  001252  D003               	goto	l3457
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2762  001254  010F               	movlb	15	; () banked
  2763  001256  8F22               	bsf	34,7,b	;volatile
  2764  001258  D000               	goto	l3457
  2765  00125A                     l3457:
  2766                           
  2767                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2768  00125A  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2769  00125E  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2770  001262  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2771  001266  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2772  00126A  0E16               	movlw	22
  2773  00126C  D006               	goto	u3760
  2774  00126E                     u3765:
  2775  00126E  0100               	movlb	0	; () banked
  2776  001270  90D8               	bcf	status,0,c
  2777  001272  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2778  001274  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2779  001276  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2780  001278  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2781  00127A                     u3760:
  2782  00127A  2EE8               	decfsz	wreg,f,c
  2783  00127C  D7F8               	goto	u3765
  2784  00127E  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2785  001282  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2786  001286  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2787  00128A  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2791  00128E  0100               	movlb	0	; () banked
  2792  001290  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2793  001292  0100               	movlb	0	; () banked
  2794  001294  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2795  001296  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2796  001298  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2797  00129A  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2801  00129C  C0D4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2802                           
  2803                           ;inc\CANlib.h: 483: }
  2804  0012A0  D05A               	goto	l3477
  2805  0012A2                     l413:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;inc\CANlib.h: 485: else
  2809                           ;inc\CANlib.h: 487: {
  2810                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2811  0012A2  010F               	movlb	15	; () banked
  2812  0012A4  9722               	bcf	34,3,b	;volatile
  2813                           
  2814                           ; BSR set to: 15
  2815                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2816  0012A6  C0C8  F0D0         	movff	CANsendMessage@identifier,??_CANsendMessage
  2817  0012AA  C0C9  F0D1         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2818  0012AE  C0CA  F0D2         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2819  0012B2  C0CB  F0D3         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2820  0012B6  0E04               	movlw	4
  2821  0012B8  D006               	goto	u3770
  2822  0012BA                     u3775:
  2823  0012BA  0100               	movlb	0	; () banked
  2824  0012BC  90D8               	bcf	status,0,c
  2825  0012BE  33D3               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2826  0012C0  33D2               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2827  0012C2  33D1               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2828  0012C4  33D0               	rrcf	??_CANsendMessage& (0+255),f,b
  2829  0012C6                     u3770:
  2830  0012C6  2EE8               	decfsz	wreg,f,c
  2831  0012C8  D7F8               	goto	u3775
  2832  0012CA  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2833  0012CE  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2834  0012D2  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2835  0012D6  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2839  0012DA  0100               	movlb	0	; () banked
  2840  0012DC  51D4               	movf	CANsendMessage@tamp& (0+255),w,b
  2841  0012DE  0100               	movlb	0	; () banked
  2842  0012E0  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2843  0012E2  6BD5               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2844  0012E4  6BD6               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2845  0012E6  6BD7               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2849  0012E8  C0D4  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2853  0012EC  0E07               	movlw	7
  2854  0012EE  0100               	movlb	0	; () banked
  2855  0012F0  15C8               	andwf	CANsendMessage@identifier& (0+255),w,b
  2856  0012F2  0100               	movlb	0	; () banked
  2857  0012F4  6FD4               	movwf	CANsendMessage@tamp& (0+255),b
  2858  0012F6  0E00               	movlw	0
  2859  0012F8  0100               	movlb	0	; () banked
  2860  0012FA  15C9               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2861  0012FC  0100               	movlb	0	; () banked
  2862  0012FE  6FD5               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2863  001300  0E00               	movlw	0
  2864  001302  0100               	movlb	0	; () banked
  2865  001304  15CA               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2866  001306  0100               	movlb	0	; () banked
  2867  001308  6FD6               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2868  00130A  0E00               	movlw	0
  2869  00130C  0100               	movlb	0	; () banked
  2870  00130E  15CB               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2871  001310  0100               	movlb	0	; () banked
  2872  001312  6FD7               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2876  001314  C0D4  F0D0         	movff	CANsendMessage@tamp,??_CANsendMessage
  2877  001318  C0D5  F0D1         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2878  00131C  C0D6  F0D2         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2879  001320  C0D7  F0D3         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2880  001324  0E05               	movlw	5
  2881  001326                     u3785:
  2882  001326  90D8               	bcf	status,0,c
  2883  001328  0100               	movlb	0	; () banked
  2884  00132A  37D0               	rlcf	??_CANsendMessage& (0+255),f,b
  2885  00132C  37D1               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2886  00132E  37D2               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2887  001330  37D3               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2888  001332  2EE8               	decfsz	wreg,f,c
  2889  001334  D7F8               	goto	u3785
  2890  001336  C0D0  F0D4         	movff	??_CANsendMessage,CANsendMessage@tamp
  2891  00133A  C0D1  F0D5         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2892  00133E  C0D2  F0D6         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2893  001342  C0D3  F0D7         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2897  001346  010F               	movlb	15	; () banked
  2898  001348  5122               	movf	34,w,b	;volatile
  2899  00134A  0B1F               	andlw	31
  2900  00134C  010F               	movlb	15	; () banked
  2901  00134E  6F22               	movwf	34,b	;volatile
  2902                           
  2903                           ; BSR set to: 15
  2904                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2905  001350  C0D4  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2906  001354  D000               	goto	l3477
  2907  001356                     l3477:
  2908                           
  2909                           ;inc\CANlib.h: 498: }
  2910                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2911  001356  0100               	movlb	0	; () banked
  2912  001358  A1CF               	btfss	CANsendMessage@flags& (0+255),0,b
  2913  00135A  D003               	goto	l420
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2917  00135C  010F               	movlb	15	; () banked
  2918  00135E  8120               	bsf	32,0,b	;volatile
  2919  001360  D002               	goto	l421
  2920  001362                     l420:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;inc\CANlib.h: 502: else
  2924                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2925  001362  010F               	movlb	15	; () banked
  2926  001364  9120               	bcf	32,0,b	;volatile
  2927  001366                     l421:
  2928                           
  2929                           ; BSR set to: 15
  2930                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2931  001366  0100               	movlb	0	; () banked
  2932  001368  A3CF               	btfss	CANsendMessage@flags& (0+255),1,b
  2933  00136A  D003               	goto	l422
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2937  00136C  010F               	movlb	15	; () banked
  2938  00136E  8320               	bsf	32,1,b	;volatile
  2939  001370  D003               	goto	l3483
  2940  001372                     l422:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;inc\CANlib.h: 506: else
  2944                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2945  001372  010F               	movlb	15	; () banked
  2946  001374  9320               	bcf	32,1,b	;volatile
  2947  001376  D000               	goto	l3483
  2948  001378                     l3483:
  2949                           
  2950                           ; BSR set to: 15
  2951                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2952  001378  C0CC  FFD9         	movff	CANsendMessage@data,fsr2l
  2953  00137C  C0CD  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2954  001380  50DF               	movf	indf2,w,c
  2955  001382  010F               	movlb	15	; () banked
  2956  001384  6F26               	movwf	38,b	;volatile
  2957                           
  2958                           ; BSR set to: 15
  2959                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2960  001386  0100               	movlb	0	; () banked
  2961  001388  EE20 F001          	lfsr	2,1
  2962  00138C  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2963  00138E  26D9               	addwf	fsr2l,f,c
  2964  001390  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2965  001392  22DA               	addwfc	fsr2h,f,c
  2966  001394  50DF               	movf	indf2,w,c
  2967  001396  010F               	movlb	15	; () banked
  2968  001398  6F27               	movwf	39,b	;volatile
  2969                           
  2970                           ; BSR set to: 15
  2971                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2972  00139A  0100               	movlb	0	; () banked
  2973  00139C  EE20 F002          	lfsr	2,2
  2974  0013A0  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2975  0013A2  26D9               	addwf	fsr2l,f,c
  2976  0013A4  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2977  0013A6  22DA               	addwfc	fsr2h,f,c
  2978  0013A8  50DF               	movf	indf2,w,c
  2979  0013AA  010F               	movlb	15	; () banked
  2980  0013AC  6F28               	movwf	40,b	;volatile
  2981                           
  2982                           ; BSR set to: 15
  2983                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2984  0013AE  0100               	movlb	0	; () banked
  2985  0013B0  EE20 F003          	lfsr	2,3
  2986  0013B4  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2987  0013B6  26D9               	addwf	fsr2l,f,c
  2988  0013B8  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2989  0013BA  22DA               	addwfc	fsr2h,f,c
  2990  0013BC  50DF               	movf	indf2,w,c
  2991  0013BE  010F               	movlb	15	; () banked
  2992  0013C0  6F29               	movwf	41,b	;volatile
  2993                           
  2994                           ; BSR set to: 15
  2995                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2996  0013C2  0100               	movlb	0	; () banked
  2997  0013C4  EE20 F004          	lfsr	2,4
  2998  0013C8  51CC               	movf	CANsendMessage@data& (0+255),w,b
  2999  0013CA  26D9               	addwf	fsr2l,f,c
  3000  0013CC  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3001  0013CE  22DA               	addwfc	fsr2h,f,c
  3002  0013D0  50DF               	movf	indf2,w,c
  3003  0013D2  010F               	movlb	15	; () banked
  3004  0013D4  6F2A               	movwf	42,b	;volatile
  3005                           
  3006                           ; BSR set to: 15
  3007                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  3008  0013D6  0100               	movlb	0	; () banked
  3009  0013D8  EE20 F005          	lfsr	2,5
  3010  0013DC  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3011  0013DE  26D9               	addwf	fsr2l,f,c
  3012  0013E0  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3013  0013E2  22DA               	addwfc	fsr2h,f,c
  3014  0013E4  50DF               	movf	indf2,w,c
  3015  0013E6  010F               	movlb	15	; () banked
  3016  0013E8  6F2B               	movwf	43,b	;volatile
  3017                           
  3018                           ; BSR set to: 15
  3019                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  3020  0013EA  0100               	movlb	0	; () banked
  3021  0013EC  EE20 F006          	lfsr	2,6
  3022  0013F0  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3023  0013F2  26D9               	addwf	fsr2l,f,c
  3024  0013F4  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3025  0013F6  22DA               	addwfc	fsr2h,f,c
  3026  0013F8  50DF               	movf	indf2,w,c
  3027  0013FA  010F               	movlb	15	; () banked
  3028  0013FC  6F2C               	movwf	44,b	;volatile
  3029                           
  3030                           ; BSR set to: 15
  3031                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  3032  0013FE  0100               	movlb	0	; () banked
  3033  001400  EE20 F007          	lfsr	2,7
  3034  001404  51CC               	movf	CANsendMessage@data& (0+255),w,b
  3035  001406  26D9               	addwf	fsr2l,f,c
  3036  001408  51CD               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3037  00140A  22DA               	addwfc	fsr2h,f,c
  3038  00140C  50DF               	movf	indf2,w,c
  3039  00140E  010F               	movlb	15	; () banked
  3040  001410  6F2D               	movwf	45,b	;volatile
  3041                           
  3042                           ; BSR set to: 15
  3043                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3044  001412  010F               	movlb	15	; () banked
  3045  001414  8720               	bsf	32,3,b	;volatile
  3046                           
  3047                           ; BSR set to: 15
  3048                           ;inc\CANlib.h: 520: return;
  3049  001416  D000               	goto	l395
  3050  001418                     l395:
  3051                           
  3052                           ; BSR set to: 15
  3053  001418  0012               	return		;funcret
  3054  00141A                     __end_of_CANsendMessage:
  3055                           	opt stack 0
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           prodh	equ	0xFF4
  3061                           prodl	equ	0xFF3
  3062                           postinc0	equ	0xFEE
  3063                           wreg	equ	0xFE8
  3064                           postdec1	equ	0xFE5
  3065                           fsr1l	equ	0xFE1
  3066                           indf2	equ	0xFDF
  3067                           fsr2h	equ	0xFDA
  3068                           fsr2l	equ	0xFD9
  3069                           status	equ	0xFD8
  3070                           
  3071 ;; *************** function _CANisTxReady *****************
  3072 ;; Defined at:
  3073 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      unsigned char 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3087 ;;      Params:         0       0       0       0
  3088 ;;      Locals:         0       1       0       0
  3089 ;;      Temps:          0       0       0       0
  3090 ;;      Totals:         0       1       0       0
  3091 ;;Total ram usage:        1 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    4
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_remote_frame_handler
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text4
  3102  002AB8                     __ptext4:
  3103                           	opt stack 0
  3104  002AB8                     _CANisTxReady:
  3105                           	opt stack 25
  3106                           
  3107                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3108                           
  3109                           ; BSR set to: 15
  3110                           ;incstack = 0
  3111  002AB8  0E01               	movlw	1
  3112  002ABA  0100               	movlb	0	; () banked
  3113  002ABC  6FC8               	movwf	_CANisTxReady$3278& (0+255),b
  3114                           
  3115                           ; BSR set to: 0
  3116  002ABE  010F               	movlb	15	; () banked
  3117  002AC0  A740               	btfss	64,3,b	;volatile
  3118  002AC2  D009               	goto	l574
  3119                           
  3120                           ; BSR set to: 15
  3121  002AC4  010F               	movlb	15	; () banked
  3122  002AC6  A730               	btfss	48,3,b	;volatile
  3123  002AC8  D006               	goto	l574
  3124                           
  3125                           ; BSR set to: 15
  3126  002ACA  010F               	movlb	15	; () banked
  3127  002ACC  A720               	btfss	32,3,b	;volatile
  3128  002ACE  D003               	goto	l574
  3129                           
  3130                           ; BSR set to: 15
  3131  002AD0  0E00               	movlw	0
  3132  002AD2  0100               	movlb	0	; () banked
  3133  002AD4  6FC8               	movwf	_CANisTxReady$3278& (0+255),b
  3134  002AD6                     l574:
  3135  002AD6  0100               	movlb	0	; () banked
  3136  002AD8  51C8               	movf	_CANisTxReady$3278& (0+255),w,b
  3137  002ADA  D000               	goto	l575
  3138  002ADC                     l575:
  3139                           
  3140                           ; BSR set to: 0
  3141  002ADC  0012               	return		;funcret
  3142  002ADE                     __end_of_CANisTxReady:
  3143                           	opt stack 0
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           prodh	equ	0xFF4
  3149                           prodl	equ	0xFF3
  3150                           postinc0	equ	0xFEE
  3151                           wreg	equ	0xFE8
  3152                           postdec1	equ	0xFE5
  3153                           fsr1l	equ	0xFE1
  3154                           indf2	equ	0xFDF
  3155                           fsr2h	equ	0xFDA
  3156                           fsr2l	equ	0xFD9
  3157                           status	equ	0xFD8
  3158                           
  3159 ;; *************** function _board_initialization *****************
  3160 ;; Defined at:
  3161 ;;		line 400 in file "ABS_Code.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;		None               void
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3175 ;;      Params:         0       0       0       0
  3176 ;;      Locals:         0       0       0       0
  3177 ;;      Temps:          0       0       0       0
  3178 ;;      Totals:         0       0       0       0
  3179 ;;Total ram usage:        0 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    6
  3182 ;; This function calls:
  3183 ;;		_CANInitialize
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text5
  3190  002884                     __ptext5:
  3191                           	opt stack 0
  3192  002884                     _board_initialization:
  3193                           	opt stack 24
  3194                           
  3195                           ;ABS_Code.c: 402: LATA = 0x00;
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;incstack = 0
  3199  002884  0E00               	movlw	0
  3200  002886  6E89               	movwf	3977,c	;volatile
  3201                           
  3202                           ;ABS_Code.c: 403: TRISA = 0b11111101;
  3203  002888  0EFD               	movlw	253
  3204  00288A  6E92               	movwf	3986,c	;volatile
  3205                           
  3206                           ;ABS_Code.c: 404: LATB = 0x00;
  3207  00288C  0E00               	movlw	0
  3208  00288E  6E8A               	movwf	3978,c	;volatile
  3209                           
  3210                           ;ABS_Code.c: 405: TRISB = 0b11111111;
  3211  002890  6893               	setf	3987,c	;volatile
  3212                           
  3213                           ;ABS_Code.c: 406: LATC = 0x00;
  3214  002892  0E00               	movlw	0
  3215  002894  6E8B               	movwf	3979,c	;volatile
  3216                           
  3217                           ;ABS_Code.c: 407: TRISC = 0b11111100;
  3218  002896  0EFC               	movlw	252
  3219  002898  6E94               	movwf	3988,c	;volatile
  3220                           
  3221                           ;ABS_Code.c: 408: LATD = 0x00;
  3222  00289A  0E00               	movlw	0
  3223  00289C  6E8C               	movwf	3980,c	;volatile
  3224                           
  3225                           ;ABS_Code.c: 409: TRISD = 0xFF;
  3226  00289E  6895               	setf	3989,c	;volatile
  3227                           
  3228                           ;ABS_Code.c: 410: LATE = 0x00;
  3229  0028A0  0E00               	movlw	0
  3230  0028A2  6E8D               	movwf	3981,c	;volatile
  3231                           
  3232                           ;ABS_Code.c: 411: TRISE = 0xFF;
  3233  0028A4  6896               	setf	3990,c	;volatile
  3234                           
  3235                           ;ABS_Code.c: 413: ADCON1 = 0b11111110;
  3236  0028A6  0EFE               	movlw	254
  3237  0028A8  6EC1               	movwf	4033,c	;volatile
  3238                           
  3239                           ;ABS_Code.c: 416: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3240  0028AA  0E06               	movlw	6
  3241  0028AC  0101               	movlb	1	; () banked
  3242  0028AE  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3243  0028B0  0E05               	movlw	5
  3244  0028B2  0101               	movlb	1	; () banked
  3245  0028B4  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3246  0028B6  0E01               	movlw	1
  3247  0028B8  0101               	movlb	1	; () banked
  3248  0028BA  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3249  0028BC  0E03               	movlw	3
  3250  0028BE  0101               	movlb	1	; () banked
  3251  0028C0  6F03               	movwf	CANInitialize@BRP& (0+255),b
  3252  0028C2  0E9D               	movlw	157
  3253  0028C4  0101               	movlb	1	; () banked
  3254  0028C6  6F04               	movwf	CANInitialize@flags& (0+255),b
  3255  0028C8  0E04               	movlw	4
  3256  0028CA  EC32  F011         	call	_CANInitialize
  3257                           
  3258                           ;ABS_Code.c: 419: PIR3bits.RXB1IF = 0;
  3259  0028CE  92A4               	bcf	4004,1,c	;volatile
  3260                           
  3261                           ;ABS_Code.c: 420: PIR3bits.RXB0IF = 0;
  3262  0028D0  90A4               	bcf	4004,0,c	;volatile
  3263                           
  3264                           ;ABS_Code.c: 421: INTCONbits.TMR0IF = 0;
  3265  0028D2  94F2               	bcf	intcon,2,c	;volatile
  3266                           
  3267                           ;ABS_Code.c: 422: PIR1bits.TMR1IF = 0;
  3268  0028D4  909E               	bcf	3998,0,c	;volatile
  3269                           
  3270                           ;ABS_Code.c: 423: PIR2bits.TMR3IF = 0;
  3271  0028D6  92A1               	bcf	4001,1,c	;volatile
  3272                           
  3273                           ;ABS_Code.c: 424: INTCONbits.INT0IF = 0;
  3274  0028D8  92F2               	bcf	intcon,1,c	;volatile
  3275                           
  3276                           ;ABS_Code.c: 425: INTCON3bits.INT1IF = 0;
  3277  0028DA  90F0               	bcf	intcon3,0,c	;volatile
  3278                           
  3279                           ;ABS_Code.c: 429: RCONbits.IPEN = 1;
  3280  0028DC  8ED0               	bsf	4048,7,c	;volatile
  3281                           
  3282                           ;ABS_Code.c: 430: IPR3bits.RXB1IP = 0;
  3283  0028DE  92A5               	bcf	4005,1,c	;volatile
  3284                           
  3285                           ;ABS_Code.c: 431: IPR3bits.RXB0IP = 0;
  3286  0028E0  90A5               	bcf	4005,0,c	;volatile
  3287                           
  3288                           ;ABS_Code.c: 432: INTCON2bits.TMR0IP = 1;
  3289  0028E2  84F1               	bsf	intcon2,2,c	;volatile
  3290                           
  3291                           ;ABS_Code.c: 433: INTCON3bits.INT1IP = 1;
  3292  0028E4  8CF0               	bsf	intcon3,6,c	;volatile
  3293                           
  3294                           ;ABS_Code.c: 434: IPR1bits.TMR1IP = 0;
  3295  0028E6  909F               	bcf	3999,0,c	;volatile
  3296                           
  3297                           ;ABS_Code.c: 435: IPR2bits.TMR3IP = 0;
  3298  0028E8  92A2               	bcf	4002,1,c	;volatile
  3299                           
  3300                           ;ABS_Code.c: 438: T0CON = 0x80;
  3301  0028EA  0E80               	movlw	128
  3302  0028EC  6ED5               	movwf	4053,c	;volatile
  3303                           
  3304                           ;ABS_Code.c: 445: TMR0H = 0xFF;
  3305  0028EE  68D7               	setf	4055,c	;volatile
  3306                           
  3307                           ;ABS_Code.c: 446: TMR0L = 0xFE;
  3308  0028F0  0EFE               	movlw	254
  3309  0028F2  6ED6               	movwf	4054,c	;volatile
  3310                           
  3311                           ;ABS_Code.c: 447: PORTCbits.RC0 = 0;
  3312  0028F4  9082               	bcf	3970,0,c	;volatile
  3313                           
  3314                           ;ABS_Code.c: 448: brake_value_degree = 90;
  3315  0028F6  0E5A               	movlw	90
  3316  0028F8  6E40               	movwf	_brake_value_degree,c	;volatile
  3317                           
  3318                           ;ABS_Code.c: 449: T1CON = 00110000;
  3319  0028FA  0E00               	movlw	0
  3320  0028FC  6ECD               	movwf	4045,c	;volatile
  3321                           
  3322                           ;ABS_Code.c: 450: T3CON = 01110000;
  3323  0028FE  0E00               	movlw	0
  3324  002900  6EB1               	movwf	4017,c	;volatile
  3325                           
  3326                           ;ABS_Code.c: 451: INTCON2bits.INTEDG0 = 1;
  3327  002902  8CF1               	bsf	intcon2,6,c	;volatile
  3328                           
  3329                           ;ABS_Code.c: 452: INTCON2bits.INTEDG1 = 1;
  3330  002904  8AF1               	bsf	intcon2,5,c	;volatile
  3331                           
  3332                           ;ABS_Code.c: 455: ADCON1 = 0b00001110;
  3333  002906  0E0E               	movlw	14
  3334  002908  6EC1               	movwf	4033,c	;volatile
  3335                           
  3336                           ;ABS_Code.c: 456: ADCON0bits.CHS3 = 0;
  3337  00290A  9AC2               	bcf	4034,5,c	;volatile
  3338                           
  3339                           ;ABS_Code.c: 457: ADCON0bits.CHS2 = 0;
  3340  00290C  98C2               	bcf	4034,4,c	;volatile
  3341                           
  3342                           ;ABS_Code.c: 458: ADCON0bits.CHS1 = 0;
  3343  00290E  96C2               	bcf	4034,3,c	;volatile
  3344                           
  3345                           ;ABS_Code.c: 459: ADCON0bits.CHS0 = 0;
  3346  002910  94C2               	bcf	4034,2,c	;volatile
  3347                           
  3348                           ;ABS_Code.c: 460: ADCON2bits.ACQT2 = 1;
  3349  002912  8AC0               	bsf	4032,5,c	;volatile
  3350                           
  3351                           ;ABS_Code.c: 461: ADCON2bits.ACQT1 = 1;
  3352  002914  88C0               	bsf	4032,4,c	;volatile
  3353                           
  3354                           ;ABS_Code.c: 462: ADCON2bits.ACQT0 = 0;
  3355  002916  96C0               	bcf	4032,3,c	;volatile
  3356                           
  3357                           ;ABS_Code.c: 463: ADCON2bits.ADCS2 = 1;
  3358  002918  84C0               	bsf	4032,2,c	;volatile
  3359                           
  3360                           ;ABS_Code.c: 464: ADCON2bits.ADCS1 = 0;
  3361  00291A  92C0               	bcf	4032,1,c	;volatile
  3362                           
  3363                           ;ABS_Code.c: 465: ADCON2bits.ADCS0 = 1;
  3364  00291C  80C0               	bsf	4032,0,c	;volatile
  3365                           
  3366                           ;ABS_Code.c: 466: ADCON2bits.ADFM = 0;
  3367  00291E  9EC0               	bcf	4032,7,c	;volatile
  3368                           
  3369                           ;ABS_Code.c: 467: ADCON0bits.ADON = 1;
  3370  002920  80C2               	bsf	4034,0,c	;volatile
  3371                           
  3372                           ;ABS_Code.c: 470: PIE3bits.RXB1IE = 1;
  3373  002922  82A3               	bsf	4003,1,c	;volatile
  3374                           
  3375                           ;ABS_Code.c: 471: PIE3bits.RXB0IE = 1;
  3376  002924  80A3               	bsf	4003,0,c	;volatile
  3377                           
  3378                           ;ABS_Code.c: 472: INTCONbits.TMR0IE = 1;
  3379  002926  8AF2               	bsf	intcon,5,c	;volatile
  3380                           
  3381                           ;ABS_Code.c: 473: PIE1bits.TMR1IE = 1;
  3382  002928  809D               	bsf	3997,0,c	;volatile
  3383                           
  3384                           ;ABS_Code.c: 474: PIE2bits.TMR3IE = 1;
  3385  00292A  82A0               	bsf	4000,1,c	;volatile
  3386                           
  3387                           ;ABS_Code.c: 475: INTCONbits.INT0IE = 1;
  3388  00292C  88F2               	bsf	intcon,4,c	;volatile
  3389                           
  3390                           ;ABS_Code.c: 476: INTCON3bits.INT1IE = 1;
  3391  00292E  86F0               	bsf	intcon3,3,c	;volatile
  3392                           
  3393                           ;ABS_Code.c: 477: INTCONbits.GIEH = 1;
  3394  002930  8EF2               	bsf	intcon,7,c	;volatile
  3395                           
  3396                           ;ABS_Code.c: 478: INTCONbits.GIEL = 1;
  3397  002932  8CF2               	bsf	intcon,6,c	;volatile
  3398                           
  3399                           ;ABS_Code.c: 481: T1CONbits.TMR1ON = 1;
  3400  002934  80CD               	bsf	4045,0,c	;volatile
  3401                           
  3402                           ;ABS_Code.c: 482: T3CONbits.TMR3ON = 1;
  3403  002936  80B1               	bsf	4017,0,c	;volatile
  3404                           
  3405                           ;ABS_Code.c: 483: T0CONbits.TMR0ON = 1;
  3406  002938  8ED5               	bsf	4053,7,c	;volatile
  3407  00293A  0012               	return		;funcret
  3408  00293C                     __end_of_board_initialization:
  3409                           	opt stack 0
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           intcon	equ	0xFF2
  3417                           intcon2	equ	0xFF1
  3418                           intcon3	equ	0xFF0
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1l	equ	0xFE1
  3423                           indf2	equ	0xFDF
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _CANInitialize *****************
  3429 ;; Defined at:
  3430 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  propSeg         1    wreg     unsigned char 
  3433 ;;  phaseSeg1       1    0[BANK1 ] unsigned char 
  3434 ;;  phaseSeg2       1    1[BANK1 ] unsigned char 
  3435 ;;  SJW             1    2[BANK1 ] unsigned char 
  3436 ;;  BRP             1    3[BANK1 ] unsigned char 
  3437 ;;  flags           1    4[BANK1 ] enum E16885
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  propSeg         1   44[BANK0 ] unsigned char 
  3440 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3441 ;;  FilterConfig    1   45[BANK0 ] unsigned char 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3451 ;;      Params:         0       0       5       0
  3452 ;;      Locals:         0       3       0       0
  3453 ;;      Temps:          0       0       4       0
  3454 ;;      Totals:         0       3       9       0
  3455 ;;Total ram usage:       12 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    5
  3458 ;; This function calls:
  3459 ;;		_CANOperationMode
  3460 ;;		_CANSetFilter
  3461 ;;		_CANSetMask
  3462 ;; This function is called by:
  3463 ;;		_board_initialization
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text6
  3468  002264                     __ptext6:
  3469                           	opt stack 0
  3470  002264                     _CANInitialize:
  3471                           	opt stack 24
  3472                           
  3473                           ;incstack = 0
  3474                           ;CANInitialize@propSeg stored from wreg
  3475  002264  0100               	movlb	0	; () banked
  3476  002266  6FD6               	movwf	CANInitialize@propSeg& (0+255),b
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3480                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3481                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3482  002268  0E80               	movlw	128
  3483  00226A  EC6F  F015         	call	_CANOperationMode
  3484                           
  3485                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3486  00226E  0E00               	movlw	0
  3487  002270  6E70               	movwf	3952,c	;volatile
  3488                           
  3489                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3490  002272  0E00               	movlw	0
  3491  002274  6E71               	movwf	3953,c	;volatile
  3492                           
  3493                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3494  002276  0E00               	movlw	0
  3495  002278  6E72               	movwf	3954,c	;volatile
  3496                           
  3497                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3498  00227A  0101               	movlb	1	; () banked
  3499  00227C  4102               	rrncf	CANInitialize@SJW& (0+255),w,b
  3500  00227E  42E8               	rrncf	wreg,f,c
  3501  002280  0BC0               	andlw	192
  3502  002282  0101               	movlb	1	; () banked
  3503  002284  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3507  002286  0101               	movlb	1	; () banked
  3508  002288  5102               	movf	CANInitialize@SJW& (0+255),w,b
  3509  00228A  1270               	iorwf	3952,f,c	;volatile
  3510                           
  3511                           ; BSR set to: 1
  3512                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3513  00228C  0101               	movlb	1	; () banked
  3514  00228E  5103               	movf	CANInitialize@BRP& (0+255),w,b
  3515  002290  1270               	iorwf	3952,f,c	;volatile
  3516                           
  3517                           ; BSR set to: 1
  3518                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3519  002292  0100               	movlb	0	; () banked
  3520  002294  51D6               	movf	CANInitialize@propSeg& (0+255),w,b
  3521  002296  1271               	iorwf	3953,f,c	;volatile
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3525  002298  0101               	movlb	1	; () banked
  3526  00229A  3900               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3527  00229C  42E8               	rrncf	wreg,f,c
  3528  00229E  0BF8               	andlw	248
  3529  0022A0  0101               	movlb	1	; () banked
  3530  0022A2  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3531                           
  3532                           ; BSR set to: 1
  3533                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3534  0022A4  0101               	movlb	1	; () banked
  3535  0022A6  5100               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3536  0022A8  1271               	iorwf	3953,f,c	;volatile
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3540  0022AA  0101               	movlb	1	; () banked
  3541  0022AC  A504               	btfss	CANInitialize@flags& (0+255),2,b
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3545  0022AE  8C71               	bsf	3953,6,c	;volatile
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3549  0022B0  0101               	movlb	1	; () banked
  3550  0022B2  A104               	btfss	CANInitialize@flags& (0+255),0,b
  3551  0022B4  D002               	goto	l4257
  3552                           
  3553                           ; BSR set to: 1
  3554                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3555  0022B6  8E71               	bsf	3953,7,c	;volatile
  3556  0022B8  D000               	goto	l4257
  3557  0022BA                     l4257:
  3558                           
  3559                           ; BSR set to: 1
  3560                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3561  0022BA  0101               	movlb	1	; () banked
  3562  0022BC  5101               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3563  0022BE  1272               	iorwf	3954,f,c	;volatile
  3564                           
  3565                           ; BSR set to: 1
  3566                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3567  0022C0  0101               	movlb	1	; () banked
  3568  0022C2  A304               	btfss	CANInitialize@flags& (0+255),1,b
  3569  0022C4  D002               	goto	l4263
  3570                           
  3571                           ; BSR set to: 1
  3572                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3573  0022C6  8C72               	bsf	3954,6,c	;volatile
  3574  0022C8  D000               	goto	l4263
  3575  0022CA                     l4263:
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3579  0022CA  0101               	movlb	1	; () banked
  3580  0022CC  5104               	movf	CANInitialize@flags& (0+255),w,b
  3581  0022CE  0B60               	andlw	96
  3582  0022D0  6E60               	movwf	3936,c	;volatile
  3583                           
  3584                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3585  0022D2  0101               	movlb	1	; () banked
  3586  0022D4  5104               	movf	CANInitialize@flags& (0+255),w,b
  3587  0022D6  0B10               	andlw	16
  3588  0022D8  0AFF               	xorlw	255
  3589  0022DA  B4D8               	btfsc	status,2,c
  3590                           
  3591                           ; BSR set to: 1
  3592                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3593  0022DC  8460               	bsf	3936,2,c	;volatile
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3597  0022DE  CF60 FF50          	movff	3936,3920	;volatile
  3598                           
  3599                           ; BSR set to: 1
  3600                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3601  0022E2  0E00               	movlw	0
  3602  0022E4  0100               	movlb	0	; () banked
  3603  0022E6  6FC8               	movwf	CANSetMask@mask& (0+255),b
  3604  0022E8  0E00               	movlw	0
  3605  0022EA  6FC9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3606  0022EC  0E00               	movlw	0
  3607  0022EE  6FCA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3608  0022F0  0E00               	movlw	0
  3609  0022F2  6FCB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3610  0022F4  0EF7               	movlw	247
  3611  0022F6  0100               	movlb	0	; () banked
  3612  0022F8  6FCC               	movwf	CANSetMask@type& (0+255),b
  3613  0022FA  0E01               	movlw	1
  3614  0022FC  ECA4  F00C         	call	_CANSetMask
  3615                           
  3616                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3617  002300  0E00               	movlw	0
  3618  002302  0100               	movlb	0	; () banked
  3619  002304  6FC8               	movwf	CANSetMask@mask& (0+255),b
  3620  002306  0E00               	movlw	0
  3621  002308  6FC9               	movwf	(CANSetMask@mask+1)& (0+255),b
  3622  00230A  0E00               	movlw	0
  3623  00230C  6FCA               	movwf	(CANSetMask@mask+2)& (0+255),b
  3624  00230E  0E00               	movlw	0
  3625  002310  6FCB               	movwf	(CANSetMask@mask+3)& (0+255),b
  3626  002312  0EF7               	movlw	247
  3627  002314  0100               	movlb	0	; () banked
  3628  002316  6FCC               	movwf	CANSetMask@type& (0+255),b
  3629  002318  0E02               	movlw	2
  3630  00231A  ECA4  F00C         	call	_CANSetMask
  3631                           
  3632                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3633  00231E  D00F               	goto	l4275
  3634  002320                     l4269:
  3635                           
  3636                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3637  002320  0EF7               	movlw	247
  3638  002322  0100               	movlb	0	; () banked
  3639  002324  6FD7               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3640  002326  D007               	goto	l4271
  3641  002328                     l376:
  3642                           
  3643                           ; BSR set to: 1
  3644                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3645  002328  0100               	movlb	0	; () banked
  3646  00232A  69D7               	setf	CANInitialize@FilterConfig1& (0+255),b
  3647                           
  3648                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3649  00232C  0100               	movlb	0	; () banked
  3650  00232E  69D8               	setf	CANInitialize@FilterConfig2& (0+255),b
  3651                           
  3652                           ;inc\CANlib.h: 273: break;
  3653  002330  D028               	goto	l4277
  3654  002332                     l377:
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3658  002332  0100               	movlb	0	; () banked
  3659  002334  69D7               	setf	CANInitialize@FilterConfig1& (0+255),b
  3660  002336                     l4271:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3664  002336  0EF7               	movlw	247
  3665  002338  0100               	movlb	0	; () banked
  3666  00233A  6FD8               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;inc\CANlib.h: 278: }
  3670                           
  3671                           ;inc\CANlib.h: 277: break;
  3672  00233C  D022               	goto	l4277
  3673  00233E                     l4275:
  3674  00233E  0E9F               	movlw	159
  3675  002340  0101               	movlb	1	; () banked
  3676  002342  6F05               	movwf	??_CANInitialize& (0+255),b
  3677  002344  0EFF               	movlw	255
  3678  002346  0101               	movlb	1	; () banked
  3679  002348  6F06               	movwf	(??_CANInitialize+1)& (0+255),b
  3680  00234A  0101               	movlb	1	; () banked
  3681  00234C  5104               	movf	CANInitialize@flags& (0+255),w,b
  3682  00234E  0B60               	andlw	96
  3683  002350  0101               	movlb	1	; () banked
  3684  002352  6F07               	movwf	(??_CANInitialize+2)& (0+255),b
  3685  002354  6B08               	clrf	(??_CANInitialize+3)& (0+255),b
  3686  002356  0101               	movlb	1	; () banked
  3687  002358  5105               	movf	??_CANInitialize& (0+255),w,b
  3688  00235A  0101               	movlb	1	; () banked
  3689  00235C  1307               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3690  00235E  0101               	movlb	1	; () banked
  3691  002360  5106               	movf	(??_CANInitialize+1)& (0+255),w,b
  3692  002362  0101               	movlb	1	; () banked
  3693  002364  1308               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3694                           
  3695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3696                           ; Switch size 1, requested type "space"
  3697                           ; Number of cases is 1, Range of values is 0 to 0
  3698                           ; switch strategies available:
  3699                           ; Name         Instructions Cycles
  3700                           ; simple_byte            4     3 (average)
  3701                           ;	Chosen strategy is simple_byte
  3702  002366  0101               	movlb	1	; () banked
  3703  002368  5108               	movf	(??_CANInitialize+3)& (0+255),w,b
  3704  00236A  0A00               	xorlw	0	; case 0
  3705  00236C  A4D8               	btfss	status,2,c
  3706  00236E  D7E1               	goto	l377
  3707                           
  3708                           ; BSR set to: 1
  3709                           ; Switch size 1, requested type "space"
  3710                           ; Number of cases is 2, Range of values is 191 to 223
  3711                           ; switch strategies available:
  3712                           ; Name         Instructions Cycles
  3713                           ; simple_byte            7     4 (average)
  3714                           ;	Chosen strategy is simple_byte
  3715  002370  0101               	movlb	1	; () banked
  3716  002372  5107               	movf	(??_CANInitialize+2)& (0+255),w,b
  3717  002374  0ABF               	xorlw	191	; case 191
  3718  002376  B4D8               	btfsc	status,2,c
  3719  002378  D7D7               	goto	l376
  3720  00237A  0A60               	xorlw	96	; case 223
  3721  00237C  B4D8               	btfsc	status,2,c
  3722  00237E  D7D0               	goto	l4269
  3723  002380  D7D8               	goto	l377
  3724  002382                     l4277:
  3725                           
  3726                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3727  002382  0E00               	movlw	0
  3728  002384  0100               	movlb	0	; () banked
  3729  002386  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3730  002388  0E00               	movlw	0
  3731  00238A  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3732  00238C  0E00               	movlw	0
  3733  00238E  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3734  002390  0E00               	movlw	0
  3735  002392  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3736  002394  C0D7  F0CC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3737  002398  0E00               	movlw	0
  3738  00239A  ECA8  F000         	call	_CANSetFilter
  3739                           
  3740                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3741  00239E  0E00               	movlw	0
  3742  0023A0  0100               	movlb	0	; () banked
  3743  0023A2  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3744  0023A4  0E00               	movlw	0
  3745  0023A6  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3746  0023A8  0E00               	movlw	0
  3747  0023AA  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3748  0023AC  0E00               	movlw	0
  3749  0023AE  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3750  0023B0  C0D7  F0CC         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3751  0023B4  0E01               	movlw	1
  3752  0023B6  ECA8  F000         	call	_CANSetFilter
  3753                           
  3754                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3755  0023BA  0E00               	movlw	0
  3756  0023BC  0100               	movlb	0	; () banked
  3757  0023BE  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3758  0023C0  0E00               	movlw	0
  3759  0023C2  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3760  0023C4  0E00               	movlw	0
  3761  0023C6  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3762  0023C8  0E00               	movlw	0
  3763  0023CA  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3764  0023CC  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3765  0023D0  0E02               	movlw	2
  3766  0023D2  ECA8  F000         	call	_CANSetFilter
  3767                           
  3768                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3769  0023D6  0E00               	movlw	0
  3770  0023D8  0100               	movlb	0	; () banked
  3771  0023DA  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3772  0023DC  0E00               	movlw	0
  3773  0023DE  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3774  0023E0  0E00               	movlw	0
  3775  0023E2  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3776  0023E4  0E00               	movlw	0
  3777  0023E6  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3778  0023E8  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3779  0023EC  0E03               	movlw	3
  3780  0023EE  ECA8  F000         	call	_CANSetFilter
  3781                           
  3782                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3783  0023F2  0E00               	movlw	0
  3784  0023F4  0100               	movlb	0	; () banked
  3785  0023F6  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3786  0023F8  0E00               	movlw	0
  3787  0023FA  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3788  0023FC  0E00               	movlw	0
  3789  0023FE  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3790  002400  0E00               	movlw	0
  3791  002402  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3792  002404  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3793  002408  0E04               	movlw	4
  3794  00240A  ECA8  F000         	call	_CANSetFilter
  3795                           
  3796                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3797  00240E  0E00               	movlw	0
  3798  002410  0100               	movlb	0	; () banked
  3799  002412  6FC8               	movwf	CANSetFilter@filter& (0+255),b
  3800  002414  0E00               	movlw	0
  3801  002416  6FC9               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3802  002418  0E00               	movlw	0
  3803  00241A  6FCA               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3804  00241C  0E00               	movlw	0
  3805  00241E  6FCB               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3806  002420  C0D8  F0CC         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3807  002424  0E05               	movlw	5
  3808  002426  ECA8  F000         	call	_CANSetFilter
  3809                           
  3810                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3811  00242A  0E00               	movlw	0
  3812  00242C  EC6F  F015         	call	_CANOperationMode
  3813  002430  0012               	return		;funcret
  3814  002432                     __end_of_CANInitialize:
  3815                           	opt stack 0
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           intcon	equ	0xFF2
  3823                           intcon2	equ	0xFF1
  3824                           intcon3	equ	0xFF0
  3825                           postinc0	equ	0xFEE
  3826                           wreg	equ	0xFE8
  3827                           postdec1	equ	0xFE5
  3828                           fsr1l	equ	0xFE1
  3829                           indf2	equ	0xFDF
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8
  3833                           
  3834 ;; *************** function _CANSetMask *****************
  3835 ;; Defined at:
  3836 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  numBuffer       1    wreg     enum E16919
  3839 ;;  mask            4   30[BANK0 ] unsigned long 
  3840 ;;  type            1   34[BANK0 ] enum E16885
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  numBuffer       1   39[BANK0 ] enum E16919
  3843 ;;  tamp            4   40[BANK0 ] unsigned long 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;		None               void
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3853 ;;      Params:         0       5       0       0
  3854 ;;      Locals:         0       5       0       0
  3855 ;;      Temps:          0       4       0       0
  3856 ;;      Totals:         0      14       0       0
  3857 ;;Total ram usage:       14 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    4
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_CANInitialize
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text7
  3868  001948                     __ptext7:
  3869                           	opt stack 0
  3870  001948                     _CANSetMask:
  3871                           	opt stack 24
  3872                           
  3873                           ;incstack = 0
  3874                           ;CANSetMask@numBuffer stored from wreg
  3875  001948  0100               	movlb	0	; () banked
  3876  00194A  6FD1               	movwf	CANSetMask@numBuffer& (0+255),b
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3880  00194C  0100               	movlb	0	; () banked
  3881  00194E  05D1               	decf	CANSetMask@numBuffer& (0+255),w,b
  3882  001950  A4D8               	btfss	status,2,c
  3883  001952  D057               	goto	l2829
  3884                           
  3885                           ; BSR set to: 0
  3886  001954  0100               	movlb	0	; () banked
  3887  001956  29CC               	incf	CANSetMask@type& (0+255),w,b
  3888  001958  A4D8               	btfss	status,2,c
  3889  00195A  D053               	goto	l2829
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 644: {
  3893                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3894  00195C  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  3895  001960  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3896  001964  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3897  001968  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3898  00196C  0E04               	movlw	4
  3899  00196E  D006               	goto	u2440
  3900  001970                     u2445:
  3901  001970  0100               	movlb	0	; () banked
  3902  001972  90D8               	bcf	status,0,c
  3903  001974  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3904  001976  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3905  001978  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3906  00197A  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  3907  00197C                     u2440:
  3908  00197C  2EE8               	decfsz	wreg,f,c
  3909  00197E  D7F8               	goto	u2445
  3910  001980  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  3911  001984  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3912  001988  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3913  00198C  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3917  001990  0100               	movlb	0	; () banked
  3918  001992  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  3919  001994  0100               	movlb	0	; () banked
  3920  001996  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  3921  001998  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3922  00199A  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3923  00199C  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3927  00199E  C0D2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3931  0019A2  0E07               	movlw	7
  3932  0019A4  0100               	movlb	0	; () banked
  3933  0019A6  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  3934  0019A8  0100               	movlb	0	; () banked
  3935  0019AA  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  3936  0019AC  0E00               	movlw	0
  3937  0019AE  0100               	movlb	0	; () banked
  3938  0019B0  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3939  0019B2  0100               	movlb	0	; () banked
  3940  0019B4  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3941  0019B6  0E00               	movlw	0
  3942  0019B8  0100               	movlb	0	; () banked
  3943  0019BA  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3944  0019BC  0100               	movlb	0	; () banked
  3945  0019BE  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3946  0019C0  0E00               	movlw	0
  3947  0019C2  0100               	movlb	0	; () banked
  3948  0019C4  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3949  0019C6  0100               	movlb	0	; () banked
  3950  0019C8  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3954  0019CA  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  3955  0019CE  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3956  0019D2  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3957  0019D6  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3958  0019DA  0E05               	movlw	5
  3959  0019DC                     u2455:
  3960  0019DC  90D8               	bcf	status,0,c
  3961  0019DE  0100               	movlb	0	; () banked
  3962  0019E0  37CD               	rlcf	??_CANSetMask& (0+255),f,b
  3963  0019E2  37CE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3964  0019E4  37CF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3965  0019E6  37D0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3966  0019E8  2EE8               	decfsz	wreg,f,c
  3967  0019EA  D7F8               	goto	u2455
  3968  0019EC  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  3969  0019F0  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3970  0019F4  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3971  0019F8  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3975  0019FC  C0D2  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3976  001A00  D000               	goto	l2829
  3977  001A02                     l2829:
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 652: }
  3981                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3982  001A02  0E02               	movlw	2
  3983  001A04  0100               	movlb	0	; () banked
  3984  001A06  19D1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3985  001A08  A4D8               	btfss	status,2,c
  3986  001A0A  D057               	goto	l2845
  3987                           
  3988                           ; BSR set to: 0
  3989  001A0C  0100               	movlb	0	; () banked
  3990  001A0E  29CC               	incf	CANSetMask@type& (0+255),w,b
  3991  001A10  A4D8               	btfss	status,2,c
  3992  001A12  D053               	goto	l2845
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;inc\CANlib.h: 655: {
  3996                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3997  001A14  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  3998  001A18  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3999  001A1C  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4000  001A20  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4001  001A24  0E04               	movlw	4
  4002  001A26  D006               	goto	u2480
  4003  001A28                     u2485:
  4004  001A28  0100               	movlb	0	; () banked
  4005  001A2A  90D8               	bcf	status,0,c
  4006  001A2C  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4007  001A2E  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4008  001A30  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4009  001A32  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  4010  001A34                     u2480:
  4011  001A34  2EE8               	decfsz	wreg,f,c
  4012  001A36  D7F8               	goto	u2485
  4013  001A38  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4014  001A3C  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4015  001A40  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4016  001A44  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4020  001A48  0100               	movlb	0	; () banked
  4021  001A4A  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  4022  001A4C  0100               	movlb	0	; () banked
  4023  001A4E  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4024  001A50  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4025  001A52  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4026  001A54  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4030  001A56  C0D2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4034  001A5A  0E07               	movlw	7
  4035  001A5C  0100               	movlb	0	; () banked
  4036  001A5E  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  4037  001A60  0100               	movlb	0	; () banked
  4038  001A62  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4039  001A64  0E00               	movlw	0
  4040  001A66  0100               	movlb	0	; () banked
  4041  001A68  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4042  001A6A  0100               	movlb	0	; () banked
  4043  001A6C  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4044  001A6E  0E00               	movlw	0
  4045  001A70  0100               	movlb	0	; () banked
  4046  001A72  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4047  001A74  0100               	movlb	0	; () banked
  4048  001A76  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4049  001A78  0E00               	movlw	0
  4050  001A7A  0100               	movlb	0	; () banked
  4051  001A7C  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4052  001A7E  0100               	movlb	0	; () banked
  4053  001A80  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4057  001A82  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  4058  001A86  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4059  001A8A  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4060  001A8E  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4061  001A92  0E05               	movlw	5
  4062  001A94                     u2495:
  4063  001A94  90D8               	bcf	status,0,c
  4064  001A96  0100               	movlb	0	; () banked
  4065  001A98  37CD               	rlcf	??_CANSetMask& (0+255),f,b
  4066  001A9A  37CE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4067  001A9C  37CF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4068  001A9E  37D0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4069  001AA0  2EE8               	decfsz	wreg,f,c
  4070  001AA2  D7F8               	goto	u2495
  4071  001AA4  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4072  001AA8  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4073  001AAC  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4074  001AB0  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4078  001AB4  C0D2  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4079  001AB8  D000               	goto	l2845
  4080  001ABA                     l2845:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;inc\CANlib.h: 663: }
  4084                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4085  001ABA  0100               	movlb	0	; () banked
  4086  001ABC  05D1               	decf	CANSetMask@numBuffer& (0+255),w,b
  4087  001ABE  A4D8               	btfss	status,2,c
  4088  001AC0  D089               	goto	l2877
  4089                           
  4090                           ; BSR set to: 0
  4091  001AC2  0EF7               	movlw	247
  4092  001AC4  0100               	movlb	0	; () banked
  4093  001AC6  19CC               	xorwf	CANSetMask@type& (0+255),w,b
  4094  001AC8  A4D8               	btfss	status,2,c
  4095  001ACA  D084               	goto	l2877
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;inc\CANlib.h: 666: {
  4099                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4100  001ACC  0100               	movlb	0	; () banked
  4101  001ACE  51C8               	movf	CANSetMask@mask& (0+255),w,b
  4102  001AD0  0100               	movlb	0	; () banked
  4103  001AD2  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4104  001AD4  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4105  001AD6  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4106  001AD8  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4110  001ADA  C0D2  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4114  001ADE  0E00               	movlw	0
  4115  001AE0  0100               	movlb	0	; () banked
  4116  001AE2  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  4117  001AE4  0100               	movlb	0	; () banked
  4118  001AE6  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4119  001AE8  0EFF               	movlw	255
  4120  001AEA  0100               	movlb	0	; () banked
  4121  001AEC  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4122  001AEE  0100               	movlb	0	; () banked
  4123  001AF0  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4124  001AF2  0E00               	movlw	0
  4125  001AF4  0100               	movlb	0	; () banked
  4126  001AF6  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4127  001AF8  0100               	movlb	0	; () banked
  4128  001AFA  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4129  001AFC  0E00               	movlw	0
  4130  001AFE  0100               	movlb	0	; () banked
  4131  001B00  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4132  001B02  0100               	movlb	0	; () banked
  4133  001B04  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4137  001B06  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  4138  001B0A  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4139  001B0E  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4140  001B12  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4141  001B16  C0CE  F0CD         	movff	??_CANSetMask+1,??_CANSetMask
  4142  001B1A  C0CF  F0CE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4143  001B1E  C0D0  F0CF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4144  001B22  0100               	movlb	0	; () banked
  4145  001B24  6BD0               	clrf	(??_CANSetMask+3)& (0+255),b
  4146  001B26  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4147  001B2A  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4148  001B2E  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4149  001B32  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4153  001B36  C0D2  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4157  001B3A  0100               	movlb	0	; () banked
  4158  001B3C  A1CA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4159  001B3E  D003               	goto	l450
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4163  001B40  010F               	movlb	15	; () banked
  4164  001B42  8119               	bsf	25,0,b	;volatile
  4165  001B44  D002               	goto	l451
  4166  001B46                     l450:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;inc\CANlib.h: 676: else
  4170                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4171  001B46  010F               	movlb	15	; () banked
  4172  001B48  9119               	bcf	25,0,b	;volatile
  4173  001B4A                     l451:
  4174                           
  4175                           ; BSR set to: 15
  4176                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4177  001B4A  0100               	movlb	0	; () banked
  4178  001B4C  A3CA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4179  001B4E  D003               	goto	l452
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4183  001B50  010F               	movlb	15	; () banked
  4184  001B52  8319               	bsf	25,1,b	;volatile
  4185  001B54  D002               	goto	l453
  4186  001B56                     l452:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 681: else
  4190                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4191  001B56  010F               	movlb	15	; () banked
  4192  001B58  9319               	bcf	25,1,b	;volatile
  4193  001B5A                     l453:
  4194                           
  4195                           ; BSR set to: 15
  4196                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4197  001B5A  0100               	movlb	0	; () banked
  4198  001B5C  A5CA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4199  001B5E  D003               	goto	l454
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4203  001B60  010F               	movlb	15	; () banked
  4204  001B62  8B19               	bsf	25,5,b	;volatile
  4205  001B64  D002               	goto	l455
  4206  001B66                     l454:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;inc\CANlib.h: 686: else
  4210                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4211  001B66  010F               	movlb	15	; () banked
  4212  001B68  9B19               	bcf	25,5,b	;volatile
  4213  001B6A                     l455:
  4214                           
  4215                           ; BSR set to: 15
  4216                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4217  001B6A  0100               	movlb	0	; () banked
  4218  001B6C  A7CA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4219  001B6E  D003               	goto	l456
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4223  001B70  010F               	movlb	15	; () banked
  4224  001B72  8D19               	bsf	25,6,b	;volatile
  4225  001B74  D002               	goto	l457
  4226  001B76                     l456:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;inc\CANlib.h: 691: else
  4230                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4231  001B76  010F               	movlb	15	; () banked
  4232  001B78  9D19               	bcf	25,6,b	;volatile
  4233  001B7A                     l457:
  4234                           
  4235                           ; BSR set to: 15
  4236                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4237  001B7A  0100               	movlb	0	; () banked
  4238  001B7C  A9CA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4239  001B7E  D003               	goto	l458
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4243  001B80  010F               	movlb	15	; () banked
  4244  001B82  8F19               	bsf	25,7,b	;volatile
  4245  001B84  D003               	goto	l2871
  4246  001B86                     l458:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;inc\CANlib.h: 696: else
  4250                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4251  001B86  010F               	movlb	15	; () banked
  4252  001B88  9F19               	bcf	25,7,b	;volatile
  4253  001B8A  D000               	goto	l2871
  4254  001B8C                     l2871:
  4255                           
  4256                           ; BSR set to: 15
  4257                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4258  001B8C  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  4259  001B90  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4260  001B94  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4261  001B98  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4262  001B9C  0E16               	movlw	22
  4263  001B9E  D006               	goto	u2570
  4264  001BA0                     u2575:
  4265  001BA0  0100               	movlb	0	; () banked
  4266  001BA2  90D8               	bcf	status,0,c
  4267  001BA4  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4268  001BA6  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4269  001BA8  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4270  001BAA  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  4271  001BAC                     u2570:
  4272  001BAC  2EE8               	decfsz	wreg,f,c
  4273  001BAE  D7F8               	goto	u2575
  4274  001BB0  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4275  001BB4  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4276  001BB8  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4277  001BBC  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4281  001BC0  0100               	movlb	0	; () banked
  4282  001BC2  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  4283  001BC4  0100               	movlb	0	; () banked
  4284  001BC6  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4285  001BC8  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4286  001BCA  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4287  001BCC  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4291  001BCE  C0D2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4292  001BD2  D000               	goto	l2877
  4293  001BD4                     l2877:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;inc\CANlib.h: 702: }
  4297                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4298  001BD4  0E02               	movlw	2
  4299  001BD6  0100               	movlb	0	; () banked
  4300  001BD8  19D1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4301  001BDA  A4D8               	btfss	status,2,c
  4302  001BDC  D089               	goto	l471
  4303                           
  4304                           ; BSR set to: 0
  4305  001BDE  0EF7               	movlw	247
  4306  001BE0  0100               	movlb	0	; () banked
  4307  001BE2  19CC               	xorwf	CANSetMask@type& (0+255),w,b
  4308  001BE4  A4D8               	btfss	status,2,c
  4309  001BE6  D084               	goto	l471
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;inc\CANlib.h: 705: {
  4313                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4314  001BE8  0100               	movlb	0	; () banked
  4315  001BEA  51C8               	movf	CANSetMask@mask& (0+255),w,b
  4316  001BEC  0100               	movlb	0	; () banked
  4317  001BEE  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4318  001BF0  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4319  001BF2  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4320  001BF4  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4324  001BF6  C0D2  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4328  001BFA  0E00               	movlw	0
  4329  001BFC  0100               	movlb	0	; () banked
  4330  001BFE  15C8               	andwf	CANSetMask@mask& (0+255),w,b
  4331  001C00  0100               	movlb	0	; () banked
  4332  001C02  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4333  001C04  0EFF               	movlw	255
  4334  001C06  0100               	movlb	0	; () banked
  4335  001C08  15C9               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4336  001C0A  0100               	movlb	0	; () banked
  4337  001C0C  6FD3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4338  001C0E  0E00               	movlw	0
  4339  001C10  0100               	movlb	0	; () banked
  4340  001C12  15CA               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4341  001C14  0100               	movlb	0	; () banked
  4342  001C16  6FD4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4343  001C18  0E00               	movlw	0
  4344  001C1A  0100               	movlb	0	; () banked
  4345  001C1C  15CB               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4346  001C1E  0100               	movlb	0	; () banked
  4347  001C20  6FD5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4351  001C22  C0D2  F0CD         	movff	CANSetMask@tamp,??_CANSetMask
  4352  001C26  C0D3  F0CE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4353  001C2A  C0D4  F0CF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4354  001C2E  C0D5  F0D0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4355  001C32  C0CE  F0CD         	movff	??_CANSetMask+1,??_CANSetMask
  4356  001C36  C0CF  F0CE         	movff	??_CANSetMask+2,??_CANSetMask+1
  4357  001C3A  C0D0  F0CF         	movff	??_CANSetMask+3,??_CANSetMask+2
  4358  001C3E  0100               	movlb	0	; () banked
  4359  001C40  6BD0               	clrf	(??_CANSetMask+3)& (0+255),b
  4360  001C42  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4361  001C46  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4362  001C4A  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4363  001C4E  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4367  001C52  C0D2  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4371  001C56  0100               	movlb	0	; () banked
  4372  001C58  A1CA               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4373  001C5A  D003               	goto	l461
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4377  001C5C  010F               	movlb	15	; () banked
  4378  001C5E  811D               	bsf	29,0,b	;volatile
  4379  001C60  D002               	goto	l462
  4380  001C62                     l461:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;inc\CANlib.h: 715: else
  4384                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4385  001C62  010F               	movlb	15	; () banked
  4386  001C64  911D               	bcf	29,0,b	;volatile
  4387  001C66                     l462:
  4388                           
  4389                           ; BSR set to: 15
  4390                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4391  001C66  0100               	movlb	0	; () banked
  4392  001C68  A3CA               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4393  001C6A  D003               	goto	l463
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4397  001C6C  010F               	movlb	15	; () banked
  4398  001C6E  831D               	bsf	29,1,b	;volatile
  4399  001C70  D002               	goto	l464
  4400  001C72                     l463:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 720: else
  4404                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4405  001C72  010F               	movlb	15	; () banked
  4406  001C74  931D               	bcf	29,1,b	;volatile
  4407  001C76                     l464:
  4408                           
  4409                           ; BSR set to: 15
  4410                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4411  001C76  0100               	movlb	0	; () banked
  4412  001C78  A5CA               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4413  001C7A  D003               	goto	l465
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4417  001C7C  010F               	movlb	15	; () banked
  4418  001C7E  8B1D               	bsf	29,5,b	;volatile
  4419  001C80  D002               	goto	l466
  4420  001C82                     l465:
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;inc\CANlib.h: 725: else
  4424                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4425  001C82  010F               	movlb	15	; () banked
  4426  001C84  9B1D               	bcf	29,5,b	;volatile
  4427  001C86                     l466:
  4428                           
  4429                           ; BSR set to: 15
  4430                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4431  001C86  0100               	movlb	0	; () banked
  4432  001C88  A7CA               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4433  001C8A  D003               	goto	l467
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4437  001C8C  010F               	movlb	15	; () banked
  4438  001C8E  8D1D               	bsf	29,6,b	;volatile
  4439  001C90  D002               	goto	l468
  4440  001C92                     l467:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;inc\CANlib.h: 730: else
  4444                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4445  001C92  010F               	movlb	15	; () banked
  4446  001C94  9D1D               	bcf	29,6,b	;volatile
  4447  001C96                     l468:
  4448                           
  4449                           ; BSR set to: 15
  4450                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4451  001C96  0100               	movlb	0	; () banked
  4452  001C98  A9CA               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4453  001C9A  D003               	goto	l469
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4457  001C9C  010F               	movlb	15	; () banked
  4458  001C9E  8F1D               	bsf	29,7,b	;volatile
  4459  001CA0  D003               	goto	l2903
  4460  001CA2                     l469:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;inc\CANlib.h: 735: else
  4464                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4465  001CA2  010F               	movlb	15	; () banked
  4466  001CA4  9F1D               	bcf	29,7,b	;volatile
  4467  001CA6  D000               	goto	l2903
  4468  001CA8                     l2903:
  4469                           
  4470                           ; BSR set to: 15
  4471                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4472  001CA8  C0C8  F0CD         	movff	CANSetMask@mask,??_CANSetMask
  4473  001CAC  C0C9  F0CE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4474  001CB0  C0CA  F0CF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4475  001CB4  C0CB  F0D0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4476  001CB8  0E16               	movlw	22
  4477  001CBA  D006               	goto	u2650
  4478  001CBC                     u2655:
  4479  001CBC  0100               	movlb	0	; () banked
  4480  001CBE  90D8               	bcf	status,0,c
  4481  001CC0  33D0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4482  001CC2  33CF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4483  001CC4  33CE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4484  001CC6  33CD               	rrcf	??_CANSetMask& (0+255),f,b
  4485  001CC8                     u2650:
  4486  001CC8  2EE8               	decfsz	wreg,f,c
  4487  001CCA  D7F8               	goto	u2655
  4488  001CCC  C0CD  F0D2         	movff	??_CANSetMask,CANSetMask@tamp
  4489  001CD0  C0CE  F0D3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4490  001CD4  C0CF  F0D4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4491  001CD8  C0D0  F0D5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4495  001CDC  0100               	movlb	0	; () banked
  4496  001CDE  51D2               	movf	CANSetMask@tamp& (0+255),w,b
  4497  001CE0  0100               	movlb	0	; () banked
  4498  001CE2  6FD2               	movwf	CANSetMask@tamp& (0+255),b
  4499  001CE4  6BD3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4500  001CE6  6BD4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4501  001CE8  6BD5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4505  001CEA  C0D2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4506  001CEE  D000               	goto	l471
  4507  001CF0                     l471:
  4508                           
  4509                           ; BSR set to: 0
  4510  001CF0  0012               	return		;funcret
  4511  001CF2                     __end_of_CANSetMask:
  4512                           	opt stack 0
  4513                           tblptru	equ	0xFF8
  4514                           tblptrh	equ	0xFF7
  4515                           tblptrl	equ	0xFF6
  4516                           tablat	equ	0xFF5
  4517                           prodh	equ	0xFF4
  4518                           prodl	equ	0xFF3
  4519                           intcon	equ	0xFF2
  4520                           intcon2	equ	0xFF1
  4521                           intcon3	equ	0xFF0
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           postdec1	equ	0xFE5
  4525                           fsr1l	equ	0xFE1
  4526                           indf2	equ	0xFDF
  4527                           fsr2h	equ	0xFDA
  4528                           fsr2l	equ	0xFD9
  4529                           status	equ	0xFD8
  4530                           
  4531 ;; *************** function _CANSetFilter *****************
  4532 ;; Defined at:
  4533 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  numBuffer       1    wreg     enum E16922
  4536 ;;  filter          4   30[BANK0 ] unsigned long 
  4537 ;;  type            1   34[BANK0 ] enum E16885
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  numBuffer       1   39[BANK0 ] enum E16922
  4540 ;;  tamp            4   40[BANK0 ] unsigned long 
  4541 ;; Return value:  Size  Location     Type
  4542 ;;		None               void
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4550 ;;      Params:         0       5       0       0
  4551 ;;      Locals:         0       5       0       0
  4552 ;;      Temps:          0       4       0       0
  4553 ;;      Totals:         0      14       0       0
  4554 ;;Total ram usage:       14 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    4
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_CANInitialize
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text8
  4565  000150                     __ptext8:
  4566                           	opt stack 0
  4567  000150                     _CANSetFilter:
  4568                           	opt stack 24
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;incstack = 0
  4572                           ;CANSetFilter@numBuffer stored from wreg
  4573  000150  0100               	movlb	0	; () banked
  4574  000152  6FD1               	movwf	CANSetFilter@numBuffer& (0+255),b
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;inc\CANlib.h: 750: unsigned long tamp;
  4578                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4579  000154  0100               	movlb	0	; () banked
  4580  000156  51D1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4581  000158  0100               	movlb	0	; () banked
  4582  00015A  A4D8               	btfss	status,2,c
  4583  00015C  D059               	goto	l2927
  4584                           
  4585                           ; BSR set to: 0
  4586  00015E  0100               	movlb	0	; () banked
  4587  000160  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4588  000162  A4D8               	btfss	status,2,c
  4589  000164  D055               	goto	l2927
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;inc\CANlib.h: 753: {
  4593                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4594  000166  010F               	movlb	15	; () banked
  4595  000168  9701               	bcf	1,3,b	;volatile
  4596                           
  4597                           ; BSR set to: 15
  4598                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4599  00016A  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4600  00016E  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4601  000172  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4602  000176  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4603  00017A  0E04               	movlw	4
  4604  00017C  D006               	goto	u2680
  4605  00017E                     u2685:
  4606  00017E  0100               	movlb	0	; () banked
  4607  000180  90D8               	bcf	status,0,c
  4608  000182  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4609  000184  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4610  000186  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4611  000188  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4612  00018A                     u2680:
  4613  00018A  2EE8               	decfsz	wreg,f,c
  4614  00018C  D7F8               	goto	u2685
  4615  00018E  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4616  000192  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4617  000196  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4618  00019A  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4622  00019E  0100               	movlb	0	; () banked
  4623  0001A0  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4624  0001A2  0100               	movlb	0	; () banked
  4625  0001A4  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4626  0001A6  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4627  0001A8  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4628  0001AA  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4632  0001AC  C0D2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4636  0001B0  0E07               	movlw	7
  4637  0001B2  0100               	movlb	0	; () banked
  4638  0001B4  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  4639  0001B6  0100               	movlb	0	; () banked
  4640  0001B8  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4641  0001BA  0E00               	movlw	0
  4642  0001BC  0100               	movlb	0	; () banked
  4643  0001BE  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4644  0001C0  0100               	movlb	0	; () banked
  4645  0001C2  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4646  0001C4  0E00               	movlw	0
  4647  0001C6  0100               	movlb	0	; () banked
  4648  0001C8  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4649  0001CA  0100               	movlb	0	; () banked
  4650  0001CC  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4651  0001CE  0E00               	movlw	0
  4652  0001D0  0100               	movlb	0	; () banked
  4653  0001D2  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4654  0001D4  0100               	movlb	0	; () banked
  4655  0001D6  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4659  0001D8  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4660  0001DC  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4661  0001E0  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4662  0001E4  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4663  0001E8  0E05               	movlw	5
  4664  0001EA                     u2695:
  4665  0001EA  90D8               	bcf	status,0,c
  4666  0001EC  0100               	movlb	0	; () banked
  4667  0001EE  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  4668  0001F0  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4669  0001F2  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4670  0001F4  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4671  0001F6  2EE8               	decfsz	wreg,f,c
  4672  0001F8  D7F8               	goto	u2695
  4673  0001FA  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4674  0001FE  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4675  000202  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4676  000206  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4680  00020A  C0D2  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4681  00020E  D000               	goto	l2927
  4682  000210                     l2927:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;inc\CANlib.h: 763: }
  4686                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4687  000210  0100               	movlb	0	; () banked
  4688  000212  05D1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4689  000214  A4D8               	btfss	status,2,c
  4690  000216  D059               	goto	l2945
  4691                           
  4692                           ; BSR set to: 0
  4693  000218  0100               	movlb	0	; () banked
  4694  00021A  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4695  00021C  A4D8               	btfss	status,2,c
  4696  00021E  D055               	goto	l2945
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;inc\CANlib.h: 766: {
  4700                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4701  000220  010F               	movlb	15	; () banked
  4702  000222  9705               	bcf	5,3,b	;volatile
  4703                           
  4704                           ; BSR set to: 15
  4705                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4706  000224  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4707  000228  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4708  00022C  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4709  000230  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4710  000234  0E04               	movlw	4
  4711  000236  D006               	goto	u2720
  4712  000238                     u2725:
  4713  000238  0100               	movlb	0	; () banked
  4714  00023A  90D8               	bcf	status,0,c
  4715  00023C  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4716  00023E  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4717  000240  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4718  000242  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4719  000244                     u2720:
  4720  000244  2EE8               	decfsz	wreg,f,c
  4721  000246  D7F8               	goto	u2725
  4722  000248  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4723  00024C  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4724  000250  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4725  000254  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4729  000258  0100               	movlb	0	; () banked
  4730  00025A  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4731  00025C  0100               	movlb	0	; () banked
  4732  00025E  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4733  000260  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4734  000262  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4735  000264  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4739  000266  C0D2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4743  00026A  0E07               	movlw	7
  4744  00026C  0100               	movlb	0	; () banked
  4745  00026E  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  4746  000270  0100               	movlb	0	; () banked
  4747  000272  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4748  000274  0E00               	movlw	0
  4749  000276  0100               	movlb	0	; () banked
  4750  000278  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4751  00027A  0100               	movlb	0	; () banked
  4752  00027C  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4753  00027E  0E00               	movlw	0
  4754  000280  0100               	movlb	0	; () banked
  4755  000282  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4756  000284  0100               	movlb	0	; () banked
  4757  000286  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4758  000288  0E00               	movlw	0
  4759  00028A  0100               	movlb	0	; () banked
  4760  00028C  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4761  00028E  0100               	movlb	0	; () banked
  4762  000290  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4766  000292  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4767  000296  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4768  00029A  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4769  00029E  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4770  0002A2  0E05               	movlw	5
  4771  0002A4                     u2735:
  4772  0002A4  90D8               	bcf	status,0,c
  4773  0002A6  0100               	movlb	0	; () banked
  4774  0002A8  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  4775  0002AA  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4776  0002AC  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4777  0002AE  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4778  0002B0  2EE8               	decfsz	wreg,f,c
  4779  0002B2  D7F8               	goto	u2735
  4780  0002B4  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4781  0002B8  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4782  0002BC  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4783  0002C0  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4787  0002C4  C0D2  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4788  0002C8  D000               	goto	l2945
  4789  0002CA                     l2945:
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;inc\CANlib.h: 776: }
  4793                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4794  0002CA  0E02               	movlw	2
  4795  0002CC  0100               	movlb	0	; () banked
  4796  0002CE  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4797  0002D0  A4D8               	btfss	status,2,c
  4798  0002D2  D059               	goto	l2963
  4799                           
  4800                           ; BSR set to: 0
  4801  0002D4  0100               	movlb	0	; () banked
  4802  0002D6  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4803  0002D8  A4D8               	btfss	status,2,c
  4804  0002DA  D055               	goto	l2963
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;inc\CANlib.h: 779: {
  4808                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4809  0002DC  010F               	movlb	15	; () banked
  4810  0002DE  9709               	bcf	9,3,b	;volatile
  4811                           
  4812                           ; BSR set to: 15
  4813                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4814  0002E0  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4815  0002E4  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4816  0002E8  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4817  0002EC  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4818  0002F0  0E04               	movlw	4
  4819  0002F2  D006               	goto	u2760
  4820  0002F4                     u2765:
  4821  0002F4  0100               	movlb	0	; () banked
  4822  0002F6  90D8               	bcf	status,0,c
  4823  0002F8  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4824  0002FA  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4825  0002FC  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4826  0002FE  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4827  000300                     u2760:
  4828  000300  2EE8               	decfsz	wreg,f,c
  4829  000302  D7F8               	goto	u2765
  4830  000304  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4831  000308  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4832  00030C  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4833  000310  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4837  000314  0100               	movlb	0	; () banked
  4838  000316  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4839  000318  0100               	movlb	0	; () banked
  4840  00031A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4841  00031C  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4842  00031E  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4843  000320  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4847  000322  C0D2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4851  000326  0E07               	movlw	7
  4852  000328  0100               	movlb	0	; () banked
  4853  00032A  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  4854  00032C  0100               	movlb	0	; () banked
  4855  00032E  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4856  000330  0E00               	movlw	0
  4857  000332  0100               	movlb	0	; () banked
  4858  000334  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4859  000336  0100               	movlb	0	; () banked
  4860  000338  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4861  00033A  0E00               	movlw	0
  4862  00033C  0100               	movlb	0	; () banked
  4863  00033E  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4864  000340  0100               	movlb	0	; () banked
  4865  000342  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4866  000344  0E00               	movlw	0
  4867  000346  0100               	movlb	0	; () banked
  4868  000348  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4869  00034A  0100               	movlb	0	; () banked
  4870  00034C  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4874  00034E  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4875  000352  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4876  000356  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4877  00035A  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4878  00035E  0E05               	movlw	5
  4879  000360                     u2775:
  4880  000360  90D8               	bcf	status,0,c
  4881  000362  0100               	movlb	0	; () banked
  4882  000364  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  4883  000366  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4884  000368  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4885  00036A  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4886  00036C  2EE8               	decfsz	wreg,f,c
  4887  00036E  D7F8               	goto	u2775
  4888  000370  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4889  000374  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4890  000378  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4891  00037C  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4895  000380  C0D2  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4896  000384  D000               	goto	l2963
  4897  000386                     l2963:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;inc\CANlib.h: 789: }
  4901                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4902  000386  0E03               	movlw	3
  4903  000388  0100               	movlb	0	; () banked
  4904  00038A  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4905  00038C  A4D8               	btfss	status,2,c
  4906  00038E  D059               	goto	l2981
  4907                           
  4908                           ; BSR set to: 0
  4909  000390  0100               	movlb	0	; () banked
  4910  000392  29CC               	incf	CANSetFilter@type& (0+255),w,b
  4911  000394  A4D8               	btfss	status,2,c
  4912  000396  D055               	goto	l2981
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;inc\CANlib.h: 792: {
  4916                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4917  000398  010F               	movlb	15	; () banked
  4918  00039A  970D               	bcf	13,3,b	;volatile
  4919                           
  4920                           ; BSR set to: 15
  4921                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4922  00039C  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  4923  0003A0  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4924  0003A4  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4925  0003A8  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4926  0003AC  0E04               	movlw	4
  4927  0003AE  D006               	goto	u2800
  4928  0003B0                     u2805:
  4929  0003B0  0100               	movlb	0	; () banked
  4930  0003B2  90D8               	bcf	status,0,c
  4931  0003B4  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4932  0003B6  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4933  0003B8  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4934  0003BA  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  4935  0003BC                     u2800:
  4936  0003BC  2EE8               	decfsz	wreg,f,c
  4937  0003BE  D7F8               	goto	u2805
  4938  0003C0  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4939  0003C4  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4940  0003C8  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4941  0003CC  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4945  0003D0  0100               	movlb	0	; () banked
  4946  0003D2  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  4947  0003D4  0100               	movlb	0	; () banked
  4948  0003D6  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4949  0003D8  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4950  0003DA  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4951  0003DC  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4955  0003DE  C0D2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4959  0003E2  0E07               	movlw	7
  4960  0003E4  0100               	movlb	0	; () banked
  4961  0003E6  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  4962  0003E8  0100               	movlb	0	; () banked
  4963  0003EA  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  4964  0003EC  0E00               	movlw	0
  4965  0003EE  0100               	movlb	0	; () banked
  4966  0003F0  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4967  0003F2  0100               	movlb	0	; () banked
  4968  0003F4  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4969  0003F6  0E00               	movlw	0
  4970  0003F8  0100               	movlb	0	; () banked
  4971  0003FA  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4972  0003FC  0100               	movlb	0	; () banked
  4973  0003FE  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4974  000400  0E00               	movlw	0
  4975  000402  0100               	movlb	0	; () banked
  4976  000404  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4977  000406  0100               	movlb	0	; () banked
  4978  000408  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4982  00040A  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4983  00040E  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4984  000412  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4985  000416  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4986  00041A  0E05               	movlw	5
  4987  00041C                     u2815:
  4988  00041C  90D8               	bcf	status,0,c
  4989  00041E  0100               	movlb	0	; () banked
  4990  000420  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  4991  000422  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4992  000424  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4993  000426  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4994  000428  2EE8               	decfsz	wreg,f,c
  4995  00042A  D7F8               	goto	u2815
  4996  00042C  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4997  000430  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4998  000434  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4999  000438  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5003  00043C  C0D2  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5004  000440  D000               	goto	l2981
  5005  000442                     l2981:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;inc\CANlib.h: 802: }
  5009                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5010  000442  0E04               	movlw	4
  5011  000444  0100               	movlb	0	; () banked
  5012  000446  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5013  000448  A4D8               	btfss	status,2,c
  5014  00044A  D059               	goto	l2999
  5015                           
  5016                           ; BSR set to: 0
  5017  00044C  0100               	movlb	0	; () banked
  5018  00044E  29CC               	incf	CANSetFilter@type& (0+255),w,b
  5019  000450  A4D8               	btfss	status,2,c
  5020  000452  D055               	goto	l2999
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 805: {
  5024                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5025  000454  010F               	movlb	15	; () banked
  5026  000456  9711               	bcf	17,3,b	;volatile
  5027                           
  5028                           ; BSR set to: 15
  5029                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5030  000458  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5031  00045C  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5032  000460  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5033  000464  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5034  000468  0E04               	movlw	4
  5035  00046A  D006               	goto	u2840
  5036  00046C                     u2845:
  5037  00046C  0100               	movlb	0	; () banked
  5038  00046E  90D8               	bcf	status,0,c
  5039  000470  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5040  000472  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5041  000474  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5042  000476  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5043  000478                     u2840:
  5044  000478  2EE8               	decfsz	wreg,f,c
  5045  00047A  D7F8               	goto	u2845
  5046  00047C  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5047  000480  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5048  000484  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5049  000488  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5053  00048C  0100               	movlb	0	; () banked
  5054  00048E  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5055  000490  0100               	movlb	0	; () banked
  5056  000492  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5057  000494  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5058  000496  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5059  000498  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5063  00049A  C0D2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5067  00049E  0E07               	movlw	7
  5068  0004A0  0100               	movlb	0	; () banked
  5069  0004A2  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5070  0004A4  0100               	movlb	0	; () banked
  5071  0004A6  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5072  0004A8  0E00               	movlw	0
  5073  0004AA  0100               	movlb	0	; () banked
  5074  0004AC  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5075  0004AE  0100               	movlb	0	; () banked
  5076  0004B0  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5077  0004B2  0E00               	movlw	0
  5078  0004B4  0100               	movlb	0	; () banked
  5079  0004B6  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5080  0004B8  0100               	movlb	0	; () banked
  5081  0004BA  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5082  0004BC  0E00               	movlw	0
  5083  0004BE  0100               	movlb	0	; () banked
  5084  0004C0  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5085  0004C2  0100               	movlb	0	; () banked
  5086  0004C4  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5090  0004C6  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5091  0004CA  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5092  0004CE  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5093  0004D2  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5094  0004D6  0E05               	movlw	5
  5095  0004D8                     u2855:
  5096  0004D8  90D8               	bcf	status,0,c
  5097  0004DA  0100               	movlb	0	; () banked
  5098  0004DC  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  5099  0004DE  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5100  0004E0  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5101  0004E2  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5102  0004E4  2EE8               	decfsz	wreg,f,c
  5103  0004E6  D7F8               	goto	u2855
  5104  0004E8  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5105  0004EC  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5106  0004F0  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5107  0004F4  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5111  0004F8  C0D2  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5112  0004FC  D000               	goto	l2999
  5113  0004FE                     l2999:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 815: }
  5117                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5118  0004FE  0E05               	movlw	5
  5119  000500  0100               	movlb	0	; () banked
  5120  000502  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5121  000504  A4D8               	btfss	status,2,c
  5122  000506  D059               	goto	l3017
  5123                           
  5124                           ; BSR set to: 0
  5125  000508  0100               	movlb	0	; () banked
  5126  00050A  29CC               	incf	CANSetFilter@type& (0+255),w,b
  5127  00050C  A4D8               	btfss	status,2,c
  5128  00050E  D055               	goto	l3017
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;inc\CANlib.h: 818: {
  5132                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5133  000510  010F               	movlb	15	; () banked
  5134  000512  9715               	bcf	21,3,b	;volatile
  5135                           
  5136                           ; BSR set to: 15
  5137                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5138  000514  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5139  000518  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5140  00051C  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5141  000520  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5142  000524  0E04               	movlw	4
  5143  000526  D006               	goto	u2880
  5144  000528                     u2885:
  5145  000528  0100               	movlb	0	; () banked
  5146  00052A  90D8               	bcf	status,0,c
  5147  00052C  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5148  00052E  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5149  000530  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5150  000532  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5151  000534                     u2880:
  5152  000534  2EE8               	decfsz	wreg,f,c
  5153  000536  D7F8               	goto	u2885
  5154  000538  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5155  00053C  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5156  000540  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5157  000544  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5161  000548  0100               	movlb	0	; () banked
  5162  00054A  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5163  00054C  0100               	movlb	0	; () banked
  5164  00054E  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5165  000550  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5166  000552  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5167  000554  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5171  000556  C0D2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5175  00055A  0E07               	movlw	7
  5176  00055C  0100               	movlb	0	; () banked
  5177  00055E  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5178  000560  0100               	movlb	0	; () banked
  5179  000562  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5180  000564  0E00               	movlw	0
  5181  000566  0100               	movlb	0	; () banked
  5182  000568  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5183  00056A  0100               	movlb	0	; () banked
  5184  00056C  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5185  00056E  0E00               	movlw	0
  5186  000570  0100               	movlb	0	; () banked
  5187  000572  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5188  000574  0100               	movlb	0	; () banked
  5189  000576  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5190  000578  0E00               	movlw	0
  5191  00057A  0100               	movlb	0	; () banked
  5192  00057C  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5193  00057E  0100               	movlb	0	; () banked
  5194  000580  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5198  000582  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5199  000586  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5200  00058A  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5201  00058E  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5202  000592  0E05               	movlw	5
  5203  000594                     u2895:
  5204  000594  90D8               	bcf	status,0,c
  5205  000596  0100               	movlb	0	; () banked
  5206  000598  37CD               	rlcf	??_CANSetFilter& (0+255),f,b
  5207  00059A  37CE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5208  00059C  37CF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5209  00059E  37D0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5210  0005A0  2EE8               	decfsz	wreg,f,c
  5211  0005A2  D7F8               	goto	u2895
  5212  0005A4  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5213  0005A8  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5214  0005AC  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5215  0005B0  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5219  0005B4  C0D2  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5220  0005B8  D000               	goto	l3017
  5221  0005BA                     l3017:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;inc\CANlib.h: 828: }
  5225                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5226  0005BA  0100               	movlb	0	; () banked
  5227  0005BC  51D1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5228  0005BE  0100               	movlb	0	; () banked
  5229  0005C0  A4D8               	btfss	status,2,c
  5230  0005C2  D08B               	goto	l3051
  5231                           
  5232                           ; BSR set to: 0
  5233  0005C4  0EF7               	movlw	247
  5234  0005C6  0100               	movlb	0	; () banked
  5235  0005C8  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5236  0005CA  A4D8               	btfss	status,2,c
  5237  0005CC  D086               	goto	l3051
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;inc\CANlib.h: 832: {
  5241                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5242  0005CE  010F               	movlb	15	; () banked
  5243  0005D0  8701               	bsf	1,3,b	;volatile
  5244                           
  5245                           ; BSR set to: 15
  5246                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5247  0005D2  0100               	movlb	0	; () banked
  5248  0005D4  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5249  0005D6  0100               	movlb	0	; () banked
  5250  0005D8  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5251  0005DA  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5252  0005DC  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5253  0005DE  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5257  0005E0  C0D2  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5261  0005E4  0E00               	movlw	0
  5262  0005E6  0100               	movlb	0	; () banked
  5263  0005E8  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5264  0005EA  0100               	movlb	0	; () banked
  5265  0005EC  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5266  0005EE  0EFF               	movlw	255
  5267  0005F0  0100               	movlb	0	; () banked
  5268  0005F2  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5269  0005F4  0100               	movlb	0	; () banked
  5270  0005F6  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5271  0005F8  0E00               	movlw	0
  5272  0005FA  0100               	movlb	0	; () banked
  5273  0005FC  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5274  0005FE  0100               	movlb	0	; () banked
  5275  000600  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5276  000602  0E00               	movlw	0
  5277  000604  0100               	movlb	0	; () banked
  5278  000606  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5279  000608  0100               	movlb	0	; () banked
  5280  00060A  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5284  00060C  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5285  000610  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5286  000614  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5287  000618  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5288  00061C  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5289  000620  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5290  000624  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5291  000628  0100               	movlb	0	; () banked
  5292  00062A  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5293  00062C  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5294  000630  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5295  000634  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5296  000638  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5300  00063C  C0D2  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5304  000640  0100               	movlb	0	; () banked
  5305  000642  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5306  000644  D003               	goto	l481
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5310  000646  010F               	movlb	15	; () banked
  5311  000648  8101               	bsf	1,0,b	;volatile
  5312  00064A  D002               	goto	l482
  5313  00064C                     l481:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;inc\CANlib.h: 844: else
  5317                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5318  00064C  010F               	movlb	15	; () banked
  5319  00064E  9101               	bcf	1,0,b	;volatile
  5320  000650                     l482:
  5321                           
  5322                           ; BSR set to: 15
  5323                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5324  000650  0100               	movlb	0	; () banked
  5325  000652  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5326  000654  D003               	goto	l483
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5330  000656  010F               	movlb	15	; () banked
  5331  000658  8301               	bsf	1,1,b	;volatile
  5332  00065A  D002               	goto	l484
  5333  00065C                     l483:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;inc\CANlib.h: 849: else
  5337                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5338  00065C  010F               	movlb	15	; () banked
  5339  00065E  9301               	bcf	1,1,b	;volatile
  5340  000660                     l484:
  5341                           
  5342                           ; BSR set to: 15
  5343                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5344  000660  0100               	movlb	0	; () banked
  5345  000662  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5346  000664  D003               	goto	l485
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5350  000666  010F               	movlb	15	; () banked
  5351  000668  8B01               	bsf	1,5,b	;volatile
  5352  00066A  D002               	goto	l486
  5353  00066C                     l485:
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;inc\CANlib.h: 854: else
  5357                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5358  00066C  010F               	movlb	15	; () banked
  5359  00066E  9B01               	bcf	1,5,b	;volatile
  5360  000670                     l486:
  5361                           
  5362                           ; BSR set to: 15
  5363                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5364  000670  0100               	movlb	0	; () banked
  5365  000672  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5366  000674  D003               	goto	l487
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5370  000676  010F               	movlb	15	; () banked
  5371  000678  8D01               	bsf	1,6,b	;volatile
  5372  00067A  D002               	goto	l488
  5373  00067C                     l487:
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;inc\CANlib.h: 859: else
  5377                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5378  00067C  010F               	movlb	15	; () banked
  5379  00067E  9D01               	bcf	1,6,b	;volatile
  5380  000680                     l488:
  5381                           
  5382                           ; BSR set to: 15
  5383                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5384  000680  0100               	movlb	0	; () banked
  5385  000682  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5386  000684  D003               	goto	l489
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5390  000686  010F               	movlb	15	; () banked
  5391  000688  8F01               	bsf	1,7,b	;volatile
  5392  00068A  D003               	goto	l3045
  5393  00068C                     l489:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;inc\CANlib.h: 864: else
  5397                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5398  00068C  010F               	movlb	15	; () banked
  5399  00068E  9F01               	bcf	1,7,b	;volatile
  5400  000690  D000               	goto	l3045
  5401  000692                     l3045:
  5402                           
  5403                           ; BSR set to: 15
  5404                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5405  000692  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5406  000696  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5407  00069A  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5408  00069E  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5409  0006A2  0E16               	movlw	22
  5410  0006A4  D006               	goto	u2970
  5411  0006A6                     u2975:
  5412  0006A6  0100               	movlb	0	; () banked
  5413  0006A8  90D8               	bcf	status,0,c
  5414  0006AA  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5415  0006AC  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5416  0006AE  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5417  0006B0  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5418  0006B2                     u2970:
  5419  0006B2  2EE8               	decfsz	wreg,f,c
  5420  0006B4  D7F8               	goto	u2975
  5421  0006B6  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5422  0006BA  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5423  0006BE  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5424  0006C2  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5428  0006C6  0100               	movlb	0	; () banked
  5429  0006C8  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5430  0006CA  0100               	movlb	0	; () banked
  5431  0006CC  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5432  0006CE  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5433  0006D0  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5434  0006D2  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5438  0006D4  C0D2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5439  0006D8  D000               	goto	l3051
  5440  0006DA                     l3051:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;inc\CANlib.h: 870: }
  5444                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5445  0006DA  0100               	movlb	0	; () banked
  5446  0006DC  05D1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5447  0006DE  A4D8               	btfss	status,2,c
  5448  0006E0  D08B               	goto	l3085
  5449                           
  5450                           ; BSR set to: 0
  5451  0006E2  0EF7               	movlw	247
  5452  0006E4  0100               	movlb	0	; () banked
  5453  0006E6  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5454  0006E8  A4D8               	btfss	status,2,c
  5455  0006EA  D086               	goto	l3085
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 873: {
  5459                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5460  0006EC  010F               	movlb	15	; () banked
  5461  0006EE  8705               	bsf	5,3,b	;volatile
  5462                           
  5463                           ; BSR set to: 15
  5464                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5465  0006F0  0100               	movlb	0	; () banked
  5466  0006F2  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5467  0006F4  0100               	movlb	0	; () banked
  5468  0006F6  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5469  0006F8  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5470  0006FA  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5471  0006FC  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5475  0006FE  C0D2  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5479  000702  0E00               	movlw	0
  5480  000704  0100               	movlb	0	; () banked
  5481  000706  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5482  000708  0100               	movlb	0	; () banked
  5483  00070A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5484  00070C  0EFF               	movlw	255
  5485  00070E  0100               	movlb	0	; () banked
  5486  000710  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5487  000712  0100               	movlb	0	; () banked
  5488  000714  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5489  000716  0E00               	movlw	0
  5490  000718  0100               	movlb	0	; () banked
  5491  00071A  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5492  00071C  0100               	movlb	0	; () banked
  5493  00071E  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5494  000720  0E00               	movlw	0
  5495  000722  0100               	movlb	0	; () banked
  5496  000724  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5497  000726  0100               	movlb	0	; () banked
  5498  000728  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5502  00072A  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5503  00072E  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5504  000732  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5505  000736  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5506  00073A  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5507  00073E  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5508  000742  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5509  000746  0100               	movlb	0	; () banked
  5510  000748  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5511  00074A  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5512  00074E  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5513  000752  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5514  000756  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5518  00075A  C0D2  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5522  00075E  0100               	movlb	0	; () banked
  5523  000760  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5524  000762  D003               	goto	l492
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5528  000764  010F               	movlb	15	; () banked
  5529  000766  8105               	bsf	5,0,b	;volatile
  5530  000768  D002               	goto	l493
  5531  00076A                     l492:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 885: else
  5535                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5536  00076A  010F               	movlb	15	; () banked
  5537  00076C  9105               	bcf	5,0,b	;volatile
  5538  00076E                     l493:
  5539                           
  5540                           ; BSR set to: 15
  5541                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5542  00076E  0100               	movlb	0	; () banked
  5543  000770  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5544  000772  D003               	goto	l494
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5548  000774  010F               	movlb	15	; () banked
  5549  000776  8305               	bsf	5,1,b	;volatile
  5550  000778  D002               	goto	l495
  5551  00077A                     l494:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 890: else
  5555                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5556  00077A  010F               	movlb	15	; () banked
  5557  00077C  9305               	bcf	5,1,b	;volatile
  5558  00077E                     l495:
  5559                           
  5560                           ; BSR set to: 15
  5561                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5562  00077E  0100               	movlb	0	; () banked
  5563  000780  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5564  000782  D003               	goto	l496
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5568  000784  010F               	movlb	15	; () banked
  5569  000786  8B05               	bsf	5,5,b	;volatile
  5570  000788  D002               	goto	l497
  5571  00078A                     l496:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 895: else
  5575                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5576  00078A  010F               	movlb	15	; () banked
  5577  00078C  9B05               	bcf	5,5,b	;volatile
  5578  00078E                     l497:
  5579                           
  5580                           ; BSR set to: 15
  5581                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5582  00078E  0100               	movlb	0	; () banked
  5583  000790  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5584  000792  D003               	goto	l498
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5588  000794  010F               	movlb	15	; () banked
  5589  000796  8D05               	bsf	5,6,b	;volatile
  5590  000798  D002               	goto	l499
  5591  00079A                     l498:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 900: else
  5595                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5596  00079A  010F               	movlb	15	; () banked
  5597  00079C  9D05               	bcf	5,6,b	;volatile
  5598  00079E                     l499:
  5599                           
  5600                           ; BSR set to: 15
  5601                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5602  00079E  0100               	movlb	0	; () banked
  5603  0007A0  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5604  0007A2  D003               	goto	l500
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5608  0007A4  010F               	movlb	15	; () banked
  5609  0007A6  8F05               	bsf	5,7,b	;volatile
  5610  0007A8  D003               	goto	l3079
  5611  0007AA                     l500:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 905: else
  5615                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5616  0007AA  010F               	movlb	15	; () banked
  5617  0007AC  9F05               	bcf	5,7,b	;volatile
  5618  0007AE  D000               	goto	l3079
  5619  0007B0                     l3079:
  5620                           
  5621                           ; BSR set to: 15
  5622                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5623  0007B0  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5624  0007B4  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5625  0007B8  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5626  0007BC  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5627  0007C0  0E16               	movlw	22
  5628  0007C2  D006               	goto	u3050
  5629  0007C4                     u3055:
  5630  0007C4  0100               	movlb	0	; () banked
  5631  0007C6  90D8               	bcf	status,0,c
  5632  0007C8  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5633  0007CA  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5634  0007CC  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5635  0007CE  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5636  0007D0                     u3050:
  5637  0007D0  2EE8               	decfsz	wreg,f,c
  5638  0007D2  D7F8               	goto	u3055
  5639  0007D4  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5640  0007D8  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5641  0007DC  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5642  0007E0  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5646  0007E4  0100               	movlb	0	; () banked
  5647  0007E6  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5648  0007E8  0100               	movlb	0	; () banked
  5649  0007EA  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5650  0007EC  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5651  0007EE  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5652  0007F0  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5656  0007F2  C0D2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5657  0007F6  D000               	goto	l3085
  5658  0007F8                     l3085:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;inc\CANlib.h: 911: }
  5662                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5663  0007F8  0E02               	movlw	2
  5664  0007FA  0100               	movlb	0	; () banked
  5665  0007FC  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5666  0007FE  A4D8               	btfss	status,2,c
  5667  000800  D08B               	goto	l3119
  5668                           
  5669                           ; BSR set to: 0
  5670  000802  0EF7               	movlw	247
  5671  000804  0100               	movlb	0	; () banked
  5672  000806  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5673  000808  A4D8               	btfss	status,2,c
  5674  00080A  D086               	goto	l3119
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;inc\CANlib.h: 915: {
  5678                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5679  00080C  010F               	movlb	15	; () banked
  5680  00080E  8709               	bsf	9,3,b	;volatile
  5681                           
  5682                           ; BSR set to: 15
  5683                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5684  000810  0100               	movlb	0	; () banked
  5685  000812  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5686  000814  0100               	movlb	0	; () banked
  5687  000816  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5688  000818  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5689  00081A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5690  00081C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5694  00081E  C0D2  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5698  000822  0E00               	movlw	0
  5699  000824  0100               	movlb	0	; () banked
  5700  000826  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5701  000828  0100               	movlb	0	; () banked
  5702  00082A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5703  00082C  0EFF               	movlw	255
  5704  00082E  0100               	movlb	0	; () banked
  5705  000830  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5706  000832  0100               	movlb	0	; () banked
  5707  000834  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5708  000836  0E00               	movlw	0
  5709  000838  0100               	movlb	0	; () banked
  5710  00083A  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5711  00083C  0100               	movlb	0	; () banked
  5712  00083E  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5713  000840  0E00               	movlw	0
  5714  000842  0100               	movlb	0	; () banked
  5715  000844  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5716  000846  0100               	movlb	0	; () banked
  5717  000848  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5721  00084A  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5722  00084E  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5723  000852  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5724  000856  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5725  00085A  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5726  00085E  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5727  000862  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5728  000866  0100               	movlb	0	; () banked
  5729  000868  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5730  00086A  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5731  00086E  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5732  000872  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5733  000876  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5737  00087A  C0D2  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5741  00087E  0100               	movlb	0	; () banked
  5742  000880  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5743  000882  D003               	goto	l503
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5747  000884  010F               	movlb	15	; () banked
  5748  000886  8109               	bsf	9,0,b	;volatile
  5749  000888  D002               	goto	l504
  5750  00088A                     l503:
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;inc\CANlib.h: 927: else
  5754                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5755  00088A  010F               	movlb	15	; () banked
  5756  00088C  9109               	bcf	9,0,b	;volatile
  5757  00088E                     l504:
  5758                           
  5759                           ; BSR set to: 15
  5760                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5761  00088E  0100               	movlb	0	; () banked
  5762  000890  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5763  000892  D003               	goto	l505
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5767  000894  010F               	movlb	15	; () banked
  5768  000896  8309               	bsf	9,1,b	;volatile
  5769  000898  D002               	goto	l506
  5770  00089A                     l505:
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;inc\CANlib.h: 932: else
  5774                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5775  00089A  010F               	movlb	15	; () banked
  5776  00089C  9309               	bcf	9,1,b	;volatile
  5777  00089E                     l506:
  5778                           
  5779                           ; BSR set to: 15
  5780                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5781  00089E  0100               	movlb	0	; () banked
  5782  0008A0  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5783  0008A2  D003               	goto	l507
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5787  0008A4  010F               	movlb	15	; () banked
  5788  0008A6  8B09               	bsf	9,5,b	;volatile
  5789  0008A8  D002               	goto	l508
  5790  0008AA                     l507:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;inc\CANlib.h: 937: else
  5794                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5795  0008AA  010F               	movlb	15	; () banked
  5796  0008AC  9B09               	bcf	9,5,b	;volatile
  5797  0008AE                     l508:
  5798                           
  5799                           ; BSR set to: 15
  5800                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5801  0008AE  0100               	movlb	0	; () banked
  5802  0008B0  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5803  0008B2  D003               	goto	l509
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5807  0008B4  010F               	movlb	15	; () banked
  5808  0008B6  8D09               	bsf	9,6,b	;volatile
  5809  0008B8  D002               	goto	l510
  5810  0008BA                     l509:
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;inc\CANlib.h: 942: else
  5814                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5815  0008BA  010F               	movlb	15	; () banked
  5816  0008BC  9D09               	bcf	9,6,b	;volatile
  5817  0008BE                     l510:
  5818                           
  5819                           ; BSR set to: 15
  5820                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5821  0008BE  0100               	movlb	0	; () banked
  5822  0008C0  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5823  0008C2  D003               	goto	l511
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5827  0008C4  010F               	movlb	15	; () banked
  5828  0008C6  8F09               	bsf	9,7,b	;volatile
  5829  0008C8  D003               	goto	l3113
  5830  0008CA                     l511:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 947: else
  5834                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5835  0008CA  010F               	movlb	15	; () banked
  5836  0008CC  9F09               	bcf	9,7,b	;volatile
  5837  0008CE  D000               	goto	l3113
  5838  0008D0                     l3113:
  5839                           
  5840                           ; BSR set to: 15
  5841                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5842  0008D0  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  5843  0008D4  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5844  0008D8  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5845  0008DC  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5846  0008E0  0E16               	movlw	22
  5847  0008E2  D006               	goto	u3130
  5848  0008E4                     u3135:
  5849  0008E4  0100               	movlb	0	; () banked
  5850  0008E6  90D8               	bcf	status,0,c
  5851  0008E8  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5852  0008EA  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5853  0008EC  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5854  0008EE  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  5855  0008F0                     u3130:
  5856  0008F0  2EE8               	decfsz	wreg,f,c
  5857  0008F2  D7F8               	goto	u3135
  5858  0008F4  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5859  0008F8  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5860  0008FC  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5861  000900  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5865  000904  0100               	movlb	0	; () banked
  5866  000906  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  5867  000908  0100               	movlb	0	; () banked
  5868  00090A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5869  00090C  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5870  00090E  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5871  000910  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5875  000912  C0D2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5876  000916  D000               	goto	l3119
  5877  000918                     l3119:
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;inc\CANlib.h: 953: }
  5881                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5882  000918  0E03               	movlw	3
  5883  00091A  0100               	movlb	0	; () banked
  5884  00091C  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5885  00091E  A4D8               	btfss	status,2,c
  5886  000920  D08B               	goto	l3153
  5887                           
  5888                           ; BSR set to: 0
  5889  000922  0EF7               	movlw	247
  5890  000924  0100               	movlb	0	; () banked
  5891  000926  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  5892  000928  A4D8               	btfss	status,2,c
  5893  00092A  D086               	goto	l3153
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;inc\CANlib.h: 956: {
  5897                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5898  00092C  010F               	movlb	15	; () banked
  5899  00092E  870D               	bsf	13,3,b	;volatile
  5900                           
  5901                           ; BSR set to: 15
  5902                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5903  000930  0100               	movlb	0	; () banked
  5904  000932  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  5905  000934  0100               	movlb	0	; () banked
  5906  000936  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5907  000938  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5908  00093A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5909  00093C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5913  00093E  C0D2  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5917  000942  0E00               	movlw	0
  5918  000944  0100               	movlb	0	; () banked
  5919  000946  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  5920  000948  0100               	movlb	0	; () banked
  5921  00094A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  5922  00094C  0EFF               	movlw	255
  5923  00094E  0100               	movlb	0	; () banked
  5924  000950  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5925  000952  0100               	movlb	0	; () banked
  5926  000954  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5927  000956  0E00               	movlw	0
  5928  000958  0100               	movlb	0	; () banked
  5929  00095A  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5930  00095C  0100               	movlb	0	; () banked
  5931  00095E  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5932  000960  0E00               	movlw	0
  5933  000962  0100               	movlb	0	; () banked
  5934  000964  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5935  000966  0100               	movlb	0	; () banked
  5936  000968  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5940  00096A  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  5941  00096E  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5942  000972  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5943  000976  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5944  00097A  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  5945  00097E  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5946  000982  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5947  000986  0100               	movlb	0	; () banked
  5948  000988  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  5949  00098A  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  5950  00098E  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5951  000992  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5952  000996  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5956  00099A  C0D2  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5960  00099E  0100               	movlb	0	; () banked
  5961  0009A0  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5962  0009A2  D003               	goto	l514
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5966  0009A4  010F               	movlb	15	; () banked
  5967  0009A6  810D               	bsf	13,0,b	;volatile
  5968  0009A8  D002               	goto	l515
  5969  0009AA                     l514:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 968: else
  5973                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5974  0009AA  010F               	movlb	15	; () banked
  5975  0009AC  910D               	bcf	13,0,b	;volatile
  5976  0009AE                     l515:
  5977                           
  5978                           ; BSR set to: 15
  5979                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5980  0009AE  0100               	movlb	0	; () banked
  5981  0009B0  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5982  0009B2  D003               	goto	l516
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5986  0009B4  010F               	movlb	15	; () banked
  5987  0009B6  830D               	bsf	13,1,b	;volatile
  5988  0009B8  D002               	goto	l517
  5989  0009BA                     l516:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;inc\CANlib.h: 973: else
  5993                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5994  0009BA  010F               	movlb	15	; () banked
  5995  0009BC  930D               	bcf	13,1,b	;volatile
  5996  0009BE                     l517:
  5997                           
  5998                           ; BSR set to: 15
  5999                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6000  0009BE  0100               	movlb	0	; () banked
  6001  0009C0  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6002  0009C2  D003               	goto	l518
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6006  0009C4  010F               	movlb	15	; () banked
  6007  0009C6  8B0D               	bsf	13,5,b	;volatile
  6008  0009C8  D002               	goto	l519
  6009  0009CA                     l518:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;inc\CANlib.h: 978: else
  6013                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6014  0009CA  010F               	movlb	15	; () banked
  6015  0009CC  9B0D               	bcf	13,5,b	;volatile
  6016  0009CE                     l519:
  6017                           
  6018                           ; BSR set to: 15
  6019                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6020  0009CE  0100               	movlb	0	; () banked
  6021  0009D0  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6022  0009D2  D003               	goto	l520
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6026  0009D4  010F               	movlb	15	; () banked
  6027  0009D6  8D0D               	bsf	13,6,b	;volatile
  6028  0009D8  D002               	goto	l521
  6029  0009DA                     l520:
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;inc\CANlib.h: 983: else
  6033                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6034  0009DA  010F               	movlb	15	; () banked
  6035  0009DC  9D0D               	bcf	13,6,b	;volatile
  6036  0009DE                     l521:
  6037                           
  6038                           ; BSR set to: 15
  6039                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6040  0009DE  0100               	movlb	0	; () banked
  6041  0009E0  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6042  0009E2  D003               	goto	l522
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6046  0009E4  010F               	movlb	15	; () banked
  6047  0009E6  8F0D               	bsf	13,7,b	;volatile
  6048  0009E8  D003               	goto	l3147
  6049  0009EA                     l522:
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;inc\CANlib.h: 988: else
  6053                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6054  0009EA  010F               	movlb	15	; () banked
  6055  0009EC  9F0D               	bcf	13,7,b	;volatile
  6056  0009EE  D000               	goto	l3147
  6057  0009F0                     l3147:
  6058                           
  6059                           ; BSR set to: 15
  6060                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6061  0009F0  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  6062  0009F4  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6063  0009F8  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6064  0009FC  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6065  000A00  0E16               	movlw	22
  6066  000A02  D006               	goto	u3210
  6067  000A04                     u3215:
  6068  000A04  0100               	movlb	0	; () banked
  6069  000A06  90D8               	bcf	status,0,c
  6070  000A08  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6071  000A0A  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6072  000A0C  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6073  000A0E  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  6074  000A10                     u3210:
  6075  000A10  2EE8               	decfsz	wreg,f,c
  6076  000A12  D7F8               	goto	u3215
  6077  000A14  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6078  000A18  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6079  000A1C  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6080  000A20  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6084  000A24  0100               	movlb	0	; () banked
  6085  000A26  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  6086  000A28  0100               	movlb	0	; () banked
  6087  000A2A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6088  000A2C  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6089  000A2E  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6090  000A30  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6094  000A32  C0D2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6095  000A36  D000               	goto	l3153
  6096  000A38                     l3153:
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;inc\CANlib.h: 994: }
  6100                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6101  000A38  0E04               	movlw	4
  6102  000A3A  0100               	movlb	0	; () banked
  6103  000A3C  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6104  000A3E  A4D8               	btfss	status,2,c
  6105  000A40  D08B               	goto	l3187
  6106                           
  6107                           ; BSR set to: 0
  6108  000A42  0EF7               	movlw	247
  6109  000A44  0100               	movlb	0	; () banked
  6110  000A46  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  6111  000A48  A4D8               	btfss	status,2,c
  6112  000A4A  D086               	goto	l3187
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;inc\CANlib.h: 997: {
  6116                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6117  000A4C  010F               	movlb	15	; () banked
  6118  000A4E  8711               	bsf	17,3,b	;volatile
  6119                           
  6120                           ; BSR set to: 15
  6121                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6122  000A50  0100               	movlb	0	; () banked
  6123  000A52  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  6124  000A54  0100               	movlb	0	; () banked
  6125  000A56  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6126  000A58  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6127  000A5A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6128  000A5C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6132  000A5E  C0D2  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6136  000A62  0E00               	movlw	0
  6137  000A64  0100               	movlb	0	; () banked
  6138  000A66  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  6139  000A68  0100               	movlb	0	; () banked
  6140  000A6A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6141  000A6C  0EFF               	movlw	255
  6142  000A6E  0100               	movlb	0	; () banked
  6143  000A70  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6144  000A72  0100               	movlb	0	; () banked
  6145  000A74  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6146  000A76  0E00               	movlw	0
  6147  000A78  0100               	movlb	0	; () banked
  6148  000A7A  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6149  000A7C  0100               	movlb	0	; () banked
  6150  000A7E  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6151  000A80  0E00               	movlw	0
  6152  000A82  0100               	movlb	0	; () banked
  6153  000A84  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6154  000A86  0100               	movlb	0	; () banked
  6155  000A88  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6159  000A8A  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6160  000A8E  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6161  000A92  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6162  000A96  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6163  000A9A  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6164  000A9E  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6165  000AA2  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6166  000AA6  0100               	movlb	0	; () banked
  6167  000AA8  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6168  000AAA  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6169  000AAE  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6170  000AB2  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6171  000AB6  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6175  000ABA  C0D2  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6179  000ABE  0100               	movlb	0	; () banked
  6180  000AC0  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6181  000AC2  D003               	goto	l525
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6185  000AC4  010F               	movlb	15	; () banked
  6186  000AC6  8111               	bsf	17,0,b	;volatile
  6187  000AC8  D002               	goto	l526
  6188  000ACA                     l525:
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;inc\CANlib.h: 1009: else
  6192                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6193  000ACA  010F               	movlb	15	; () banked
  6194  000ACC  9111               	bcf	17,0,b	;volatile
  6195  000ACE                     l526:
  6196                           
  6197                           ; BSR set to: 15
  6198                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6199  000ACE  0100               	movlb	0	; () banked
  6200  000AD0  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6201  000AD2  D003               	goto	l527
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6205  000AD4  010F               	movlb	15	; () banked
  6206  000AD6  8311               	bsf	17,1,b	;volatile
  6207  000AD8  D002               	goto	l528
  6208  000ADA                     l527:
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;inc\CANlib.h: 1014: else
  6212                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6213  000ADA  010F               	movlb	15	; () banked
  6214  000ADC  9311               	bcf	17,1,b	;volatile
  6215  000ADE                     l528:
  6216                           
  6217                           ; BSR set to: 15
  6218                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6219  000ADE  0100               	movlb	0	; () banked
  6220  000AE0  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6221  000AE2  D003               	goto	l529
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6225  000AE4  010F               	movlb	15	; () banked
  6226  000AE6  8B11               	bsf	17,5,b	;volatile
  6227  000AE8  D002               	goto	l530
  6228  000AEA                     l529:
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;inc\CANlib.h: 1019: else
  6232                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6233  000AEA  010F               	movlb	15	; () banked
  6234  000AEC  9B11               	bcf	17,5,b	;volatile
  6235  000AEE                     l530:
  6236                           
  6237                           ; BSR set to: 15
  6238                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6239  000AEE  0100               	movlb	0	; () banked
  6240  000AF0  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6241  000AF2  D003               	goto	l531
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6245  000AF4  010F               	movlb	15	; () banked
  6246  000AF6  8D11               	bsf	17,6,b	;volatile
  6247  000AF8  D002               	goto	l532
  6248  000AFA                     l531:
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;inc\CANlib.h: 1024: else
  6252                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6253  000AFA  010F               	movlb	15	; () banked
  6254  000AFC  9D11               	bcf	17,6,b	;volatile
  6255  000AFE                     l532:
  6256                           
  6257                           ; BSR set to: 15
  6258                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6259  000AFE  0100               	movlb	0	; () banked
  6260  000B00  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6261  000B02  D003               	goto	l533
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6265  000B04  010F               	movlb	15	; () banked
  6266  000B06  8F11               	bsf	17,7,b	;volatile
  6267  000B08  D003               	goto	l3181
  6268  000B0A                     l533:
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;inc\CANlib.h: 1029: else
  6272                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6273  000B0A  010F               	movlb	15	; () banked
  6274  000B0C  9F11               	bcf	17,7,b	;volatile
  6275  000B0E  D000               	goto	l3181
  6276  000B10                     l3181:
  6277                           
  6278                           ; BSR set to: 15
  6279                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6280  000B10  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  6281  000B14  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6282  000B18  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6283  000B1C  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6284  000B20  0E16               	movlw	22
  6285  000B22  D006               	goto	u3290
  6286  000B24                     u3295:
  6287  000B24  0100               	movlb	0	; () banked
  6288  000B26  90D8               	bcf	status,0,c
  6289  000B28  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6290  000B2A  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6291  000B2C  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6292  000B2E  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  6293  000B30                     u3290:
  6294  000B30  2EE8               	decfsz	wreg,f,c
  6295  000B32  D7F8               	goto	u3295
  6296  000B34  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6297  000B38  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6298  000B3C  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6299  000B40  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6303  000B44  0100               	movlb	0	; () banked
  6304  000B46  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  6305  000B48  0100               	movlb	0	; () banked
  6306  000B4A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6307  000B4C  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6308  000B4E  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6309  000B50  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6313  000B52  C0D2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6314  000B56  D000               	goto	l3187
  6315  000B58                     l3187:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;inc\CANlib.h: 1035: }
  6319                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6320  000B58  0E05               	movlw	5
  6321  000B5A  0100               	movlb	0	; () banked
  6322  000B5C  19D1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6323  000B5E  A4D8               	btfss	status,2,c
  6324  000B60  D08B               	goto	l546
  6325                           
  6326                           ; BSR set to: 0
  6327  000B62  0EF7               	movlw	247
  6328  000B64  0100               	movlb	0	; () banked
  6329  000B66  19CC               	xorwf	CANSetFilter@type& (0+255),w,b
  6330  000B68  A4D8               	btfss	status,2,c
  6331  000B6A  D086               	goto	l546
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;inc\CANlib.h: 1038: {
  6335                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6336  000B6C  010F               	movlb	15	; () banked
  6337  000B6E  8715               	bsf	21,3,b	;volatile
  6338                           
  6339                           ; BSR set to: 15
  6340                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6341  000B70  0100               	movlb	0	; () banked
  6342  000B72  51C8               	movf	CANSetFilter@filter& (0+255),w,b
  6343  000B74  0100               	movlb	0	; () banked
  6344  000B76  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6345  000B78  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6346  000B7A  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6347  000B7C  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6351  000B7E  C0D2  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6355  000B82  0E00               	movlw	0
  6356  000B84  0100               	movlb	0	; () banked
  6357  000B86  15C8               	andwf	CANSetFilter@filter& (0+255),w,b
  6358  000B88  0100               	movlb	0	; () banked
  6359  000B8A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6360  000B8C  0EFF               	movlw	255
  6361  000B8E  0100               	movlb	0	; () banked
  6362  000B90  15C9               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6363  000B92  0100               	movlb	0	; () banked
  6364  000B94  6FD3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6365  000B96  0E00               	movlw	0
  6366  000B98  0100               	movlb	0	; () banked
  6367  000B9A  15CA               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6368  000B9C  0100               	movlb	0	; () banked
  6369  000B9E  6FD4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6370  000BA0  0E00               	movlw	0
  6371  000BA2  0100               	movlb	0	; () banked
  6372  000BA4  15CB               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6373  000BA6  0100               	movlb	0	; () banked
  6374  000BA8  6FD5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6378  000BAA  C0D2  F0CD         	movff	CANSetFilter@tamp,??_CANSetFilter
  6379  000BAE  C0D3  F0CE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6380  000BB2  C0D4  F0CF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6381  000BB6  C0D5  F0D0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6382  000BBA  C0CE  F0CD         	movff	??_CANSetFilter+1,??_CANSetFilter
  6383  000BBE  C0CF  F0CE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6384  000BC2  C0D0  F0CF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6385  000BC6  0100               	movlb	0	; () banked
  6386  000BC8  6BD0               	clrf	(??_CANSetFilter+3)& (0+255),b
  6387  000BCA  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6388  000BCE  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6389  000BD2  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6390  000BD6  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6394  000BDA  C0D2  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6398  000BDE  0100               	movlb	0	; () banked
  6399  000BE0  A1CA               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6400  000BE2  D003               	goto	l536
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6404  000BE4  010F               	movlb	15	; () banked
  6405  000BE6  8115               	bsf	21,0,b	;volatile
  6406  000BE8  D002               	goto	l537
  6407  000BEA                     l536:
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;inc\CANlib.h: 1050: else
  6411                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6412  000BEA  010F               	movlb	15	; () banked
  6413  000BEC  9115               	bcf	21,0,b	;volatile
  6414  000BEE                     l537:
  6415                           
  6416                           ; BSR set to: 15
  6417                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6418  000BEE  0100               	movlb	0	; () banked
  6419  000BF0  A3CA               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6420  000BF2  D003               	goto	l538
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6424  000BF4  010F               	movlb	15	; () banked
  6425  000BF6  8315               	bsf	21,1,b	;volatile
  6426  000BF8  D002               	goto	l539
  6427  000BFA                     l538:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;inc\CANlib.h: 1055: else
  6431                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6432  000BFA  010F               	movlb	15	; () banked
  6433  000BFC  9315               	bcf	21,1,b	;volatile
  6434  000BFE                     l539:
  6435                           
  6436                           ; BSR set to: 15
  6437                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6438  000BFE  0100               	movlb	0	; () banked
  6439  000C00  A5CA               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6440  000C02  D003               	goto	l540
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6444  000C04  010F               	movlb	15	; () banked
  6445  000C06  8B15               	bsf	21,5,b	;volatile
  6446  000C08  D002               	goto	l541
  6447  000C0A                     l540:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;inc\CANlib.h: 1060: else
  6451                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6452  000C0A  010F               	movlb	15	; () banked
  6453  000C0C  9B15               	bcf	21,5,b	;volatile
  6454  000C0E                     l541:
  6455                           
  6456                           ; BSR set to: 15
  6457                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6458  000C0E  0100               	movlb	0	; () banked
  6459  000C10  A7CA               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6460  000C12  D003               	goto	l542
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6464  000C14  010F               	movlb	15	; () banked
  6465  000C16  8D15               	bsf	21,6,b	;volatile
  6466  000C18  D002               	goto	l543
  6467  000C1A                     l542:
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;inc\CANlib.h: 1065: else
  6471                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6472  000C1A  010F               	movlb	15	; () banked
  6473  000C1C  9D15               	bcf	21,6,b	;volatile
  6474  000C1E                     l543:
  6475                           
  6476                           ; BSR set to: 15
  6477                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6478  000C1E  0100               	movlb	0	; () banked
  6479  000C20  A9CA               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6480  000C22  D003               	goto	l544
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6484  000C24  010F               	movlb	15	; () banked
  6485  000C26  8F15               	bsf	21,7,b	;volatile
  6486  000C28  D003               	goto	l3215
  6487  000C2A                     l544:
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;inc\CANlib.h: 1070: else
  6491                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6492  000C2A  010F               	movlb	15	; () banked
  6493  000C2C  9F15               	bcf	21,7,b	;volatile
  6494  000C2E  D000               	goto	l3215
  6495  000C30                     l3215:
  6496                           
  6497                           ; BSR set to: 15
  6498                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6499  000C30  C0C8  F0CD         	movff	CANSetFilter@filter,??_CANSetFilter
  6500  000C34  C0C9  F0CE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6501  000C38  C0CA  F0CF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6502  000C3C  C0CB  F0D0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6503  000C40  0E16               	movlw	22
  6504  000C42  D006               	goto	u3370
  6505  000C44                     u3375:
  6506  000C44  0100               	movlb	0	; () banked
  6507  000C46  90D8               	bcf	status,0,c
  6508  000C48  33D0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6509  000C4A  33CF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6510  000C4C  33CE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6511  000C4E  33CD               	rrcf	??_CANSetFilter& (0+255),f,b
  6512  000C50                     u3370:
  6513  000C50  2EE8               	decfsz	wreg,f,c
  6514  000C52  D7F8               	goto	u3375
  6515  000C54  C0CD  F0D2         	movff	??_CANSetFilter,CANSetFilter@tamp
  6516  000C58  C0CE  F0D3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6517  000C5C  C0CF  F0D4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6518  000C60  C0D0  F0D5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6522  000C64  0100               	movlb	0	; () banked
  6523  000C66  51D2               	movf	CANSetFilter@tamp& (0+255),w,b
  6524  000C68  0100               	movlb	0	; () banked
  6525  000C6A  6FD2               	movwf	CANSetFilter@tamp& (0+255),b
  6526  000C6C  6BD3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6527  000C6E  6BD4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6528  000C70  6BD5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6532  000C72  C0D2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6533  000C76  D000               	goto	l546
  6534  000C78                     l546:
  6535                           
  6536                           ; BSR set to: 0
  6537  000C78  0012               	return		;funcret
  6538  000C7A                     __end_of_CANSetFilter:
  6539                           	opt stack 0
  6540                           tblptru	equ	0xFF8
  6541                           tblptrh	equ	0xFF7
  6542                           tblptrl	equ	0xFF6
  6543                           tablat	equ	0xFF5
  6544                           prodh	equ	0xFF4
  6545                           prodl	equ	0xFF3
  6546                           intcon	equ	0xFF2
  6547                           intcon2	equ	0xFF1
  6548                           intcon3	equ	0xFF0
  6549                           postinc0	equ	0xFEE
  6550                           wreg	equ	0xFE8
  6551                           postdec1	equ	0xFE5
  6552                           fsr1l	equ	0xFE1
  6553                           indf2	equ	0xFDF
  6554                           fsr2h	equ	0xFDA
  6555                           fsr2l	equ	0xFD9
  6556                           status	equ	0xFD8
  6557                           
  6558 ;; *************** function _CANOperationMode *****************
  6559 ;; Defined at:
  6560 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  mode            1    wreg     enum E16879
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  mode            1   30[BANK0 ] enum E16879
  6565 ;; Return value:  Size  Location     Type
  6566 ;;		None               void
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6574 ;;      Params:         0       0       0       0
  6575 ;;      Locals:         0       1       0       0
  6576 ;;      Temps:          0       0       0       0
  6577 ;;      Totals:         0       1       0       0
  6578 ;;Total ram usage:        1 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    4
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_CANInitialize
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text9
  6589  002ADE                     __ptext9:
  6590                           	opt stack 0
  6591  002ADE                     _CANOperationMode:
  6592                           	opt stack 24
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;incstack = 0
  6596                           ;CANOperationMode@mode stored from wreg
  6597  002ADE  0100               	movlb	0	; () banked
  6598  002AE0  6FC8               	movwf	CANOperationMode@mode& (0+255),b
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;inc\CANlib.h: 208: CANCON = mode;
  6602  002AE2  C0C8  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6603                           
  6604                           ; BSR set to: 0
  6605                           
  6606                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6607  002AE6  D000               	goto	l2811
  6608  002AE8                     l2811:
  6609                           
  6610                           ; BSR set to: 0
  6611  002AE8  506E               	movf	3950,w,c	;volatile
  6612  002AEA  0BE0               	andlw	224
  6613  002AEC  0100               	movlb	0	; () banked
  6614  002AEE  19C8               	xorwf	CANOperationMode@mode& (0+255),w,b
  6615  002AF0  A4D8               	btfss	status,2,c
  6616  002AF2  D7FA               	goto	l2811
  6617                           
  6618                           ; BSR set to: 0
  6619                           
  6620                           ; BSR set to: 0
  6621  002AF4  0012               	return		;funcret
  6622  002AF6                     __end_of_CANOperationMode:
  6623                           	opt stack 0
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           prodh	equ	0xFF4
  6629                           prodl	equ	0xFF3
  6630                           intcon	equ	0xFF2
  6631                           intcon2	equ	0xFF1
  6632                           intcon3	equ	0xFF0
  6633                           postinc0	equ	0xFEE
  6634                           wreg	equ	0xFE8
  6635                           postdec1	equ	0xFE5
  6636                           fsr1l	equ	0xFE1
  6637                           indf2	equ	0xFDF
  6638                           fsr2h	equ	0xFDA
  6639                           fsr2l	equ	0xFD9
  6640                           status	equ	0xFD8
  6641                           
  6642 ;; *************** function ___lmul *****************
  6643 ;; Defined at:
  6644 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  multiplier      4   30[BANK0 ] unsigned long 
  6647 ;;  multiplicand    4   34[BANK0 ] unsigned long 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  product         4   38[BANK0 ] unsigned long 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  4   30[BANK0 ] unsigned long 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6659 ;;      Params:         0       8       0       0
  6660 ;;      Locals:         0       4       0       0
  6661 ;;      Temps:          0       0       0       0
  6662 ;;      Totals:         0      12       0       0
  6663 ;;Total ram usage:       12 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    4
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_main
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text10
  6674  00293C                     __ptext10:
  6675                           	opt stack 0
  6676  00293C                     ___lmul:
  6677                           	opt stack 26
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;incstack = 0
  6681  00293C  0E00               	movlw	0
  6682  00293E  0100               	movlb	0	; () banked
  6683  002940  6FD0               	movwf	___lmul@product& (0+255),b
  6684  002942  0E00               	movlw	0
  6685  002944  6FD1               	movwf	(___lmul@product+1)& (0+255),b
  6686  002946  0E00               	movlw	0
  6687  002948  6FD2               	movwf	(___lmul@product+2)& (0+255),b
  6688  00294A  0E00               	movlw	0
  6689  00294C  6FD3               	movwf	(___lmul@product+3)& (0+255),b
  6690  00294E  D000               	goto	l3831
  6691  002950                     l3831:
  6692                           
  6693                           ; BSR set to: 0
  6694  002950  0100               	movlb	0	; () banked
  6695  002952  A1C8               	btfss	___lmul@multiplier& (0+255),0,b
  6696  002954  D011               	goto	l3835
  6697                           
  6698                           ; BSR set to: 0
  6699  002956  0100               	movlb	0	; () banked
  6700  002958  51CC               	movf	___lmul@multiplicand& (0+255),w,b
  6701  00295A  0100               	movlb	0	; () banked
  6702  00295C  27D0               	addwf	___lmul@product& (0+255),f,b
  6703  00295E  0100               	movlb	0	; () banked
  6704  002960  51CD               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6705  002962  0100               	movlb	0	; () banked
  6706  002964  23D1               	addwfc	(___lmul@product+1)& (0+255),f,b
  6707  002966  0100               	movlb	0	; () banked
  6708  002968  51CE               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6709  00296A  0100               	movlb	0	; () banked
  6710  00296C  23D2               	addwfc	(___lmul@product+2)& (0+255),f,b
  6711  00296E  0100               	movlb	0	; () banked
  6712  002970  51CF               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6713  002972  0100               	movlb	0	; () banked
  6714  002974  23D3               	addwfc	(___lmul@product+3)& (0+255),f,b
  6715  002976  D000               	goto	l3835
  6716  002978                     l3835:
  6717                           
  6718                           ; BSR set to: 0
  6719  002978  0100               	movlb	0	; () banked
  6720  00297A  90D8               	bcf	status,0,c
  6721  00297C  37CC               	rlcf	___lmul@multiplicand& (0+255),f,b
  6722  00297E  37CD               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6723  002980  37CE               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6724  002982  37CF               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6725                           
  6726                           ; BSR set to: 0
  6727  002984  0100               	movlb	0	; () banked
  6728  002986  90D8               	bcf	status,0,c
  6729  002988  33CB               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6730  00298A  33CA               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6731  00298C  33C9               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6732  00298E  33C8               	rrcf	___lmul@multiplier& (0+255),f,b
  6733  002990  0100               	movlb	0	; () banked
  6734  002992  51C8               	movf	___lmul@multiplier& (0+255),w,b
  6735  002994  0100               	movlb	0	; () banked
  6736  002996  11C9               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6737  002998  0100               	movlb	0	; () banked
  6738  00299A  11CA               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6739  00299C  0100               	movlb	0	; () banked
  6740  00299E  11CB               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6741  0029A0  A4D8               	btfss	status,2,c
  6742  0029A2  D7D6               	goto	l3831
  6743                           
  6744                           ; BSR set to: 0
  6745  0029A4  C0D0  F0C8         	movff	___lmul@product,?___lmul
  6746  0029A8  C0D1  F0C9         	movff	___lmul@product+1,?___lmul+1
  6747  0029AC  C0D2  F0CA         	movff	___lmul@product+2,?___lmul+2
  6748  0029B0  C0D3  F0CB         	movff	___lmul@product+3,?___lmul+3
  6749                           
  6750                           ; BSR set to: 0
  6751  0029B4  0012               	return		;funcret
  6752  0029B6                     __end_of___lmul:
  6753                           	opt stack 0
  6754                           tblptru	equ	0xFF8
  6755                           tblptrh	equ	0xFF7
  6756                           tblptrl	equ	0xFF6
  6757                           tablat	equ	0xFF5
  6758                           prodh	equ	0xFF4
  6759                           prodl	equ	0xFF3
  6760                           intcon	equ	0xFF2
  6761                           intcon2	equ	0xFF1
  6762                           intcon3	equ	0xFF0
  6763                           postinc0	equ	0xFEE
  6764                           wreg	equ	0xFE8
  6765                           postdec1	equ	0xFE5
  6766                           fsr1l	equ	0xFE1
  6767                           indf2	equ	0xFDF
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8
  6771                           
  6772 ;; *************** function ___awdiv *****************
  6773 ;; Defined at:
  6774 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  dividend        2   30[BANK0 ] int 
  6777 ;;  divisor         2   32[BANK0 ] int 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  quotient        2   36[BANK0 ] int 
  6780 ;;  sign            1   35[BANK0 ] unsigned char 
  6781 ;;  counter         1   34[BANK0 ] unsigned char 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  2   30[BANK0 ] int 
  6784 ;; Registers used:
  6785 ;;		wreg, status,2, status,0
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6791 ;;      Params:         0       4       0       0
  6792 ;;      Locals:         0       4       0       0
  6793 ;;      Temps:          0       0       0       0
  6794 ;;      Totals:         0       8       0       0
  6795 ;;Total ram usage:        8 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:    4
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_main
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text11
  6806  0026E4                     __ptext11:
  6807                           	opt stack 0
  6808  0026E4                     ___awdiv:
  6809                           	opt stack 26
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;incstack = 0
  6813  0026E4  0E00               	movlw	0
  6814  0026E6  0100               	movlb	0	; () banked
  6815  0026E8  6FCD               	movwf	___awdiv@sign& (0+255),b
  6816                           
  6817                           ; BSR set to: 0
  6818  0026EA  0100               	movlb	0	; () banked
  6819  0026EC  AFCB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6820  0026EE  D009               	goto	l3891
  6821                           
  6822                           ; BSR set to: 0
  6823  0026F0  0100               	movlb	0	; () banked
  6824  0026F2  6DCA               	negf	___awdiv@divisor& (0+255),b
  6825  0026F4  1FCB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6826  0026F6  B0D8               	btfsc	status,0,c
  6827  0026F8  2BCB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6828                           
  6829                           ; BSR set to: 0
  6830  0026FA  0E01               	movlw	1
  6831  0026FC  0100               	movlb	0	; () banked
  6832  0026FE  6FCD               	movwf	___awdiv@sign& (0+255),b
  6833  002700  D000               	goto	l3891
  6834  002702                     l3891:
  6835                           
  6836                           ; BSR set to: 0
  6837  002702  0100               	movlb	0	; () banked
  6838  002704  AFC9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6839  002706  D009               	goto	l3897
  6840                           
  6841                           ; BSR set to: 0
  6842  002708  0100               	movlb	0	; () banked
  6843  00270A  6DC8               	negf	___awdiv@dividend& (0+255),b
  6844  00270C  1FC9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6845  00270E  B0D8               	btfsc	status,0,c
  6846  002710  2BC9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6847                           
  6848                           ; BSR set to: 0
  6849  002712  0E01               	movlw	1
  6850  002714  0100               	movlb	0	; () banked
  6851  002716  1BCD               	xorwf	___awdiv@sign& (0+255),f,b
  6852  002718  D000               	goto	l3897
  6853  00271A                     l3897:
  6854                           
  6855                           ; BSR set to: 0
  6856  00271A  0E00               	movlw	0
  6857  00271C  0100               	movlb	0	; () banked
  6858  00271E  6FCF               	movwf	(___awdiv@quotient+1)& (0+255),b
  6859  002720  0E00               	movlw	0
  6860  002722  6FCE               	movwf	___awdiv@quotient& (0+255),b
  6861                           
  6862                           ; BSR set to: 0
  6863  002724  0100               	movlb	0	; () banked
  6864  002726  51CA               	movf	___awdiv@divisor& (0+255),w,b
  6865  002728  0100               	movlb	0	; () banked
  6866  00272A  11CB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6867  00272C  B4D8               	btfsc	status,2,c
  6868  00272E  D031               	goto	l3919
  6869                           
  6870                           ; BSR set to: 0
  6871  002730  0E01               	movlw	1
  6872  002732  0100               	movlb	0	; () banked
  6873  002734  6FCC               	movwf	___awdiv@counter& (0+255),b
  6874  002736  D007               	goto	l3905
  6875  002738                     l3903:
  6876                           
  6877                           ; BSR set to: 0
  6878  002738  0100               	movlb	0	; () banked
  6879  00273A  90D8               	bcf	status,0,c
  6880  00273C  37CA               	rlcf	___awdiv@divisor& (0+255),f,b
  6881  00273E  37CB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6882  002740  0100               	movlb	0	; () banked
  6883  002742  2BCC               	incf	___awdiv@counter& (0+255),f,b
  6884  002744  D000               	goto	l3905
  6885  002746                     l3905:
  6886                           
  6887                           ; BSR set to: 0
  6888  002746  0100               	movlb	0	; () banked
  6889  002748  BFCB               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6890  00274A  D002               	goto	l3907
  6891  00274C  D7F5               	goto	l3903
  6892                           
  6893                           ; BSR set to: 0
  6894  00274E  D000               	goto	l3907
  6895  002750                     l3907:
  6896                           
  6897                           ; BSR set to: 0
  6898  002750  0100               	movlb	0	; () banked
  6899  002752  90D8               	bcf	status,0,c
  6900  002754  37CE               	rlcf	___awdiv@quotient& (0+255),f,b
  6901  002756  37CF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6902                           
  6903                           ; BSR set to: 0
  6904  002758  0100               	movlb	0	; () banked
  6905  00275A  51CA               	movf	___awdiv@divisor& (0+255),w,b
  6906  00275C  0100               	movlb	0	; () banked
  6907  00275E  5DC8               	subwf	___awdiv@dividend& (0+255),w,b
  6908  002760  0100               	movlb	0	; () banked
  6909  002762  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6910  002764  0100               	movlb	0	; () banked
  6911  002766  59C9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6912  002768  A0D8               	btfss	status,0,c
  6913  00276A  D00B               	goto	l3915
  6914                           
  6915                           ; BSR set to: 0
  6916  00276C  0100               	movlb	0	; () banked
  6917  00276E  51CA               	movf	___awdiv@divisor& (0+255),w,b
  6918  002770  0100               	movlb	0	; () banked
  6919  002772  5FC8               	subwf	___awdiv@dividend& (0+255),f,b
  6920  002774  0100               	movlb	0	; () banked
  6921  002776  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6922  002778  0100               	movlb	0	; () banked
  6923  00277A  5BC9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6924                           
  6925                           ; BSR set to: 0
  6926  00277C  0100               	movlb	0	; () banked
  6927  00277E  81CE               	bsf	___awdiv@quotient& (0+255),0,b
  6928  002780  D000               	goto	l3915
  6929  002782                     l3915:
  6930                           
  6931                           ; BSR set to: 0
  6932  002782  0100               	movlb	0	; () banked
  6933  002784  90D8               	bcf	status,0,c
  6934  002786  33CB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6935  002788  33CA               	rrcf	___awdiv@divisor& (0+255),f,b
  6936                           
  6937                           ; BSR set to: 0
  6938  00278A  0100               	movlb	0	; () banked
  6939  00278C  2FCC               	decfsz	___awdiv@counter& (0+255),f,b
  6940  00278E  D7E0               	goto	l3907
  6941                           
  6942                           ; BSR set to: 0
  6943  002790  D000               	goto	l3919
  6944  002792                     l3919:
  6945                           
  6946                           ; BSR set to: 0
  6947  002792  0100               	movlb	0	; () banked
  6948  002794  51CD               	movf	___awdiv@sign& (0+255),w,b
  6949  002796  0100               	movlb	0	; () banked
  6950  002798  B4D8               	btfsc	status,2,c
  6951  00279A  D006               	goto	l3923
  6952                           
  6953                           ; BSR set to: 0
  6954  00279C  0100               	movlb	0	; () banked
  6955  00279E  6DCE               	negf	___awdiv@quotient& (0+255),b
  6956  0027A0  1FCF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6957  0027A2  B0D8               	btfsc	status,0,c
  6958  0027A4  2BCF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6959  0027A6  D000               	goto	l3923
  6960  0027A8                     l3923:
  6961                           
  6962                           ; BSR set to: 0
  6963  0027A8  C0CE  F0C8         	movff	___awdiv@quotient,?___awdiv
  6964  0027AC  C0CF  F0C9         	movff	___awdiv@quotient+1,?___awdiv+1
  6965  0027B0  D000               	goto	l963
  6966  0027B2                     l963:
  6967                           
  6968                           ; BSR set to: 0
  6969  0027B2  0012               	return		;funcret
  6970  0027B4                     __end_of___awdiv:
  6971                           	opt stack 0
  6972                           tblptru	equ	0xFF8
  6973                           tblptrh	equ	0xFF7
  6974                           tblptrl	equ	0xFF6
  6975                           tablat	equ	0xFF5
  6976                           prodh	equ	0xFF4
  6977                           prodl	equ	0xFF3
  6978                           intcon	equ	0xFF2
  6979                           intcon2	equ	0xFF1
  6980                           intcon3	equ	0xFF0
  6981                           postinc0	equ	0xFEE
  6982                           wreg	equ	0xFE8
  6983                           postdec1	equ	0xFE5
  6984                           fsr1l	equ	0xFE1
  6985                           indf2	equ	0xFDF
  6986                           fsr2h	equ	0xFDA
  6987                           fsr2l	equ	0xFD9
  6988                           status	equ	0xFD8
  6989                           
  6990 ;; *************** function ___aldiv *****************
  6991 ;; Defined at:
  6992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  dividend        4    0[BANK1 ] long 
  6995 ;;  divisor         4    4[BANK1 ] long 
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  quotient        4   10[BANK1 ] long 
  6998 ;;  sign            1    9[BANK1 ] unsigned char 
  6999 ;;  counter         1    8[BANK1 ] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  4    0[BANK1 ] long 
  7002 ;; Registers used:
  7003 ;;		wreg, status,2, status,0
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7009 ;;      Params:         0       0       8       0
  7010 ;;      Locals:         0       0       6       0
  7011 ;;      Temps:          0       0       0       0
  7012 ;;      Totals:         0       0      14       0
  7013 ;;Total ram usage:       14 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    4
  7016 ;; This function calls:
  7017 ;;		Nothing
  7018 ;; This function is called by:
  7019 ;;		_main
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text12
  7024  0025B8                     __ptext12:
  7025                           	opt stack 0
  7026  0025B8                     ___aldiv:
  7027                           	opt stack 26
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;incstack = 0
  7031  0025B8  0E00               	movlw	0
  7032  0025BA  0101               	movlb	1	; () banked
  7033  0025BC  6F09               	movwf	___aldiv@sign& (0+255),b
  7034                           
  7035                           ; BSR set to: 1
  7036  0025BE  0101               	movlb	1	; () banked
  7037  0025C0  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7038  0025C2  D00D               	goto	l4397
  7039                           
  7040                           ; BSR set to: 1
  7041  0025C4  0101               	movlb	1	; () banked
  7042  0025C6  1F07               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7043  0025C8  1F06               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7044  0025CA  1F05               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7045  0025CC  6D04               	negf	___aldiv@divisor& (0+255),b
  7046  0025CE  0E00               	movlw	0
  7047  0025D0  2305               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7048  0025D2  2306               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7049  0025D4  2307               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7050                           
  7051                           ; BSR set to: 1
  7052  0025D6  0E01               	movlw	1
  7053  0025D8  0101               	movlb	1	; () banked
  7054  0025DA  6F09               	movwf	___aldiv@sign& (0+255),b
  7055  0025DC  D000               	goto	l4397
  7056  0025DE                     l4397:
  7057                           
  7058                           ; BSR set to: 1
  7059  0025DE  0101               	movlb	1	; () banked
  7060  0025E0  AF03               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  7061  0025E2  D00D               	goto	l4403
  7062                           
  7063                           ; BSR set to: 1
  7064  0025E4  0101               	movlb	1	; () banked
  7065  0025E6  1F03               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7066  0025E8  1F02               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7067  0025EA  1F01               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7068  0025EC  6D00               	negf	___aldiv@dividend& (0+255),b
  7069  0025EE  0E00               	movlw	0
  7070  0025F0  2301               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7071  0025F2  2302               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7072  0025F4  2303               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7073                           
  7074                           ; BSR set to: 1
  7075  0025F6  0E01               	movlw	1
  7076  0025F8  0101               	movlb	1	; () banked
  7077  0025FA  1B09               	xorwf	___aldiv@sign& (0+255),f,b
  7078  0025FC  D000               	goto	l4403
  7079  0025FE                     l4403:
  7080                           
  7081                           ; BSR set to: 1
  7082  0025FE  0E00               	movlw	0
  7083  002600  0101               	movlb	1	; () banked
  7084  002602  6F0A               	movwf	___aldiv@quotient& (0+255),b
  7085  002604  0E00               	movlw	0
  7086  002606  6F0B               	movwf	(___aldiv@quotient+1)& (0+255),b
  7087  002608  0E00               	movlw	0
  7088  00260A  6F0C               	movwf	(___aldiv@quotient+2)& (0+255),b
  7089  00260C  0E00               	movlw	0
  7090  00260E  6F0D               	movwf	(___aldiv@quotient+3)& (0+255),b
  7091                           
  7092                           ; BSR set to: 1
  7093  002610  0101               	movlb	1	; () banked
  7094  002612  5104               	movf	___aldiv@divisor& (0+255),w,b
  7095  002614  0101               	movlb	1	; () banked
  7096  002616  1105               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7097  002618  0101               	movlb	1	; () banked
  7098  00261A  1106               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7099  00261C  0101               	movlb	1	; () banked
  7100  00261E  1107               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  7101  002620  B4D8               	btfsc	status,2,c
  7102  002622  D047               	goto	l4425
  7103                           
  7104                           ; BSR set to: 1
  7105  002624  0E01               	movlw	1
  7106  002626  0101               	movlb	1	; () banked
  7107  002628  6F08               	movwf	___aldiv@counter& (0+255),b
  7108  00262A  D009               	goto	l4411
  7109  00262C                     l4409:
  7110                           
  7111                           ; BSR set to: 1
  7112  00262C  0101               	movlb	1	; () banked
  7113  00262E  90D8               	bcf	status,0,c
  7114  002630  3704               	rlcf	___aldiv@divisor& (0+255),f,b
  7115  002632  3705               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7116  002634  3706               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7117  002636  3707               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7118  002638  0101               	movlb	1	; () banked
  7119  00263A  2B08               	incf	___aldiv@counter& (0+255),f,b
  7120  00263C  D000               	goto	l4411
  7121  00263E                     l4411:
  7122                           
  7123                           ; BSR set to: 1
  7124  00263E  0101               	movlb	1	; () banked
  7125  002640  BF07               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  7126  002642  D002               	goto	l4413
  7127  002644  D7F3               	goto	l4409
  7128                           
  7129                           ; BSR set to: 1
  7130  002646  D000               	goto	l4413
  7131  002648                     l4413:
  7132                           
  7133                           ; BSR set to: 1
  7134  002648  0101               	movlb	1	; () banked
  7135  00264A  90D8               	bcf	status,0,c
  7136  00264C  370A               	rlcf	___aldiv@quotient& (0+255),f,b
  7137  00264E  370B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7138  002650  370C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7139  002652  370D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7140                           
  7141                           ; BSR set to: 1
  7142  002654  0101               	movlb	1	; () banked
  7143  002656  5104               	movf	___aldiv@divisor& (0+255),w,b
  7144  002658  0101               	movlb	1	; () banked
  7145  00265A  5D00               	subwf	___aldiv@dividend& (0+255),w,b
  7146  00265C  0101               	movlb	1	; () banked
  7147  00265E  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7148  002660  0101               	movlb	1	; () banked
  7149  002662  5901               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7150  002664  0101               	movlb	1	; () banked
  7151  002666  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7152  002668  0101               	movlb	1	; () banked
  7153  00266A  5902               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7154  00266C  0101               	movlb	1	; () banked
  7155  00266E  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7156  002670  0101               	movlb	1	; () banked
  7157  002672  5903               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7158  002674  A0D8               	btfss	status,0,c
  7159  002676  D013               	goto	l4421
  7160                           
  7161                           ; BSR set to: 1
  7162  002678  0101               	movlb	1	; () banked
  7163  00267A  5104               	movf	___aldiv@divisor& (0+255),w,b
  7164  00267C  0101               	movlb	1	; () banked
  7165  00267E  5F00               	subwf	___aldiv@dividend& (0+255),f,b
  7166  002680  0101               	movlb	1	; () banked
  7167  002682  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7168  002684  0101               	movlb	1	; () banked
  7169  002686  5B01               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7170  002688  0101               	movlb	1	; () banked
  7171  00268A  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7172  00268C  0101               	movlb	1	; () banked
  7173  00268E  5B02               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7174  002690  0101               	movlb	1	; () banked
  7175  002692  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7176  002694  0101               	movlb	1	; () banked
  7177  002696  5B03               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7178                           
  7179                           ; BSR set to: 1
  7180  002698  0101               	movlb	1	; () banked
  7181  00269A  810A               	bsf	___aldiv@quotient& (0+255),0,b
  7182  00269C  D000               	goto	l4421
  7183  00269E                     l4421:
  7184                           
  7185                           ; BSR set to: 1
  7186  00269E  0101               	movlb	1	; () banked
  7187  0026A0  90D8               	bcf	status,0,c
  7188  0026A2  3307               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7189  0026A4  3306               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7190  0026A6  3305               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7191  0026A8  3304               	rrcf	___aldiv@divisor& (0+255),f,b
  7192                           
  7193                           ; BSR set to: 1
  7194  0026AA  0101               	movlb	1	; () banked
  7195  0026AC  2F08               	decfsz	___aldiv@counter& (0+255),f,b
  7196  0026AE  D7CC               	goto	l4413
  7197                           
  7198                           ; BSR set to: 1
  7199  0026B0  D000               	goto	l4425
  7200  0026B2                     l4425:
  7201                           
  7202                           ; BSR set to: 1
  7203  0026B2  0101               	movlb	1	; () banked
  7204  0026B4  5109               	movf	___aldiv@sign& (0+255),w,b
  7205  0026B6  0101               	movlb	1	; () banked
  7206  0026B8  B4D8               	btfsc	status,2,c
  7207  0026BA  D00A               	goto	l4429
  7208                           
  7209                           ; BSR set to: 1
  7210  0026BC  0101               	movlb	1	; () banked
  7211  0026BE  1F0D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7212  0026C0  1F0C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7213  0026C2  1F0B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7214  0026C4  6D0A               	negf	___aldiv@quotient& (0+255),b
  7215  0026C6  0E00               	movlw	0
  7216  0026C8  230B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7217  0026CA  230C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7218  0026CC  230D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7219  0026CE  D000               	goto	l4429
  7220  0026D0                     l4429:
  7221                           
  7222                           ; BSR set to: 1
  7223  0026D0  C10A  F100         	movff	___aldiv@quotient,?___aldiv
  7224  0026D4  C10B  F101         	movff	___aldiv@quotient+1,?___aldiv+1
  7225  0026D8  C10C  F102         	movff	___aldiv@quotient+2,?___aldiv+2
  7226  0026DC  C10D  F103         	movff	___aldiv@quotient+3,?___aldiv+3
  7227  0026E0  D000               	goto	l839
  7228  0026E2                     l839:
  7229                           
  7230                           ; BSR set to: 1
  7231  0026E2  0012               	return		;funcret
  7232  0026E4                     __end_of___aldiv:
  7233                           	opt stack 0
  7234                           tblptru	equ	0xFF8
  7235                           tblptrh	equ	0xFF7
  7236                           tblptrl	equ	0xFF6
  7237                           tablat	equ	0xFF5
  7238                           prodh	equ	0xFF4
  7239                           prodl	equ	0xFF3
  7240                           intcon	equ	0xFF2
  7241                           intcon2	equ	0xFF1
  7242                           intcon3	equ	0xFF0
  7243                           postinc0	equ	0xFEE
  7244                           wreg	equ	0xFE8
  7245                           postdec1	equ	0xFE5
  7246                           fsr1l	equ	0xFE1
  7247                           indf2	equ	0xFDF
  7248                           fsr2h	equ	0xFDA
  7249                           fsr2l	equ	0xFD9
  7250                           status	equ	0xFD8
  7251                           
  7252 ;; *************** function _CANisTXwarningON *****************
  7253 ;; Defined at:
  7254 ;;		line 1119 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      unsigned char 
  7261 ;; Registers used:
  7262 ;;		wreg
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7268 ;;      Params:         0       0       0       0
  7269 ;;      Locals:         0       0       0       0
  7270 ;;      Temps:          0       0       0       0
  7271 ;;      Totals:         0       0       0       0
  7272 ;;Total ram usage:        0 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    4
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_main
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text13
  7283  002B20                     __ptext13:
  7284                           	opt stack 0
  7285  002B20                     _CANisTXwarningON:
  7286                           	opt stack 26
  7287                           
  7288                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7289                           
  7290                           ; BSR set to: 1
  7291                           ;incstack = 0
  7292  002B20  A474               	btfss	3956,2,c	;volatile
  7293  002B22  D002               	goto	u4080
  7294  002B24  0E01               	movlw	1
  7295  002B26  D002               	goto	l561
  7296  002B28                     u4080:
  7297  002B28  0E00               	movlw	0
  7298  002B2A  D000               	goto	l561
  7299  002B2C                     l561:
  7300  002B2C  0012               	return		;funcret
  7301  002B2E                     __end_of_CANisTXwarningON:
  7302                           	opt stack 0
  7303                           tblptru	equ	0xFF8
  7304                           tblptrh	equ	0xFF7
  7305                           tblptrl	equ	0xFF6
  7306                           tablat	equ	0xFF5
  7307                           prodh	equ	0xFF4
  7308                           prodl	equ	0xFF3
  7309                           intcon	equ	0xFF2
  7310                           intcon2	equ	0xFF1
  7311                           intcon3	equ	0xFF0
  7312                           postinc0	equ	0xFEE
  7313                           wreg	equ	0xFE8
  7314                           postdec1	equ	0xFE5
  7315                           fsr1l	equ	0xFE1
  7316                           indf2	equ	0xFDF
  7317                           fsr2h	equ	0xFDA
  7318                           fsr2l	equ	0xFD9
  7319                           status	equ	0xFD8
  7320                           
  7321 ;; *************** function _CANisRXwarningON *****************
  7322 ;; Defined at:
  7323 ;;		line 1127 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      unsigned char 
  7330 ;; Registers used:
  7331 ;;		wreg
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7337 ;;      Params:         0       0       0       0
  7338 ;;      Locals:         0       0       0       0
  7339 ;;      Temps:          0       0       0       0
  7340 ;;      Totals:         0       0       0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; Hardware stack levels required when called:    4
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_main
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text14
  7352  002B2E                     __ptext14:
  7353                           	opt stack 0
  7354  002B2E                     _CANisRXwarningON:
  7355                           	opt stack 26
  7356                           
  7357                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7358                           
  7359                           ;incstack = 0
  7360  002B2E  A274               	btfss	3956,1,c	;volatile
  7361  002B30  D002               	goto	u4090
  7362  002B32  0E01               	movlw	1
  7363  002B34  D002               	goto	l564
  7364  002B36                     u4090:
  7365  002B36  0E00               	movlw	0
  7366  002B38  D000               	goto	l564
  7367  002B3A                     l564:
  7368  002B3A  0012               	return		;funcret
  7369  002B3C                     __end_of_CANisRXwarningON:
  7370                           	opt stack 0
  7371                           tblptru	equ	0xFF8
  7372                           tblptrh	equ	0xFF7
  7373                           tblptrl	equ	0xFF6
  7374                           tablat	equ	0xFF5
  7375                           prodh	equ	0xFF4
  7376                           prodl	equ	0xFF3
  7377                           intcon	equ	0xFF2
  7378                           intcon2	equ	0xFF1
  7379                           intcon3	equ	0xFF0
  7380                           postinc0	equ	0xFEE
  7381                           wreg	equ	0xFE8
  7382                           postdec1	equ	0xFE5
  7383                           fsr1l	equ	0xFE1
  7384                           indf2	equ	0xFDF
  7385                           fsr2h	equ	0xFDA
  7386                           fsr2l	equ	0xFD9
  7387                           status	equ	0xFD8
  7388                           
  7389 ;; *************** function _ISR_Bassa *****************
  7390 ;; Defined at:
  7391 ;;		line 214 in file "ABS_Code.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;		None
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;		None
  7396 ;; Return value:  Size  Location     Type
  7397 ;;		None               void
  7398 ;; Registers used:
  7399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7405 ;;      Params:         0       0       0       0
  7406 ;;      Locals:         0       0       0       0
  7407 ;;      Temps:         17       0       0       0
  7408 ;;      Totals:        17       0       0       0
  7409 ;;Total ram usage:       17 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:    3
  7412 ;; This function calls:
  7413 ;;		_CANisRxReady
  7414 ;;		_CANreceiveMessage
  7415 ;; This function is called by:
  7416 ;;		Interrupt level 1
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	intcodelo
  7421  000018                     __pintcodelo:
  7422                           	opt stack 0
  7423  000018                     _ISR_Bassa:
  7424                           	opt stack 24
  7425                           
  7426                           ;incstack = 0
  7427  000018  CFD8 F00D          	movff	status,??_ISR_Bassa
  7428  00001C  CFE8 F00E          	movff	wreg,??_ISR_Bassa+1
  7429  000020  CFE0 F00F          	movff	bsr,??_ISR_Bassa+2
  7430  000024  CFFA F010          	movff	pclath,??_ISR_Bassa+3
  7431  000028  CFFB F011          	movff	pclatu,??_ISR_Bassa+4
  7432  00002C  CFE9 F012          	movff	fsr0l,??_ISR_Bassa+5
  7433  000030  CFEA F013          	movff	fsr0h,??_ISR_Bassa+6
  7434  000034  CFE1 F014          	movff	fsr1l,??_ISR_Bassa+7
  7435  000038  CFE2 F015          	movff	fsr1h,??_ISR_Bassa+8
  7436  00003C  CFD9 F016          	movff	fsr2l,??_ISR_Bassa+9
  7437  000040  CFDA F017          	movff	fsr2h,??_ISR_Bassa+10
  7438  000044  CFF3 F018          	movff	prodl,??_ISR_Bassa+11
  7439  000048  CFF4 F019          	movff	prodh,??_ISR_Bassa+12
  7440  00004C  CFF6 F01A          	movff	tblptrl,??_ISR_Bassa+13
  7441  000050  CFF7 F01B          	movff	tblptrh,??_ISR_Bassa+14
  7442  000054  CFF8 F01C          	movff	tblptru,??_ISR_Bassa+15
  7443  000058  CFF5 F01D          	movff	tablat,??_ISR_Bassa+16
  7444                           
  7445                           ;ABS_Code.c: 216: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7446  00005C  B0A4               	btfsc	4004,0,c	;volatile
  7447  00005E  D002               	goto	i1l4085
  7448  000060  A2A4               	btfss	4004,1,c	;volatile
  7449  000062  D03F               	goto	i1l4111
  7450  000064                     i1l4085:
  7451                           
  7452                           ;ABS_Code.c: 217: if (CANisRxReady()) {
  7453  000064  EC7B  F015         	call	_CANisRxReady	;wreg free
  7454  000068  0900               	iorlw	0
  7455  00006A  B4D8               	btfsc	status,2,c
  7456  00006C  D037               	goto	i1l4107
  7457                           
  7458                           ;ABS_Code.c: 218: CANreceiveMessage(&msg);
  7459  00006E  0E31               	movlw	low _msg
  7460  000070  6E01               	movwf	CANreceiveMessage@msg,c
  7461  000072  0E00               	movlw	high _msg
  7462  000074  6E02               	movwf	CANreceiveMessage@msg+1,c
  7463  000076  EC0D  F00A         	call	_CANreceiveMessage	;wreg free
  7464                           
  7465                           ;ABS_Code.c: 219: if (msg.RTR == 1) {
  7466  00007A  043F               	decf	_msg+14,w,c
  7467  00007C  A4D8               	btfss	status,2,c
  7468  00007E  D00A               	goto	i1l4093
  7469                           
  7470                           ;ABS_Code.c: 220: remote_frame_id = msg.identifier;
  7471  000080  C031  F074         	movff	_msg,_remote_frame_id	;volatile
  7472  000084  C032  F075         	movff	_msg+1,_remote_frame_id+1	;volatile
  7473  000088  C033  F076         	movff	_msg+2,_remote_frame_id+2	;volatile
  7474  00008C  C034  F077         	movff	_msg+3,_remote_frame_id+3	;volatile
  7475                           
  7476                           ;ABS_Code.c: 221: remote_frame = 1;
  7477  000090  8042               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7478  000092  D000               	goto	i1l4093
  7479  000094                     i1l4093:
  7480                           
  7481                           ;ABS_Code.c: 222: }
  7482                           ;ABS_Code.c: 223: if (msg.identifier == 0b00000000110) {
  7483  000094  0E06               	movlw	6
  7484  000096  1831               	xorwf	_msg,w,c
  7485  000098  1032               	iorwf	_msg+1,w,c
  7486  00009A  1033               	iorwf	_msg+2,w,c
  7487  00009C  1034               	iorwf	_msg+3,w,c
  7488  00009E  A4D8               	btfss	status,2,c
  7489  0000A0  D005               	goto	i1l4097
  7490                           
  7491                           ;ABS_Code.c: 224: brake_signal_CAN = msg.data[0];
  7492  0000A2  C035  F08D         	movff	_msg+4,_brake_signal_CAN	;volatile
  7493                           
  7494                           ;ABS_Code.c: 225: Analogic_Mode = msg.data[1];
  7495  0000A6  C036  F08C         	movff	_msg+5,_Analogic_Mode	;volatile
  7496  0000AA  D000               	goto	i1l4097
  7497  0000AC                     i1l4097:
  7498                           
  7499                           ;ABS_Code.c: 226: }
  7500                           ;ABS_Code.c: 227: if (msg.identifier == 0b00000001111) {
  7501  0000AC  0E0F               	movlw	15
  7502  0000AE  1831               	xorwf	_msg,w,c
  7503  0000B0  1032               	iorwf	_msg+1,w,c
  7504  0000B2  1033               	iorwf	_msg+2,w,c
  7505  0000B4  1034               	iorwf	_msg+3,w,c
  7506  0000B6  A4D8               	btfss	status,2,c
  7507  0000B8  D011               	goto	i1l4107
  7508                           
  7509                           ;ABS_Code.c: 228: distance_set_value = msg.data[0];
  7510  0000BA  C035  F08A         	movff	_msg+4,_distance_set_value	;volatile
  7511  0000BE  0100               	movlb	0	; () banked
  7512  0000C0  6B8B               	clrf	(_distance_set_value+1)& (0+255),b	;volatile
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;ABS_Code.c: 229: distance_set_counter_1 = 0;
  7516  0000C2  0E00               	movlw	0
  7517  0000C4  0100               	movlb	0	; () banked
  7518  0000C6  6F87               	movwf	(_distance_set_counter_1+1)& (0+255),b	;volatile
  7519  0000C8  0E00               	movlw	0
  7520  0000CA  6F86               	movwf	_distance_set_counter_1& (0+255),b	;volatile
  7521                           
  7522                           ;ABS_Code.c: 230: distance_set_counter_2 = 0;
  7523  0000CC  0E00               	movlw	0
  7524  0000CE  0100               	movlb	0	; () banked
  7525  0000D0  6F89               	movwf	(_distance_set_counter_2+1)& (0+255),b	;volatile
  7526  0000D2  0E00               	movlw	0
  7527  0000D4  6F88               	movwf	_distance_set_counter_2& (0+255),b	;volatile
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;ABS_Code.c: 231: distance_set_flag = 1;
  7531  0000D6  8E41               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;ABS_Code.c: 232: PORTAbits.RA1 = 0;
  7535  0000D8  9280               	bcf	3968,1,c	;volatile
  7536                           
  7537                           ; BSR set to: 0
  7538  0000DA  D000               	goto	i1l4107
  7539  0000DC                     i1l4107:
  7540                           
  7541                           ;ABS_Code.c: 233: }
  7542                           ;ABS_Code.c: 234: }
  7543                           ;ABS_Code.c: 235: PIR3bits.RXB0IF = 0;
  7544  0000DC  90A4               	bcf	4004,0,c	;volatile
  7545                           
  7546                           ;ABS_Code.c: 236: PIR3bits.RXB1IF = 0;
  7547  0000DE  92A4               	bcf	4004,1,c	;volatile
  7548  0000E0  D000               	goto	i1l4111
  7549  0000E2                     i1l4111:
  7550                           
  7551                           ;ABS_Code.c: 237: }
  7552                           ;ABS_Code.c: 240: if (PIR1bits.TMR1IF == 1) {
  7553  0000E2  A09E               	btfss	3998,0,c	;volatile
  7554  0000E4  D007               	goto	i1l4119
  7555                           
  7556                           ;ABS_Code.c: 241: TMR1_overflow = 1;
  7557  0000E6  8441               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7558                           
  7559                           ;ABS_Code.c: 242: TMR1H = 0x00;
  7560  0000E8  0E00               	movlw	0
  7561  0000EA  6ECF               	movwf	4047,c	;volatile
  7562                           
  7563                           ;ABS_Code.c: 243: TMR1L = 0x00;
  7564  0000EC  0E00               	movlw	0
  7565  0000EE  6ECE               	movwf	4046,c	;volatile
  7566                           
  7567                           ;ABS_Code.c: 244: PIR1bits.TMR1IF = 0;
  7568  0000F0  909E               	bcf	3998,0,c	;volatile
  7569  0000F2  D000               	goto	i1l4119
  7570  0000F4                     i1l4119:
  7571                           
  7572                           ;ABS_Code.c: 245: }
  7573                           ;ABS_Code.c: 248: if (PIR2bits.TMR3IF == 1) {
  7574  0000F4  A2A1               	btfss	4001,1,c	;volatile
  7575  0000F6  D007               	goto	i1l705
  7576                           
  7577                           ;ABS_Code.c: 249: TMR3_overflow = 1;
  7578  0000F8  8641               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7579                           
  7580                           ;ABS_Code.c: 250: TMR3H = 0x00;
  7581  0000FA  0E00               	movlw	0
  7582  0000FC  6EB3               	movwf	4019,c	;volatile
  7583                           
  7584                           ;ABS_Code.c: 251: TMR3L = 0x00;
  7585  0000FE  0E00               	movlw	0
  7586  000100  6EB2               	movwf	4018,c	;volatile
  7587                           
  7588                           ;ABS_Code.c: 252: PIR2bits.TMR3IF = 0;
  7589  000102  92A1               	bcf	4001,1,c	;volatile
  7590  000104  D000               	goto	i1l705
  7591  000106                     i1l705:
  7592  000106  C01D  FFF5         	movff	??_ISR_Bassa+16,tablat
  7593  00010A  C01C  FFF8         	movff	??_ISR_Bassa+15,tblptru
  7594  00010E  C01B  FFF7         	movff	??_ISR_Bassa+14,tblptrh
  7595  000112  C01A  FFF6         	movff	??_ISR_Bassa+13,tblptrl
  7596  000116  C019  FFF4         	movff	??_ISR_Bassa+12,prodh
  7597  00011A  C018  FFF3         	movff	??_ISR_Bassa+11,prodl
  7598  00011E  C017  FFDA         	movff	??_ISR_Bassa+10,fsr2h
  7599  000122  C016  FFD9         	movff	??_ISR_Bassa+9,fsr2l
  7600  000126  C015  FFE2         	movff	??_ISR_Bassa+8,fsr1h
  7601  00012A  C014  FFE1         	movff	??_ISR_Bassa+7,fsr1l
  7602  00012E  C013  FFEA         	movff	??_ISR_Bassa+6,fsr0h
  7603  000132  C012  FFE9         	movff	??_ISR_Bassa+5,fsr0l
  7604  000136  C011  FFFB         	movff	??_ISR_Bassa+4,pclatu
  7605  00013A  C010  FFFA         	movff	??_ISR_Bassa+3,pclath
  7606  00013E  C00F  FFE0         	movff	??_ISR_Bassa+2,bsr
  7607  000142  C00E  FFE8         	movff	??_ISR_Bassa+1,wreg
  7608  000146  C00D  FFD8         	movff	??_ISR_Bassa,status
  7609  00014A  0010               	retfie	
  7610  00014C                     __end_of_ISR_Bassa:
  7611                           	opt stack 0
  7612                           pclatu	equ	0xFFB
  7613                           pclath	equ	0xFFA
  7614                           tblptru	equ	0xFF8
  7615                           tblptrh	equ	0xFF7
  7616                           tblptrl	equ	0xFF6
  7617                           tablat	equ	0xFF5
  7618                           prodh	equ	0xFF4
  7619                           prodl	equ	0xFF3
  7620                           intcon	equ	0xFF2
  7621                           intcon2	equ	0xFF1
  7622                           intcon3	equ	0xFF0
  7623                           postinc0	equ	0xFEE
  7624                           fsr0h	equ	0xFEA
  7625                           fsr0l	equ	0xFE9
  7626                           wreg	equ	0xFE8
  7627                           postdec1	equ	0xFE5
  7628                           fsr1h	equ	0xFE2
  7629                           fsr1l	equ	0xFE1
  7630                           bsr	equ	0xFE0
  7631                           indf2	equ	0xFDF
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function _CANreceiveMessage *****************
  7637 ;; Defined at:
  7638 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  msg             2    0[COMRAM] PTR struct .
  7641 ;;		 -> msg(15), 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  tamp            1   11[COMRAM] unsigned char 
  7644 ;;  error           1   10[COMRAM] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      unsigned char 
  7647 ;; Registers used:
  7648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7654 ;;      Params:         2       0       0       0
  7655 ;;      Locals:         2       0       0       0
  7656 ;;      Temps:          8       0       0       0
  7657 ;;      Totals:        12       0       0       0
  7658 ;;Total ram usage:       12 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:    2
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_ISR_Bassa
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text16
  7669  00141A                     __ptext16:
  7670                           	opt stack 0
  7671  00141A                     _CANreceiveMessage:
  7672                           	opt stack 24
  7673                           
  7674                           ;inc\CANlib.h: 530: BYTE tamp;
  7675                           ;inc\CANlib.h: 531: BYTE error = 0;
  7676                           
  7677                           ;incstack = 0
  7678  00141A  0E00               	movlw	0
  7679  00141C  6E0B               	movwf	CANreceiveMessage@error,c
  7680                           
  7681                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7682  00141E  AE74               	btfss	3956,7,c	;volatile
  7683  001420  D002               	goto	i1l3527
  7684                           
  7685                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7686  001422  800B               	bsf	CANreceiveMessage@error,0,c
  7687  001424  D000               	goto	i1l3527
  7688  001426                     i1l3527:
  7689                           
  7690                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7691  001426  AC74               	btfss	3956,6,c	;volatile
  7692  001428  D002               	goto	i1l3531
  7693                           
  7694                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7695  00142A  820B               	bsf	CANreceiveMessage@error,1,c
  7696  00142C  D000               	goto	i1l3531
  7697  00142E                     i1l3531:
  7698                           
  7699                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7700  00142E  010F               	movlb	15	; () banked
  7701  001430  AF50               	btfss	80,7,b	;volatile
  7702  001432  D149               	goto	i1l428
  7703                           
  7704                           ; BSR set to: 15
  7705                           ;inc\CANlib.h: 541: {
  7706                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7707  001434  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7708  001438  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7709  00143C  6ADE               	clrf	postinc2,c
  7710  00143E  6ADE               	clrf	postinc2,c
  7711  001440  6ADE               	clrf	postinc2,c
  7712  001442  6ADD               	clrf	postdec2,c
  7713                           
  7714                           ; BSR set to: 15
  7715                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7716  001444  EE20 F004          	lfsr	2,4
  7717  001448  5001               	movf	CANreceiveMessage@msg,w,c
  7718  00144A  26D9               	addwf	fsr2l,f,c
  7719  00144C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7720  00144E  22DA               	addwfc	fsr2h,f,c
  7721  001450  CF56 FFDF          	movff	3926,indf2	;volatile
  7722                           
  7723                           ; BSR set to: 15
  7724                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7725  001454  EE20 F005          	lfsr	2,5
  7726  001458  5001               	movf	CANreceiveMessage@msg,w,c
  7727  00145A  26D9               	addwf	fsr2l,f,c
  7728  00145C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7729  00145E  22DA               	addwfc	fsr2h,f,c
  7730  001460  CF57 FFDF          	movff	3927,indf2	;volatile
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7734  001464  EE20 F006          	lfsr	2,6
  7735  001468  5001               	movf	CANreceiveMessage@msg,w,c
  7736  00146A  26D9               	addwf	fsr2l,f,c
  7737  00146C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7738  00146E  22DA               	addwfc	fsr2h,f,c
  7739  001470  CF58 FFDF          	movff	3928,indf2	;volatile
  7740                           
  7741                           ; BSR set to: 15
  7742                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7743  001474  EE20 F007          	lfsr	2,7
  7744  001478  5001               	movf	CANreceiveMessage@msg,w,c
  7745  00147A  26D9               	addwf	fsr2l,f,c
  7746  00147C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7747  00147E  22DA               	addwfc	fsr2h,f,c
  7748  001480  CF59 FFDF          	movff	3929,indf2	;volatile
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7752  001484  EE20 F008          	lfsr	2,8
  7753  001488  5001               	movf	CANreceiveMessage@msg,w,c
  7754  00148A  26D9               	addwf	fsr2l,f,c
  7755  00148C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7756  00148E  22DA               	addwfc	fsr2h,f,c
  7757  001490  CF5A FFDF          	movff	3930,indf2	;volatile
  7758                           
  7759                           ; BSR set to: 15
  7760                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7761  001494  EE20 F009          	lfsr	2,9
  7762  001498  5001               	movf	CANreceiveMessage@msg,w,c
  7763  00149A  26D9               	addwf	fsr2l,f,c
  7764  00149C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7765  00149E  22DA               	addwfc	fsr2h,f,c
  7766  0014A0  CF5B FFDF          	movff	3931,indf2	;volatile
  7767                           
  7768                           ; BSR set to: 15
  7769                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7770  0014A4  EE20 F00A          	lfsr	2,10
  7771  0014A8  5001               	movf	CANreceiveMessage@msg,w,c
  7772  0014AA  26D9               	addwf	fsr2l,f,c
  7773  0014AC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7774  0014AE  22DA               	addwfc	fsr2h,f,c
  7775  0014B0  CF5C FFDF          	movff	3932,indf2	;volatile
  7776                           
  7777                           ; BSR set to: 15
  7778                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7779  0014B4  EE20 F00B          	lfsr	2,11
  7780  0014B8  5001               	movf	CANreceiveMessage@msg,w,c
  7781  0014BA  26D9               	addwf	fsr2l,f,c
  7782  0014BC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7783  0014BE  22DA               	addwfc	fsr2h,f,c
  7784  0014C0  CF5D FFDF          	movff	3933,indf2	;volatile
  7785                           
  7786                           ; BSR set to: 15
  7787                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7788  0014C4  EE20 F00E          	lfsr	2,14
  7789  0014C8  5001               	movf	CANreceiveMessage@msg,w,c
  7790  0014CA  26D9               	addwf	fsr2l,f,c
  7791  0014CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7792  0014CE  22DA               	addwfc	fsr2h,f,c
  7793  0014D0  010F               	movlb	15	; () banked
  7794  0014D2  AD55               	btfss	85,6,b	;volatile
  7795  0014D4  D002               	goto	i1u387_20
  7796  0014D6  0E01               	movlw	1
  7797  0014D8  D001               	goto	i1u387_26
  7798  0014DA                     i1u387_20:
  7799  0014DA  0E00               	movlw	0
  7800  0014DC                     i1u387_26:
  7801  0014DC  6EDF               	movwf	indf2,c
  7802                           
  7803                           ; BSR set to: 15
  7804                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7805  0014DE  EE20 F00D          	lfsr	2,13
  7806  0014E2  5001               	movf	CANreceiveMessage@msg,w,c
  7807  0014E4  26D9               	addwf	fsr2l,f,c
  7808  0014E6  5002               	movf	CANreceiveMessage@msg+1,w,c
  7809  0014E8  22DA               	addwfc	fsr2h,f,c
  7810  0014EA  010F               	movlb	15	; () banked
  7811  0014EC  5155               	movf	85,w,b	;volatile
  7812  0014EE  0B0F               	andlw	15
  7813  0014F0  6EDF               	movwf	indf2,c
  7814                           
  7815                           ; BSR set to: 15
  7816                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7817  0014F2  EE20 F00C          	lfsr	2,12
  7818  0014F6  5001               	movf	CANreceiveMessage@msg,w,c
  7819  0014F8  26D9               	addwf	fsr2l,f,c
  7820  0014FA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7821  0014FC  22DA               	addwfc	fsr2h,f,c
  7822  0014FE  010F               	movlb	15	; () banked
  7823  001500  A752               	btfss	82,3,b	;volatile
  7824  001502  D002               	goto	i1u388_20
  7825  001504  0E01               	movlw	1
  7826  001506  D001               	goto	i1u388_26
  7827  001508                     i1u388_20:
  7828  001508  0E00               	movlw	0
  7829  00150A                     i1u388_26:
  7830  00150A  6EDF               	movwf	indf2,c
  7831                           
  7832                           ; BSR set to: 15
  7833                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7834  00150C  010F               	movlb	15	; () banked
  7835  00150E  B752               	btfsc	82,3,b	;volatile
  7836  001510  D044               	goto	i1l3565
  7837                           
  7838                           ; BSR set to: 15
  7839                           ;inc\CANlib.h: 559: {
  7840                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7841  001512  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7842  001516  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7843  001518  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7844  00151A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7845  00151C  0E03               	movlw	3
  7846  00151E                     i1u390_25:
  7847  00151E  90D8               	bcf	status,0,c
  7848  001520  3603               	rlcf	??_CANreceiveMessage,f,c
  7849  001522  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7850  001524  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7851  001526  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7852  001528  2EE8               	decfsz	wreg,f,c
  7853  00152A  D7F9               	goto	i1u390_25
  7854  00152C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7855  001530  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7856  001534  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7857  001538  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7858  00153C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7859  001540  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7860                           
  7861                           ; BSR set to: 15
  7862                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7863  001544  010F               	movlb	15	; () banked
  7864  001546  3952               	swapf	82,w,b	;volatile
  7865  001548  42E8               	rrncf	wreg,f,c
  7866  00154A  0B07               	andlw	7
  7867  00154C  0B07               	andlw	7
  7868  00154E  6E0C               	movwf	CANreceiveMessage@tamp,c
  7869                           
  7870                           ; BSR set to: 15
  7871                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7872  001550  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7873  001554  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7874  001558  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7875  00155C  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7876  001560  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7877  001564  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7878  001568  500C               	movf	CANreceiveMessage@tamp,w,c
  7879  00156A  2403               	addwf	??_CANreceiveMessage,w,c
  7880  00156C  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7881  00156E  0E00               	movlw	0
  7882  001570  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7883  001572  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7884  001574  0E00               	movlw	0
  7885  001576  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7886  001578  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7887  00157A  0E00               	movlw	0
  7888  00157C  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7889  00157E  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7890  001580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7891  001584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7892  001588  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7893  00158C  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7894  001590  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7895  001594  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7896                           
  7897                           ;inc\CANlib.h: 563: }
  7898  001598  D093               	goto	i1l3591
  7899  00159A                     i1l3565:
  7900                           
  7901                           ; BSR set to: 15
  7902                           ;inc\CANlib.h: 564: else
  7903                           ;inc\CANlib.h: 565: {
  7904                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7905  00159A  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7906  00159E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7907  0015A0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7908  0015A2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7909  0015A4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7910  0015A8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7911  0015AC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7912  0015B0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7913  0015B4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7914  0015B8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7915                           
  7916                           ; BSR set to: 15
  7917                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7918  0015BC  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7919  0015C0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7920  0015C2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7921  0015C4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7922  0015C6  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7923  0015CA  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7924  0015CE  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7925  0015D2  6A03               	clrf	??_CANreceiveMessage,c
  7926  0015D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7927  0015D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7928  0015DC  5003               	movf	??_CANreceiveMessage,w,c
  7929  0015DE  26DE               	addwf	postinc2,f,c
  7930  0015E0  5004               	movf	??_CANreceiveMessage+1,w,c
  7931  0015E2  22DE               	addwfc	postinc2,f,c
  7932  0015E4  5005               	movf	??_CANreceiveMessage+2,w,c
  7933  0015E6  22DE               	addwfc	postinc2,f,c
  7934  0015E8  5006               	movf	??_CANreceiveMessage+3,w,c
  7935  0015EA  22DE               	addwfc	postinc2,f,c
  7936                           
  7937                           ; BSR set to: 15
  7938                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7939  0015EC  010F               	movlb	15	; () banked
  7940  0015EE  A152               	btfss	82,0,b	;volatile
  7941  0015F0  D00D               	goto	i1l3573
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7945  0015F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7946  0015F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7947  0015FA  0E00               	movlw	0
  7948  0015FC  12DE               	iorwf	postinc2,f,c
  7949  0015FE  0E00               	movlw	0
  7950  001600  12DE               	iorwf	postinc2,f,c
  7951  001602  0E01               	movlw	1
  7952  001604  12DE               	iorwf	postinc2,f,c
  7953  001606  0E00               	movlw	0
  7954  001608  12DE               	iorwf	postinc2,f,c
  7955  00160A  D000               	goto	i1l3573
  7956  00160C                     i1l3573:
  7957                           
  7958                           ; BSR set to: 15
  7959                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7960  00160C  010F               	movlb	15	; () banked
  7961  00160E  A352               	btfss	82,1,b	;volatile
  7962  001610  D00D               	goto	i1l3577
  7963                           
  7964                           ; BSR set to: 15
  7965                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7966  001612  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7967  001616  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7968  00161A  0E00               	movlw	0
  7969  00161C  12DE               	iorwf	postinc2,f,c
  7970  00161E  0E00               	movlw	0
  7971  001620  12DE               	iorwf	postinc2,f,c
  7972  001622  0E02               	movlw	2
  7973  001624  12DE               	iorwf	postinc2,f,c
  7974  001626  0E00               	movlw	0
  7975  001628  12DE               	iorwf	postinc2,f,c
  7976  00162A  D000               	goto	i1l3577
  7977  00162C                     i1l3577:
  7978                           
  7979                           ; BSR set to: 15
  7980                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7981  00162C  010F               	movlb	15	; () banked
  7982  00162E  AB52               	btfss	82,5,b	;volatile
  7983  001630  D00D               	goto	i1l3581
  7984                           
  7985                           ; BSR set to: 15
  7986                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7987  001632  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7988  001636  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7989  00163A  0E00               	movlw	0
  7990  00163C  12DE               	iorwf	postinc2,f,c
  7991  00163E  0E00               	movlw	0
  7992  001640  12DE               	iorwf	postinc2,f,c
  7993  001642  0E04               	movlw	4
  7994  001644  12DE               	iorwf	postinc2,f,c
  7995  001646  0E00               	movlw	0
  7996  001648  12DE               	iorwf	postinc2,f,c
  7997  00164A  D000               	goto	i1l3581
  7998  00164C                     i1l3581:
  7999                           
  8000                           ; BSR set to: 15
  8001                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8002  00164C  010F               	movlb	15	; () banked
  8003  00164E  AD52               	btfss	82,6,b	;volatile
  8004  001650  D00D               	goto	i1l3585
  8005                           
  8006                           ; BSR set to: 15
  8007                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8008  001652  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8009  001656  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8010  00165A  0E00               	movlw	0
  8011  00165C  12DE               	iorwf	postinc2,f,c
  8012  00165E  0E00               	movlw	0
  8013  001660  12DE               	iorwf	postinc2,f,c
  8014  001662  0E08               	movlw	8
  8015  001664  12DE               	iorwf	postinc2,f,c
  8016  001666  0E00               	movlw	0
  8017  001668  12DE               	iorwf	postinc2,f,c
  8018  00166A  D000               	goto	i1l3585
  8019  00166C                     i1l3585:
  8020                           
  8021                           ; BSR set to: 15
  8022                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8023  00166C  010F               	movlb	15	; () banked
  8024  00166E  AF52               	btfss	82,7,b	;volatile
  8025  001670  D00D               	goto	i1l3589
  8026                           
  8027                           ; BSR set to: 15
  8028                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8029  001672  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8030  001676  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8031  00167A  0E00               	movlw	0
  8032  00167C  12DE               	iorwf	postinc2,f,c
  8033  00167E  0E00               	movlw	0
  8034  001680  12DE               	iorwf	postinc2,f,c
  8035  001682  0E10               	movlw	16
  8036  001684  12DE               	iorwf	postinc2,f,c
  8037  001686  0E00               	movlw	0
  8038  001688  12DE               	iorwf	postinc2,f,c
  8039  00168A  D000               	goto	i1l3589
  8040  00168C                     i1l3589:
  8041                           
  8042                           ; BSR set to: 15
  8043                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8044  00168C  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8045  001690  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8046  001692  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8047  001694  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8048  001696  0E15               	movlw	21
  8049  001698                     i1u396_25:
  8050  001698  90D8               	bcf	status,0,c
  8051  00169A  3603               	rlcf	??_CANreceiveMessage,f,c
  8052  00169C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8053  00169E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8054  0016A0  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8055  0016A2  2EE8               	decfsz	wreg,f,c
  8056  0016A4  D7F9               	goto	i1u396_25
  8057  0016A6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8058  0016AA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8059  0016AE  5003               	movf	??_CANreceiveMessage,w,c
  8060  0016B0  12DE               	iorwf	postinc2,f,c
  8061  0016B2  5004               	movf	??_CANreceiveMessage+1,w,c
  8062  0016B4  12DE               	iorwf	postinc2,f,c
  8063  0016B6  5005               	movf	??_CANreceiveMessage+2,w,c
  8064  0016B8  12DE               	iorwf	postinc2,f,c
  8065  0016BA  5006               	movf	??_CANreceiveMessage+3,w,c
  8066  0016BC  12DE               	iorwf	postinc2,f,c
  8067  0016BE  D000               	goto	i1l3591
  8068  0016C0                     i1l3591:
  8069                           
  8070                           ; BSR set to: 15
  8071                           ;inc\CANlib.h: 581: }
  8072                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8073  0016C0  010F               	movlb	15	; () banked
  8074  0016C2  9F50               	bcf	80,7,b	;volatile
  8075                           
  8076                           ; BSR set to: 15
  8077                           ;inc\CANlib.h: 584: return (error);
  8078                           ;	Return value of _CANreceiveMessage is never used
  8079  0016C4  D140               	goto	i1l436
  8080  0016C6                     i1l428:
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;inc\CANlib.h: 585: }
  8084                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8085  0016C6  AE60               	btfss	3936,7,c	;volatile
  8086  0016C8  D13E               	goto	i1l436
  8087                           
  8088                           ; BSR set to: 15
  8089                           ;inc\CANlib.h: 588: {
  8090                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8091  0016CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8092  0016CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8093  0016D2  6ADE               	clrf	postinc2,c
  8094  0016D4  6ADE               	clrf	postinc2,c
  8095  0016D6  6ADE               	clrf	postinc2,c
  8096  0016D8  6ADD               	clrf	postdec2,c
  8097                           
  8098                           ; BSR set to: 15
  8099                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8100  0016DA  EE20 F004          	lfsr	2,4
  8101  0016DE  5001               	movf	CANreceiveMessage@msg,w,c
  8102  0016E0  26D9               	addwf	fsr2l,f,c
  8103  0016E2  5002               	movf	CANreceiveMessage@msg+1,w,c
  8104  0016E4  22DA               	addwfc	fsr2h,f,c
  8105  0016E6  CF66 FFDF          	movff	3942,indf2	;volatile
  8106                           
  8107                           ; BSR set to: 15
  8108                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8109  0016EA  EE20 F005          	lfsr	2,5
  8110  0016EE  5001               	movf	CANreceiveMessage@msg,w,c
  8111  0016F0  26D9               	addwf	fsr2l,f,c
  8112  0016F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  8113  0016F4  22DA               	addwfc	fsr2h,f,c
  8114  0016F6  CF67 FFDF          	movff	3943,indf2	;volatile
  8115                           
  8116                           ; BSR set to: 15
  8117                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8118  0016FA  EE20 F006          	lfsr	2,6
  8119  0016FE  5001               	movf	CANreceiveMessage@msg,w,c
  8120  001700  26D9               	addwf	fsr2l,f,c
  8121  001702  5002               	movf	CANreceiveMessage@msg+1,w,c
  8122  001704  22DA               	addwfc	fsr2h,f,c
  8123  001706  CF68 FFDF          	movff	3944,indf2	;volatile
  8124                           
  8125                           ; BSR set to: 15
  8126                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8127  00170A  EE20 F007          	lfsr	2,7
  8128  00170E  5001               	movf	CANreceiveMessage@msg,w,c
  8129  001710  26D9               	addwf	fsr2l,f,c
  8130  001712  5002               	movf	CANreceiveMessage@msg+1,w,c
  8131  001714  22DA               	addwfc	fsr2h,f,c
  8132  001716  CF69 FFDF          	movff	3945,indf2	;volatile
  8133                           
  8134                           ; BSR set to: 15
  8135                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8136  00171A  EE20 F008          	lfsr	2,8
  8137  00171E  5001               	movf	CANreceiveMessage@msg,w,c
  8138  001720  26D9               	addwf	fsr2l,f,c
  8139  001722  5002               	movf	CANreceiveMessage@msg+1,w,c
  8140  001724  22DA               	addwfc	fsr2h,f,c
  8141  001726  CF6A FFDF          	movff	3946,indf2	;volatile
  8142                           
  8143                           ; BSR set to: 15
  8144                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8145  00172A  EE20 F009          	lfsr	2,9
  8146  00172E  5001               	movf	CANreceiveMessage@msg,w,c
  8147  001730  26D9               	addwf	fsr2l,f,c
  8148  001732  5002               	movf	CANreceiveMessage@msg+1,w,c
  8149  001734  22DA               	addwfc	fsr2h,f,c
  8150  001736  CF6B FFDF          	movff	3947,indf2	;volatile
  8151                           
  8152                           ; BSR set to: 15
  8153                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8154  00173A  EE20 F00A          	lfsr	2,10
  8155  00173E  5001               	movf	CANreceiveMessage@msg,w,c
  8156  001740  26D9               	addwf	fsr2l,f,c
  8157  001742  5002               	movf	CANreceiveMessage@msg+1,w,c
  8158  001744  22DA               	addwfc	fsr2h,f,c
  8159  001746  CF6C FFDF          	movff	3948,indf2	;volatile
  8160                           
  8161                           ; BSR set to: 15
  8162                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8163  00174A  EE20 F00B          	lfsr	2,11
  8164  00174E  5001               	movf	CANreceiveMessage@msg,w,c
  8165  001750  26D9               	addwf	fsr2l,f,c
  8166  001752  5002               	movf	CANreceiveMessage@msg+1,w,c
  8167  001754  22DA               	addwfc	fsr2h,f,c
  8168  001756  CF6D FFDF          	movff	3949,indf2	;volatile
  8169                           
  8170                           ; BSR set to: 15
  8171                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8172  00175A  EE20 F00E          	lfsr	2,14
  8173  00175E  5001               	movf	CANreceiveMessage@msg,w,c
  8174  001760  26D9               	addwf	fsr2l,f,c
  8175  001762  5002               	movf	CANreceiveMessage@msg+1,w,c
  8176  001764  22DA               	addwfc	fsr2h,f,c
  8177  001766  AC65               	btfss	3941,6,c	;volatile
  8178  001768  D002               	goto	i1u398_20
  8179  00176A  0E01               	movlw	1
  8180  00176C  D001               	goto	i1u398_26
  8181  00176E                     i1u398_20:
  8182  00176E  0E00               	movlw	0
  8183  001770                     i1u398_26:
  8184  001770  6EDF               	movwf	indf2,c
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8188  001772  EE20 F00D          	lfsr	2,13
  8189  001776  5001               	movf	CANreceiveMessage@msg,w,c
  8190  001778  26D9               	addwf	fsr2l,f,c
  8191  00177A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8192  00177C  22DA               	addwfc	fsr2h,f,c
  8193  00177E  5065               	movf	3941,w,c	;volatile
  8194  001780  0B0F               	andlw	15
  8195  001782  6EDF               	movwf	indf2,c
  8196                           
  8197                           ; BSR set to: 15
  8198                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8199  001784  EE20 F00C          	lfsr	2,12
  8200  001788  5001               	movf	CANreceiveMessage@msg,w,c
  8201  00178A  26D9               	addwf	fsr2l,f,c
  8202  00178C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8203  00178E  22DA               	addwfc	fsr2h,f,c
  8204  001790  A662               	btfss	3938,3,c	;volatile
  8205  001792  D002               	goto	i1u399_20
  8206  001794  0E01               	movlw	1
  8207  001796  D001               	goto	i1u399_26
  8208  001798                     i1u399_20:
  8209  001798  0E00               	movlw	0
  8210  00179A                     i1u399_26:
  8211  00179A  6EDF               	movwf	indf2,c
  8212                           
  8213                           ; BSR set to: 15
  8214                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8215  00179C  B662               	btfsc	3938,3,c	;volatile
  8216  00179E  D043               	goto	i1l3627
  8217                           
  8218                           ; BSR set to: 15
  8219                           ;inc\CANlib.h: 606: {
  8220                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8221  0017A0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8222  0017A4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8223  0017A6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8224  0017A8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8225  0017AA  0E03               	movlw	3
  8226  0017AC                     i1u401_25:
  8227  0017AC  90D8               	bcf	status,0,c
  8228  0017AE  3603               	rlcf	??_CANreceiveMessage,f,c
  8229  0017B0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8230  0017B2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8231  0017B4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8232  0017B6  2EE8               	decfsz	wreg,f,c
  8233  0017B8  D7F9               	goto	i1u401_25
  8234  0017BA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8235  0017BE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8236  0017C2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8237  0017C6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8238  0017CA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8239  0017CE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8240                           
  8241                           ; BSR set to: 15
  8242                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8243  0017D2  3862               	swapf	3938,w,c	;volatile
  8244  0017D4  42E8               	rrncf	wreg,f,c
  8245  0017D6  0B07               	andlw	7
  8246  0017D8  0B07               	andlw	7
  8247  0017DA  6E0C               	movwf	CANreceiveMessage@tamp,c
  8248                           
  8249                           ; BSR set to: 15
  8250                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8251  0017DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8252  0017E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8253  0017E4  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8254  0017E8  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8255  0017EC  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8256  0017F0  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8257  0017F4  500C               	movf	CANreceiveMessage@tamp,w,c
  8258  0017F6  2403               	addwf	??_CANreceiveMessage,w,c
  8259  0017F8  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8260  0017FA  0E00               	movlw	0
  8261  0017FC  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8262  0017FE  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8263  001800  0E00               	movlw	0
  8264  001802  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8265  001804  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8266  001806  0E00               	movlw	0
  8267  001808  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8268  00180A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8269  00180C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8270  001810  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8271  001814  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8272  001818  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8273  00181C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8274  001820  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8275                           
  8276                           ;inc\CANlib.h: 610: }
  8277  001824  D08E               	goto	i1l3653
  8278  001826                     i1l3627:
  8279                           
  8280                           ; BSR set to: 15
  8281                           ;inc\CANlib.h: 611: else
  8282                           ;inc\CANlib.h: 612: {
  8283                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8284  001826  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8285  00182A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8286  00182C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8287  00182E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8288  001830  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8289  001834  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8290  001838  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8291  00183C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8292  001840  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8293  001844  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8294                           
  8295                           ; BSR set to: 15
  8296                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8297  001848  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8298  00184C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8299  00184E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8300  001850  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8301  001852  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8302  001856  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8303  00185A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8304  00185E  6A03               	clrf	??_CANreceiveMessage,c
  8305  001860  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8306  001864  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8307  001868  5003               	movf	??_CANreceiveMessage,w,c
  8308  00186A  26DE               	addwf	postinc2,f,c
  8309  00186C  5004               	movf	??_CANreceiveMessage+1,w,c
  8310  00186E  22DE               	addwfc	postinc2,f,c
  8311  001870  5005               	movf	??_CANreceiveMessage+2,w,c
  8312  001872  22DE               	addwfc	postinc2,f,c
  8313  001874  5006               	movf	??_CANreceiveMessage+3,w,c
  8314  001876  22DE               	addwfc	postinc2,f,c
  8315                           
  8316                           ; BSR set to: 15
  8317                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8318  001878  A062               	btfss	3938,0,c	;volatile
  8319  00187A  D00D               	goto	i1l3635
  8320                           
  8321                           ; BSR set to: 15
  8322                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8323  00187C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8324  001880  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8325  001884  0E00               	movlw	0
  8326  001886  12DE               	iorwf	postinc2,f,c
  8327  001888  0E00               	movlw	0
  8328  00188A  12DE               	iorwf	postinc2,f,c
  8329  00188C  0E01               	movlw	1
  8330  00188E  12DE               	iorwf	postinc2,f,c
  8331  001890  0E00               	movlw	0
  8332  001892  12DE               	iorwf	postinc2,f,c
  8333  001894  D000               	goto	i1l3635
  8334  001896                     i1l3635:
  8335                           
  8336                           ; BSR set to: 15
  8337                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8338  001896  A262               	btfss	3938,1,c	;volatile
  8339  001898  D00D               	goto	i1l3639
  8340                           
  8341                           ; BSR set to: 15
  8342                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8343  00189A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8344  00189E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8345  0018A2  0E00               	movlw	0
  8346  0018A4  12DE               	iorwf	postinc2,f,c
  8347  0018A6  0E00               	movlw	0
  8348  0018A8  12DE               	iorwf	postinc2,f,c
  8349  0018AA  0E02               	movlw	2
  8350  0018AC  12DE               	iorwf	postinc2,f,c
  8351  0018AE  0E00               	movlw	0
  8352  0018B0  12DE               	iorwf	postinc2,f,c
  8353  0018B2  D000               	goto	i1l3639
  8354  0018B4                     i1l3639:
  8355                           
  8356                           ; BSR set to: 15
  8357                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8358  0018B4  AA62               	btfss	3938,5,c	;volatile
  8359  0018B6  D00D               	goto	i1l3643
  8360                           
  8361                           ; BSR set to: 15
  8362                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8363  0018B8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8364  0018BC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8365  0018C0  0E00               	movlw	0
  8366  0018C2  12DE               	iorwf	postinc2,f,c
  8367  0018C4  0E00               	movlw	0
  8368  0018C6  12DE               	iorwf	postinc2,f,c
  8369  0018C8  0E04               	movlw	4
  8370  0018CA  12DE               	iorwf	postinc2,f,c
  8371  0018CC  0E00               	movlw	0
  8372  0018CE  12DE               	iorwf	postinc2,f,c
  8373  0018D0  D000               	goto	i1l3643
  8374  0018D2                     i1l3643:
  8375                           
  8376                           ; BSR set to: 15
  8377                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8378  0018D2  AC62               	btfss	3938,6,c	;volatile
  8379  0018D4  D00D               	goto	i1l3647
  8380                           
  8381                           ; BSR set to: 15
  8382                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8383  0018D6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8384  0018DA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8385  0018DE  0E00               	movlw	0
  8386  0018E0  12DE               	iorwf	postinc2,f,c
  8387  0018E2  0E00               	movlw	0
  8388  0018E4  12DE               	iorwf	postinc2,f,c
  8389  0018E6  0E08               	movlw	8
  8390  0018E8  12DE               	iorwf	postinc2,f,c
  8391  0018EA  0E00               	movlw	0
  8392  0018EC  12DE               	iorwf	postinc2,f,c
  8393  0018EE  D000               	goto	i1l3647
  8394  0018F0                     i1l3647:
  8395                           
  8396                           ; BSR set to: 15
  8397                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8398  0018F0  AE62               	btfss	3938,7,c	;volatile
  8399  0018F2  D00D               	goto	i1l3651
  8400                           
  8401                           ; BSR set to: 15
  8402                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8403  0018F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8404  0018F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8405  0018FC  0E00               	movlw	0
  8406  0018FE  12DE               	iorwf	postinc2,f,c
  8407  001900  0E00               	movlw	0
  8408  001902  12DE               	iorwf	postinc2,f,c
  8409  001904  0E10               	movlw	16
  8410  001906  12DE               	iorwf	postinc2,f,c
  8411  001908  0E00               	movlw	0
  8412  00190A  12DE               	iorwf	postinc2,f,c
  8413  00190C  D000               	goto	i1l3651
  8414  00190E                     i1l3651:
  8415                           
  8416                           ; BSR set to: 15
  8417                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8418  00190E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8419  001912  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8420  001914  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8421  001916  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8422  001918  0E15               	movlw	21
  8423  00191A                     i1u407_25:
  8424  00191A  90D8               	bcf	status,0,c
  8425  00191C  3603               	rlcf	??_CANreceiveMessage,f,c
  8426  00191E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8427  001920  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8428  001922  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8429  001924  2EE8               	decfsz	wreg,f,c
  8430  001926  D7F9               	goto	i1u407_25
  8431  001928  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8432  00192C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8433  001930  5003               	movf	??_CANreceiveMessage,w,c
  8434  001932  12DE               	iorwf	postinc2,f,c
  8435  001934  5004               	movf	??_CANreceiveMessage+1,w,c
  8436  001936  12DE               	iorwf	postinc2,f,c
  8437  001938  5005               	movf	??_CANreceiveMessage+2,w,c
  8438  00193A  12DE               	iorwf	postinc2,f,c
  8439  00193C  5006               	movf	??_CANreceiveMessage+3,w,c
  8440  00193E  12DE               	iorwf	postinc2,f,c
  8441  001940  D000               	goto	i1l3653
  8442  001942                     i1l3653:
  8443                           
  8444                           ; BSR set to: 15
  8445                           ;inc\CANlib.h: 629: }
  8446                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8447  001942  9E60               	bcf	3936,7,c	;volatile
  8448                           
  8449                           ; BSR set to: 15
  8450                           ;inc\CANlib.h: 632: return (error);
  8451                           ;	Return value of _CANreceiveMessage is never used
  8452  001944  D000               	goto	i1l436
  8453  001946                     i1l436:
  8454                           
  8455                           ; BSR set to: 15
  8456  001946  0012               	return		;funcret
  8457  001948                     __end_of_CANreceiveMessage:
  8458                           	opt stack 0
  8459                           pclatu	equ	0xFFB
  8460                           pclath	equ	0xFFA
  8461                           tblptru	equ	0xFF8
  8462                           tblptrh	equ	0xFF7
  8463                           tblptrl	equ	0xFF6
  8464                           tablat	equ	0xFF5
  8465                           prodh	equ	0xFF4
  8466                           prodl	equ	0xFF3
  8467                           intcon	equ	0xFF2
  8468                           intcon2	equ	0xFF1
  8469                           intcon3	equ	0xFF0
  8470                           postinc0	equ	0xFEE
  8471                           fsr0h	equ	0xFEA
  8472                           fsr0l	equ	0xFE9
  8473                           wreg	equ	0xFE8
  8474                           postdec1	equ	0xFE5
  8475                           fsr1h	equ	0xFE2
  8476                           fsr1l	equ	0xFE1
  8477                           bsr	equ	0xFE0
  8478                           indf2	equ	0xFDF
  8479                           postinc2	equ	0xFDE
  8480                           postdec2	equ	0xFDD
  8481                           fsr2h	equ	0xFDA
  8482                           fsr2l	equ	0xFD9
  8483                           status	equ	0xFD8
  8484                           
  8485 ;; *************** function _CANisRxReady *****************
  8486 ;; Defined at:
  8487 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;		None
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;		None
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      unsigned char 
  8494 ;; Registers used:
  8495 ;;		wreg, status,2
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8501 ;;      Params:         0       0       0       0
  8502 ;;      Locals:         1       0       0       0
  8503 ;;      Temps:          0       0       0       0
  8504 ;;      Totals:         1       0       0       0
  8505 ;;Total ram usage:        1 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    2
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_ISR_Bassa
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text17
  8516  002AF6                     __ptext17:
  8517                           	opt stack 0
  8518  002AF6                     _CANisRxReady:
  8519                           	opt stack 24
  8520                           
  8521                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8522                           
  8523                           ; BSR set to: 15
  8524                           ;incstack = 0
  8525  002AF6  0E01               	movlw	1
  8526  002AF8  6E01               	movwf	_CANisRxReady$3280,c
  8527  002AFA  BE60               	btfsc	3936,7,c	;volatile
  8528  002AFC  D005               	goto	i1l579
  8529  002AFE  010F               	movlb	15	; () banked
  8530  002B00  BF50               	btfsc	80,7,b	;volatile
  8531  002B02  D002               	goto	i1l579
  8532                           
  8533                           ; BSR set to: 15
  8534  002B04  0E00               	movlw	0
  8535  002B06  6E01               	movwf	_CANisRxReady$3280,c
  8536  002B08                     i1l579:
  8537  002B08  5001               	movf	_CANisRxReady$3280,w,c
  8538  002B0A  D000               	goto	i1l580
  8539  002B0C                     i1l580:
  8540  002B0C  0012               	return		;funcret
  8541  002B0E                     __end_of_CANisRxReady:
  8542                           	opt stack 0
  8543                           pclatu	equ	0xFFB
  8544                           pclath	equ	0xFFA
  8545                           tblptru	equ	0xFF8
  8546                           tblptrh	equ	0xFF7
  8547                           tblptrl	equ	0xFF6
  8548                           tablat	equ	0xFF5
  8549                           prodh	equ	0xFF4
  8550                           prodl	equ	0xFF3
  8551                           intcon	equ	0xFF2
  8552                           intcon2	equ	0xFF1
  8553                           intcon3	equ	0xFF0
  8554                           postinc0	equ	0xFEE
  8555                           fsr0h	equ	0xFEA
  8556                           fsr0l	equ	0xFE9
  8557                           wreg	equ	0xFE8
  8558                           postdec1	equ	0xFE5
  8559                           fsr1h	equ	0xFE2
  8560                           fsr1l	equ	0xFE1
  8561                           bsr	equ	0xFE0
  8562                           indf2	equ	0xFDF
  8563                           postinc2	equ	0xFDE
  8564                           postdec2	equ	0xFDD
  8565                           fsr2h	equ	0xFDA
  8566                           fsr2l	equ	0xFD9
  8567                           status	equ	0xFD8
  8568                           
  8569 ;; *************** function _ISR_Alta *****************
  8570 ;; Defined at:
  8571 ;;		line 148 in file "ABS_Code.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;		None               void
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8585 ;;      Params:         0       0       0       0
  8586 ;;      Locals:         0       0       0       0
  8587 ;;      Temps:          0      22       0       0
  8588 ;;      Totals:         0      22       0       0
  8589 ;;Total ram usage:       22 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    1
  8592 ;; This function calls:
  8593 ;;		_WriteTimer0
  8594 ;;		___lwdiv
  8595 ;;		i2___awdiv
  8596 ;;		i2___wmul
  8597 ;; This function is called by:
  8598 ;;		Interrupt level 2
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	intcode
  8603  000008                     __pintcode:
  8604                           	opt stack 0
  8605  000008                     _ISR_Alta:
  8606                           	opt stack 24
  8607                           
  8608                           ;incstack = 0
  8609  000008  CFFA F0BA          	movff	pclath,??_ISR_Alta+8
  8610  00000C  CFFB F0BB          	movff	pclatu,??_ISR_Alta+9
  8611  000010  CFE9 F0BC          	movff	fsr0l,??_ISR_Alta+10
  8612  000014  EDDF  F00F         	call	int_func,f	;refresh shadow registers
  8613                           pclatu	equ	0xFFB
  8614                           pclath	equ	0xFFA
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           intcon2	equ	0xFF1
  8623                           intcon3	equ	0xFF0
  8624                           postinc0	equ	0xFEE
  8625                           fsr0h	equ	0xFEA
  8626                           fsr0l	equ	0xFE9
  8627                           wreg	equ	0xFE8
  8628                           postdec1	equ	0xFE5
  8629                           fsr1h	equ	0xFE2
  8630                           fsr1l	equ	0xFE1
  8631                           bsr	equ	0xFE0
  8632                           indf2	equ	0xFDF
  8633                           postinc2	equ	0xFDE
  8634                           postdec2	equ	0xFDD
  8635                           fsr2h	equ	0xFDA
  8636                           fsr2l	equ	0xFD9
  8637                           status	equ	0xFD8
  8638                           
  8639                           	psect	intcode_body
  8640  001FBE                     __pintcode_body:
  8641                           	opt stack 24
  8642  001FBE                     int_func:
  8643                           	opt stack 24
  8644  001FBE  0006               	pop		; remove dummy address from shadow register refresh
  8645  001FC0  CFEA F0BD          	movff	fsr0h,??_ISR_Alta+11
  8646  001FC4  CFE1 F0BE          	movff	fsr1l,??_ISR_Alta+12
  8647  001FC8  CFE2 F0BF          	movff	fsr1h,??_ISR_Alta+13
  8648  001FCC  CFD9 F0C0          	movff	fsr2l,??_ISR_Alta+14
  8649  001FD0  CFDA F0C1          	movff	fsr2h,??_ISR_Alta+15
  8650  001FD4  CFF3 F0C2          	movff	prodl,??_ISR_Alta+16
  8651  001FD8  CFF4 F0C3          	movff	prodh,??_ISR_Alta+17
  8652  001FDC  CFF6 F0C4          	movff	tblptrl,??_ISR_Alta+18
  8653  001FE0  CFF7 F0C5          	movff	tblptrh,??_ISR_Alta+19
  8654  001FE4  CFF8 F0C6          	movff	tblptru,??_ISR_Alta+20
  8655  001FE8  CFF5 F0C7          	movff	tablat,??_ISR_Alta+21
  8656                           
  8657                           ;ABS_Code.c: 150: if (INTCONbits.TMR0IF == 1) {
  8658  001FEC  A4F2               	btfss	intcon,2,c	;volatile
  8659  001FEE  D0A7               	goto	i2l4493
  8660                           
  8661                           ;ABS_Code.c: 151: PORTCbits.RC0 = ~PORTCbits.RC0;
  8662  001FF0  7082               	btg	3970,0,c	;volatile
  8663                           
  8664                           ;ABS_Code.c: 152: if (PORTCbits.RC0 == 1) {
  8665  001FF2  A082               	btfss	3970,0,c	;volatile
  8666  001FF4  D09B               	goto	i2l4489
  8667                           
  8668                           ;ABS_Code.c: 153: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8669  001FF6  0E40               	movlw	64
  8670  001FF8  0100               	movlb	0	; () banked
  8671  001FFA  6FB2               	movwf	??_ISR_Alta& (0+255),b
  8672  001FFC  0E06               	movlw	6
  8673  001FFE  0100               	movlb	0	; () banked
  8674  002000  6FB3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8675  002002  C040  F01E         	movff	_brake_value_degree,i2___wmul@multiplier	;volatile
  8676  002006  6A1F               	clrf	i2___wmul@multiplier+1,c
  8677  002008  0E05               	movlw	5
  8678  00200A  6E21               	movwf	i2___wmul@multiplicand+1,c
  8679  00200C  0E78               	movlw	120
  8680  00200E  6E20               	movwf	i2___wmul@multiplicand,c
  8681  002010  EC48  F015         	call	i2___wmul	;wreg free
  8682  002014  C01E  F0AA         	movff	?i2___wmul,i2___awdiv@dividend
  8683  002018  C01F  F0AB         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8684  00201C  0E00               	movlw	0
  8685  00201E  0100               	movlb	0	; () banked
  8686  002020  6FAD               	movwf	(i2___awdiv@divisor+1)& (0+255),b
  8687  002022  0EB4               	movlw	180
  8688  002024  6FAC               	movwf	i2___awdiv@divisor& (0+255),b
  8689  002026  ECDA  F013         	call	i2___awdiv	;wreg free
  8690  00202A  90D8               	bcf	status,0,c
  8691  00202C  0100               	movlb	0	; () banked
  8692  00202E  37AA               	rlcf	?i2___awdiv& (0+255),f,b
  8693  002030  0100               	movlb	0	; () banked
  8694  002032  37AB               	rlcf	(?i2___awdiv+1)& (0+255),f,b
  8695  002034  0100               	movlb	0	; () banked
  8696  002036  51B2               	movf	??_ISR_Alta& (0+255),w,b
  8697  002038  0100               	movlb	0	; () banked
  8698  00203A  27AA               	addwf	?i2___awdiv& (0+255),f,b
  8699  00203C  0100               	movlb	0	; () banked
  8700  00203E  51B3               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8701  002040  0100               	movlb	0	; () banked
  8702  002042  23AB               	addwfc	(?i2___awdiv+1)& (0+255),f,b
  8703  002044  0100               	movlb	0	; () banked
  8704  002046  C0AA  F029         	movff	?i2___awdiv,_timer_on	;volatile
  8705  00204A  0100               	movlb	0	; () banked
  8706  00204C  C0AB  F02A         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8707  002050  0E00               	movlw	0
  8708  002052  BE2A               	btfsc	_timer_on+1,7,c	;volatile
  8709  002054  0EFF               	movlw	-1
  8710  002056  6E2B               	movwf	_timer_on+2,c	;volatile
  8711  002058  6E2C               	movwf	_timer_on+3,c	;volatile
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;ABS_Code.c: 154: timer_off = 65536 - (40000 - timer_on);
  8715  00205A  C029  F0B2         	movff	_timer_on,??_ISR_Alta	;volatile
  8716  00205E  C02A  F0B3         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8717  002062  C02B  F0B4         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8718  002066  C02C  F0B5         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8719  00206A  0100               	movlb	0	; () banked
  8720  00206C  1FB2               	comf	??_ISR_Alta& (0+255),f,b
  8721  00206E  1FB3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8722  002070  1FB4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8723  002072  1FB5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8724  002074  2BB2               	incf	??_ISR_Alta& (0+255),f,b
  8725  002076  0E00               	movlw	0
  8726  002078  23B3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8727  00207A  23B4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8728  00207C  23B5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8729  00207E  0E40               	movlw	64
  8730  002080  0100               	movlb	0	; () banked
  8731  002082  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8732  002084  0100               	movlb	0	; () banked
  8733  002086  6FB6               	movwf	(??_ISR_Alta+4)& (0+255),b
  8734  002088  0E9C               	movlw	156
  8735  00208A  0100               	movlb	0	; () banked
  8736  00208C  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8737  00208E  0100               	movlb	0	; () banked
  8738  002090  6FB7               	movwf	(??_ISR_Alta+5)& (0+255),b
  8739  002092  0E00               	movlw	0
  8740  002094  0100               	movlb	0	; () banked
  8741  002096  21B4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8742  002098  0100               	movlb	0	; () banked
  8743  00209A  6FB8               	movwf	(??_ISR_Alta+6)& (0+255),b
  8744  00209C  0E00               	movlw	0
  8745  00209E  0100               	movlb	0	; () banked
  8746  0020A0  21B5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8747  0020A2  0100               	movlb	0	; () banked
  8748  0020A4  6FB9               	movwf	(??_ISR_Alta+7)& (0+255),b
  8749  0020A6  0100               	movlb	0	; () banked
  8750  0020A8  1FB6               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8751  0020AA  1FB7               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8752  0020AC  1FB8               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8753  0020AE  1FB9               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8754  0020B0  2BB6               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8755  0020B2  0E00               	movlw	0
  8756  0020B4  23B7               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8757  0020B6  23B8               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8758  0020B8  23B9               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8759  0020BA  0E00               	movlw	0
  8760  0020BC  0100               	movlb	0	; () banked
  8761  0020BE  25B6               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8762  0020C0  6E25               	movwf	_timer_off,c	;volatile
  8763  0020C2  0E00               	movlw	0
  8764  0020C4  0100               	movlb	0	; () banked
  8765  0020C6  21B7               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8766  0020C8  6E26               	movwf	_timer_off+1,c	;volatile
  8767  0020CA  0E01               	movlw	1
  8768  0020CC  0100               	movlb	0	; () banked
  8769  0020CE  21B8               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8770  0020D0  6E27               	movwf	_timer_off+2,c	;volatile
  8771  0020D2  0E00               	movlw	0
  8772  0020D4  0100               	movlb	0	; () banked
  8773  0020D6  21B9               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8774  0020D8  6E28               	movwf	_timer_off+3,c	;volatile
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;ABS_Code.c: 155: timer_on = 65536 - timer_on;
  8778  0020DA  C029  F0B2         	movff	_timer_on,??_ISR_Alta	;volatile
  8779  0020DE  C02A  F0B3         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8780  0020E2  C02B  F0B4         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8781  0020E6  C02C  F0B5         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8782  0020EA  0100               	movlb	0	; () banked
  8783  0020EC  1FB2               	comf	??_ISR_Alta& (0+255),f,b
  8784  0020EE  1FB3               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8785  0020F0  1FB4               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8786  0020F2  1FB5               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8787  0020F4  2BB2               	incf	??_ISR_Alta& (0+255),f,b
  8788  0020F6  0E00               	movlw	0
  8789  0020F8  23B3               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8790  0020FA  23B4               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8791  0020FC  23B5               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8792  0020FE  0E00               	movlw	0
  8793  002100  0100               	movlb	0	; () banked
  8794  002102  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8795  002104  6E29               	movwf	_timer_on,c	;volatile
  8796  002106  0E00               	movlw	0
  8797  002108  0100               	movlb	0	; () banked
  8798  00210A  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8799  00210C  6E2A               	movwf	_timer_on+1,c	;volatile
  8800  00210E  0E01               	movlw	1
  8801  002110  0100               	movlb	0	; () banked
  8802  002112  21B4               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8803  002114  6E2B               	movwf	_timer_on+2,c	;volatile
  8804  002116  0E00               	movlw	0
  8805  002118  0100               	movlb	0	; () banked
  8806  00211A  21B5               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8807  00211C  6E2C               	movwf	_timer_on+3,c	;volatile
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;ABS_Code.c: 156: WriteTimer0(timer_on);
  8811  00211E  C029  F01E         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8812  002122  C02A  F01F         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8813  002126  EC87  F015         	call	_WriteTimer0	;wreg free
  8814                           
  8815                           ;ABS_Code.c: 157: } else {
  8816  00212A  D007               	goto	i2l4491
  8817  00212C                     i2l4489:
  8818                           
  8819                           ;ABS_Code.c: 158: WriteTimer0(timer_off);
  8820  00212C  C025  F01E         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8821  002130  C026  F01F         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8822  002134  EC87  F015         	call	_WriteTimer0	;wreg free
  8823  002138  D000               	goto	i2l4491
  8824  00213A                     i2l4491:
  8825                           
  8826                           ;ABS_Code.c: 159: }
  8827                           ;ABS_Code.c: 160: INTCONbits.TMR0IF = 0;
  8828  00213A  94F2               	bcf	intcon,2,c	;volatile
  8829  00213C  D000               	goto	i2l4493
  8830  00213E                     i2l4493:
  8831                           
  8832                           ;ABS_Code.c: 161: }
  8833                           ;ABS_Code.c: 164: if (INTCONbits.INT0IF == 1) {
  8834  00213E  A2F2               	btfss	intcon,1,c	;volatile
  8835  002140  D039               	goto	i2l4521
  8836                           
  8837                           ;ABS_Code.c: 165: if (x == 0) {
  8838  002142  B242               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8839  002144  D006               	goto	i2l4501
  8840                           
  8841                           ;ABS_Code.c: 166: TMR1H = 0x00;
  8842  002146  0E00               	movlw	0
  8843  002148  6ECF               	movwf	4047,c	;volatile
  8844                           
  8845                           ;ABS_Code.c: 167: TMR1L = 0x00;
  8846  00214A  0E00               	movlw	0
  8847  00214C  6ECE               	movwf	4046,c	;volatile
  8848                           
  8849                           ;ABS_Code.c: 168: x = 1;
  8850  00214E  8242               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8851                           
  8852                           ;ABS_Code.c: 169: } else {
  8853  002150  D02F               	goto	i2l4519
  8854  002152                     i2l4501:
  8855                           
  8856                           ;ABS_Code.c: 170: gap_time_1 = (TMR1H << 8) + TMR1L;
  8857  002152  50CF               	movf	4047,w,c	;volatile
  8858  002154  0100               	movlb	0	; () banked
  8859  002156  6FB3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8860  002158  6BB2               	clrf	??_ISR_Alta& (0+255),b
  8861  00215A  50CE               	movf	4046,w,c	;volatile
  8862  00215C  0100               	movlb	0	; () banked
  8863  00215E  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8864  002160  6E2D               	movwf	_gap_time_1,c	;volatile
  8865  002162  0E00               	movlw	0
  8866  002164  0100               	movlb	0	; () banked
  8867  002166  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8868  002168  6E2E               	movwf	_gap_time_1+1,c	;volatile
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;ABS_Code.c: 171: gap_time_1 = gap_time_1 / 500;
  8872  00216A  C02D  F01E         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8873  00216E  C02E  F01F         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8874  002172  0E01               	movlw	1
  8875  002174  6E21               	movwf	___lwdiv@divisor+1,c
  8876  002176  0EF4               	movlw	244
  8877  002178  6E20               	movwf	___lwdiv@divisor,c
  8878  00217A  ECDB  F014         	call	___lwdiv	;wreg free
  8879  00217E  C01E  F02D         	movff	?___lwdiv,_gap_time_1	;volatile
  8880  002182  C01F  F02E         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8881                           
  8882                           ;ABS_Code.c: 172: ENC1_measure = 1;
  8883  002186  8041               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8884                           
  8885                           ;ABS_Code.c: 173: TMR1H = 0x00;
  8886  002188  0E00               	movlw	0
  8887  00218A  6ECF               	movwf	4047,c	;volatile
  8888                           
  8889                           ;ABS_Code.c: 174: TMR1H = 0x00;
  8890  00218C  0E00               	movlw	0
  8891  00218E  6ECF               	movwf	4047,c	;volatile
  8892                           
  8893                           ;ABS_Code.c: 175: if (count_flag == 1) {
  8894  002190  AA41               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8895  002192  D008               	goto	i2l4515
  8896                           
  8897                           ;ABS_Code.c: 176: int_counter_1++;
  8898  002194  0E01               	movlw	1
  8899  002196  0100               	movlb	0	; () banked
  8900  002198  276C               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8901  00219A  0E00               	movlw	0
  8902  00219C  236D               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8903  00219E  236E               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8904  0021A0  236F               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8905  0021A2  D000               	goto	i2l4515
  8906  0021A4                     i2l4515:
  8907                           
  8908                           ;ABS_Code.c: 177: }
  8909                           ;ABS_Code.c: 178: if (distance_set_flag == 1) {
  8910  0021A4  AE41               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  8911  0021A6  D004               	goto	i2l4519
  8912                           
  8913                           ;ABS_Code.c: 179: distance_set_counter_1++;
  8914  0021A8  0100               	movlb	0	; () banked
  8915  0021AA  4B86               	infsnz	_distance_set_counter_1& (0+255),f,b	;volatile
  8916  0021AC  2B87               	incf	(_distance_set_counter_1+1)& (0+255),f,b	;volatile
  8917                           
  8918                           ; BSR set to: 0
  8919  0021AE  D000               	goto	i2l4519
  8920  0021B0                     i2l4519:
  8921                           
  8922                           ;ABS_Code.c: 180: }
  8923                           ;ABS_Code.c: 181: }
  8924                           ;ABS_Code.c: 182: INTCONbits.INT0IF = 0;
  8925  0021B0  92F2               	bcf	intcon,1,c	;volatile
  8926  0021B2  D000               	goto	i2l4521
  8927  0021B4                     i2l4521:
  8928                           
  8929                           ;ABS_Code.c: 183: }
  8930                           ;ABS_Code.c: 186: if (INTCON3bits.INT1IF == 1) {
  8931  0021B4  A0F0               	btfss	intcon3,0,c	;volatile
  8932  0021B6  D039               	goto	i2l693
  8933                           
  8934                           ;ABS_Code.c: 187: if (y == 0) {
  8935  0021B8  B442               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  8936  0021BA  D006               	goto	i2l4529
  8937                           
  8938                           ;ABS_Code.c: 188: TMR3H = 0x00;
  8939  0021BC  0E00               	movlw	0
  8940  0021BE  6EB3               	movwf	4019,c	;volatile
  8941                           
  8942                           ;ABS_Code.c: 189: TMR3L = 0x00;
  8943  0021C0  0E00               	movlw	0
  8944  0021C2  6EB2               	movwf	4018,c	;volatile
  8945                           
  8946                           ;ABS_Code.c: 190: y = 1;
  8947  0021C4  8442               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  8948                           
  8949                           ;ABS_Code.c: 191: } else {
  8950  0021C6  D02F               	goto	i2l4547
  8951  0021C8                     i2l4529:
  8952                           
  8953                           ;ABS_Code.c: 192: gap_time_2 = (TMR3H << 8) + TMR3L;
  8954  0021C8  50B3               	movf	4019,w,c	;volatile
  8955  0021CA  0100               	movlb	0	; () banked
  8956  0021CC  6FB3               	movwf	(??_ISR_Alta+1)& (0+255),b
  8957  0021CE  6BB2               	clrf	??_ISR_Alta& (0+255),b
  8958  0021D0  50B2               	movf	4018,w,c	;volatile
  8959  0021D2  0100               	movlb	0	; () banked
  8960  0021D4  25B2               	addwf	??_ISR_Alta& (0+255),w,b
  8961  0021D6  6E2F               	movwf	_gap_time_2,c	;volatile
  8962  0021D8  0E00               	movlw	0
  8963  0021DA  0100               	movlb	0	; () banked
  8964  0021DC  21B3               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8965  0021DE  6E30               	movwf	_gap_time_2+1,c	;volatile
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;ABS_Code.c: 193: gap_time_2 = gap_time_2 / 500;
  8969  0021E0  C02F  F01E         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  8970  0021E4  C030  F01F         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  8971  0021E8  0E01               	movlw	1
  8972  0021EA  6E21               	movwf	___lwdiv@divisor+1,c
  8973  0021EC  0EF4               	movlw	244
  8974  0021EE  6E20               	movwf	___lwdiv@divisor,c
  8975  0021F0  ECDB  F014         	call	___lwdiv	;wreg free
  8976  0021F4  C01E  F02F         	movff	?___lwdiv,_gap_time_2	;volatile
  8977  0021F8  C01F  F030         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  8978                           
  8979                           ;ABS_Code.c: 194: ENC2_measure = 1;
  8980  0021FC  8241               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  8981                           
  8982                           ;ABS_Code.c: 195: TMR3H = 0x00;
  8983  0021FE  0E00               	movlw	0
  8984  002200  6EB3               	movwf	4019,c	;volatile
  8985                           
  8986                           ;ABS_Code.c: 196: TMR3H = 0x00;
  8987  002202  0E00               	movlw	0
  8988  002204  6EB3               	movwf	4019,c	;volatile
  8989                           
  8990                           ;ABS_Code.c: 197: if (count_flag == 1) {
  8991  002206  AA41               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8992  002208  D008               	goto	i2l4543
  8993                           
  8994                           ;ABS_Code.c: 198: int_counter_2++;
  8995  00220A  0E01               	movlw	1
  8996  00220C  0100               	movlb	0	; () banked
  8997  00220E  2770               	addwf	_int_counter_2& (0+255),f,b	;volatile
  8998  002210  0E00               	movlw	0
  8999  002212  2371               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  9000  002214  2372               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  9001  002216  2373               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9002  002218  D000               	goto	i2l4543
  9003  00221A                     i2l4543:
  9004                           
  9005                           ;ABS_Code.c: 199: }
  9006                           ;ABS_Code.c: 200: if (distance_set_flag == 1) {
  9007  00221A  AE41               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  9008  00221C  D004               	goto	i2l4547
  9009                           
  9010                           ;ABS_Code.c: 201: distance_set_counter_2++;
  9011  00221E  0100               	movlb	0	; () banked
  9012  002220  4B88               	infsnz	_distance_set_counter_2& (0+255),f,b	;volatile
  9013  002222  2B89               	incf	(_distance_set_counter_2+1)& (0+255),f,b	;volatile
  9014                           
  9015                           ; BSR set to: 0
  9016  002224  D000               	goto	i2l4547
  9017  002226                     i2l4547:
  9018                           
  9019                           ;ABS_Code.c: 202: }
  9020                           ;ABS_Code.c: 203: }
  9021                           ;ABS_Code.c: 204: INTCON3bits.INT1IF = 0;
  9022  002226  90F0               	bcf	intcon3,0,c	;volatile
  9023  002228  D000               	goto	i2l693
  9024  00222A                     i2l693:
  9025  00222A  C0C7  FFF5         	movff	??_ISR_Alta+21,tablat
  9026  00222E  C0C6  FFF8         	movff	??_ISR_Alta+20,tblptru
  9027  002232  C0C5  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9028  002236  C0C4  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9029  00223A  C0C3  FFF4         	movff	??_ISR_Alta+17,prodh
  9030  00223E  C0C2  FFF3         	movff	??_ISR_Alta+16,prodl
  9031  002242  C0C1  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9032  002246  C0C0  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9033  00224A  C0BF  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9034  00224E  C0BE  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9035  002252  C0BD  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9036  002256  C0BC  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9037  00225A  C0BB  FFFB         	movff	??_ISR_Alta+9,pclatu
  9038  00225E  C0BA  FFFA         	movff	??_ISR_Alta+8,pclath
  9039  002262  0011               	retfie		f
  9040  002264                     __end_of_ISR_Alta:
  9041                           	opt stack 0
  9042                           pclatu	equ	0xFFB
  9043                           pclath	equ	0xFFA
  9044                           tblptru	equ	0xFF8
  9045                           tblptrh	equ	0xFF7
  9046                           tblptrl	equ	0xFF6
  9047                           tablat	equ	0xFF5
  9048                           prodh	equ	0xFF4
  9049                           prodl	equ	0xFF3
  9050                           intcon	equ	0xFF2
  9051                           intcon2	equ	0xFF1
  9052                           intcon3	equ	0xFF0
  9053                           postinc0	equ	0xFEE
  9054                           fsr0h	equ	0xFEA
  9055                           fsr0l	equ	0xFE9
  9056                           wreg	equ	0xFE8
  9057                           postdec1	equ	0xFE5
  9058                           fsr1h	equ	0xFE2
  9059                           fsr1l	equ	0xFE1
  9060                           bsr	equ	0xFE0
  9061                           indf2	equ	0xFDF
  9062                           postinc2	equ	0xFDE
  9063                           postdec2	equ	0xFDD
  9064                           fsr2h	equ	0xFDA
  9065                           fsr2l	equ	0xFD9
  9066                           status	equ	0xFD8
  9067                           
  9068 ;; *************** function i2___wmul *****************
  9069 ;; Defined at:
  9070 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  multiplier      2   29[COMRAM] unsigned int 
  9073 ;;  multiplicand    2   31[COMRAM] unsigned int 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  __wmul          2   33[COMRAM] unsigned int 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  2   29[COMRAM] unsigned int 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0, prodl, prodh
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9085 ;;      Params:         4       0       0       0
  9086 ;;      Locals:         2       0       0       0
  9087 ;;      Temps:          0       0       0       0
  9088 ;;      Totals:         6       0       0       0
  9089 ;;Total ram usage:        6 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; This function calls:
  9092 ;;		Nothing
  9093 ;; This function is called by:
  9094 ;;		_ISR_Alta
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text19
  9099  002A90                     __ptext19:
  9100                           	opt stack 0
  9101  002A90                     i2___wmul:
  9102                           	opt stack 24
  9103                           
  9104                           ;incstack = 0
  9105  002A90  501E               	movf	i2___wmul@multiplier,w,c
  9106  002A92  0220               	mulwf	i2___wmul@multiplicand,c
  9107  002A94  CFF3 F022          	movff	prodl,i2___wmul@product
  9108  002A98  CFF4 F023          	movff	prodh,i2___wmul@product+1
  9109  002A9C  501E               	movf	i2___wmul@multiplier,w,c
  9110  002A9E  0221               	mulwf	i2___wmul@multiplicand+1,c
  9111  002AA0  50F3               	movf	prodl,w,c
  9112  002AA2  2623               	addwf	i2___wmul@product+1,f,c
  9113  002AA4  501F               	movf	i2___wmul@multiplier+1,w,c
  9114  002AA6  0220               	mulwf	i2___wmul@multiplicand,c
  9115  002AA8  50F3               	movf	prodl,w,c
  9116  002AAA  2623               	addwf	i2___wmul@product+1,f,c
  9117  002AAC  C022  F01E         	movff	i2___wmul@product,?i2___wmul
  9118  002AB0  C023  F01F         	movff	i2___wmul@product+1,?i2___wmul+1
  9119  002AB4  D000               	goto	i2l770
  9120  002AB6                     i2l770:
  9121  002AB6  0012               	return		;funcret
  9122  002AB8                     __end_ofi2___wmul:
  9123                           	opt stack 0
  9124                           pclatu	equ	0xFFB
  9125                           pclath	equ	0xFFA
  9126                           tblptru	equ	0xFF8
  9127                           tblptrh	equ	0xFF7
  9128                           tblptrl	equ	0xFF6
  9129                           tablat	equ	0xFF5
  9130                           prodh	equ	0xFF4
  9131                           prodl	equ	0xFF3
  9132                           intcon	equ	0xFF2
  9133                           intcon2	equ	0xFF1
  9134                           intcon3	equ	0xFF0
  9135                           postinc0	equ	0xFEE
  9136                           fsr0h	equ	0xFEA
  9137                           fsr0l	equ	0xFE9
  9138                           wreg	equ	0xFE8
  9139                           postdec1	equ	0xFE5
  9140                           fsr1h	equ	0xFE2
  9141                           fsr1l	equ	0xFE1
  9142                           bsr	equ	0xFE0
  9143                           indf2	equ	0xFDF
  9144                           postinc2	equ	0xFDE
  9145                           postdec2	equ	0xFDD
  9146                           fsr2h	equ	0xFDA
  9147                           fsr2l	equ	0xFD9
  9148                           status	equ	0xFD8
  9149                           
  9150 ;; *************** function i2___awdiv *****************
  9151 ;; Defined at:
  9152 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;  dividend        2    0[BANK0 ] int 
  9155 ;;  divisor         2    2[BANK0 ] int 
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;  __awdiv         2    6[BANK0 ] int 
  9158 ;;  __awdiv         1    5[BANK0 ] unsigned char 
  9159 ;;  __awdiv         1    4[BANK0 ] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2    0[BANK0 ] int 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9169 ;;      Params:         0       4       0       0
  9170 ;;      Locals:         0       4       0       0
  9171 ;;      Temps:          0       0       0       0
  9172 ;;      Totals:         0       8       0       0
  9173 ;;Total ram usage:        8 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; This function calls:
  9176 ;;		Nothing
  9177 ;; This function is called by:
  9178 ;;		_ISR_Alta
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text20
  9183  0027B4                     __ptext20:
  9184                           	opt stack 0
  9185  0027B4                     i2___awdiv:
  9186                           	opt stack 24
  9187                           
  9188                           ;incstack = 0
  9189  0027B4  0E00               	movlw	0
  9190  0027B6  0100               	movlb	0	; () banked
  9191  0027B8  6FAF               	movwf	i2___awdiv@sign& (0+255),b
  9192                           
  9193                           ; BSR set to: 0
  9194  0027BA  0100               	movlb	0	; () banked
  9195  0027BC  AFAD               	btfss	(i2___awdiv@divisor+1)& (0+255),7,b
  9196  0027BE  D009               	goto	i2l4441
  9197                           
  9198                           ; BSR set to: 0
  9199  0027C0  0100               	movlb	0	; () banked
  9200  0027C2  6DAC               	negf	i2___awdiv@divisor& (0+255),b
  9201  0027C4  1FAD               	comf	(i2___awdiv@divisor+1)& (0+255),f,b
  9202  0027C6  B0D8               	btfsc	status,0,c
  9203  0027C8  2BAD               	incf	(i2___awdiv@divisor+1)& (0+255),f,b
  9204                           
  9205                           ; BSR set to: 0
  9206  0027CA  0E01               	movlw	1
  9207  0027CC  0100               	movlb	0	; () banked
  9208  0027CE  6FAF               	movwf	i2___awdiv@sign& (0+255),b
  9209  0027D0  D000               	goto	i2l4441
  9210  0027D2                     i2l4441:
  9211                           
  9212                           ; BSR set to: 0
  9213  0027D2  0100               	movlb	0	; () banked
  9214  0027D4  AFAB               	btfss	(i2___awdiv@dividend+1)& (0+255),7,b
  9215  0027D6  D009               	goto	i2l4447
  9216                           
  9217                           ; BSR set to: 0
  9218  0027D8  0100               	movlb	0	; () banked
  9219  0027DA  6DAA               	negf	i2___awdiv@dividend& (0+255),b
  9220  0027DC  1FAB               	comf	(i2___awdiv@dividend+1)& (0+255),f,b
  9221  0027DE  B0D8               	btfsc	status,0,c
  9222  0027E0  2BAB               	incf	(i2___awdiv@dividend+1)& (0+255),f,b
  9223                           
  9224                           ; BSR set to: 0
  9225  0027E2  0E01               	movlw	1
  9226  0027E4  0100               	movlb	0	; () banked
  9227  0027E6  1BAF               	xorwf	i2___awdiv@sign& (0+255),f,b
  9228  0027E8  D000               	goto	i2l4447
  9229  0027EA                     i2l4447:
  9230                           
  9231                           ; BSR set to: 0
  9232  0027EA  0E00               	movlw	0
  9233  0027EC  0100               	movlb	0	; () banked
  9234  0027EE  6FB1               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9235  0027F0  0E00               	movlw	0
  9236  0027F2  6FB0               	movwf	i2___awdiv@quotient& (0+255),b
  9237                           
  9238                           ; BSR set to: 0
  9239  0027F4  0100               	movlb	0	; () banked
  9240  0027F6  51AC               	movf	i2___awdiv@divisor& (0+255),w,b
  9241  0027F8  0100               	movlb	0	; () banked
  9242  0027FA  11AD               	iorwf	(i2___awdiv@divisor+1)& (0+255),w,b
  9243  0027FC  B4D8               	btfsc	status,2,c
  9244  0027FE  D031               	goto	i2l4469
  9245                           
  9246                           ; BSR set to: 0
  9247  002800  0E01               	movlw	1
  9248  002802  0100               	movlb	0	; () banked
  9249  002804  6FAE               	movwf	i2___awdiv@counter& (0+255),b
  9250  002806  D007               	goto	i2l4455
  9251  002808                     i2l4453:
  9252                           
  9253                           ; BSR set to: 0
  9254  002808  0100               	movlb	0	; () banked
  9255  00280A  90D8               	bcf	status,0,c
  9256  00280C  37AC               	rlcf	i2___awdiv@divisor& (0+255),f,b
  9257  00280E  37AD               	rlcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9258  002810  0100               	movlb	0	; () banked
  9259  002812  2BAE               	incf	i2___awdiv@counter& (0+255),f,b
  9260  002814  D000               	goto	i2l4455
  9261  002816                     i2l4455:
  9262                           
  9263                           ; BSR set to: 0
  9264  002816  0100               	movlb	0	; () banked
  9265  002818  BFAD               	btfsc	(i2___awdiv@divisor+1)& (0+255),7,b
  9266  00281A  D002               	goto	i2l4457
  9267  00281C  D7F5               	goto	i2l4453
  9268                           
  9269                           ; BSR set to: 0
  9270  00281E  D000               	goto	i2l4457
  9271  002820                     i2l4457:
  9272                           
  9273                           ; BSR set to: 0
  9274  002820  0100               	movlb	0	; () banked
  9275  002822  90D8               	bcf	status,0,c
  9276  002824  37B0               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9277  002826  37B1               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9278                           
  9279                           ; BSR set to: 0
  9280  002828  0100               	movlb	0	; () banked
  9281  00282A  51AC               	movf	i2___awdiv@divisor& (0+255),w,b
  9282  00282C  0100               	movlb	0	; () banked
  9283  00282E  5DAA               	subwf	i2___awdiv@dividend& (0+255),w,b
  9284  002830  0100               	movlb	0	; () banked
  9285  002832  51AD               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9286  002834  0100               	movlb	0	; () banked
  9287  002836  59AB               	subwfb	(i2___awdiv@dividend+1)& (0+255),w,b
  9288  002838  A0D8               	btfss	status,0,c
  9289  00283A  D00B               	goto	i2l4465
  9290                           
  9291                           ; BSR set to: 0
  9292  00283C  0100               	movlb	0	; () banked
  9293  00283E  51AC               	movf	i2___awdiv@divisor& (0+255),w,b
  9294  002840  0100               	movlb	0	; () banked
  9295  002842  5FAA               	subwf	i2___awdiv@dividend& (0+255),f,b
  9296  002844  0100               	movlb	0	; () banked
  9297  002846  51AD               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9298  002848  0100               	movlb	0	; () banked
  9299  00284A  5BAB               	subwfb	(i2___awdiv@dividend+1)& (0+255),f,b
  9300                           
  9301                           ; BSR set to: 0
  9302  00284C  0100               	movlb	0	; () banked
  9303  00284E  81B0               	bsf	i2___awdiv@quotient& (0+255),0,b
  9304  002850  D000               	goto	i2l4465
  9305  002852                     i2l4465:
  9306                           
  9307                           ; BSR set to: 0
  9308  002852  0100               	movlb	0	; () banked
  9309  002854  90D8               	bcf	status,0,c
  9310  002856  33AD               	rrcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9311  002858  33AC               	rrcf	i2___awdiv@divisor& (0+255),f,b
  9312                           
  9313                           ; BSR set to: 0
  9314  00285A  0100               	movlb	0	; () banked
  9315  00285C  2FAE               	decfsz	i2___awdiv@counter& (0+255),f,b
  9316  00285E  D7E0               	goto	i2l4457
  9317                           
  9318                           ; BSR set to: 0
  9319  002860  D000               	goto	i2l4469
  9320  002862                     i2l4469:
  9321                           
  9322                           ; BSR set to: 0
  9323  002862  0100               	movlb	0	; () banked
  9324  002864  51AF               	movf	i2___awdiv@sign& (0+255),w,b
  9325  002866  0100               	movlb	0	; () banked
  9326  002868  B4D8               	btfsc	status,2,c
  9327  00286A  D006               	goto	i2l4473
  9328                           
  9329                           ; BSR set to: 0
  9330  00286C  0100               	movlb	0	; () banked
  9331  00286E  6DB0               	negf	i2___awdiv@quotient& (0+255),b
  9332  002870  1FB1               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9333  002872  B0D8               	btfsc	status,0,c
  9334  002874  2BB1               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9335  002876  D000               	goto	i2l4473
  9336  002878                     i2l4473:
  9337                           
  9338                           ; BSR set to: 0
  9339  002878  C0B0  F0AA         	movff	i2___awdiv@quotient,?i2___awdiv
  9340  00287C  C0B1  F0AB         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9341  002880  D000               	goto	i2l963
  9342  002882                     i2l963:
  9343                           
  9344                           ; BSR set to: 0
  9345  002882  0012               	return		;funcret
  9346  002884                     __end_ofi2___awdiv:
  9347                           	opt stack 0
  9348                           pclatu	equ	0xFFB
  9349                           pclath	equ	0xFFA
  9350                           tblptru	equ	0xFF8
  9351                           tblptrh	equ	0xFF7
  9352                           tblptrl	equ	0xFF6
  9353                           tablat	equ	0xFF5
  9354                           prodh	equ	0xFF4
  9355                           prodl	equ	0xFF3
  9356                           intcon	equ	0xFF2
  9357                           intcon2	equ	0xFF1
  9358                           intcon3	equ	0xFF0
  9359                           postinc0	equ	0xFEE
  9360                           fsr0h	equ	0xFEA
  9361                           fsr0l	equ	0xFE9
  9362                           wreg	equ	0xFE8
  9363                           postdec1	equ	0xFE5
  9364                           fsr1h	equ	0xFE2
  9365                           fsr1l	equ	0xFE1
  9366                           bsr	equ	0xFE0
  9367                           indf2	equ	0xFDF
  9368                           postinc2	equ	0xFDE
  9369                           postdec2	equ	0xFDD
  9370                           fsr2h	equ	0xFDA
  9371                           fsr2l	equ	0xFD9
  9372                           status	equ	0xFD8
  9373                           
  9374 ;; *************** function ___lwdiv *****************
  9375 ;; Defined at:
  9376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;  dividend        2   29[COMRAM] unsigned int 
  9379 ;;  divisor         2   31[COMRAM] unsigned int 
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;  quotient        2   33[COMRAM] unsigned int 
  9382 ;;  counter         1   35[COMRAM] unsigned char 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  2   29[COMRAM] unsigned int 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9392 ;;      Params:         4       0       0       0
  9393 ;;      Locals:         3       0       0       0
  9394 ;;      Temps:          0       0       0       0
  9395 ;;      Totals:         7       0       0       0
  9396 ;;Total ram usage:        7 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_ISR_Alta
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text21
  9406  0029B6                     __ptext21:
  9407                           	opt stack 0
  9408  0029B6                     ___lwdiv:
  9409                           	opt stack 24
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;incstack = 0
  9413  0029B6  0E00               	movlw	0
  9414  0029B8  6E23               	movwf	___lwdiv@quotient+1,c
  9415  0029BA  0E00               	movlw	0
  9416  0029BC  6E22               	movwf	___lwdiv@quotient,c
  9417  0029BE  5020               	movf	___lwdiv@divisor,w,c
  9418  0029C0  1021               	iorwf	___lwdiv@divisor+1,w,c
  9419  0029C2  B4D8               	btfsc	status,2,c
  9420  0029C4  D021               	goto	i2l1288
  9421  0029C6  0E01               	movlw	1
  9422  0029C8  6E24               	movwf	___lwdiv@counter,c
  9423  0029CA  D005               	goto	i2l3935
  9424  0029CC                     i2l3933:
  9425  0029CC  90D8               	bcf	status,0,c
  9426  0029CE  3620               	rlcf	___lwdiv@divisor,f,c
  9427  0029D0  3621               	rlcf	___lwdiv@divisor+1,f,c
  9428  0029D2  2A24               	incf	___lwdiv@counter,f,c
  9429  0029D4  D000               	goto	i2l3935
  9430  0029D6                     i2l3935:
  9431  0029D6  BE21               	btfsc	___lwdiv@divisor+1,7,c
  9432  0029D8  D002               	goto	i2l3937
  9433  0029DA  D7F8               	goto	i2l3933
  9434  0029DC  D000               	goto	i2l3937
  9435  0029DE                     i2l3937:
  9436  0029DE  90D8               	bcf	status,0,c
  9437  0029E0  3622               	rlcf	___lwdiv@quotient,f,c
  9438  0029E2  3623               	rlcf	___lwdiv@quotient+1,f,c
  9439  0029E4  5020               	movf	___lwdiv@divisor,w,c
  9440  0029E6  5C1E               	subwf	___lwdiv@dividend,w,c
  9441  0029E8  5021               	movf	___lwdiv@divisor+1,w,c
  9442  0029EA  581F               	subwfb	___lwdiv@dividend+1,w,c
  9443  0029EC  A0D8               	btfss	status,0,c
  9444  0029EE  D006               	goto	i2l3945
  9445  0029F0  5020               	movf	___lwdiv@divisor,w,c
  9446  0029F2  5E1E               	subwf	___lwdiv@dividend,f,c
  9447  0029F4  5021               	movf	___lwdiv@divisor+1,w,c
  9448  0029F6  5A1F               	subwfb	___lwdiv@dividend+1,f,c
  9449  0029F8  8022               	bsf	___lwdiv@quotient,0,c
  9450  0029FA  D000               	goto	i2l3945
  9451  0029FC                     i2l3945:
  9452  0029FC  90D8               	bcf	status,0,c
  9453  0029FE  3221               	rrcf	___lwdiv@divisor+1,f,c
  9454  002A00  3220               	rrcf	___lwdiv@divisor,f,c
  9455  002A02  2E24               	decfsz	___lwdiv@counter,f,c
  9456  002A04  D7EC               	goto	i2l3937
  9457  002A06  D000               	goto	i2l1288
  9458  002A08                     i2l1288:
  9459  002A08  C022  F01E         	movff	___lwdiv@quotient,?___lwdiv
  9460  002A0C  C023  F01F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9461  002A10  0012               	return		;funcret
  9462  002A12                     __end_of___lwdiv:
  9463                           	opt stack 0
  9464                           pclatu	equ	0xFFB
  9465                           pclath	equ	0xFFA
  9466                           tblptru	equ	0xFF8
  9467                           tblptrh	equ	0xFF7
  9468                           tblptrl	equ	0xFF6
  9469                           tablat	equ	0xFF5
  9470                           prodh	equ	0xFF4
  9471                           prodl	equ	0xFF3
  9472                           intcon	equ	0xFF2
  9473                           intcon2	equ	0xFF1
  9474                           intcon3	equ	0xFF0
  9475                           postinc0	equ	0xFEE
  9476                           fsr0h	equ	0xFEA
  9477                           fsr0l	equ	0xFE9
  9478                           wreg	equ	0xFE8
  9479                           postdec1	equ	0xFE5
  9480                           fsr1h	equ	0xFE2
  9481                           fsr1l	equ	0xFE1
  9482                           bsr	equ	0xFE0
  9483                           indf2	equ	0xFDF
  9484                           postinc2	equ	0xFDE
  9485                           postdec2	equ	0xFDD
  9486                           fsr2h	equ	0xFDA
  9487                           fsr2l	equ	0xFD9
  9488                           status	equ	0xFD8
  9489                           
  9490 ;; *************** function _WriteTimer0 *****************
  9491 ;; Defined at:
  9492 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  timer0          2   29[COMRAM] unsigned int 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  timer           2   31[COMRAM] struct Timers
  9497 ;; Return value:  Size  Location     Type
  9498 ;;		None               void
  9499 ;; Registers used:
  9500 ;;		None
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9506 ;;      Params:         2       0       0       0
  9507 ;;      Locals:         2       0       0       0
  9508 ;;      Temps:          0       0       0       0
  9509 ;;      Totals:         4       0       0       0
  9510 ;;Total ram usage:        4 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; This function calls:
  9513 ;;		Nothing
  9514 ;; This function is called by:
  9515 ;;		_ISR_Alta
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text22
  9520  002B0E                     __ptext22:
  9521                           	opt stack 0
  9522  002B0E                     _WriteTimer0:
  9523                           	opt stack 24
  9524                           
  9525                           ;incstack = 0
  9526  002B0E  C01E  F020         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9527  002B12  C01F  F021         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9528  002B16  C021  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9529  002B1A  C020  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9530  002B1E  0012               	return		;funcret
  9531  002B20                     __end_of_WriteTimer0:
  9532                           	opt stack 0
  9533  0000                     pclatu	equ	0xFFB
  9534                           pclath	equ	0xFFA
  9535                           tblptru	equ	0xFF8
  9536                           tblptrh	equ	0xFF7
  9537                           tblptrl	equ	0xFF6
  9538                           tablat	equ	0xFF5
  9539                           prodh	equ	0xFF4
  9540                           prodl	equ	0xFF3
  9541                           intcon	equ	0xFF2
  9542                           intcon2	equ	0xFF1
  9543                           intcon3	equ	0xFF0
  9544                           postinc0	equ	0xFEE
  9545                           fsr0h	equ	0xFEA
  9546                           fsr0l	equ	0xFE9
  9547                           wreg	equ	0xFE8
  9548                           postdec1	equ	0xFE5
  9549                           fsr1h	equ	0xFE2
  9550                           fsr1l	equ	0xFE1
  9551                           bsr	equ	0xFE0
  9552                           indf2	equ	0xFDF
  9553                           postinc2	equ	0xFDE
  9554                           postdec2	equ	0xFDD
  9555                           fsr2h	equ	0xFDA
  9556                           fsr2l	equ	0xFD9
  9557                           status	equ	0xFD8
  9558                           pclatu	equ	0xFFB
  9559                           pclath	equ	0xFFA
  9560                           tblptru	equ	0xFF8
  9561                           tblptrh	equ	0xFF7
  9562                           tblptrl	equ	0xFF6
  9563                           tablat	equ	0xFF5
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           intcon	equ	0xFF2
  9567                           intcon2	equ	0xFF1
  9568                           intcon3	equ	0xFF0
  9569                           postinc0	equ	0xFEE
  9570                           fsr0h	equ	0xFEA
  9571                           fsr0l	equ	0xFE9
  9572                           wreg	equ	0xFE8
  9573                           postdec1	equ	0xFE5
  9574                           fsr1h	equ	0xFE2
  9575                           fsr1l	equ	0xFE1
  9576                           bsr	equ	0xFE0
  9577                           indf2	equ	0xFDF
  9578                           postinc2	equ	0xFDE
  9579                           postdec2	equ	0xFDD
  9580                           fsr2h	equ	0xFDA
  9581                           fsr2l	equ	0xFD9
  9582                           status	equ	0xFD8
  9583                           
  9584                           	psect	rparam
  9585  0000                     pclatu	equ	0xFFB
  9586                           pclath	equ	0xFFA
  9587                           tblptru	equ	0xFF8
  9588                           tblptrh	equ	0xFF7
  9589                           tblptrl	equ	0xFF6
  9590                           tablat	equ	0xFF5
  9591                           prodh	equ	0xFF4
  9592                           prodl	equ	0xFF3
  9593                           intcon	equ	0xFF2
  9594                           intcon2	equ	0xFF1
  9595                           intcon3	equ	0xFF0
  9596                           postinc0	equ	0xFEE
  9597                           fsr0h	equ	0xFEA
  9598                           fsr0l	equ	0xFE9
  9599                           wreg	equ	0xFE8
  9600                           postdec1	equ	0xFE5
  9601                           fsr1h	equ	0xFE2
  9602                           fsr1l	equ	0xFE1
  9603                           bsr	equ	0xFE0
  9604                           indf2	equ	0xFDF
  9605                           postinc2	equ	0xFDE
  9606                           postdec2	equ	0xFDD
  9607                           fsr2h	equ	0xFDA
  9608                           fsr2l	equ	0xFD9
  9609                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      66
    BANK0           160     47     130
    BANK1           256     18      18
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), remote_frame_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    _ISR_Alta->___lwdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _board_initialization->_CANInitialize

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15997
                                             14 BANK1      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                            ___aldiv
                            ___awdiv
                             ___lmul
                             ___wmul
               _board_initialization
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 0     0      0    3936
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     749
                                             30 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3163
                                             30 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    6186
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6186
                                             44 BANK0      3     3      0
                                              0 BANK1      9     4      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             30 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             30 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             30 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     450
                                             30 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     760
                                             30 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                              0 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1338
                                              8 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     209
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                              0 BANK0      8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     418
                                             29 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     196
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   ___wmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     12      12       6        7.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2F      82       4       81.3%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     24      42       1       69.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6       9        0.0%
DATA                 0      0      D6      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jun 07 19:21:50 2016

           ??_CANisTXwarningON 00C8                              _x 0211                              _y 0212  
         __end_of_CANSetFilter 0C7A                   ___awdiv@sign 00CD                             bsr 000FE0  
          ___wmul@multiplicand 00CA                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 0FA6  
                          l401 0FB0                            l402 0FBA                            l411 11A4  
                          l403 0FC4                            l500 07AA                            l420 1362  
                          l412 11A8                            l421 1366                            l413 12A2  
                          l510 08BE                            l422 1372                            l414 1230  
                          l406 10D8                            l511 08CA                            l503 088A  
                          l415 123A                            l407 10DC                            l520 09DA  
                          l504 088E                            l416 1244                            l408 10E8  
                          l521 09DE                            l505 089A                            l417 124E  
                          l530 0AEE                            l522 09EA                            l514 09AA  
                          l506 089E                            l450 1B46                            l531 0AFA  
                          l515 09AE                            l507 08AA                            l451 1B4A  
                          l540 0C0A                            l532 0AFE                            l516 09BA  
                          l508 08AE                            l452 1B56                            l541 0C0E  
                          l533 0B0A                            l525 0ACA                            l517 09BE  
                          l509 08BA                            l461 1C62                            l453 1B5A  
                          l381 0F04                            l542 0C1A                            l526 0ACE  
                          l518 09CA                            l462 1C66                            l454 1B66  
                          l382 0C90                            l543 0C1E                            l527 0ADA  
                          l519 09CE                            l463 1C72                            l471 1CF0  
                          l455 1B6A                            l391 0E4E                            l383 0C94  
                          l711 1D12                            l544 0C2A                            l536 0BEA  
                          l528 0ADE                            l464 1C76                            l456 1B76  
                          l376 2328                            l392 0E52                            l384 0D8E  
                          l712 1D1A                            l561 2B2C                            l537 0BEE  
                          l529 0AEA                            l481 064C                            l465 1C82  
                          l457 1B7A                            l377 2332                            l393 0E5E  
                          l385 0D1C                            l538 0BFA                            l546 0C78  
                          l482 0650                            l466 1C86                            l458 1B86  
                          l386 0D26                            l539 0BFE                            l483 065C  
                          l467 1C92                            l395 1418                            l387 0D30  
                          l564 2B3A                            l492 076A                            l484 0660  
                          l468 1C96                            l396 118E                            l388 0D3A  
                          l493 076E                            l485 066C                            l469 1CA2  
                          l397 0F1A                            l741 25B2                            l733 1F3C  
                          l717 1DD8                            l494 077A                            l486 0670  
                          l574 2AD6                            l398 0F1E                            l718 1E2A  
                          l495 077E                            l487 067C                            l575 2ADC  
                          l399 1018                            l751 25B6                            l496 078A  
                          l488 0680                            l728 1EB6                            l497 078E  
                          l489 068C                            l498 079A                            l770 2A8E  
                          l499 079E                            l839 26E2                            l963 27B2  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 0031                            wreg 000FE8                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l3113 08D0                           l3017 05BA  
                         l3051 06DA                           l3045 0692                           l3215 0C30  
                         l3119 0918                           l3153 0A38                           l3401 10CC  
                         l3305 0D46                           l3147 09F0                           l3331 0E64  
                         l3181 0B10                           l3085 07F8                           l3325 0E42  
                         l3079 07B0                           l3407 10EE                           l4411 263E  
                         l4403 25FE                           l2811 2AE8                           l3187 0B58  
                         l4421 269E                           l4413 2648                           l3381 0FD0  
                         l2903 1CA8                           l4271 2336                           l4263 22CA  
                         l4409 262C                           l4425 26B2                           l4257 22BA  
                         l3457 125A                           l4275 233E                           l3483 1378  
                         l3803 24CE                           l4429 26D0                           l2845 1ABA  
                         l2829 1A02                           l4277 2382                           l4269 2320  
                         l3477 1356                           l3903 2738                           l3831 2950  
                         l2927 0210                           l2871 1B8C                           l4623 1F56  
                         l4607 1ED0                           l4615 1F34                           l3905 2746  
                         l2945 02CA                           l3825 25A2                           l3809 250C  
                         l4625 1FAE                           l4609 1F28                           l4553 1CFE  
                         l3923 27A8                           l3915 2782                           l3907 2750  
                         l3835 2978                           l2963 0386                           l4571 1DE0  
                         l4397 25DE                           l2981 0442                           l2877 1BD4  
                         l4581 1E08                           l4565 1DD0                           l3919 2792  
                         l4585 1E1A                           l4577 1DF8                           l3891 2702  
                         l4595 1E6A                           l4589 1E30                           l2999 04FE  
                         l3799 248A                           l4599 1EAE                           l3897 271A  
                         _LATA 000F89                           _LATB 000F8A                           _LATC 000F8B  
                         _LATD 000F8C                           _LATE 000F8D                           u3210 0A10  
                         u3130 08F0                           u3050 07D0                           u3215 0A04  
                         u3135 08E4                           u3055 07C4                           u2440 197C  
                         u3500 0D66                           u2445 1970                           u3510 0DB2  
                         u2455 19DC                           u4080 2B28                           u2800 03BC  
                         u2720 0244                           u2480 1A34                           u3505 0D5A  
                         u4090 2B36                           u3370 0C50                           u3290 0B30  
                         u2650 1CC8                           u2570 1BAC                           u3515 0DA6  
                         u2805 03B0                           u2725 0238                           u2485 1A28  
                         u3525 0E12                           u3630 0FF0                           u3375 0C44  
                         u3295 0B24                           u2815 041C                           u2735 02A4  
                         u2655 1CBC                           u2575 1BA0                           u2495 1A94  
                         u2840 0478                           u2760 0300                           u2680 018A  
                         u3640 103C                           u3635 0FE4                           u2845 046C  
                         u2765 02F4                           u2685 017E                           u3645 1030  
                         u2855 04D8                           u2775 0360                           u2695 01EA  
                         u3655 109C                           u2880 0534                           u3760 127A  
                         u2970 06B2                           u3770 12C6                           u2885 0528  
                         u3765 126E                           u2975 06A6                           u2895 0594  
                         u3775 12BA                           u3785 1326            __size_of_CANSetMask 03AA  
                         _main 1CF2                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9                           _step 0090  
                         pclat 000FFA                           prodh 000FF4                           prodl 000FF3  
                         start 014C                  __CFG_IESO$OFF 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010               _CANOperationMode 2ADE                   _status_array 00A1  
              _brake_value_inc 008E           _remote_frame_handler 2432     __size_of_CANreceiveMessage 052E  
              __end_of___aldiv 26E4                          ?_main 0001                __end_of___awdiv 27B4  
                        _T0CON 000FD5                ___awdiv@divisor 00CA                          _T1CON 000FCD  
                        _T3CON 000FB1             __size_of_ISR_Bassa 0134                __end_of___lwdiv 2A12  
                        i1l436 1946                          i1l428 16C6                          i1l705 0106  
                        i1l580 2B0C                          i1l579 2B08                          i2l770 2AB6  
                        i2l693 222A                          i2l963 2882                ___awdiv@counter 00CC  
                        _TMR0H 000FD7                          _TMR1H 000FCF                          _TMR0L 000FD6  
                        _TMR3H 000FB3                          _TMR1L 000FCE                          _TMR3L 000FB2  
            _CANisRxReady$3280 0001                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISD 000F95                          _TRISE 000F96  
                __CFG_PWRT$OFF 000000               __end_of_ISR_Alta 2264                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000            ___lmul@multiplicand 00CC                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000             CANInitialize@flags 0104  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                 __pbitbssCOMRAM 0208           __end_of_CANisRxReady 2B0E  
                        tablat 000FF5         _distance_set_counter_1 0086         _distance_set_counter_2 0088  
         __end_of_CANisTxReady 2ADE               __end_ofi2___wmul 2AB8                          status 000FD8  
           __size_ofi2___awdiv 00D0                 __CFG_PBADEN$ON 000000                __initialization 2A12  
                 __end_of_main 1FBE  __size_of_board_initialization 00B8               _brake_signal_CAN 008D  
        ?_remote_frame_handler 0001                         ??_main 010E                  __activetblptr 000002  
            _CANisTxReady$3278 00C8                         _ADCON1 000FC1                         _CANCON 000F6F  
                       _ADRESH 000FC4               ___awdiv@dividend 00C8                __CFG_BBSIZ$1024 000000  
                       i1l4111 00E2                         i1l4107 00DC                         i1l4119 00F4  
                       i1l3531 142E                         i1l4093 0094                         i1l4085 0064  
                       i1l3527 1426                         i1l4097 00AC                         i1l3651 190E  
                       i1l3643 18D2                         i1l3635 1896                         i1l3627 1826  
                       i1l3653 1942                         i1l3581 164C                         i1l3573 160C  
                       i1l3565 159A                         i1l3647 18F0                         i1l3639 18B4  
                       i1l3591 16C0                         i1l3585 166C                         i1l3577 162C  
                       i1l3589 168C                         i2l1288 2A08                         i2l4501 2152  
                       i2l4441 27D2                         i2l4521 21B4                         i2l4515 21A4  
                       i2l4453 2808                         i2l4455 2816                         i2l4447 27EA  
                       i2l4543 221A                         i2l4519 21B0                         i2l4473 2878  
                       i2l4465 2852                         i2l4457 2820                         i2l4529 21C8  
                       i2l4547 2226                         i2l4491 213A                         i2l3933 29CC  
                       i2l4469 2862                         i2l4493 213E                         i2l3935 29D6  
                       i2l3945 29FC                         i2l3937 29DE                         i2l4489 212C  
                       _RXB0D0 000F66                         _RXB0D1 000F67                         _RXB0D2 000F68  
                       _RXB0D3 000F69                         _RXB0D4 000F6A                         _RXB1D0 000F56  
                       _RXB0D5 000F6B                         _RXB1D1 000F57                         _RXB0D6 000F6C  
                       _RXB1D2 000F58                         _RXB0D7 000F6D                         _RXB1D3 000F59  
                       _RXB1D4 000F5A                         _RXB1D5 000F5B                         _RXB1D6 000F5C  
                       _RXB1D7 000F5D                         _TXB0D0 000F46                         _TXB0D1 000F47  
                       _TXB0D2 000F48                         _TXB0D3 000F49                         _TXB1D0 000F36  
                       _TXB0D4 000F4A                         _TXB1D1 000F37                         _TXB0D5 000F4B  
                       _TXB1D2 000F38                         _TXB0D6 000F4C                         _TXB1D3 000F39  
                       _TXB0D7 000F4D                         _TXB2D0 000F26                         _TXB1D4 000F3A  
                       _TXB2D1 000F27                         _TXB1D5 000F3B                         _TXB2D2 000F28  
                       _TXB1D6 000F3C                         _TXB2D3 000F29                         _TXB1D7 000F3D  
                       _TXB2D4 000F2A                         _TXB2D5 000F2B                         _TXB2D6 000F2C  
                       _TXB2D7 000F2D             CANsendMessage@data 00CC             CANsendMessage@tamp 00D4  
            __end_of_ISR_Bassa 014C          __size_of_CANSetFilter 0B2A             _distance_set_value 008A  
               __CFG_XINST$OFF 000000                         ___lmul 293C                      ??___aldiv 00D4  
                       ___wmul 2A58                      ??___awdiv 00CC                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 0022                   ??_CANSetMask 00CD                         clear_0 2A18  
                       clear_1 2A28               ___awdiv@quotient 00CE                 i2___awdiv@sign 00AF  
              __CFG_BOREN$BOHW 000000              __end_ofi2___awdiv 2884                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                  _home_position 008F  
                 _CANSetFilter 0150                     __accesstop 0060        __end_of__initialization 2A4E  
           __end_of_CANSetMask 1CF2                  ___rparam_used 000001      __size_of_CANisRXwarningON 000E  
               __pcstackCOMRAM 0001                      ?_ISR_Alta 0001                   __pidataBANK0 2B3C  
       ??_remote_frame_handler 00D8                   _ENC1_measure 0208          CANSetFilter@numBuffer 00D1  
                    ?i2___wmul 001E      __size_of_CANisTXwarningON 000E                   _ENC2_measure 0209  
        __size_of_CANisRxReady 0018          __size_of_CANisTxReady 0026       __end_of_CANOperationMode 2AF6  
                   __pbssBANK0 0060        __size_of_CANsendMessage 07A0                     ??_ISR_Alta 00B2  
                      ?___lmul 00C8                        ?___wmul 00C8                     _gap_time_1 002D  
                   _gap_time_2 002F               WriteTimer0@timer 0020                  ??_WriteTimer0 0020  
               ___lmul@product 00D0                   _CANisRxReady 2AF6                        _CANSTAT 000F6E  
                 _CANisTxReady 2AB8                        _BRGCON1 000F70                        _BRGCON2 000F71  
                      _BRGCON3 000F72                     ??i2___wmul 0022                  _int_counter_1 006C  
                _int_counter_2 0070         __size_of_CANInitialize 01CE          _distance_reached_flag 020E  
                      _RXB0DLC 000F65                        _RXB1DLC 000F55                        _RXB0CON 000F60  
                      _RXB1CON 000F50                        _TXB0DLC 000F45                        _TXB1DLC 000F35  
                      _TXB2DLC 000F25                     _distance_1 0082                     _distance_2 0084  
          CANsendMessage@flags 00CF                     _count_flag 020D                        __Hparam 0000  
                      __Lparam 0000                        ___aldiv 25B8                        ___awdiv 26E4  
              __size_of___lmul 007A                __size_of___wmul 0038                        ___lwdiv 29B6  
         CANInitialize@propSeg 00D6                        __pcinit 2A12                        __ramtop 0300  
                      __ptext0 1CF2                        __ptext1 2432                        __ptext2 2A58  
                      __ptext3 0C7A                        __ptext4 2AB8                        __ptext5 2884  
                      __ptext6 2264                        __ptext7 1948                        __ptext8 0150  
                      __ptext9 2ADE                      _T0CONbits 000FD5                      _T1CONbits 000FCD  
                    _T3CONbits 000FB1               ___aldiv@dividend 0100            __end_of_WriteTimer0 2B20  
       CANreceiveMessage@error 000B   __end_of_board_initialization 293C                 __pintcode_body 1FBE  
         end_of_initialization 2A4E                  _Analogic_Mode 008C                  __Lmediumconst 0000  
                      int_func 1FBE            i2___wmul@multiplier 001E               _CANisRXwarningON 2B2E  
                _CANInitialize 2264               ___aldiv@quotient 010A                      _ISR_Bassa 0018  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTAbits 000F80                 CANSetMask@mask 00C8  
                    _PORTCbits 000F82                 CANSetMask@tamp 00D2                 CANSetMask@type 00CC  
             _CANisTXwarningON 2B20                      i2___awdiv 27B4        _clock_counter_reference 0080  
               _CANsendMessage 0C7A             _remote_frame_array 00DA               CANInitialize@BRP 0103  
             CANInitialize@SJW 0102                 ?_CANInitialize 0100             i2___awdiv@dividend 00AA  
                   ?_ISR_Bassa 0001                 __end_of___lmul 29B6              __size_of_ISR_Alta 225C  
               __end_of___wmul 2A90                    _WriteTimer0 2B0E               i2___wmul@product 0022  
          start_initialization 2A12             i2___awdiv@quotient 00B0              __size_ofi2___wmul 0028  
          CANSetMask@numBuffer 00D1                     ?i2___awdiv 00AA         __end_of_CANsendMessage 141A  
            ?_CANOperationMode 0001             ??_CANOperationMode 00C8     CANInitialize@FilterConfig1 00D7  
   CANInitialize@FilterConfig2 00D8              _distance_set_flag 020F                       ??___lmul 00D0  
         _board_initialization 2884                       ??___wmul 00CC                    __pdataBANK0 00D9  
             __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 0186             _brake_value_degree 0040  
       CANInitialize@phaseSeg1 0100         CANInitialize@phaseSeg2 0101                    __pbssCOMRAM 0025  
                __pcstackBANK0 00AA                  __pcstackBANK1 0100                    _data_debug1 0060  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72                ?_CANsendMessage 00C8  
              ??_CANInitialize 0105             CANSetFilter@filter 00C8               ___lwdiv@dividend 001E  
        ?_board_initialization 0001                    ??_ISR_Bassa 000D                      __pintcode 0008  
                     ?___aldiv 0100                       ?___awdiv 00C8                       ?___lwdiv 001E  
                  __pintcodelo 0018              WriteTimer0@timer0 001E       __end_of_CANisRXwarningON 2B3C  
                  _brake_value 00A9                    _COMSTATbits 000F74               ___lwdiv@quotient 0022  
                  ??i2___awdiv 0024                ___aldiv@divisor 0104          CANreceiveMessage@tamp 000C  
              ___aldiv@counter 0108                 ___wmul@product 00CC                       _IPR1bits 000F9F  
                     _IPR2bits 000FA2   _delay_quartz_frequency_value 00D9                       _PIE1bits 000F9D  
                     _IPR3bits 000FA5                       _PIE2bits 000FA0                       _PIE3bits 000FA3  
     __end_of_CANisTXwarningON 2B2E                       i1u401_25 17AC                       i1u407_25 191A  
                     i1u390_25 151E                       i1u387_20 14DA                       i1u387_26 14DC  
                     i1u388_20 1508                       i1u396_25 1698                       i1u388_26 150A  
                     i1u398_20 176E                       i1u398_26 1770                       i1u399_20 1798  
                     i1u399_26 179A                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _PIR3bits 000FA4                       _RXB0EIDH 000F63                       _RXB0EIDL 000F64  
                     _RXB1EIDH 000F53                       _RXB1EIDL 000F54                       _ISR_Alta 0008  
                     _RCONbits 000FD0               __CFG_WDTPS$32768 000000                       _RXB0SIDH 000F61  
                     _RXB0SIDL 000F62                       _RXF0EIDH 000F02                       _RXB1SIDH 000F51  
                     _RXF0EIDL 000F03                       _RXB1SIDL 000F52                       _RXF1EIDH 000F06  
                     _RXF1EIDL 000F07                       _RXF2EIDH 000F0A                       _RXF2EIDL 000F0B  
                     _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F                       _RXF4EIDH 000F12  
                     _RXF4EIDL 000F13                       _RXF5EIDH 000F16                       _RXF5EIDL 000F17  
                     _RXF0SIDH 000F00                       _RXF0SIDL 000F01                       _TXB0EIDH 000F43  
                     _RXF1SIDH 000F04                       _TXB0EIDL 000F44                       _RXF1SIDL 000F05  
                     _TXB1EIDH 000F33                       _RXF2SIDH 000F08                       _TXB1EIDL 000F34  
                     _RXF2SIDL 000F09                       _TXB2EIDH 000F23                       _RXF3SIDH 000F0C  
                     _TXB2EIDL 000F24                       _RXF3SIDL 000F0D                       _RXF4SIDH 000F10  
                     _RXF4SIDL 000F11                       _RXF5SIDH 000F14                       _RXF5SIDL 000F15  
                     _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B                       _TXB0SIDH 000F41  
                     _RXM1EIDH 000F1E                       _TXB0SIDL 000F42                       _RXM1EIDL 000F1F  
                     _TXB1SIDH 000F31                       _TXB1SIDL 000F32                       _TXB2SIDH 000F21  
                     _TXB2SIDL 000F22                      _timer_off 0025                       _RXM0SIDH 000F18  
                     _RXM0SIDL 000F19                       _RXM1SIDH 000F1C                       _RXM1SIDL 000F1D  
                     _RXERRCNT 000F75                       _TXERRCNT 000F76                     _ADCON0bits 000FC2  
                   _ADCON2bits 000FC0              ___wmul@multiplier 00C8                       i2___wmul 2A90  
            i2___awdiv@divisor 00AC              i2___awdiv@counter 00AE                  ?_CANSetFilter 00C8  
            ___lmul@multiplier 00C8                    _INTCON2bits 000FF1                    _INTCON3bits 000FF0  
                    copy_data0 2A42                     _CANCONbits 000F6F                       __Hrparam 0000  
                 _RXB0SIDLbits 000F62         ??_board_initialization 00D9                       __Lrparam 0000  
                 _RXB1SIDLbits 000F52               __size_of___aldiv 012C                     _CANSetMask 1948  
             __size_of___awdiv 00D0          i2___wmul@multiplicand 0020               __size_of___lwdiv 005C  
              _remote_frame_id 0074                       _Tx_retry 020C                   ?_WriteTimer0 001E  
                 _RXF0SIDLbits 000F01                ___lwdiv@divisor 0020                   _RXF1SIDLbits 000F05  
                _TMR1_overflow 020A                ___lwdiv@counter 0024                 ??_CANSetFilter 00CD  
                     __ptext10 293C                       __ptext11 26E4                       __ptext20 27B4  
                     __ptext12 25B8                       __ptext21 29B6                       __ptext13 2B20  
                     __ptext22 2B0E                       __ptext14 2B2E                       __ptext16 141A  
                     __ptext17 2AF6                       __ptext19 2A90                   _RXF2SIDLbits 000F09  
                 _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11                   _RXF5SIDLbits 000F15  
     CANsendMessage@dataLength 00CE                   _remote_frame 0210                  _TMR3_overflow 020B  
                __size_of_main 02CC           CANreceiveMessage@msg 0001                   _TXB0SIDLbits 000F42  
                 _TXB1SIDLbits 000F32                       _timer_on 0029                   _TXB2SIDLbits 000F22  
    __size_of_CANOperationMode 0018                  ?_CANisRxReady 0001                  ?_CANisTxReady 0001  
                  _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55                   _RXM0SIDLbits 000F19  
                  _RXB0CONbits 000F60                    _RXB1CONbits 000F50              _CANreceiveMessage 141A  
                 _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2               ??_CANsendMessage 00D0  
                _wheel_speed_1 0078                  _wheel_speed_2 007C             ?_CANreceiveMessage 0001  
     CANsendMessage@identifier 00C8   __end_of_remote_frame_handler 25B8                       intlevel1 0000  
                     intlevel2 0000               CANSetFilter@tamp 00D2               CANSetFilter@type 00CC  
          ??_CANreceiveMessage 0003                    _TXB0DLCbits 000F45                    _TXB1DLCbits 000F35  
                  _TXB0CONbits 000F40                    _TXB2DLCbits 000F25                    _TXB1CONbits 000F30  
                  _TXB2CONbits 000F20           CANOperationMode@mode 00C8                 ??_CANisRxReady 0001  
                  ?_CANSetMask 00C8                 ??_CANisTxReady 00C8                 _distance_array 0091  
    __end_of_CANreceiveMessage 1948              ?_CANisRXwarningON 0001                    _speed_array 0099  
                 ___aldiv@sign 0109             ??_CANisRXwarningON 00C8          _distance_actual_value 0068  
        __end_of_CANInitialize 2432              ?_CANisTXwarningON 0001  
